{"version":3,"sources":["webpack://gatsby-test/./src/pages/components/DND.js","webpack://gatsby-test/./src/pages/index.js"],"names":["urls","React","unclassifed","id","address","positive","negative","items","setItems","console","log","onChange","sourceId","sourceIndex","targetIndex","targetId","result","move","swap","className","boxesPerRow","rowHeight","map","item","key","style","backgroundImage"],"mappings":"0MAiOA,UA3MA,WASG,IAAIA,EAAO,CACV,gDACA,iDACA,iDACA,iDACA,iDACA,iDACA,iDACA,iDACA,iDACA,iDACA,iDACA,gDACA,iDACA,gDACA,gDACA,gDACA,gDACA,gDACA,gDACA,iDA7BW,EAkEeC,WAhCb,CAAEC,YAAa,CAChB,CAAEC,GAAI,EAAIC,QAASJ,EAAK,IACxB,CAAEG,GAAI,EAAGC,QAASJ,EAAK,IACvB,CAAEG,GAAI,EAAIC,QAAQJ,EAAK,IACvB,CAAEG,GAAI,EAAGC,QAASJ,EAAK,IACvB,CAAEG,GAAI,EAAIC,QAASJ,EAAK,IACxB,CAAEG,GAAI,EAAIC,QAASJ,EAAK,IACxB,CAAEG,GAAI,EAAIC,QAASJ,EAAK,IACxB,CAAEG,GAAI,EAAGC,QAASJ,EAAK,IACvB,CAAEG,GAAI,EAAIC,QAASJ,EAAK,IACxB,CAAEG,GAAI,GAAIC,QAAQJ,EAAK,IACvB,CAAEG,GAAI,GAAIC,QAAQJ,EAAK,KACvB,CAAEG,GAAI,GAAIC,QAAQJ,EAAK,KACvB,CAAEG,GAAI,GAAKC,QAAQJ,EAAK,KACxB,CAAEG,GAAI,GAAIC,QAAQJ,EAAK,KACvB,CAAEG,GAAI,GAAIC,QAAQJ,EAAK,KACvB,CAAEG,GAAI,GAAIC,QAAQJ,EAAK,KACvB,CAAEG,GAAI,GAAIC,QAAQJ,EAAK,KACvB,CAAEG,GAAI,GAAIC,QAAQJ,EAAK,KACvB,CAAEG,GAAI,GAAIC,QAAQJ,EAAK,KACvB,CAAEG,GAAI,GAAIC,QAAQJ,EAAK,MAE3BK,SAAU,GAGVC,SAAU,KAOXC,EAlEI,KAkEGC,EAlEH,KAiIX,OAFAC,QAAQC,IADI,GAOZ,gBAAC,IAAD,CAAqBC,SA7BnB,SAAkBC,EAAUC,EAAaC,EAAaC,GAAW,IAAD,EAC9D,GAAIA,EAAU,CAAC,IAAD,EACNC,GAASC,OACbV,EAAMK,GACNL,EAAMQ,GACNF,EACAC,GAEF,OAAON,EAAS,OAAD,UACVD,IADU,MAEZK,GAAWI,EAAO,GAFN,EAGZD,GAAWC,EAAO,GAHN,KAOjB,IAAMA,GAASE,OAAKX,EAAMK,GAAWC,EAAaC,GAClD,OAAON,EAAS,OAAD,UACVD,IADU,MAEZK,GAAWI,EAFC,OAcjB,uCACE,2BAEA,uBAAKG,UAAU,gBAEf,gBAAC,IAAD,CACKA,UAAU,YACXhB,GAAG,cACHiB,YAAa,EACbC,UAAW,IAEVd,EAAML,YAAYoB,KAAI,SAAAC,GAAI,OACzB,gBAAC,IAAD,CAAUC,IAAKD,EAAKpB,IAClB,uBAAKgB,UAAU,aACX,uBAAKA,UAAU,oBAAoBM,MAAS,CAACC,gBAAgB,OAASH,EAAKnB,QAAf,cAStE,uBAAKe,UAAU,aACf,gBAAC,IAAD,CACEA,UAAU,oBACVhB,GAAG,WACHiB,YAAa,EACbC,UAAW,IAEVd,EAAMF,SAASiB,KAAI,SAAAC,GAAI,OACtB,gBAAC,IAAD,CAAUC,IAAKD,EAAKpB,IAClB,uBAAKgB,UAAU,aACX,uBAAKA,UAAU,oBAAoBM,MAAS,CAACC,gBAAgB,OAAQH,EAAKnB,QAAd,aAQtE,gBAAC,IAAD,CACEe,UAAU,oBACVhB,GAAG,WACHiB,YAAa,EACbC,UAAW,IAEVd,EAAMD,SAASgB,KAAI,SAAAC,GAAI,OACtB,gBAAC,IAAD,CAAUC,IAAKD,EAAKpB,IAClB,uBAAKgB,UAAU,aACf,uBAAKA,UAAU,oBAAoBM,MAAS,CAACC,gBAAgB,OAAQH,EAAKnB,QAAd,kB,iECrM5E,UANkB,WAChB,OACE,gBAAC,UAAD","file":"component---src-pages-index-js-1bf3e7b008a1b7496427.js","sourcesContent":["import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button'\nimport ReactDOM from \"react-dom\";\nimport {\n  GridContextProvider,\n  GridDropZone,\n  GridItem,\n  swap,\n  move\n} from \"react-grid-dnd\";\n\nimport \"./dndstyles.css\";\nimport { unregisterKernel } from '@tensorflow/tfjs';\n\n\n\n\n\n\n\n\nfunction App() {\n\n    //function getURL(){\n        // for (i = 0; i < urls.length; i++)  \n         // urlRandom = urls[Math.floor(Math.random()*urls.length)]\n        \n            \n   // }\n\n   var urls = [\n    \"https://i.postimg.cc/SNBRqKqX/cell-image1.jpg\",\n    \"https://i.postimg.cc/3JvrLHp3/cell-image10.jpg\",\n    \"https://i.postimg.cc/XY6jmDcd/cell-image11.jpg\",\n    \"https://i.postimg.cc/XYKjbcQh/cell-image12.jpg\",\n    \"https://i.postimg.cc/25zz8bt5/cell-image13.jpg\",\n    \"https://i.postimg.cc/cJXdK1qB/cell-image14.jpg\",\n    \"https://i.postimg.cc/hjvcVFcW/cell-image15.jpg\",\n    \"https://i.postimg.cc/SsPqrZxX/cell-image16.jpg\",\n    \"https://i.postimg.cc/cC8W5QvF/cell-image17.jpg\",\n    \"https://i.postimg.cc/bdcPXsbp/cell-image18.jpg\",\n    \"https://i.postimg.cc/1RgNZ26j/cell-image19.jpg\",\n    \"https://i.postimg.cc/nhqzLtc3/cell-image2.jpg\",\n    \"https://i.postimg.cc/xjWNj53T/cell-image20.jpg\",\n    \"https://i.postimg.cc/yNBNgrDs/cell-image3.jpg\",\n    \"https://i.postimg.cc/7LVZgMz7/cell-image4.jpg\",\n    \"https://i.postimg.cc/vBZHXg7K/cell-image5.jpg\",\n    \"https://i.postimg.cc/3Nyr5scC/cell-image6.jpg\",\n    \"https://i.postimg.cc/Zn1bTfkk/cell-image7.jpg\",\n    \"https://i.postimg.cc/0QX54kcy/cell-image8.jpg\",\n    \"https://i.postimg.cc/tRfCtgsr/cell-image9.jpg\"\n\n   ];\n\n    function test() {\n          return { unclassifed: [\n                { id: 1 , address: urls[0]},\n                { id: 2, address: urls[1]},\n                { id: 3 , address:urls[2]},\n                { id: 4, address: urls[3] },\n                { id: 5 , address: urls[4]},\n                { id: 6 , address: urls[5]}, \n                { id: 7 , address: urls[6]}, \n                { id: 8, address: urls[7] }, \n                { id: 9 , address: urls[8]}, \n                { id: 10, address:urls[9] }, \n                { id: 11, address:urls[10] }, \n                { id: 12, address:urls[11] }, \n                { id: 13 , address:urls[12]}, \n                { id: 14, address:urls[13] }, \n                { id: 15, address:urls[14]}, \n                { id: 16, address:urls[15] }, \n                { id: 17, address:urls[16] }, \n                { id: 18, address:urls[17] }, \n                { id: 19, address:urls[18] }, \n                { id: 20, address:urls[19]}, \n              ],\n            positive: [\n             \n            ],\n            negative: [\n            \n            ]};\n    }\n  \n\n   \n    const [items, setItems] = React.useState(\n        //{ \n        // unclassifed: [\n        //     { id: 1 , address: urls[0]},\n        //     { id: 2, address: urls[1]},\n        //     { id: 3 , address:urls[2]},\n        //     { id: 4, address: urls[3] },\n        //     { id: 5 , address: urls[4]},\n        //     { id: 6 , address: urls[5]}, \n        //     { id: 7 , address: urls[6]}, \n        //     { id: 8, address: urls[7] }, \n        //     { id: 9 , address: urls[8]}, \n        //     { id: 10, address:urls[9] }, \n        //     { id: 11, address:urls[10] }, \n        //     { id: 12, address:urls[11] }, \n        //     { id: 13 , address:urls[12]}, \n        //     { id: 14, address:urls[13] }, \n        //     { id: 15, address:urls[14]}, \n        //     { id: 16, address:urls[15] }, \n        //     { id: 17, address:urls[16] }, \n        //     { id: 18, address:urls[17] }, \n        //     { id: 19, address:urls[18] }, \n        //     { id: 20, address:urls[19]}, \n        //   ],\n        // positive: [\n         \n        // ],\n        // negative: [\n        \n        // ]\n\n        test()\n\n      //}\n      );\n\n    \n     \n      function onChange(sourceId, sourceIndex, targetIndex, targetId) {\n        if (targetId) {\n          const result = move(\n            items[sourceId],\n            items[targetId],\n            sourceIndex,\n            targetIndex\n          );\n          return setItems({\n            ...items,\n            [sourceId]: result[0],\n            [targetId]: result[1]\n          });\n        }\n    \n        const result = swap(items[sourceId], sourceIndex, targetIndex);\n        return setItems({\n          ...items,\n          [sourceId]: result\n        });\n      }\n \n    var value = 1;\n    console.log(value)\n\n    return( \n   \n  \n    \n    <GridContextProvider onChange={onChange}>\n      <button>PRESS</button>\n        <div>\n      \n        <div className=\"topContainer\">\n       \n        <GridDropZone\n             className=\"dropzone \"\n            id=\"unclassifed\"\n            boxesPerRow={8}\n            rowHeight={70}\n          >\n            {items.unclassifed.map(item => (\n              <GridItem key={item.id}>\n                <div className=\"grid-item\" >\n                    <div className=\"grid-item-content\" style = {{backgroundImage:  `url(${item.address})`}} >\n                        \n                        </div> \n                </div>\n              </GridItem>\n            ))}\n          </GridDropZone>\n          </div>\n        \n          <div className=\"container\">\n          <GridDropZone\n            className=\"dropzone positive\"\n            id=\"positive\"\n            boxesPerRow={4}\n            rowHeight={70}\n          >\n            {items.positive.map(item => (\n              <GridItem key={item.id}>\n                <div className=\"grid-item\"> \n                    <div className=\"grid-item-content\" style = {{backgroundImage: `url(${item.address})`}}>\n                         \n                        </div>  \n                </div>\n              </GridItem>\n            ))}\n          </GridDropZone>\n         \n          <GridDropZone\n            className=\"dropzone negative\"\n            id=\"negative\"\n            boxesPerRow={4}\n            rowHeight={70}\n          >\n            {items.negative.map(item => (\n              <GridItem key={item.id}>\n                <div className=\"grid-item\">\n                <div className=\"grid-item-content\" style = {{backgroundImage: `url(${item.address})`}}>\n                        \n                        </div>      \n                </div>\n              </GridItem>\n            ))}\n          </GridDropZone>\n\n          \n        </div>\n        </div>\n      </GridContextProvider>\n    );\n\n    }\n\n\n\n\nexport default App\n","import * as React from \"react\"\nimport DndComponent from \"./components/DND\"\n// markup\nconst IndexPage = () => {\n  return (\n    <DndComponent></DndComponent>\n  )\n}\n\nexport default IndexPage\n"],"sourceRoot":""}