{"version":3,"sources":["webpack://gatsby-test/./node_modules/uuid/dist/esm-browser/rng.js","webpack://gatsby-test/./node_modules/uuid/dist/esm-browser/regex.js","webpack://gatsby-test/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://gatsby-test/./node_modules/uuid/dist/esm-browser/validate.js","webpack://gatsby-test/./node_modules/uuid/dist/esm-browser/v4.js","webpack://gatsby-test/./src/pages/WebWorkersMVPDemo.js","webpack://gatsby-test/./src/jones.jpg"],"names":["getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","uuid","byteToHex","i","push","toString","substr","arr","offset","arguments","length","undefined","toLowerCase","TypeError","options","buf","rnds","random","useStyles","makeStyles","theme","root","display","alignItems","wrapper","margin","spacing","position","buttonSuccess","backgroundColor","green","fabProgress","color","top","left","zIndex","buttonProgress","marginTop","marginLeft","React","anchorEl","setAnchorEl","constructTileState","tileState","setTileState","fetchButtonEnabled","setFetchButtonEnabled","trainButtonEnabled","setTrainButtonEnabled","evaluateButtonEnabled","setEvaluateButtonEnabled","downloadButtonEnabled","setDownloadButtonEnabled","uploadButtonEnabled","uploading","success","fetching","openFetchDropdown","setOpenFetchDropdown","openTrainDropdown","setOpenTrainDropdown","canvasWebWorker","setCanvasWebWorker","dataWebWorker","setDataWebWorker","classifierWebWorker","setClassifierWebWorker","confusionMatrix","setConfusionMatrix","trainingObject","setTrainingObject","activeCellPairs","setActiveCellPairs","dataToCanvasWorkerChannel","MessageChannel","dataToClassifierWorkerChannel","constructWebWorker","postMessage","action","port1","port2","sourcePath","name","worker","Worker","addEventListener","event","console","log","message","classes","buttonClassname","clsx","handleCloseFetchDropDown","fetchType","handleFetch","unclassified","positive","negative","workerActionPromise","getType","getArgs","amount","then","cellPairs","data","getResult","newTileState","blobUrls","classType","filteredCellPairs","handleTrain","positiveCellPairs","map","element","id","negativeCellPairs","totalCellPairs","concat","newLabels","Array","fill","dataRows","newTrainingObject","classifierType","trainingData","trainingLabels","featureIndicesToUse","newConfusionMatrix","UUID","uuidv4","Promise","resolve","selfDestructingEventHandler","removeEventListener","handleUpload","eventObject","fileListObject","target","files","initialTrainingObject","handleDownload","dataURLs","dataURL","idx","info","address","handleCloseFetchDropdown","onChange","sourceId","sourceIndex","targetIndex","targetId","result","move","swap","style","overflowX","hieght","width","src","logo","height","maxHeight","marginBottom","className","title","aria-label","component","type","hidden","webkitdirectory","mozdirectory","msdirectory","odirectory","directory","multiple","disabled","marginRight","onClick","container","justify","key","item","variant","aria-controls","aria-haspopup","currentTarget","keepMounted","open","Boolean","onClose","noValidate","autoFocus","value","jones","textAlign","paddingLeft","userSelect","boxesPerRow","rowHeight","minHeight","minWidth","maxWidth","padding","backgroundImage","paddingRight"],"mappings":"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","file":"component---src-pages-web-workers-mvp-demo-js-0c3d70f43bcec3e3bb2c.js","sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0; // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import React from 'react';\r\nimport { Row, Col, Container} from \"reactstrap\";\r\nimport {Box, Button, Grid, IconButton, Menu, MenuItem, Card}from '@material-ui/core'; \r\nimport logo from '../cpa_logo(blue).svg';\r\nimport {Image, Dropdown, DropdownButton} from 'react-bootstrap';\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { green } from '@material-ui/core/colors';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\n\r\nimport UploadHandler from '../classes/UploadHandler'\r\nimport {ClassifierManager} from '../classes/ClassifierManager'\r\nimport {ImageHandler}  from '../classes/ImageHandler'\r\nimport UserUploadFileHandler from '../classes/UserUploadFileHandler'\r\nimport {ImageGridManager}  from '../classes/imGridManager'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n//import UploadButton from './UploadButton'\r\n\r\nimport Evaluate from './AbbyUIButtons/UIEvaluateButton'\r\nimport ScoreAll from './AbbyUIButtons/UIScoreAllButton'\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport jones from '../jones.jpg'\r\n\r\nimport {\r\n    GridContextProvider,\r\n    GridDropZone,\r\n    GridItem,\r\n    swap,\r\n    move\r\n  } from \"react-grid-dnd\";\r\n  \r\n  import \"../dndstyles.css\";\r\nimport { truncatedNormal } from '@tensorflow/tfjs-core';\r\nimport UploadButton from './UploadButton';\r\n\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n    },\r\n    wrapper: {\r\n      margin: theme.spacing(1),\r\n      position: 'relative',\r\n    },\r\n    buttonSuccess: {\r\n      backgroundColor: green[500],\r\n      '&:hover': {\r\n        backgroundColor: green[700],\r\n      },\r\n    },\r\n    fabProgress: {\r\n      color: green[500],\r\n      position: 'absolute',\r\n      top: -6,\r\n      left: -6,\r\n      zIndex: 1,\r\n    },\r\n    buttonProgress: {\r\n      color: green[500],\r\n      position: 'absolute',\r\n      top: '50%',\r\n      left: '50%',\r\n      marginTop: -12,\r\n      marginLeft: -12,\r\n    },\r\n    \r\n  }));\r\n\r\n\r\nfunction TestUIMVP(){\r\n    \r\n    \r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [dataProvider, setDataProvider] = React.useState(null)\r\n\r\n    // var classifierManager = null;\r\n    // const [classifierManager, setClassifierManager] = React.useState(null)\r\n    const [fileListObject, setFileListObject] = React.useState(null)\r\n    const [tileState, setTileState] = React.useState( constructTileState([]) );\r\n    const [imageGridManager, setImageGridManager] = React.useState(null)\r\n    const [lastFetchState, setLastFetchState] = React.useState(null)\r\n    const [featuresToUse, setFeaturesToUseState] = React.useState(null)\r\n\r\n    const [fetchButtonEnabled, setFetchButtonEnabled] = React.useState(false)\r\n    const [trainButtonEnabled, setTrainButtonEnabled] = React.useState(false)\r\n    const [evaluateButtonEnabled, setEvaluateButtonEnabled] = React.useState(false)\r\n    const [downloadButtonEnabled, setDownloadButtonEnabled] = React.useState(false)\r\n    const [uploadButtonEnabled, setUploadButtonEnabled] = React.useState(true)\r\n    const [scoreAllButtonEnabled, setscoreAllButtonEnabled] = React.useState(false)\r\n    const [uploading, setUploading] = React.useState(false)\r\n    const [success, setSuccess] = React.useState(false)\r\n    const [fetching, setFetching] = React.useState(false)\r\n    const [openFetchDropdown, setOpenFetchDropdown] = React.useState(false);\r\n    const [openTrainDropdown, setOpenTrainDropdown] = React.useState(false)\r\n\r\n    const [canvasWebWorker, setCanvasWebWorker] = React.useState(null)\r\n    const [dataWebWorker, setDataWebWorker] = React.useState(null)\r\n    const [classifierWebWorker, setClassifierWebWorker] = React.useState(null)\r\n    const [confusionMatrix, setConfusionMatrix] = React.useState([[0, 0], [0, 0]])\r\n    const [trainingObject, setTrainingObject] = React.useState(null)\r\n    const [activeCellPairs, setActiveCellPairs] = React.useState([])\r\n\r\n    React.useEffect(() => {\r\n\r\n        const dataToCanvasWorkerChannel = new MessageChannel();\r\n        const dataToClassifierWorkerChannel = new MessageChannel();\r\n\r\n        const dataWebWorker = constructWebWorker('../dataWorker.js', 'dataWebWorker')\r\n        dataWebWorker.postMessage({action: \"connectToCanvasWorker\"}, [dataToCanvasWorkerChannel.port1])\r\n        dataWebWorker.postMessage({action: \"connectToClassifierWorker\"}, [dataToClassifierWorkerChannel.port1])\r\n        setDataWebWorker(dataWebWorker)\r\n\r\n        const canvasWebWorker = constructWebWorker('../canvasWorker.js', 'CanvasWebWorker')\r\n        canvasWebWorker.postMessage({action: \"connectToDataWorker\"}, [dataToCanvasWorkerChannel.port2])    \r\n        setCanvasWebWorker(canvasWebWorker)\r\n\r\n\r\n        const classifierWebWorker = constructWebWorker('../classifierWorker.js', 'classifierWebWorker')\r\n        classifierWebWorker.postMessage({action: \"connectToDataWorker\"}, [dataToClassifierWorkerChannel.port2])\r\n        setClassifierWebWorker(classifierWebWorker)\r\n\r\n    }, [])\r\n\r\n\r\n    const constructWebWorker = function(sourcePath, name) {\r\n        const worker = new Worker(sourcePath)\r\n        worker.addEventListener(\"error\", event => {\r\n            console.log(`[${name}] Error`, event.message, event);\r\n        });   \r\n        return worker\r\n    }\r\n    \r\n    const classes = useStyles();\r\n    const buttonClassname = clsx({\r\n      [classes.buttonSuccess]: success,\r\n    });\r\n\r\n    const N = 20\r\n\r\n    const handleClickFetchDropDown = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleCloseFetchDropDown = (fetchType) => {\r\n        setAnchorEl(null)\r\n         if (fetchType !== undefined) {\r\n            handleFetch(fetchType)\r\n         }\r\n         \r\n    };\r\n\r\n    const disableIterationButtons = () => {\r\n      setFetchButtonEnabled(false)\r\n      setTrainButtonEnabled(false)\r\n      setDownloadButtonEnabled(false)\r\n    //   setEvaluateButtonEnabled(false)\r\n\r\n    }\r\n    const enableIterationButtons = () => {\r\n      setFetchButtonEnabled(true)\r\n      setTrainButtonEnabled(true)\r\n      setDownloadButtonEnabled(true)\r\n      setEvaluateButtonEnabled(true)\r\n\r\n    }\r\n\r\n    const handleFetch = async (fetchType) => {\r\n        const emptyTileState = { unclassified: [], positive: [], negative: []}\r\n        setTileState(emptyTileState)\r\n        switch (fetchType) {\r\n            case \"Random\":\r\n                workerActionPromise(dataWebWorker, \"get\", {getType: \"cellPairs\", getArgs: {amount: 20}})\r\n                    .then((event) => {\r\n                        const cellPairs = event.data.getResult\r\n                        setActiveCellPairs(cellPairs)\r\n                        return workerActionPromise(canvasWebWorker, 'get', {\r\n                            getType: 'blobUrlsFromCellPairs', \r\n                            getArgs: {cellPairs}\r\n                        })\r\n\r\n                    })\r\n                    .then((event) => {  \r\n                        const newTileState = constructTileState(event.data.blobUrls)\r\n                        console.log(newTileState)\r\n                        setTileState(newTileState)\r\n                    })\r\n                break;\r\n            case \"Positive\": case \"Negative\":\r\n                workerActionPromise(dataWebWorker, \"get\", {getType: \"cellPairs\", getArgs: {amount: 100}})\r\n                    .then((event) => {\r\n                        const cellPairs = event.data.getResult\r\n\r\n                        return workerActionPromise(classifierWebWorker, 'predictFilterCellPairs', {\r\n                            cellPairs,\r\n                            classType:fetchType\r\n                        })\r\n                    })\r\n                    .then((event) => {\r\n                        const {filteredCellPairs} = event.data\r\n                        console.log(event)\r\n                        setActiveCellPairs(filteredCellPairs)\r\n                        return workerActionPromise(canvasWebWorker, 'get', {\r\n                            getType: 'blobUrlsFromCellPairs', \r\n                            getArgs: {cellPairs:filteredCellPairs}\r\n                        })\r\n\r\n                    })\r\n                    .then((event) => {  \r\n                        const newTileState = constructTileState(event.data.blobUrls)\r\n                        console.log(newTileState)\r\n                        setTileState(newTileState)\r\n                    })\r\n                break;\r\n                \r\n        }\r\n    }\r\n    \r\n\r\n\r\n  const handleTrain = async () => {\r\n\r\n    const positiveCellPairs = tileState.positive.map((element) => activeCellPairs[element.id])\r\n    const negativeCellPairs = tileState.negative.map((element) => activeCellPairs[element.id])\r\n\r\n    const totalCellPairs = positiveCellPairs.concat(negativeCellPairs)\r\n    const newLabels = (new Array(positiveCellPairs.length).fill(1)).concat(new Array(negativeCellPairs.length).fill(0))\r\n    console.log(totalCellPairs, newLabels)\r\n    setTileState(constructTileState([]))\r\n    setActiveCellPairs([])\r\n    workerActionPromise(dataWebWorker, 'get', {\r\n        getType: \"objectRowsFromCellpairs\",\r\n        getArgs: {cellPairs:totalCellPairs}\r\n    })\r\n        .then(event => {\r\n            const dataRows = event.data.getResult\r\n            console.log(trainingObject)\r\n            console.log(dataRows)\r\n            const newTrainingObject = {\r\n                classifierType: \"LogisticRegression\",\r\n                trainingData: [...trainingObject.trainingData, ...dataRows],\r\n                trainingLabels: [...trainingObject.trainingLabels, ...newLabels],\r\n                featureIndicesToUse: trainingObject.featureIndicesToUse\r\n            }\r\n            console.log(newTrainingObject)\r\n            setOpenTrainDropdown(true)\r\n            setTrainingObject(newTrainingObject)\r\n            return workerActionPromise(classifierWebWorker, \"train\", {trainingObject:newTrainingObject})\r\n        })\r\n        .then(() => {\r\n            return workerActionPromise(classifierWebWorker, \"confusionMatrix\")\r\n        })\r\n        .then((event)=> {\r\n            const newConfusionMatrix = event.data.confusionMatrix\r\n            console.log(newConfusionMatrix)\r\n            setConfusionMatrix(newConfusionMatrix)\r\n        })\r\n        .then(() => {\r\n            setOpenTrainDropdown(false)\r\n        })\r\n    \r\n  }\r\n  \r\n  const workerActionPromise = function(worker, action, data) {\r\n    console.log(worker, action, data)\r\n    const UUID = uuidv4()\r\n  \r\n    return new Promise (resolve => {\r\n      let selfDestructingEventHandler = (event) => {\r\n        if (event.data.uuid === UUID) {\r\n            worker.removeEventListener('message', selfDestructingEventHandler);\r\n            resolve(event)\r\n        }\r\n      }\r\n      worker.addEventListener('message', selfDestructingEventHandler)\r\n      \r\n      worker.postMessage({action, ...data, uuid:UUID})\r\n    })\r\n    \r\n  }\r\n  \r\n\r\n    const handleUpload = async (eventObject) => {\r\n        workerActionPromise(dataWebWorker, 'init', {fileListObject:eventObject.target.files})\r\n        .then(() => {\r\n            return workerActionPromise(dataWebWorker, \"get\", {getType: \"trainingObject\"})\r\n        })\r\n        .then((event) => {\r\n            console.log(event)\r\n            setOpenTrainDropdown(true)\r\n            const initialTrainingObject = event.data.getResult\r\n            setTrainingObject(initialTrainingObject)\r\n            return workerActionPromise(classifierWebWorker, \"train\", {trainingObject:initialTrainingObject})\r\n        })\r\n        .then(() => {\r\n            return workerActionPromise(classifierWebWorker, \"confusionMatrix\")\r\n        })\r\n        .then((event)=> {\r\n            const newConfusionMatrix = event.data.confusionMatrix\r\n            console.log(newConfusionMatrix)\r\n            setConfusionMatrix(newConfusionMatrix)\r\n        })\r\n        .then(() => {\r\n            setOpenTrainDropdown(false)\r\n            enableIterationButtons()\r\n        }) \r\n  }\r\n    const handleDownload = async () => {\r\n    \r\n    }\r\n\r\n    \r\n    function constructTileState(dataURLs) {\r\n        return {\r\n            unclassified: dataURLs.map((dataURL, idx, info) => {return {id: idx, address: dataURL, info: \"cell info, biology stuff\"}}),  \r\n            positive: [],\r\n            negative: []\r\n        };\r\n    }\r\n\r\n    function onChange(sourceId, sourceIndex, targetIndex, targetId) {\r\n        if (targetId) {\r\n          const result = move(\r\n            tileState[sourceId],\r\n            tileState[targetId],\r\n            sourceIndex,\r\n            targetIndex\r\n          );\r\n          return setTileState({\r\n            ...tileState,\r\n            [sourceId]: result[0],\r\n            [targetId]: result[1]\r\n          });\r\n        }\r\n    \r\n        const result = swap(tileState[sourceId], sourceIndex, targetIndex);\r\n        return setTileState({\r\n          ...tileState,\r\n          [sourceId]: result\r\n        });\r\n      }\r\n    \r\n      const handleClickOpenFetchDropdown = () => {\r\n        setOpenFetchDropdown(true);\r\n      };\r\n   \r\n      const handleCloseFetchDropdown = () => {\r\n        setOpenFetchDropdown(false);\r\n      };\r\n\r\n    return (\r\n       \r\n\r\n        <GridContextProvider onChange={onChange}>\r\n             \r\n        <div style={{ overflowX:\"hidden\", hieght: \"100%\", width: \"100%\" }}>\r\n      \r\n        <Row>\r\n        <Image src={logo} style={{marginLeft:\"10%\", height:\"30%\", width:\"25%\",position:\"relative\", maxHeight:\"125px\", marginBottom:\"1%\"}}></Image>\r\n       \r\n        <Col style = {{left:'40%'}}>\r\n        <div className={classes.root}>\r\n      <div className={classes.wrapper}>\r\n       <Tooltip title=\"Load Data\" aria-label=\"load data\">\r\n        <Fab\r\n          aria-label=\"save\"\r\n          color=\"primary\"\r\n          component=\"label\"\r\n          className={buttonClassname}\r\n          style =  {{height: '5vw', width: '5vw'}}\r\n        >\r\n        \r\n          {success ? <CheckIcon style =  {{ hieght: \"50%\", width: \"50%\"}}/> : <CloudUploadIcon style =  {{ hieght: \"50%\", width: \"50%\"}}/>}\r\n          <input  type=\"file\"\r\n                hidden webkitdirectory=\"true\"\r\n                mozdirectory=\"true\"\r\n                msdirectory=\"true\"\r\n                odirectory=\"true\"\r\n                directory=\"true\"\r\n                multiple\r\n                onChange = {(eventObject)=>{handleUpload(eventObject)}}  \r\n                disabled={!uploadButtonEnabled} \r\n               \r\n        />\r\n        </Fab>\r\n        </Tooltip>\r\n        {/* size={68}  */}\r\n        {uploading && <CircularProgress className={classes.fabProgress} style={{height: '6vw', width: '6vw', marginTop:\"4%\", marginRight:\"4%\"}}/>}\r\n      </div>  \r\n    </div>\r\n        </Col>\r\n        <Col style = {{left: '15%', marginTop: '.75%'}}>\r\n        <Tooltip title=\"Download\" aria-label=\"download\">\r\n        <Fab \r\n         aria-label=\"save\"\r\n         color=\"primary\"\r\n         component=\"label\"\r\n        disabled={!downloadButtonEnabled} \r\n        onClick={handleDownload}\r\n        style =  {{height: '5vw', width: '5vw'}}\r\n        > <SaveAltIcon style =  {{ hieght: \"50%\", width: \"50%\"}} /></Fab> \r\n        </Tooltip>\r\n        </Col>\r\n       \r\n        </Row>\r\n        <Row>\r\n        \r\n        <Grid container justify=\"center\" spacing={2} style={{marginBottom: 15}}>\r\n       \r\n        <Grid key={0} item>\r\n            <Button disabled={!fetchButtonEnabled} variant=\"contained\" aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClickFetchDropDown}>\r\n            Fetch\r\n            </Button>\r\n            <Menu\r\n            id=\"simple-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={handleCloseFetchDropDown}\r\n            >\r\n            <MenuItem onClick={()=>handleCloseFetchDropDown(\"Random\")}>Random</MenuItem>\r\n            <MenuItem onClick={()=>handleCloseFetchDropDown(\"Positive\")}>Positive</MenuItem>\r\n            <MenuItem onClick={()=>handleCloseFetchDropDown(\"Negative\")}>Negative</MenuItem>\r\n            <MenuItem onClick={handleClickOpenFetchDropdown}>By Image</MenuItem>\r\n           \r\n                <Dialog\r\n            open={openFetchDropdown}\r\n            onClose={handleCloseFetchDropdown}\r\n        \r\n            >\r\n            <DialogTitle>Fetch By Image</DialogTitle>\r\n            <DialogContent>\r\n            <DialogContentText>\r\n                Select the image number you would like to fetch from. \r\n            </DialogContentText>\r\n            <form  noValidate >\r\n                <FormControl >\r\n                <InputLabel >Image</InputLabel>\r\n                <Select\r\n                    autoFocus>\r\n                    <MenuItem value=\"1\">1</MenuItem>\r\n                    <MenuItem value=\"2\">2</MenuItem>\r\n                    <MenuItem value=\"3\">3</MenuItem>\r\n                    <MenuItem value=\"4\" >4</MenuItem>\r\n                    <MenuItem value=\"5\" >5</MenuItem>\r\n                </Select>\r\n                </FormControl>\r\n            </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n            <Button onClick={handleCloseFetchDropdown} color=\"primary\">\r\n                Close\r\n            </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n            \r\n            </Menu>\r\n    </Grid>\r\n\r\n\r\n        <Grid key={1} item>\r\n            {/* style = {{height: \"5vw\", width:\"10vw\", minHeight:2, maxHeight: 35, maxwidth: 50, fontSize: \"max(1.5vw, 20)\"}}  */}\r\n        <Button disabled={!trainButtonEnabled} variant=\"contained\" onClick={handleTrain}>Train</Button>\r\n        <Dialog\r\n            open={openTrainDropdown}\r\n           \r\n        \r\n            >\r\n            <DialogTitle>Loss and Accuracy</DialogTitle>\r\n            <DialogContent>\r\n                <img width={100} height={100} src={jones}></img>\r\n            </DialogContent>\r\n        </Dialog>\r\n        </Grid>\r\n\r\n        <Grid key={2} item>\r\n         {/* <Button disabled={!evaluateButtonEnabled} variant=\"contained\" onClick={()=>{}}>Evaluate</Button>  */}\r\n          {/* TODO: need to fix button disabled DONE*/}\r\n          {!evaluateButtonEnabled ? <Button disabled={!evaluateButtonEnabled} variant=\"contained\" onClick={()=>{}}>Evaluate</Button> : <Evaluate confusionMatrix={confusionMatrix}></Evaluate>}\r\n        </Grid>\r\n\r\n        <Grid key={3} item>\r\n        {/* <Button  disabled={!scoreAllButtonEnabled} variant=\"contained\" onClick={()=>{}}>Score All</Button> */}\r\n          {/* TODO: need to fix button disabled DONE*/}\r\n          \r\n          {!evaluateButtonEnabled ? <Button disabled={!evaluateButtonEnabled} variant=\"contained\" onClick={()=>{}}>Score All</Button> : <ScoreAll></ScoreAll>}\r\n        </Grid>\r\n        \r\n    </Grid>\r\n    </Row>\r\n\r\n  \r\n        <div>\r\n        \r\n        \r\n        <label style = {{textAlign:\"left\", backgroundColor: 'white', paddingLeft: \"10%\", marginBottom:\"0.5%\", userSelect: \"none\"} }>Unclassified </label>\r\n      \r\n        <div>\r\n        <GridDropZone\r\n             className=\"dropzone \"\r\n            id=\"unclassified\"\r\n            boxesPerRow={8}\r\n            rowHeight={80}\r\n            style={{height: \"20vw\", maxHeight: 200, minHeight:150, marginBottom:10, marginLeft: \"10%\", width:\"80%\"}}\r\n          >   \r\n            {!fetching ? tileState.unclassified.map(item => (\r\n              <GridItem className= \"hoverTest\"  style={{height:\"10vw\", width: \"10vw\", minHeight:80, minWidth: 80, maxHeight: 105, maxWidth: 105, padding:10}} key={item.id}>\r\n                <div className=\"grid-item\" >\r\n                    <div className=\"grid-item-content\" style = {{backgroundImage:  `url(${item.address})`}} >\r\n                    <span className= \"hoverText\">{item.info}</span>\r\n                        </div> \r\n\r\n                </div>\r\n              </GridItem>\r\n            )) : <CircularProgress style= {{hieght:\"7%\", width:\"7%\", marginTop: \"8%\", marginLeft: \"45%\"}}/> } \r\n        \r\n          </GridDropZone>\r\n          </div>\r\n         \r\n        \r\n        <Row>\r\n       \r\n          <label style = {{textAlign:\"left\", backgroundColor: 'white', paddingLeft: \"11%\", userSelect: \"none\", marginBottom:\"0.5%\", marginTop:0} }>Positive</label> \r\n    \r\n        \r\n          <label style = {{textAlign:\"left\", backgroundColor: 'white', paddingRight: \"8%\", userSelect: \"none\", margin: \"auto\",  marginBottom:\"0.5%\", marginTop:0} }>Negative</label>\r\n       \r\n          </Row>\r\n         \r\n         <Row>\r\n\r\n          <GridDropZone\r\n            className=\"dropzone positive\"\r\n            id=\"positive\"\r\n            boxesPerRow={4}\r\n            rowHeight={80}\r\n            style={{height: \"20vw\", maxHeight: 200, minHeight:150}}\r\n          >\r\n            \r\n            {tileState.positive.map(item => (\r\n              <GridItem className= \"hoverTest\" style={{height:\"10vw\", width: \"10vw\", minHeight: 80, minWidth: 80, maxHeight: 105, maxWidth: 105, padding:10}} key={item.id}>\r\n                <div className=\"grid-item\"> \r\n                    <div className=\"grid-item-content\" style = {{backgroundImage: `url(${item.address})`}}>\r\n                    <span className= \"hoverText\">{item.info}</span>\r\n                        </div>  \r\n                </div>\r\n              </GridItem>\r\n            ))}\r\n          </GridDropZone>\r\n   \r\n      \r\n          <GridDropZone\r\n            className=\"dropzone negative\"\r\n            id=\"negative\"\r\n            boxesPerRow={4}\r\n            rowHeight= {80}\r\n            style={{height: \"20vw\", maxHeight: 200, minHeight:150}}\r\n          >\r\n            {tileState.negative.map(item => (\r\n              <GridItem className= \"hoverTest\" style={{height:\"10vw\", width: \"10vw\", minHeight: 80, minWidth: 80, maxHeight: 105, maxWidth: 105, padding: 10}} key={item.address}>\r\n                <div className=\"grid-item\">\r\n                <div className=\"grid-item-content\" style = {{backgroundImage: `url(${item.address})`}}>\r\n                <span className= \"hoverText\">{item.info}</span>\r\n                        </div>      \r\n                </div>\r\n              </GridItem>\r\n            ))}\r\n          </GridDropZone>\r\n\r\n     \r\n      \r\n        </Row>\r\n        </div>\r\n      \r\n \r\n    </div>\r\n    </GridContextProvider>\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default TestUIMVP; ","export default __webpack_public_path__ + \"static/jones-885674426137aa7117b916008a9d4f44.jpg\";"],"sourceRoot":""}