{"version":3,"sources":["webpack://gatsby-test/./node_modules/uuid/dist/esm-browser/rng.js","webpack://gatsby-test/./node_modules/uuid/dist/esm-browser/regex.js","webpack://gatsby-test/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://gatsby-test/./node_modules/uuid/dist/esm-browser/validate.js","webpack://gatsby-test/./node_modules/uuid/dist/esm-browser/v4.js","webpack://gatsby-test/./src/classes/PapaParser.js","webpack://gatsby-test/./src/classes/ImageTable.js","webpack://gatsby-test/./src/classes/ObjectTable.js","webpack://gatsby-test/./src/classes/DataProvider.js","webpack://gatsby-test/./src/classes/TrainingTable.js","webpack://gatsby-test/./src/classes/DataTables.js","webpack://gatsby-test/./src/classes/UploadHandler.js","webpack://gatsby-test/./src/classes/UserUploadFileHandler.js","webpack://gatsby-test/./src/pages/WebWorkersMVPDemo.js","webpack://gatsby-test/./node_modules/lodash/_baseZipObject.js","webpack://gatsby-test/./node_modules/lodash/zipObject.js","webpack://gatsby-test/./src/jones.jpg"],"names":["getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","uuid","byteToHex","i","push","toString","substr","arr","offset","arguments","length","undefined","toLowerCase","TypeError","options","buf","rnds","random","PapaParser","this","basicPapaConfig","worker","skipEmptyLines","dynamicTyping","file_config_options","fastMode","error","e","console","delimiter","comments","Papa","file","config","Promise","complete","prototype","notify","strMsg","then","x","log","debugPrint","onEndMsg","result","data","papaTextfromCSV","file_object","file_for_papa","option","Object","assign","name","ImageTable","image_lines","column_lines","image_column","image_mapped","imageNumber","img_index","ImageNumber","key","find","search_obj","index","findIndex","indexTableGetRow","get","getSize","hasOwnProperty","row","line","getColumnLines","ObjectTable","object_lines","object_column","object_mapped","imgs_size","obj_index","ObjectNumber","size","img","obj","concat","returnObjsPerImg","firstObjinImg","n","index_key","parseInt","DataProvider","uniform_data","testConstructorInputPreconditions","object_data","object_columns","image_data","image_columns","includes","returnAllImgFileNames","map","channel","getValue","file_lookup","color","getObjsPerImg","objsInImg","count","getToolTip","getNRandomObjs","num_of_objs","rand_objs","Math","floor","getRow","getAllObjRowsIn2DArray","objs","getCordsforCellDisplay","cords","cellinObj","cellx","celly","max","y","value","TrainingTable","data_lines","training_lines","getTrainingLabels","data_table","row_object","data_row","indexTable","getDataColumnsPaired","UploadHandler","fileListObject","sliceArrayByValue","array","value1","value2","index1","indexOf","index2","slice","getDataHandlerandStartingTrainingSet","file_objects","getFiles","getText","text_data","dp","tt","file_handler","UserUploadFileHandler","file_name","findFile","all","endsWith","fileReaderPromiseText","column_lines_txt","data_columns","split","trim","object_column_lines","image_column_lines","fileIndex","Array","from","target","files","elem","file_result","resolve","reject","fr","FileReader","onload","readAsText","findAllFiles","file_names","fileReaderPromiseImage","readAsDataURL","useStyles","makeStyles","theme","root","display","alignItems","wrapper","margin","spacing","position","buttonSuccess","backgroundColor","green","fabProgress","top","left","zIndex","buttonProgress","marginTop","marginLeft","React","anchorEl","setAnchorEl","constructTileState","jones","tileState","setTileState","fetchButtonEnabled","setFetchButtonEnabled","trainButtonEnabled","setTrainButtonEnabled","evaluateButtonEnabled","setEvaluateButtonEnabled","downloadButtonEnabled","setDownloadButtonEnabled","uploadButtonEnabled","setUploadButtonEnabled","uploading","setUploading","success","setSuccess","fetching","setFetching","openFetchDropdown","setOpenFetchDropdown","openTrainDropdown","setOpenTrainDropdown","canvasWebWorker","setCanvasWebWorker","dataWebWorker","setDataWebWorker","classifierWebWorker","setClassifierWebWorker","confusionMatrix","setConfusionMatrix","trainingObject","setTrainingObject","activeCellPairs","setActiveCellPairs","scoreTableIsUpToDate","setScoreTableIsUpToDate","setScoreTableObject","trainingLossCanvasParentRef","trainingAccuracyCanvasParentRef","dataToCanvasWorkerChannel","MessageChannel","dataToClassifierWorkerChannel","constructWebWorker","postMessage","action","port1","port2","sourcePath","Worker","addEventListener","event","message","classes","buttonClassname","clsx","handleCloseFetchDropDown","fetchType","handleFetch","unclassified","positive","negative","workerActionPromise","getType","getArgs","amount","cellPairs","getResult","newTileState","blobUrls","classType","filteredCellPairs","slicedCellPairs","slicedSortedCellPairs","sortedCellPairs","positiveCellPairs","trainingData","dataRow","handleTrain","element","id","negativeCellPairs","totalCellPairs","newLabels","fill","dataRows","newTrainingObject","classifierType","trainingLabels","featureIndicesToUse","trainSequencePromise","currentTrainingObject","UUID","updateCanvasesListener","tfvis","current","trainLogs","ticks","removeEventListener","newConfusionMatrix","uuidv4","selfDestructingEventHandler","handleUpload","eventObject","initialTrainingObject","handleScoreAll","newScoreTableObject","scoreTableObject","handleDownload","tf","model","save","dataURLs","dataURL","idx","info","address","onChange","sourceId","sourceIndex","targetIndex","targetId","move","swap","style","overflowX","height","width","src","logo","maxHeight","marginBottom","className","title","aria-label","component","type","hidden","webkitdirectory","mozdirectory","msdirectory","odirectory","directory","multiple","disabled","marginRight","onClick","container","justify","item","variant","aria-controls","aria-haspopup","currentTarget","keepMounted","open","Boolean","onClose","noValidate","autoFocus","fullWidth","ref","textAlign","paddingLeft","userSelect","boxesPerRow","rowHeight","minHeight","minWidth","maxWidth","padding","backgroundImage","paddingRight","module","exports","props","values","assignFunc","valsLength","assignValue","baseZipObject"],"mappings":"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","file":"component---src-pages-web-workers-mvp-demo-js-fee18e704d6e00079f41.js","sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0; // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import * as Papa from \"papaparse\"\r\nexport default class PapaParser {\r\n\r\n    constructor() {\r\n        // Could do the whole thing in here by keeping what configs mapped by key name\r\n        // Maybe faster?\r\n        //Is making multiple of these smart\r\n        this.basicPapaConfig = {\r\n            worker: true,\r\n            skipEmptyLines: true,\r\n            dynamicTyping: true\r\n        }\r\n        this.file_config_options = {\r\n            \"per_object.csv\" :  {fastMode: true, error: (e)=>console.error(e)} ,\r\n            \"per_image.csv\" : { error: (e)=>console.error(e)} ,\r\n            \"MyTrainingSet.txt\" : {delimiter: \" \", comments: \"#\" }\r\n        }\r\n\r\n        Papa.parsePromise = function(file, config) {\r\n            return new Promise(function(complete, error) {\r\n              Papa.parse(file, {...config, complete, error});\r\n            });\r\n        };  \r\n         Promise.prototype.notify = function(strMsg) {\r\n             return this.then(x=>{console.log(strMsg); return x});\r\n          }\r\n          Promise.prototype.debugPrint = function() {\r\n            return this.then(x=>{console.log(x); return x});\r\n        }  \r\n        Papa.papaparseFilePromise = function(file, options={}, onEndMsg=\"\") {\r\n    \r\n            return Papa.parsePromise(file, options)\r\n            .then((result)=> result.data)\r\n            .notify(onEndMsg);\r\n        }\r\n        Papa.papaparseFilePromise_noReturn = function(file, options={}, onEndMsg=\"\") {\r\n            return Papa.parsePromise(file, options)\r\n            .notify(onEndMsg);\r\n        }\r\n}\r\n    papaTextfromCSV(file_object) {\r\n        var file_for_papa = file_object.file;\r\n        var option = Object.assign(this.basicPapaConfig, this.file_config_options[file_object.name])\r\n        return Papa.papaparseFilePromise(file_for_papa, option)\r\n    }\r\n\r\n}","\r\nexport default class ImageTable{\r\n    constructor(image_lines, column_lines) {\r\n        this.column_lines = column_lines\r\n        this.image_lines = image_lines;\r\n        this.image_column = {}\r\n        this.image_mapped = {}\r\n        for (var i = 0; i < this.column_lines.length; i++) {\r\n            this.image_column[this.column_lines[i]] = i;\r\n        }\r\n        var obj_index = this.image_column.imageNumber\r\n        var img_index = this.image_column.ImageNumber\r\n        for (var i = 0; i < this.image_lines.length; i++) {\r\n            var key = this.image_lines[i][img_index].toString() \r\n            this.image_mapped[key] = i\r\n        }\r\n\r\n    }\r\n    find (search_obj) {\r\n        var row = {}\r\n        var index = this.findIndex(search_obj)\r\n        return this.indexTableGetRow(index)\r\n    }\r\n    get(index, key) {\r\n        if (key in this.image_column && index < this.getSize())\r\n            return this.image_lines[index][this.image_column[key]] \r\n        return -1\r\n\r\n    }    \r\n    findIndex (search_obj) {\r\n        var img;\r\n        var obj;\r\n        var key;\r\n        if (search_obj.hasOwnProperty('ImageNumber')) {\r\n            key = search_obj.ImageNumber.toString() \r\n        }\r\n        if (key in this.image_mapped)\r\n            return this.image_mapped[key]\r\n        \r\n        return -1\r\n    }\r\n    indexTableGetRow(index) {\r\n        var row = {}\r\n        if(index != -1) {\r\n            var line = this.image_lines[index]\r\n            for(var i = 0; i < this.column_lines.length; i++) {\r\n                var key = this.column_lines[i]\r\n                row[key] = line[i];\r\n            }\r\n            return row\r\n        }\r\n        return index;\r\n    }\r\n    getColumnLines(){\r\n        return this.column_lines;\r\n    }\r\n    getSize() {\r\n    return this.image_lines.length;\r\n    }\r\n}\r\n    \r\n","export default class ObjectTable {\r\n    constructor(object_lines, column_lines) {\r\n        this.column_lines = column_lines\r\n        this.object_lines = object_lines;\r\n        this.object_column = {}\r\n        this.object_mapped = {}\r\n        this.imgs_size = {}\r\n        for (var i = 0; i < this.column_lines.length; i++) {\r\n            this.object_column[this.column_lines[i]] = i;\r\n        }\r\n        var obj_index = this.object_column.ObjectNumber\r\n        var img_index = this.object_column.ImageNumber\r\n        var size = 0\r\n        for (var i = 0, size = 0; i < this.object_lines.length; i++, size++) {\r\n            var img = this.object_lines[i][img_index].toString() \r\n            var obj = this.object_lines[i][obj_index].toString() \r\n            var index = img.concat(',',obj)\r\n            this.object_mapped[index] = i\r\n            if (!this.imgs_size.hasOwnProperty(img)) {\r\n                this.imgs_size[img] = 0; \r\n            }\r\n            this.imgs_size[img]++\r\n        }\r\n        console.log(this.imgs_size)\r\n     }\r\n     returnObjsPerImg(img) {\r\n        if (img.toString() in this.imgs_size) {\r\n            return this.imgs_size[img.toString()]\r\n        }\r\n        return -1\r\n    }\r\n    firstObjinImg(n) {\r\n        var img = n.toString()\r\n        if (!(this.imgs_size.hasOwnProperty(img))) {\r\n            return -1\r\n        }\r\n        if (this.imgs_size[img] <= 0) {\r\n            return -1\r\n        }\r\n        var i = 1;\r\n        var obj = i.toString()\r\n        var index_key = img.concat(',',obj)  \r\n        while(!(this.object_mapped.hasOwnProperty(index_key))) {\r\n            i++\r\n            obj = i.toString()\r\n            index_key = img.concat(',',obj)  \r\n        }\r\n        return parseInt(obj)\r\n    }\r\n    find (search_obj = {}) {\r\n        var row = {}\r\n        var index = this.findIndex(search_obj)\r\n        return this.indexTableGetRow(index)\r\n    }\r\n    get(index, key) {\r\n        if (key in this.object_column && index < this.getSize())\r\n            return this.object_lines[index][this.object_column[key]] \r\n        return -1\r\n\r\n    }    \r\n    findIndex(search_obj) {\r\n        var img;\r\n        var obj;\r\n        var key;\r\n        if (search_obj.hasOwnProperty('ImageNumber') && search_obj.hasOwnProperty('ObjectNumber')) {\r\n            img = search_obj.ImageNumber.toString() \r\n            obj = search_obj.ObjectNumber.toString() \r\n            key = img.concat(',',obj)\r\n        }\r\n        if (key in this.object_mapped)\r\n            return this.object_mapped[key]\r\n        \r\n        return -1\r\n    }\r\n    indexTableGetRow(index) {\r\n        var row = {}\r\n        if(index != -1 && index < this.getSize()) {\r\n            var line = this.object_lines[index]\r\n            for(var i = 0; i < this.column_lines.length; i++) {\r\n                var column = this.column_lines[i]\r\n                row[column] = line[i];\r\n            }\r\n            return row\r\n        }\r\n        return index;\r\n    }\r\n    getColumnLines(){\r\n        return this.column_lines;\r\n    }\r\n    getSize() {\r\n    return this.object_lines.length;\r\n    }\r\n\r\n}\r\n\r\n\r\n","\r\nimport { ThreeSixty, ThumbDownSharp } from \"@material-ui/icons\";\r\nimport ImageTable from \"./ImageTable.js\";\r\nimport ObjectTable from \"./ObjectTable.js\";\r\nexport default class DataProvider {\r\n    constructor(uniform_data) {\r\n        this.testConstructorInputPreconditions(uniform_data);\r\n\r\n        this.data = {\r\n            'object_data' : new ObjectTable(uniform_data.object_data, uniform_data.object_columns),\r\n            'image_data' :  new ImageTable(uniform_data.image_data, uniform_data.image_columns)\r\n        }  \r\n    }\r\n    testConstructorInputPreconditions(uniform_data) {\r\n        if (uniform_data == undefined) {\r\n            throw new Error(\"Constructor Error on uniform_data is not defined\")\r\n        }\r\n        if (uniform_data.image_data == undefined || \r\n            uniform_data.object_data == undefined ||\r\n            uniform_data.image_columns == undefined ||\r\n            uniform_data.object_columns == undefined) {\r\n            \r\n            throw new Error(\"Constructor Error on uniform_data is missing fields\")\r\n        }\r\n        if (uniform_data.object_data[0][0] == undefined) {\r\n            throw new Error(\"Constructor Error on object_data is not a 2d array\")\r\n        }\r\n        if (uniform_data.image_data[0][0] == undefined) {\r\n            throw new Error(\"Constructor Error on image_data is not a 2d array\")\r\n        }\r\n        if (uniform_data.object_data[0].length !== uniform_data.object_columns.length) {\r\n            throw new Error(\"Constructor Error on object_data length mismatch with object_columns length\")\r\n        }\r\n        if (uniform_data.image_data[0].length !== uniform_data.image_columns.length) {\r\n            throw new Error(\"Constructor Error on image_data length mismatch with image_columns length\")\r\n        }\r\n        if (!uniform_data.object_columns.includes(\"ObjectNumber\") ||\r\n            !uniform_data.object_columns.includes(\"ImageNumber\")) {\r\n                throw new Error(\"Constructor Error on object_columns doesn't have ObjectNumber and ImageNumber\")\r\n            }\r\n        if (!uniform_data.image_columns.includes(\"ImageNumber\")) {\r\n                throw new Error(\"Constructor Error on image_columns doesn't have ImageNumber\")\r\n            }\r\n        if (!uniform_data.object_columns.includes(\"Nuclei_Location_CenterX\") ||\r\n            !uniform_data.object_columns.includes(\"Nuclei_Location_CenterY\")) {\r\n                throw new Error(\"Constructor Error on uniform_data doesn't have Nuclei_Location_CenterX or Nuclei_Location_CenterY\")\r\n            }\r\n    }\r\n    \r\n    returnAllImgFileNames(img) {\r\n        var channels = [\r\n            {'file_lookup' : 'Image_FileNames_Filename_OrigActin', 'color' : \"red\" }, \r\n            {'file_lookup' : 'Image_FileNames_Filename_OrigpH3'  , 'color' : \"green\"},\r\n            {'file_lookup' : \"Image_FileNames_Filename_OrigDNA\"  , 'color' : \"blue\"}\r\n        ]\r\n         var image_paths = channels.map( channel => {\r\n            var file_name =  this.getValue('image_data', {'ImageNumber': img, 'value': channel.file_lookup}) \r\n            return {'filename' : file_name , 'color' : channel.color}   \r\n         });\r\n        return image_paths;\r\n    }\r\n    //TODO what if cell is on edge of image\r\n    getObjsPerImg(img) {\r\n        var size = this.data.object_data.returnObjsPerImg(img);\r\n        if (size <= 0) {\r\n            return -1;\r\n        }\r\n        var first = this.data.object_data.firstObjinImg(img)\r\n        var objsInImg = [];\r\n        for (var obj = first, count = 0; count < size ; obj++) {\r\n            var row = this.data.object_data.find({'ImageNumber': img, 'ObjectNumber': obj})\r\n            if (row != -1) {\r\n                count++\r\n                objsInImg.push(row)\r\n            }\r\n        }\r\n        return objsInImg;\r\n    }\r\n    getToolTip(search_obj) {\r\n        var index = this.data.image_data.findIndex(search_obj)\r\n        var plate = this.data.image_data.get(index, 'plate')\r\n        var well = this.data.image_data.get(index, 'well')\r\n        return \"Plate: \" + plate + \" Well: \" + well + \" ImageNumber: \" + search_obj.ImageNumber\r\n    }\r\n    getNRandomObjs(n) {\r\n        var num_of_objs = this.data.object_data.getSize()\r\n        var rand_objs = []\r\n        var i;\r\n        for (i = 0; i < n; i++) {\r\n            var index = Math.floor(Math.random() * num_of_objs);\r\n            var obj = this.data.object_data.indexTableGetRow(index)\r\n            rand_objs.push({'ImageNumber': obj.ImageNumber, 'ObjectNumber': obj.ObjectNumber })\r\n        }\r\n        return rand_objs\r\n    }\r\n    getRow(key, search_obj, ) { //Where key is a member of data and search obj is of form {'img': , 'objs': , 'index': }\r\n        if (!(this.data.hasOwnProperty(key))) return -1;\r\n        var row = this.data[key].find(search_obj)\r\n        return row;\r\n\r\n    }\r\n    getAllObjRowsIn2DArray(objs) {\r\n        \r\n\r\n    }\r\n    getCordsforCellDisplay(search_obj) {\r\n        var cords = {};        \r\n        var cellinObj = this.data.object_data.findIndex(search_obj)\r\n        var cellx = parseInt(this.data.object_data.get(cellinObj, 'Nuclei_Location_CenterX'))\r\n        var celly = parseInt(this.data.object_data.get(cellinObj, 'Nuclei_Location_CenterY'))\r\n        cords.x = Math.max(0, cellx - 20) \r\n       // var hi_x = lo_x + 40\r\n        cords.y = (Math.max(0, celly - 20))\r\n        return cords;\r\n    }\r\n\r\n    getValue(key, search_obj) {\r\n        if (!this.data.hasOwnProperty(key)) return -1;         \r\n        var value = -1\r\n        var index =  this.data[key].findIndex(search_obj)\r\n        if (index !== -1) {\r\n            value = this.data[key].get(index, search_obj.value);\r\n        }\r\n        return value;\r\n    }\r\n    getColumnLines(key) {\r\n        if (this.data.hasOwnProperty(key)) {\r\n            return this.data[key].getColumnLines();\r\n        }\r\n        return -1;\r\n\r\n    }                     \r\n\r\n}\r\n\r\nexport {DataProvider}","import { DataTables } from \"./DataTables\";\r\nexport default class TrainingTable extends DataTables{\r\n    constructor(data_lines, column_lines) {\r\n        super(data_lines, column_lines)\r\n        this.training_lines = data_lines;\r\n    }\r\n    getTrainingLabels() {\r\n        return this.data_table.map(row_object => {\r\n            return row_object['label'] === 'positive'? 1 : 0\r\n        })\r\n\r\n\r\n    }\r\n}","import _ from \"lodash\";\r\nexport class DataTables {\r\n    constructor(data_lines, column_lines) {\r\n        this.data_table = data_lines.map(data_row=>{ return _.zipObject(column_lines, data_row)})\r\n        this.column_lines = column_lines;\r\n    }\r\n    find (search_obj = {}) {\r\n                return  _.find(this.data_table, search_obj)\r\n           \r\n        }\r\n    size() {\r\n        return this.data_table.length;\r\n    }\r\n    get(index, key) {\r\n        return _.get(this.data_table[index], key)    \r\n        \r\n    }\r\n    findIndex (search_obj) {\r\n        return _.findIndex(this.data_table, search_obj)\r\n    }\r\n    indexTable (index) {\r\n        return this.data_table[index];\r\n    }\r\n    getColumnLines(){\r\n        return this.column_lines;\r\n    }\r\n    getSize() {\r\n        return this.data_table.length;\r\n    }\r\n\r\n    getDataColumnsPaired() {\r\n        return this.data_table;\r\n        \r\n    }\r\n} ","//import DataUtils from \"./DataUtils\";\r\nimport PapaParser from \"./PapaParser.js\";\r\nimport UserUploadFileHandler from \"./UserUploadFileHandler.js\";\r\nimport _ from \"lodash\";                                                                                                                                                                                                         \r\nimport DataProvider from \"./DataProvider.js\";\r\nimport TrainingTable from \"./TrainingTable.js\";\r\nexport default class UploadHandler {\r\n\r\n    constructor(fileListObject) {\r\n        this.fileListObject = fileListObject\r\n    }\r\n    // TODO\r\n    // getProperties(file_handler) {\r\n\r\n    // }\r\n    sliceArrayByValue = function (array, value1, value2) {\r\n        const index1 = array.indexOf(value1);\r\n        const index2 = array.indexOf(value2);\r\n      \r\n        if (value1 === -1 || value2 === -1) {\r\n            console.error(\"Values not found to slice\");\r\n            return null;\r\n        }\r\n      \r\n        return array.slice(index1, index2);\r\n      }\r\n\r\n    basicPapaConfig = {\r\n        worker: true,\r\n        skipEmptyLines: true,\r\n        dynamicTyping: true\r\n    }\r\n    getFiles() {\r\n        var file_names = [\r\n            \"example_SETUP.SQL\",\r\n            \"per_object.csv\",\r\n            \"per_image.csv\",\r\n            \"MyTrainingSet.txt\"\r\n        ]\r\n        var file_handlers = [];\r\n        var i = 0;\r\n        var file_handler = new UserUploadFileHandler(this.fileListObject)\r\n        return  file_names.map(file_name => {\r\n                var file = file_handler.findFile(file_name)\r\n                return {'file': file, 'name' : file_name};\r\n            })\r\n    }\r\n\r\n     \r\n    getText(file_objects) {\r\n        return Promise.all( file_objects.map( file_object => {\r\n            if (file_object.name.endsWith(\".csv\") || file_object.name.endsWith(\".txt\")) {\r\n                var papa_parser = new PapaParser();\r\n                return papa_parser.papaTextfromCSV(file_object);\r\n            }\r\n            else {\r\n                var file_handler = new UserUploadFileHandler(this.fileListObject)\r\n                return file_handler.fileReaderPromiseText(file_object.file);\r\n            }\r\n        }))\r\n    }\r\n        //return Promise.all([this.fileReaderPromiseText(fileListObject, setup_name).split('\\n').map(e=>e.trim()),\r\n    getColumnLines(column_lines_txt) {\r\n        var data_columns = [] \r\n        var column_lines = column_lines_txt.split('\\n').map(e=>e.trim())\r\n        const object_column_lines = this.sliceArrayByValue(\r\n            column_lines,\r\n            \"CREATE TABLE per_object (\", \r\n            \"PRIMARY KEY  (ImageNumber,ObjectNumber)\"\r\n        );\r\n        data_columns.push(object_column_lines.map((name)=>name.split(' ')[0]).slice(1));\r\n        const image_column_lines = this.sliceArrayByValue(\r\n            column_lines,\r\n            \"CREATE TABLE per_image (\", \r\n            \"PRIMARY KEY  (ImageNumber)\"\r\n        );\r\n        data_columns.push(image_column_lines.map((name)=>name.split(' ')[0]).slice(1));\r\n        data_columns.push(\"label imagenum objectnum x y\".split(\" \"));\r\n        return data_columns\r\n    }\r\n    getDataHandlerandStartingTrainingSet = async function() {\r\n        var data_types = [\r\n            'column_lines',\r\n            'object_data',\r\n            'image_data',\r\n            'training_data'\r\n        ]  \r\n\r\n        var data = [];\r\n        var file_objects = this.getFiles();\r\n        var text_data = await this.getText(file_objects);\r\n        var column_lines = this.getColumnLines(text_data[0]);\r\n        // console.log(text_data[1])\r\n        // console.log(column_lines[0])\r\n        var dp = new DataProvider({'object_data' : text_data[1], 'image_data' : text_data[2], \r\n                                       'object_columns' : column_lines[0], 'image_columns' : column_lines[1]})\r\n        var tt = new TrainingTable( text_data[3].slice(1) , column_lines[2])\r\n        return {'data_provider' : dp, 'training_data' : {'features' : column_lines[0],  'training_table' :  tt}}\r\n\r\n\r\n        // var image_data = text_data[2].map(data_row=>{ return _.zipObject(column_lines[1], data_row)})\r\n        // var object_data = text_data[1].map(data_row=>{ return _.zipObject(column_lines[0], data_row)})\r\n        // var training_data = text_data[3].map(data_row=>{ return _.zipObject(column_lines[2], data_row)})\r\n\r\n \r\n\r\n\r\n    }\r\n\r\n}","export default class UserUploadFileHandler {\r\n\r\n    constructor(fileListObject) {\r\n\r\n        this.fileListObject = fileListObject\r\n    }\r\n    findAllFiles(file_names) {\r\n        return file_names.map(file_name => {\r\n            return this.findFile(file_name)\r\n        })\r\n    }\r\n    findFile = (file_name) => {\r\n        const fileIndex = Array.from(this.fileListObject.target.files).findIndex((elem) => {\r\n            return (elem.name === file_name);\r\n        });\r\n        return this.fileListObject.target.files[fileIndex];\r\n    }\r\n    fileReaderPromiseText =  function(file_result) {\r\n        return new Promise((resolve, reject)=> {\r\n            var fr = new FileReader();\r\n            fr.onload = () => {\r\n                resolve(fr.result)\r\n            };\r\n            fr.readAsText(file_result)\r\n        })\r\n    }\r\n    fileReaderPromiseImage(file_result) {\r\n        return new Promise((resolve, reject)=> {\r\n            var fr = new FileReader();\r\n            fr.onload = () => {\r\n                resolve(fr.result)\r\n            };\r\n            fr.readAsDataURL(file_result)\r\n        })\r\n    }\r\n\r\n    \r\n\r\n}","import React from 'react';\r\nimport { Row, Col, Container } from 'reactstrap';\r\nimport { Box, Button, Grid, IconButton, Menu, MenuItem, Card } from '@material-ui/core';\r\nimport logo from '../cpa_logo(blue).svg';\r\nimport { Image, Dropdown, DropdownButton } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { green } from '@material-ui/core/colors';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n//import UploadButton from './UploadButton'\r\n\r\nimport Evaluate from './AbbyUIButtons/UIEvaluateButton';\r\nimport ScoreAll from './AbbyUIButtons/UIScoreAllButton';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport jones from '../jones.jpg';\r\n\r\nimport { GridContextProvider, GridDropZone, GridItem, swap, move } from 'react-grid-dnd';\r\n\r\nimport '../dndstyles.css';\r\nimport * as tf from '@tensorflow/tfjs';\r\nimport * as tfvis from '@tensorflow/tfjs-vis';\r\nimport UploadButton from './UploadButton';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t},\r\n\twrapper: {\r\n\t\tmargin: theme.spacing(1),\r\n\t\tposition: 'relative',\r\n\t},\r\n\tbuttonSuccess: {\r\n\t\tbackgroundColor: green[500],\r\n\t\t'&:hover': {\r\n\t\t\tbackgroundColor: green[700],\r\n\t\t},\r\n\t},\r\n\tfabProgress: {\r\n\t\tcolor: green[500],\r\n\t\tposition: 'absolute',\r\n\t\ttop: -6,\r\n\t\tleft: -6,\r\n\t\tzIndex: 1,\r\n\t},\r\n\tbuttonProgress: {\r\n\t\tcolor: green[500],\r\n\t\tposition: 'absolute',\r\n\t\ttop: '50%',\r\n\t\tleft: '50%',\r\n\t\tmarginTop: -12,\r\n\t\tmarginLeft: -12,\r\n\t},\r\n}));\r\n\r\nfunction TestUIMVP() {\r\n\tconst [anchorEl, setAnchorEl] = React.useState(null);\r\n\tconst [dataProvider, setDataProvider] = React.useState(null);\r\n\r\n\t// var classifierManager = null;\r\n\t// const [classifierManager, setClassifierManager] = React.useState(null)\r\n\tconst [fileListObject, setFileListObject] = React.useState(null);\r\n\tconst [tileState, setTileState] = React.useState(constructTileState([jones, jones, jones]));\r\n\r\n\tconst [fetchButtonEnabled, setFetchButtonEnabled] = React.useState(false);\r\n\tconst [trainButtonEnabled, setTrainButtonEnabled] = React.useState(false);\r\n\tconst [evaluateButtonEnabled, setEvaluateButtonEnabled] = React.useState(false);\r\n\tconst [downloadButtonEnabled, setDownloadButtonEnabled] = React.useState(false);\r\n\tconst [uploadButtonEnabled, setUploadButtonEnabled] = React.useState(true);\r\n\tconst [scoreAllButtonEnabled, setscoreAllButtonEnabled] = React.useState(false);\r\n\tconst [uploading, setUploading] = React.useState(false);\r\n\tconst [success, setSuccess] = React.useState(false);\r\n\tconst [fetching, setFetching] = React.useState(false);\r\n\tconst [openFetchDropdown, setOpenFetchDropdown] = React.useState(false);\r\n\tconst [openTrainDropdown, setOpenTrainDropdown] = React.useState(false);\r\n\r\n\tconst [canvasWebWorker, setCanvasWebWorker] = React.useState(null);\r\n\tconst [dataWebWorker, setDataWebWorker] = React.useState(null);\r\n\tconst [classifierWebWorker, setClassifierWebWorker] = React.useState(null);\r\n\tconst [confusionMatrix, setConfusionMatrix] = React.useState([\r\n\t\t[0, 0],\r\n\t\t[0, 0],\r\n\t]);\r\n\tconst [trainingObject, setTrainingObject] = React.useState(null);\r\n\tconst [activeCellPairs, setActiveCellPairs] = React.useState([]);\r\n\tconst [trainingCellPairs, setTrainingCellPairs] = React.useState([]);\r\n\r\n\tconst [scoreTableIsUpToDate, setScoreTableIsUpToDate] = React.useState(false);\r\n\tconst [scoreTableObject, setScoreTableObject] = React.useState(null);\r\n\r\n\tconst trainingLossCanvasParentRef = React.useRef();\r\n\tconst trainingAccuracyCanvasParentRef = React.useRef();\r\n\r\n\tReact.useEffect(() => {\r\n\t\tconst dataToCanvasWorkerChannel = new MessageChannel();\r\n\t\tconst dataToClassifierWorkerChannel = new MessageChannel();\r\n\r\n\t\tconst dataWebWorker = constructWebWorker('../dataWorker.js', 'dataWebWorker');\r\n\t\tdataWebWorker.postMessage({ action: 'connectToCanvasWorker' }, [dataToCanvasWorkerChannel.port1]);\r\n\t\tdataWebWorker.postMessage({ action: 'connectToClassifierWorker' }, [dataToClassifierWorkerChannel.port1]);\r\n\t\tsetDataWebWorker(dataWebWorker);\r\n\r\n\t\tconst canvasWebWorker = constructWebWorker('../canvasWorker.js', 'CanvasWebWorker');\r\n\t\tcanvasWebWorker.postMessage({ action: 'connectToDataWorker' }, [dataToCanvasWorkerChannel.port2]);\r\n\t\tsetCanvasWebWorker(canvasWebWorker);\r\n\r\n\t\tconst classifierWebWorker = constructWebWorker('../classifierWorker.js', 'classifierWebWorker');\r\n\t\tclassifierWebWorker.postMessage({ action: 'connectToDataWorker' }, [dataToClassifierWorkerChannel.port2]);\r\n\t\tsetClassifierWebWorker(classifierWebWorker);\r\n\t}, []);\r\n\r\n\tconst constructWebWorker = function (sourcePath, name) {\r\n\t\tconst worker = new Worker(sourcePath);\r\n\t\tworker.addEventListener('error', (event) => {\r\n\t\t\tconsole.log(`[${name}] Error`, event.message, event);\r\n\t\t});\r\n\t\treturn worker;\r\n\t};\r\n\r\n\tconst classes = useStyles();\r\n\tconst buttonClassname = clsx({\r\n\t\t[classes.buttonSuccess]: success,\r\n\t});\r\n\r\n\tconst N = 20;\r\n\r\n\tconst handleClickFetchDropDown = (event) => {\r\n\t\tsetAnchorEl(event.currentTarget);\r\n\t};\r\n\r\n\tconst handleCloseFetchDropDown = (fetchType) => {\r\n\t\tsetAnchorEl(null);\r\n\t\tif (fetchType !== undefined && fetchType !== null) {\r\n\t\t\thandleFetch(fetchType);\r\n\t\t}\r\n\t};\r\n\r\n\t// \tconst handleCloseFetchDropDown = () => {\r\n\t//         setAnchorEl(null)\r\n\t//     };\r\n\t//     const handleClickFetchDropDownOption = (fetchType) => {\r\n\t//       setAnchorEl(null)\r\n\t//        if (fetchType !== undefined) {\r\n\t//           handleFetch(fetchType)\r\n\t//        }\r\n\t//   };\r\n\r\n\tconst disableIterationButtons = () => {\r\n\t\tsetFetchButtonEnabled(false);\r\n\t\tsetTrainButtonEnabled(false);\r\n\t\tsetDownloadButtonEnabled(false);\r\n\t\t//   setEvaluateButtonEnabled(false)\r\n\t};\r\n\tconst enableIterationButtons = () => {\r\n\t\tsetFetchButtonEnabled(true);\r\n\t\tsetTrainButtonEnabled(true);\r\n\t\tsetDownloadButtonEnabled(true);\r\n\t\tsetEvaluateButtonEnabled(true);\r\n\t};\r\n\r\n\tconst handleFetch = async (fetchType) => {\r\n\t\tconsole.log('Fetch!');\r\n\t\tif ((fetchType === undefined) | (fetchType == null)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetFetching(true);\r\n\t\tconst emptyTileState = { unclassified: [], positive: [], negative: [] };\r\n\t\tsetTileState(emptyTileState);\r\n\t\tswitch (fetchType) {\r\n\t\t\tcase 'Random':\r\n\t\t\t\tworkerActionPromise(dataWebWorker, 'get', { getType: 'cellPairs', getArgs: { amount: 16 } })\r\n\t\t\t\t\t.then((event) => {\r\n\t\t\t\t\t\tconst cellPairs = event.data.getResult;\r\n\t\t\t\t\t\tsetActiveCellPairs(cellPairs);\r\n\t\t\t\t\t\treturn workerActionPromise(canvasWebWorker, 'get', {\r\n\t\t\t\t\t\t\tgetType: 'blobUrlsFromCellPairs',\r\n\t\t\t\t\t\t\tgetArgs: { cellPairs },\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then((event) => {\r\n\t\t\t\t\t\tconst newTileState = constructTileState(event.data.blobUrls);\r\n\t\t\t\t\t\tsetTileState(newTileState);\r\n\t\t\t\t\t\tsetFetching(false);\r\n\t\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Positive':\r\n\t\t\tcase 'Negative':\r\n\t\t\t\tworkerActionPromise(dataWebWorker, 'get', { getType: 'cellPairs', getArgs: { amount: 100 } })\r\n\t\t\t\t\t.then((event) => {\r\n\t\t\t\t\t\tconst cellPairs = event.data.getResult;\r\n\r\n\t\t\t\t\t\treturn workerActionPromise(classifierWebWorker, 'predictFilterCellPairs', {\r\n\t\t\t\t\t\t\tcellPairs,\r\n\t\t\t\t\t\t\tclassType: fetchType,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then((event) => {\r\n\t\t\t\t\t\tconst { filteredCellPairs } = event.data;\r\n\t\t\t\t\t\tconst slicedCellPairs = filteredCellPairs.slice(0, 16);\r\n\t\t\t\t\t\tsetActiveCellPairs(filteredCellPairs);\r\n\t\t\t\t\t\treturn workerActionPromise(canvasWebWorker, 'get', {\r\n\t\t\t\t\t\t\tgetType: 'blobUrlsFromCellPairs',\r\n\t\t\t\t\t\t\tgetArgs: { cellPairs: slicedCellPairs },\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then((event) => {\r\n\t\t\t\t\t\tconst newTileState = constructTileState(event.data.blobUrls);\r\n\t\t\t\t\t\tsetTileState(newTileState);\r\n\t\t\t\t\t\tsetFetching(false);\r\n\t\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Confusing': {\r\n\t\t\t\tworkerActionPromise(dataWebWorker, 'get', { getType: 'cellPairs', getArgs: { amount: 100 } })\r\n\t\t\t\t\t.then((event) => {\r\n\t\t\t\t\t\tconst cellPairs = event.data.getResult;\r\n\r\n\t\t\t\t\t\treturn workerActionPromise(classifierWebWorker, 'confusingFilterCellPairs', {\r\n\t\t\t\t\t\t\tcellPairs: cellPairs,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then((event) => {\r\n\t\t\t\t\t\tconst { sortedCellPairs } = event.data;\r\n\t\t\t\t\t\tconst slicedSortedCellPairs = sortedCellPairs.slice(0, 16);\r\n\t\t\t\t\t\tsetActiveCellPairs(slicedSortedCellPairs);\r\n\t\t\t\t\t\treturn workerActionPromise(canvasWebWorker, 'get', {\r\n\t\t\t\t\t\t\tgetType: 'blobUrlsFromCellPairs',\r\n\t\t\t\t\t\t\tgetArgs: { cellPairs: slicedSortedCellPairs },\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then((event) => {\r\n\t\t\t\t\t\tconst newTileState = constructTileState(event.data.blobUrls);\r\n\t\t\t\t\t\tsetTileState(newTileState);\r\n\t\t\t\t\t\tsetFetching(false);\r\n\t\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'TrainingPositive':\r\n\t\t\tcase 'TrainingNegative':\r\n\t\t\t\tconst positiveCellPairs = trainingObject.trainingData.map((dataRow) => ({\r\n\t\t\t\t\tImageNumber: dataRow[0],\r\n\t\t\t\t\tObjectNumber: dataRow[1],\r\n\t\t\t\t}));\r\n\t\t\t\tworkerActionPromise(classifierWebWorker, 'predictFilterCellPairs', {\r\n\t\t\t\t\tcellPairs: positiveCellPairs,\r\n\t\t\t\t\tclassType: fetchType === 'TrainingPositive' ? 'Positive' : 'Negative',\r\n\t\t\t\t})\r\n\t\t\t\t\t.then((event) => {\r\n\t\t\t\t\t\tconst { filteredCellPairs } = event.data;\r\n\t\t\t\t\t\tsetActiveCellPairs(filteredCellPairs);\r\n\t\t\t\t\t\treturn workerActionPromise(canvasWebWorker, 'get', {\r\n\t\t\t\t\t\t\tgetType: 'blobUrlsFromCellPairs',\r\n\t\t\t\t\t\t\tgetArgs: { cellPairs: filteredCellPairs },\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then((event) => {\r\n\t\t\t\t\t\tconst newTileState = constructTileState(event.data.blobUrls);\r\n\t\t\t\t\t\tsetTileState(newTileState);\r\n\t\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleTrain = async () => {\r\n\t\tconsole.log('Train!');\r\n\t\tconst positiveCellPairs = tileState.positive.map((element) => activeCellPairs[element.id]);\r\n\t\tconst negativeCellPairs = tileState.negative.map((element) => activeCellPairs[element.id]);\r\n\r\n\t\tconst totalCellPairs = positiveCellPairs.concat(negativeCellPairs);\r\n\t\tconst newLabels = new Array(positiveCellPairs.length)\r\n\t\t\t.fill(1)\r\n\t\t\t.concat(new Array(negativeCellPairs.length).fill(0));\r\n\r\n\t\tsetScoreTableIsUpToDate(false);\r\n\t\tsetTileState(constructTileState([]));\r\n\t\tsetActiveCellPairs([]);\r\n\r\n\t\tworkerActionPromise(dataWebWorker, 'get', {\r\n\t\t\tgetType: 'objectRowsFromCellpairs',\r\n\t\t\tgetArgs: { cellPairs: totalCellPairs },\r\n\t\t}).then((event) => {\r\n\t\t\tconst dataRows = event.data.getResult;\r\n\r\n\t\t\tconst newTrainingObject = {\r\n\t\t\t\tclassifierType: 'LogisticRegression',\r\n\t\t\t\ttrainingData: [...trainingObject.trainingData, ...dataRows],\r\n\t\t\t\ttrainingLabels: [...trainingObject.trainingLabels, ...newLabels],\r\n\t\t\t\tfeatureIndicesToUse: trainingObject.featureIndicesToUse,\r\n\t\t\t};\r\n\t\t\treturn trainSequencePromise(newTrainingObject);\r\n\t\t});\r\n\t};\r\n\r\n\tconst trainSequencePromise = function (currentTrainingObject) {\r\n\t\tsetOpenTrainDropdown(true);\r\n\t\tvar UUID = null;\r\n\t\tlet updateCanvasesListener = (event) => {\r\n\t\t\tif (UUID == event.data.uuid) {\r\n\t\t\t\tswitch (event.data.action) {\r\n\t\t\t\t\tcase 'updateTrainingLossCanvas':\r\n\t\t\t\t\t\ttfvis.show.history(trainingLossCanvasParentRef.current, event.data.trainLogs, event.data.ticks);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'updateTrainingAccuracyCanvas':\r\n\t\t\t\t\t\ttfvis.show.history(\r\n\t\t\t\t\t\t\ttrainingAccuracyCanvasParentRef.current,\r\n\t\t\t\t\t\t\tevent.data.trainLogs,\r\n\t\t\t\t\t\t\tevent.data.ticks\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tconsole.log(\"didn't render bad action\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tworkerActionPromise(classifierWebWorker, 'startTrainingGraphsConnection', {})\r\n\t\t\t.then((event) => {\r\n\t\t\t\tUUID = event.data.uuid;\r\n\t\t\t\tclassifierWebWorker.addEventListener('message', updateCanvasesListener);\r\n\t\t\t\treturn workerActionPromise(classifierWebWorker, 'train', { trainingObject: currentTrainingObject });\r\n\t\t\t})\r\n\t\t\t.then(() => {\r\n\t\t\t\tworkerActionPromise(classifierWebWorker, 'endTrainingGraphsConnection', {});\r\n\t\t\t\tclassifierWebWorker.removeEventListener('message', updateCanvasesListener);\r\n\t\t\t\treturn workerActionPromise(classifierWebWorker, 'confusionMatrix');\r\n\t\t\t})\r\n\t\t\t.then((event) => {\r\n\t\t\t\tconst newConfusionMatrix = event.data.confusionMatrix;\r\n\t\t\t\tsetConfusionMatrix(newConfusionMatrix);\r\n\t\t\t})\r\n\t\t\t.then(() => {\r\n\t\t\t\tsetTrainingObject(currentTrainingObject);\r\n\t\t\t\tsetOpenTrainDropdown(false);\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst workerActionPromise = function (worker, action, data) {\r\n\t\tconst UUID = uuidv4();\r\n\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tlet selfDestructingEventHandler = (event) => {\r\n\t\t\t\tif (event.data.uuid === UUID) {\r\n\t\t\t\t\tworker.removeEventListener('message', selfDestructingEventHandler);\r\n\t\t\t\t\tresolve(event);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tworker.addEventListener('message', selfDestructingEventHandler);\r\n\r\n\t\t\tworker.postMessage({ action, ...data, uuid: UUID });\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleUpload = async (eventObject) => {\r\n\t\tconsole.log('Upload!');\r\n\t\tsetUploading(true);\r\n\t\tworkerActionPromise(dataWebWorker, 'init', { fileListObject: eventObject.target.files })\r\n\t\t\t.then(() => {\r\n\t\t\t\treturn workerActionPromise(dataWebWorker, 'get', { getType: 'trainingObject' });\r\n\t\t\t})\r\n\t\t\t.then((event) => {\r\n\t\t\t\tconst initialTrainingObject = event.data.getResult;\r\n\t\t\t\treturn trainSequencePromise(initialTrainingObject);\r\n\t\t\t})\r\n\t\t\t.then(() => {\r\n\t\t\t\tsetUploading(false);\r\n\t\t\t\tsetSuccess(true);\r\n\t\t\t\tenableIterationButtons();\r\n\t\t\t\tsetUploadButtonEnabled(false);\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst handleScoreAll = async () => {\r\n\t\tconsole.log('Score All!');\r\n\t\tif (!scoreTableIsUpToDate) {\r\n\t\t\tconsole.log('Score All!');\r\n\t\t\treturn workerActionPromise(classifierWebWorker, 'scoreObjectData').then((event) => {\r\n\t\t\t\tconst newScoreTableObject = event.data.scoreTableObject;\r\n\t\t\t\tconsole.log(newScoreTableObject);\r\n\t\t\t\tsetScoreTableObject(newScoreTableObject);\r\n\t\t\t\tsetScoreTableIsUpToDate(true);\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleDownload = async () => {\r\n\t\tconsole.log('Download!');\r\n\t\treturn workerActionPromise(classifierWebWorker, 'getClassifier').then((event) => {\r\n\t\t\ttf.loadLayersModel(`indexeddb://${trainingObject.classifierType}`).then((model) => {\r\n\t\t\t\tmodel.save(`downloads://${trainingObject.classifierType}`);\r\n\t\t\t});\r\n\r\n\t\t\t// const classifier = event.data.classifier;\r\n\t\t\t// classifier.save(`downloads://${trainingObject.classifierType}`);\r\n\t\t});\r\n\t};\r\n\r\n\tfunction constructTileState(dataURLs) {\r\n\t\treturn {\r\n\t\t\tunclassified: dataURLs.map((dataURL, idx, info) => {\r\n\t\t\t\treturn { id: idx, address: dataURL, info: 'cell info, biology stuff' };\r\n\t\t\t}),\r\n\t\t\tpositive: [],\r\n\t\t\tnegative: [],\r\n\t\t};\r\n\t}\r\n\r\n\tfunction onChange(sourceId, sourceIndex, targetIndex, targetId) {\r\n\t\tif (targetId) {\r\n\t\t\tconst result = move(tileState[sourceId], tileState[targetId], sourceIndex, targetIndex);\r\n\t\t\treturn setTileState({\r\n\t\t\t\t...tileState,\r\n\t\t\t\t[sourceId]: result[0],\r\n\t\t\t\t[targetId]: result[1],\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tconst result = swap(tileState[sourceId], sourceIndex, targetIndex);\r\n\t\treturn setTileState({\r\n\t\t\t...tileState,\r\n\t\t\t[sourceId]: result,\r\n\t\t});\r\n\t}\r\n\r\n\tconst handleClickOpenFetchDropdown = () => {\r\n\t\tsetOpenFetchDropdown(true);\r\n\t};\r\n\r\n\tconst handleCloseFetchDropdown = () => {\r\n\t\tsetOpenFetchDropdown(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<GridContextProvider onChange={onChange}>\r\n\t\t\t<div style={{ overflowX: 'hidden', height: '100%', width: '100%' }}>\r\n\t\t\t\t<Row style={{}}>\r\n\t\t\t\t\t<Image\r\n\t\t\t\t\t\tsrc={logo}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tmarginLeft: '11%',\r\n\t\t\t\t\t\t\theight: '30%',\r\n\t\t\t\t\t\t\twidth: '25%',\r\n\t\t\t\t\t\t\tposition: 'relative',\r\n\t\t\t\t\t\t\tmaxHeight: '125px',\r\n\t\t\t\t\t\t\tmarginBottom: '2%',\r\n\t\t\t\t\t\t\tmarginTop: '2%',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t></Image>\r\n\r\n\t\t\t\t\t<Col style={{ left: '40%' }}>\r\n\t\t\t\t\t\t<div className={classes.root}>\r\n\t\t\t\t\t\t\t<div className={classes.wrapper}>\r\n\t\t\t\t\t\t\t\t<Tooltip title=\"Load Data\" aria-label=\"load data\">\r\n\t\t\t\t\t\t\t\t\t<Fab\r\n\t\t\t\t\t\t\t\t\t\taria-label=\"save\"\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\tcomponent=\"label\"\r\n\t\t\t\t\t\t\t\t\t\tclassName={buttonClassname}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ height: '5vw', width: '5vw' }}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{success ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<CheckIcon style={{ height: '50%', width: '50%' }} />\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t<CloudUploadIcon style={{ height: '50%', width: '50%' }} />\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\t\t\t\t\t\thidden\r\n\t\t\t\t\t\t\t\t\t\t\twebkitdirectory=\"true\"\r\n\t\t\t\t\t\t\t\t\t\t\tmozdirectory=\"true\"\r\n\t\t\t\t\t\t\t\t\t\t\tmsdirectory=\"true\"\r\n\t\t\t\t\t\t\t\t\t\t\todirectory=\"true\"\r\n\t\t\t\t\t\t\t\t\t\t\tdirectory=\"true\"\r\n\t\t\t\t\t\t\t\t\t\t\tmultiple\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(eventObject) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleUpload(eventObject);\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled={!uploadButtonEnabled}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Fab>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t{/* size={68}  */}\r\n\t\t\t\t\t\t\t\t{uploading && (\r\n\t\t\t\t\t\t\t\t\t<CircularProgress\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.fabProgress}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ height: '6vw', width: '6vw', marginTop: '4%', marginRight: '4%' }}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col style={{ left: '15%', marginTop: '1%' }}>\r\n\t\t\t\t\t\t<Tooltip title=\"Download\" aria-label=\"download\">\r\n\t\t\t\t\t\t\t<Fab\r\n\t\t\t\t\t\t\t\taria-label=\"save\"\r\n\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\tcomponent=\"label\"\r\n\t\t\t\t\t\t\t\tdisabled={!downloadButtonEnabled}\r\n\t\t\t\t\t\t\t\tonClick={handleDownload}\r\n\t\t\t\t\t\t\t\tstyle={{ height: '5vw', width: '5vw' }}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t<SaveAltIcon style={{ height: '50%', width: '50%' }} />\r\n\t\t\t\t\t\t\t</Fab>\r\n\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Grid container justify=\"center\" spacing={2} style={{ marginBottom: 15 }}>\r\n\t\t\t\t\t\t<Grid key={0} item>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tdisabled={!fetchButtonEnabled}\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\taria-controls=\"simple-menu\"\r\n\t\t\t\t\t\t\t\taria-haspopup=\"true\"\r\n\t\t\t\t\t\t\t\tonClick={handleClickFetchDropDown}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tFetch\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Menu\r\n\t\t\t\t\t\t\t\tid=\"simple-menu\"\r\n\t\t\t\t\t\t\t\tanchorEl={anchorEl}\r\n\t\t\t\t\t\t\t\tkeepMounted\r\n\t\t\t\t\t\t\t\topen={Boolean(anchorEl)}\r\n\t\t\t\t\t\t\t\tonClose={() => handleCloseFetchDropDown(null)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<MenuItem onClick={() => handleCloseFetchDropDown('Random')}>Random</MenuItem>\r\n\t\t\t\t\t\t\t\t<MenuItem onClick={() => handleCloseFetchDropDown('Positive')}>Positive</MenuItem>\r\n\t\t\t\t\t\t\t\t<MenuItem onClick={() => handleCloseFetchDropDown('Negative')}>Negative</MenuItem>\r\n\t\t\t\t\t\t\t\t<MenuItem onClick={handleClickOpenFetchDropdown}>By Image</MenuItem>\r\n\t\t\t\t\t\t\t\t<MenuItem onClick={() => handleCloseFetchDropDown('TrainingPositive')}>\r\n\t\t\t\t\t\t\t\t\tTraining Set Positive\r\n\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t<MenuItem onClick={() => handleCloseFetchDropDown('TrainingNegative')}>\r\n\t\t\t\t\t\t\t\t\tTraining Set Negative\r\n\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t<MenuItem onClick={() => handleCloseFetchDropDown('Confusing')}>Confusing</MenuItem>\r\n\r\n\t\t\t\t\t\t\t\t<Dialog open={openFetchDropdown} onClose={() => handleCloseFetchDropDown(null)}>\r\n\t\t\t\t\t\t\t\t\t<DialogTitle>Fetch By Image</DialogTitle>\r\n\t\t\t\t\t\t\t\t\t<DialogContent>\r\n\t\t\t\t\t\t\t\t\t\t<DialogContentText>\r\n\t\t\t\t\t\t\t\t\t\t\tSelect the image number you would like to fetch from.\r\n\t\t\t\t\t\t\t\t\t\t</DialogContentText>\r\n\t\t\t\t\t\t\t\t\t\t<form noValidate>\r\n\t\t\t\t\t\t\t\t\t\t\t<FormControl>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<InputLabel>Image</InputLabel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Select autoFocus>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem value=\"1\">1</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem value=\"2\">2</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem value=\"3\">3</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem value=\"4\">4</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem value=\"5\">5</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t\t\t</DialogContent>\r\n\t\t\t\t\t\t\t\t\t<DialogActions>\r\n\t\t\t\t\t\t\t\t\t\t<Button onClick={handleCloseFetchDropdown} color=\"primary\">\r\n\t\t\t\t\t\t\t\t\t\t\tClose\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</DialogActions>\r\n\t\t\t\t\t\t\t\t</Dialog>\r\n\t\t\t\t\t\t\t</Menu>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid key={1} item>\r\n\t\t\t\t\t\t\t{/* style = {{height: \"5vw\", width:\"10vw\", minHeight:2, maxHeight: 35, maxwidth: 50, fontSize: \"max(1.5vw, 20)\"}}  */}\r\n\t\t\t\t\t\t\t<Button disabled={!trainButtonEnabled} variant=\"contained\" onClick={handleTrain}>\r\n\t\t\t\t\t\t\t\tTrain\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Dialog fullWidth={500} open={openTrainDropdown}>\r\n\t\t\t\t\t\t\t\t<DialogTitle>Loss and Accuracy</DialogTitle>\r\n\t\t\t\t\t\t\t\t<DialogContent>\r\n\t\t\t\t\t\t\t\t\t{/* <img width={100} height={100} src={jones}></img> */}\r\n\t\t\t\t\t\t\t\t\t<div width={300} ref={trainingAccuracyCanvasParentRef}></div>\r\n\t\t\t\t\t\t\t\t\t<div width={300} ref={trainingLossCanvasParentRef}></div>\r\n\t\t\t\t\t\t\t\t</DialogContent>\r\n\t\t\t\t\t\t\t</Dialog>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid key={2} item>\r\n\t\t\t\t\t\t\t{/* <Button disabled={!evaluateButtonEnabled} variant=\"contained\" onClick={()=>{}}>Evaluate</Button>  */}\r\n\t\t\t\t\t\t\t{/* TODO: need to fix button disabled DONE*/}\r\n\t\t\t\t\t\t\t{!evaluateButtonEnabled ? (\r\n\t\t\t\t\t\t\t\t<Button disabled={!evaluateButtonEnabled} variant=\"contained\" onClick={() => {}}>\r\n\t\t\t\t\t\t\t\t\tEvaluate\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<Evaluate confusionMatrix={confusionMatrix}></Evaluate>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid key={3} item>\r\n\t\t\t\t\t\t\t{/* <Button  disabled={!scoreAllButtonEnabled} variant=\"contained\" onClick={()=>{}}>Score All</Button> */}\r\n\t\t\t\t\t\t\t{/* TODO: need to fix button disabled DONE*/}\r\n\r\n\t\t\t\t\t\t\t{!evaluateButtonEnabled ? (\r\n\t\t\t\t\t\t\t\t<Button disabled={!evaluateButtonEnabled} variant=\"contained\" onClick={handleScoreAll}>\r\n\t\t\t\t\t\t\t\t\tScore All\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<ScoreAll handleScoreAll={handleScoreAll}></ScoreAll>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Row>\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<label\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\ttextAlign: 'left',\r\n\t\t\t\t\t\t\tbackgroundColor: 'white',\r\n\t\t\t\t\t\t\tpaddingLeft: '10%',\r\n\t\t\t\t\t\t\tmarginBottom: '0.5%',\r\n\t\t\t\t\t\t\tuserSelect: 'none',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tUnclassified{' '}\r\n\t\t\t\t\t</label>\r\n\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<GridDropZone\r\n\t\t\t\t\t\t\tclassName=\"dropzone \"\r\n\t\t\t\t\t\t\tid=\"unclassified\"\r\n\t\t\t\t\t\t\tboxesPerRow={8}\r\n\t\t\t\t\t\t\trowHeight={80}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\theight: '20vw',\r\n\t\t\t\t\t\t\t\tmaxHeight: 200,\r\n\t\t\t\t\t\t\t\tminHeight: 150,\r\n\t\t\t\t\t\t\t\tmarginBottom: 10,\r\n\t\t\t\t\t\t\t\tmarginLeft: '10%',\r\n\t\t\t\t\t\t\t\twidth: '80%',\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{!fetching ? (\r\n\t\t\t\t\t\t\t\ttileState.unclassified.map((item) => (\r\n\t\t\t\t\t\t\t\t\t<GridItem\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"hoverTest\"\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\theight: '15vw',\r\n\t\t\t\t\t\t\t\t\t\t\twidth: '15vw',\r\n\t\t\t\t\t\t\t\t\t\t\tminHeight: 80,\r\n\t\t\t\t\t\t\t\t\t\t\tminWidth: 80,\r\n\t\t\t\t\t\t\t\t\t\t\tmaxHeight: 120,\r\n\t\t\t\t\t\t\t\t\t\t\tmaxWidth: 120,\r\n\t\t\t\t\t\t\t\t\t\t\tpadding: 10,\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tkey={item.id}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"grid-item\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"grid-item-content\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundImage: `url(${item.address})`,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\theight: '5vw',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '5vw',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"hoverText\">{item.info}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</GridItem>\r\n\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<CircularProgress\r\n\t\t\t\t\t\t\t\t\tstyle={{ height: '6vw', width: '6vw', marginTop: '6%', marginLeft: '45%' }}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</GridDropZone>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<label\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttextAlign: 'left',\r\n\t\t\t\t\t\t\t\tbackgroundColor: 'white',\r\n\t\t\t\t\t\t\t\tpaddingLeft: '11%',\r\n\t\t\t\t\t\t\t\tuserSelect: 'none',\r\n\t\t\t\t\t\t\t\tmarginBottom: '0.5%',\r\n\t\t\t\t\t\t\t\tmarginTop: 0,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tPositive\r\n\t\t\t\t\t\t</label>\r\n\r\n\t\t\t\t\t\t<label\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttextAlign: 'left',\r\n\t\t\t\t\t\t\t\tbackgroundColor: 'white',\r\n\t\t\t\t\t\t\t\tpaddingRight: '8%',\r\n\t\t\t\t\t\t\t\tuserSelect: 'none',\r\n\t\t\t\t\t\t\t\tmargin: 'auto',\r\n\t\t\t\t\t\t\t\tmarginBottom: '0.5%',\r\n\t\t\t\t\t\t\t\tmarginTop: 0,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tNegative\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<GridDropZone\r\n\t\t\t\t\t\t\tclassName=\"dropzone positive\"\r\n\t\t\t\t\t\t\tid=\"positive\"\r\n\t\t\t\t\t\t\tboxesPerRow={4}\r\n\t\t\t\t\t\t\trowHeight={0}\r\n\t\t\t\t\t\t\tstyle={{ height: '20vw', maxHeight: 200, minHeight: 150 }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{tileState.positive.map((item) => (\r\n\t\t\t\t\t\t\t\t<GridItem\r\n\t\t\t\t\t\t\t\t\tclassName=\"hoverTest\"\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\theight: '15vw',\r\n\t\t\t\t\t\t\t\t\t\twidth: '15vw',\r\n\t\t\t\t\t\t\t\t\t\tminHeight: 80,\r\n\t\t\t\t\t\t\t\t\t\tminWidth: 80,\r\n\t\t\t\t\t\t\t\t\t\tmaxHeight: 105,\r\n\t\t\t\t\t\t\t\t\t\tmaxWidth: 105,\r\n\t\t\t\t\t\t\t\t\t\tpadding: 10,\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tkey={item.id}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<div className=\"grid-item\">\r\n\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"grid-item-content\"\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tbackgroundImage: `url(${item.address})`,\r\n\t\t\t\t\t\t\t\t\t\t\t\theight: '5vw',\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '5vw',\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"hoverText\">{item.info}</span>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</GridItem>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</GridDropZone>\r\n\r\n\t\t\t\t\t\t<GridDropZone\r\n\t\t\t\t\t\t\tclassName=\"dropzone negative\"\r\n\t\t\t\t\t\t\tid=\"negative\"\r\n\t\t\t\t\t\t\tboxesPerRow={4}\r\n\t\t\t\t\t\t\trowHeight={80}\r\n\t\t\t\t\t\t\tstyle={{ height: '20vw', maxHeight: 200, minHeight: 150 }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{tileState.negative.map((item) => (\r\n\t\t\t\t\t\t\t\t<GridItem\r\n\t\t\t\t\t\t\t\t\tclassName=\"hoverTest\"\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\theight: '15vw',\r\n\t\t\t\t\t\t\t\t\t\twidth: '15vw',\r\n\t\t\t\t\t\t\t\t\t\tminHeight: 80,\r\n\t\t\t\t\t\t\t\t\t\tminWidth: 80,\r\n\t\t\t\t\t\t\t\t\t\tmaxHeight: 105,\r\n\t\t\t\t\t\t\t\t\t\tmaxWidth: 105,\r\n\t\t\t\t\t\t\t\t\t\tpadding: 10,\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tkey={item.address}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<div className=\"grid-item\">\r\n\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"grid-item-content\"\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tbackgroundImage: `url(${item.address})`,\r\n\t\t\t\t\t\t\t\t\t\t\t\theight: '5vw',\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '5vw',\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"hoverText\">{item.info}</span>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</GridItem>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</GridDropZone>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</GridContextProvider>\r\n\t);\r\n}\r\n\r\nexport default TestUIMVP;\r\n","/**\n * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n *\n * @private\n * @param {Array} props The property identifiers.\n * @param {Array} values The property values.\n * @param {Function} assignFunc The function to assign values.\n * @returns {Object} Returns the new object.\n */\nfunction baseZipObject(props, values, assignFunc) {\n  var index = -1,\n      length = props.length,\n      valsLength = values.length,\n      result = {};\n\n  while (++index < length) {\n    var value = index < valsLength ? values[index] : undefined;\n    assignFunc(result, props[index], value);\n  }\n  return result;\n}\n\nmodule.exports = baseZipObject;\n","var assignValue = require('./_assignValue'),\n    baseZipObject = require('./_baseZipObject');\n\n/**\n * This method is like `_.fromPairs` except that it accepts two arrays,\n * one of property identifiers and one of corresponding values.\n *\n * @static\n * @memberOf _\n * @since 0.4.0\n * @category Array\n * @param {Array} [props=[]] The property identifiers.\n * @param {Array} [values=[]] The property values.\n * @returns {Object} Returns the new object.\n * @example\n *\n * _.zipObject(['a', 'b'], [1, 2]);\n * // => { 'a': 1, 'b': 2 }\n */\nfunction zipObject(props, values) {\n  return baseZipObject(props || [], values || [], assignValue);\n}\n\nmodule.exports = zipObject;\n","export default __webpack_public_path__ + \"static/jones-885674426137aa7117b916008a9d4f44.jpg\";"],"sourceRoot":""}