{"version":3,"sources":["webpack://gatsby-test/./node_modules/@material-ui/icons/HelpOutline.js","webpack://gatsby-test/./node_modules/@material-ui/core/esm/FormControlLabel/FormControlLabel.js","webpack://gatsby-test/./node_modules/@material-ui/core/esm/internal/SwitchBase.js","webpack://gatsby-test/./node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","webpack://gatsby-test/./node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","webpack://gatsby-test/./node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","webpack://gatsby-test/./node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","webpack://gatsby-test/./src/pages/DownloadButton.js","webpack://gatsby-test/./node_modules/@material-ui/core/esm/AppBar/AppBar.js","webpack://gatsby-test/./src/pages/Help.js","webpack://gatsby-test/./src/pages/index.js"],"names":["_interopRequireDefault","_interopRequireWildcard","exports","React","_default","default","createElement","d","FormControlLabel","props","ref","checked","classes","className","control","disabledProp","disabled","label","inputRef","_props$labelPlacement","labelPlacement","other","name","onChange","value","muiFormControl","useFormControl","controlProps","forEach","key","root","concat","capitalize","Typography","component","withStyles","theme","display","alignItems","cursor","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","labelPlacementStart","flexDirection","labelPlacementTop","labelPlacementBottom","color","palette","text","SwitchBase","autoFocus","checkedProp","checkedIcon","defaultChecked","icon","id","inputProps","onBlur","onFocus","readOnly","required","tabIndex","type","_useControlled","useControlled","controlled","Boolean","state","_useControlled2","setCheckedState","hasLabelFor","IconButton","role","undefined","event","input","newChecked","target","padding","position","opacity","width","height","top","left","margin","zIndex","createSvgIcon","defaultCheckedIcon","CheckBox","defaultIcon","CheckBoxOutlineBlank","defaultIndeterminateIcon","IndeterminateCheckBox","Checkbox","_props$checkedIcon","_props$color","_props$icon","iconProp","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","indeterminateIconProp","_props$size","size","fontSize","secondary","colorPrimary","primary","main","backgroundColor","action","hoverOpacity","colorSecondary","open","setOpen","downloadClassifer","setDownloadClassifer","setDownloadTrainingSet","Tooltip","title","aria-label","Fab","downloadButtonEnabled","onClick","style","positive","SaveAlt","Dialog","onClose","aria-labelledby","DialogContent","FormLabel","Button","variant","bottom","console","log","handleDownload","AppBar","_props$position","Paper","square","elevation","backgroundColorDefault","grey","boxSizing","appBar","flexShrink","positionFixed","right","positionAbsolute","positionSticky","positionStatic","positionRelative","colorDefault","getContrastText","contrastText","colorInherit","colorTransparent","Transition","Slide","direction","handleClose","HelpOutline","fullScreen","TransitionComponent","Toolbar","Close","DialogTitle","DialogContentText","href","anchorEl","setAnchorEl","unclassified","negative","tileState","setTileState","fetchButtonEnabled","setFetchButtonEnabled","trainButtonEnabled","setTrainButtonEnabled","evaluateButtonEnabled","setEvaluateButtonEnabled","setDownloadButtonEnabled","uploadButtonEnabled","setUploadButtonEnabled","uploading","setUploading","success","setSuccess","fetching","setFetching","initialFetchingPositiveNegative","setInitialFetchingPositiveNegative","openFetchDropdown","setOpenFetchDropdown","openTrainDropdown","setOpenTrainDropdown","canvasWebWorker","setCanvasWebWorker","dataWebWorker","setDataWebWorker","classifierWebWorker","setClassifierWebWorker","confusionMatrix","setConfusionMatrix","trainingObject","setTrainingObject","scoreTableIsUpToDate","setScoreTableIsUpToDate","scoreTable","setScoreTable","scoreAlphas","setScoreAlphas","histogramData","setHistogramData","setAlpha","setBeta","trainingLossCanvasParentRef","trainingAccuracyCanvasParentRef","selectedFetchImageNumber","setSelectedFetchImageNumber","fetchImageNumberButtonEnabled","setFetchImageNumberButtonEnabled","cellBigPictureDialogOpen","setCellBigPictureDialogOpen","jones","bigPictureSource","setBigPictureSource","bigPictureTitle","setBigPictureTitle","currentlyScoring","setCurrentlyScoring","scoreTableCsvString","setScoreTableCsvString","dataToCanvasWorkerChannel","MessageChannel","dataToClassifierWorkerChannel","constructWebWorker","postMessage","port1","port2","sourcePath","worker","Worker","addEventListener","message","handleCloseFetchDropDown","fetchType","handleFetch","handleOpenCellBigPicture","cellPair","ImageNumber","ObjectNumber","workerActionPromise","getType","getArgs","then","data","blobUrl","handleOpenBigPicture","imageNumber","clearedUnclassifiedTileState","amount","cellPairs","getResult","blobUrls","replaceUnclassifiedTileStatePromise","newTileState","accumCellPairs","iterationCount","totalIterationCount","length","classType","filteredCellPairs","i","sampledCellPair","notYetSampled","j","push","window","confirm","slicedCellPairs","slice","sortedCellPairs","slicedSortedCellPairs","alert","shuffledSliceCellPairs","cellPairIndicesLeft","Array","fill","map","e","randomIndexIndex","Math","floor","random","randomIndex","splice","trainingData","dataRow","positiveCellPairs","filter","idx","trainingLabels","negativeCellPairs","desiredCellPairs","handleTrain","element","totalCellPairs","newLabels","dataRows","newTrainingObject","classifierType","featureIndicesToUse","trainSequencePromise","currentTrainingObject","UUID","updateCanvasesListener","uuid","tfvis","current","trainLogs","ticks","loss","accuracy","removeEventListener","newConfusionMatrix","uuidv4","Promise","resolve","selfDestructingEventHandler","handleUpload","eventObject","fileListObject","files","initialTrainingObject","zeros","ones","constructTileStatePromiseByClass","dataToCsvString","headers","csvContent","join","l","handleScoreAll","newScoreTableObject","scoreTableObject","scoreDataRows","Object","keys","imageToCountsMap","parseInt","total","ratio","ratios","adjustratio","adjustedRatios","alphaValue","alphas","betaValue","adjustedRatiosData","values","x","csvdata","createTrainingSetTextFromTileState","result","Date","toLocaleString","cellData","X","Y","downloadType","trainingSetText","downloadFile","tf","model","save","error","lastTileState","newDataURLs","newCellPairs","all","cellDatas","unclassifiedTileState","dataURL","address","info","dataURLs","cellStates","handleClickCloseImNumFetchDropdown","sourceId","sourceIndex","targetIndex","targetId","move","swap","overflowX","marginTop","src","logo","maxHeight","marginBottom","outlineColor","container","justify","spacing","item","aria-controls","aria-haspopup","currentTarget","keepMounted","onSubmit","preventDefault","noValidate","step","min","fullWidth","textAlign","paddingLeft","userSelect","boxesPerRow","rowHeight","minHeight","minWidth","maxWidth","onDoubleClick","backgroundImage","justifyContent","paddingRight","overflowY","alignSelf"],"mappings":"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","file":"component---src-pages-index-js-0f16bae036242eccde25.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11 18h2v-2h-2v2zm1-16C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm0-14c-2.21 0-4 1.79-4 4h2c0-1.1.9-2 2-2s2 .9 2 2c0 2-3 1.75-3 5h2c0-2.25 3-2.5 3-5 0-2.21-1.79-4-4-4z\"\n}), 'HelpOutline');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { useFormControl } from '../FormControl';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      cursor: 'pointer',\n      // For correct alignment with the text.\n      verticalAlign: 'middle',\n      WebkitTapHighlightColor: 'transparent',\n      marginLeft: -11,\n      marginRight: 16,\n      // used for row presentation of radio/checkbox\n      '&$disabled': {\n        cursor: 'default'\n      }\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"start\"`. */\n    labelPlacementStart: {\n      flexDirection: 'row-reverse',\n      marginLeft: 16,\n      // used for row presentation of radio/checkbox\n      marginRight: -11\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"top\"`. */\n    labelPlacementTop: {\n      flexDirection: 'column-reverse',\n      marginLeft: 16\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"bottom\"`. */\n    labelPlacementBottom: {\n      flexDirection: 'column',\n      marginLeft: 16\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the label's Typography component. */\n    label: {\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      }\n    }\n  };\n};\n/**\n * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nvar FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(props, ref) {\n  var checked = props.checked,\n      classes = props.classes,\n      className = props.className,\n      control = props.control,\n      disabledProp = props.disabled,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$labelPlacement = props.labelPlacement,\n      labelPlacement = _props$labelPlacement === void 0 ? 'end' : _props$labelPlacement,\n      name = props.name,\n      onChange = props.onChange,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"className\", \"control\", \"disabled\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"]);\n\n  var muiFormControl = useFormControl();\n  var disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  var controlProps = {\n    disabled: disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(function (key) {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"label\", _extends({\n    className: clsx(classes.root, className, labelPlacement !== 'end' && classes[\"labelPlacement\".concat(capitalize(labelPlacement))], disabled && classes.disabled),\n    ref: ref\n  }, other), /*#__PURE__*/React.cloneElement(control, controlProps), /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    className: clsx(classes.label, disabled && classes.disabled)\n  }, label));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControlLabel'\n})(FormControlLabel);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      iconProp = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIconProp = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  var icon = indeterminate ? indeterminateIconProp : iconProp;\n  var indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: icon.props.fontSize === undefined && size === \"small\" ? size : icon.props.fontSize\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: indeterminateIcon.props.fontSize === undefined && size === \"small\" ? size : indeterminateIcon.props.fontSize\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import React from 'react';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Row, Col, Container } from 'reactstrap';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\n\r\n\r\nfunction DownloadButton(props){\r\n    const [open, setOpen] = React.useState(false);\r\n    const [downloadClassifer, setDownloadClassifer] = React.useState(false);\r\n    const [downloadTrainingSet, setDownloadTrainingSet] = React.useState(false);\r\n\r\n    const handleDownloadClassifer = (event) => {\r\n        setDownloadClassifer(true)\r\n    }\r\n\r\n    const handleDownloadTrainingSet = (event) => {\r\n        setDownloadTrainingSet(true)\r\n    }\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n      };\r\n    \r\n      const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n\r\n   function download(){\r\n       console.log(downloadClassifer)\r\n       if (downloadClassifer == true){\r\n        props.handleDownload()\r\n       }\r\n       return\r\n   }\r\n\r\n\r\n    return(\r\n        <div>\r\n        <Tooltip title=\"Download\" aria-label=\"download\">\r\n\t\t\t\t\t\t\t<Fab\r\n\t\t\t\t\t\t\t//\tsize=\"medium\"\r\n\t\t\t\t\t\t\t\taria-label=\"save\"\r\n\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\tcomponent=\"label\"\r\n\t\t\t\t\t\t\t\tdisabled={!props.downloadButtonEnabled}\r\n                                onClick={handleClickOpen}\r\n\t\t\t\t\t\t\t\t// style={{ height: '5vw', width: '5vw'}}\r\n\t\t\t\t\t\t\t\tstyle={{ positive: 'relative' }}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t<SaveAltIcon\r\n\t\t\t\t\t\t\t\t// style={{ height: '50%', width: '50%' }}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Fab>\r\n\t\t\t\t\t\t</Tooltip>\r\n                        <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                        <DialogContent>\r\n                        <FormLabel component=\"legend\">Download</FormLabel>\r\n                        <FormControlLabel\r\n                            control={\r\n                            <Checkbox\r\n                                onChange={handleDownloadClassifer}\r\n                                color=\"primary\"\r\n                            />\r\n                            }\r\n                            label=\"Classifer\"\r\n                        />\r\n                         <FormControlLabel\r\n                                control={\r\n                                <Checkbox\r\n                                    onChange={handleDownloadTrainingSet}\r\n                                    color=\"primary\"\r\n                                />\r\n                                }\r\n                                label=\"Training Set\"\r\n                            />\r\n                         \r\n                              <Button\r\n                                size=\"small\"\r\n                                variant=\"contained\"\r\n                                style={{bottom:10}}\r\n                                onClick={download}\r\n                            >\r\n                                Save\r\n                            </Button>\r\n                        \r\n                            </DialogContent>\r\n                        </Dialog>    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DownloadButton; ","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport Paper from '../Paper';\nexport var styles = function styles(theme) {\n  var backgroundColorDefault = theme.palette.type === 'light' ? theme.palette.grey[100] : theme.palette.grey[900];\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      width: '100%',\n      boxSizing: 'border-box',\n      // Prevent padding issue with the Modal and fixed positioned AppBar.\n      zIndex: theme.zIndex.appBar,\n      flexShrink: 0\n    },\n\n    /* Styles applied to the root element if `position=\"fixed\"`. */\n    positionFixed: {\n      position: 'fixed',\n      top: 0,\n      left: 'auto',\n      right: 0,\n      '@media print': {\n        // Prevent the app bar to be visible on each printed page.\n        position: 'absolute'\n      }\n    },\n\n    /* Styles applied to the root element if `position=\"absolute\"`. */\n    positionAbsolute: {\n      position: 'absolute',\n      top: 0,\n      left: 'auto',\n      right: 0\n    },\n\n    /* Styles applied to the root element if `position=\"sticky\"`. */\n    positionSticky: {\n      // ⚠️ sticky is not supported by IE 11.\n      position: 'sticky',\n      top: 0,\n      left: 'auto',\n      right: 0\n    },\n\n    /* Styles applied to the root element if `position=\"static\"`. */\n    positionStatic: {\n      position: 'static'\n    },\n\n    /* Styles applied to the root element if `position=\"relative\"`. */\n    positionRelative: {\n      position: 'relative'\n    },\n\n    /* Styles applied to the root element if `color=\"default\"`. */\n    colorDefault: {\n      backgroundColor: backgroundColorDefault,\n      color: theme.palette.getContrastText(backgroundColorDefault)\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.primary.contrastText\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      backgroundColor: theme.palette.secondary.main,\n      color: theme.palette.secondary.contrastText\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"transparent\"`. */\n    colorTransparent: {\n      backgroundColor: 'transparent',\n      color: 'inherit'\n    }\n  };\n};\nvar AppBar = /*#__PURE__*/React.forwardRef(function AppBar(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$position = props.position,\n      position = _props$position === void 0 ? 'fixed' : _props$position,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"position\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    square: true,\n    component: \"header\",\n    elevation: 4,\n    className: clsx(classes.root, classes[\"position\".concat(capitalize(position))], classes[\"color\".concat(capitalize(color))], className, position === 'fixed' && 'mui-fixed'),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAppBar'\n})(AppBar);","import React from 'react';\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n\treturn <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction Help() {\r\n\tconst [open, setOpen] = React.useState(false);\r\n\r\n\tconst handleClickOpen = () => {\r\n\t\tsetOpen(true);\r\n\t};\r\n\r\n\tconst handleClose = () => {\r\n\t\tsetOpen(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Tooltip title=\"Help\" aria-label=\"help\">\r\n\t\t\t\t<IconButton color=\"primary\" onClick={handleClickOpen} style={{ height: 65, width: 65 }}>\r\n\t\t\t\t\t<HelpOutlineIcon size=\"large\" style={{ height: 50, width: 50 }} />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</Tooltip>\r\n\t\t\t<Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\r\n\t\t\t\t<AppBar>\r\n\t\t\t\t\t<Toolbar>\r\n\t\t\t\t\t\t<Typography variant=\"h6\" color=\"inherit\">\r\n\t\t\t\t\t\t\tInfo\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\tcolor=\"inherit\"\r\n\t\t\t\t\t\t\tonClick={handleClose}\r\n\t\t\t\t\t\t\taria-label=\"close\"\r\n\t\t\t\t\t\t\tstyle={{ marginLeft: '93%', position: 'fixed' }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<CloseIcon />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</Toolbar>\r\n\t\t\t\t</AppBar>\r\n\r\n\t\t\t\t<DialogTitle>Subscribe</DialogTitle>\r\n\t\t\t\t<DialogContent>\r\n\t\t\t\t\t<br></br>\r\n\t\t\t\t\t<h5>Getting Started </h5>\r\n\t\t\t\t\t<DialogContentText>\r\n\t\t\t\t\t\tImport your data files from Cell Profiler by clicking the upload data button in the right\r\n\t\t\t\t\t\tcorner. Below is a link to download Cell Profiler, if you still need to prepare you data for\r\n\t\t\t\t\t\timport:\r\n\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t<a href=\"https://cellprofiler.org/\">https://cellprofiler.org/</a>\r\n\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\tIf you are just looking to give CPA Web a try, download the example data at the link below and\r\n\t\t\t\t\t\tunzip it before uploading to the program:\r\n\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t<a href=\"https://cellprofileranalyst.org/examples\">https://cellprofileranalyst.org/examples</a>\r\n\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\tYou will know your data is loaded when the green circle stops spinning.\r\n\t\t\t\t\t\t<hr></hr>\r\n\t\t\t\t\t</DialogContentText>\r\n\r\n\t\t\t\t\t<h5>Using CPA Web </h5>\r\n\t\t\t\t\t<DialogContentText>\r\n\t\t\t\t\t\tOnce your data is uploaded, you can begin fetching cells to classify!\r\n\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\tYou have the option to fetch: random cells from your data set, positive cells (cells that\r\n\t\t\t\t\t\tpossess the phenotype/ trait you are classifying for), negative cells (cells that do not possess\r\n\t\t\t\t\t\tthe phenotype/ trait you are classifying for), cells from a specific image in your data set,\r\n\t\t\t\t\t\tcells from your positive or negative training set, and cells that are confusing to classifier\r\n\t\t\t\t\t\t(the cells that the classifier is most unsure are positive or negative). You can also fetch the\r\n\t\t\t\t\t\tcells the classifier thinks arre most positive or most negative from a large sample. However if\r\n\t\t\t\t\t\ta particular phenotype is rare the program may ask for confirmation to continue.\r\n\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\tIt is a good idea to start by fetching random cells so the model can begin to learn based on\r\n\t\t\t\t\t\tyour classifications.\r\n\t\t\t\t\t\t<hr></hr>\r\n\t\t\t\t\t</DialogContentText>\r\n\r\n\t\t\t\t\t<h5>Classifying Cells </h5>\r\n\t\t\t\t\t<DialogContentText>\r\n\t\t\t\t\t\tOnce you have fetched cells and they appear in the unclassified bin, you can begin dragging and\r\n\t\t\t\t\t\tdropping the cells into the positive and negative bin based on the phenotype/trait you are\r\n\t\t\t\t\t\tclassifying for.\r\n\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\tWhen you hover over cell images you learn their image and object numbers. If you double click on\r\n\t\t\t\t\t\ta cell, the full image the cell belongs to will pop up and show you where in the image the cell\r\n\t\t\t\t\t\tis coming from.\r\n\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\tWhen you feel happy with the cells in the positive and negative bin, you can press the train\r\n\t\t\t\t\t\tbutton to train the model. While the model is training you will see loss and accuracy graphs\r\n\t\t\t\t\t\tinforming you on the models progress.\r\n\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\tIf there are cells you are unsure about or do not want to include in the training set, simply\r\n\t\t\t\t\t\tfetch again and the cells go away. Also note that when you press train the cells in the\r\n\t\t\t\t\t\tunclassified bin will go away.\r\n\t\t\t\t\t\t<hr></hr>\r\n\t\t\t\t\t</DialogContentText>\r\n\r\n\t\t\t\t\t<h5>Exploring The Data </h5>\r\n\t\t\t\t\t<DialogContentText>\r\n\t\t\t\t\t\tTo evaluate the state of the machine learning model you can press the evaluate button to see the\r\n\t\t\t\t\t\tconfusion matrix.\r\n\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\tTo gain more insight on the cell images scorings, you can click on the score all button. This\r\n\t\t\t\t\t\tdisplays a histogram of the data distribution and a table containing information about all the\r\n\t\t\t\t\t\tcell images, their total, positive, negative, ratio, and adjusted ratio values. You can sort the\r\n\t\t\t\t\t\tvalues in the table from biggest to smallest by hovering over the column label and selecting the\r\n\t\t\t\t\t\tdirection of the arrow. You can download the CSV of the score all table by pressing the save\r\n\t\t\t\t\t\ticon in the right corner of the score all window.\r\n\t\t\t\t\t\t<hr></hr>\r\n\t\t\t\t\t</DialogContentText>\r\n\r\n\t\t\t\t\t<h5>Saving Your Work</h5>\r\n\t\t\t\t\t<DialogContentText>\r\n\t\t\t\t\t\tWhen you are satisfied with your model, simply click the download button in the top right corner\r\n\t\t\t\t\t\tof the main screen to download your classification model and training set.\r\n\t\t\t\t\t\t<hr></hr>\r\n\t\t\t\t\t</DialogContentText>\r\n\r\n\t\t\t\t\t<h5>Additional Questions</h5>\r\n\t\t\t\t\t<DialogContentText>\r\n\t\t\t\t\t\tIf you have any additional questions on how to use Cell Profiler Analyst Web, please post on the\r\n\t\t\t\t\t\tcell profiler analyst forum:\r\n\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t<a href=\"https://forum.image.sc/tag/cellprofiler-analyst\">\r\n\t\t\t\t\t\t\thttps://forum.image.sc/tag/cellprofiler-analyst\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\tHappy Classifying!\r\n\t\t\t\t\t</DialogContentText>\r\n\t\t\t\t</DialogContent>\r\n\t\t\t</Dialog>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Help;\r\n","import React from 'react';\r\nimport { Row, Col, Container } from 'reactstrap';\r\nimport { Box, Button, Grid, IconButton, Menu, MenuItem, Card, TextField, Typography } from '@material-ui/core';\r\nimport logo from '../cpa_logo(blue).png';\r\nimport { Image, Dropdown, DropdownButton } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { green } from '@material-ui/core/colors';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport Evaluate from './AbbyUIButtons/UIEvaluateButton';\r\nimport ScoreAll from './UIScoreAllButton';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Help from './Help';\r\n\r\nimport jones from '../jones.jpg';\r\n\r\nimport { GridContextProvider, GridDropZone, GridItem, swap, move } from 'react-grid-dnd';\r\n\r\nimport '../dndstyles.css';\r\nimport * as tf from '@tensorflow/tfjs';\r\nimport * as tfvis from '@tensorflow/tfjs-vis';\r\nimport { downloadFile } from '../downloadFile';\r\nimport UploadButton from './UploadButton';\r\nimport DownloadButton from './DownloadButton';\r\n\r\nfunction TestUIMVP() {\r\n\tconst [anchorEl, setAnchorEl] = React.useState(null);\r\n\tconst [dataProvider, setDataProvider] = React.useState(null);\r\n\r\n\t// var classifierManager = null;\r\n\t// const [classifierManager, setClassifierManager] = React.useState(null)\r\n\tconst [fileListObject, setFileListObject] = React.useState(null);\r\n\tconst [tileState, setTileState] = React.useState({ unclassified: [], positive: [], negative: [] });\r\n\r\n\tconst [fetchButtonEnabled, setFetchButtonEnabled] = React.useState(false);\r\n\tconst [trainButtonEnabled, setTrainButtonEnabled] = React.useState(false);\r\n\tconst [evaluateButtonEnabled, setEvaluateButtonEnabled] = React.useState(false);\r\n\tconst [downloadButtonEnabled, setDownloadButtonEnabled] = React.useState(false);\r\n\tconst [uploadButtonEnabled, setUploadButtonEnabled] = React.useState(true);\r\n\tconst [scoreAllButtonEnabled, setscoreAllButtonEnabled] = React.useState(false);\r\n\tconst [uploading, setUploading] = React.useState(false);\r\n\tconst [success, setSuccess] = React.useState(false);\r\n\tconst [fetching, setFetching] = React.useState(false);\r\n\tconst [initialFetchingPositiveNegative, setInitialFetchingPositiveNegative] = React.useState(false);\r\n\tconst [openFetchDropdown, setOpenFetchDropdown] = React.useState(false);\r\n\tconst [openTrainDropdown, setOpenTrainDropdown] = React.useState(false);\r\n\r\n\tconst [canvasWebWorker, setCanvasWebWorker] = React.useState(null);\r\n\tconst [dataWebWorker, setDataWebWorker] = React.useState(null);\r\n\tconst [classifierWebWorker, setClassifierWebWorker] = React.useState(null);\r\n\tconst [confusionMatrix, setConfusionMatrix] = React.useState([\r\n\t\t[0, 0],\r\n\t\t[0, 0],\r\n\t]);\r\n\tconst [trainingObject, setTrainingObject] = React.useState(null);\r\n\tconst [trainingCellPairs, setTrainingCellPairs] = React.useState([]);\r\n\r\n\tconst [scoreTableIsUpToDate, setScoreTableIsUpToDate] = React.useState(false);\r\n\tconst [scoreTableObject, setScoreTableObject] = React.useState(null);\r\n\tconst [scoreTable, setScoreTable] = React.useState([]);\r\n\tconst [scoreAlphas, setScoreAlphas] = React.useState();\r\n\tconst [histogramData, setHistogramData] = React.useState([]);\r\n\tconst [alpha, setAlpha] = React.useState(null);\r\n\tconst [beta, setBeta] = React.useState(null);\r\n\r\n\tconst trainingLossCanvasParentRef = React.useRef();\r\n\tconst trainingAccuracyCanvasParentRef = React.useRef();\r\n\r\n\tconst [selectedFetchImageNumber, setSelectedFetchImageNumber] = React.useState(1);\r\n\tconst [fetchImageNumberButtonEnabled, setFetchImageNumberButtonEnabled] = React.useState(false);\r\n\tconst DEBUG = true;\r\n\r\n\tconst [cellBigPictureDialogOpen, setCellBigPictureDialogOpen] = React.useState(false);\r\n\tconst [bigPictureSource, setBigPictureSource] = React.useState(jones);\r\n\tconst [bigPictureTitle, setBigPictureTitle] = React.useState('');\r\n\tconst [currentlyScoring, setCurrentlyScoring] = React.useState(false);\r\n\r\n\t// React.useEffect(() => {\r\n\t// \tconsole.log(tileState);\r\n\t// }, [tileState]);\r\n\r\n\t// const [downloadScoreTableFunction, setDownloadScoreTableFunction] = React.useState(() => {});\r\n\tconst [scoreTableCsvString, setScoreTableCsvString] = React.useState('');\r\n\tvar __ = null;\r\n\r\n\tReact.useEffect(() => {\r\n\t\tconst dataToCanvasWorkerChannel = new MessageChannel();\r\n\t\tconst dataToClassifierWorkerChannel = new MessageChannel();\r\n\r\n\t\tconst dataWebWorker = constructWebWorker('../dataWorker.js', 'dataWebWorker');\r\n\t\tdataWebWorker.postMessage({ action: 'connectToCanvasWorker' }, [dataToCanvasWorkerChannel.port1]);\r\n\t\tdataWebWorker.postMessage({ action: 'connectToClassifierWorker' }, [dataToClassifierWorkerChannel.port1]);\r\n\t\tsetDataWebWorker(dataWebWorker);\r\n\r\n\t\tconst canvasWebWorker = constructWebWorker('../canvasWorker.js', 'CanvasWebWorker');\r\n\t\tcanvasWebWorker.postMessage({ action: 'connectToDataWorker' }, [dataToCanvasWorkerChannel.port2]);\r\n\t\tsetCanvasWebWorker(canvasWebWorker);\r\n\r\n\t\tconst classifierWebWorker = constructWebWorker('../classifierWorker.js', 'classifierWebWorker');\r\n\t\tclassifierWebWorker.postMessage({ action: 'connectToDataWorker' }, [dataToClassifierWorkerChannel.port2]);\r\n\t\tsetClassifierWebWorker(classifierWebWorker);\r\n\t}, []);\r\n\r\n\tconst constructWebWorker = function (sourcePath, name) {\r\n\t\tconst worker = new Worker(sourcePath);\r\n\t\tworker.addEventListener('error', (event) => {\r\n\t\t\tconsole.log(`[${name}] Error`, event.message, event);\r\n\t\t});\r\n\t\treturn worker;\r\n\t};\r\n\r\n\tconst N = 20;\r\n\tconst MAX_ITERATION_COUNT = 1000;\r\n\r\n\tconst handleClickFetchDropDown = (event) => {\r\n\t\tsetAnchorEl(event.currentTarget);\r\n\t};\r\n\r\n\tconst handleCloseFetchDropDown = (fetchType) => {\r\n\t\tsetAnchorEl(null);\r\n\t\tif (fetchType !== undefined && fetchType !== null) {\r\n\t\t\thandleFetch(fetchType);\r\n\t\t}\r\n\t};\r\n\r\n\tconst disableIterationButtons = () => {\r\n\t\tsetFetchButtonEnabled(false);\r\n\t\tsetTrainButtonEnabled(false);\r\n\t\tsetDownloadButtonEnabled(false);\r\n\t\t//   setEvaluateButtonEnabled(false)\r\n\t};\r\n\tconst enableIterationButtons = () => {\r\n\t\tsetFetchButtonEnabled(true);\r\n\t\tsetTrainButtonEnabled(true);\r\n\t\tsetDownloadButtonEnabled(true);\r\n\t\tsetEvaluateButtonEnabled(true);\r\n\t};\r\n\r\n\tconst handleOpenCellBigPicture = async function (cellPair) {\r\n\t\t// console.log('open big picture');\r\n\t\t// console.log(cellPair);\r\n\t\tsetCellBigPictureDialogOpen(true);\r\n\t\tsetBigPictureTitle(`Image: ${cellPair.ImageNumber}, Object: ${cellPair.ObjectNumber}`);\r\n\t\treturn workerActionPromise(canvasWebWorker, 'get', {\r\n\t\t\tgetType: 'blobUrlBigPictureFromCellPair',\r\n\t\t\tgetArgs: { cellPair },\r\n\t\t}).then((event) => {\r\n\t\t\tsetBigPictureSource(event.data.blobUrl);\r\n\t\t});\r\n\t};\r\n\tconst handleOpenBigPicture = async function (imageNumber) {\r\n\t\tif (!imageNumber) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// console.log('open big picture');\r\n\t\t// console.log(imageNumber);\r\n\t\tsetCellBigPictureDialogOpen(true);\r\n\t\tsetBigPictureTitle(`Image: ${imageNumber}`);\r\n\t\treturn workerActionPromise(canvasWebWorker, 'get', {\r\n\t\t\tgetType: 'blobUrlBigPictureByImageNumber',\r\n\t\t\tgetArgs: { imageNumber },\r\n\t\t}).then((event) => {\r\n\t\t\tsetBigPictureSource(event.data.blobUrl);\r\n\t\t});\r\n\t};\r\n\tconst handleCloseCellBigPicture = function () {\r\n\t\t// console.log('close big picture');\r\n\t\tsetCellBigPictureDialogOpen(false);\r\n\t};\r\n\r\n\tconst handleFetch = async (fetchType) => {\r\n\t\t// console.log('Fetch!');\r\n\t\tif ((fetchType === undefined) | (fetchType == null)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetFetching(true);\r\n\t\tconst clearedUnclassifiedTileState = { ...tileState, unclassified: [] };\r\n\t\tsetTileState(clearedUnclassifiedTileState);\r\n\t\tswitch (fetchType) {\r\n\t\t\tcase 'Random': {\r\n\t\t\t\tlet event = await workerActionPromise(dataWebWorker, 'get', {\r\n\t\t\t\t\tgetType: 'cellPairs',\r\n\t\t\t\t\tgetArgs: { amount: 16 },\r\n\t\t\t\t});\r\n\r\n\t\t\t\tconst { getResult: cellPairs } = event.data;\r\n\r\n\t\t\t\tevent = await workerActionPromise(canvasWebWorker, 'get', {\r\n\t\t\t\t\tgetType: 'blobUrlsFromCellPairs',\r\n\t\t\t\t\tgetArgs: { cellPairs },\r\n\t\t\t\t});\r\n\r\n\t\t\t\tconst { blobUrls } = event.data;\r\n\t\t\t\tconst newTileState = await replaceUnclassifiedTileStatePromise(tileState, blobUrls, cellPairs);\r\n\t\t\t\t// console.log(newTileState);\r\n\t\t\t\tsetTileState(newTileState);\r\n\t\t\t\tsetFetching(false);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'Positive':\r\n\t\t\tcase 'Negative': {\r\n\t\t\t\tlet accumCellPairs = [];\r\n\t\t\t\tlet iterationCount = 0;\r\n\t\t\t\tlet totalIterationCount = 0;\r\n\r\n\t\t\t\twhile (accumCellPairs.length < 16) {\r\n\t\t\t\t\tlet event = await workerActionPromise(dataWebWorker, 'get', {\r\n\t\t\t\t\t\tgetType: 'cellPairs',\r\n\t\t\t\t\t\tgetArgs: { amount: 100 },\r\n\t\t\t\t\t});\r\n\t\t\t\t\tconst { getResult: cellPairs } = event.data;\r\n\t\t\t\t\tevent = await workerActionPromise(classifierWebWorker, 'predictFilterCellPairs', {\r\n\t\t\t\t\t\tcellPairs,\r\n\t\t\t\t\t\tclassType: fetchType,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tconst { filteredCellPairs } = event.data;\r\n\r\n\t\t\t\t\t// get rid of duplicates\r\n\t\t\t\t\tfor (let i = 0; i < filteredCellPairs.length; i++) {\r\n\t\t\t\t\t\tconst sampledCellPair = filteredCellPairs[i];\r\n\t\t\t\t\t\tlet notYetSampled = true;\r\n\t\t\t\t\t\tfor (let j = 0; j < accumCellPairs.length; j++) {\r\n\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\tsampledCellPair.ImageNumber === accumCellPairs[j].ImageNumber &&\r\n\t\t\t\t\t\t\t\tsampledCellPair.ObjectNumber === accumCellPairs[j].ObjectNumber\r\n\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\tnotYetSampled = false;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (notYetSampled) {\r\n\t\t\t\t\t\t\taccumCellPairs.push(sampledCellPair);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// console.log(accumCellPairs);\r\n\t\t\t\t\t// accumCellPairs = accumCellPairs.concat(filteredCellPairs);\r\n\r\n\t\t\t\t\ttotalIterationCount++;\r\n\t\t\t\t\tif (iterationCount++ >= MAX_ITERATION_COUNT) {\r\n\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\twindow.confirm(\r\n\t\t\t\t\t\t\t\t`CPAW Has Found ${accumCellPairs.length} Unique ${fetchType} Cells After Testing ${\r\n\t\t\t\t\t\t\t\t\t100 * totalIterationCount\r\n\t\t\t\t\t\t\t\t} Cells With Replacement, Would You Like To Continue?`\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\titerationCount = 0;\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// console.log(`Fetched ${fetchType} Cells in ${totalIterationCount} iterations`);\r\n\r\n\t\t\t\tconst slicedCellPairs = accumCellPairs.slice(0, 16);\r\n\t\t\t\tlet event = await workerActionPromise(canvasWebWorker, 'get', {\r\n\t\t\t\t\tgetType: 'blobUrlsFromCellPairs',\r\n\t\t\t\t\tgetArgs: { cellPairs: slicedCellPairs },\r\n\t\t\t\t});\r\n\t\t\t\tconst { blobUrls } = event.data;\r\n\t\t\t\tconst newTileState = await replaceUnclassifiedTileStatePromise(tileState, blobUrls, slicedCellPairs);\r\n\t\t\t\tsetTileState(newTileState);\r\n\t\t\t\tsetFetching(false);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'Confusing': {\r\n\t\t\t\tlet event = await workerActionPromise(dataWebWorker, 'get', {\r\n\t\t\t\t\tgetType: 'cellPairs',\r\n\t\t\t\t\tgetArgs: { amount: 100 },\r\n\t\t\t\t});\r\n\t\t\t\tconst { getResult: cellPairs } = event.data;\r\n\r\n\t\t\t\tevent = await workerActionPromise(classifierWebWorker, 'confusingSortCellPairs', {\r\n\t\t\t\t\tcellPairs: cellPairs,\r\n\t\t\t\t});\r\n\t\t\t\tconst { sortedCellPairs } = event.data;\r\n\t\t\t\tconst slicedSortedCellPairs = sortedCellPairs.slice(0, 16);\r\n\t\t\t\tevent = await workerActionPromise(canvasWebWorker, 'get', {\r\n\t\t\t\t\tgetType: 'blobUrlsFromCellPairs',\r\n\t\t\t\t\tgetArgs: { cellPairs: slicedSortedCellPairs },\r\n\t\t\t\t});\r\n\t\t\t\tconst { blobUrls } = event.data;\r\n\t\t\t\tconst newTileState = await replaceUnclassifiedTileStatePromise(\r\n\t\t\t\t\ttileState,\r\n\t\t\t\t\tblobUrls,\r\n\t\t\t\t\tslicedSortedCellPairs\r\n\t\t\t\t);\r\n\r\n\t\t\t\tsetTileState(newTileState);\r\n\t\t\t\tsetFetching(false);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'MorePositive':\r\n\t\t\tcase 'MoreNegative': {\r\n\t\t\t\t// console.log(fetchType);\r\n\r\n\t\t\t\tconst classType = fetchType === 'MorePositive' ? 'Positive' : 'Negative';\r\n\r\n\t\t\t\tlet accumCellPairs = [];\r\n\t\t\t\tlet iterationCount = 0;\r\n\t\t\t\tlet totalIterationCount = 0;\r\n\r\n\t\t\t\twhile (accumCellPairs.length < 16) {\r\n\t\t\t\t\tlet event = await workerActionPromise(dataWebWorker, 'get', {\r\n\t\t\t\t\t\tgetType: 'cellPairs',\r\n\t\t\t\t\t\tgetArgs: { amount: 1000 },\r\n\t\t\t\t\t});\r\n\t\t\t\t\tconst { getResult: cellPairs } = event.data;\r\n\t\t\t\t\tevent = await workerActionPromise(classifierWebWorker, 'moreClassSortCellPairs', {\r\n\t\t\t\t\t\tcellPairs,\r\n\t\t\t\t\t\tclassType,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tconst { sortedCellPairs } = event.data;\r\n\r\n\t\t\t\t\t// get rid of duplicates\r\n\t\t\t\t\tfor (let i = 0; i < sortedCellPairs.length; i++) {\r\n\t\t\t\t\t\tconst sampledCellPair = sortedCellPairs[i];\r\n\t\t\t\t\t\tlet notYetSampled = true;\r\n\t\t\t\t\t\tfor (let j = 0; j < accumCellPairs.length; j++) {\r\n\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\tsampledCellPair.ImageNumber === accumCellPairs[j].ImageNumber &&\r\n\t\t\t\t\t\t\t\tsampledCellPair.ObjectNumber === accumCellPairs[j].ObjectNumber\r\n\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\tnotYetSampled = false;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (notYetSampled) {\r\n\t\t\t\t\t\t\taccumCellPairs.push(sampledCellPair);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// console.log(accumCellPairs);\r\n\t\t\t\t\t// accumCellPairs = accumCellPairs.concat(filteredCellPairs);\r\n\r\n\t\t\t\t\ttotalIterationCount++;\r\n\t\t\t\t\tif (iterationCount++ >= MAX_ITERATION_COUNT) {\r\n\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\twindow.confirm(\r\n\t\t\t\t\t\t\t\t`CPAW Has Found ${accumCellPairs.length} Unique ${fetchType} Cells After Testing ${\r\n\t\t\t\t\t\t\t\t\t100 * totalIterationCount\r\n\t\t\t\t\t\t\t\t} Cells With Replacement, Would You Like To Continue?`\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\titerationCount = 0;\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst slicedSortedCellPairs = accumCellPairs.slice(0, 16);\r\n\t\t\t\tlet event = await workerActionPromise(canvasWebWorker, 'get', {\r\n\t\t\t\t\tgetType: 'blobUrlsFromCellPairs',\r\n\t\t\t\t\tgetArgs: { cellPairs: slicedSortedCellPairs },\r\n\t\t\t\t});\r\n\t\t\t\tconst { blobUrls } = event.data;\r\n\t\t\t\tconst newTileState = await replaceUnclassifiedTileStatePromise(\r\n\t\t\t\t\ttileState,\r\n\t\t\t\t\tblobUrls,\r\n\t\t\t\t\tslicedSortedCellPairs\r\n\t\t\t\t);\r\n\r\n\t\t\t\tsetTileState(newTileState);\r\n\t\t\t\tsetFetching(false);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'ImageNumber': {\r\n\t\t\t\tlet event = await workerActionPromise(dataWebWorker, 'get', {\r\n\t\t\t\t\tgetType: 'cellPairsFromImage',\r\n\t\t\t\t\tgetArgs: { ImageNumber: selectedFetchImageNumber },\r\n\t\t\t\t});\r\n\t\t\t\tconst { getResult: cellPairs } = event.data;\r\n\t\t\t\t// console.log(cellPairs);\r\n\t\t\t\tif (cellPairs.length === 0) {\r\n\t\t\t\t\talert(`No Cells Found With Image Number: ${selectedFetchImageNumber}`);\r\n\t\t\t\t\tsetFetching(false);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet shuffledSliceCellPairs = cellPairs;\r\n\r\n\t\t\t\tif (cellPairs.length > 16) {\r\n\t\t\t\t\tconst cellPairIndicesLeft = new Array(cellPairs.length).fill(0).map((e, i) => i);\r\n\t\t\t\t\tshuffledSliceCellPairs = [];\r\n\t\t\t\t\twhile (shuffledSliceCellPairs.length < 16) {\r\n\t\t\t\t\t\tconst randomIndexIndex = Math.floor(Math.random() * cellPairIndicesLeft.length);\r\n\t\t\t\t\t\tconst randomIndex = cellPairIndicesLeft[randomIndexIndex];\r\n\t\t\t\t\t\tshuffledSliceCellPairs.push(cellPairs[randomIndex]);\r\n\t\t\t\t\t\tcellPairIndicesLeft.splice(randomIndexIndex, 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst slicedCellPairs = shuffledSliceCellPairs.slice(0, 16);\r\n\t\t\t\tevent = await workerActionPromise(canvasWebWorker, 'get', {\r\n\t\t\t\t\tgetType: 'blobUrlsFromCellPairs',\r\n\t\t\t\t\tgetArgs: { cellPairs: slicedCellPairs },\r\n\t\t\t\t});\r\n\t\t\t\tconst { blobUrls } = event.data;\r\n\t\t\t\tconst newTileState = await replaceUnclassifiedTileStatePromise(tileState, blobUrls, slicedCellPairs);\r\n\t\t\t\tsetTileState(newTileState);\r\n\t\t\t\tsetFetching(false);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'TrainingPositive':\r\n\t\t\tcase 'TrainingNegative': {\r\n\t\t\t\tconst cellPairs = trainingObject.trainingData.map((dataRow) => ({\r\n\t\t\t\t\tImageNumber: dataRow[0],\r\n\t\t\t\t\tObjectNumber: dataRow[1],\r\n\t\t\t\t}));\r\n\r\n\t\t\t\tconst positiveCellPairs = cellPairs.filter((e, idx) => trainingObject.trainingLabels[idx] === 1);\r\n\t\t\t\tconst negativeCellPairs = cellPairs.filter((e, idx) => trainingObject.trainingLabels[idx] === 0);\r\n\r\n\t\t\t\tconst desiredCellPairs = fetchType === 'TrainingPositive' ? positiveCellPairs : negativeCellPairs;\r\n\r\n\t\t\t\tlet event = await workerActionPromise(canvasWebWorker, 'get', {\r\n\t\t\t\t\tgetType: 'blobUrlsFromCellPairs',\r\n\t\t\t\t\tgetArgs: { cellPairs: desiredCellPairs },\r\n\t\t\t\t});\r\n\t\t\t\tconst { blobUrls } = event.data;\r\n\t\t\t\tconst newTileState = await replaceUnclassifiedTileStatePromise(tileState, blobUrls, desiredCellPairs);\r\n\t\t\t\tsetTileState(newTileState);\r\n\t\t\t\tsetFetching(false);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleTrain = async () => {\r\n\t\tconsole.log('Train!');\r\n\t\tconst positiveCellPairs = tileState.positive.map((element) => element.cellPair);\r\n\t\tconst negativeCellPairs = tileState.negative.map((element) => element.cellPair);\r\n\t\t// console.log('p', positiveCellPairs, 'n', negativeCellPairs);\r\n\r\n\t\tconst totalCellPairs = [...negativeCellPairs, ...positiveCellPairs];\r\n\t\tconst newLabels = [\r\n\t\t\t...new Array(negativeCellPairs.length).fill(0),\r\n\t\t\t...new Array(positiveCellPairs.length).fill(1),\r\n\t\t];\r\n\r\n\t\tsetScoreTableIsUpToDate(false);\r\n\r\n\t\tconst clearedUnclassifiedTileState = { ...tileState, unclassified: [] };\r\n\t\tsetTileState(clearedUnclassifiedTileState);\r\n\r\n\t\tlet event = await workerActionPromise(dataWebWorker, 'get', {\r\n\t\t\tgetType: 'objectRowsFromCellpairs',\r\n\t\t\tgetArgs: { cellPairs: totalCellPairs },\r\n\t\t});\r\n\r\n\t\tconst { getResult: dataRows } = event.data;\r\n\t\t// console.log(dataRows);\r\n\t\tconst newTrainingObject = {\r\n\t\t\tclassifierType: 'LogisticRegression',\r\n\t\t\ttrainingData: dataRows,\r\n\t\t\ttrainingLabels: newLabels,\r\n\t\t\tfeatureIndicesToUse: trainingObject.featureIndicesToUse,\r\n\t\t};\r\n\t\ttrainSequencePromise(newTrainingObject);\r\n\t};\r\n\r\n\tconst trainSequencePromise = async function (currentTrainingObject) {\r\n\t\tsetOpenTrainDropdown(true);\r\n\t\tvar UUID = null;\r\n\t\tlet updateCanvasesListener = (event) => {\r\n\t\t\tif (UUID == event.data.uuid) {\r\n\t\t\t\tswitch (event.data.action) {\r\n\t\t\t\t\tcase 'updateTrainingCanvases':\r\n\t\t\t\t\t\ttfvis.show.history(trainingLossCanvasParentRef.current, event.data.trainLogs, [\r\n\t\t\t\t\t\t\t...event.data.ticks.loss,\r\n\t\t\t\t\t\t\t...event.data.ticks.accuracy,\r\n\t\t\t\t\t\t]);\r\n\t\t\t\t\t\t// tfvis.show.history(\r\n\t\t\t\t\t\t// \ttrainingAccuracyCanvasParentRef.current,\r\n\t\t\t\t\t\t// \tevent.data.trainLogs,\r\n\r\n\t\t\t\t\t\t// );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tconsole.log(\"didn't render bad action\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\treturn workerActionPromise(classifierWebWorker, 'startTrainingGraphsConnection', {})\r\n\t\t\t.then((event) => {\r\n\t\t\t\tUUID = event.data.uuid;\r\n\t\t\t\tclassifierWebWorker.addEventListener('message', updateCanvasesListener);\r\n\t\t\t\treturn workerActionPromise(classifierWebWorker, 'train', { trainingObject: currentTrainingObject });\r\n\t\t\t})\r\n\t\t\t.then(() => {\r\n\t\t\t\tworkerActionPromise(classifierWebWorker, 'endTrainingGraphsConnection', {});\r\n\t\t\t\tclassifierWebWorker.removeEventListener('message', updateCanvasesListener);\r\n\t\t\t\treturn workerActionPromise(classifierWebWorker, 'confusionMatrix');\r\n\t\t\t})\r\n\t\t\t.then((event) => {\r\n\t\t\t\tconst newConfusionMatrix = event.data.confusionMatrix;\r\n\t\t\t\tsetConfusionMatrix(newConfusionMatrix);\r\n\t\t\t})\r\n\t\t\t.then(() => {\r\n\t\t\t\tsetTrainingObject(currentTrainingObject);\r\n\t\t\t\tsetOpenTrainDropdown(false);\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst workerActionPromise = function (worker, action, data) {\r\n\t\tconst UUID = uuidv4();\r\n\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tlet selfDestructingEventHandler = (event) => {\r\n\t\t\t\tif (event.data.uuid === UUID) {\r\n\t\t\t\t\tworker.removeEventListener('message', selfDestructingEventHandler);\r\n\t\t\t\t\tresolve(event);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tworker.addEventListener('message', selfDestructingEventHandler);\r\n\r\n\t\t\tworker.postMessage({ action, ...data, uuid: UUID });\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleUpload = async (eventObject) => {\r\n\t\tconsole.log('Upload!');\r\n\t\tsetUploading(true);\r\n\t\tawait workerActionPromise(dataWebWorker, 'init', { fileListObject: eventObject.target.files });\r\n\t\tlet event = await workerActionPromise(dataWebWorker, 'get', { getType: 'trainingObject' });\r\n\t\tconst initialTrainingObject = event.data.getResult;\r\n\r\n\t\tsetUploading(false);\r\n\t\tsetSuccess(true);\r\n\t\tsetUploadButtonEnabled(false);\r\n\r\n\t\tawait trainSequencePromise(initialTrainingObject);\r\n\t\tsetInitialFetchingPositiveNegative(true);\r\n\t\tconst cellPairs = initialTrainingObject.trainingData.map((dataRow) => ({\r\n\t\t\tImageNumber: dataRow[0],\r\n\t\t\tObjectNumber: dataRow[1],\r\n\t\t}));\r\n\r\n\t\tconst positiveCellPairs = cellPairs.filter((e, idx) => initialTrainingObject.trainingLabels[idx] === 1);\r\n\t\tconst negativeCellPairs = cellPairs.filter((e, idx) => initialTrainingObject.trainingLabels[idx] === 0);\r\n\r\n\t\tconst totalCellPairs = [...negativeCellPairs, ...positiveCellPairs];\r\n\r\n\t\tevent = await workerActionPromise(canvasWebWorker, 'get', {\r\n\t\t\tgetType: 'blobUrlsFromCellPairs',\r\n\t\t\tgetArgs: { cellPairs: totalCellPairs },\r\n\t\t});\r\n\t\tconst { blobUrls } = event.data;\r\n\r\n\t\tconst zeros = new Array(negativeCellPairs.length).fill(0);\r\n\t\tconst ones = new Array(positiveCellPairs.length).fill(1);\r\n\t\tconst classes = [...zeros, ...ones];\r\n\r\n\t\tconst newTileState = await constructTileStatePromiseByClass(blobUrls, totalCellPairs, classes);\r\n\t\tsetTileState(newTileState);\r\n\t\tsetFetching(false);\r\n\t\tsetInitialFetchingPositiveNegative(false);\r\n\t\tenableIterationButtons();\r\n\t};\r\n\r\n\t/*\r\n\t\t@param (Array<Array<any>>) data The 2D array of data to convert and download as csv\r\n\t\t@param? (Array<string>) headers The possible headers at the top of the fiile\r\n\t\t@return (string)\r\n\t*/\r\n\tconst dataToCsvString = (data, headers = null) => {\r\n\t\tlet csvContent = '';\r\n\t\tif (headers !== null) {\r\n\t\t\tcsvContent += headers.join(',') + '\\n';\r\n\t\t}\r\n\t\tcsvContent += data.map((l) => l.join(',')).join('\\n');\r\n\t\t// downloadFile('enrichmentScores', csvContent, '.csv');\r\n\t\treturn csvContent;\r\n\t};\r\n\r\n\tconst rows = [\r\n\t\t['name1', 'city1', 'some other info'],\r\n\t\t['name2', 'city2', 'more info'],\r\n\t];\r\n\tconst headers = ['a', 'b', 'c'];\r\n\r\n\tconst handleScoreAll = async () => {\r\n\t\tconsole.log('Score All!');\r\n\t\tif (!scoreTableIsUpToDate && !currentlyScoring) {\r\n\t\t\tsetCurrentlyScoring(true);\r\n\t\t\t// console.log('Score All!');\r\n\t\t\treturn workerActionPromise(classifierWebWorker, 'scoreObjectData').then((event) => {\r\n\t\t\t\tconst newScoreTableObject = event.data.scoreTableObject;\r\n\t\t\t\t// console.log(newScoreTableObject);\r\n\t\t\t\tconst scoreDataRows = Object.keys(newScoreTableObject.imageToCountsMap).map((key) => ({\r\n\t\t\t\t\timageNumber: parseInt(key),\r\n\t\t\t\t\ttotal: newScoreTableObject.imageToCountsMap[key][0] + newScoreTableObject.imageToCountsMap[key][1],\r\n\t\t\t\t\tpositive: newScoreTableObject.imageToCountsMap[key][1],\r\n\t\t\t\t\tnegative: newScoreTableObject.imageToCountsMap[key][0],\r\n\t\t\t\t\tratio: newScoreTableObject.ratios[key],\r\n\t\t\t\t\tadjustratio: newScoreTableObject.adjustedRatios[key],\r\n\t\t\t\t}));\r\n\r\n\t\t\t\tconst alphaValue = newScoreTableObject.alphas[1];\r\n\t\t\t\tconst betaValue = newScoreTableObject.alphas[0];\r\n\r\n\t\t\t\t// console.log(alphaValue);\r\n\r\n\t\t\t\tconst adjustedRatiosData = Object.values(newScoreTableObject.adjustedRatios).map((ratio) => ({\r\n\t\t\t\t\tx: ratio,\r\n\t\t\t\t}));\r\n\t\t\t\tsetHistogramData(adjustedRatiosData);\r\n\t\t\t\tsetScoreTable(scoreDataRows);\r\n\t\t\t\tsetCurrentlyScoring(false);\r\n\t\t\t\tsetAlpha(alphaValue);\r\n\t\t\t\tsetBeta(betaValue);\r\n\t\t\t\t// setScoreTableObject(newScoreTableObject);\r\n\t\t\t\tsetScoreAlphas(newScoreTableObject.alphas);\r\n\t\t\t\t// console.log(newScoreTableObject);\r\n\t\t\t\tconst headers = [\r\n\t\t\t\t\t'ImageNumber',\r\n\t\t\t\t\t'PositiveCount',\r\n\t\t\t\t\t'NegativeCount',\r\n\t\t\t\t\t'TotalCount',\r\n\t\t\t\t\t'Ratio',\r\n\t\t\t\t\t'AdjustedRatio',\r\n\t\t\t\t];\r\n\t\t\t\tconst csvdata = scoreDataRows.map((dataRow) => [\r\n\t\t\t\t\tdataRow.imageNumber,\r\n\t\t\t\t\tdataRow.positive,\r\n\t\t\t\t\tdataRow.negative,\r\n\t\t\t\t\tdataRow.total,\r\n\t\t\t\t\tdataRow.ratio,\r\n\t\t\t\t\tdataRow.adjustratio,\r\n\t\t\t\t]);\r\n\t\t\t\t// const onDownload = () => {\r\n\t\t\t\t// \tdownloadDataAsCSV(csvdata, headers);\r\n\t\t\t\t// };\r\n\t\t\t\tconst csvContent = dataToCsvString(csvdata, headers);\r\n\t\t\t\tsetScoreTableCsvString(csvContent);\r\n\t\t\t\t// setDownloadScoreTableFunction(onDownload);\r\n\t\t\t\tsetScoreTableIsUpToDate(true);\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * @param {{positive: {data: {ImageNumber: cellPair.ImageNumber,ObjectNumber: number,Plate: numbere,Well: number,Gene: string,Puro: number,X: number,Y: number}}[],\r\n\t * \t\t\tnegative: {data: {ImageNumber: cellPair.ImageNumber,ObjectNumber: number,Plate: numbere,Well: number,Gene: string,Puro: number,X: number,Y: number}}[],\r\n\t * \t\t\tunclassified: {data: {ImageNumber: cellPair.ImageNumber,ObjectNumber: number,Plate: numbere,Well: number,Gene: string,Puro: number,X: number,Y: number}}[]\r\n\t * \t\t\t}}\r\n\t * \t\t\ttileState The tile state of arrays of cell objects for each class, a data field for each cell object gives us\r\n\t * \t\t\tthe information needed to make the trainingset text content\r\n\t * @return {string} tileStateString\r\n\t */\r\n\tfunction createTrainingSetTextFromTileState(tileState) {\r\n\t\tlet result = '';\r\n\t\tresult = result.concat(\r\n\t\t\t`# This training set was created at ${new Date().toLocaleString()} in CellProfiler Analyst Web\\n`\r\n\t\t);\r\n\t\tresult = result.concat('label positive negative\\n');\r\n\r\n\t\tfor (let i = 0; i < tileState.positive.length; i++) {\r\n\t\t\tconst cellData = tileState.positive[i].data;\r\n\t\t\tresult = result.concat(\r\n\t\t\t\t`positive ${cellData.ImageNumber} ${cellData.ObjectNumber} ${cellData.X} ${cellData.Y}\\n`\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < tileState.negative.length; i++) {\r\n\t\t\tconst cellData = tileState.negative[i].data;\r\n\t\t\tresult = result.concat(\r\n\t\t\t\t`negative ${cellData.ImageNumber} ${cellData.ObjectNumber} ${cellData.X} ${cellData.Y}\\n`\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tconst handleDownload = async (downloadType) => {\r\n\t\tconsole.log('Download!');\r\n\t\tif (downloadType === 'TrainingSet') {\r\n\t\t\tconst trainingSetText = createTrainingSetTextFromTileState(tileState);\r\n\t\t\tdownloadFile('generatedTrainingSet', trainingSetText, '.txt');\r\n\t\t\treturn;\r\n\t\t} else if (downloadType === 'ClassifierSpec') {\r\n\t\t\treturn workerActionPromise(classifierWebWorker, 'getClassifier').then((event) => {\r\n\t\t\t\ttf.loadLayersModel(`indexeddb://${trainingObject.classifierType}`).then((model) => {\r\n\t\t\t\t\tmodel.save(`downloads://${trainingObject.classifierType}`);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t} else if (downloadType === 'TrainingSetClassifierSpec') {\r\n\t\t\tconst trainingSetText = createTrainingSetTextFromTileState(tileState);\r\n\t\t\tdownloadFile('generatedTrainingSet', trainingSetText, '.txt');\r\n\t\t\treturn workerActionPromise(classifierWebWorker, 'getClassifier').then((event) => {\r\n\t\t\t\ttf.loadLayersModel(`indexeddb://${trainingObject.classifierType}`).then((model) => {\r\n\t\t\t\t\tmodel.save(`downloads://${trainingObject.classifierType}`);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tconsole.error('no valid downloadtype');\r\n\t\t}\r\n\r\n\t\t// const classifier = event.data.classifier;\r\n\t};\r\n\r\n\tasync function constructTileStatePromise(dataURLs, newCellPairs) {\r\n\t\tconst cellDatas = await Promise.all(\r\n\t\t\tnewCellPairs.map((cellPair) =>\r\n\t\t\t\tworkerActionPromise(dataWebWorker, 'get', {\r\n\t\t\t\t\tgetType: 'cellPairData',\r\n\t\t\t\t\tgetArgs: { cellPair: cellPair },\r\n\t\t\t\t}).then((event) => event.data.getResult)\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\treturn {\r\n\t\t\tunclassified: dataURLs.map((dataURL, idx) => {\r\n\t\t\t\tconst cellData = cellDatas[idx];\r\n\r\n\t\t\t\tconst label = `Ob: ${cellData.ObjectNumber}${'\\u00A0'}Im: ${cellData.ImageNumber}${'\\u000A'}something`;\r\n\r\n\t\t\t\t// We: ${cellData.Well}\r\n\t\t\t\t// Pl: ${cellData.Plate}`;\r\n\t\t\t\t// console.log(label);\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: idx,\r\n\t\t\t\t\taddress: dataURL,\r\n\t\t\t\t\tdata: cellData,\r\n\t\t\t\t\tinfo: label,\r\n\t\t\t\t\tcellPair: { ImageNumber: cellData.ImageNumber, ObjectNumber: cellData.ObjectNumber },\r\n\t\t\t\t};\r\n\t\t\t}),\r\n\t\t\tpositive: [],\r\n\t\t\tnegative: [],\r\n\t\t};\r\n\t}\r\n\r\n\tasync function replaceUnclassifiedTileStatePromise(lastTileState, newDataURLs, newCellPairs) {\r\n\t\tconst cellDatas = await Promise.all(\r\n\t\t\tnewCellPairs.map((cellPair) =>\r\n\t\t\t\tworkerActionPromise(dataWebWorker, 'get', {\r\n\t\t\t\t\tgetType: 'cellPairData',\r\n\t\t\t\t\tgetArgs: { cellPair: cellPair },\r\n\t\t\t\t}).then((event) => event.data.getResult)\r\n\t\t\t)\r\n\t\t);\r\n\t\tfor (let i = 0; i < lastTileState.negative.length; i++) {\r\n\t\t\tlastTileState.negative[i].id = i;\r\n\t\t}\r\n\t\tfor (let i = 0; i < lastTileState.positive.length; i++) {\r\n\t\t\tlastTileState.positive[i].id = lastTileState.negative.length + i;\r\n\t\t}\r\n\r\n\t\tconst unclassifiedTileState = newDataURLs.map((dataURL, idx) => {\r\n\t\t\tconst cellData = cellDatas[idx];\r\n\r\n\t\t\tconst label = `Ob: ${cellData.ObjectNumber} Im: ${cellData.ImageNumber}`;\r\n\t\t\t// We: ${cellData.Well}\r\n\t\t\t// Pl: ${cellData.Plate}`;\r\n\t\t\t// console.log(label);\r\n\t\t\treturn {\r\n\t\t\t\tid: lastTileState.positive.length + lastTileState.negative.length + idx,\r\n\t\t\t\taddress: dataURL,\r\n\t\t\t\tinfo: label,\r\n\t\t\t\tdata: cellData,\r\n\t\t\t\tcellPair: { ImageNumber: cellData.ImageNumber, ObjectNumber: cellData.ObjectNumber },\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\t// console.log(unclassifiedTileState, lastTileState);\r\n\t\tconst newTileState = {\r\n\t\t\tnegative: lastTileState.negative,\r\n\t\t\tpositive: lastTileState.positive,\r\n\t\t\tunclassified: unclassifiedTileState,\r\n\t\t};\r\n\t\t// console.log(newTileState);\r\n\t\treturn newTileState;\r\n\t}\r\n\r\n\tasync function constructTileStatePromiseByClass(dataURLs, newCellPairs, classes) {\r\n\t\tconst cellDatas = await Promise.all(\r\n\t\t\tnewCellPairs.map((cellPair) =>\r\n\t\t\t\tworkerActionPromise(dataWebWorker, 'get', {\r\n\t\t\t\t\tgetType: 'cellPairData',\r\n\t\t\t\t\tgetArgs: { cellPair: cellPair },\r\n\t\t\t\t}).then((event) => event.data.getResult)\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tconst cellStates = dataURLs.map((dataURL, idx) => {\r\n\t\t\tconst cellData = cellDatas[idx];\r\n\r\n\t\t\tconst label = `Ob: ${cellData.ObjectNumber} Im: ${cellData.ImageNumber}`;\r\n\t\t\t// We: ${cellData.Well}\r\n\t\t\t// Pl: ${cellData.Plate}`;\r\n\t\t\treturn {\r\n\t\t\t\tid: idx,\r\n\t\t\t\taddress: dataURL,\r\n\t\t\t\tinfo: label,\r\n\t\t\t\tdata: cellData,\r\n\t\t\t\tcellPair: { ImageNumber: cellData.ImageNumber, ObjectNumber: cellData.ObjectNumber },\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\tconst newTileState = {\r\n\t\t\tnegative: cellStates.filter((e, idx) => classes[idx] === 0),\r\n\t\t\tpositive: cellStates.filter((e, idx) => classes[idx] === 1),\r\n\t\t\tunclassified: cellStates.filter((e, idx) => classes[idx] === -1),\r\n\t\t};\r\n\t\t// console.log(newTileState);\r\n\t\treturn newTileState;\r\n\t}\r\n\r\n\tfunction onChange(sourceId, sourceIndex, targetIndex, targetId) {\r\n\t\tif (targetId) {\r\n\t\t\tconst result = move(tileState[sourceId], tileState[targetId], sourceIndex, targetIndex);\r\n\t\t\treturn setTileState({\r\n\t\t\t\t...tileState,\r\n\t\t\t\t[sourceId]: result[0],\r\n\t\t\t\t[targetId]: result[1],\r\n\t\t\t});\r\n\t\t}\r\n\t\t// console.log(tileState, sourceId, tileState[sourceId]);\r\n\t\t// console.log('s', sourceIndex, 't', targetIndex);\r\n\r\n\t\tconst result = swap(tileState[sourceId], sourceIndex, targetIndex);\r\n\t\treturn setTileState({\r\n\t\t\t...tileState,\r\n\t\t\t[sourceId]: result,\r\n\t\t});\r\n\t}\r\n\r\n\tconst handleClickOpenImNumFetchDropdown = () => {\r\n\t\tsetAnchorEl(null);\r\n\t\tsetOpenFetchDropdown(true);\r\n\t};\r\n\r\n\tconst handleClickCloseImNumFetchDropdown = () => {\r\n\t\tsetOpenFetchDropdown(false);\r\n\t\thandleCloseFetchDropDown('ImageNumber');\r\n\t};\r\n\tconsole.log('Load the App');\r\n\treturn (\r\n\t\t<GridContextProvider onChange={onChange}>\r\n\t\t\t{/* <Paper variant=\"outlined\" style = {{height: '100%', width: '80%', margin:\"3%\"}}> */}\r\n\t\t\t<div style={{ overflowX: 'hidden', height: '100%', width: '100%' }}>\r\n\t\t\t\t<Row style={{ marginTop: '2%' }}>\r\n\t\t\t\t\t<Image\r\n\t\t\t\t\t\tsrc={logo}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tmarginLeft: '11%',\r\n\t\t\t\t\t\t\theight: '30%',\r\n\t\t\t\t\t\t\twidth: '25%',\r\n\t\t\t\t\t\t\tposition: 'relative',\r\n\t\t\t\t\t\t\tmaxHeight: '125px',\r\n\t\t\t\t\t\t\tmarginBottom: '2%',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t></Image>\r\n\t\t\t\t\t<Col style={{ left: '35%' }}>\r\n\t\t\t\t\t\t<Help></Help>\r\n\t\t\t\t\t</Col>\r\n\r\n\t\t\t\t\t<Col style={{ left: '20%', right: 5 }}>\r\n\t\t\t\t\t\t<UploadButton\r\n\t\t\t\t\t\t\thandleUpload={handleUpload}\r\n\t\t\t\t\t\t\tuploadButtonEnabled={uploadButtonEnabled}\r\n\t\t\t\t\t\t\tuploading={uploading}\r\n\t\t\t\t\t\t\tsuccess={success}\r\n\t\t\t\t\t\t></UploadButton>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col style={{ left: '5%' }}>\r\n\t\t\t\t\t\t<DownloadButton\r\n\t\t\t\t\t\t\tdownloadButtonEnabled={downloadButtonEnabled}\r\n\t\t\t\t\t\t\thandleDownload={handleDownload}\r\n\t\t\t\t\t\t></DownloadButton>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Paper\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t//color=\"primary\"\r\n\t\t\t\t\t\t//elevation={3}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tmarginLeft: '30%',\r\n\t\t\t\t\t\t\tmarginRight: '30%',\r\n\t\t\t\t\t\t\theight: 75,\r\n\t\t\t\t\t\t\twidth: 550,\r\n\t\t\t\t\t\t\toutlineColor: '#6697CD',\r\n\t\t\t\t\t\t\t//boxShadow: \"0px 3px 1px -2px #6697CD,0px 2px 2px 0px #6697CD ,0px 1px 5px 0px #6697CD\"\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Grid container justify=\"center\" spacing={2} style={{ marginBottom: 10, marginTop: 10 }}>\r\n\t\t\t\t\t\t\t<Grid key={0} item>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tdisabled={!fetchButtonEnabled}\r\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\taria-controls=\"simple-menu\"\r\n\t\t\t\t\t\t\t\t\taria-haspopup=\"true\"\r\n\t\t\t\t\t\t\t\t\tonClick={handleClickFetchDropDown}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tFetch\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t<Menu\r\n\t\t\t\t\t\t\t\t\tid=\"simple-menu\"\r\n\t\t\t\t\t\t\t\t\tanchorEl={anchorEl}\r\n\t\t\t\t\t\t\t\t\tkeepMounted\r\n\t\t\t\t\t\t\t\t\topen={Boolean(anchorEl)}\r\n\t\t\t\t\t\t\t\t\tonClose={() => handleCloseFetchDropDown(null)}\r\n\t\t\t\t\t\t\t\t\tonSubmit={(e) => {\r\n\t\t\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\t\t\thandleCloseFetchDropDown(null);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<MenuItem onClick={() => handleCloseFetchDropDown('Random')}>Random</MenuItem>\r\n\t\t\t\t\t\t\t\t\t<MenuItem onClick={() => handleCloseFetchDropDown('Positive')}>Positive</MenuItem>\r\n\t\t\t\t\t\t\t\t\t<MenuItem onClick={() => handleCloseFetchDropDown('Negative')}>Negative</MenuItem>\r\n\t\t\t\t\t\t\t\t\t<MenuItem onClick={handleClickOpenImNumFetchDropdown}>By Image</MenuItem>\r\n\t\t\t\t\t\t\t\t\t<MenuItem onClick={() => handleCloseFetchDropDown('Confusing')}>Confusing</MenuItem>\r\n\t\t\t\t\t\t\t\t\t<MenuItem onClick={() => handleCloseFetchDropDown('MorePositive')}>\r\n\t\t\t\t\t\t\t\t\t\tMore Positive\r\n\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t<MenuItem onClick={() => handleCloseFetchDropDown('MoreNegative')}>\r\n\t\t\t\t\t\t\t\t\t\tMore Negative\r\n\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t<MenuItem onClick={() => handleCloseFetchDropDown('TrainingPositive')}>\r\n\t\t\t\t\t\t\t\t\t\tTraining Set Positive\r\n\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t<MenuItem onClick={() => handleCloseFetchDropDown('TrainingNegative')}>\r\n\t\t\t\t\t\t\t\t\t\tTraining Set Negative\r\n\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\r\n\t\t\t\t\t\t\t\t\t<Dialog open={openFetchDropdown} onClose={() => handleCloseFetchDropDown(null)}>\r\n\t\t\t\t\t\t\t\t\t\t<DialogTitle>\r\n\t\t\t\t\t\t\t\t\t\t\t{/* <Typography variant=\"h3\" align=\"center\"> */}\r\n\t\t\t\t\t\t\t\t\t\t\tFetch By Image\r\n\t\t\t\t\t\t\t\t\t\t\t{/* </Typography> */}\r\n\t\t\t\t\t\t\t\t\t\t</DialogTitle>\r\n\t\t\t\t\t\t\t\t\t\t<DialogContent>\r\n\t\t\t\t\t\t\t\t\t\t\t<DialogContentText>\r\n\t\t\t\t\t\t\t\t\t\t\t\tSelect the image number you would like to fetch from.\r\n\t\t\t\t\t\t\t\t\t\t\t</DialogContentText>\r\n\t\t\t\t\t\t\t\t\t\t\t<form\r\n\t\t\t\t\t\t\t\t\t\t\t\tnoValidate\r\n\t\t\t\t\t\t\t\t\t\t\t\tonSubmit={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleClickCloseImNumFetchDropdown();\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FormControl>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tevent.target.value === null ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tevent.target.value === undefined ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tevent.target.value === ''\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetSelectedFetchImageNumber(parseInt(event.target.value));\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFetchImageNumberButtonEnabled(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tinputProps={{ step: 1, min: 1 }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={selectedFetchImageNumber}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Image Number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t></TextField>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t\t\t\t</DialogContent>\r\n\t\t\t\t\t\t\t\t\t\t<DialogActions>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={!fetchImageNumberButtonEnabled}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleClickCloseImNumFetchDropdown}\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\tOk\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</DialogActions>\r\n\t\t\t\t\t\t\t\t\t</Dialog>\r\n\t\t\t\t\t\t\t\t</Menu>\r\n\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t<Grid key={1} item>\r\n\t\t\t\t\t\t\t\t{/* style = {{height: \"5vw\", width:\"10vw\", minHeight:2, maxHeight: 35, maxwidth: 50, fontSize: \"max(1.5vw, 20)\"}}  */}\r\n\t\t\t\t\t\t\t\t<Button disabled={!trainButtonEnabled} variant=\"contained\" onClick={handleTrain}>\r\n\t\t\t\t\t\t\t\t\tTrain\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t<Dialog fullWidth={500} open={openTrainDropdown}>\r\n\t\t\t\t\t\t\t\t\t<DialogTitle>Training the Classifier</DialogTitle>\r\n\t\t\t\t\t\t\t\t\t<DialogContent>\r\n\t\t\t\t\t\t\t\t\t\t<div width={300} ref={trainingAccuracyCanvasParentRef}></div>\r\n\t\t\t\t\t\t\t\t\t\t<div width={300} ref={trainingLossCanvasParentRef}></div>\r\n\t\t\t\t\t\t\t\t\t</DialogContent>\r\n\t\t\t\t\t\t\t\t</Dialog>\r\n\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t<Grid key={2} item>\r\n\t\t\t\t\t\t\t\t{/* <Button disabled={!evaluateButtonEnabled} variant=\"contained\" onClick={()=>{}}>Evaluate</Button>  */}\r\n\t\t\t\t\t\t\t\t{/* TODO: need to fix button disabled DONE*/}\r\n\t\t\t\t\t\t\t\t{!evaluateButtonEnabled ? (\r\n\t\t\t\t\t\t\t\t\t<Button disabled={!evaluateButtonEnabled} variant=\"contained\" onClick={() => {}}>\r\n\t\t\t\t\t\t\t\t\t\tEvaluate\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<Evaluate confusionMatrix={confusionMatrix}></Evaluate>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t<Grid key={3} item>\r\n\t\t\t\t\t\t\t\t{/* <Button  disabled={!scoreAllButtonEnabled} variant=\"contained\" onClick={()=>{}}>Score All</Button> */}\r\n\t\t\t\t\t\t\t\t{/* TODO: need to fix button disabled DONE*/}\r\n\r\n\t\t\t\t\t\t\t\t{!evaluateButtonEnabled ? (\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tdisabled={!evaluateButtonEnabled}\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={handleScoreAll}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tScore All\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<ScoreAll\r\n\t\t\t\t\t\t\t\t\t\thistogramData={histogramData}\r\n\t\t\t\t\t\t\t\t\t\tscoreTable={scoreTable}\r\n\t\t\t\t\t\t\t\t\t\thandleScoreAll={handleScoreAll}\r\n\t\t\t\t\t\t\t\t\t\tscoreTableIsUpToDate={scoreTableIsUpToDate}\r\n\t\t\t\t\t\t\t\t\t\t// downloadScoreTableFunction={downloadScoreTableFunction}\r\n\t\t\t\t\t\t\t\t\t\tscoreTableCsvString={scoreTableCsvString}\r\n\t\t\t\t\t\t\t\t\t\talphas={scoreAlphas}\r\n\t\t\t\t\t\t\t\t\t\thandleOpenBigPicture={handleOpenBigPicture}\r\n\t\t\t\t\t\t\t\t\t></ScoreAll>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Paper>\r\n\t\t\t\t</Row>\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<label\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\ttextAlign: 'left',\r\n\t\t\t\t\t\t\tbackgroundColor: 'white',\r\n\t\t\t\t\t\t\tpaddingLeft: '10%',\r\n\t\t\t\t\t\t\tmarginBottom: '0.5%',\r\n\t\t\t\t\t\t\tuserSelect: 'none',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tUnclassified{' '}\r\n\t\t\t\t\t</label>\r\n\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<GridDropZone\r\n\t\t\t\t\t\t\tclassName=\"dropzone \"\r\n\t\t\t\t\t\t\tid=\"unclassified\"\r\n\t\t\t\t\t\t\tboxesPerRow={8}\r\n\t\t\t\t\t\t\trowHeight={80}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\theight: '20vw',\r\n\t\t\t\t\t\t\t\tmaxHeight: 200,\r\n\t\t\t\t\t\t\t\tminHeight: 150,\r\n\t\t\t\t\t\t\t\tmarginBottom: 10,\r\n\t\t\t\t\t\t\t\tmarginLeft: '10%',\r\n\t\t\t\t\t\t\t\twidth: '80%',\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{!fetching ? (\r\n\t\t\t\t\t\t\t\ttileState.unclassified.map((item) => (\r\n\t\t\t\t\t\t\t\t\t<GridItem\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"hoverTest\"\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\theight: '15vw',\r\n\t\t\t\t\t\t\t\t\t\t\twidth: '15vw',\r\n\t\t\t\t\t\t\t\t\t\t\tminHeight: 80,\r\n\t\t\t\t\t\t\t\t\t\t\tminWidth: 80,\r\n\t\t\t\t\t\t\t\t\t\t\tmaxHeight: 120,\r\n\t\t\t\t\t\t\t\t\t\t\tmaxWidth: 120,\r\n\t\t\t\t\t\t\t\t\t\t\tpadding: 10,\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tkey={item.id}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"grid-item\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tonDoubleClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// console.log('double click: ' + item.info);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleOpenCellBigPicture(item.cellPair);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"grid-item-content\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundImage: `url(${item.address})`,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\theight: '5vw',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '5vw',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"hoverText\">{item.info}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</GridItem>\r\n\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<CircularProgress\r\n\t\t\t\t\t\t\t\t\tstyle={{ height: '6vw', width: '6vw', marginTop: '6%', marginLeft: '45%' }}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</GridDropZone>\r\n\t\t\t\t\t\t<Dialog\r\n\t\t\t\t\t\t\tstyle={{ alignItems: 'center' }}\r\n\t\t\t\t\t\t\tonClose={handleCloseCellBigPicture}\r\n\t\t\t\t\t\t\t// fullWidth={480}\r\n\t\t\t\t\t\t\t// maxWidth={480}\r\n\t\t\t\t\t\t\topen={cellBigPictureDialogOpen}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<DialogTitle>{bigPictureTitle}</DialogTitle>\r\n\t\t\t\t\t\t\t{/* <DialogTitle>Loss and Accuracy</DialogTitle> */}\r\n\t\t\t\t\t\t\t<DialogContent style={{ alignItems: 'center', justifyContent: 'center' }}>\r\n\t\t\t\t\t\t\t\t<img width={430} height={430} src={bigPictureSource}></img>\r\n\t\t\t\t\t\t\t</DialogContent>\r\n\t\t\t\t\t\t</Dialog>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<label\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttextAlign: 'left',\r\n\t\t\t\t\t\t\t\tbackgroundColor: 'white',\r\n\t\t\t\t\t\t\t\tpaddingLeft: '11%',\r\n\t\t\t\t\t\t\t\tuserSelect: 'none',\r\n\t\t\t\t\t\t\t\tmarginBottom: '0.5%',\r\n\t\t\t\t\t\t\t\tmarginTop: 0,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tPositive\r\n\t\t\t\t\t\t</label>\r\n\r\n\t\t\t\t\t\t<label\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttextAlign: 'left',\r\n\t\t\t\t\t\t\t\tbackgroundColor: 'white',\r\n\t\t\t\t\t\t\t\tpaddingRight: '8%',\r\n\t\t\t\t\t\t\t\tuserSelect: 'none',\r\n\t\t\t\t\t\t\t\tmargin: 'auto',\r\n\t\t\t\t\t\t\t\tmarginBottom: '0.5%',\r\n\t\t\t\t\t\t\t\tmarginTop: 0,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tNegative\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<div style={{ width: '39%', marginLeft: '11%' }}>\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\theight: '200px',\r\n\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\toverflowY: 'scroll',\r\n\t\t\t\t\t\t\t\t\toverflowX: 'hidden',\r\n\t\t\t\t\t\t\t\t\t// msOverflowY: 'scroll',\r\n\t\t\t\t\t\t\t\t\t// msOverflowStyle: 'none',\r\n\r\n\t\t\t\t\t\t\t\t\t// scrollbarWidth: 'none',\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<GridDropZone\r\n\t\t\t\t\t\t\t\t\tclassName=\"dropzone positive\"\r\n\t\t\t\t\t\t\t\t\tid=\"positive\"\r\n\t\t\t\t\t\t\t\t\tboxesPerRow={4}\r\n\t\t\t\t\t\t\t\t\trowHeight={80}\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\theight: 80 * Math.floor(tileState.positive.length / 4 + 1),\r\n\t\t\t\t\t\t\t\t\t\tminHeight: 240,\r\n\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\toverflowY: 'hidden',\r\n\t\t\t\t\t\t\t\t\t\t// marginLeft: '22%',\r\n\t\t\t\t\t\t\t\t\t\talignSelf: 'flex-end',\r\n\t\t\t\t\t\t\t\t\t\t// marginRight: '11%',\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{!initialFetchingPositiveNegative ? (\r\n\t\t\t\t\t\t\t\t\t\ttileState.positive.map((item) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<GridItem\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"hoverTest\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\theight: '15vw',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '15vw',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tminHeight: 80,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tminWidth: 80,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmaxHeight: 105,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmaxWidth: 105,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tpadding: 10,\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={item.id}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"grid-item\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonDoubleClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// console.log('double click: ' + item.info);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleOpenCellBigPicture(item.cellPair);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"grid-item-content\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundImage: `url(${item.address})`,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theight: '5vw',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '5vw',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"hoverText\">{item.info}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</GridItem>\r\n\t\t\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<CircularProgress\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ height: '6vw', width: '6vw', marginTop: '15%', marginLeft: '43%' }}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</GridDropZone>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div style={{ width: '39%', marginRight: '11%' }}>\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\theight: '200px',\r\n\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\toverflowY: 'scroll',\r\n\t\t\t\t\t\t\t\t\toverflowX: 'hidden',\r\n\r\n\t\t\t\t\t\t\t\t\t// msOverflowY: 'scroll',\r\n\t\t\t\t\t\t\t\t\t// msOverflowStyle: 'none',\r\n\r\n\t\t\t\t\t\t\t\t\t// scrollbarWidth: 'none',\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<GridDropZone\r\n\t\t\t\t\t\t\t\t\tclassName=\"dropzone negative\"\r\n\t\t\t\t\t\t\t\t\tid=\"negative\"\r\n\t\t\t\t\t\t\t\t\tboxesPerRow={4}\r\n\t\t\t\t\t\t\t\t\trowHeight={80}\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\theight: 80 * Math.floor(tileState.negative.length / 4 + 1),\r\n\t\t\t\t\t\t\t\t\t\tminHeight: 240,\r\n\t\t\t\t\t\t\t\t\t\tmarginRight: '22%',\r\n\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\toverflowY: 'hidden',\r\n\t\t\t\t\t\t\t\t\t\talignSelf: 'flex-start',\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{!initialFetchingPositiveNegative ? (\r\n\t\t\t\t\t\t\t\t\t\ttileState.negative.map((item) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<GridItem\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"hoverTest\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\theight: '15vw',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '15vw',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tminHeight: 80,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tminWidth: 80,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmaxHeight: 105,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmaxWidth: 105,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tpadding: 10,\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={item.address}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"grid-item\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonDoubleClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// console.log('double click: ' + item.info);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleOpenCellBigPicture(item.cellPair);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"grid-item-content\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundImage: `url(${item.address})`,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theight: '5vw',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '5vw',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"hoverText\">{item.info}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</GridItem>\r\n\t\t\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<CircularProgress\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ height: '6vw', width: '6vw', marginTop: '15%', marginLeft: '43%' }}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</GridDropZone>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{/* </Paper> */}\r\n\t\t</GridContextProvider>\r\n\t);\r\n}\r\n\r\nexport default TestUIMVP;\r\n"],"sourceRoot":""}