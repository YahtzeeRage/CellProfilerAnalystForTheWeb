{"version":3,"sources":["webpack://gatsby-test/./node_modules/@material-ui/core/esm/CircularProgress/CircularProgress.js","webpack://gatsby-test/./node_modules/uuid/dist/esm-browser/rng.js","webpack://gatsby-test/./node_modules/uuid/dist/esm-browser/regex.js","webpack://gatsby-test/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://gatsby-test/./node_modules/uuid/dist/esm-browser/validate.js","webpack://gatsby-test/./node_modules/uuid/dist/esm-browser/v4.js","webpack://gatsby-test/./src/pages/canvasWebWorkerDemo.js"],"names":["SIZE","CircularProgress","props","ref","classes","className","_props$color","color","_props$disableShrink","disableShrink","_props$size","size","style","_props$thickness","thickness","_props$value","value","_props$variant","variant","other","circleStyle","rootStyle","rootProps","circumference","Math","PI","strokeDasharray","toFixed","round","strokeDashoffset","concat","transform","root","determinate","indeterminate","static","width","height","role","svg","viewBox","circle","circleDisableShrink","circleDeterminate","circleIndeterminate","circleStatic","cx","cy","r","fill","strokeWidth","theme","display","transition","transitions","create","animation","colorPrimary","palette","primary","main","colorSecondary","secondary","stroke","transformOrigin","name","flip","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","uuid","byteToHex","i","push","toString","substr","arr","offset","arguments","length","undefined","toLowerCase","TypeError","options","buf","rnds","random","React","buttonsEnabled","setButtonsEnabled","canvasWebWorker","setCanvasWebWorker","dataWebWorker","setDataWebWorker","blobURL","setBlobURL","fileListObject","setFileListObject","ImageNumber","ObjectNumber","cellPair","setCellpair","dataToCanvasWorkerChannel","MessageChannel","Worker","addEventListener","event","console","log","message","postMessage","action","port1","port2","canvasWorkerActionPromise","data","UUID","uuidv4","Promise","resolve","eventHandler","removeEventListener","handleCanvasCall","then","URL","createObjectURL","blob","getType","getArgs","cellPairs","blobUrls","handleUpload","eventObject","worker","target","files","once","resize","disabled","onClick","src","endIcon","component","type","hidden","webkitdirectory","mozdirectory","msdirectory","odirectory","directory","multiple","onChange","onInput","valueAsNumber"],"mappings":"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","file":"component---src-pages-canvas-web-worker-demo-js-b1b914f549b602df1fe7.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nvar SIZE = 44;\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-block'\n    },\n\n    /* Styles applied to the root element if `variant=\"static\"`. */\n    static: {\n      transition: theme.transitions.create('transform')\n    },\n\n    /* Styles applied to the root element if `variant=\"indeterminate\"`. */\n    indeterminate: {\n      animation: '$circular-rotate 1.4s linear infinite'\n    },\n\n    /* Styles applied to the root element if `variant=\"determinate\"`. */\n    determinate: {\n      transition: theme.transitions.create('transform')\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the `svg` element. */\n    svg: {\n      display: 'block' // Keeps the progress centered\n\n    },\n\n    /* Styles applied to the `circle` svg path. */\n    circle: {\n      stroke: 'currentColor' // Use butt to follow the specification, by chance, it's already the default CSS value.\n      // strokeLinecap: 'butt',\n\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"static\"`. */\n    circleStatic: {\n      transition: theme.transitions.create('stroke-dashoffset')\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"indeterminate\"`. */\n    circleIndeterminate: {\n      animation: '$circular-dash 1.4s ease-in-out infinite',\n      // Some default value that looks fine waiting for the animation to kicks in.\n      strokeDasharray: '80px, 200px',\n      strokeDashoffset: '0px' // Add the unit to fix a Edge 16 and below bug.\n\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"determinate\"`. */\n    circleDeterminate: {\n      transition: theme.transitions.create('stroke-dashoffset')\n    },\n    '@keyframes circular-rotate': {\n      '0%': {\n        // Fix IE 11 wobbly\n        transformOrigin: '50% 50%'\n      },\n      '100%': {\n        transform: 'rotate(360deg)'\n      }\n    },\n    '@keyframes circular-dash': {\n      '0%': {\n        strokeDasharray: '1px, 200px',\n        strokeDashoffset: '0px'\n      },\n      '50%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-15px'\n      },\n      '100%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-125px'\n      }\n    },\n\n    /* Styles applied to the `circle` svg path if `disableShrink={true}`. */\n    circleDisableShrink: {\n      animation: 'none'\n    }\n  };\n};\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nvar CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$disableShrink = props.disableShrink,\n      disableShrink = _props$disableShrink === void 0 ? false : _props$disableShrink,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 40 : _props$size,\n      style = props.style,\n      _props$thickness = props.thickness,\n      thickness = _props$thickness === void 0 ? 3.6 : _props$thickness,\n      _props$value = props.value,\n      value = _props$value === void 0 ? 0 : _props$value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'indeterminate' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"]);\n\n  var circleStyle = {};\n  var rootStyle = {};\n  var rootProps = {};\n\n  if (variant === 'determinate' || variant === 'static') {\n    var circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = \"\".concat(((100 - value) / 100 * circumference).toFixed(3), \"px\");\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, color !== 'inherit' && classes[\"color\".concat(capitalize(color))], {\n      'determinate': classes.determinate,\n      'indeterminate': classes.indeterminate,\n      'static': classes.static\n    }[variant]),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other), /*#__PURE__*/React.createElement(\"svg\", {\n    className: classes.svg,\n    viewBox: \"\".concat(SIZE / 2, \" \").concat(SIZE / 2, \" \").concat(SIZE, \" \").concat(SIZE)\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    className: clsx(classes.circle, disableShrink && classes.circleDisableShrink, {\n      'determinate': classes.circleDeterminate,\n      'indeterminate': classes.circleIndeterminate,\n      'static': classes.circleStatic\n    }[variant]),\n    style: circleStyle,\n    cx: SIZE,\n    cy: SIZE,\n    r: (SIZE - thickness) / 2,\n    fill: \"none\",\n    strokeWidth: thickness\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCircularProgress',\n  flip: false\n})(CircularProgress);","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0; // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","\r\nimport React from 'react';\r\nimport {Button, CircularProgress}from '@material-ui/core'; \r\nimport TextField from '@material-ui/core/TextField';\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport UploadHandler from '../classes/UploadHandler'\r\nimport Classifier from '../classes/Classifier'\r\nimport * as tfvis from '@tensorflow/tfjs-vis'\r\nimport { v4 as uuidv4 } from 'uuid';\r\n  import \"../dndstyles.css\";\r\n\r\n\r\n\r\nfunction TestUI(){\r\n\r\n    const [buttonsEnabled, setButtonsEnabled] = React.useState(false)\r\n    const [canvasWebWorker, setCanvasWebWorker] = React.useState(null)\r\n    const [dataWebWorker, setDataWebWorker] = React.useState(null)\r\n    const [blobURL, setBlobURL] = React.useState(undefined)\r\n    const [fileListObject, setFileListObject] = React.useState(null)\r\n    const [cellPair, setCellpair] = React.useState({ImageNumber:1, ObjectNumber:1})\r\n\r\n    React.useEffect(() => {\r\n\r\n        const dataToCanvasWorkerChannel = new MessageChannel();\r\n\r\n        const canvasWebWorker = new Worker('../canvasWorker.js')\r\n        canvasWebWorker.addEventListener(\"error\", event => {\r\n            console.log('[canvasWebWorker] Error', event.message, event);\r\n        });   \r\n        canvasWebWorker.postMessage({action: \"connectToDataWorker\"}, [dataToCanvasWorkerChannel.port1])    \r\n        setCanvasWebWorker(canvasWebWorker)\r\n\r\n        const dataWebWorker = new Worker('../dataWorker.js')\r\n        dataWebWorker.addEventListener(\"error\", event => {\r\n            console.log('[dataWebWorker] Error', event.message, event);\r\n        });     \r\n        dataWebWorker.postMessage({action: \"connectToCanvasWorker\"}, [dataToCanvasWorkerChannel.port2])\r\n        setDataWebWorker(dataWebWorker)\r\n\r\n    }, [])\r\n\r\n\r\n    // const canvasWorkerActionPromise = async (action, data) => {\r\n    //     console.log(data)\r\n    //     const UUID = uuidv4()\r\n    //     return new Promise(resolve => {\r\n    //         canvasWebWorker.addEventListener(\"message\", event => {\r\n    //             if (event.data.uuid === UUID) {\r\n    //                 resolve(event)\r\n    //             }\r\n                \r\n    //         }, {once: true})\r\n    //         canvasWebWorker.postMessage({action, ...data, uuid:UUID});\r\n    //     })\r\n        \r\n    // }\r\n\r\n    const canvasWorkerActionPromise = function( action, data) {\r\n        console.log(\"workerPortActionPromise enter\")\r\n        const UUID = uuidv4()\r\n      \r\n        return new Promise (resolve => {\r\n          let eventHandler = (event) => {\r\n            if (event.data.uuid === UUID) {\r\n                canvasWebWorker.removeEventListener('message', eventHandler);\r\n                resolve(event)\r\n            }\r\n          }\r\n          canvasWebWorker.addEventListener('message', eventHandler)\r\n          \r\n          canvasWebWorker.postMessage({action, ...data, uuid:UUID})\r\n        })\r\n        \r\n      }\r\n\r\n    const workerActionPromise = (worker, action, data) => {\r\n        const UUID = uuidv4()\r\n        return new Promise(resolve => {\r\n            worker.addEventListener(\"message\", event => {\r\n                if (event.data.uuid === UUID) {\r\n                    resolve(event)\r\n                }\r\n                \r\n            }, {once: true})\r\n            worker.postMessage({action, ...data, uuid:UUID});\r\n        })\r\n        \r\n    }\r\n\r\n    const handleCanvasCall = async function() {\r\n        canvasWorkerActionPromise(\"test\", {fileListObject}).then((event)=>{\r\n            console.log(URL.createObjectURL(event.data.blob)); \r\n            setBlobURL(URL.createObjectURL(event.data.blob))\r\n        })\r\n\r\n        canvasWorkerActionPromise('get', {\r\n            getType: 'blobUrlsFromCellPairs', \r\n            getArgs: {cellPairs: [cellPair]}\r\n        })\r\n            .then(event => {\r\n                console.log(event)\r\n                setBlobURL(event.data.blobUrls[0])\r\n            })\r\n    }\r\n\r\n    const handleUpload = function(eventObject) {\r\n\r\n        workerActionPromise(dataWebWorker, 'init', {fileListObject:eventObject.target.files})\r\n            .then(() => {\r\n                setButtonsEnabled(true)\r\n            })\r\n\r\n        setFileListObject(eventObject.target.files)\r\n        \r\n    }\r\n\r\n    const handleCanvasCallArg = async function(ImageNumber,ObjectNumber) {\r\n        canvasWorkerActionPromise(\"test\", {fileListObject}).then((event)=>{\r\n            console.log(URL.createObjectURL(event.data.blob)); \r\n            setBlobURL(URL.createObjectURL(event.data.blob))\r\n        })\r\n\r\n        canvasWorkerActionPromise('get', {\r\n            getType: 'blobUrlsFromCellPairs', \r\n            getArgs: {cellPairs: [{ImageNumber, ObjectNumber}]}\r\n        })\r\n            .then(event => {\r\n                console.log(event)\r\n                setBlobURL(event.data.blobUrls[0])\r\n            })\r\n    }\r\n    \r\n\r\n    \r\n    return (\r\n        <div style={{resize: 'horizontal'}}>\r\n        <Button disabled={!buttonsEnabled} onClick={handleCanvasCall}>test offscreen canvas</Button>\r\n        <img width={100} height={100} src={blobURL}></img>\r\n        <Button endIcon={<CircularProgress/>} variant=\"contained\" component=\"label\" onClick={()=>console.log(\"Upload!\")}> \r\n            Upload\r\n            <input  type=\"file\"\r\n                    hidden webkitdirectory=\"true\"\r\n                    mozdirectory=\"true\"\r\n                    msdirectory=\"true\"\r\n                    odirectory=\"true\"\r\n                    directory=\"true\"\r\n                    multiple\r\n                    onChange = {(eventObject)=>{handleUpload(eventObject)}}   \r\n            />\r\n        </Button>\r\n        <p>ObjectNumber</p>\r\n        <input type={\"number\"} onInput={(event)=>setCellpair({ObjectNumber:event.target.valueAsNumber, ImageNumber:cellPair.ImageNumber})}></input>\r\n        <p>ImageNumber</p>\r\n        <input type={\"number\"} onInput={(event)=>setCellpair({ObjectNumber:cellPair.ObjectNumber, ImageNumber:event.target.valueAsNumber})}></input>\r\n\r\n    </div>\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default TestUI; \r\n"],"sourceRoot":""}