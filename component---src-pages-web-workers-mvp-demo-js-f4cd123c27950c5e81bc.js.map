{"version":3,"sources":["webpack://gatsby-test/./node_modules/uuid/dist/esm-browser/rng.js","webpack://gatsby-test/./node_modules/uuid/dist/esm-browser/regex.js","webpack://gatsby-test/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://gatsby-test/./node_modules/uuid/dist/esm-browser/validate.js","webpack://gatsby-test/./node_modules/uuid/dist/esm-browser/v4.js","webpack://gatsby-test/./src/pages/WebWorkersMVPDemo.js","webpack://gatsby-test/./src/jones.jpg"],"names":["getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","uuid","byteToHex","i","push","toString","substr","arr","offset","arguments","length","undefined","toLowerCase","TypeError","options","buf","rnds","random","useStyles","makeStyles","theme","root","display","alignItems","wrapper","margin","spacing","position","buttonSuccess","backgroundColor","green","fabProgress","color","top","left","zIndex","buttonProgress","marginTop","marginLeft","React","anchorEl","setAnchorEl","constructTileState","tileState","setTileState","fetchButtonEnabled","setFetchButtonEnabled","trainButtonEnabled","setTrainButtonEnabled","evaluateButtonEnabled","setEvaluateButtonEnabled","downloadButtonEnabled","setDownloadButtonEnabled","uploadButtonEnabled","setUploadButtonEnabled","uploading","setUploading","success","setSuccess","fetching","openFetchDropdown","setOpenFetchDropdown","openTrainDropdown","setOpenTrainDropdown","canvasWebWorker","setCanvasWebWorker","dataWebWorker","setDataWebWorker","classifierWebWorker","setClassifierWebWorker","confusionMatrix","setConfusionMatrix","trainingObject","setTrainingObject","activeCellPairs","setActiveCellPairs","scoreTableIsUpToDate","setScoreTableIsUpToDate","setScoreTableObject","dataToCanvasWorkerChannel","MessageChannel","dataToClassifierWorkerChannel","constructWebWorker","postMessage","action","port1","port2","sourcePath","name","worker","Worker","addEventListener","event","console","log","message","classes","buttonClassname","clsx","handleCloseFetchDropDown","fetchType","handleFetch","unclassified","positive","negative","workerActionPromise","getType","getArgs","amount","then","cellPairs","data","getResult","newTileState","blobUrls","classType","filteredCellPairs","slicedCellPairs","slice","sortedCellPairs","slicedSortedCellPairs","positiveCellPairs","trainingData","map","dataRow","ImageNumber","ObjectNumber","trainingLabels","negativeCellPairs","handleTrain","element","id","totalCellPairs","concat","newLabels","Array","fill","dataRows","newTrainingObject","classifierType","featureIndicesToUse","trainSequencePromise","currentTrainingObject","newConfusionMatrix","UUID","uuidv4","Promise","resolve","selfDestructingEventHandler","removeEventListener","handleUpload","eventObject","fileListObject","target","files","initialTrainingObject","handleScoreAll","newScoreTableObject","scoreTableObject","handleDownload","tf","model","save","dataURLs","dataURL","idx","info","address","handleCloseFetchDropdown","onChange","sourceId","sourceIndex","targetIndex","targetId","result","move","swap","style","overflowX","hieght","width","src","logo","height","maxHeight","marginBottom","className","title","aria-label","component","type","hidden","webkitdirectory","mozdirectory","msdirectory","odirectory","directory","multiple","disabled","marginRight","onClick","container","justify","key","item","variant","aria-controls","aria-haspopup","currentTarget","keepMounted","open","Boolean","onClose","noValidate","autoFocus","value","jones","textAlign","paddingLeft","userSelect","boxesPerRow","rowHeight","minHeight","minWidth","maxWidth","padding","backgroundImage","paddingRight"],"mappings":"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","file":"component---src-pages-web-workers-mvp-demo-js-f4cd123c27950c5e81bc.js","sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0; // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import React from 'react';\r\nimport { Row, Col, Container } from 'reactstrap';\r\nimport { Box, Button, Grid, IconButton, Menu, MenuItem, Card } from '@material-ui/core';\r\nimport logo from '../cpa_logo(blue).svg';\r\nimport { Image, Dropdown, DropdownButton } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { green } from '@material-ui/core/colors';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\n\r\nimport UploadHandler from '../classes/UploadHandler';\r\nimport { ClassifierManager } from '../classes/ClassifierManager';\r\nimport { ImageHandler } from '../classes/ImageHandler';\r\nimport UserUploadFileHandler from '../classes/UserUploadFileHandler';\r\nimport { ImageGridManager } from '../classes/imGridManager';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n//import UploadButton from './UploadButton'\r\n\r\nimport Evaluate from './AbbyUIButtons/UIEvaluateButton';\r\nimport ScoreAll from './AbbyUIButtons/UIScoreAllButton';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport jones from '../jones.jpg';\r\n\r\nimport { GridContextProvider, GridDropZone, GridItem, swap, move } from 'react-grid-dnd';\r\n\r\nimport '../dndstyles.css';\r\nimport * as tf from '@tensorflow/tfjs';\r\nimport UploadButton from './UploadButton';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t},\r\n\twrapper: {\r\n\t\tmargin: theme.spacing(1),\r\n\t\tposition: 'relative',\r\n\t},\r\n\tbuttonSuccess: {\r\n\t\tbackgroundColor: green[500],\r\n\t\t'&:hover': {\r\n\t\t\tbackgroundColor: green[700],\r\n\t\t},\r\n\t},\r\n\tfabProgress: {\r\n\t\tcolor: green[500],\r\n\t\tposition: 'absolute',\r\n\t\ttop: -6,\r\n\t\tleft: -6,\r\n\t\tzIndex: 1,\r\n\t},\r\n\tbuttonProgress: {\r\n\t\tcolor: green[500],\r\n\t\tposition: 'absolute',\r\n\t\ttop: '50%',\r\n\t\tleft: '50%',\r\n\t\tmarginTop: -12,\r\n\t\tmarginLeft: -12,\r\n\t},\r\n}));\r\n\r\nfunction TestUIMVP() {\r\n\tconst [anchorEl, setAnchorEl] = React.useState(null);\r\n\tconst [dataProvider, setDataProvider] = React.useState(null);\r\n\r\n\t// var classifierManager = null;\r\n\t// const [classifierManager, setClassifierManager] = React.useState(null)\r\n\tconst [fileListObject, setFileListObject] = React.useState(null);\r\n\tconst [tileState, setTileState] = React.useState(constructTileState([]));\r\n\r\n\tconst [fetchButtonEnabled, setFetchButtonEnabled] = React.useState(false);\r\n\tconst [trainButtonEnabled, setTrainButtonEnabled] = React.useState(false);\r\n\tconst [evaluateButtonEnabled, setEvaluateButtonEnabled] = React.useState(false);\r\n\tconst [downloadButtonEnabled, setDownloadButtonEnabled] = React.useState(false);\r\n\tconst [uploadButtonEnabled, setUploadButtonEnabled] = React.useState(true);\r\n\tconst [scoreAllButtonEnabled, setscoreAllButtonEnabled] = React.useState(false);\r\n\tconst [uploading, setUploading] = React.useState(false);\r\n\tconst [success, setSuccess] = React.useState(false);\r\n\tconst [fetching, setFetching] = React.useState(false);\r\n\tconst [openFetchDropdown, setOpenFetchDropdown] = React.useState(false);\r\n\tconst [openTrainDropdown, setOpenTrainDropdown] = React.useState(false);\r\n\r\n\tconst [canvasWebWorker, setCanvasWebWorker] = React.useState(null);\r\n\tconst [dataWebWorker, setDataWebWorker] = React.useState(null);\r\n\tconst [classifierWebWorker, setClassifierWebWorker] = React.useState(null);\r\n\tconst [confusionMatrix, setConfusionMatrix] = React.useState([\r\n\t\t[0, 0],\r\n\t\t[0, 0],\r\n\t]);\r\n\tconst [trainingObject, setTrainingObject] = React.useState(null);\r\n\tconst [activeCellPairs, setActiveCellPairs] = React.useState([]);\r\n\tconst [trainingCellPairs, setTrainingCellPairs] = React.useState([]);\r\n\r\n\tconst [scoreTableIsUpToDate, setScoreTableIsUpToDate] = React.useState(false);\r\n\tconst [scoreTableObject, setScoreTableObject] = React.useState(null);\r\n\r\n\tReact.useEffect(() => {\r\n\t\tconst dataToCanvasWorkerChannel = new MessageChannel();\r\n\t\tconst dataToClassifierWorkerChannel = new MessageChannel();\r\n\r\n\t\tconst dataWebWorker = constructWebWorker('../dataWorker.js', 'dataWebWorker');\r\n\t\tdataWebWorker.postMessage({ action: 'connectToCanvasWorker' }, [dataToCanvasWorkerChannel.port1]);\r\n\t\tdataWebWorker.postMessage({ action: 'connectToClassifierWorker' }, [dataToClassifierWorkerChannel.port1]);\r\n\t\tsetDataWebWorker(dataWebWorker);\r\n\r\n\t\tconst canvasWebWorker = constructWebWorker('../canvasWorker.js', 'CanvasWebWorker');\r\n\t\tcanvasWebWorker.postMessage({ action: 'connectToDataWorker' }, [dataToCanvasWorkerChannel.port2]);\r\n\t\tsetCanvasWebWorker(canvasWebWorker);\r\n\r\n\t\tconst classifierWebWorker = constructWebWorker('../classifierWorker.js', 'classifierWebWorker');\r\n\t\tclassifierWebWorker.postMessage({ action: 'connectToDataWorker' }, [dataToClassifierWorkerChannel.port2]);\r\n\t\tsetClassifierWebWorker(classifierWebWorker);\r\n\t}, []);\r\n\r\n\tconst constructWebWorker = function (sourcePath, name) {\r\n\t\tconst worker = new Worker(sourcePath);\r\n\t\tworker.addEventListener('error', (event) => {\r\n\t\t\tconsole.log(`[${name}] Error`, event.message, event);\r\n\t\t});\r\n\t\treturn worker;\r\n\t};\r\n\r\n\tconst classes = useStyles();\r\n\tconst buttonClassname = clsx({\r\n\t\t[classes.buttonSuccess]: success,\r\n\t});\r\n\r\n\tconst N = 20;\r\n\r\n\tconst handleClickFetchDropDown = (event) => {\r\n\t\tsetAnchorEl(event.currentTarget);\r\n\t};\r\n\r\n\tconst handleCloseFetchDropDown = (fetchType) => {\r\n\t\tsetAnchorEl(null);\r\n\t\tif (fetchType !== undefined) {\r\n\t\t\thandleFetch(fetchType);\r\n\t\t}\r\n\t};\r\n\r\n\tconst disableIterationButtons = () => {\r\n\t\tsetFetchButtonEnabled(false);\r\n\t\tsetTrainButtonEnabled(false);\r\n\t\tsetDownloadButtonEnabled(false);\r\n\t\t//   setEvaluateButtonEnabled(false)\r\n\t};\r\n\tconst enableIterationButtons = () => {\r\n\t\tsetFetchButtonEnabled(true);\r\n\t\tsetTrainButtonEnabled(true);\r\n\t\tsetDownloadButtonEnabled(true);\r\n\t\tsetEvaluateButtonEnabled(true);\r\n\t};\r\n\r\n\tconst handleFetch = async (fetchType) => {\r\n\t\tconsole.log('Fetch!');\r\n\t\tconst emptyTileState = { unclassified: [], positive: [], negative: [] };\r\n\t\tsetTileState(emptyTileState);\r\n\t\tswitch (fetchType) {\r\n\t\t\tcase 'Random':\r\n\t\t\t\tworkerActionPromise(dataWebWorker, 'get', { getType: 'cellPairs', getArgs: { amount: 16 } })\r\n\t\t\t\t\t.then((event) => {\r\n\t\t\t\t\t\tconst cellPairs = event.data.getResult;\r\n\t\t\t\t\t\tsetActiveCellPairs(cellPairs);\r\n\t\t\t\t\t\treturn workerActionPromise(canvasWebWorker, 'get', {\r\n\t\t\t\t\t\t\tgetType: 'blobUrlsFromCellPairs',\r\n\t\t\t\t\t\t\tgetArgs: { cellPairs },\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then((event) => {\r\n\t\t\t\t\t\tconst newTileState = constructTileState(event.data.blobUrls);\r\n\t\t\t\t\t\tconsole.log(newTileState);\r\n\t\t\t\t\t\tsetTileState(newTileState);\r\n\t\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Positive':\r\n\t\t\tcase 'Negative':\r\n\t\t\t\tworkerActionPromise(dataWebWorker, 'get', { getType: 'cellPairs', getArgs: { amount: 100 } })\r\n\t\t\t\t\t.then((event) => {\r\n\t\t\t\t\t\tconst cellPairs = event.data.getResult;\r\n\r\n\t\t\t\t\t\treturn workerActionPromise(classifierWebWorker, 'predictFilterCellPairs', {\r\n\t\t\t\t\t\t\tcellPairs,\r\n\t\t\t\t\t\t\tclassType: fetchType,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then((event) => {\r\n\t\t\t\t\t\tconst { filteredCellPairs } = event.data;\r\n\t\t\t\t\t\tconst slicedCellPairs = filteredCellPairs.slice(0, 16);\r\n\t\t\t\t\t\tconsole.log(event);\r\n\t\t\t\t\t\tsetActiveCellPairs(filteredCellPairs);\r\n\t\t\t\t\t\treturn workerActionPromise(canvasWebWorker, 'get', {\r\n\t\t\t\t\t\t\tgetType: 'blobUrlsFromCellPairs',\r\n\t\t\t\t\t\t\tgetArgs: { cellPairs: slicedCellPairs },\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then((event) => {\r\n\t\t\t\t\t\tconst newTileState = constructTileState(event.data.blobUrls);\r\n\t\t\t\t\t\tconsole.log(newTileState);\r\n\t\t\t\t\t\tsetTileState(newTileState);\r\n\t\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Confusing': {\r\n\t\t\t\tworkerActionPromise(dataWebWorker, 'get', { getType: 'cellPairs', getArgs: { amount: 100 } })\r\n\t\t\t\t\t.then((event) => {\r\n\t\t\t\t\t\tconst cellPairs = event.data.getResult;\r\n\r\n\t\t\t\t\t\treturn workerActionPromise(classifierWebWorker, 'confusingFilterCellPairs', {\r\n\t\t\t\t\t\t\tcellPairs: cellPairs,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then((event) => {\r\n\t\t\t\t\t\tconst { sortedCellPairs } = event.data;\r\n\t\t\t\t\t\tconsole.log(event);\r\n\t\t\t\t\t\tconst slicedSortedCellPairs = sortedCellPairs.slice(0, 16);\r\n\t\t\t\t\t\tsetActiveCellPairs(slicedSortedCellPairs);\r\n\t\t\t\t\t\treturn workerActionPromise(canvasWebWorker, 'get', {\r\n\t\t\t\t\t\t\tgetType: 'blobUrlsFromCellPairs',\r\n\t\t\t\t\t\t\tgetArgs: { cellPairs: slicedSortedCellPairs },\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then((event) => {\r\n\t\t\t\t\t\tconst newTileState = constructTileState(event.data.blobUrls);\r\n\t\t\t\t\t\tconsole.log(newTileState);\r\n\t\t\t\t\t\tsetTileState(newTileState);\r\n\t\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'TrainingPositive':\r\n\t\t\t\tconst positiveCellPairs = trainingObject.trainingData.map((dataRow) => ({\r\n\t\t\t\t\tImageNumber: dataRow[0],\r\n\t\t\t\t\tObjectNumber: dataRow[1],\r\n\t\t\t\t}));\r\n\t\t\t\tconsole.log(positiveCellPairs, trainingObject.trainingLabels, trainingObject.trainingData);\r\n\t\t\t\tworkerActionPromise(classifierWebWorker, 'predictFilterCellPairs', {\r\n\t\t\t\t\tcellPairs: positiveCellPairs,\r\n\t\t\t\t\tclassType: 'Positive',\r\n\t\t\t\t})\r\n\t\t\t\t\t.then((event) => {\r\n\t\t\t\t\t\tconst { filteredCellPairs } = event.data;\r\n\t\t\t\t\t\tconsole.log(event);\r\n\t\t\t\t\t\tsetActiveCellPairs(filteredCellPairs);\r\n\t\t\t\t\t\treturn workerActionPromise(canvasWebWorker, 'get', {\r\n\t\t\t\t\t\t\tgetType: 'blobUrlsFromCellPairs',\r\n\t\t\t\t\t\t\tgetArgs: { cellPairs: filteredCellPairs },\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then((event) => {\r\n\t\t\t\t\t\tconst newTileState = constructTileState(event.data.blobUrls);\r\n\t\t\t\t\t\tconsole.log(newTileState);\r\n\t\t\t\t\t\tsetTileState(newTileState);\r\n\t\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'TrainingNegative':\r\n\t\t\t\tconst negativeCellPairs = trainingObject.trainingData.map((dataRow) => ({\r\n\t\t\t\t\tImageNumber: dataRow[0],\r\n\t\t\t\t\tObjectNumber: dataRow[1],\r\n\t\t\t\t}));\r\n\r\n\t\t\t\tworkerActionPromise(classifierWebWorker, 'predictFilterCellPairs', {\r\n\t\t\t\t\tcellPairs: negativeCellPairs,\r\n\t\t\t\t\tclassType: 'Negative',\r\n\t\t\t\t})\r\n\t\t\t\t\t.then((event) => {\r\n\t\t\t\t\t\tconst { filteredCellPairs } = event.data;\r\n\t\t\t\t\t\tconsole.log(event);\r\n\t\t\t\t\t\tsetActiveCellPairs(filteredCellPairs);\r\n\t\t\t\t\t\treturn workerActionPromise(canvasWebWorker, 'get', {\r\n\t\t\t\t\t\t\tgetType: 'blobUrlsFromCellPairs',\r\n\t\t\t\t\t\t\tgetArgs: { cellPairs: filteredCellPairs },\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then((event) => {\r\n\t\t\t\t\t\tconst newTileState = constructTileState(event.data.blobUrls);\r\n\t\t\t\t\t\tconsole.log(newTileState);\r\n\t\t\t\t\t\tsetTileState(newTileState);\r\n\t\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleTrain = async () => {\r\n\t\tconsole.log('Train!');\r\n\t\tconst positiveCellPairs = tileState.positive.map((element) => activeCellPairs[element.id]);\r\n\t\tconst negativeCellPairs = tileState.negative.map((element) => activeCellPairs[element.id]);\r\n\r\n\t\tconst totalCellPairs = positiveCellPairs.concat(negativeCellPairs);\r\n\t\tconst newLabels = new Array(positiveCellPairs.length)\r\n\t\t\t.fill(1)\r\n\t\t\t.concat(new Array(negativeCellPairs.length).fill(0));\r\n\t\tconsole.log(totalCellPairs, newLabels);\r\n\r\n\t\tsetScoreTableIsUpToDate(false);\r\n\t\tsetTileState(constructTileState([]));\r\n\t\tsetActiveCellPairs([]);\r\n\r\n\t\tworkerActionPromise(dataWebWorker, 'get', {\r\n\t\t\tgetType: 'objectRowsFromCellpairs',\r\n\t\t\tgetArgs: { cellPairs: totalCellPairs },\r\n\t\t}).then((event) => {\r\n\t\t\tconst dataRows = event.data.getResult;\r\n\r\n\t\t\tconst newTrainingObject = {\r\n\t\t\t\tclassifierType: 'LogisticRegression',\r\n\t\t\t\ttrainingData: [...trainingObject.trainingData, ...dataRows],\r\n\t\t\t\ttrainingLabels: [...trainingObject.trainingLabels, ...newLabels],\r\n\t\t\t\tfeatureIndicesToUse: trainingObject.featureIndicesToUse,\r\n\t\t\t};\r\n\t\t\treturn trainSequencePromise(newTrainingObject);\r\n\t\t\t// console.log(trainingObject);\r\n\t\t\t// console.log(dataRows);\r\n\t\t\t// const newTrainingObject = {\r\n\t\t\t// \tclassifierType: 'LogisticRegression',\r\n\t\t\t// \ttrainingData: [...trainingObject.trainingData, ...dataRows],\r\n\t\t\t// \ttrainingLabels: [...trainingObject.trainingLabels, ...newLabels],\r\n\t\t\t// \tfeatureIndicesToUse: trainingObject.featureIndicesToUse,\r\n\t\t\t// };\r\n\t\t\t// console.log(newTrainingObject);\r\n\t\t\t// setOpenTrainDropdown(true);\r\n\t\t\t// setTrainingObject(newTrainingObject);\r\n\t\t\t// return workerActionPromise(classifierWebWorker, 'train', { trainingObject: newTrainingObject });\r\n\t\t});\r\n\t\t// .then(() => {\r\n\t\t// \treturn workerActionPromise(classifierWebWorker, 'confusionMatrix');\r\n\t\t// })\r\n\t\t// .then((event) => {\r\n\t\t// \tconst newConfusionMatrix = event.data.confusionMatrix;\r\n\t\t// \tconsole.log(newConfusionMatrix);\r\n\t\t// \tsetConfusionMatrix(newConfusionMatrix);\r\n\t\t// })\r\n\t\t// .then(() => {\r\n\t\t// \tsetOpenTrainDropdown(false);\r\n\t\t// });\r\n\t};\r\n\r\n\tconst trainSequencePromise = function (currentTrainingObject) {\r\n\t\tsetOpenTrainDropdown(true);\r\n\r\n\t\treturn workerActionPromise(classifierWebWorker, 'train', { trainingObject: currentTrainingObject })\r\n\t\t\t.then(() => {\r\n\t\t\t\treturn workerActionPromise(classifierWebWorker, 'confusionMatrix');\r\n\t\t\t})\r\n\t\t\t.then((event) => {\r\n\t\t\t\tconst newConfusionMatrix = event.data.confusionMatrix;\r\n\t\t\t\tconsole.log(newConfusionMatrix);\r\n\t\t\t\tsetConfusionMatrix(newConfusionMatrix);\r\n\t\t\t})\r\n\t\t\t.then(() => {\r\n\t\t\t\tsetTrainingObject(currentTrainingObject);\r\n\t\t\t\tsetOpenTrainDropdown(false);\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst workerActionPromise = function (worker, action, data) {\r\n\t\tconsole.log(worker, action, data);\r\n\t\tconst UUID = uuidv4();\r\n\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tlet selfDestructingEventHandler = (event) => {\r\n\t\t\t\tif (event.data.uuid === UUID) {\r\n\t\t\t\t\tworker.removeEventListener('message', selfDestructingEventHandler);\r\n\t\t\t\t\tresolve(event);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tworker.addEventListener('message', selfDestructingEventHandler);\r\n\r\n\t\t\tworker.postMessage({ action, ...data, uuid: UUID });\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleUpload = async (eventObject) => {\r\n\t\tconsole.log('Upload!');\r\n\t\tsetUploading(true);\r\n\t\tworkerActionPromise(dataWebWorker, 'init', { fileListObject: eventObject.target.files })\r\n\t\t\t.then(() => {\r\n\t\t\t\treturn workerActionPromise(dataWebWorker, 'get', { getType: 'trainingObject' });\r\n\t\t\t})\r\n\t\t\t.then((event) => {\r\n\t\t\t\tconsole.log(event);\r\n\t\t\t\tconst initialTrainingObject = event.data.getResult;\r\n\t\t\t\treturn trainSequencePromise(initialTrainingObject);\r\n\t\t\t})\r\n\t\t\t.then(() => {\r\n\t\t\t\tsetUploading(false);\r\n\t\t\t\tsetSuccess(true);\r\n\t\t\t\tenableIterationButtons();\r\n\t\t\t\tsetUploadButtonEnabled(false);\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst handleScoreAll = async () => {\r\n\t\tconsole.log('Score All!');\r\n\t\tif (!scoreTableIsUpToDate) {\r\n\t\t\tconsole.log('Score All!');\r\n\t\t\treturn workerActionPromise(classifierWebWorker, 'scoreObjectData').then((event) => {\r\n\t\t\t\tconst newScoreTableObject = event.data.scoreTableObject;\r\n\t\t\t\tconsole.log(newScoreTableObject);\r\n\t\t\t\tsetScoreTableObject(newScoreTableObject);\r\n\t\t\t\tsetScoreTableIsUpToDate(true);\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleDownload = async () => {\r\n\t\tconsole.log('Download!');\r\n\t\treturn workerActionPromise(classifierWebWorker, 'getClassifier').then((event) => {\r\n\t\t\tconsole.log(event);\r\n\t\t\ttf.loadLayersModel(`indexeddb://${trainingObject.classifierType}`).then((model) => {\r\n\t\t\t\tmodel.save(`downloads://${trainingObject.classifierType}`);\r\n\t\t\t});\r\n\r\n\t\t\t// const classifier = event.data.classifier;\r\n\t\t\t// classifier.save(`downloads://${trainingObject.classifierType}`);\r\n\t\t});\r\n\t};\r\n\r\n\tfunction constructTileState(dataURLs) {\r\n\t\treturn {\r\n\t\t\tunclassified: dataURLs.map((dataURL, idx, info) => {\r\n\t\t\t\treturn { id: idx, address: dataURL, info: 'cell info, biology stuff' };\r\n\t\t\t}),\r\n\t\t\tpositive: [],\r\n\t\t\tnegative: [],\r\n\t\t};\r\n\t}\r\n\r\n\tfunction onChange(sourceId, sourceIndex, targetIndex, targetId) {\r\n\t\tif (targetId) {\r\n\t\t\tconst result = move(tileState[sourceId], tileState[targetId], sourceIndex, targetIndex);\r\n\t\t\treturn setTileState({\r\n\t\t\t\t...tileState,\r\n\t\t\t\t[sourceId]: result[0],\r\n\t\t\t\t[targetId]: result[1],\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tconst result = swap(tileState[sourceId], sourceIndex, targetIndex);\r\n\t\treturn setTileState({\r\n\t\t\t...tileState,\r\n\t\t\t[sourceId]: result,\r\n\t\t});\r\n\t}\r\n\r\n\tconst handleClickOpenFetchDropdown = () => {\r\n\t\tsetOpenFetchDropdown(true);\r\n\t};\r\n\r\n\tconst handleCloseFetchDropdown = () => {\r\n\t\tsetOpenFetchDropdown(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<GridContextProvider onChange={onChange}>\r\n\t\t\t<div style={{ overflowX: 'hidden', hieght: '100%', width: '100%' }}>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Image\r\n\t\t\t\t\t\tsrc={logo}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tmarginLeft: '10%',\r\n\t\t\t\t\t\t\theight: '30%',\r\n\t\t\t\t\t\t\twidth: '25%',\r\n\t\t\t\t\t\t\tposition: 'relative',\r\n\t\t\t\t\t\t\tmaxHeight: '125px',\r\n\t\t\t\t\t\t\tmarginBottom: '1%',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t></Image>\r\n\r\n\t\t\t\t\t<Col style={{ left: '40%' }}>\r\n\t\t\t\t\t\t<div className={classes.root}>\r\n\t\t\t\t\t\t\t<div className={classes.wrapper}>\r\n\t\t\t\t\t\t\t\t<Tooltip title=\"Load Data\" aria-label=\"load data\">\r\n\t\t\t\t\t\t\t\t\t<Fab\r\n\t\t\t\t\t\t\t\t\t\taria-label=\"save\"\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\tcomponent=\"label\"\r\n\t\t\t\t\t\t\t\t\t\tclassName={buttonClassname}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ height: '5vw', width: '5vw' }}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{success ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<CheckIcon style={{ hieght: '50%', width: '50%' }} />\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t<CloudUploadIcon style={{ hieght: '50%', width: '50%' }} />\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\t\t\t\t\t\thidden\r\n\t\t\t\t\t\t\t\t\t\t\twebkitdirectory=\"true\"\r\n\t\t\t\t\t\t\t\t\t\t\tmozdirectory=\"true\"\r\n\t\t\t\t\t\t\t\t\t\t\tmsdirectory=\"true\"\r\n\t\t\t\t\t\t\t\t\t\t\todirectory=\"true\"\r\n\t\t\t\t\t\t\t\t\t\t\tdirectory=\"true\"\r\n\t\t\t\t\t\t\t\t\t\t\tmultiple\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(eventObject) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleUpload(eventObject);\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled={!uploadButtonEnabled}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Fab>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t{/* size={68}  */}\r\n\t\t\t\t\t\t\t\t{uploading && (\r\n\t\t\t\t\t\t\t\t\t<CircularProgress\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.fabProgress}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ height: '6vw', width: '6vw', marginTop: '4%', marginRight: '4%' }}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col style={{ left: '15%', marginTop: '.75%' }}>\r\n\t\t\t\t\t\t<Tooltip title=\"Download\" aria-label=\"download\">\r\n\t\t\t\t\t\t\t<Fab\r\n\t\t\t\t\t\t\t\taria-label=\"save\"\r\n\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\tcomponent=\"label\"\r\n\t\t\t\t\t\t\t\tdisabled={!downloadButtonEnabled}\r\n\t\t\t\t\t\t\t\tonClick={handleDownload}\r\n\t\t\t\t\t\t\t\tstyle={{ height: '5vw', width: '5vw' }}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t<SaveAltIcon style={{ hieght: '50%', width: '50%' }} />\r\n\t\t\t\t\t\t\t</Fab>\r\n\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Grid container justify=\"center\" spacing={2} style={{ marginBottom: 15 }}>\r\n\t\t\t\t\t\t<Grid key={0} item>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tdisabled={!fetchButtonEnabled}\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\taria-controls=\"simple-menu\"\r\n\t\t\t\t\t\t\t\taria-haspopup=\"true\"\r\n\t\t\t\t\t\t\t\tonClick={handleClickFetchDropDown}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tFetch\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Menu\r\n\t\t\t\t\t\t\t\tid=\"simple-menu\"\r\n\t\t\t\t\t\t\t\tanchorEl={anchorEl}\r\n\t\t\t\t\t\t\t\tkeepMounted\r\n\t\t\t\t\t\t\t\topen={Boolean(anchorEl)}\r\n\t\t\t\t\t\t\t\tonClose={handleCloseFetchDropDown}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<MenuItem onClick={() => handleCloseFetchDropDown('Random')}>Random</MenuItem>\r\n\t\t\t\t\t\t\t\t<MenuItem onClick={() => handleCloseFetchDropDown('Positive')}>Positive</MenuItem>\r\n\t\t\t\t\t\t\t\t<MenuItem onClick={() => handleCloseFetchDropDown('Negative')}>Negative</MenuItem>\r\n\t\t\t\t\t\t\t\t<MenuItem onClick={handleClickOpenFetchDropdown}>By Image</MenuItem>\r\n\t\t\t\t\t\t\t\t<MenuItem onClick={() => handleCloseFetchDropDown('TrainingPositive')}>\r\n\t\t\t\t\t\t\t\t\tTraining Set Positive\r\n\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t<MenuItem onClick={() => handleCloseFetchDropDown('TrainingNegative')}>\r\n\t\t\t\t\t\t\t\t\tTraining Set Negative\r\n\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t<MenuItem onClick={() => handleCloseFetchDropDown('Confusing')}>Confusing</MenuItem>\r\n\r\n\t\t\t\t\t\t\t\t<Dialog open={openFetchDropdown} onClose={handleCloseFetchDropdown}>\r\n\t\t\t\t\t\t\t\t\t<DialogTitle>Fetch By Image</DialogTitle>\r\n\t\t\t\t\t\t\t\t\t<DialogContent>\r\n\t\t\t\t\t\t\t\t\t\t<DialogContentText>\r\n\t\t\t\t\t\t\t\t\t\t\tSelect the image number you would like to fetch from.\r\n\t\t\t\t\t\t\t\t\t\t</DialogContentText>\r\n\t\t\t\t\t\t\t\t\t\t<form noValidate>\r\n\t\t\t\t\t\t\t\t\t\t\t<FormControl>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<InputLabel>Image</InputLabel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Select autoFocus>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem value=\"1\">1</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem value=\"2\">2</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem value=\"3\">3</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem value=\"4\">4</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem value=\"5\">5</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t\t\t</DialogContent>\r\n\t\t\t\t\t\t\t\t\t<DialogActions>\r\n\t\t\t\t\t\t\t\t\t\t<Button onClick={handleCloseFetchDropdown} color=\"primary\">\r\n\t\t\t\t\t\t\t\t\t\t\tClose\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</DialogActions>\r\n\t\t\t\t\t\t\t\t</Dialog>\r\n\t\t\t\t\t\t\t</Menu>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid key={1} item>\r\n\t\t\t\t\t\t\t{/* style = {{height: \"5vw\", width:\"10vw\", minHeight:2, maxHeight: 35, maxwidth: 50, fontSize: \"max(1.5vw, 20)\"}}  */}\r\n\t\t\t\t\t\t\t<Button disabled={!trainButtonEnabled} variant=\"contained\" onClick={handleTrain}>\r\n\t\t\t\t\t\t\t\tTrain\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Dialog open={openTrainDropdown}>\r\n\t\t\t\t\t\t\t\t<DialogTitle>Loss and Accuracy</DialogTitle>\r\n\t\t\t\t\t\t\t\t<DialogContent>\r\n\t\t\t\t\t\t\t\t\t<img width={100} height={100} src={jones}></img>\r\n\t\t\t\t\t\t\t\t</DialogContent>\r\n\t\t\t\t\t\t\t</Dialog>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid key={2} item>\r\n\t\t\t\t\t\t\t{/* <Button disabled={!evaluateButtonEnabled} variant=\"contained\" onClick={()=>{}}>Evaluate</Button>  */}\r\n\t\t\t\t\t\t\t{/* TODO: need to fix button disabled DONE*/}\r\n\t\t\t\t\t\t\t{!evaluateButtonEnabled ? (\r\n\t\t\t\t\t\t\t\t<Button disabled={!evaluateButtonEnabled} variant=\"contained\" onClick={() => {}}>\r\n\t\t\t\t\t\t\t\t\tEvaluate\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<Evaluate confusionMatrix={confusionMatrix}></Evaluate>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid key={3} item>\r\n\t\t\t\t\t\t\t{/* <Button  disabled={!scoreAllButtonEnabled} variant=\"contained\" onClick={()=>{}}>Score All</Button> */}\r\n\t\t\t\t\t\t\t{/* TODO: need to fix button disabled DONE*/}\r\n\r\n\t\t\t\t\t\t\t{!evaluateButtonEnabled ? (\r\n\t\t\t\t\t\t\t\t<Button disabled={!evaluateButtonEnabled} variant=\"contained\" onClick={handleScoreAll}>\r\n\t\t\t\t\t\t\t\t\tScore All\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<ScoreAll handleScoreAll={handleScoreAll}></ScoreAll>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Row>\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<label\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\ttextAlign: 'left',\r\n\t\t\t\t\t\t\tbackgroundColor: 'white',\r\n\t\t\t\t\t\t\tpaddingLeft: '10%',\r\n\t\t\t\t\t\t\tmarginBottom: '0.5%',\r\n\t\t\t\t\t\t\tuserSelect: 'none',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tUnclassified{' '}\r\n\t\t\t\t\t</label>\r\n\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<GridDropZone\r\n\t\t\t\t\t\t\tclassName=\"dropzone \"\r\n\t\t\t\t\t\t\tid=\"unclassified\"\r\n\t\t\t\t\t\t\tboxesPerRow={8}\r\n\t\t\t\t\t\t\trowHeight={80}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\theight: '20vw',\r\n\t\t\t\t\t\t\t\tmaxHeight: 200,\r\n\t\t\t\t\t\t\t\tminHeight: 150,\r\n\t\t\t\t\t\t\t\tmarginBottom: 10,\r\n\t\t\t\t\t\t\t\tmarginLeft: '10%',\r\n\t\t\t\t\t\t\t\twidth: '80%',\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{!fetching ? (\r\n\t\t\t\t\t\t\t\ttileState.unclassified.map((item) => (\r\n\t\t\t\t\t\t\t\t\t<GridItem\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"hoverTest\"\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\theight: '10vw',\r\n\t\t\t\t\t\t\t\t\t\t\twidth: '10vw',\r\n\t\t\t\t\t\t\t\t\t\t\tminHeight: 80,\r\n\t\t\t\t\t\t\t\t\t\t\tminWidth: 80,\r\n\t\t\t\t\t\t\t\t\t\t\tmaxHeight: 105,\r\n\t\t\t\t\t\t\t\t\t\t\tmaxWidth: 105,\r\n\t\t\t\t\t\t\t\t\t\t\tpadding: 10,\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tkey={item.id}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"grid-item\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"grid-item-content\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundImage: `url(${item.address})` }}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"hoverText\">{item.info}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</GridItem>\r\n\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<CircularProgress\r\n\t\t\t\t\t\t\t\t\tstyle={{ hieght: '7%', width: '7%', marginTop: '8%', marginLeft: '45%' }}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</GridDropZone>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<label\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttextAlign: 'left',\r\n\t\t\t\t\t\t\t\tbackgroundColor: 'white',\r\n\t\t\t\t\t\t\t\tpaddingLeft: '11%',\r\n\t\t\t\t\t\t\t\tuserSelect: 'none',\r\n\t\t\t\t\t\t\t\tmarginBottom: '0.5%',\r\n\t\t\t\t\t\t\t\tmarginTop: 0,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tPositive\r\n\t\t\t\t\t\t</label>\r\n\r\n\t\t\t\t\t\t<label\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttextAlign: 'left',\r\n\t\t\t\t\t\t\t\tbackgroundColor: 'white',\r\n\t\t\t\t\t\t\t\tpaddingRight: '8%',\r\n\t\t\t\t\t\t\t\tuserSelect: 'none',\r\n\t\t\t\t\t\t\t\tmargin: 'auto',\r\n\t\t\t\t\t\t\t\tmarginBottom: '0.5%',\r\n\t\t\t\t\t\t\t\tmarginTop: 0,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tNegative\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<GridDropZone\r\n\t\t\t\t\t\t\tclassName=\"dropzone positive\"\r\n\t\t\t\t\t\t\tid=\"positive\"\r\n\t\t\t\t\t\t\tboxesPerRow={4}\r\n\t\t\t\t\t\t\trowHeight={80}\r\n\t\t\t\t\t\t\tstyle={{ height: '20vw', maxHeight: 200, minHeight: 150 }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{tileState.positive.map((item) => (\r\n\t\t\t\t\t\t\t\t<GridItem\r\n\t\t\t\t\t\t\t\t\tclassName=\"hoverTest\"\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\theight: '10vw',\r\n\t\t\t\t\t\t\t\t\t\twidth: '10vw',\r\n\t\t\t\t\t\t\t\t\t\tminHeight: 80,\r\n\t\t\t\t\t\t\t\t\t\tminWidth: 80,\r\n\t\t\t\t\t\t\t\t\t\tmaxHeight: 105,\r\n\t\t\t\t\t\t\t\t\t\tmaxWidth: 105,\r\n\t\t\t\t\t\t\t\t\t\tpadding: 10,\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tkey={item.id}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<div className=\"grid-item\">\r\n\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"grid-item-content\"\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundImage: `url(${item.address})` }}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"hoverText\">{item.info}</span>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</GridItem>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</GridDropZone>\r\n\r\n\t\t\t\t\t\t<GridDropZone\r\n\t\t\t\t\t\t\tclassName=\"dropzone negative\"\r\n\t\t\t\t\t\t\tid=\"negative\"\r\n\t\t\t\t\t\t\tboxesPerRow={4}\r\n\t\t\t\t\t\t\trowHeight={80}\r\n\t\t\t\t\t\t\tstyle={{ height: '20vw', maxHeight: 200, minHeight: 150 }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{tileState.negative.map((item) => (\r\n\t\t\t\t\t\t\t\t<GridItem\r\n\t\t\t\t\t\t\t\t\tclassName=\"hoverTest\"\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\theight: '10vw',\r\n\t\t\t\t\t\t\t\t\t\twidth: '10vw',\r\n\t\t\t\t\t\t\t\t\t\tminHeight: 80,\r\n\t\t\t\t\t\t\t\t\t\tminWidth: 80,\r\n\t\t\t\t\t\t\t\t\t\tmaxHeight: 105,\r\n\t\t\t\t\t\t\t\t\t\tmaxWidth: 105,\r\n\t\t\t\t\t\t\t\t\t\tpadding: 10,\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tkey={item.address}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<div className=\"grid-item\">\r\n\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"grid-item-content\"\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundImage: `url(${item.address})` }}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"hoverText\">{item.info}</span>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</GridItem>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</GridDropZone>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</GridContextProvider>\r\n\t);\r\n}\r\n\r\nexport default TestUIMVP;\r\n","export default __webpack_public_path__ + \"static/jones-885674426137aa7117b916008a9d4f44.jpg\";"],"sourceRoot":""}