{"version":3,"sources":["webpack://gatsby-test/./src/pages/AbbyUIButtons/Evaluate_Canvas.js","webpack://gatsby-test/./src/pages/AbbyUIButtons/UIEvaluateButton.js"],"names":["drawConfusionMatrix","divElement","confusionMatrixValues","tfvis","values","tickLabels","height","width","Canvas1","props","canvasParentRef","React","current","confusionMatrix","style","padding","ref","Transition","direction","DialogForCanvas","useState","open","setOpen","handleClose","variant","onClick","TransitionComponent","keepMounted","onClose","position","right","top"],"mappings":"sNAEMA,EAAmB,mCAAG,WAAOC,EAAYC,GAAnB,iFACrBC,yBACLF,EACA,CACCG,OAAQF,EACRG,WAAY,CAAC,WAAY,aAE1B,CACCC,OAAQ,IACRC,MAAO,MATkB,2CAAH,wDAcV,SAASC,EAAQC,GAC/B,IAAMC,EAAkBC,SAAa,MAYrC,OAPAA,aAAgB,WAIfX,EAAoBU,EAAgBE,QAASH,EAAMI,mBACjD,CAACH,EAAiBD,EAAMI,kBAG1B,uBAAKC,MAAO,CAAEC,QAAS,KACtB,uBAAKC,IAAKN,O,qJCtBPO,EAAaN,cAAiB,SAAoBF,EAAOO,GAC7D,OAAO,gBAAC,IAAD,eAAOE,UAAU,KAAKF,IAAKA,GAASP,OAI9B,SAASU,EAAgBV,GAAQ,IAAD,GACrBW,eAAS,GAA1BC,EADsC,KAChCC,EADgC,KAQvCC,EAAc,WAClBD,GAAQ,IAKV,OACE,2BAGE,gBAAC,IAAD,CAAQE,QAAQ,YAAYC,QAfR,WACtBH,GAAQ,KAcN,YAEA,gBAAC,IAAD,CACED,KAAMA,EACNK,oBAAqBT,EACrBU,aAAW,EACXC,QAASL,GAET,gBAAC,IAAD,CAAWE,QAAWF,EAAaT,MAAO,CAACe,SAAU,WAAYC,MAAO,OAAQC,IAAK,UAErF,gBAAC,UAAD,CAAiBlB,gBAAiBJ,EAAMI","file":"component---src-pages-abby-ui-buttons-ui-evaluate-button-js-9e6ee009333cd62ff280.js","sourcesContent":["import React from 'react';\r\nimport * as tfvis from '@tensorflow/tfjs-vis';\r\nconst drawConfusionMatrix = async (divElement, confusionMatrixValues) => {\r\n\tawait tfvis.render.confusionMatrix(\r\n\t\tdivElement,\r\n\t\t{\r\n\t\t\tvalues: confusionMatrixValues,\r\n\t\t\ttickLabels: ['Positive', 'Negative'],\r\n\t\t},\r\n\t\t{\r\n\t\t\theight: 200,\r\n\t\t\twidth: 300,\r\n\t\t}\r\n\t);\r\n};\r\n\r\nexport default function Canvas1(props) {\r\n\tconst canvasParentRef = React.useRef(null);\r\n\t// const [confusionMatrix, setConfusionMatrix] = React.useState(props.confusionMatrix);\r\n\r\n\t// runs when canvasParentRef is initialized\r\n\t// and also when confusionMatrix is updated\r\n\tReact.useEffect(() => {\r\n\t\t// set the confusion matrix with sample data\r\n\t\t//??? need to figure out how to pass the function value\r\n\r\n\t\tdrawConfusionMatrix(canvasParentRef.current, props.confusionMatrix);\r\n\t}, [canvasParentRef, props.confusionMatrix]);\r\n\r\n\treturn (\r\n\t\t<div style={{ padding: 40 }}>\r\n\t\t\t<div ref={canvasParentRef}></div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React ,{useState, useRef} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ConfusionMatrix from './Evaluate_Canvas'\r\n\r\n//TODO: need to solve state-passing issue between patent to child\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\n//this components is for pop-up dialog display the 'confusion_matrix_canvas' for Evaluation button\r\nexport default function DialogForCanvas(props) {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n    \r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    \r\n  };\r\n  \r\n\r\n  return (\r\n    <div  >\r\n\r\n      {/* evaluate button -> open a dialog window */}\r\n      <Button variant=\"contained\" onClick={handleClickOpen}>Evaluate</Button>\r\n\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}>\r\n\r\n        <CloseIcon onClick = {handleClose} style={{position: 'absolute', right: '10px', top: '10px',}}></CloseIcon>  \r\n\r\n        <ConfusionMatrix confusionMatrix={props.confusionMatrix}></ConfusionMatrix>\r\n        \r\n      </Dialog>\r\n      \r\n       \r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}