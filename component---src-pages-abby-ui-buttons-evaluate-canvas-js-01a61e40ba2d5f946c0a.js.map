{"version":3,"sources":["webpack://gatsby-test/./node_modules/hyphenate-style-name/index.js","webpack://gatsby-test/./src/pages/AbbyUIButtons/Evaluate_Canvas.js"],"names":["uppercasePattern","msPattern","cache","toHyphenLower","match","toLowerCase","name","hasOwnProperty","hName","replace","test","drawConfusionMatrix","divElement","confusionMatrixValues","tfvis","values","tickLabels","height","width","Canvas1","props","canvasParentRef","React","current","confusionMatrix","style","padding","ref"],"mappings":"uHACA,IAAIA,EAAmB,SACnBC,EAAY,OACZC,EAAQ,GAEZ,SAASC,EAAcC,GACrB,MAAO,IAAMA,EAAMC,cAYrB,UATA,SAA4BC,GAC1B,GAAIJ,EAAMK,eAAeD,GACvB,OAAOJ,EAAMI,GAGf,IAAIE,EAAQF,EAAKG,QAAQT,EAAkBG,GAC3C,OAAOD,EAAMI,GAAQL,EAAUS,KAAKF,GAAS,IAAMA,EAAQA,I,yICbvDG,EAAmB,mCAAG,WAAOC,EAAYC,GAAnB,iFACrBC,yBACLF,EACA,CACCG,OAAQF,EACRG,WAAY,CAAC,WAAY,aAE1B,CACCC,OAAQ,IACRC,MAAO,MATkB,2CAAH,wDAcV,SAASC,EAAQC,GAC/B,IAAMC,EAAkBC,SAAa,MAYrC,OAPAA,aAAgB,WAIfX,EAAoBU,EAAgBE,QAASH,EAAMI,mBACjD,CAACH,EAAiBD,EAAMI,kBAG1B,uBAAKC,MAAO,CAAEC,QAAS,KACtB,uBAAKC,IAAKN","file":"component---src-pages-abby-ui-buttons-evaluate-canvas-js-01a61e40ba2d5f946c0a.js","sourcesContent":["/* eslint-disable no-var, prefer-template */\nvar uppercasePattern = /[A-Z]/g;\nvar msPattern = /^ms-/;\nvar cache = {};\n\nfunction toHyphenLower(match) {\n  return '-' + match.toLowerCase();\n}\n\nfunction hyphenateStyleName(name) {\n  if (cache.hasOwnProperty(name)) {\n    return cache[name];\n  }\n\n  var hName = name.replace(uppercasePattern, toHyphenLower);\n  return cache[name] = msPattern.test(hName) ? '-' + hName : hName;\n}\n\nexport default hyphenateStyleName;","import React from 'react';\r\nimport * as tfvis from '@tensorflow/tfjs-vis';\r\nconst drawConfusionMatrix = async (divElement, confusionMatrixValues) => {\r\n\tawait tfvis.render.confusionMatrix(\r\n\t\tdivElement,\r\n\t\t{\r\n\t\t\tvalues: confusionMatrixValues,\r\n\t\t\ttickLabels: ['Positive', 'Negative'],\r\n\t\t},\r\n\t\t{\r\n\t\t\theight: 200,\r\n\t\t\twidth: 300,\r\n\t\t}\r\n\t);\r\n};\r\n\r\nexport default function Canvas1(props) {\r\n\tconst canvasParentRef = React.useRef(null);\r\n\t// const [confusionMatrix, setConfusionMatrix] = React.useState(props.confusionMatrix);\r\n\r\n\t// runs when canvasParentRef is initialized\r\n\t// and also when confusionMatrix is updated\r\n\tReact.useEffect(() => {\r\n\t\t// set the confusion matrix with sample data\r\n\t\t//??? need to figure out how to pass the function value\r\n\r\n\t\tdrawConfusionMatrix(canvasParentRef.current, props.confusionMatrix);\r\n\t}, [canvasParentRef, props.confusionMatrix]);\r\n\r\n\treturn (\r\n\t\t<div style={{ padding: 40 }}>\r\n\t\t\t<div ref={canvasParentRef}></div>\r\n\t\t</div>\r\n\t);\r\n}\r\n"],"sourceRoot":""}