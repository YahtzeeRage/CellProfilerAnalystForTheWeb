{"version":3,"sources":["webpack://gatsby-test/./node_modules/@material-ui/core/esm/CircularProgress/CircularProgress.js","webpack://gatsby-test/./src/classes/PapaParser.js","webpack://gatsby-test/./src/classes/ImageTable.js","webpack://gatsby-test/./src/classes/ObjectTable.js","webpack://gatsby-test/./src/classes/DataProvider.js","webpack://gatsby-test/./src/classes/TrainingTable.js","webpack://gatsby-test/./src/classes/DataTables.js","webpack://gatsby-test/./src/classes/UploadHandler.js","webpack://gatsby-test/./src/classes/UserUploadFileHandler.js","webpack://gatsby-test/./node_modules/lodash/_baseZipObject.js","webpack://gatsby-test/./node_modules/lodash/zipObject.js"],"names":["SIZE","CircularProgress","props","ref","classes","className","_props$color","color","_props$disableShrink","disableShrink","_props$size","size","style","_props$thickness","thickness","_props$value","value","_props$variant","variant","other","circleStyle","rootStyle","rootProps","circumference","Math","PI","strokeDasharray","toFixed","round","strokeDashoffset","concat","transform","root","determinate","indeterminate","static","width","height","role","svg","viewBox","circle","circleDisableShrink","circleDeterminate","circleIndeterminate","circleStatic","cx","cy","r","fill","strokeWidth","theme","display","transition","transitions","create","animation","colorPrimary","palette","primary","main","colorSecondary","secondary","stroke","transformOrigin","name","flip","PapaParser","this","basicPapaConfig","worker","skipEmptyLines","dynamicTyping","file_config_options","fastMode","error","e","console","delimiter","comments","Papa","file","config","Promise","complete","prototype","notify","strMsg","then","x","log","debugPrint","options","onEndMsg","result","data","papaTextfromCSV","file_object","file_for_papa","option","Object","assign","ImageTable","image_lines","column_lines","image_column","image_mapped","i","length","imageNumber","img_index","ImageNumber","key","toString","find","search_obj","index","findIndex","indexTableGetRow","get","getSize","hasOwnProperty","row","line","getColumnLines","ObjectTable","object_lines","object_column","object_mapped","imgs_size","obj_index","ObjectNumber","img","obj","returnObjsPerImg","firstObjinImg","n","index_key","parseInt","DataProvider","uniform_data","testConstructorInputPreconditions","object_data","object_columns","image_data","image_columns","undefined","Error","includes","returnAllImgFileNames","map","channel","getValue","file_lookup","getObjsPerImg","objsInImg","count","push","getToolTip","getNRandomObjs","num_of_objs","rand_objs","floor","random","getRow","getAllObjRowsIn2DArray","objs","getCordsforCellDisplay","cords","cellinObj","cellx","celly","max","y","TrainingTable","data_lines","training_lines","getTrainingLabels","data_table","row_object","data_row","indexTable","getDataColumnsPaired","UploadHandler","fileListObject","sliceArrayByValue","array","value1","value2","index1","indexOf","index2","slice","getDataHandlerandStartingTrainingSet","file_objects","getFiles","getText","text_data","dp","tt","file_handler","UserUploadFileHandler","file_name","findFile","all","endsWith","fileReaderPromiseText","column_lines_txt","data_columns","split","trim","object_column_lines","image_column_lines","fileIndex","Array","from","target","files","elem","file_result","resolve","reject","fr","FileReader","onload","readAsText","findAllFiles","file_names","fileReaderPromiseImage","readAsDataURL","module","exports","values","assignFunc","valsLength","assignValue","baseZipObject"],"mappings":"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","file":"0f0155ee6dba5f778d81d10088233cf2c161c981-e006a2fdeaddb96a5be3.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nvar SIZE = 44;\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-block'\n    },\n\n    /* Styles applied to the root element if `variant=\"static\"`. */\n    static: {\n      transition: theme.transitions.create('transform')\n    },\n\n    /* Styles applied to the root element if `variant=\"indeterminate\"`. */\n    indeterminate: {\n      animation: '$circular-rotate 1.4s linear infinite'\n    },\n\n    /* Styles applied to the root element if `variant=\"determinate\"`. */\n    determinate: {\n      transition: theme.transitions.create('transform')\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the `svg` element. */\n    svg: {\n      display: 'block' // Keeps the progress centered\n\n    },\n\n    /* Styles applied to the `circle` svg path. */\n    circle: {\n      stroke: 'currentColor' // Use butt to follow the specification, by chance, it's already the default CSS value.\n      // strokeLinecap: 'butt',\n\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"static\"`. */\n    circleStatic: {\n      transition: theme.transitions.create('stroke-dashoffset')\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"indeterminate\"`. */\n    circleIndeterminate: {\n      animation: '$circular-dash 1.4s ease-in-out infinite',\n      // Some default value that looks fine waiting for the animation to kicks in.\n      strokeDasharray: '80px, 200px',\n      strokeDashoffset: '0px' // Add the unit to fix a Edge 16 and below bug.\n\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"determinate\"`. */\n    circleDeterminate: {\n      transition: theme.transitions.create('stroke-dashoffset')\n    },\n    '@keyframes circular-rotate': {\n      '0%': {\n        // Fix IE 11 wobbly\n        transformOrigin: '50% 50%'\n      },\n      '100%': {\n        transform: 'rotate(360deg)'\n      }\n    },\n    '@keyframes circular-dash': {\n      '0%': {\n        strokeDasharray: '1px, 200px',\n        strokeDashoffset: '0px'\n      },\n      '50%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-15px'\n      },\n      '100%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-125px'\n      }\n    },\n\n    /* Styles applied to the `circle` svg path if `disableShrink={true}`. */\n    circleDisableShrink: {\n      animation: 'none'\n    }\n  };\n};\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nvar CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$disableShrink = props.disableShrink,\n      disableShrink = _props$disableShrink === void 0 ? false : _props$disableShrink,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 40 : _props$size,\n      style = props.style,\n      _props$thickness = props.thickness,\n      thickness = _props$thickness === void 0 ? 3.6 : _props$thickness,\n      _props$value = props.value,\n      value = _props$value === void 0 ? 0 : _props$value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'indeterminate' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"]);\n\n  var circleStyle = {};\n  var rootStyle = {};\n  var rootProps = {};\n\n  if (variant === 'determinate' || variant === 'static') {\n    var circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = \"\".concat(((100 - value) / 100 * circumference).toFixed(3), \"px\");\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, color !== 'inherit' && classes[\"color\".concat(capitalize(color))], {\n      'determinate': classes.determinate,\n      'indeterminate': classes.indeterminate,\n      'static': classes.static\n    }[variant]),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other), /*#__PURE__*/React.createElement(\"svg\", {\n    className: classes.svg,\n    viewBox: \"\".concat(SIZE / 2, \" \").concat(SIZE / 2, \" \").concat(SIZE, \" \").concat(SIZE)\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    className: clsx(classes.circle, disableShrink && classes.circleDisableShrink, {\n      'determinate': classes.circleDeterminate,\n      'indeterminate': classes.circleIndeterminate,\n      'static': classes.circleStatic\n    }[variant]),\n    style: circleStyle,\n    cx: SIZE,\n    cy: SIZE,\n    r: (SIZE - thickness) / 2,\n    fill: \"none\",\n    strokeWidth: thickness\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCircularProgress',\n  flip: false\n})(CircularProgress);","import * as Papa from \"papaparse\"\r\nexport default class PapaParser {\r\n\r\n    constructor() {\r\n        // Could do the whole thing in here by keeping what configs mapped by key name\r\n        // Maybe faster?\r\n        //Is making multiple of these smart\r\n        this.basicPapaConfig = {\r\n            worker: true,\r\n            skipEmptyLines: true,\r\n            dynamicTyping: true\r\n        }\r\n        this.file_config_options = {\r\n            \"per_object.csv\" :  {fastMode: true, error: (e)=>console.error(e)} ,\r\n            \"per_image.csv\" : { error: (e)=>console.error(e)} ,\r\n            \"MyTrainingSet.txt\" : {delimiter: \" \", comments: \"#\" }\r\n        }\r\n\r\n        Papa.parsePromise = function(file, config) {\r\n            return new Promise(function(complete, error) {\r\n              Papa.parse(file, {...config, complete, error});\r\n            });\r\n        };  \r\n         Promise.prototype.notify = function(strMsg) {\r\n             return this.then(x=>{console.log(strMsg); return x});\r\n          }\r\n          Promise.prototype.debugPrint = function() {\r\n            return this.then(x=>{console.log(x); return x});\r\n        }  \r\n        Papa.papaparseFilePromise = function(file, options={}, onEndMsg=\"\") {\r\n    \r\n            return Papa.parsePromise(file, options)\r\n            .then((result)=> result.data)\r\n            .notify(onEndMsg);\r\n        }\r\n        Papa.papaparseFilePromise_noReturn = function(file, options={}, onEndMsg=\"\") {\r\n            return Papa.parsePromise(file, options)\r\n            .notify(onEndMsg);\r\n        }\r\n}\r\n    papaTextfromCSV(file_object) {\r\n        var file_for_papa = file_object.file;\r\n        var option = Object.assign(this.basicPapaConfig, this.file_config_options[file_object.name])\r\n        return Papa.papaparseFilePromise(file_for_papa, option)\r\n    }\r\n\r\n}","\r\nexport default class ImageTable{\r\n    constructor(image_lines, column_lines) {\r\n        this.column_lines = column_lines\r\n        this.image_lines = image_lines;\r\n        this.image_column = {}\r\n        this.image_mapped = {}\r\n        for (var i = 0; i < this.column_lines.length; i++) {\r\n            this.image_column[this.column_lines[i]] = i;\r\n        }\r\n        var obj_index = this.image_column.imageNumber\r\n        var img_index = this.image_column.ImageNumber\r\n        for (var i = 0; i < this.image_lines.length; i++) {\r\n            var key = this.image_lines[i][img_index].toString() \r\n            this.image_mapped[key] = i\r\n        }\r\n\r\n    }\r\n    find (search_obj) {\r\n        var row = {}\r\n        var index = this.findIndex(search_obj)\r\n        return this.indexTableGetRow(index)\r\n    }\r\n    get(index, key) {\r\n        if (key in this.image_column && index < this.getSize())\r\n            return this.image_lines[index][this.image_column[key]] \r\n        return -1\r\n\r\n    }    \r\n    findIndex (search_obj) {\r\n        var img;\r\n        var obj;\r\n        var key;\r\n        if (search_obj.hasOwnProperty('ImageNumber')) {\r\n            key = search_obj.ImageNumber.toString() \r\n        }\r\n        if (key in this.image_mapped)\r\n            return this.image_mapped[key]\r\n        \r\n        return -1\r\n    }\r\n    indexTableGetRow(index) {\r\n        var row = {}\r\n        if(index != -1) {\r\n            var line = this.image_lines[index]\r\n            for(var i = 0; i < this.column_lines.length; i++) {\r\n                var key = this.column_lines[i]\r\n                row[key] = line[i];\r\n            }\r\n            return row\r\n        }\r\n        return index;\r\n    }\r\n    getColumnLines(){\r\n        return this.column_lines;\r\n    }\r\n    getSize() {\r\n    return this.image_lines.length;\r\n    }\r\n}\r\n    \r\n","export default class ObjectTable {\r\n    constructor(object_lines, column_lines) {\r\n        this.column_lines = column_lines\r\n        this.object_lines = object_lines;\r\n        this.object_column = {}\r\n        this.object_mapped = {}\r\n        this.imgs_size = {}\r\n        for (var i = 0; i < this.column_lines.length; i++) {\r\n            this.object_column[this.column_lines[i]] = i;\r\n        }\r\n        var obj_index = this.object_column.ObjectNumber\r\n        var img_index = this.object_column.ImageNumber\r\n        var size = 0\r\n        for (var i = 0, size = 0; i < this.object_lines.length; i++, size++) {\r\n            var img = this.object_lines[i][img_index].toString() \r\n            var obj = this.object_lines[i][obj_index].toString() \r\n            var index = img.concat(',',obj)\r\n            this.object_mapped[index] = i\r\n            if (!this.imgs_size.hasOwnProperty(img)) {\r\n                this.imgs_size[img] = 0; \r\n            }\r\n            this.imgs_size[img]++\r\n        }\r\n        console.log(this.imgs_size)\r\n     }\r\n     returnObjsPerImg(img) {\r\n        if (img.toString() in this.imgs_size) {\r\n            return this.imgs_size[img.toString()]\r\n        }\r\n        return -1\r\n    }\r\n    firstObjinImg(n) {\r\n        var img = n.toString()\r\n        if (!(this.imgs_size.hasOwnProperty(img))) {\r\n            return -1\r\n        }\r\n        if (this.imgs_size[img] <= 0) {\r\n            return -1\r\n        }\r\n        var i = 1;\r\n        var obj = i.toString()\r\n        var index_key = img.concat(',',obj)  \r\n        while(!(this.object_mapped.hasOwnProperty(index_key))) {\r\n            i++\r\n            obj = i.toString()\r\n            index_key = img.concat(',',obj)  \r\n        }\r\n        return parseInt(obj)\r\n    }\r\n    find (search_obj = {}) {\r\n        var row = {}\r\n        var index = this.findIndex(search_obj)\r\n        return this.indexTableGetRow(index)\r\n    }\r\n    get(index, key) {\r\n        if (key in this.object_column && index < this.getSize())\r\n            return this.object_lines[index][this.object_column[key]] \r\n        return -1\r\n\r\n    }    \r\n    findIndex(search_obj) {\r\n        var img;\r\n        var obj;\r\n        var key;\r\n        if (search_obj.hasOwnProperty('ImageNumber') && search_obj.hasOwnProperty('ObjectNumber')) {\r\n            img = search_obj.ImageNumber.toString() \r\n            obj = search_obj.ObjectNumber.toString() \r\n            key = img.concat(',',obj)\r\n        }\r\n        if (key in this.object_mapped)\r\n            return this.object_mapped[key]\r\n        \r\n        return -1\r\n    }\r\n    indexTableGetRow(index) {\r\n        var row = {}\r\n        if(index != -1 && index < this.getSize()) {\r\n            var line = this.object_lines[index]\r\n            for(var i = 0; i < this.column_lines.length; i++) {\r\n                var column = this.column_lines[i]\r\n                row[column] = line[i];\r\n            }\r\n            return row\r\n        }\r\n        return index;\r\n    }\r\n    getColumnLines(){\r\n        return this.column_lines;\r\n    }\r\n    getSize() {\r\n    return this.object_lines.length;\r\n    }\r\n\r\n}\r\n\r\n\r\n","\r\nimport { ThreeSixty, ThumbDownSharp } from \"@material-ui/icons\";\r\nimport ImageTable from \"./ImageTable.js\";\r\nimport ObjectTable from \"./ObjectTable.js\";\r\nexport default class DataProvider {\r\n    constructor(uniform_data) {\r\n        this.testConstructorInputPreconditions(uniform_data);\r\n\r\n        this.data = {\r\n            'object_data' : new ObjectTable(uniform_data.object_data, uniform_data.object_columns),\r\n            'image_data' :  new ImageTable(uniform_data.image_data, uniform_data.image_columns)\r\n        }  \r\n    }\r\n    testConstructorInputPreconditions(uniform_data) {\r\n        if (uniform_data == undefined) {\r\n            throw new Error(\"Constructor Error on uniform_data is not defined\")\r\n        }\r\n        if (uniform_data.image_data == undefined || \r\n            uniform_data.object_data == undefined ||\r\n            uniform_data.image_columns == undefined ||\r\n            uniform_data.object_columns == undefined) {\r\n            \r\n            throw new Error(\"Constructor Error on uniform_data is missing fields\")\r\n        }\r\n        if (uniform_data.object_data[0][0] == undefined) {\r\n            throw new Error(\"Constructor Error on object_data is not a 2d array\")\r\n        }\r\n        if (uniform_data.image_data[0][0] == undefined) {\r\n            throw new Error(\"Constructor Error on image_data is not a 2d array\")\r\n        }\r\n        if (uniform_data.object_data[0].length !== uniform_data.object_columns.length) {\r\n            throw new Error(\"Constructor Error on object_data length mismatch with object_columns length\")\r\n        }\r\n        if (uniform_data.image_data[0].length !== uniform_data.image_columns.length) {\r\n            throw new Error(\"Constructor Error on image_data length mismatch with image_columns length\")\r\n        }\r\n        if (!uniform_data.object_columns.includes(\"ObjectNumber\") ||\r\n            !uniform_data.object_columns.includes(\"ImageNumber\")) {\r\n                throw new Error(\"Constructor Error on object_columns doesn't have ObjectNumber and ImageNumber\")\r\n            }\r\n        if (!uniform_data.image_columns.includes(\"ImageNumber\")) {\r\n                throw new Error(\"Constructor Error on image_columns doesn't have ImageNumber\")\r\n            }\r\n        if (!uniform_data.object_columns.includes(\"Nuclei_Location_CenterX\") ||\r\n            !uniform_data.object_columns.includes(\"Nuclei_Location_CenterY\")) {\r\n                throw new Error(\"Constructor Error on uniform_data doesn't have Nuclei_Location_CenterX or Nuclei_Location_CenterY\")\r\n            }\r\n    }\r\n    \r\n    returnAllImgFileNames(img) {\r\n        var channels = [\r\n            {'file_lookup' : 'Image_FileNames_Filename_OrigActin', 'color' : \"red\" }, \r\n            {'file_lookup' : 'Image_FileNames_Filename_OrigpH3'  , 'color' : \"green\"},\r\n            {'file_lookup' : \"Image_FileNames_Filename_OrigDNA\"  , 'color' : \"blue\"}\r\n        ]\r\n         var image_paths = channels.map( channel => {\r\n            var file_name =  this.getValue('image_data', {'ImageNumber': img, 'value': channel.file_lookup}) \r\n            return {'filename' : file_name , 'color' : channel.color}   \r\n         });\r\n        return image_paths;\r\n    }\r\n    //TODO what if cell is on edge of image\r\n    getObjsPerImg(img) {\r\n        var size = this.data.object_data.returnObjsPerImg(img);\r\n        if (size <= 0) {\r\n            return -1;\r\n        }\r\n        var first = this.data.object_data.firstObjinImg(img)\r\n        var objsInImg = [];\r\n        for (var obj = first, count = 0; count < size ; obj++) {\r\n            var row = this.data.object_data.find({'ImageNumber': img, 'ObjectNumber': obj})\r\n            if (row != -1) {\r\n                count++\r\n                objsInImg.push(row)\r\n            }\r\n        }\r\n        return objsInImg;\r\n    }\r\n    getToolTip(search_obj) {\r\n        var index = this.data.image_data.findIndex(search_obj)\r\n        var plate = this.data.image_data.get(index, 'plate')\r\n        var well = this.data.image_data.get(index, 'well')\r\n        return \"Plate: \" + plate + \" Well: \" + well + \" ImageNumber: \" + search_obj.ImageNumber\r\n    }\r\n    getNRandomObjs(n) {\r\n        var num_of_objs = this.data.object_data.getSize()\r\n        var rand_objs = []\r\n        var i;\r\n        for (i = 0; i < n; i++) {\r\n            var index = Math.floor(Math.random() * num_of_objs);\r\n            var obj = this.data.object_data.indexTableGetRow(index)\r\n            rand_objs.push({'ImageNumber': obj.ImageNumber, 'ObjectNumber': obj.ObjectNumber })\r\n        }\r\n        return rand_objs\r\n    }\r\n    getRow(key, search_obj, ) { //Where key is a member of data and search obj is of form {'img': , 'objs': , 'index': }\r\n        if (!(this.data.hasOwnProperty(key))) return -1;\r\n        var row = this.data[key].find(search_obj)\r\n        return row;\r\n\r\n    }\r\n    getAllObjRowsIn2DArray(objs) {\r\n        \r\n\r\n    }\r\n    getCordsforCellDisplay(search_obj) {\r\n        var cords = {};        \r\n        var cellinObj = this.data.object_data.findIndex(search_obj)\r\n        var cellx = parseInt(this.data.object_data.get(cellinObj, 'Nuclei_Location_CenterX'))\r\n        var celly = parseInt(this.data.object_data.get(cellinObj, 'Nuclei_Location_CenterY'))\r\n        cords.x = Math.max(0, cellx - 20) \r\n       // var hi_x = lo_x + 40\r\n        cords.y = (Math.max(0, celly - 20))\r\n        return cords;\r\n    }\r\n\r\n    getValue(key, search_obj) {\r\n        if (!this.data.hasOwnProperty(key)) return -1;         \r\n        var value = -1\r\n        var index =  this.data[key].findIndex(search_obj)\r\n        if (index !== -1) {\r\n            value = this.data[key].get(index, search_obj.value);\r\n        }\r\n        return value;\r\n    }\r\n    getColumnLines(key) {\r\n        if (this.data.hasOwnProperty(key)) {\r\n            return this.data[key].getColumnLines();\r\n        }\r\n        return -1;\r\n\r\n    }                     \r\n\r\n}\r\n\r\nexport {DataProvider}","import { DataTables } from \"./DataTables\";\r\nexport default class TrainingTable extends DataTables{\r\n    constructor(data_lines, column_lines) {\r\n        super(data_lines, column_lines)\r\n        this.training_lines = data_lines;\r\n    }\r\n    getTrainingLabels() {\r\n        return this.data_table.map(row_object => {\r\n            return row_object['label'] === 'positive'? 1 : 0\r\n        })\r\n\r\n\r\n    }\r\n}","import _ from \"lodash\";\r\nexport class DataTables {\r\n    constructor(data_lines, column_lines) {\r\n        this.data_table = data_lines.map(data_row=>{ return _.zipObject(column_lines, data_row)})\r\n        this.column_lines = column_lines;\r\n    }\r\n    find (search_obj = {}) {\r\n                return  _.find(this.data_table, search_obj)\r\n           \r\n        }\r\n    size() {\r\n        return this.data_table.length;\r\n    }\r\n    get(index, key) {\r\n        return _.get(this.data_table[index], key)    \r\n        \r\n    }\r\n    findIndex (search_obj) {\r\n        return _.findIndex(this.data_table, search_obj)\r\n    }\r\n    indexTable (index) {\r\n        return this.data_table[index];\r\n    }\r\n    getColumnLines(){\r\n        return this.column_lines;\r\n    }\r\n    getSize() {\r\n        return this.data_table.length;\r\n    }\r\n\r\n    getDataColumnsPaired() {\r\n        return this.data_table;\r\n        \r\n    }\r\n} ","//import DataUtils from \"./DataUtils\";\r\nimport PapaParser from \"./PapaParser.js\";\r\nimport UserUploadFileHandler from \"./UserUploadFileHandler.js\";\r\nimport _ from \"lodash\";                                                                                                                                                                                                         \r\nimport DataProvider from \"./DataProvider.js\";\r\nimport TrainingTable from \"./TrainingTable.js\";\r\nexport default class UploadHandler {\r\n\r\n    constructor(fileListObject) {\r\n        this.fileListObject = fileListObject\r\n    }\r\n    // TODO\r\n    // getProperties(file_handler) {\r\n\r\n    // }\r\n    sliceArrayByValue = function (array, value1, value2) {\r\n        const index1 = array.indexOf(value1);\r\n        const index2 = array.indexOf(value2);\r\n      \r\n        if (value1 === -1 || value2 === -1) {\r\n            console.error(\"Values not found to slice\");\r\n            return null;\r\n        }\r\n      \r\n        return array.slice(index1, index2);\r\n      }\r\n\r\n    basicPapaConfig = {\r\n        worker: true,\r\n        skipEmptyLines: true,\r\n        dynamicTyping: true\r\n    }\r\n    getFiles() {\r\n        var file_names = [\r\n            \"example_SETUP.SQL\",\r\n            \"per_object.csv\",\r\n            \"per_image.csv\",\r\n            \"MyTrainingSet.txt\"\r\n        ]\r\n        var file_handlers = [];\r\n        var i = 0;\r\n        var file_handler = new UserUploadFileHandler(this.fileListObject)\r\n        return  file_names.map(file_name => {\r\n                var file = file_handler.findFile(file_name)\r\n                return {'file': file, 'name' : file_name};\r\n            })\r\n    }\r\n\r\n     \r\n    getText(file_objects) {\r\n        return Promise.all( file_objects.map( file_object => {\r\n            if (file_object.name.endsWith(\".csv\") || file_object.name.endsWith(\".txt\")) {\r\n                var papa_parser = new PapaParser();\r\n                return papa_parser.papaTextfromCSV(file_object);\r\n            }\r\n            else {\r\n                var file_handler = new UserUploadFileHandler(this.fileListObject)\r\n                return file_handler.fileReaderPromiseText(file_object.file);\r\n            }\r\n        }))\r\n    }\r\n        //return Promise.all([this.fileReaderPromiseText(fileListObject, setup_name).split('\\n').map(e=>e.trim()),\r\n    getColumnLines(column_lines_txt) {\r\n        var data_columns = [] \r\n        var column_lines = column_lines_txt.split('\\n').map(e=>e.trim())\r\n        const object_column_lines = this.sliceArrayByValue(\r\n            column_lines,\r\n            \"CREATE TABLE per_object (\", \r\n            \"PRIMARY KEY  (ImageNumber,ObjectNumber)\"\r\n        );\r\n        data_columns.push(object_column_lines.map((name)=>name.split(' ')[0]).slice(1));\r\n        const image_column_lines = this.sliceArrayByValue(\r\n            column_lines,\r\n            \"CREATE TABLE per_image (\", \r\n            \"PRIMARY KEY  (ImageNumber)\"\r\n        );\r\n        data_columns.push(image_column_lines.map((name)=>name.split(' ')[0]).slice(1));\r\n        data_columns.push(\"label imagenum objectnum x y\".split(\" \"));\r\n        return data_columns\r\n    }\r\n    getDataHandlerandStartingTrainingSet = async function() {\r\n        var data_types = [\r\n            'column_lines',\r\n            'object_data',\r\n            'image_data',\r\n            'training_data'\r\n        ]  \r\n\r\n        var data = [];\r\n        var file_objects = this.getFiles();\r\n        var text_data = await this.getText(file_objects);\r\n        var column_lines = this.getColumnLines(text_data[0]);\r\n        // console.log(text_data[1])\r\n        // console.log(column_lines[0])\r\n        var dp = new DataProvider({'object_data' : text_data[1], 'image_data' : text_data[2], \r\n                                       'object_columns' : column_lines[0], 'image_columns' : column_lines[1]})\r\n        var tt = new TrainingTable( text_data[3].slice(1) , column_lines[2])\r\n        return {'data_provider' : dp, 'training_data' : {'features' : column_lines[0],  'training_table' :  tt}}\r\n\r\n\r\n        // var image_data = text_data[2].map(data_row=>{ return _.zipObject(column_lines[1], data_row)})\r\n        // var object_data = text_data[1].map(data_row=>{ return _.zipObject(column_lines[0], data_row)})\r\n        // var training_data = text_data[3].map(data_row=>{ return _.zipObject(column_lines[2], data_row)})\r\n\r\n \r\n\r\n\r\n    }\r\n\r\n}","export default class UserUploadFileHandler {\r\n\r\n    constructor(fileListObject) {\r\n\r\n        this.fileListObject = fileListObject\r\n    }\r\n    findAllFiles(file_names) {\r\n        return file_names.map(file_name => {\r\n            return this.findFile(file_name)\r\n        })\r\n    }\r\n    findFile = (file_name) => {\r\n        const fileIndex = Array.from(this.fileListObject.target.files).findIndex((elem) => {\r\n            return (elem.name === file_name);\r\n        });\r\n        return this.fileListObject.target.files[fileIndex];\r\n    }\r\n    fileReaderPromiseText =  function(file_result) {\r\n        return new Promise((resolve, reject)=> {\r\n            var fr = new FileReader();\r\n            fr.onload = () => {\r\n                resolve(fr.result)\r\n            };\r\n            fr.readAsText(file_result)\r\n        })\r\n    }\r\n    fileReaderPromiseImage(file_result) {\r\n        return new Promise((resolve, reject)=> {\r\n            var fr = new FileReader();\r\n            fr.onload = () => {\r\n                resolve(fr.result)\r\n            };\r\n            fr.readAsDataURL(file_result)\r\n        })\r\n    }\r\n\r\n    \r\n\r\n}","/**\n * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n *\n * @private\n * @param {Array} props The property identifiers.\n * @param {Array} values The property values.\n * @param {Function} assignFunc The function to assign values.\n * @returns {Object} Returns the new object.\n */\nfunction baseZipObject(props, values, assignFunc) {\n  var index = -1,\n      length = props.length,\n      valsLength = values.length,\n      result = {};\n\n  while (++index < length) {\n    var value = index < valsLength ? values[index] : undefined;\n    assignFunc(result, props[index], value);\n  }\n  return result;\n}\n\nmodule.exports = baseZipObject;\n","var assignValue = require('./_assignValue'),\n    baseZipObject = require('./_baseZipObject');\n\n/**\n * This method is like `_.fromPairs` except that it accepts two arrays,\n * one of property identifiers and one of corresponding values.\n *\n * @static\n * @memberOf _\n * @since 0.4.0\n * @category Array\n * @param {Array} [props=[]] The property identifiers.\n * @param {Array} [values=[]] The property values.\n * @returns {Object} Returns the new object.\n * @example\n *\n * _.zipObject(['a', 'b'], [1, 2]);\n * // => { 'a': 1, 'b': 2 }\n */\nfunction zipObject(props, values) {\n  return baseZipObject(props || [], values || [], assignValue);\n}\n\nmodule.exports = zipObject;\n"],"sourceRoot":""}