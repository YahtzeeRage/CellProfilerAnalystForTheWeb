{"version":3,"sources":["webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Abs_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Acos_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Acosh_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Add_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/AddN_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/ArgMax_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/ArgMin_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Asin_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Asinh_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Atan2_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Atan_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Atanh_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/avg_pool_3d_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/AvgPool3D_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/avg_pool_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/AvgPool_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/BatchMatMul_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/BatchToSpaceND_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/BroadcastTo_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Cast_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Ceil_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/ClipByValue_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/ComplexAbs_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Concat_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Conv2D_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Conv2DBackpropInput_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/conv3d_backprop_filter.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Conv3D_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Cos_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Cosh_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Cumsum_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/DepthwiseConv2dNative_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Dilation2D_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Elu_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Erf_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Exp_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/ExpandDims_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Expm1_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Floor_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/FloorDiv_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/FusedBatchNorm_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/GatherV2_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/GreaterEqual_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Identity_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/IsFinite_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/IsInf_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/IsNan_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/LeakyRelu_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Log1p_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Log_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/LogSoftmax_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/local_response_normalization_backprop.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/LRN_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/min_max_grad_util.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Max_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Maximum_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/max_pool_3d_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/MaxPool3D_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/max_pool_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/MaxPool_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Mean_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Min_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Minimum_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/MirrorPad_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Mod_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Multiply_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Neg_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/OneHot_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/OnesLike_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Pack_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/PadV2_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Pow_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Prelu_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/RealDiv_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Reciprocal_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Relu6_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Relu_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Reshape_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/ResizeBilinear_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/ResizeNearestNeighbor_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Reverse_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Round_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Rsqrt_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Select_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Selu_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Sigmoid_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Sign_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Sin_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Sinh_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Slice_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Softmax_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Softplus_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/SpaceToBatchND_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/SplitV_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Sqrt_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Square_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/SquaredDifference_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Step_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Sub_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Sum_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Tan_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Tanh_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Tile_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Transpose_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/Unpack_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/UnsortedSegmentSum_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/register_all_gradients.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients/ZerosLike_grad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-layers/dist/backend/common.js","webpack://gatsby-test/./node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","webpack://gatsby-test/./node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-layers/dist/errors.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-layers/dist/utils/generic_utils.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-layers/dist/constraints.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-layers/dist/keras_format/common.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-layers/dist/common.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-layers/dist/utils/math_utils.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-layers/dist/backend/tfjs_backend.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-layers/dist/keras_format/initializer_config.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-layers/dist/initializers.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-layers/dist/backend/state.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-layers/dist/utils/types_utils.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-layers/dist/utils/variable_utils.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-layers/dist/variables.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-layers/dist/engine/topology.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-layers/dist/engine/input_layer.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-layers/dist/base_callbacks.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-layers/dist/logs.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-layers/dist/layers/serialization.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-layers/dist/losses.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-layers/dist/metrics.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-layers/dist/user_defined_metadata.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-layers/dist/utils/layer_utils.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-layers/dist/utils/serialization_utils.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-layers/dist/version.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-layers/dist/engine/executor.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-layers/dist/engine/container.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-layers/dist/engine/training_utils.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-layers/dist/engine/training_dataset.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-layers/dist/engine/training_tensors.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-layers/dist/engine/training.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-layers/dist/optimizers.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-layers/dist/models.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-layers/dist/exports.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-layers/dist/activations.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-layers/dist/regularizers.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-layers/dist/layers/advanced_activations.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-layers/dist/utils/conv_utils.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-layers/dist/layers/convolutional.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-layers/dist/layers/convolutional_depthwise.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-layers/dist/layers/recurrent.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-layers/dist/layers/convolutional_recurrent.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-layers/dist/layers/core.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-layers/dist/layers/embeddings.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-layers/dist/layers/merge.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-layers/dist/layers/noise.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-layers/dist/layers/normalization.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-layers/dist/layers/padding.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-layers/dist/layers/pooling.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-layers/dist/exports_layers.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-layers/dist/exports_regularizers.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-layers/dist/callbacks.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-converter/dist/data/compiled_api.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-converter/dist/version.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-data/dist/util/deep_map.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-data/dist/util/deep_clone.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-data/dist/util/ring_buffer.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-data/dist/util/growing_ring_buffer.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-data/dist/iterators/lazy_iterator.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-data/dist/dataset.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-data/dist/datasets/text_line_dataset.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-data/dist/datasets/csv_dataset.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-data/dist/iterators/microphone_iterator.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-data/dist/iterators/webcam_iterator.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-data/dist/datasource.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-data/dist/iterators/string_iterator.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-data/dist/iterators/byte_chunk_iterator.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-data/dist/iterators/file_chunk_iterator.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-data/dist/iterators/url_chunk_iterator.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-data/dist/util/source_util.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-data/dist/sources/file_data_source.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-data/dist/sources/url_data_source.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-data/dist/readers.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-data/dist/version.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/backend_cpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_utils.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/base.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Elu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Identity.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/LeakyRelu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_impl.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Prelu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Relu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Relu6.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/fused_utils.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Complex.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/zeros_impl.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Real.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Cast.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_utils.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Add.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Reshape.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/BatchMatMul.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/_FusedMatMul.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Abs.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Acos.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Acosh.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/AddN.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Transpose_impl.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Transpose.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/All.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Any.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/ArgMax.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/ArgMin.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Asin.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Asinh.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Atan.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Atan2.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Atanh.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/pool_utils.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/AvgPool.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/AvgPool3D.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/AvgPool3DGrad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/AvgPoolGrad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/BatchNorm.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Slice.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/BatchToSpaceND.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Bincount_impl.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Bincount.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_impl.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Ceil.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Clip.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/ComplexAbs.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Concat_impl.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Imag.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Concat.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Conv2D.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Conv2DBackpropFilter.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Conv2DBackpropInput.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Conv3D.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Conv3DBackpropFilterV2.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Conv3DBackpropInputV2.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Cos.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Cosh.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/CropAndResize.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Cumsum.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/DenseBincount.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/DepthToSpace.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/DepthwiseConv2dNative.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/DepthwiseConv2dNativeBackpropFilter.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/DepthwiseConv2dNativeBackpropInput.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Diag.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Dilation2D.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Dilation2DBackpropFilter.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Dilation2DBackpropInput.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Multiply.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Sum.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Einsum.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/EluGrad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Equal.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Erf.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Exp.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/ExpandDims.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Expm1.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/RealDiv.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Sub.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/fft_utils.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/FFT.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Fill.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/FlipLeftRight.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Floor.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/FloorDiv.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/FusedConv2D.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/FusedDepthwiseConv2D.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/GatherNd.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/GatherV2_impl.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/GatherV2.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Greater.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/GreaterEqual.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/IFFT.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/IsFinite.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/IsInf.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/IsNaN.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Less.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/LessEqual.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/LinSpace_impl.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/LinSpace.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Log.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Log1p.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/LogicalAnd.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/LogicalNot.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/LogicalOr.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/LRN.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/LRNGrad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Max_impl.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Max.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Maximum.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/MaxPool.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/MaxPool3D.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/MaxPool3DGrad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/MaxPoolGrad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/MaxPoolWithArgmax.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/MaxPoolWithArgmax_impl.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Mean.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Min.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Minimum.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/MirrorPad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Mod.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Softmax.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Multinomial.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Neg.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/NonMaxSuppressionV3.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/NonMaxSuppressionV4.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/NonMaxSuppressionV5.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/NotEqual.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/OneHot.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/ZerosLike.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/OnesLike.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Pack.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/PadV2.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Pow.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Prod.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Range_impl.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Range.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Reciprocal.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/ResizeBilinear.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/ResizeBilinearGrad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/ResizeNearestNeighbor.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/ResizeNearestNeighborGrad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Reverse.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/RotateWithOffset.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Round.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Rsqrt.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Scatter_impl.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/ScatterNd.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Select.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Selu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Sigmoid.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Sign.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Sin.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Sinh.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Softplus.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/SpaceToBatchND.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/SparseToDense.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/SplitV.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Sqrt.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Square.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/SquaredDifference.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Step.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/StridedSlice_impl.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/StridedSlice.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Tan.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Tanh.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Tile_impl.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Tile.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/TopK_impl.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/TopK.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Transform.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Unique_impl.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Unique.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Unpack.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/register_all_kernels.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/UnsortedSegmentSum.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/canvas_util.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/tex_util.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/webgl_util.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/flags_webgl.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/glsl_version.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/shader_compiler_util.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/decode_matrix_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/decode_matrix_packed_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/encode_float_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/encode_float_packed_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/encode_matrix_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/encode_matrix_packed_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/gpgpu_util.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/gpgpu_context.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/shader_compiler.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/gpgpu_math.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/shared.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/packing_util.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/pack_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/reshape_packed_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/texture_manager.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/unaryop_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/unaryop_packed_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/unpack_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/backend_webgl.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/base.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/binaryop_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/binaryop_packed_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Identity.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Complex.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/LeakyRelu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Prelu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/mulmat_packed_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/binaryop_complex_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Multiply.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Reshape.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/reshape.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/mean_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/reduce_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/reduce.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/transpose_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/transpose_packed_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Transpose_impl.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Sum.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Sum_impl.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Transpose.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/BatchMatMul_impl.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/_FusedMatMul.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Abs.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Acos.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Acosh.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Add.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/addn_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/addn_packed_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/AddN.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/All.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Any.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/argminmax_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/argminmax_packed_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/arg_min_max.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ArgMax.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ArgMin.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Asin.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Asinh.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Atan.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Atan2.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Atanh.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/pool_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/AvgPool.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/AvgPool3D.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/avg_pool_backprop_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/AvgPool3DGrad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/AvgPoolGrad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/BatchMatMul.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/batchnorm_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/batchnorm_packed_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/BatchNorm.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/slice_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/slice_packed_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Slice.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/BatchToSpaceND.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Bincount.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/NotEqual.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Real.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Cast.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/int.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Ceil.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/clip_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/clip_packed_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ClipByValue.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/complex_abs_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ComplexAbs.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/concat_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/concat_packed_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Imag.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Concat_impl.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Concat.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/conv_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/im2col_packed_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Conv2D_impl.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Conv2D.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/conv_backprop_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Conv2DBackpropFilter.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Conv2DBackpropInput.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Conv3D.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Conv3DBackpropFilterV2.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Conv3DBackpropInputV2.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Cos.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Cosh.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/crop_and_resize_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/CropAndResize.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/cumsum_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Cumsum.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/DenseBincount.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/depth_to_space_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/DepthToSpace.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/conv_gpu_depthwise.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/conv_packed_gpu_depthwise.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/DepthwiseConv2dNative.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/conv_backprop_gpu_depthwise.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/DepthwiseConv2dNativeBackpropFilter.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/DepthwiseConv2dNativeBackpropInput.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/diag_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Diag.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/dilation_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Dilation2D.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Einsum.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Elu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/EluGrad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Equal.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Erf.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Exp.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ExpandDims.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Expm1.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/fft_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/FFT_impl.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/FFT.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/fill_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Fill.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/FromPixels.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/flip_left_right_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/FlipLeftRight.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Floor.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/FloorDiv.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/FromPixels_utils/from_pixels_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/FromPixels_utils/from_pixels_packed_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/FusedConv2D.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/FusedDepthwiseConv2D.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/gather_nd_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/GatherNd.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/gather_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/GatherV2.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Greater.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/GreaterEqual.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/IFFT.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/IsFinite.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/IsInf.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/IsNaN.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Less.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/LessEqual.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/LinSpace.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Log.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Log1p.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/LogicalAnd.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/LogicalNot.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/LogicalOr.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/lrn_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/lrn_packed_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/LRN.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/lrn_grad_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/LRNGrad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Max.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Max_impl.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Maximum.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/MaxPool.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/MaxPool3D.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/max_pool_backprop_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/MaxPool3DGrad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/MaxPoolGrad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/MaxPoolWithArgmax.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/MaxPoolWithArgmax_impl.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Mean.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Mean_impl.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Min.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Minimum.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/mirror_pad_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/mirror_pad_packed_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/MirrorPad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Mod.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/multinomial_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/RealDiv.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Sub.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Softmax.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Multinomial.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Neg.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/NonMaxSuppressionV3.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/NonMaxSuppressionV4.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/NonMaxSuppressionV5.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/onehot_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/OneHot.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ZerosLike.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/OnesLike.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Pack.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/pad_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/pad_packed_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/PadV2.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Pow.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Prod.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Range.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Reciprocal.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Relu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Relu6.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/resize_bilinear_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/resize_bilinear_packed_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ResizeBilinear.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/resize_bilinear_backprop_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ResizeBilinearGrad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/resize_nearest_neighbor_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ResizeNearestNeighbor.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/resize_nearest_neighbor_backprop_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ResizeNearestNeighborGrad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/reverse_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/reverse_packed_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Reverse.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/rotate_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/RotateWithOffset.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Round.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Rsqrt.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/scatter_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ScatterNd.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/select_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Select.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Selu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Sigmoid.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Sign.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Sin.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Sinh.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Softplus.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/SpaceToBatchND.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/SparseToDense.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/SplitV.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Sqrt.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Square.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/SquaredDifference.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Step.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/strided_slice_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/StridedSlice.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Tan.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Tanh.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/tile_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Tile.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/TopK.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/transform_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Transform.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Unique.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Unpack.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/segment_gpu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/register_all_kernels.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/UnsortedSegmentSum.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs/dist/index.js"],"names":["absGradConfig","kernelName","inputsToSave","gradFunc","dy","saved","_x","x","mul","step","cast","acosGradConfig","a","square","b","sqrt","sub","neg","div","acoshGradConfig","addGradConfig","_saved","outShape","broadcast_util","shape","res","reduceAxes","length","sum","addNGradConfig","saveAllInputs","ders","forEach","_","i","clone","argMaxGradConfig","argMinGradConfig","asinGradConfig","asinhGradConfig","add","atan2GradConfig","d","atanGradConfig","atanhGradConfig","avgPool3dGrad","op","avgPool3dGrad_","input","filterSize","strides","pad","dimRoundingMode","$dy","$input","dy5D","input5D","reshapedTo5D","rank","concat","inputs","attrs","avgPool3DGradConfig","avgPoolGrad","avgPoolGrad_","input4D","dy4D","reshapedTo4D","avgPoolGradConfig","batchMatMulGradConfig","transposeA","transposeB","batchToSpaceNDGradConfig","blockShape","crops","broadcastToGradConfig","broadCastToAttrs","inputShape","outputShape","reps","Array","from","Error","axes","_i","push","castGradConfig","ceilGradConfig","clipByValueGradConfig","clipValueMin","clipValueMax","complexAbsGradConfig","concatGradConfig","shapes","map","t","axis","$axis","sizeSplits","s","conv2DGradConfig","x4D","$filter","dilations","dataFormat","conv_util","filter","conv2DBackpropInputGradConfig","ddx","_filter","conv2d","conv3DBackpropFilter","conv3DBackpropFilter_","filterShape","x5D","conv3DGradConfig","cosGradConfig","sin","coshGradConfig","sinh","cumsumGradConfig","exclusive","reverse","permutation","out","cumsum","transpose","depthwiseConv2dNativeGradConfig","$dilations","dilation2dGradConfig","inputInputs","filterInputs","eluGradConfig","outputsToSave","y","erfGradConfig","exp","Math","PI","expGradConfig","expandDimsGradConfig","_input","expm1GradConfig","floorGradConfig","floorDivGradConfig","tmp","fusedBatchNormGradConfig","varianceEpsilon","mean","variance","scale","scaleValue","reductionAxes","tileShape","xMinusMean","dyTimesScaleValue","oneOverSqrtVariance","rsqrt","minusHalfRCube","tile","meanDer","varianceDer","xMinusMean2TimesRsqrt","scaleDer","offset","offsetDer","gatherGradConfig","_indices","parsedAxis","paramsShape","indicesSize","size","outerShape","slice","outerDims","innerShape","innerDims","outerAxesIndices","arrayRange","innerAxesIndices","valuesShape","arrayConcat","values","reshapedIndices","transposeDims","valuesTranspose","paramsGrad","invertTransposeDims","indices","start","stop","result","arrays","j","greaterEqualGradConfig","_a","_b","identityGradConfig","isFiniteGradConfig","isInfGradConfig","isNanGradConfig","leakyReluGradConfig","alpha","mask","greater","log1pGradConfig","logGradConfig","logSoftmaxGradConfig","value","logits","softmax","localResponseNormalizationBackprop","localResponseNormalizationBackprop_","depthRadius","arguments","undefined","bias","beta","lrnGradConfig","gradForMinAndMax","xOrig","origAxes","axis_util","equal","dtype","maxGradConfig","reductionIndices","maxGrad","maximumGradConfig","less","maxPool3dGrad","maxPool3dGrad_","output","$output","output5D","maxPool3DGradConfig","maxPoolGrad","maxPoolGrad_","maxPoolGradConfig","meanGradConfig","reduceShape","reduceSize","expandedDyShape","expandedDy","ones","minGradConfig","minGrad","minimumGradConfig","mirrorPadGradConfig","begin","paddings","p","modGradConfig","floor","multiplyGradConfig","negGradConfig","oneHotGradConfig","zeros","onesLikeGradConfig","packGradConfig","padV2GradConfig","powGradConfig","base","expFloat","pow","condition","logBase","log","preluGradConfig","_alpha","divGradConfig","reciprocalGradConfig","relu6GradConfig","reluGradConfig","reshapeGradConfig","resizeBilinearGradConfig","images","resizeNearestNeighborGradConfig","reverseGradConfig","dims","roundGradConfig","rsqrtGradConfig","selectGradConfig","_condition","e","seluGradConfig","scaleAlpha","greaterThanZeroDer","lessEqualZeroDer","sigmoidGradConfig","signGradConfig","sinGradConfig","cos","sinhGradConfig","cosh","sliceGradConfig","_parseSliceParams","parseSliceParams","_parseSliceParams2","begin_","size_","softmaxGradConfig","dim","dyTimesY","softplusGradConfig","sigmoid","spaceToBatchNDGradConfig","splitVGradConfig","sqrtGradConfig","squareGradConfig","squaredDifferenceGradConfig","two","stepGradConfig","subGradConfig","sumGradConfig","derX","tanGradConfig","tanhGradConfig","tileGradConfig","xGrad","_i2","_j","k","_i3","_j2","_k","l","transposeGradConfig","perm","undoPerm","unpackGradConfig","unsortedSegmentSumGradConfig","segmentIds","zeroClippedIndices","maximum","gathered","gather","isPositive","numIters","zeroSlice","gatherDropNegatives","zerosLikeGradConfig","_gradConfigs","gradientConfig","_epsilon","epsilon","backend","_wrapNativeSuper","Class","_cache","Map","fn","Function","toString","call","indexOf","TypeError","has","get","set","Wrapper","construct","getPrototypeOf","this","constructor","prototype","Object","create","enumerable","writable","configurable","setPrototypeOf","_createSuper","Derived","hasNativeReflectConstruct","Reflect","sham","Proxy","Boolean","valueOf","_isNativeReflectConstruct","Super","NewTarget","apply","AttributeError","_Error","_super","message","_this","RuntimeError","_Error2","_super2","_this2","_Error3","ValueError","_super3","_this3","_Error4","NotImplementedError","_super4","_this4","AssertionError","_Error5","_super5","_this5","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","isArray","minLen","_arrayLikeToArray","n","name","test","_unsupportedIterableToArray","F","done","_e","f","err","normalCompletion","didErr","next","_e2","return","arr","len","arr2","pyListRepeat","numValues","newArray","_newArray","fill","assert","val","count","array","refernce","_step","counter","_iterator","singletonOrArray","xs","toList","toSnakeCase","insecure","replace","toLowerCase","toCamelCase","identifier","m","p1","toUpperCase","_GLOBAL_CUSTOM_OBJECTS","serializeKerasObject","instance","dict","getClassName","getConfig","convertNDArrayScalarsInConfig","config","configItem","_fields","keys","field","deserializeKerasObject","moduleObjects","customObjects","printableModuleName","fastWeightInit","functionName","JSON","stringify","cls","fromConfig","className","_customObjects$classN","_GLOBAL_CUSTOM_OBJECT","_moduleObjects$classN","customObjectsCombined","_Object$keys","key","_Object$keys2","_key","nestedConfig","backupCustomObjects","assign","_i4","_Object$keys3","_key2","returnObj","_backupCustomObjects","_i5","_Object$keys4","_key3","_returnObj","reverseNumberCompare","numberCompare","unique","_step3","_iterator3","isObjectEmpty","obj","hasOwnProperty","checkStringTypeUnionValue","label","checkArrayTypeAndLength","expectedType","minLength","maxLength","Infinity","every","assertPositiveInteger","util","v","Number","isInteger","formatAsFriendlyString","join","mapActivationToFusedKernel","activationName","calcL2Norms","w","tidy","Constraint","_serialization$Serial","serialization","_Constraint","MaxNorm","args","defaultMaxValue","defaultAxis","maxValue","norms","desired","_Constraint2","UnitNorm","_Constraint3","NonNeg","_Constraint4","MinMaxNorm","defaultMinValue","defaultRate","minValue","rate","_this6","CONSTRAINT_IDENTIFIER_REGISTRY_SYMBOL_MAP","serializeConstraint","constraint","deserializeConstraint","classNameMap","getConstraint","VALID_DATA_FORMAT_VALUES","VALID_INTERPOLATION_FORMAT_VALUES","VALID_PADDING_MODE_VALUES","VALID_POOL_MODE_VALUES","VALID_BIDIRECTIONAL_MERGE_MODES","nameMap","checkPaddingMode","checkPoolMode","_nameScopeStack","nameScope","pop","getScopedTensorName","tensorName","isValidTensorName","getUniqueTensorName","scopedName","index","tensorNameRegex","RegExp","match","arrayProd","end","prod","toArray1D","Float32Array","tensor1d","min","dataSync","max","range","asType","expandDims","splice","reshape","flatten","newShape","sliceAlongFirstAxis","sliceAlongLastAxis","sliceAlongAxis","concatenate","tensors","concatAlongFirstAxis","randomNormal","stddev","seed","dot","activation","reshapeBias","aFirstDims","aLastDim","bShape","bLastDim","_ySecondLastDim","yOtherDims","reference","toInt","xRank","biasShape","biasAdd","elu","dropout","level","noiseShape","inTrainPhase","alt","training","VALID_FAN_MODE_VALUES","VALID_DISTRIBUTION_VALUES","Initializer","_Initializer","Zeros","_Initializer2","Ones","_Initializer3","Constant","scalar","_Initializer4","RandomUniform","DEFAULT_MINVAL","DEFAULT_MAXVAL","minval","maxval","randomUniform","_Initializer5","RandomNormal","_super6","DEFAULT_MEAN","DEFAULT_STDDEV","_Initializer6","TruncatedNormal","_super7","truncatedNormal","_Initializer7","Identity","_super8","gain","_this7","eye","_Initializer8","VarianceScaling","_super9","_this8","mode","distribution","checkDistribution","fans","fanIn","fanOut","receptiveFieldSize","_receptiveFieldSize","shapeProd","computeFans","limit","_VarianceScaling","GlorotUniform","_super10","_VarianceScaling2","GlorotNormal","_super11","_VarianceScaling3","HeNormal","_super12","_VarianceScaling4","HeUniform","_super13","_VarianceScaling5","LeCunNormal","_super14","_VarianceScaling6","LeCunUniform","_super15","_Initializer9","Orthogonal","_super16","_this9","DEFAULT_GAIN","_this10","console","warn","q","linalg","INITIALIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP","deserializeInitializer","serializeInitializer","initializer","getInitializer","_nextUniqueTensorId","getNextUniqueTensorId","_uidPrefixes","getUid","prefix","isArrayOfShapes","normalizeShapeList","getExactlyOneTensor","getExactlyOneShape","countParamsInWeights","weights","weight","reduce","DEFAULT_VARIABLE_NAME_PREFIX","LayerVariable","trainable","id","originalName","trainable_","assertNotDisposed","newVal","checkShapesMatch","dispose","isDisposed","batchGetValue","read","batchSetValue","variablesAndValues","variableAndValue","write","InputSpec","ndim","maxNDim","minNDim","SymbolicTensor","sourceLayer","callArgs","outputTensorIndex","_nextNodeID","Node","outboundLayer","inboundLayers","nodeIndices","tensorIndices","inputTensors","outputTensors","inputMasks","outputMasks","inputShapes","outputShapes","layer","outboundNodes","inboundNodes","_step2","inboundNames","_iterator2","_nextLayerID","Layer","_callHook","_addedWeightNames","_stateful","activityRegularizer","inputSpec","supportsMasking","_trainableWeights","_nonTrainableWeights","_losses","_updates","_built","batchInputShape","batchSize","inputDType","initialWeights","_refCount","fastWeightInitDuringBuild","nodeIndex","attrName","getNodeAtIndex","losses","lossFn","built","trainableWeights","nonTrainableWeights","stateful","inputIndex","spec","xShape","xShapeAtAxis","specDim","kwargs","callHook","inputsList","allAreSymbolic","_step4","noneAreSymbolic","_iterator4","assertInputCompatibility","_step5","_iterator5","xElem","build","setWeights","_step6","outputListCopy","_iterator6","_output","_step9","_iterator9","collectInputShape","computeOutputShape","outputDType","warnOnIncompatibleInputShape","addInboundNode","dimMismatch","dimension","_step7","allOutputShapes","_iterator7","node","shapeString","trainableOnly","params","weightValueTuples","paramValues","pv","regularizer","initValue","addLoss","_this$losses","maskElement","inputTensorList","_step8","_iterator8","tensorIndex","numDisposedVariables","disposeWeights","refCountAfterDispose","getSourceInputs","tensor","sourceTensors","_step10","_iterator10","InputLayer","_Layer","sparse","inputTensor","Input","batchShape","ModelLoggingVerbosity","resolveScalarsInLogs","_resolveScalarsInLogs","_callee","logs","promises","scalarsToDispose","valueScalar","_context","prev","abrupt","data","Promise","all","sent","disposeTensorsInLogs","BaseCallback","validationData","_onTrainEnd","_onTrainBegin","_onBatchEnd","_onBatchBegin","_onEpochEnd","_onEpochBegin","epoch","_x2","_callee2","_context2","_x3","_x4","_callee3","batch","_context3","_x5","_x6","_callee4","_context4","_x7","_x8","_callee5","_context5","_x9","_callee6","_context6","_x10","model","CallbackList","callbacks","queueLength","_onTrainEnd2","_onTrainBegin2","_onBatchEnd2","_onBatchBegin2","_onEpochEnd2","_onEpochBegin2","callback","setParams","setModel","_callee7","_context7","onEpochBegin","t0","finish","_x11","_x12","_callee8","_context8","onEpochEnd","_x13","_x14","_callee9","_context9","onBatchBegin","_x15","_x16","_callee10","_context10","onBatchEnd","_x17","_x18","_callee11","_context11","onTrainBegin","_x19","_callee12","_context12","onTrainEnd","_x20","BaseLogger","_BaseCallback","_onEpochEnd3","_onBatchEnd3","_onEpochBegin3","_callee13","_context13","seen","totals","_x21","_callee14","_loop","_context14","oldTotalsToDispose","total","_x22","_x23","_callee15","_loop2","_context15","keep","_x24","_x25","History","_BaseCallback2","_syncData","_onEpochEnd4","_onTrainBegin3","_callee16","_context16","history","_x26","_callee17","_context17","_x27","_x28","_callee18","valueArray","_context18","CustomCallback","_BaseCallback3","_onTrainEnd3","_onTrainBegin4","_onBatchEnd4","_onBatchBegin3","_onEpochEnd5","_onEpochBegin4","_maybeWait","yieldEvery","waitMs","lastResult","lastTime","currentEpoch","onYield","maybeWait","bind","now","trainBegin","trainEnd","epochBegin","epochEnd","batchBegin","batchEnd","yield","_callee19","ps","_context19","nextFrame","_x29","_x30","_x31","_callee20","_context20","_x32","_x33","_callee21","_context21","_x34","_x35","_callee22","_context22","_x36","_x37","_callee23","_context23","_x38","_x39","_callee24","_context24","_x40","_callee25","_context25","_x41","standardizeCallbacks","callbackConfig","CallbackConstructorRegistry","verbosityLevel","callbackConstructor","checkForDuplicate","constructors","levelName","ctor","configureCallbacks","verbose","epochs","initialEpoch","numTrainSamples","stepsPerEpoch","doValidation","callbackMetrics","actualCallbacks","createCallbacks","callbackList","samples","steps","metrics","l2Normalize","squareSum","epsilonTensor","norm","meanSquaredError","yTrue","yPred","meanAbsoluteError","meanAbsolutePercentageError","diff","clippedTrue","MAX_VALUE","absResult","meanSquaredLogarithmicError","clippedPred","firstLog","secondLog","categoricalCrossentropy","target","fromLogits","outputSum","toFloat","sparseCategoricalCrossentropy","flatTarget","binaryCrossentropy","labels","reluLogits","relu","negAbsLogits","abs","log1p","sigmoidCrossEntropyWithLogits","kullbackLeiblerDivergence","cosineProximity","trueNormalized","predNormalized","trueXPred","lossesMap","squaredHinge","maxResult","hinge","categoricalHinge","pos","logcosh","log2","predictionDiff","logcoshResult","poisson","logPred","identifierOrFn","errMsg","includes","binaryAccuracy","threshold","yPredThresholded","categoricalAccuracy","truePositives","sparseCategoricalAccuracy","squeeze","argMax","metricsMap","precision","tp","fp","falsePositives","denominator","mse","MSE","mae","MAE","mape","MAPE","cosine","getLossOrMetricName","fnName","MAX_USER_DEFINED_METADATA_SERIALIZED_LENGTH","checkUserDefinedMetadata","userDefinedMetadata","modelName","checkSize","plainObjectCheck","_keys","xType","printSummary","lineLength","positions","relevantNodes","printFn","sequentialLike","isModelSequentialLike","toDisplay","depth","nodesByDepth","_relevantNodes","repeat","printRow","layers","printLayerSummary","printLayerSummaryWithConnections","checkTrainableWeightsConsistency","trainableCount","countTrainableParams","nonTrainableCount","collectedTrainableWeights","nodes","_nodesByDepth","depthNodes","flag","fields","line","countParams","connections","inboundLayer","inboundLayerIndex","inboundTensorIndex","firstConnection","isArrayItemInputOrOutputName","pythonicConfig","tsArray","arrayLength","item","tsDict","pythonicKey","pythonicValue","tsKey","convertTsToPythonic","tsConfig","pyArray","pyDict","tsValue","pyKey","version","FeedDict","feeds","id2Value","id2Mask","name2Id","feed","assertFeedCompatibility","cachedSorted","cachedRecipientCounts","fetches","feedDict","probe","arrayFetches","fetchArray","outputNames","finalOutputs","feedNames","names","outputName","getValue","maxNumTensors","minNumTensors","sorted","recipientCounts","fetchAndFeedKey","finalSorted","finalRecipientMap","getTopologicalSortAndRecipientCountsForOneFetch","recipientMap","visited","Set","_getTopologicalSortAn","symbolicTensor","recipient","recipientMap2Counts","getTopologicalSortAndRecipientCounts","internalFeedDict","numTensors","memory","symbolic","srcLayer","inputValues","tensorsToDispose","maskExists","getMask","hasKey","outputMask","computeMask","layerOutputs","getNodeOutputs","outputSymbolicTensors","disposeMasks","fetch","stack","marks","top","topIsMarked","getOutputAt","standardizeSampleOrClassWeights","xWeight","weightType","numOutputs","standardizeClassWeights","classWeight","standardizeWeights","_standardizeWeights","sampleWeight","sampleWeightMode","yClasses","yClassIndices","classSampleWeight","t1","classIndex","computeWeightedLoss","sampleWeights","standardizeDataIteratorOutput","iteratorOut","ys","iteratorOutObj","flattenedXs","flattenTensorOrArrayOrMap","inputNames","flattenedYs","outputs","xIndex","yIndex","inputOrOutput","standardizeTensorValidationData","_fitDataset","dataset","hasBatchesPerEpoch","valXs","valYs","trainFunction","outLabels","_configureCallbacks","dataIterator","epochLogs","stepsDone","batchIndex","_standardizeDataItera","batchLogs","standardClassWeights","ins","outs","valOuts","batchesPerEpoch","optimizer","isTraining","isDatasetObject","validationBatches","makeTrainFunction","getDedupedMetricsNames","getStepsPerEpoch","stopTraining_","t2","evaluateDataset","batches","t3","evaluate","validationBatchSize","metricsNames","syncData","isFinite","isLazyIteratorObject","_evaluateDataset","hasBatches","numExamples","_loop3","oldScalar","testFunction","_standardizeDataItera2","xsAndYs","batchOuts","_loop4","batchOut","delegateYield","checkBatchSize","sliceArrays","sliceArraysByIndices","makeBatches","batchStart","fitLoop","_fitLoop","valF","valIns","shuffle","validationSteps","indexArray","checkNumSamples","epochIndexArray1D","batchIds","insBatch","testLoop","_label","_out","fitTensors","_fitTensors","targets","inputValX","inputValY","valX","valY","checkBatchAxis","standardizedOuts","_checkBatchAxis","valStandardized","splitAt","originalBatchSize","valFunction","_args5","standardizeUserData","validationSplit","makeTestFunction","disposeNewTensors","ensureTensorsRank2OrHigher","Tensor","refTensors","oldTensorIds","oldTensor","_name","isDataArray","isDataDict","isDataTensor","standardizeInputData","exceptionPrefix","gotUnexpectedData","refDim","checkArrayLengths","setX","sort","setY","checkLossAndTargetCompatibility","lossFns","keyLosses","loss","slicedYShape","slicedShape","targetDim","outDim","checkInputData","_Container","LayersModel","_save","_trainOnBatch","_fitDataset2","_fit","_standardizeUserData","_evaluateDataset2","optimizer_","optimizerMap","train","isOptimizerOwned","Optimizer","lossFunctions","theLosses","lossFunction","feedOutputNames","feedOutputShapes","feedLossFns","internalOutputShapes","_name2","skipTargetIndices","metricsTensors","weightedLoss","nestedMetrics","wrappedMetrics","outputMetrics","collectMetrics","appendMetric","outputIndex","metricName","metricTensor","accFn","weightedMetricFn","metric","suffix","metricFn","metricResult","handleMetrics","standardizeUserDataXY","testOuts","numSamples","stepsName","outputsIsArray","retrieveSymbolicTensors","tensorValue","executeOutputs","symbolicTensorNames","outputsRemaining","layerOutputNames","remainingNames","outsBatches","xsRank2OrHigher","feedInputShapes","predictLoop","feedInputNames","_this$standardizeUser","_this$standardizeUser2","standardXs","standardYs","standardSampleWeights","classWeights","_args2","dedupedOutLabels","newLabel","dupIndex","lossValues","metricsValues","variables","param","minimize","totalLoss","meanLoss","_i6","weightedMetric","calculateLosses","regularizerLoss","valOutputs","_i7","_i8","meanMetric","_args3","standardizeOut","namedWeights","weightValues","getWeights","numTensorsBeforeOptmizerDisposal","lossNames","_i9","_outputNames","metricsIdentifiers","getLossIdentifiers","getMetricIdentifiers","optimizer_config","class_name","trainingConfig","weighted_metrics","loss_weights","sample_weight_mode","lossEntry","compile","handlerOrURL","handlers","weightDataAndSpecs","modelConfig","modelArtifacts","_weightDataAndSpecs$s","_yield$io$encodeWeigh","optimizerWeightData","optimizerWeightSpecs","io","save","getNamedWeights","toJSON","modelTopology","format","generatedBy","convertedBy","includeOptimizer","getTrainingConfig","encodeWeights","specs","weightData","weightSpecs","Container","containerNodes","inputLayers","inputLayersNodeIndices","inputLayersTensorIndices","outputLayers","outputLayersNodeIndices","outputLayersTensorIndices","internalContainerRefs","_layer2","_layer3","_nodeIndex2","_tensorIndex2","_layer4","internalInputShapes","nodesDepths","nodeIDToNode","layersDepths","layerIDToLayer","layerIndices","nodesInDecreasingDepth","buildMapOfGraph","finishedNodes","nodesInProgress","nodeKey","numInboundLayers","_depth2","previousDepth","_nodeIndex3","inboundNode","_previousDepth","nodeID","layersByDepth","layerID","_depth","depthKeys","parseInt","layersForDepth","aIndex","bIndex","_layer5","computableTensors","layersWithCompleteInput","_node","_layer6","_step11","_iterator11","_step12","_iterator12","allNames","numOccurrences","_step13","_iterator13","_step14","_iterator14","container","_step15","_iterator15","_step16","_iterator16","_layer7","_step17","_iterator17","_step18","strict","nameToWeight","totalWeightsCount","_iterator18","_step19","_iterator19","validatedName","tokens","split","shortenNameArray","unsetNames","theConfig","unused","returnString","updatedConfig","masks","runInternalGraph","layersToOutputShapes","_inputShape","_step20","_iterator20","_step21","_iterator21","_layer8","_inputShapes","_nodeIndex4","_inputShape2","_outputShapes","outputShapeKeys","_layer9","_nodeIndex5","_tensorIndex3","_shapeKey3","tensorMap","_step22","_iterator22","_step24","_iterator24","_step25","referenceInputTensors","referenceOutputTensors","computedData","_iterator25","computedTensors","computedMasks","_outputTensors","_outputMasks","_computedData$","computedTensor","computedMask","_y","_mask","_step23","_iterator23","_tensorMap$_x7$id","_mask2","keptNodes","_step26","nodeConversionMap","_iterator26","originalNodeIndex","_step27","_iterator27","_step28","_iterator28","_step29","buildNodeConversionMap","layerConfigs","_iterator29","_layer11","layerClassName","layerConfig","filteredInboundNodes","_nodeKey2","nodeData","_nodeIndex7","_tensorIndex5","_newNodeIndex2","modelInputs","newNodeIndex","modelOutputs","_layer10","_nodeIndex6","_nodeKey","_newNodeIndex","_tensorIndex4","_step30","_iterator30","resetStates","createdLayers","unprocessedNodes","addUnprocessedNode","processNode","_step31","_iterator31","inputData","inboundLayerName","inboundNodeIndex","processLayer","layerData","layerName","setFastWeightInitDuringBuild","_step32","layersFromConfig","_iterator32","_layerData","_step33","_iterator33","currentUnprocessedNodesForLayer","_step34","_iterator34","_step35","inputLayersFromConfig","_iterator35","_layerData2","_layer12","layerOutputTensors","_step36","outputLayersFromConfig","_iterator36","_layerData3","_layerName","_nodeIndex8","_tensorIndex6","_layer13","_layerOutputTensors","Functional","_LayersModel","Sequential","some","modelLayer","isLayerModelInstance","checkShape","outputTensor","lastLayerIndex","predict","predictOnBatch","fit","fitDataset","trainOnBatch","stopTraining","configArray","extraModelConfig","conf","_customObjects","sequential","Activation","Elu","_Activation","Selu","_Activation2","Relu","_Activation3","Relu6","_Activation4","Linear","_Activation5","Sigmoid","_Activation6","HardSigmoid","_Activation7","Softplus","_Activation8","Softsign","_Activation9","Tanh","_Activation10","_Activation11","Softmax","LogSoftmax","_Activation12","Swish","_Activation13","serializeActivation","deserializeActivation","getActivation","_config","assertObjectArgs","Regularizer","L1L2","_Regularizer","l1","l2","hasL1","hasL2","regularization","asScalar","REGULARIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP","serializeRegularizer","deserializeRegularizer","getRegularizer","ReLU","clipByValue","baseConfig","LeakyReLU","_Layer2","DEFAULT_ALPHA","leakyRelu","PReLU","_Layer3","DEFAULT_ALPHA_INITIALIZER","alphaInitializer","alphaRegularizer","alphaConstraint","sharedAxes","paramShape","addWeight","prelu","ELU","_Layer4","ThresholdedReLU","_Layer5","DEFAULT_THETA","theta","_Layer6","DEFAULT_AXIS","normalizeArray","singleValue","convOutputLength","inputLength","padding","stride","dilation","outputLength","dilatedFilterSize","deconvLength","dimSize","strideSize","kernelSize","preprocessConv2DInput","preprocessConv3DInput","conv1dWithBias","kernel","dilationRate","conv2dWithBiasActivation","conv3dWithBias","BaseConv","DEFAULT_KERNEL_INITIALIZER","DEFAULT_BIAS_INITIALIZER","verifyArgs","useBias","biasInitializer","biasConstraint","biasRegularizer","Conv","_BaseConv","filters","kernelInitializer","kernelConstraint","kernelRegularizer","channelAxis","inputDim","kernelShape","biasValue","fusedActivationName","newSpace","space","newDim","Conv2D","_Conv","Conv3D","_Conv2","Conv2DTranspose","_Conv2D","hAxis","wAxis","height","width","kernelH","kernelW","strideH","strideW","heightAxis","widthAxis","Conv3DTranspose","_Conv3D","dAxis","kernelD","strideD","depthAxis","SeparableConv","_Conv3","DEFAULT_DEPTHWISE_INITIALIZER","DEFAULT_POINTWISE_INITIALIZER","depthwiseKernel","pointwiseKernel","depthMultiplier","depthwiseInitializer","depthwiseRegularizer","depthwiseConstraint","pointwiseInitializer","pointwiseRegularizer","pointwiseConstraint","depthwiseKernelShape","pointwiseKernelShape","_this11","SeparableConv2D","_SeparableConv","Conv1D","_Conv4","_this12","Cropping2D","_this13","cropping","_this14","hSliced","_hSliced","UpSampling2D","_this15","DEFAULT_SIZE","interpolation","_height","_width","_this16","resized","resizeNearestNeighbor","resizeBilinear","_height2","_width2","DepthwiseConv2D","depthwiseConv2d","rows","cols","outFilters","outRows","outCols","standardizeArgs","initialState","constants","numConstants","toListOrNull","rnn","stepFunction","initialStates","goBackwards","unroll","needPerStepOutputs","lastOutput","perStepMasks","perStepOutputs","states","timeSteps","perStepInputs","currentInput","stepOutputs","maskedOutputs","stepMask","negStepMask","newStates","state","RNN","cell","StackedRNNCells","cells","stateSize","returnSequences","returnState","stateSpec","states_","keptStates","outputDim","stateShape","stateMask","numStates","stepInputShape","expectedShape","standardized","additionalInputs","additionalSpecs","fullInput","fullInputSpec","originalInputSpec","getInitialState","cellCallKwargs","rnnOutputs","cellConfig","RNNCell","SimpleRNNCell","_RNNCell","DEFAULT_ACTIVATION","DEFAULT_RECURRENT_INITIALIZER","units","recurrentInitializer","recurrentRegularizer","recurrentConstraint","recurrentDropout","dropoutMask","recurrentDropoutMask","recurrentKernel","prevOutput","h","generateDropoutMask","dpMask","recDpMask","SimpleRNN","_RNN","GRUCell","_RNNCell2","DEFAULT_RECURRENT_ACTIVATION","resetAfter","recurrentActivation","implementation","hTMinus1","z","r","hh","matrixX","recurrentKernelValue","_tfc$split","_tfc$split2","rk1","rk2","matrixInner","_tfc$split3","_tfc$split4","xZ","xR","xH","_tfc$split5","_tfc$split6","recurrentZ","recurrentR","recurrentH","GRU","_RNN2","LSTMCell","_RNNCell3","unitForgetBias","capturedBiasInit","capturedUnits","CustomInit","bI","bF","bCAndH","cTMinus1","c","_tfc$split7","_tfc$split8","z0","z1","z2","z3","LSTM","_RNN3","_RNNCell4","nestedStates","_cell","callInputs","newNestedStates","_states","cellStates","_cell2","tuples","numParams","inputWeights","_args$training","_args$count","droppedInputs","createMask","__rest","getOwnPropertySymbols","propertyIsEnumerable","ConvRNN2D","computeSingleOutputShape","getStates","_this$cell","isChannelsFirst","hOut","wOut","ConvLSTM2DCell","_LSTMCell","recurrentKernelShape","init","applyDropout","xI","xF","xC","xO","recDropoutMask","hI","hF","hC","hO","kernelI","kernelF","kernelC","kernelO","_ref","_ref2","biasI","biasF","biasC","biasO","inputConv","recKernelI","recKernelF","recKernelC","recKernelO","recurrentConv","ConvLSTM2D","_ConvRNN2D","Dropout","invokeCallHook","getNoiseShape","SpatialDropout1D","_Dropout","Dense","inputLastDim","Flatten","RepeatVector","Reshape","targetShape","isUnknown","errorMsg","finalShape","known","unknown","originalSize","anyUnknownDims","fixUnknownDimension","Permute","_Layer7","expectedSortedIndices","dimsIncludingBatch","Masking","_Layer8","maskValue","any","notEqual","booleanMask","Embedding","embeddings","DEFAULT_EMBEDDINGS_INITIALIZER","embeddingsInitializer","embeddingsRegularizer","embeddingsConstraint","maskZero","zerosLike","inLens","s1","s2","as1D","Merge","shape1","shape2","computeElementwiseOpOutputShape","batchSizes","_shape","allRanks","reshapeRequired","reshapedInputs","inputDims","xNDim","mergeFunction","transposed","_xNDim","_batchSize","_newShape","xTransposed","_dims","yNDim","yShape","_shape2","Add","_Merge","Multiply","_Merge2","Average","_Merge3","Maximum","_Merge4","Minimum","_Merge5","Concatenate","_Merge6","allNoneShape","shapeSet","shapeWithoutConcatAxis","exists","allNullMasks","concatenatedMasks","interpretAxis","Dot","_Merge7","normalize","interpretAxes","x1","x2","axesArray","diffShape","_diffShape","adjX","adjY","matMul","idx","squeezeAxes","batchDot","GaussianNoise","GaussianDropout","AlphaDropout","_getNoiseShape","alphaP","keptIdx","greaterEqual","batchNormalization","gamma","regularNormalizeBatchInTraining","meanAndVariance","broadcastNormalizeBatchInTraining","broadcastMean","broadcastVariance","broadcastGamma","broadcastBeta","BatchNormalization","momentum","center","betaInitializer","gammaInitializer","movingMeanInitializer","movingVarianceInitializer","betaConstraint","gammaConstraint","betaRegularizer","gammaRegularizer","movingMean","movingVariance","broadcastShape","sortedReductionAxes","needsBroadcasting","broadcastMovingMean","broadcastMovingVariance","normalizeInference","_normalizeBatchInTrai","normalizeBatchInTraining","_normalizeBatchInTrai2","normedTraining","doMovingAverage","variable","decay","origValue","updateDelta","LayerNormalization","nDims","_moments","moments","broadcast","momentsTiling","scaleOffsetTiling","ZeroPadding2D","heightPadding","widthPadding","pattern","pool2d","poolSize","poolMode","paddingString","pool3d","Pooling1D","poolingFunction","MaxPooling1D","_Pooling1D","AveragePooling1D","_Pooling1D2","Pooling2D","MaxPooling2D","_Pooling2D","AveragePooling2D","_Pooling2D2","Pooling3D","depths","MaxPooling3D","_Pooling3D","AveragePooling3D","_Pooling3D2","GlobalPooling1D","GlobalAveragePooling1D","_GlobalPooling1D","GlobalMaxPooling1D","_GlobalPooling1D2","GlobalPooling2D","GlobalAveragePooling2D","_GlobalPooling2D","GlobalMaxPooling2D","_GlobalPooling2D2","newConfig","TimeDistributed","_Wrapper","childInputShape","childOutputShape","timesteps","Bidirectional","_Wrapper2","forwDict","forwardLayer","backDict","backwardLayer","mergeMode","_trainable","numWeights","numeightsOver2","layerShapes","stateSpecs","isSymbolicTensor","_additionalInputs","yRev","forwardState","backwardState","rnnLayer","inputLayer","reLU","leakyReLU","thresholdedReLU","conv2dTranspose","conv3dTranspose","separableConv2d","cropping2D","upSampling2d","dense","spatialDropout1d","repeatVector","permute","embedding","layerNormalization","zeroPadding2d","averagePooling1d","avgPool1d","avgPooling1d","averagePooling2d","avgPool2d","avgPooling2d","averagePooling3d","avgPool3d","avgPooling3d","globalAveragePooling1d","globalAveragePooling2d","globalMaxPooling1d","globalMaxPooling2d","maxPooling1d","maxPooling2d","maxPooling3d","gru","gruCell","lstm","lstmCell","simpleRNN","simpleRNNCell","convLstm2d","convLstm2dCell","stackedRNNCells","bidirectional","timeDistributed","globalMaxPool1d","globalMaxPool2d","maxPool1d","maxPool2d","gaussianNoise","gaussianDropout","alphaDropout","masking","l1l2","DataType","SaverDef","CheckpointFormatVersion","deepMapInternal","mapFn","containedIn","recurse","isIterable","mappedIterable","child","childResult","delete","deepZip","zipFn","zipToList","deepZipInternal","deepMapAndAwaitAll","_deepMapAndAwaitAll","_Array$from","mappedValue","ArrayBuffer","isView","deepClone","deepMap","cloneIfTensor","RingBuffer","capacity","RangeError","doubledCapacity","isFull","wrap","isEmpty","relativeIndex","GrowingRingBuffer","_RingBuffer","INITIAL_CAPACITY","expand","newCapacity","newData","iteratorFromItems","items","ArrayIterator","iteratorFromFunction","func","FunctionCallIterator","iteratorFromConcatenated","baseIterators","baseErrorHandler","ChainedIterator","iteratorFromZipped","iterators","mismatchMode","ZipMismatchMode","FAIL","ZipIterator","LazyIterator","_serialForEach","_forEachAsync","_resolveWhile","_resolveFully","_toArrayForTest","_toArray","stream","prefetch","predicate","shouldContinue","handler","ErrorHandlingLazyIterator","FilterIterator","transform","MapIterator","AsyncMapIterator","serial","FlatmapIterator","resolveFully","serialMapAsync","resolveWhile","smallLastBatch","RowMajorBatchIterator","rowBatches","rowMajorBatch","TakeIterator","SkipIterator","bufferSize","PrefetchIterator","windowSize","ShuffleIterator","SerialIterator","_LazyIterator","_next","trav","_LazyIterator2","_next2","nextFn","_LazyIterator3","_serialNext","_next3","upstream","lastRead","resolve","summary","then","serialNext","_LazyIterator4","_serialNext2","_next4","maxCount","skipped","_LazyIterator5","_next5","_LazyIterator6","_serialNext3","_next6","enableSmallLastBatch","_LazyIterator7","_serialNext4","_next7","_LazyIterator8","_next8","mapped","_LazyIterator9","_serialNext5","_next9","_LazyIterator10","_next10","OneToManyIterator","_LazyIterator11","_serialNext6","_next11","outputQueue","_this17","pump","shift","_OneToManyIterator","_pump","_this18","mappedArray","pushAll","_LazyIterator12","_readFromChain","_next12","_this19","moreIterators","readFromChain","_callee26","iteratorResult","itemResult","_context26","handleErrors","_LazyIterator13","_next13","_nextState","_this20","currentPromise","_callee27","afterState","numIterators","iteratorsDone","getNext","_context27","SHORTEST","LONGEST","_callee28","_context28","nextState","_LazyIterator14","_this21","buffer","refill","_PrefetchIterator","_serialNext7","_next14","_this22","upstreamExhausted","random","seedrandom","alea","_callee29","_this23","_context29","randomInt","_callee30","chosenIndex","_context30","chooseIndex","shuffleExcise","Dataset","ceil","datasetFromIteratorFn","columnMajorBatch","deepBatchConcat","forEachAsync","mapAsync","iteratorIterator","take","skip","reshuffleEachIteration","seed2","int32","toArray","toArrayForTest","iteratorFn","_Dataset","_class","zip","datasets","ds","streams","canTensorify","batchConcat","MAX_BUFFER_SIZE","TextLineDataset","inputIterator","utf8Iterator","lineIterator","decodeUTF8","endsWith","CODE_QUOTE","STATE_OUT","STATE_FIELD","STATE_QUOTE","STATE_QUOTE_AFTER_QUOTE","STATE_WITHIN_QUOTE_IN_QUOTE","CSVDataset","_maybeReadHeaderLine","_setColumnNames","_columnNames","csvConfig","hasHeader","fullColumnNames","columnNamesValidated","columnConfigs","configuredColumnsOnly","delimiter","delimWhitespace","columnNames","setColumnNames","columnNamesFromFile","counts","duplicateNames","maybeReadHeaderLine","countAcc","iter","firstElement","firstLine","headers","parseRow","lines","makeDataElement","features","parsedValue","default","required","isLabel","valueAsNum","isNaN","getBoolean","validateElementCount","readOffset","readLength","currentState","charAt","substring","MicrophoneIterator","_create","_getAudioData","_capture","_start","microphoneConfig","isClosed","fftSize","fftSizeLog2","numFrames","numFramesPerSpectrogram","sampleRateHz","columnTruncateLength","audioTrackConstraints","smoothingTimeConstant","includeSpectrogram","includeWaveform","ctxConstructor","streamSource","navigator","mediaDevices","getUserMedia","audio","video","window","AudioContext","webkitAudioContext","audioContext","sampleRate","createMediaStreamSource","analyser","createAnalyser","connect","freqData","timeData","spectrogramTensor","waveformTensor","audioDataQueue","getAudioData","flattenQueue","freqDataQueue","getTensorFromAudioDataArray","timeDataQueue","currentFrames","intervalID","setInterval","getFloatFrequencyData","getFloatTimeDomainData","clearInterval","disconnect","close","getTracks","queue","frameSize","vals","microphoneIterator","env","WebcamIterator","webcamVideoElement","webcamConfig","resize","needToResize","cropSize","resizeHeight","resizeWidth","cropBoxInd","centerCrop","widthCroppingRatio","heightCroppingRatio","widthCropStart","heightCropStart","widthCropEnd","heightCropEnd","cropBox","tensor2d","facingMode","deviceId","srcObject","error","src","URL","createObjectURL","play","onloadedmetadata","img","browser","cropAndResizeFrame","resizedImage","expandedImage","image","track","webcamIterator","_args4","document","createElement","DataSource","StringIterator","separator","SplitIterator","_StringIterator","impl","SplitIteratorImpl","carryover","chunkResult","ByteChunkIterator","Utf8Iterator","Utf8IteratorImpl","decoder","TextDecoder","StringDecoder","chunk","text","decode","Buffer","FileChunkIterator","_ByteChunkIterator","file","options","Uint8Array","File","Blob","chunkSize","byteLength","reject","fileReader","FileReader","onload","event","onabort","onerror","type","readAsArrayBuffer","urlChunkIterator","_urlChunkIterator","url","urlString","requestInit","response","uint8Array","_args","getRequestInitFromRequest","ok","arrayBuffer","statusText","request","method","body","credentials","cache","redirect","referrer","integrity","isLocalPath","source","substr","FileDataSource","_DataSource","fs","readFileSync","URLDataSource","fileOptions","csv","generator","gen","webcam","_webcam","microphone","_microphone","assertNotComplex","opName","whereImpl","kernel_impls","MathBackendCPU","_KernelBackend","_time","_read","blockSize","firstUse","DataStorage","engine","nextDataId","backend_util","dataId","refCount","outId","encodedValues","numDataIds","readSync","_this$data$get","complexTensorInfos","realValues","real","imagValues","imag","decodedData","makeTensorFromDataId","force","_this$data$get2","disposeData","tensorInfo","kernelMs","unreliable","reasons","condVals","KernelBackend","unaryKernelFunc","cpuBackend","xSize","$dtype","newValues","makeTensorInfo","unaryKernelFuncFromImpl","unaryImpl","registerBackend","xi","eluConfig","backendName","kernelFunc","incRef","identityConfig","xVals","outVals","leakyReluConfig","LeakyRelu","createSimpleBinaryKernelImpl","aShape","aVals","bVals","resultRank","resultStrides","resultSize","aRank","bRank","aStrides","bStrides","aBroadcastDims","bBroadcastDims","loc","aLoc","bLoc","preluImpl","xValue","aValue","_preluImpl","_preluImpl2","resultData","resultShape","preluConfig","Prelu","reluConfig","relu6","relu6Config","applyActivation","preluActivationWeights","leakyreluAlpha","complex","realVals","imagVals","complexInfo","complexConfig","Complex","realVal","realConfig","Real","zerosTensorInfo","floatX","disposeIntermediateTensorInfo","realPart","_result","_result2","resultValues","Int32Array","zero","_createSimpleBinaryKe","_createSimpleBinaryKe2","castConfig","Cast","binaryKernelFunc","simpleImpl","complexImpl","_simpleImpl","_simpleImpl2","$aComplex","$aComplexVals","aReal","aImag","aRealVals","aImagVals","$bComplex","$bComplexVals","bReal","bImag","bRealVals","bImagVals","_complexImpl","_complexImpl2","resultRealData","resultImagData","resultReal","resultImag","_simpleImpl3","_simpleImpl4","_resultShape","createComplexBinaryKernelImpl","resultRealVals","resultImagVals","aIdx","bIdx","opResult","addImpl","addComplexImpl","addConfig","$shape","$xSize","xData","reshapeConfig","batchMatMul","innerShapeA","innerShapeB","outerShapeA","outerShapeB","outerDimsA","outerDimsB","batchDimA","batchDimB","batchDimsCompatible","b3dShape","a3d","b3d","sharedDim","leftDim","rightDim","batchDim","a3dValues","b3dValues","a3dStrides","b3dStrides","aBatch","aOuterStep","aInnerStep","_ref3","_ref4","bInnerStep","bOuterStep","bBatch","resVals","bi","i0","j0","k0","iBlock","jBlock","kBlock","batchOffsetA","batchOffsetB","batchMatMulConfig","BatchMatMul","_fusedMatMulConfig","_FusedMatMul","current","addRes","activationRes","intermediates","_intermediates","simpleAbsImpl","absConfig","Abs","makeOutput","acos","Acos","acosConfig","acosh","Acosh","acoshConfig","addNConfig","AddN","outBuf","currVals","transposeImpl","xStrides","newStrides","newLoc","transposeConfig","Transpose","allConfig","All","keepDims","permutedAxes","$x","_backend_util$compute","_backend_util$compute2","_all","reshapedResult","anyConfig","Any","anyVal","argMaxConfig","ArgMax","intermediateTensorInfos","outSize","maxIndex","argMinConfig","ArgMin","minIndex","asin","Asin","asinConfig","asinh","Asinh","asinhConfig","atan","Atan","atanConfig","atan2Impl","bValue","atan2","Atan2","atan2Config","atanh","Atanh","atanhConfig","pool","xValues","convInfo","poolType","strideHeight","strideWidth","dilationHeight","dilationWidth","effectiveFilterHeight","effectiveFilterWidth","padTop","padInfo","padLeft","left","initialValue","NEGATIVE_INFINITY","POSITIVE_INFINITY","outputVals","outputBatchStrides","outputRowStrides","outputColStrides","outputBatchOffset","inputBatchOffset","inChannels","yR","outHeight","xRCorner","xRMin","xRMax","inHeight","outputRowOffset","yC","outWidth","xCCorner","xCMin","xCMax","inWidth","minMaxValue","avgValue","xROffset","pixel","maxPoolPositions","flattenPositions","includeBatchInIndex","maxPositions","xBuf","maxPosition","wR","wC","strideDepth","dilationDepth","effectiveFilterDepth","padFront","front","outputDepthStrides","channel","yDepth","outDepth","xDepthCorner","xDepthMin","xDepthMax","inDepth","outputDepthOffset","yRow","xRowCorner","xRowMin","xRowMax","yCol","xColCorner","xColMin","xColMax","outputColOffset","xDepth","xDepthOffset","xRow","xRowOffset","xCol","avgPoolConfig","AvgPool","filterWidth","filterHeight","inShape","_strides","avgPool3DConfig","AvgPool3D","AvgPool3DGrad","filterDepth","dx","avgMultiplier","dyBuf","bufferSync","dxDepth","dxRow","dxCol","dyDepthCorner","dyRowCorner","dyColCorner","dotProd","wDepth","dyDepth","wRow","dyRow","wCol","dyCol","AvgPoolGrad","dyData","dxR","dxC","dyRCorner","dyCCorner","dyR","dyC","batchNormConfig","FusedBatchNorm","mVals","varVals","sVals","offVals","offValsLength","sValsLength","varValsLength","mValsLength","offi","mi","si","vi","sliceImpl","isContinous","slice_util","flatOffset","subarray","inBuf","outLoc","indexToLoc","inLoc","_slice_util$parseSlic","_slice_util$parseSlic2","$begin","$size","sliceConfig","Slice","batchToSpaceNDConfig","BatchToSpaceND","reshaped","permuted","reshapedPermuted","sliceBeginCoords","sliceSize","xReshaped","xTransposedReshaped","bincountImpl","weightsVals","weightsDtype","weightsShape","weightsSize","bincountReduceImpl","weightsBuf","binaryOutput","numRows","numCols","bincountConfig","Bincount","createSimpleUnaryImpl","ceilImpl","Ceil","ceilConfig","clip","ClipByValue","clipAttrs","clipConfig","complexAbsConfig","ComplexAbs","complexVals","_real","_imag","hypot","concatImpl","simplyConcat","colOffset","tIdx","row","resIdx","col","imagVal","imagConfig","Imag","$inputs","reals","imags","realConcated","imagConcated","inputs2D","innerSize","inputsValShapes","finalOutShape","outInfo","concatConfig","Concat","conv2D","$dataFormat","isChannelsLast","TensorBuffer","filterStrides","xBatchStride","xRowStride","xColStride","xChannelStride","yBatchStride","yRowStride","yColStride","yChannelStride","wVals","yVals","xOffset1","yOffset1","yOffset2","wOffset1","xOffset2","yOffset3","xOffset3","wOffset3","d1","xVal","d2","outChannels","conv2DConfig","conv2DBackpropFilterConfig","Conv2DBackpropFilter","dW","leftPad","topPad","dyVals","yRMin","yRMax","yCMin","yCMax","conv2DBackpropInputConfig","Conv2DBackpropInput","dyStrides","dxValues","dyValues","fltValues","_filterStrides","fltS0","fltS1","fltS2","dyOffset","fltOffset","conv3DConfig","yF","xFCorner","wF","wOffset2","yOffset4","xOffset4","wOffset4","conv3DBackpropFilterV2Config","Conv3DBackpropFilterV2","dw","dwValues","_dw$strides","dwS0","dwS1","dwS2","dwS3","_dyStrides","dyS0","dyS1","dyS2","dyS3","_xStrides","xS0","xS1","xS2","xS3","frontPad","yFMin","yFMax","conv3DBackpropInputV2Config","Conv3DBackpropInputV2","_dx$strides","dxS0","dxS1","dxS2","dxS3","fltS3","xFMin","Cos","cosConfig","Cosh","coshConfig","cropAndResizeConfig","CropAndResize","boxes","boxInd","extrapolationValue","_image$shape","imageHeight","imageWidth","numChannels","numBoxes","_cropSize","cropHeight","cropWidth","boxVals","boxIndVals","imageVals","inStride","outStride","startInd","y1","y2","bInd","heightScale","widthScale","yInd","ind","topInd","bottomInd","yLerp","xInd","_c","_ind","leftInd","rightInd","xLerp","_c2","_ind2","topLeft","topRight","bottomLeft","bottom","_xInd","_c3","_ind3","closestX","round","closestY","_c4","inInd","outInd","cumsumConfig","Cumsum","permutedAxis","resultDtype","upcastType","finalDim","indexAdjuster","prevIdx","reverseTransposedResult","denseBincountConfig","DenseBincount","depthToSpaceConfig","DepthToSpace","inputHeight","inputWidth","inputDepth","outputHeight","outputWidth","outputDepth","outputIdx","inH","offsetH","inW","offsetD","inputIdx","depthwiseConv2dNative","chMul","depthwiseConv2dNativeConfig","DepthwiseConv2dNative","depthwiseConv2dNativeBackpropFilterConfig","DepthwiseConv2dNativeBackpropFilter","trunc","dm","depthwiseConv2dNativeBackpropInputConfig","DepthwiseConv2dNativeBackpropInput","diagConfig","Diag","dilation2dConfig","Dilation2D","filterVals","filterRank","outRank","hBeg","wBeg","curVal","MIN_SAFE_INTEGER","hIn","wIn","filterIndex","dilation2dBackpropFilterConfig","Dilation2DBackpropFilter","gradients","hMax","wMax","dilation2dBackpropInputConfig","Dilation2DBackpropInput","hInMax","wInMax","multiplyImpl","multiplyComplexImpl","multiplyConfig","permutedX","_sum","oldResult","sumConfig","Sum","einsumConfig","Einsum","equation","_backend_util$decodeE","allDims","summedDims","idDims","_backend_util$getEins","path","nSteps","numDimsRemaining","idTerm","_backend_util$getEins2","permutationIndices","dimsToExpand","_tensorsToDispose","EluGrad","equalImpl","Equal","equalConfig","a1","a2","a3","a4","a5","erf","Erf","sign","erfConfig","expImpl","Exp","expConfig","inputRank","$dim","expandDimsConfig","ExpandDims","expm1Impl","expm1","Expm1","expm1Config","realDivImpl","RealDiv","realDivConfig","subImpl","subComplexImpl","Sub","subConfig","fftBatch","inverse","innerDim","inputVals","real2D","imag2D","_fftImpl","fftImpl","$realInfo","$imagInfo","inputSize","fftRadix2","realInfo","imagInfo","sizeInfo","sizeInfoCopy","divRealInfo","divImagInfo","divRealVals","divImagVals","rawOutput","ret","_real2","_imag2","term","fourierTransformByMatmul","half","evenComplex","evenRealVals","evenImagVals","evenShape","evenRealInfo","evenImagInfo","evenTensorInfo","oddComplex","oddRealVals","oddImagVals","oddShape","oddRealInfo","oddImagInfo","oddTensorInfo","$evenComplex","$evenRealVals","$evenImagVals","$evenShape","$evenRealInfo","$evenImagInfo","$evenTensorInfo","$oddComplex","$oddRealVals","$oddImagVals","$oddShape","$oddRealInfo","$oddImagInfo","$oddTensorInfo","eShape","eRealInfo","eImagInfo","exponentInfo","addPart","subPart","addPartReal","subPartReal","addPartImag","subPartImag","$real","$imag","$realVals","$imagVals","fftConfig","FFT","innerDimensionSize","input2D","resultReshaped","fillValues","fillConfig","Fill","flipLeftRightConfig","FlipLeftRight","batchIdx","batchOffset","rowOffset","coordX","outIdx","outputValue","floorImpl","Floor","floorConfig","floorDivImpl","floorDiv","FloorDiv","floorDivConfig","fusedConv2DConfig","FusedConv2D","resultOld","_resultOld","fusedDepthwiseConv2DConfig","FusedDepthwiseConv2D","_oldResult","gatherNdConfig","GatherNd","paramsSize","indicesShape","sliceRank","_backend_util$prepare","_backend_util$prepare2","numSlices","indicesData","paramsData","flattenIndex","gatherV2Impl","indicesBuf","flattenOutputShape","originalLoc","indicesIdx","indicesIndex","locToIndex","originalIndex","gatherV2Config","GatherV2","batchDims","$batchDims","shapeInfo","flattenX","outerSize","greaterImpl","Greater","greaterConfig","greaterEqualImpl","GreaterEqual","greaterEqualConfig","ifftConfig","IFFT","IsFinite","isFiniteConfig","isInf","IsInf","isInfConfig","IsNan","isNaNConfig","lessImpl","Less","lessConfig","lessEqualImpl","lessEqual","LessEqual","lessEqualConfig","linSpaceImpl","num","linSpaceConfig","LinSpace","logImpl","Log","logConfig","Log1p","log1pConfig","logicalAndImpl","logicalAnd","LogicalAnd","logicalAndConfig","logicalNot","LogicalNot","logicalNotConfig","logicalOrImpl","logicalOr","LogicalOr","logicalOrConfig","lRNConfig","LRN","channels","maxD","sumAcrossChannels","currentChannel","beginSumOffset","endSumOffset","lRNGradConfig","LRNGrad","dySize","yValues","depthBegin","depthEnd","dyi","maxImpl","maxOutShape","maxConfig","Max","maximumImpl","maximumConfig","maxPoolConfig","MaxPool","maxPool3DConfig","MaxPool3D","MaxPool3DGrad","maxPosBuf","maxPool3dPositions","MaxPoolGrad","maxPoolWithArgmaxConfig","MaxPoolWithArgmax","_maxPoolWithArgmaxImp","maxPools","maxPoolWithArgmaxImpl","_maxPoolWithArgmaxImp2","pooled","indexes","pooledDataId","indexesDataId","meanConfig","Mean","toDispose","reduceSizeScalar","minConfig","Min","_min","minimumImpl","minimumConfig","mirrorPadConfig","MirrorPad","coords","inIndex","modImpl","rem","mod","Mod","modConfig","logitsRank","maxLogit","expandedShape","maxLogitReshaped","sumExp","sumReshaped","softmaxConfig","multinomialConfig","Multinomial","normalized","probabilities","numEvents","probVals","resShape","cdf","outOffset","sampleId","_event","negImpl","xDtype","minusOne","negConfig","Neg","_negImpl","_negImpl2","nonMaxSuppressionV3Impl","nonMaxSuppressionV3Config","NonMaxSuppressionV3","scores","maxOutputSize","iouThreshold","scoreThreshold","boxesVals","scoresVals","selectedIndices","nonMaxSuppressionV4Impl","nonMaxSuppressionV4Config","NonMaxSuppressionV4","padToMaxOutputSize","_nonMaxSuppressionV4I","validOutputs","nonMaxSuppressionV5Impl","nonMaxSuppressionV5Config","NonMaxSuppressionV5","softNmsSigma","_nonMaxSuppressionV5I","selectedScores","notEqualImpl","NotEqual","notEqualConfig","oneHotConfig","OneHot","onValue","offValue","indicesVal","imagPart","zerosLikeConfig","ZerosLike","onesLikeConfig","OnesLike","pack","expandedT","packConfig","Pack","padV2Config","PadV2","constantValue","outCoords","powImpl","Pow","powConfig","prodImpl","outDtype","_prod","prodConfig","Prod","_prodImpl","rangeImpl","numElements","rangeConfig","Range","reciprocal","Reciprocal","reciprocalConfig","resizeBilinearConfig","ResizeBilinear","alignCorners","halfPixelCenters","imagesStrides","_size","newHeight","newWidth","_images$shape","oldHeight","oldWidth","effectiveInputSize","effectiveOutputSize","effectiveRowSizeRatio","effectiveColSizeRatio","sourceFracRow","sourceRowFloor","rowFrac","sourceRowCeil","topRowOffset","botRowOffset","sourceFracCol","sourceColFloor","colFrac","sourceColCeil","topLeftOffest","botLeftOffset","topRightOffset","botRightOffest","newValue","ResizeBilinearGrad","xHeight","xWidth","_dy$shape","yHeight","yWidth","effectiveXSize","effectiveYSize","bOffset","topDxRIndex","bottomDxRIndex","topDxROffset","bottomDxROffset","dxRLerp","inverseDxRLerp","leftDxCIndex","rightDxCIndex","dxCLerp","inverseDxCLerp","topLeftRCOffset","topRightRCOffset","bottomLeftRCOffset","bottomRightRCOffset","inverseDxRLerpTimesInverseDxCLerp","inverseDxRLerpTimesDxCLerp","dxRLerpTimesInverseDxCLerp","dxRLerpTimesDxCLerp","dyVal","resizeNearestNeighborConfig","ResizeNearestNeighbor","outputOffset","sourceNearestRow","sourceNearestCol","ResizeNearestNeighborGrad","invHeightScale","invWidthScale","winHeight","winWidth","startRLerp","startDyR","startCLerp","startDyC","accum","dyRIndex","dyROffset","dyCIndex","dyCOffset","reverseConfig","Reverse","$dims","rotateWithOffsetConfig","RotateWithOffset","radians","fillValue","_backend_util$getImag","_backend_util$getImag2","centerX","centerY","sinFactor","cosFactor","coordY","Round","roundConfig","rsqrtImpl","Rsqrt","rsqrtConfig","scatterImpl","updates","outputSize","numUpdates","defaultValue","sumDupeIndices","flattenShape","updatesData","scatterNdConfig","ScatterNd","_backend_util$calcula","selectConfig","Select","conditionRank","tValues","eValues","selu","seluConfig","sigmoidConfig","Sign","signConfig","Sin","sinConfig","Sinh","sinhConfig","softplus","tooLarge","tooSmall","expX","softplusConfig","spaceToBatchNDConfig","SpaceToBatchND","completePaddings","paddedX","reshapedPaddedShape","permutedReshapedPaddedPermutation","paddedXReshaped","paddedXT","sparseToDenseConfig","SparseToDense","sparseIndices","sparseValues","splitVConfig","SplitV","numOrSizeSplits","splitSizes","sliceT","Sqrt","sqrtConfig","squareConfig","Square","squaredDifferenceImpl","squaredDifference","SquaredDifference","squaredDifferenceConfig","Step","stepAttrs","NaN","stepConfig","stridedSliceImpl","stridedSliceConfig","StridedSlice","beginMask","endMask","ellipsisMask","newAxisMask","shrinkAxisMask","_slice_util$sliceInfo","nonStrided","$strides","sliced","tan","Tan","tanConfig","tanh","tanhConfig","tileImpl","tileConfig","Tile","topKImpl","lastDim","allTopKVals","allTopKIndices","valAndInd","topKVals","topKIndices","topKConfig","TopK","_topKImpl","_topKImpl2","transformConfig","Transform","transforms","fillMode","batchStride","rowStride","colStride","transformVals","_transform","outY","outX","projection","inX","inY","mapCoord","nearestInterpolation","bilinearInterpolation","outCoord","inCoord","sz2","_sz","mapCoordReflect","sz","_sz2","mapCoordWrap","mapCoordNearest","mapCoordConstant","readWithFillValue","yFloor","xFloor","yCeil","xCeil","uniqueImpl","uniqueElements","inputBuffer","uniqueIndices","is1DTensor","element","axisValues","uniqueIndex","outputTmpShape","outputBuffer","uniqueElementIndex","_m","_n","outputValues","uniqueConfig","Unique","_uniqueImpl","unpackConfig","Unpack","valueRank","outIndex","tempRes","unsortedSegmentSumConfig","UnsortedSegmentSum","numSegments","$segmentIds","expanded","scalarValue","segmentId","maskCasted","sumTensorInfo","_kernelConfigs","kernelConfig","registerKernel","PackingScheme","TextureUsage","PhysicalTextureType","contexts","WEBGL_ATTRIBUTES","antialias","premultipliedAlpha","preserveDrawingBuffer","stencil","failIfMajorPerformanceCaveat","getWebGLContext","webGLVersion","newCtx","canvas","OffscreenCanvas","createCanvas","addEventListener","ev","preventDefault","getContext","getWebGLRenderingContext","gl","isContextLost","disable","DEPTH_TEST","STENCIL_TEST","BLEND","DITHER","POLYGON_OFFSET_FILL","SAMPLE_COVERAGE","enable","SCISSOR_TEST","CULL_FACE","cullFace","BACK","getUnpackedMatrixTextureShapeWidthHeight","columns","getDenseTexShape","texelsNeeded","getPackedMatrixTextureShapeWidthHeight","getTextureConfig","textureHalfFloatExtension","internalFormatFloat","internalFormatHalfFloat","internalFormatPackedHalfFloat","internalFormatPackedFloat","textureFormatFloat","downloadUnpackNumChannels","defaultNumChannels","textureTypeHalfFloat","textureTypeFloat","glany","getNumber","R32F","R16F","RGBA16F","RGBA32F","RED","HALF_FLOAT","FLOAT","RGBA","HALF_FLOAT_OES","downloadTextureFormat","callAndCheck","returnValue","getBool","getError","NO_ERROR","status","INVALID_ENUM","INVALID_VALUE","INVALID_OPERATION","INVALID_FRAMEBUFFER_OPERATION","OUT_OF_MEMORY","CONTEXT_LOST_WEBGL","getWebGLErrorMessage","checkWebGLError","canBeRepresented","getExtensionOrThrow","extensionName","throwIfNull","getExtension","createFragmentShader","fragmentShaderSource","fragmentShader","createShader","FRAGMENT_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","shaderInfoLog","lineNumberRegexResult","lineNumberRegex","exec","lineNumber","shaderLines","linesWithLineNumbers","maxLineLength","beforeErrorLines","errorLine","afterErrorLines","logShaderSourceAndInfoLog","getShaderInfoLog","MAX_TEXTURE_SIZE","MAX_TEXTURES_IN_SHADER","validateProgram","program","getProgramParameter","VALIDATE_STATUS","getProgramInfoLog","bindVertexBufferToProgramAttribute","attribute","arrayEntriesPerItem","itemStrideInBytes","itemOffsetInBytes","getAttribLocation","bindBuffer","ARRAY_BUFFER","vertexAttribPointer","enableVertexAttribArray","getProgramUniformLocationOrThrow","uniformName","getUniformLocation","getProgramUniformLocation","bindTextureToProgramUniformSampler","texture","uniformSamplerLocation","textureUnit","validateTextureUnit","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","bindTextureUnit","uniform1i","bindColorTextureToFramebuffer","framebuffer","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","unbindColorTextureFromFramebuffer","validateFramebuffer","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","FRAMEBUFFER_INCOMPLETE_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_DIMENSIONS","FRAMEBUFFER_UNSUPPORTED","getFramebufferErrorMessage","returnTOrNull","failureMessage","tOrNull","maxTextureUnit","MAX_COMBINED_TEXTURE_IMAGE_UNITS","glTextureUnit","textureUnitRange","getBatchDim","dimsToSkip","getRowsCols","getShapeAs3D","shapeAs3D","isEven","isReshapeFree","shape1Cols","shape2Cols","hasExtension","isWebGLVersionEnabled","isDownloadFloatTextureEnabled","createFloatTextureAndBindToFramebuffer","COLOR_BUFFER_HALF_FLOAT","texConfig","createTexture","texImage2D","frameBuffer","createFramebuffer","isFrameBufferComplete","deleteTexture","deleteFramebuffer","createHalfFloatTextureAndBindToFramebuffer","ENV","getGlslDifferences","varyingVs","varyingFs","texture2D","defineOutput","defineSpecialNaN","defineSpecialInf","defineRound","getLogicalCoordinatesFromFlatIndex","line1","line2","getFlatIndexFrom3D","registerFlag","getParameter","getWebGLMaxTextureSize","MAX_TEXTURE_IMAGE_UNITS","getMaxTexturesInShader","getWebGLDisjointQueryTimerVersion","device_util","isCapableOfRenderingToFloatTexture","fenceSync","ENCODE_FLOAT_SNIPPET","DecodeMatrixProgram","variableNames","packedInputs","packedOutput","outPackingScheme","DENSE","texShape","glsl","userCode","DecodeMatrixPackedProgram","EncodeFloatProgram","outTexUsage","DOWNLOAD","EncodeFloatPackedProgram","EncodeMatrixProgram","inputIsUnsignedByte","_texShape","EncodeMatrixPackedProgram","mainLoop","vertexShaderSource","vertexShader","VERTEX_SHADER","createVertexBuffer","createBuffer","bufferData","STATIC_DRAW","createIndexBuffer","ELEMENT_ARRAY_BUFFER","Uint16Array","createAndConfigureTexture","internalFormat","textureFormat","textureType","maxTextureSize","requested","_requested","tex2d","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","getInternalFormatForFloat32MatrixTexture","textureConfig","getInternalFormatForFloat16MatrixTexture","getInternalFormatForUnsignedBytesMatrixTexture","getInternalFormatForPackedMatrixTexture","getInternalFormatForFloat16PackedMatrixTexture","physicalRows","physicalCols","gl2","downloadTarget","_getPackedMatrixTextu","_getPackedMatrixTextu2","PIXEL_PACK_BUFFER","getBufferSubData","GPGPUContext","outputTexture","disposed","vertexAttrsAreBound","itemsToPoll","glVersion","setWebGLContext","COLOR_BUFFER_FLOAT","TEXTURE_HALF_FLOAT","textureFloatExtension","colorBufferFloatExtension","colorBufferHalfFloatExtension","vertexBuffer","indexBuffer","_waitForQueryAndGetTime","deleteBuffer","throwIfDisposed","_tex_util$getUnpacked","_tex_util$getUnpacked2","_tex_util$getUnpacked3","_tex_util$getUnpacked4","_tex_util$getUnpacked5","_tex_util$getUnpacked6","UNSIGNED_BYTE","pixels","dataForUpload","texelDataType","_tex_util$getPackedMa3","_tex_util$getPackedMa4","_tex_util$getPackedMa","_tex_util$getPackedMa2","downloadMatrixDriver","_tex_util$getUnpacked7","_tex_util$getUnpacked8","readPixels","bindTextureToFrameBuffer","bufferSizeBytes","bytesPerFloat","STREAM_READ","unbindTextureToFrameBuffer","fenceContext","createFence","pollFence","query","isFencePassed","sync","SYNC_GPU_COMMANDS_COMPLETE","flush","clientWaitSync","ALREADY_SIGNALED","CONDITION_SATISFIED","beginQuery","endQuery","isQueryAvailable","packedRGBA","createProgram","attachShader","linkProgram","LINK_STATUS","debug","setProgram","deleteProgram","useProgram","shouldThrow","inputMatrixTexture","uniformLocation","throwIfNoProgram","outputMatrixTexture","setOutputMatrixTextureDriver","outputPackedMatrixTexture","startRow","startColumn","numColumns","setOutputMatrixWriteRegionDriver","debugValidate","drawElements","TRIANGLES","UNSIGNED_SHORT","disjointQueryTimerExtension","getQueryTimerExtension","_ext","getQueryTimerExtensionWebGL2","_query","createQuery","TIME_ELAPSED_EXT","ext","getQueryTimerExtensionWebGL1","createQueryEXT","beginQueryEXT","endQueryEXT","_ext2","getQueryTime","queryTimerVersion","getQueryParameter","QUERY_RESULT","getQueryObjectEXT","QUERY_RESULT_EXT","available","QUERY_RESULT_AVAILABLE","disjoint","GPU_DISJOINT_EXT","_ext3","_available","QUERY_RESULT_AVAILABLE_EXT","addItemToPoll","linearSearchLastTrue","isDoneFn","resolveFn","pollItems","downloadAndDecode","outputMatrixTextureMaybePacked","viewport","scissor","getBroadcastDims","makeShader","inputsInfo","usesPackedTextures","prefixSnippets","logicalShape","isUniform","outputSamplingSnippet","floatTextureSetOutputSnippet","inputPrefixSnippet","inputSamplingSnippet","inInfo","outShapeInfo","getPackedSamplerFromInInfo","getSamplerFromInInfo","getPackedSamplerAtOutputCoords","getSamplerAtOutputCoords","getInputSamplingSnippet","outTexShape","floatTextureSampleSnippet","getFloatTextureSampleSnippet","shaderPrefix","SAMPLE_1D_SNIPPET","SAMPLE_2D_SNIPPET","SAMPLE_3D_SNIPPET","getShaderPrefix","isPacked","packedTexShape","getOutputPacked1DCoords","texelsInLogicalRow","getOutputPacked2DCoords","texelsInBatch","texelsInBatchN","getOutputPackedNDCoords","getPackedOutputSamplingSnippet","getFloatTextureSetRGBASnippet","getOutput1DCoords","getOutput2DCoords","coordsFromIndexSnippet","getOutput4DCoords","getOutput5DCoords","getOutput6DCoords","getOutputSamplingSnippet","getFloatTextureSetRSnippet","SHADER_PACKED_PREFIX","inputInfo","texName","funcName","_inputInfo$shapeInfo$","texNumR","texNumC","_inputInfo$shapeInfo$2","tNumR","tNumC","getFlatOffsetUniformName","getSamplerScalar","getUniformSampler","getSampler1D","_texNumR","_texNumC","_util$squeezeShape","keptDims","squeezedShape","newInputInfo","squeezeInputInfo","getSqueezedParams","getSampler2D","stride0","stride1","_util$squeezeShape2","getSampler3D","stride2","_util$squeezeShape3","getSampler4D","stride3","_util$squeezeShape4","getSampler5D","_util$squeezeShape5","stride4","getSampler6D","getPackedSampler1D","valuesPerRow","getPackedSampler2D","getPackedSampler3D","getPackedSamplerND","inSize","coordsSnippet","texFuncSnippet","inRank","broadcastDims","getCoordsDataType","rankDiff","unpackedCoordsSnippet","isInputScalar","isOutputScalar","inTexShape","parse","compileProgram","gpgpu","inputInfos","texData","inShapeInfos","webGLProgram","infLoc","nanLoc","uniformLocations","varName","validateBinaryAndProgram","shapeInfos","shapeA","shapeB","texShapeA","texShapeB","runProgram","binary","customSetup","outTex","setOutputPackedMatrixTexture","setOutputMatrixTexture","uniform1f","varLoc","varOffsetLoc","uniformValues","uniform1fv","setInputMatrixTexture","executeProgram","makeShaderKey","keyInputs","hasOffset","keyUserCode","addImplCPU","bincountImplCPU","bincountReduceImplCPU","ceilImplCPU","concatImplCPU","expImplCPU","expm1ImplCPU","floorImplCPU","gatherV2ImplCPU","greaterImplCPU","lessImplCPU","linSpaceImplCPU","logImplCPU","maxImplCPU","maximumImplCPU","minimumImplCPU","multiplyImplCPU","negImplCPU","prodImplCPU","rangeImplCPU","rsqrtImplCPU","simpleAbsImplCPU","sliceImplCPU","stridedSliceImplCPU","subImplCPU","tileImplCPU","topKImplCPU","transposeImplCPU","uniqueImplCPU","getVecChannels","getChannels","PackProgram","outOfBoundsCondition","cond","getOutOfBoundsCondition","setup","getSetup","sourceCoords","coord","getSourceCoordsArr","getOutput","ReshapePackedProgram","thisRC","TextureManager","numUsedTextures","numFreeTextures","_numBytesAllocated","_numBytesFree","freeTextures","logEnabled","usedTextures","shapeRC","usage","physicalTexType","getPhysicalFromLogicalTextureType","shapeKey","getKeyFromTextureShape","newTexture","texBytes","computeBytes","_newTexture","PACKED_2X2_FLOAT32","createPackedMatrixTexture","PACKED_2X2_FLOAT16","createFloat16PackedMatrixTexture","UNPACKED_FLOAT32","createFloat32MatrixTexture","UNPACKED_FLOAT16","createFloat16MatrixTexture","PACKED_4X1_UNSIGNED_BYTE","createUnsignedBytesMatrixTexture","logicalTexType","deleteTexThreshold","deleteMatrixTexture","texList","texIndex","freeRatio","tex","internalFormatForPhysicalTexType","_getUnpackedMatrixTex","_getUnpackedMatrixTex2","numBytesForInternalFormat","UPLOAD","RENDER","getPhysicalTextureForRendering","PIXELS","shapeRowsCol","UnaryOpProgram","opSnippet","CHECK_NAN_SNIPPET","LINEAR","ABS","RELU","RELU6","CLONE","UnaryOpPackedProgram","UnpackProgram","getSourceCoords","binaryCaches","MathBackendWebGL","_getQueryTime","pendingRead","WeakMap","pendingDisposal","WeakSet","dataRefCount","numBytesInGPU","uploadWaitMs","downloadWaitMs","lastGlFlushTime","warnedAboutMemory","pendingDeletes","binaryCache","gpgpuCreatedLocally","textureManager","numMBBeforeWarning","global","screen","devicePixelRatio","checkNumericalProblems","runWebGLProgram","convertAndCacheOnCPU","shouldTimeProgram","activeTimers","getValuesFromTexture","_subscribers","tmpDownloadTarget","_this$gpgpu","tmpData","dTypeVals","subscribers","createBufferFromTexture","createAndWaitForFence","downloadFloat32MatrixFromBuffer","removeDataId","_this$texData$get","_this$gpgpu2","tmpTarget","_tmpData","_vals","downloadMatrixFromPackedTexture","shouldUsePackedProgram","downloadByteEncodedFloatMatrixFromOutputTexture","oldActiveTimers","newActiveTimers","outerMostTime","flattenedActiveTimerQueries","flattenedActiveTimerNames","programTimersStack","wallMs","ms","numBytesInGPUAllocated","numBytesAllocated","numBytesInGPUFree","numBytesFree","startMs","endMs","timerQuery","waitForQueryAndGetTime","releaseGPUData","_this$texData$get2","_this$texData$get3","origDataId","releaseTexture","uploadToGPU","sizeThreshold","compileAndRun","shouldExecuteOnCPU","outValues","packedUnaryOp","afterShape","input3DShape","input3D","afterShapeAs3D","outputDtype","preventEagerUnpackingOfOutput","outData","texelShape","dataToDispose","inputsData","unpackTensor","packTensor","savedInput","packedReshape","outputData","getAndSaveBinary","startTimer","info","endTimer","glFlushThreshold","time","unpacked","getBinary","HTMLCanvasElement","remove","floatPrecisionValue","debugFlag","underflowCheckValue","floatPrecision","logShape","maxTexSize","squeezeResult","_getRowsCols","_getRowsCols2","isByteArray","tempDenseInputHandle","uploadDenseMatrixToTexture","getTexture","encodedOutputTarget","outputTexData","acquireTexture","float32Values","float32ToTypedArray","texType","mb","toFixed","BinaryOpProgram","BinaryOpPackedProgram","checkOutOfBounds","supportsBroadcasting","checkOutOfBoundsString","realTensorInfo","imagTensorInfo","LEAKYRELU","LEAKYRELU_PACKED","$alpha","PRELU","PRELU_PACKED","packedOpSnippet","cpuKernelImpl","webglBackend","_ref3$checkOutOfBound","_ref3$supportsComplex","supportsComplex","aData","bData","_map","complexParts","_complexParts","aPart","bPart","aHandle","bHandle","_map2","complexOutput","_aData","_bData","_cpuKernelImpl","_cpuKernelImpl2","mapActivationToShaderProgram","packed","MatMulPackedProgram","addBias","hasPreluActivation","hasLeakyreluActivation","sharedDimensionPacked","aSample","bSample","aSwizzle","bSwizzle","activationSnippet","applyActivationSnippet","addBiasSnippet","batchASnippet","batchBSnippet","COMPLEX_MULTIPLY","BinaryOpComplexProgram","MUL","realProgram","imagProgram","_inputs","_cpuMultiply","_cpuMultiply2","xTexData","MeanProgram","reduceInfo","divisor","windowSizeNearestVec4","windowSizeVec4Remainder","updateSnippet","toPrecision","ReduceProgram","reduceType","initializationValue","compareOp","vecType","reductionType","reductionStages","stages","getReductionStages","previousResult","_reductionStages$i","TransposeProgram","switched","originalOrder","switchedCoords","getSwitchedCoords","TransposePackedProgram","outputOrder","switchedOrder","nextColumn","getc","sumInputIsTransposed","sumInput","sumOutShape","reshapedInput","reduced","sumOutType","sumImpl","batchMatMulImpl","_ref$bias","_ref$preluActivationW","_ref$leakyreluAlpha","_ref$activation","a3dShape","hasBias","hasPreluActivationWeights","hasLeakyreluAlpha","fusedActivation","aVec","bVec","shouldReshapeB","aVec3d","bVec3d","product","$leakyreluAlpha","outReshaped","ADD","addKernelFunc","AddNProgram","snippets","operation","AddNPackedProgram","midIndex","leftSide","rightSide","a2D","ArgMinMaxProgram","firstPass","compOp","indexSnippet","ArgMinMaxPackedProgram","sourceLocSetup","sourceRank","sourceLocDType","inChannel","intChannels","srcRCoords","srcGCoords","srcBCoords","srcACoords","fetchCandidateIdx","fetchValue","getBestIndicesAChannelSnippet","argReduce","bestIndicesA","argReducePacked","argMinMaxReduce","CHECK_NAN_SNIPPET_BINARY","Pool2DProgram","computePositions","isAvgPool","batchFlattenPositionStr","flattenPositionStr","_compareOp","filterWidthNearestVec4","filterWidthVec4Remainder","Pool3DProgram","_compareOp2","avgPoolProgram","AvgPool2DBackpropProgram","AvgPool3DBackpropProgram","avgPoolGrad3DConfig","avgPoolBackpropProgram","BatchNormProgram","meanShape","varianceShape","offsetShape","scaleShape","offsetSnippet","scaleSnippet","BatchNormPackedProgram","finalInputs","SliceProgram","destSize","uniformPart","getCoords","coordSum","startLoc","getUniformLocationNoThrow","uniform1iv","SlicePackedProgram","sourceLoc","getChannel","upperRow","lowerRow","getCustomSetupFunc","newTexData","shallowSlice","reshapedIntermediate","transposedIntermediate","reshapedIntermediate2","zerosTensor","_result3","CEIL","ClipProgram","minLoc","maxLoc","ClipPackedProgram","clipByValueConfig","ComplexAbsProgram","makeComplexComponentTensorInfo","complexTensor","complexPart","programInputs","ConcatProgram","offsets","lastIndex","lastShift","ConcatPackedProgram","lastChannels","allChannels","getValueSnippet","_shift","shiftedChannels","channelIdx","_computeTensors2D","computeTensors2D","_tensors2D","tensors2D","_outShape","_program","_computeTensors2D2","Conv2DProgram","inputDepthNearestVec4","inputDepthVec4Remainder","rowDim","colDim","channelDim","Conv3DProgram","Im2ColPackedProgram","itemsPerBlockRow","unrolled","conv2dByMatMul","sharedMatMulDim","outerShapeX","outerShapeFilter","batchMatMulWillBeUnpacked","reshapeWillBeExpensive","_targetShape","_xReshaped","originalXTexDataShape","_filterReshaped","pointwiseConv","pointwiseConvTexData","filterReshaped","conv2dWithIm2Row","_ref2$bias","_ref2$preluActivation","_ref2$leakyreluAlpha","_ref2$activation","x2ColShape","xSqueezed","w2Row","im2ColProgram","im2Col","im2ColReshaped","matmulProgram","_intermediates2","Conv2DDerFilterProgram","Conv2DDerInputProgram","Conv3DDerFilterProgram","Conv3DDerInputProgram","conv3DBackpropInputConfig","CHECK_NAN_SNIPPET_UNARY","CropAndResizeProgram","imageShape","boxShape","_imageShape","methodId","inputHeightFloat","inputWidthFloat","heightRatio","widthRatio","CumSumProgram","idxString","getFinalCoord","prevResult","_prevResult","DepthToSpaceProgram","getHeightCoordString","getWidthCoordString","getDepthCoordString","getOutputDepthSize","getInputSamplingString","DepthwiseConv2DProgram","hasLeakyReluAlpha","xNumRows","xNumCols","channelMul","DepthwiseConvPacked2DProgram","texelsAcross","texelC","nextTexelOffset","DepthwiseConv2DDerFilterProgram","DepthwiseConv2DDerInputProgram","DiagProgram","flat","Dilation2DProgram","dilation2DConfig","EXP","EXPM1","FFTProgram","component","opString","exponentMultiplierSnippet","resultDenominator","complexOutputReshaped","FillProgram","valueLoc","fromPixels2DContext","FlipLeftRightProgram","FLOOR","FromPixelsProgram","_outputShape","FromPixelsPackedProgram","fromPixelsConfig","FromPixels","isVideo","HTMLVideoElement","isImage","HTMLImageElement","videoWidth","videoHeight","drawImage","tempPixelHandle","uploadPixelDataToTexture","shouldPackDepthwiseConv","GatherNDProgram","sliceDim","stridesType","strideString","flattenIndices","GatherProgram","currentCoords","LRNProgram","radius","powOperator","rad","basis","LRNPackedProgram","LRNConfig","LRNGradProgram","LRNGradConfig","maxInputIsTransposed","maxInput","maxInputValues","_values","reshapedOutput","maxPoolProgram","MaxPool2DBackpropProgram","MaxPool3DBackpropProgram","maxPoolGrad3DConfig","maxPool3dPositionsProgram","maxPoolBackpropProgram","maxPoolPositionsProgram","maxPoolBackPropProgram","poolOutput","meanInputIsTransposed","meanInput","meanInputValues","meanOutShape","meanImpl","MirrorPadProgram","unpackedCoords","MirrorPadPackedProgram","cLimit","padSetup","_padSetup","MultinomialProgram","numOutcomes","seedLoc","realDiv","SUB","maxLogitsReshaped","sumExpReshaped","probs","NEG","_negImplCPU","_negImplCPU2","OneHotProgram","numIndices","PadProgram","PadPackedProgram","componentSetup","paddingArea","_prodImplCPU","ResizeBilinearProgram","sourceFracIndexRC","effectiveInSize","effectiveOutSize","ResizeBilinearPackedProgram","ResizeBilinearBackpropProgram","dyShape","_dyShape","ResizeNearestNeighborProgram","roundBase","ResizeNearestNeigborBackpropProgram","ReverseProgram","inCoords","getInCoord","ReversePackedProgram","nextRow","inCoordsArray","channels1","getR","getG","getB","getA","RotateProgram","fillSnippet","paramsLoc","uniform4f","ScatterProgram","updateSize","indicesRank","updatesRank","indicesString","indicesSnippet","updatesString","updatesSnippet","SelectProgram","cRank","cCoords","abCoords","cCoordVars","abCoordVars","reshapedPaddedX","StridedSliceProgram","inputDtype","newCoords","outputAxis","TileProgram","buf","_topKImplCPU","_topKImplCPU2","TransformProgram","fillModeId","interpolationModeId","_uniqueImplCPU","SegmentOpProgram","segOpInfo","segOpType","checkValueOutOfBounds","checkSegmentIdOutOfBounds","segOpCompute","rangeInfo","tileInfo","version_core"],"mappings":"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","file":"441f7c1f41e01b563873c9840f5077bc67f7808f-4cb4b68f9cd3909e8367.js","sourcesContent":["import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Abs } from '../kernel_names';\nimport { cast } from '../ops/cast';\nimport { mul } from '../ops/mul';\nimport { step } from '../ops/step';\nexport var absGradConfig = {\n  kernelName: Abs,\n  inputsToSave: ['x'],\n  gradFunc: function gradFunc(dy, saved) {\n    var _saved = _slicedToArray(saved, 1),\n        _x = _saved[0];\n\n    return {\n      x: function x() {\n        return mul(dy, step(cast(_x, 'float32'), -1));\n      }\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Acos } from '../kernel_names';\nimport { cast } from '../ops/cast';\nimport { div } from '../ops/div';\nimport { neg } from '../ops/neg';\nimport { scalar } from '../ops/scalar';\nimport { sqrt } from '../ops/sqrt';\nimport { square } from '../ops/square';\nimport { sub } from '../ops/sub';\nexport var acosGradConfig = {\n  kernelName: Acos,\n  inputsToSave: ['x'],\n  gradFunc: function gradFunc(dy, saved) {\n    var _saved = _slicedToArray(saved, 1),\n        _x = _saved[0];\n\n    return {\n      x: function x() {\n        var a = square(cast(_x, 'float32'));\n        var b = sqrt(sub(scalar(1), a));\n        return neg(div(dy, b));\n      }\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Acosh } from '../kernel_names';\nimport { cast } from '../ops/cast';\nimport { div } from '../ops/div';\nimport { sqrt } from '../ops/sqrt';\nimport { square } from '../ops/square';\nimport { sub } from '../ops/sub';\nexport var acoshGradConfig = {\n  kernelName: Acosh,\n  inputsToSave: ['x'],\n  gradFunc: function gradFunc(dy, saved) {\n    var _saved = _slicedToArray(saved, 1),\n        _x = _saved[0];\n\n    return {\n      x: function x() {\n        var a = sqrt(sub(square(cast(_x, 'float32')), 1));\n        return div(dy, a);\n      }\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Add } from '../kernel_names';\nimport * as broadcast_util from '../ops/broadcast_util';\nimport { reshape } from '../ops/reshape';\nimport { sum } from '../ops/sum';\nexport var addGradConfig = {\n  kernelName: Add,\n  inputsToSave: ['a', 'b'],\n  gradFunc: function gradFunc(dy, saved) {\n    var _saved = _slicedToArray(saved, 2),\n        a = _saved[0],\n        b = _saved[1];\n\n    var outShape = broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n\n    var derA = function derA() {\n      var res = dy;\n      var reduceAxes = broadcast_util.getReductionAxes(a.shape, outShape);\n\n      if (reduceAxes.length > 0) {\n        res = sum(res, reduceAxes);\n      }\n\n      return reshape(res, a.shape);\n    };\n\n    var derB = function derB() {\n      var res = dy;\n      var reduceAxes = broadcast_util.getReductionAxes(b.shape, outShape);\n\n      if (reduceAxes.length > 0) {\n        res = sum(res, reduceAxes);\n      }\n\n      return reshape(res, b.shape);\n    };\n\n    return {\n      a: derA,\n      b: derB\n    };\n  }\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { AddN } from '../kernel_names';\nexport var addNGradConfig = {\n  kernelName: AddN,\n  saveAllInputs: true,\n  gradFunc: function gradFunc(dy, saved) {\n    var ders = {};\n    saved.forEach(function (_, i) {\n      ders[i] = function () {\n        return dy.clone();\n      };\n    });\n    return ders;\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ArgMax } from '../kernel_names';\nimport { zerosLike } from '../ops/zeros_like';\nexport var argMaxGradConfig = {\n  kernelName: ArgMax,\n  inputsToSave: ['x'],\n  gradFunc: function gradFunc(dy, saved) {\n    var _saved = _slicedToArray(saved, 1),\n        _x = _saved[0];\n\n    return {\n      x: function x() {\n        return zerosLike(_x);\n      }\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ArgMin } from '../kernel_names';\nimport { zerosLike } from '../ops/zeros_like';\nexport var argMinGradConfig = {\n  kernelName: ArgMin,\n  inputsToSave: ['x'],\n  gradFunc: function gradFunc(dy, saved) {\n    var _saved = _slicedToArray(saved, 1),\n        _x = _saved[0];\n\n    return {\n      x: function x() {\n        return zerosLike(_x);\n      }\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Asin } from '../kernel_names';\nimport { cast } from '../ops/cast';\nimport { div } from '../ops/div';\nimport { scalar } from '../ops/scalar';\nimport { sqrt } from '../ops/sqrt';\nimport { square } from '../ops/square';\nimport { sub } from '../ops/sub';\nexport var asinGradConfig = {\n  kernelName: Asin,\n  inputsToSave: ['x'],\n  gradFunc: function gradFunc(dy, saved) {\n    var _saved = _slicedToArray(saved, 1),\n        _x = _saved[0];\n\n    return {\n      x: function x() {\n        return div(dy, sqrt(sub(scalar(1), square(cast(_x, 'float32')))));\n      }\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Asinh } from '../kernel_names';\nimport { add } from '../ops/add';\nimport { cast } from '../ops/cast';\nimport { div } from '../ops/div';\nimport { scalar } from '../ops/scalar';\nimport { sqrt } from '../ops/sqrt';\nimport { square } from '../ops/square';\nexport var asinhGradConfig = {\n  kernelName: Asinh,\n  inputsToSave: ['x'],\n  gradFunc: function gradFunc(dy, saved) {\n    var _saved = _slicedToArray(saved, 1),\n        _x = _saved[0];\n\n    return {\n      x: function x() {\n        var a = sqrt(add(scalar(1), square(cast(_x, 'float32'))));\n        return div(dy, a);\n      }\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Atan2 } from '../kernel_names';\nimport { add } from '../ops/add';\nimport { assertAndGetBroadcastShape, getReductionAxes } from '../ops/broadcast_util';\nimport { div } from '../ops/div';\nimport { mul } from '../ops/mul';\nimport { neg } from '../ops/neg';\nimport { reshape } from '../ops/reshape';\nimport { square } from '../ops/square';\nimport { sum } from '../ops/sum';\nexport var atan2GradConfig = {\n  kernelName: Atan2,\n  inputsToSave: ['a', 'b'],\n  gradFunc: function gradFunc(dy, saved) {\n    var _saved = _slicedToArray(saved, 2),\n        a = _saved[0],\n        b = _saved[1];\n\n    var outShape = assertAndGetBroadcastShape(a.shape, b.shape);\n\n    var derA = function derA() {\n      var d = add(square(a), square(b));\n      var res = mul(dy, div(b, d));\n      var reduceAxes = getReductionAxes(a.shape, outShape);\n\n      if (reduceAxes.length > 0) {\n        res = sum(res, reduceAxes);\n      }\n\n      return reshape(res, a.shape);\n    };\n\n    var derB = function derB() {\n      var d = add(square(a), square(b));\n      var res = neg(mul(dy, div(a, d)));\n      var reduceAxes = getReductionAxes(b.shape, outShape);\n\n      if (reduceAxes.length > 0) {\n        res = sum(res, reduceAxes);\n      }\n\n      return reshape(res, b.shape);\n    };\n\n    return {\n      a: derA,\n      b: derB\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Atan } from '../kernel_names';\nimport { add } from '../ops/add';\nimport { cast } from '../ops/cast';\nimport { div } from '../ops/div';\nimport { square } from '../ops/square';\nexport var atanGradConfig = {\n  kernelName: Atan,\n  inputsToSave: ['x'],\n  gradFunc: function gradFunc(dy, saved) {\n    var _saved = _slicedToArray(saved, 1),\n        _x = _saved[0];\n\n    return {\n      x: function x() {\n        return div(dy, add(square(cast(_x, 'float32')), 1));\n      }\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Atanh } from '../kernel_names';\nimport { cast } from '../ops/cast';\nimport { div } from '../ops/div';\nimport { square } from '../ops/square';\nimport { sub } from '../ops/sub';\nimport { scalar } from '../ops/scalar';\nexport var atanhGradConfig = {\n  kernelName: Atanh,\n  inputsToSave: ['x'],\n  gradFunc: function gradFunc(dy, saved) {\n    var _saved = _slicedToArray(saved, 1),\n        _x = _saved[0];\n\n    return {\n      x: function x() {\n        return div(dy, sub(scalar(1), square(cast(_x, 'float32'))));\n      }\n    };\n  }\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { AvgPool3DGrad } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\nimport { reshape } from './reshape';\n/**\n * Computes the backprop of a 3d avg pool.\n *\n * @param dy The dy error, of rank 5 of shape\n *     [batchSize, depth, height, width, channels].\n * assumed.\n * @param input The original input image, of rank 5 or rank4 of shape\n *     [batchSize, depth, height, width, channels].\n * @param filterSize The filter size:\n *     `[filterDepth, filterHeight, filterWidth]`.\n *     `filterSize` is a single number,\n *     then `filterDepth == filterHeight == filterWidth`.\n * @param strides The strides of the pooling:\n *     `[strideDepth, strideHeight, strideWidth]`. If\n *     `strides` is a single number, then `strideHeight == strideWidth`.\n * @param pad A string from: 'same', 'valid'. The type of padding algorithm\n *     used in the forward prop of the op.\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n */\n\nfunction avgPool3dGrad_(dy, input, filterSize, strides, pad, dimRoundingMode) {\n  var $dy = convertToTensor(dy, 'dy', 'avgPool3dGrad');\n  var $input = convertToTensor(input, 'input', 'avgPool3dGrad');\n  var dy5D = $dy;\n  var input5D = $input;\n  var reshapedTo5D = false;\n\n  if ($input.rank === 4) {\n    reshapedTo5D = true;\n    dy5D = reshape($dy, [1, $dy.shape[0], $dy.shape[1], $dy.shape[2], $dy.shape[3]]);\n    input5D = reshape($input, [1, $input.shape[0], $input.shape[1], $input.shape[2], $input.shape[3]]);\n  }\n\n  util.assert(dy5D.rank === 5, function () {\n    return \"Error in avgPool3dGrad: dy must be rank 5 but got rank \" + \"\".concat(dy5D.rank, \".\");\n  });\n  util.assert(input5D.rank === 5, function () {\n    return \"Error in avgPool3dGrad: input must be rank 5 but got rank \" + \"\".concat(input5D.rank, \".\");\n  });\n\n  if (dimRoundingMode != null) {\n    util.assert(util.isInt(pad), function () {\n      return \"Error in avgPool3dGrad: pad must be an integer when \" + \"using, dimRoundingMode \".concat(dimRoundingMode, \" but got pad \").concat(pad, \".\");\n    });\n  }\n\n  var inputs = {\n    dy: dy5D,\n    input: input5D\n  };\n  var attrs = {\n    filterSize: filterSize,\n    strides: strides,\n    pad: pad,\n    dimRoundingMode: dimRoundingMode\n  }; // tslint:disable-next-line: no-unnecessary-type-assertion\n\n  var res = ENGINE.runKernel(AvgPool3DGrad, inputs, attrs);\n\n  if (reshapedTo5D) {\n    return reshape(res, [res.shape[1], res.shape[2], res.shape[3], res.shape[4]]);\n  }\n\n  return res;\n}\n\nexport var avgPool3dGrad = op({\n  avgPool3dGrad_: avgPool3dGrad_\n});","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { AvgPool3D } from '../kernel_names';\nimport { avgPool3dGrad } from '../ops/avg_pool_3d_grad';\nexport var avgPool3DGradConfig = {\n  kernelName: AvgPool3D,\n  inputsToSave: ['x'],\n  gradFunc: function gradFunc(dy, saved, attrs) {\n    var _saved = _slicedToArray(saved, 1),\n        _x = _saved[0];\n\n    var filterSize = attrs.filterSize,\n        strides = attrs.strides,\n        pad = attrs.pad,\n        dimRoundingMode = attrs.dimRoundingMode;\n    return {\n      x: function x() {\n        return avgPool3dGrad(dy, _x, filterSize, strides, pad, dimRoundingMode);\n      }\n    };\n  }\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { AvgPoolGrad } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\nimport { reshape } from './reshape';\n/**\n * Computes the backprop of an 2D avg pool.\n *\n * @param dy The dy error, of rank 4 or rank 3 of shape\n *     [batchSize, height, width, channels]. If rank 3, batch of 1 is\n * assumed.\n * @param input The input image, of rank 4 or rank 3 of shape\n *     [batchSize, height, width, channels]. If rank 3, batch of 1 is\n * assumed.\n * @param filterSize The filter size: `[filterHeight, filterWidth]`. If\n *     `filterSize` is a single number, then `filterHeight == filterWidth`.\n * @param strides The strides of the pooling: `[strideHeight, strideWidth]`. If\n *     `strides` is a single number, then `strideHeight == strideWidth`.\n * @param pad A string from: 'same', 'valid'. The type of padding algorithm\n *     used in the forward prop of the op.\n */\n\nfunction avgPoolGrad_(dy, input, filterSize, strides, pad) {\n  var $dy = convertToTensor(dy, 'dy', 'avgPoolGrad');\n  var $input = convertToTensor(input, 'input', 'avgPoolGrad');\n  util.assert($input.rank === $dy.rank, function () {\n    return \"Rank of input (\".concat($input.rank, \") does not match rank of dy (\").concat($dy.rank, \")\");\n  });\n  var input4D = $input;\n  var dy4D = $dy;\n  var reshapedTo4D = false;\n\n  if ($input.rank === 3) {\n    reshapedTo4D = true;\n    input4D = reshape($input, [1, $input.shape[0], $input.shape[1], $input.shape[2]]);\n    dy4D = reshape($dy, [1, $dy.shape[0], $dy.shape[1], $dy.shape[2]]);\n  }\n\n  util.assert(dy4D.rank === 4, function () {\n    return \"Error in avgPoolGrad: dy must be rank 4 but got rank \" + \"\".concat(dy4D.rank, \".\");\n  });\n  util.assert(input4D.rank === 4, function () {\n    return \"Error in avgPoolGrad: input must be rank 4 but got rank \" + \"\".concat(input4D.rank, \".\");\n  });\n  var inputs = {\n    dy: dy4D,\n    input: input4D\n  };\n  var attrs = {\n    filterSize: filterSize,\n    strides: strides,\n    pad: pad\n  }; // tslint:disable-next-line: no-unnecessary-type-assertion\n\n  var res = ENGINE.runKernel(AvgPoolGrad, inputs, attrs);\n\n  if (reshapedTo4D) {\n    return reshape(res, [res.shape[1], res.shape[2], res.shape[3]]);\n  }\n\n  return res;\n}\n\nexport var avgPoolGrad = op({\n  avgPoolGrad_: avgPoolGrad_\n});","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { AvgPool } from '../kernel_names';\nimport { avgPoolGrad } from '../ops/avg_pool_grad';\nexport var avgPoolGradConfig = {\n  kernelName: AvgPool,\n  inputsToSave: ['x'],\n  gradFunc: function gradFunc(dy, saved, attrs) {\n    var _saved = _slicedToArray(saved, 1),\n        _x = _saved[0];\n\n    var filterSize = attrs.filterSize,\n        strides = attrs.strides,\n        pad = attrs.pad;\n    return {\n      x: function x() {\n        return avgPoolGrad(dy, _x, filterSize, strides, pad);\n      }\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { BatchMatMul } from '../kernel_names';\nimport { matMul } from '../ops/mat_mul';\nexport var batchMatMulGradConfig = {\n  kernelName: BatchMatMul,\n  inputsToSave: ['a', 'b'],\n  gradFunc: function gradFunc(dy, saved, attrs) {\n    var _saved = _slicedToArray(saved, 2),\n        a = _saved[0],\n        b = _saved[1];\n\n    var transposeA = attrs.transposeA,\n        transposeB = attrs.transposeB;\n\n    if (!transposeA && !transposeB) {\n      return {\n        a: function a() {\n          return matMul(dy, b, false, true);\n        },\n        b: function b() {\n          return matMul(a, dy, true, false);\n        }\n      };\n    } else if (!transposeA && transposeB) {\n      return {\n        a: function a() {\n          return matMul(dy, b, false, false);\n        },\n        b: function b() {\n          return matMul(dy, a, true, false);\n        }\n      };\n    } else if (transposeA && !transposeB) {\n      return {\n        a: function a() {\n          return matMul(b, dy, false, true);\n        },\n        b: function b() {\n          return matMul(a, dy, false, false);\n        }\n      };\n    } else {\n      return {\n        a: function a() {\n          return matMul(b, dy, true, true);\n        },\n        b: function b() {\n          return matMul(dy, a, true, true);\n        }\n      };\n    }\n  }\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { BatchToSpaceND } from '../kernel_names';\nimport { spaceToBatchND } from '../ops/space_to_batch_nd';\nexport var batchToSpaceNDGradConfig = {\n  kernelName: BatchToSpaceND,\n  gradFunc: function gradFunc(dy, saved, attrs) {\n    var blockShape = attrs.blockShape,\n        crops = attrs.crops;\n    return {\n      x: function x() {\n        return spaceToBatchND(dy, blockShape, crops);\n      }\n    };\n  }\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { BroadcastTo } from '../kernel_names';\nimport { sum } from '../ops/sum';\nexport var broadcastToGradConfig = {\n  kernelName: BroadcastTo,\n  gradFunc: function gradFunc(dy, saved, attrs) {\n    var broadCastToAttrs = attrs;\n    var inputShape = broadCastToAttrs.inputShape;\n    var outputShape = broadCastToAttrs.shape;\n    var reps = Array.from(outputShape);\n\n    for (var i = inputShape.length - 1; i >= 0; i--) {\n      if (inputShape[i] === outputShape[i]) {\n        reps[i] = 1;\n      } else if (inputShape[i] !== 1) {\n        throw new Error(\"broadcastTo(): [\".concat(inputShape, \"] cannot be broadcast to [\").concat(outputShape, \"].\"));\n      }\n    }\n\n    var axes = [];\n\n    for (var _i = 0; _i < reps.length; _i++) {\n      if (reps[_i] > 1) {\n        axes.push(_i);\n      }\n    }\n\n    return {\n      x: function x() {\n        return sum(dy, axes, true\n        /* keepDims */\n        );\n      }\n    };\n  }\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Cast } from '../kernel_names';\nexport var castGradConfig = {\n  kernelName: Cast,\n  gradFunc: function gradFunc(dy) {\n    return {\n      x: function x() {\n        return dy.clone();\n      }\n    };\n  }\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Ceil } from '../kernel_names';\nimport { zerosLike } from '../ops/zeros_like';\nexport var ceilGradConfig = {\n  kernelName: Ceil,\n  gradFunc: function gradFunc(dy) {\n    // TODO(manrajgrover): Return null for gradients when backprop supports it.\n    return {\n      x: function x() {\n        return zerosLike(dy);\n      }\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ClipByValue } from '../kernel_names';\nimport { greaterEqual } from '../ops/greater_equal';\nimport { lessEqual } from '../ops/less_equal';\nimport { logicalAnd } from '../ops/logical_and';\nimport { where } from '../ops/where';\nimport { zerosLike } from '../ops/zeros_like';\nexport var clipByValueGradConfig = {\n  kernelName: ClipByValue,\n  inputsToSave: ['x'],\n  gradFunc: function gradFunc(dy, saved, attrs) {\n    var _saved = _slicedToArray(saved, 1),\n        _x = _saved[0];\n\n    var clipValueMin = attrs.clipValueMin,\n        clipValueMax = attrs.clipValueMax;\n    return {\n      x: function x() {\n        return where(logicalAnd(greaterEqual(_x, clipValueMin), lessEqual(_x, clipValueMax)), dy, zerosLike(dy));\n      }\n    };\n  }\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ComplexAbs } from '../kernel_names';\nimport { absGradConfig } from './Abs_grad';\nexport var complexAbsGradConfig = {\n  kernelName: ComplexAbs,\n  inputsToSave: ['x'],\n  gradFunc: absGradConfig.gradFunc\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Concat } from '../kernel_names';\nimport { split } from '../ops/split';\nimport { parseAxisParam } from '../util';\nexport var concatGradConfig = {\n  kernelName: Concat,\n  saveAllInputs: true,\n  gradFunc: function gradFunc(dy, saved, attrs) {\n    var shapes = saved.map(function (t) {\n      return t.shape;\n    });\n    var axis = attrs.axis;\n    var $axis = parseAxisParam(axis, saved[0].shape)[0];\n    var sizeSplits = shapes.map(function (s) {\n      return s[$axis];\n    });\n    var derTensors = split(dy, sizeSplits, $axis);\n    return derTensors.map(function (t) {\n      return function () {\n        return t;\n      };\n    });\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Conv2D } from '../kernel_names';\nimport { conv2DBackpropFilter } from '../ops/conv2d_backprop_filter';\nimport { conv2DBackpropInput } from '../ops/conv2d_backprop_input';\nimport * as conv_util from '../ops/conv_util';\nimport * as util from '../util';\nexport var conv2DGradConfig = {\n  kernelName: Conv2D,\n  inputsToSave: ['x', 'filter'],\n  gradFunc: function gradFunc(dy, saved, attrs) {\n    var _saved = _slicedToArray(saved, 2),\n        x4D = _saved[0],\n        $filter = _saved[1];\n\n    var dilations = attrs.dilations,\n        strides = attrs.strides,\n        pad = attrs.pad,\n        dataFormat = attrs.dataFormat;\n    util.assert(conv_util.tupleValuesAreOne(dilations), function () {\n      return 'Error in gradient of conv2D: dilation rates greater than 1 ' + \"are not yet supported in gradients. Got dilations '\".concat(dilations, \"'\");\n    });\n    return {\n      x: function x() {\n        return conv2DBackpropInput(x4D.shape, dy, $filter, strides, pad, dataFormat);\n      },\n      filter: function filter() {\n        return conv2DBackpropFilter(x4D, dy, $filter.shape, strides, pad, dataFormat);\n      }\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Conv2DBackpropInput } from '../kernel_names';\nimport { conv2d } from '../ops/conv2d';\nimport { conv2DBackpropFilter } from '../ops/conv2d_backprop_filter';\nexport var conv2DBackpropInputGradConfig = {\n  kernelName: Conv2DBackpropInput,\n  inputsToSave: ['dy', 'filter'],\n  gradFunc: function gradFunc(ddx, saved, attrs) {\n    var _saved = _slicedToArray(saved, 2),\n        dy = _saved[0],\n        _filter = _saved[1];\n\n    var strides = attrs.strides,\n        pad = attrs.pad,\n        dataFormat = attrs.dataFormat,\n        dimRoundingMode = attrs.dimRoundingMode;\n    return {\n      dy: function dy() {\n        return conv2d(ddx, _filter, strides, pad, dataFormat, 1\n        /* dilations */\n        , dimRoundingMode);\n      },\n      filter: function filter() {\n        return conv2DBackpropFilter(ddx, dy, _filter.shape, strides, pad, dataFormat, dimRoundingMode);\n      }\n    };\n  }\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Conv3DBackpropFilterV2 } from '../kernel_names';\nimport * as util from '../util';\nimport { op } from './operation';\nimport { reshape } from './reshape';\n/**\n * Computes the derivative of the filter of a 3D convolution.\n *\n * @param x The input tensor, of rank 5 or rank 4 of shape\n *     [batch, depth, height, width, inChannels]. If rank 4, batch of 1 is\n *     assumed.\n * @param dy The dy image, of rank 5 or rank 4, of shape\n *     [batch, depth, height, width, outDepth]. If rank 4, batch of 1 is\n *     assumed.\n * @param filterShape The shape of the filter, length 5,\n *     [filterDepth, filterHeight, filterWidth, inDepth, outDepth].\n * @param strides The strides of the convolution: [strideDepth, strideHeight,\n * strideWidth].\n * @param pad A string from: 'same', 'valid'. The type of padding algorithm\n *     used in the forward prop of the op.\n */\n\nfunction conv3DBackpropFilter_(x, dy, filterShape, strides, pad) {\n  var x5D = x;\n\n  if (x.rank === 4) {\n    x5D = reshape(x, [1, x.shape[0], x.shape[1], x.shape[2], x.shape[3]]);\n  }\n\n  var dy5D = dy;\n\n  if (dy5D.rank === 4) {\n    dy5D = reshape(dy, [1, dy.shape[0], dy.shape[1], dy.shape[2], dy.shape[3]]);\n  }\n\n  util.assert(x5D.rank === 5, function () {\n    return \"Error in conv3dDerFilter: input must be rank 5, but got shape \" + \"\".concat(x5D.shape, \".\");\n  });\n  util.assert(dy5D.rank === 5, function () {\n    return \"Error in conv3dDerFilter: dy must be rank 5, but got shape \" + \"\".concat(dy5D.shape, \".\");\n  });\n  util.assert(filterShape.length === 5, function () {\n    return \"Error in conv3dDerFilter: filterShape must be length 5, but got \" + \"\".concat(filterShape, \".\");\n  });\n  util.assert(x5D.shape[4] === filterShape[3], function () {\n    return \"Error in conv3dDerFilter: depth of input \".concat(x5D.shape[4], \") must \") + \"match input depth in filter (\".concat(filterShape[3], \".\");\n  });\n  util.assert(dy5D.shape[4] === filterShape[4], function () {\n    return \"Error in conv3dDerFilter: depth of dy (\".concat(dy5D.shape[4], \") must \") + \"match output depth for filter (\".concat(filterShape[4], \").\");\n  });\n  var inputs = {\n    x: x5D,\n    dy: dy5D\n  };\n  var attrs = {\n    strides: strides,\n    pad: pad,\n    filterShape: filterShape\n  }; // tslint:disable-next-line: no-unnecessary-type-assertion\n\n  return ENGINE.runKernel(Conv3DBackpropFilterV2, inputs, attrs);\n}\n\nexport var conv3DBackpropFilter = op({\n  conv3DBackpropFilter_: conv3DBackpropFilter_\n});","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Conv3D } from '../kernel_names';\nimport { conv3DBackpropFilter } from '../ops/conv3d_backprop_filter';\nimport { conv3DBackpropInput } from '../ops/conv3d_backprop_input';\nimport { tupleValuesAreOne } from '../ops/conv_util';\nimport * as util from '../util';\nexport var conv3DGradConfig = {\n  kernelName: Conv3D,\n  inputsToSave: ['x', 'filter'],\n  gradFunc: function gradFunc(dy, saved, attrs) {\n    var dilations = attrs.dilations,\n        strides = attrs.strides,\n        pad = attrs.pad;\n    util.assert(tupleValuesAreOne(dilations), function () {\n      return 'Error in gradient of conv3D: dilation rates greater than 1 are ' + \"not yet supported in gradients. Got dilations '\".concat(dilations, \"'\");\n    });\n\n    var _saved = _slicedToArray(saved, 2),\n        x5D = _saved[0],\n        $filter = _saved[1];\n\n    return {\n      x: function x() {\n        return conv3DBackpropInput(x5D.shape, dy, $filter, strides, pad);\n      },\n      filter: function filter() {\n        return conv3DBackpropFilter(x5D, dy, $filter.shape, strides, pad);\n      }\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Cos } from '../kernel_names';\nimport { cast } from '../ops/cast';\nimport { mul } from '../ops/mul';\nimport { neg } from '../ops/neg';\nimport { sin } from '../ops/sin';\nexport var cosGradConfig = {\n  kernelName: Cos,\n  inputsToSave: ['x'],\n  gradFunc: function gradFunc(dy, saved) {\n    var _saved = _slicedToArray(saved, 1),\n        _x = _saved[0];\n\n    return {\n      x: function x() {\n        return mul(neg(sin(cast(_x, 'float32'))), dy);\n      }\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Cosh } from '../kernel_names';\nimport { cast } from '../ops/cast';\nimport { mul } from '../ops/mul';\nimport { sinh } from '../ops/sinh';\nexport var coshGradConfig = {\n  kernelName: Cosh,\n  inputsToSave: ['x'],\n  gradFunc: function gradFunc(dy, saved) {\n    var _saved = _slicedToArray(saved, 1),\n        _x = _saved[0];\n\n    return {\n      x: function x() {\n        return mul(sinh(cast(_x, 'float32')), dy);\n      }\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Cumsum } from '../kernel_names';\nimport { getAxesPermutation } from '../ops/axis_util';\nimport { cumsum } from '../ops/cumsum';\nimport { transpose } from '../ops/transpose';\nexport var cumsumGradConfig = {\n  kernelName: Cumsum,\n  inputsToSave: ['x'],\n  gradFunc: function gradFunc(dy, saved, attrs) {\n    var _saved = _slicedToArray(saved, 1),\n        _x = _saved[0];\n\n    var axis = attrs.axis,\n        exclusive = attrs.exclusive,\n        reverse = attrs.reverse;\n    return {\n      x: function x() {\n        var permutation = getAxesPermutation([axis], _x.rank);\n        var out = cumsum(dy, axis, exclusive, !reverse);\n\n        if (permutation != null) {\n          out = transpose(out, permutation);\n        }\n\n        return out;\n      }\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { DepthwiseConv2dNative } from '../kernel_names';\nimport * as conv_util from '../ops/conv_util';\nimport { depthwiseConv2dNativeBackpropFilter } from '../ops/depthwise_conv2d_native_backprop_filter';\nimport { depthwiseConv2dNativeBackpropInput } from '../ops/depthwise_conv2d_native_backprop_input';\nimport * as util from '../util';\nexport var depthwiseConv2dNativeGradConfig = {\n  kernelName: DepthwiseConv2dNative,\n  inputsToSave: ['x', 'filter'],\n  gradFunc: function gradFunc(dy, saved, attrs) {\n    var dilations = attrs.dilations,\n        strides = attrs.strides,\n        pad = attrs.pad,\n        dimRoundingMode = attrs.dimRoundingMode;\n    var $dilations = dilations == null ? [1, 1] : dilations;\n    util.assert(conv_util.tupleValuesAreOne($dilations), function () {\n      return 'Error in gradient of depthwiseConv2dNative: dilation rates ' + \"greater than 1 are not yet supported. Got dilations \" + \"'\".concat($dilations, \"'\");\n    });\n\n    var _saved = _slicedToArray(saved, 2),\n        _x = _saved[0],\n        _filter = _saved[1];\n\n    util.assert(_x.rank === 4, function () {\n      return \"Error in gradient of depthwiseConv2dNative: input must be \" + \"rank 4, but got rank \".concat(_x.rank, \".\");\n    });\n    util.assert(_filter.rank === 4, function () {\n      return \"Error in gradient of depthwiseConv2dNative: filter must be \" + \"rank 4, but got rank \".concat(_filter.rank, \".\");\n    });\n    util.assert(_x.shape[3] === _filter.shape[2], function () {\n      return \"Error in gradient of depthwiseConv2d: number of input \" + \"channels (\".concat(_x.shape[3], \") must match the inChannels dimension \") + \"in filter \".concat(_filter.shape[2], \".\");\n    });\n    util.assert(conv_util.eitherStridesOrDilationsAreOne(strides, $dilations), function () {\n      return 'Error in gradient of depthwiseConv2d: Either strides or ' + \"dilations must be  1. Got strides \".concat(strides, \" and dilations \") + \"'\".concat($dilations, \"'.\");\n    });\n\n    if (dimRoundingMode != null) {\n      util.assert(util.isInt(pad), function () {\n        return \"Error in depthwiseConv2d: pad must be an integer when using, \" + \"dimRoundingMode \".concat(dimRoundingMode, \" but got pad \").concat(pad, \".\");\n      });\n    }\n\n    return {\n      x: function x() {\n        return depthwiseConv2dNativeBackpropInput(_x.shape, dy, _filter, strides, pad, dilations, dimRoundingMode);\n      },\n      filter: function filter() {\n        return depthwiseConv2dNativeBackpropFilter(_x, dy, _filter.shape, strides, pad, dilations, dimRoundingMode);\n      }\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Dilation2D, Dilation2DBackpropFilter, Dilation2DBackpropInput } from '../kernel_names';\nexport var dilation2dGradConfig = {\n  kernelName: Dilation2D,\n  inputsToSave: ['x', 'filter'],\n  gradFunc: function gradFunc(dy, saved, attrs) {\n    var _saved = _slicedToArray(saved, 2),\n        x = _saved[0],\n        filter = _saved[1];\n\n    var inputInputs = {\n      x: x,\n      filter: filter,\n      dy: dy\n    };\n    var filterInputs = {\n      x: x,\n      filter: filter,\n      dy: dy\n    };\n    return {\n      x: function x() {\n        return ENGINE.runKernel(Dilation2DBackpropInput, inputInputs, attrs);\n      },\n      filter: function filter() {\n        return ENGINE.runKernel(Dilation2DBackpropFilter, filterInputs, attrs);\n      }\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Elu, EluGrad } from '../kernel_names';\nexport var eluGradConfig = {\n  kernelName: Elu,\n  outputsToSave: [true],\n  gradFunc: function gradFunc(dy, saved) {\n    var _saved = _slicedToArray(saved, 1),\n        y = _saved[0];\n\n    var inputs = {\n      dy: dy,\n      y: y\n    };\n    return {\n      x: function x() {\n        return ENGINE.runKernel(EluGrad, inputs);\n      }\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Erf } from '../kernel_names';\nimport { exp } from '../ops/exp';\nimport { mul } from '../ops/mul';\nimport { neg } from '../ops/neg';\nimport { square } from '../ops/square';\nexport var erfGradConfig = {\n  kernelName: Erf,\n  inputsToSave: ['x'],\n  gradFunc: function gradFunc(dy, saved) {\n    var _saved = _slicedToArray(saved, 1),\n        x = _saved[0];\n\n    var a = mul(exp(neg(square(x))), 2 / Math.sqrt(Math.PI));\n    return {\n      x: function x() {\n        return mul(dy, a);\n      }\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Exp } from '../kernel_names';\nimport { mul } from '../ops/mul';\nexport var expGradConfig = {\n  kernelName: Exp,\n  outputsToSave: [true],\n  gradFunc: function gradFunc(dy, saved) {\n    var _saved = _slicedToArray(saved, 1),\n        y = _saved[0];\n\n    return {\n      x: function x() {\n        return mul(dy, y);\n      }\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ExpandDims } from '../kernel_names';\nimport { reshape } from '../ops/reshape';\nexport var expandDimsGradConfig = {\n  kernelName: ExpandDims,\n  inputsToSave: ['input'],\n  gradFunc: function gradFunc(dy, saved) {\n    var _saved = _slicedToArray(saved, 1),\n        _input = _saved[0];\n\n    return {\n      input: function input() {\n        return reshape(dy, _input.shape);\n      }\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Expm1 } from '../kernel_names';\nimport { exp } from '../ops/exp';\nimport { mul } from '../ops/mul';\nexport var expm1GradConfig = {\n  kernelName: Expm1,\n  inputsToSave: ['x'],\n  gradFunc: function gradFunc(dy, saved) {\n    var _saved = _slicedToArray(saved, 1),\n        _x = _saved[0];\n\n    return {\n      x: function x() {\n        return mul(dy, exp(_x));\n      }\n    };\n  }\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Floor } from '../kernel_names';\nimport { zerosLike } from '../ops/zeros_like';\nexport var floorGradConfig = {\n  kernelName: Floor,\n  gradFunc: function gradFunc(dy) {\n    return {\n      x: function x() {\n        return zerosLike(dy);\n      }\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { FloorDiv } from '../kernel_names';\nimport { assertAndGetBroadcastShape, getReductionAxes } from '../ops/broadcast_util';\nimport { cast } from '../ops/cast';\nimport { div } from '../ops/div';\nimport { mul } from '../ops/mul';\nimport { neg } from '../ops/neg';\nimport { reshape } from '../ops/reshape';\nimport { square } from '../ops/square';\nimport { sum } from '../ops/sum';\nexport var floorDivGradConfig = {\n  kernelName: FloorDiv,\n  inputsToSave: ['a', 'b'],\n  gradFunc: function gradFunc(dy, saved) {\n    var _saved = _slicedToArray(saved, 2),\n        a = _saved[0],\n        b = _saved[1];\n\n    var outShape = assertAndGetBroadcastShape(a.shape, b.shape);\n\n    var derA = function derA() {\n      var res = div(dy, cast(b, 'float32'));\n      var reduceAxes = getReductionAxes(a.shape, outShape);\n\n      if (reduceAxes.length > 0) {\n        return reshape(sum(res, reduceAxes), a.shape);\n      }\n\n      return res;\n    };\n\n    var derB = function derB() {\n      var res = mul(dy, cast(a, 'float32'));\n      var reduceAxes = getReductionAxes(b.shape, outShape);\n\n      if (reduceAxes.length > 0) {\n        res = reshape(sum(res, reduceAxes), b.shape);\n      }\n\n      var tmp = square(b);\n      return neg(div(res, cast(tmp, 'float32')));\n    };\n\n    return {\n      a: derA,\n      b: derB\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { FusedBatchNorm } from '../kernel_names';\nimport { add } from '../ops/add';\nimport { getReductionAxes } from '../ops/broadcast_util';\nimport { mul } from '../ops/mul';\nimport { reshape } from '../ops/reshape';\nimport { rsqrt } from '../ops/rsqrt';\nimport { scalar } from '../ops/scalar';\nimport { sub } from '../ops/sub';\nimport { sum } from '../ops/sum';\nimport { tile } from '../ops/tile';\nexport var fusedBatchNormGradConfig = {\n  kernelName: FusedBatchNorm,\n  inputsToSave: ['x', 'mean', 'variance', 'scale'],\n  gradFunc: function gradFunc(dy, saved, attrs) {\n    var varianceEpsilon = attrs.varianceEpsilon;\n\n    var _saved = _slicedToArray(saved, 4),\n        x = _saved[0],\n        mean = _saved[1],\n        variance = _saved[2],\n        scale = _saved[3];\n\n    var scaleValue = scale == null ? scalar(1) : scale;\n    var reductionAxes = getReductionAxes(mean.shape, x.shape);\n    var tileShape = [];\n\n    if (mean.rank === 1) {\n      for (var i = 0; i < x.shape.length - 1; ++i) {\n        tileShape.push(x.shape[i]);\n      }\n\n      tileShape.push(1);\n    }\n\n    var xMinusMean = sub(x, mean);\n    var dyTimesScaleValue = mul(dy, scaleValue);\n    var oneOverSqrtVariance = rsqrt(add(variance, scalar(varianceEpsilon)));\n    var minusHalfRCube = mul(mul(mul(oneOverSqrtVariance, oneOverSqrtVariance), oneOverSqrtVariance), scalar(-0.5));\n\n    var derX = function derX() {\n      if (mean.rank === 1) {\n        return reshape(mul(mul(dy, tile(reshape(oneOverSqrtVariance, [1, 1, 1, mean.shape[0]]), tileShape)), scaleValue), x.shape);\n      } else {\n        return reshape(mul(mul(dy, oneOverSqrtVariance), scaleValue), x.shape);\n      }\n    };\n\n    var derMean = function derMean() {\n      var meanDer = mul(mul(oneOverSqrtVariance, scalar(-1)), dyTimesScaleValue);\n\n      if (mean.rank === 1) {\n        meanDer = sum(meanDer, reductionAxes);\n      }\n\n      return reshape(meanDer, mean.shape);\n    };\n\n    var derVariance = function derVariance() {\n      var varianceDer = mul(mul(minusHalfRCube, xMinusMean), dyTimesScaleValue);\n\n      if (mean.rank === 1) {\n        varianceDer = sum(varianceDer, reductionAxes);\n      }\n\n      return reshape(varianceDer, mean.shape);\n    };\n\n    var derScale = function derScale() {\n      var xMinusMean2TimesRsqrt = mul(xMinusMean, oneOverSqrtVariance);\n      var scaleDer = mul(dy, xMinusMean2TimesRsqrt);\n\n      if (mean.rank === 1) {\n        scaleDer = sum(scaleDer, reductionAxes);\n      }\n\n      return reshape(scaleDer, mean.shape);\n    };\n\n    var derOffset = function derOffset() {\n      var offsetDer = dy;\n\n      if (mean.rank === 1) {\n        offsetDer = sum(offsetDer, reductionAxes);\n      }\n\n      return reshape(offsetDer, mean.shape);\n    };\n\n    return {\n      x: derX,\n      mean: derMean,\n      variance: derVariance,\n      scale: derScale,\n      offset: derOffset\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { GatherV2 } from '../kernel_names';\nimport { getUndoAxesPermutation } from '../ops/axis_util';\nimport { reshape } from '../ops/reshape';\nimport { transpose } from '../ops/transpose';\nimport { unsortedSegmentSum } from '../ops/unsorted_segment_sum';\nimport { parseAxisParam } from '../util';\nexport var gatherGradConfig = {\n  kernelName: GatherV2,\n  inputsToSave: ['x', 'indices'],\n  gradFunc: function gradFunc(dy, saved, attrs) {\n    var _saved = _slicedToArray(saved, 2),\n        x = _saved[0],\n        _indices = _saved[1];\n\n    var axis = attrs.axis;\n    var parsedAxis = parseAxisParam(axis, x.shape)[0];\n\n    var derX = function derX() {\n      var paramsShape = x.shape;\n      var indicesSize = _indices.size;\n      var outerShape = paramsShape.slice(0, parsedAxis);\n      var outerDims = outerShape.length;\n      var innerShape = paramsShape.slice(axis, paramsShape.length).slice(1);\n      var innerDims = innerShape.length;\n      var outerAxesIndices = arrayRange(0, outerDims);\n      var innerAxesIndices = arrayRange(outerDims + 1, outerDims + 1 + innerDims);\n      var valuesShape = arrayConcat([outerShape, [indicesSize], innerShape]);\n      var values = reshape(dy, valuesShape);\n      var reshapedIndices = reshape(_indices, [indicesSize]);\n      var transposeDims = arrayConcat([[outerDims], outerAxesIndices, innerAxesIndices]);\n      var valuesTranspose = transpose(values, transposeDims);\n      var paramsGrad = unsortedSegmentSum(valuesTranspose, reshapedIndices, x.shape[parsedAxis]);\n      var invertTransposeDims = getUndoAxesPermutation(transposeDims);\n      paramsGrad = transpose(paramsGrad, invertTransposeDims);\n      return paramsGrad;\n    };\n\n    return {\n      x: derX,\n      indices: function indices() {\n        return _indices;\n      }\n    };\n  }\n};\n\nfunction arrayRange(start, stop) {\n  var result = [];\n\n  for (var i = start; i < stop; ++i) {\n    result.push(i);\n  }\n\n  return result;\n}\n\nfunction arrayConcat(arrays) {\n  var result = [];\n\n  for (var i = 0; i < arrays.length; ++i) {\n    for (var j = 0; j < arrays[i].length; ++j) {\n      result.push(arrays[i][j]);\n    }\n  }\n\n  return result;\n}","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { GreaterEqual } from '../kernel_names';\nimport { zerosLike } from '../ops/zeros_like';\nexport var greaterEqualGradConfig = {\n  kernelName: GreaterEqual,\n  inputsToSave: ['a', 'b'],\n  gradFunc: function gradFunc(dy, saved) {\n    var _saved = _slicedToArray(saved, 2),\n        _a = _saved[0],\n        _b = _saved[1];\n\n    return {\n      a: function a() {\n        return zerosLike(_a);\n      },\n      b: function b() {\n        return zerosLike(_b);\n      }\n    };\n  }\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Identity } from '../kernel_names';\nimport { cast } from '../ops/cast';\nexport var identityGradConfig = {\n  kernelName: Identity,\n  gradFunc: function gradFunc(dy) {\n    return {\n      x: function x() {\n        return cast(dy, 'float32');\n      }\n    };\n  }\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { IsFinite } from '../kernel_names';\nimport { zerosLike } from '../ops/zeros_like';\nexport var isFiniteGradConfig = {\n  kernelName: IsFinite,\n  gradFunc: function gradFunc(dy) {\n    // TODO(nsthorat): Let gradients be null for cases where we want to stop\n    // backpropgation.\n    return {\n      x: function x() {\n        return zerosLike(dy);\n      }\n    };\n  }\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { IsInf } from '../kernel_names';\nimport { zerosLike } from '../ops/zeros_like';\nexport var isInfGradConfig = {\n  kernelName: IsInf,\n  gradFunc: function gradFunc(dy) {\n    // TODO(nsthorat): Let gradients be null for cases where we want to stop\n    // backpropgation.\n    return {\n      x: function x() {\n        return zerosLike(dy);\n      }\n    };\n  }\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { IsNan } from '../kernel_names';\nimport { zerosLike } from '../ops/zeros_like';\nexport var isNanGradConfig = {\n  kernelName: IsNan,\n  gradFunc: function gradFunc(dy) {\n    // TODO(nsthorat): Let gradients be null for cases where we want to stop\n    // backpropgation.\n    return {\n      x: function x() {\n        return zerosLike(dy);\n      }\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { LeakyRelu } from '../kernel_names';\nimport { greater } from '../ops/greater';\nimport { mul } from '../ops/mul';\nimport { where } from '../ops/where';\nexport var leakyReluGradConfig = {\n  kernelName: LeakyRelu,\n  inputsToSave: ['x'],\n  gradFunc: function gradFunc(dy, saved, attrs) {\n    var _saved = _slicedToArray(saved, 1),\n        x = _saved[0];\n\n    var alpha = attrs.alpha;\n    var mask = greater(x, 0); // Returns `gradients * (features > 0) + alpha * gradients * (features <=\n    // 0)`.\n\n    return {\n      x: function x() {\n        return where(mask, dy, mul(dy, alpha));\n      }\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Log1p } from '../kernel_names';\nimport { add } from '../ops/add';\nimport { div } from '../ops/div';\nexport var log1pGradConfig = {\n  kernelName: Log1p,\n  inputsToSave: ['x'],\n  gradFunc: function gradFunc(dy, saved) {\n    var _saved = _slicedToArray(saved, 1),\n        _x = _saved[0];\n\n    return {\n      x: function x() {\n        return div(dy, add(_x, 1));\n      }\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Log } from '../kernel_names';\nimport { cast } from '../ops/cast';\nimport { div } from '../ops/div';\nexport var logGradConfig = {\n  kernelName: Log,\n  inputsToSave: ['x'],\n  gradFunc: function gradFunc(dy, saved) {\n    var _saved = _slicedToArray(saved, 1),\n        _x = _saved[0];\n\n    return {\n      x: function x() {\n        return div(dy, cast(_x, 'float32'));\n      }\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { LogSoftmax } from '../kernel_names';\nimport { exp } from '../ops/exp';\nimport { mul } from '../ops/mul';\nimport { sub } from '../ops/sub';\nimport { sum } from '../ops/sum';\nexport var logSoftmaxGradConfig = {\n  kernelName: LogSoftmax,\n  inputsToSave: [],\n  outputsToSave: [true],\n  gradFunc: function gradFunc(dy, saved, attrs) {\n    var _saved = _slicedToArray(saved, 1),\n        value = _saved[0];\n\n    var axis = attrs.axis;\n    return {\n      logits: function logits() {\n        var keepDims = true;\n        var softmax = exp(value);\n        return sub(dy, mul(sum(dy, axis, keepDims), softmax));\n      }\n    };\n  }\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { LRNGrad } from '../kernel_names';\nimport { op } from './operation';\n\nfunction localResponseNormalizationBackprop_(x, y, dy) {\n  var depthRadius = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 5;\n  var bias = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n  var alpha = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 1;\n  var beta = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 0.5;\n  var inputs = {\n    x: x,\n    y: y,\n    dy: dy\n  };\n  var attrs = {\n    depthRadius: depthRadius,\n    bias: bias,\n    alpha: alpha,\n    beta: beta\n  };\n  return ENGINE.runKernel(LRNGrad, inputs, attrs);\n}\n\nexport var localResponseNormalizationBackprop = op({\n  localResponseNormalizationBackprop_: localResponseNormalizationBackprop_\n});","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { LRN } from '../kernel_names';\nimport { localResponseNormalizationBackprop } from '../ops/local_response_normalization_backprop';\nexport var lrnGradConfig = {\n  kernelName: LRN,\n  inputsToSave: ['x'],\n  outputsToSave: [true],\n  gradFunc: function gradFunc(dy, saved, attrs) {\n    var _saved = _slicedToArray(saved, 2),\n        _x = _saved[0],\n        y = _saved[1];\n\n    var depthRadius = attrs.depthRadius,\n        bias = attrs.bias,\n        alpha = attrs.alpha,\n        beta = attrs.beta;\n    return {\n      x: function x() {\n        return localResponseNormalizationBackprop(_x, y, dy, depthRadius, bias, alpha, beta);\n      }\n    };\n  }\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport * as axis_util from '../ops/axis_util';\nimport { cast } from '../ops/cast';\nimport { equal } from '../ops/equal';\nimport { mul } from '../ops/mul';\nimport { reshape } from '../ops/reshape';\n/**\n * Gradient helper function for the min and max operations.\n */\n\nexport function gradForMinAndMax(dy, y, xOrig, origAxes) {\n  if (y.rank < xOrig.rank) {\n    y = reshape(y, axis_util.expandShapeToKeepDim(y.shape, origAxes));\n  }\n\n  if (dy.rank < xOrig.rank) {\n    dy = reshape(dy, axis_util.expandShapeToKeepDim(dy.shape, origAxes));\n  }\n\n  return {\n    x: function x() {\n      var dx = mul(dy, cast(equal(xOrig, y), dy.dtype));\n      return dx;\n    }\n  };\n}","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Max } from '../kernel_names';\nimport * as util from '../util';\nimport { gradForMinAndMax } from './min_max_grad_util';\nexport var maxGradConfig = {\n  kernelName: Max,\n  inputsToSave: ['x'],\n  outputsToSave: [true],\n  gradFunc: function gradFunc(dy, saved, attrs) {\n    var maxAttrs = attrs;\n    var reductionIndices = maxAttrs.reductionIndices;\n    var x = saved[0];\n    var y = saved[1];\n    var origAxes = util.parseAxisParam(reductionIndices, x.shape);\n    var maxGrad = gradForMinAndMax(dy, y, x, origAxes);\n    return {\n      x: function x() {\n        return maxGrad['x']();\n      }\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Maximum } from '../kernel_names';\nimport { cast } from '../ops/cast';\nimport { greaterEqual } from '../ops/greater_equal';\nimport { less } from '../ops/less';\nimport { mul } from '../ops/mul';\nexport var maximumGradConfig = {\n  kernelName: Maximum,\n  inputsToSave: ['a', 'b'],\n  gradFunc: function gradFunc(dy, saved) {\n    var _saved = _slicedToArray(saved, 2),\n        a = _saved[0],\n        b = _saved[1];\n\n    var derA = function derA() {\n      return mul(dy, cast(greaterEqual(a, b), 'float32'));\n    };\n\n    var derB = function derB() {\n      return mul(dy, cast(less(a, b), 'float32'));\n    };\n\n    return {\n      a: derA,\n      b: derB\n    };\n  }\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { MaxPool3DGrad } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\nimport { reshape } from './reshape';\n/**\n * Computes the backprop of a 3d max pool.\n *\n * @param dy The dy error, of rank 5 of shape\n *     [batchSize, depth, height, width, channels].\n * assumed.\n * @param input The original input image, of rank 5 or rank 4 of shape\n *     [batchSize, depth, height, width, channels].\n * @param output The original output image, of rank 5 of shape\n *     [batchSize, outDepth, outHeight, outWidth, channels].\n * @param filterSize The filter size:\n *     `[filterDepth, filterHeight, filterWidth]`.\n *     `filterSize` is a single number,\n *     then `filterDepth == filterHeight == filterWidth`.\n * @param strides The strides of the pooling:\n *     `[strideDepth, strideHeight, strideWidth]`. If\n *     `strides` is a single number, then `strideHeight == strideWidth`.\n * @param pad A string from: 'same', 'valid'. The type of padding algorithm\n *     used in the forward prop of the op.\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n */\n\nfunction maxPool3dGrad_(dy, input, output, filterSize, strides, pad, dimRoundingMode) {\n  var $dy = convertToTensor(dy, 'dy', 'maxPool3dGrad');\n  var $input = convertToTensor(input, 'input', 'maxPool3dGrad');\n  var $output = convertToTensor(output, 'output', 'maxPool3dGrad');\n  var dy5D = $dy;\n  var input5D = $input;\n  var output5D = $output;\n  var reshapedTo5D = false;\n\n  if ($input.rank === 4) {\n    reshapedTo5D = true;\n    dy5D = reshape($dy, [1, $dy.shape[0], $dy.shape[1], $dy.shape[2], $dy.shape[3]]);\n    input5D = reshape($input, [1, $input.shape[0], $input.shape[1], $input.shape[2], $input.shape[3]]);\n    output5D = reshape($output, [1, $output.shape[0], $output.shape[1], $output.shape[2], $output.shape[3]]);\n  }\n\n  util.assert(dy5D.rank === 5, function () {\n    return \"Error in maxPool3dGrad: dy must be rank 5 but got rank \" + \"\".concat(dy5D.rank, \".\");\n  });\n  util.assert(input5D.rank === 5, function () {\n    return \"Error in maxPool3dGrad: input must be rank 5 but got rank \" + \"\".concat(input5D.rank, \".\");\n  });\n  util.assert(output5D.rank === 5, function () {\n    return \"Error in maxPool3dGrad: output must be rank 5 but got rank \" + \"\".concat(output5D.rank, \".\");\n  });\n\n  if (dimRoundingMode != null) {\n    util.assert(util.isInt(pad), function () {\n      return \"Error in maxPool3dGrad: pad must be an integer when \" + \"using, dimRoundingMode \".concat(dimRoundingMode, \" but got pad \").concat(pad, \".\");\n    });\n  }\n\n  var inputs = {\n    dy: dy5D,\n    input: input5D,\n    output: output5D\n  };\n  var attrs = {\n    filterSize: filterSize,\n    strides: strides,\n    pad: pad,\n    dimRoundingMode: dimRoundingMode\n  }; // tslint:disable-next-line: no-unnecessary-type-assertion\n\n  var res = ENGINE.runKernel(MaxPool3DGrad, inputs, attrs);\n\n  if (reshapedTo5D) {\n    return reshape(res, [res.shape[1], res.shape[2], res.shape[3], res.shape[4]]);\n  }\n\n  return res;\n}\n\nexport var maxPool3dGrad = op({\n  maxPool3dGrad_: maxPool3dGrad_\n});","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { MaxPool3D } from '../kernel_names';\nimport { maxPool3dGrad } from '../ops/max_pool_3d_grad';\nexport var maxPool3DGradConfig = {\n  kernelName: MaxPool3D,\n  inputsToSave: ['x'],\n  outputsToSave: [true],\n  gradFunc: function gradFunc(dy, saved, attrs) {\n    var _saved = _slicedToArray(saved, 2),\n        _x = _saved[0],\n        y = _saved[1];\n\n    var filterSize = attrs.filterSize,\n        strides = attrs.strides,\n        pad = attrs.pad,\n        dimRoundingMode = attrs.dimRoundingMode;\n    return {\n      x: function x() {\n        return maxPool3dGrad(dy, _x, y, filterSize, strides, pad, dimRoundingMode);\n      }\n    };\n  }\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { MaxPoolGrad } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\n/**\n * Computes the backprop of a 2D max pool.\n *\n * @param dy The dy error, of rank 4 or rank 3 of shape\n *     [batchSize, height, width, channels]. If rank 3, batch of 1 is\n * assumed.\n * @param input The original input image, of rank 4, of shape\n *     [batchSize, height, width, channels].\n * @param output The original output image, of rank 4, of shape\n *     [batchSize, outHeight, outWidth, channels].\n * @param filterSize The filter size: `[filterHeight, filterWidth]`. If\n *     `filterSize` is a single number, then `filterHeight == filterWidth`.\n * @param strides The strides of the pooling: `[strideHeight, strideWidth]`. If\n *     `strides` is a single number, then `strideHeight == strideWidth`.\n * @param pad A string from: 'same', 'valid'. The type of padding algorithm\n *     used in the forward prop of the op.\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n */\n\nfunction maxPoolGrad_(dy, input, output, filterSize, strides, pad, dimRoundingMode) {\n  var $dy = convertToTensor(dy, 'dy', 'maxPoolGrad');\n  var $input = convertToTensor(input, 'input', 'maxPoolGrad');\n  var $output = convertToTensor(output, 'output', 'maxPoolGrad');\n  util.assert($input.rank === $dy.rank, function () {\n    return \"Rank of input (\".concat($input.rank, \") does not match rank of dy \") + \"(\".concat($dy.rank, \")\");\n  });\n  util.assert($dy.rank === 4, function () {\n    return \"Error in maxPoolGrad: dy must be rank 4 but got rank \" + \"\".concat($dy.rank, \".\");\n  });\n  util.assert($input.rank === 4, function () {\n    return \"Error in maxPoolGrad: input must be rank 4 but got rank \" + \"\".concat($input.rank, \".\");\n  });\n\n  if (dimRoundingMode != null) {\n    util.assert(util.isInt(pad), function () {\n      return \"Error in maxPoolGrad: pad must be an integer when using, \" + \"dimRoundingMode \".concat(dimRoundingMode, \" but got pad \").concat(pad, \".\");\n    });\n  }\n\n  var inputs = {\n    dy: $dy,\n    input: $input,\n    output: $output\n  };\n  var attrs = {\n    filterSize: filterSize,\n    strides: strides,\n    pad: pad,\n    dimRoundingMode: dimRoundingMode\n  }; // tslint:disable-next-line: no-unnecessary-type-assertion\n\n  return ENGINE.runKernel(MaxPoolGrad, inputs, attrs);\n}\n\nexport var maxPoolGrad = op({\n  maxPoolGrad_: maxPoolGrad_\n});","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { MaxPool } from '../kernel_names';\nimport { maxPoolGrad } from '../ops/max_pool_grad';\nexport var maxPoolGradConfig = {\n  kernelName: MaxPool,\n  inputsToSave: ['x'],\n  outputsToSave: [true],\n  gradFunc: function gradFunc(dy, saved, attrs) {\n    var _saved = _slicedToArray(saved, 2),\n        _x = _saved[0],\n        y = _saved[1];\n\n    var filterSize = attrs.filterSize,\n        strides = attrs.strides,\n        pad = attrs.pad;\n    return {\n      x: function x() {\n        return maxPoolGrad(dy, _x, y, filterSize, strides, pad);\n      }\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Mean } from '../kernel_names';\nimport { computeOutAndReduceShapes } from '../ops/axis_util';\nimport { div } from '../ops/div';\nimport { mul } from '../ops/mul';\nimport { ones } from '../ops/ones';\nimport { reshape } from '../ops/reshape';\nimport * as util from '../util';\nexport var meanGradConfig = {\n  kernelName: Mean,\n  inputsToSave: ['x'],\n  gradFunc: function gradFunc(dy, saved, attrs) {\n    var _saved = _slicedToArray(saved, 1),\n        x = _saved[0];\n\n    var axis = attrs.axis;\n    var axes = util.parseAxisParam(axis, x.shape);\n    var shapes = computeOutAndReduceShapes(x.shape, axes);\n    var reduceShape = shapes[1];\n    var reduceSize = util.sizeFromShape(reduceShape);\n\n    var derX = function derX() {\n      var expandedDyShape = x.shape.slice();\n      axes.forEach(function (axis) {\n        expandedDyShape[axis] = 1;\n      });\n      var expandedDy = reshape(dy, expandedDyShape);\n      var res = div(mul(expandedDy, ones(x.shape, 'float32')), reduceSize);\n      return res;\n    };\n\n    return {\n      x: derX\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Min } from '../kernel_names';\nimport * as util from '../util';\nimport { gradForMinAndMax } from './min_max_grad_util';\nexport var minGradConfig = {\n  kernelName: Min,\n  inputsToSave: ['x'],\n  outputsToSave: [true],\n  gradFunc: function gradFunc(dy, saved, attrs) {\n    var minAttrs = attrs;\n    var axis = minAttrs.axis;\n\n    var _saved = _slicedToArray(saved, 2),\n        x = _saved[0],\n        y = _saved[1];\n\n    var origAxes = util.parseAxisParam(axis, x.shape);\n    var minGrad = gradForMinAndMax(dy, y, x, origAxes);\n    return {\n      x: function x() {\n        return minGrad['x']();\n      }\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Minimum } from '../kernel_names';\nimport { cast } from '../ops/cast';\nimport { greater } from '../ops/greater';\nimport { lessEqual } from '../ops/less_equal';\nimport { mul } from '../ops/mul';\nexport var minimumGradConfig = {\n  kernelName: Minimum,\n  inputsToSave: ['a', 'b'],\n  gradFunc: function gradFunc(dy, saved) {\n    var _saved = _slicedToArray(saved, 2),\n        a = _saved[0],\n        b = _saved[1];\n\n    var derA = function derA() {\n      return mul(dy, cast(lessEqual(a, b), 'float32'));\n    };\n\n    var derB = function derB() {\n      return mul(dy, cast(greater(a, b), 'float32'));\n    };\n\n    return {\n      a: derA,\n      b: derB\n    };\n  }\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { MirrorPad } from '../kernel_names';\nimport { slice } from '../ops/slice';\nexport var mirrorPadGradConfig = {\n  kernelName: MirrorPad,\n  inputsToSave: ['x'],\n  gradFunc: function gradFunc(dy, saved, attrs) {\n    // Pad introduces values around the original tensor, so the gradient\n    // slices the original shape out of the gradient.\n    var _x = saved[0];\n    var paddings = attrs.paddings;\n    var begin = paddings.map(function (p) {\n      return p[0];\n    });\n    return {\n      x: function x() {\n        return slice(dy, begin, _x.shape);\n      }\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Mod } from '../kernel_names';\nimport { assertAndGetBroadcastShape, getReductionAxes } from '../ops/broadcast_util';\nimport { div } from '../ops/div';\nimport { floor } from '../ops/floor';\nimport { mul } from '../ops/mul';\nimport { neg } from '../ops/neg';\nimport { reshape } from '../ops/reshape';\nimport { sum } from '../ops/sum';\nexport var modGradConfig = {\n  kernelName: Mod,\n  inputsToSave: ['a', 'b'],\n  gradFunc: function gradFunc(dy, saved) {\n    var _saved = _slicedToArray(saved, 2),\n        a = _saved[0],\n        b = _saved[1];\n\n    var outShape = assertAndGetBroadcastShape(a.shape, b.shape);\n\n    var derA = function derA() {\n      var reduceAxes = getReductionAxes(a.shape, outShape);\n\n      if (reduceAxes.length > 0) {\n        return reshape(sum(dy, reduceAxes), a.shape);\n      }\n\n      return dy;\n    };\n\n    var derB = function derB() {\n      var res = mul(dy, neg(floor(div(a, b))));\n      var reduceAxes = getReductionAxes(b.shape, outShape);\n\n      if (reduceAxes.length > 0) {\n        return reshape(sum(res, reduceAxes), b.shape);\n      }\n\n      return res;\n    };\n\n    return {\n      a: derA,\n      b: derB\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Multiply } from '../kernel_names';\nimport { assertAndGetBroadcastShape, getReductionAxes } from '../ops/broadcast_util';\nimport { cast } from '../ops/cast';\nimport { mul } from '../ops/mul';\nimport { reshape } from '../ops/reshape';\nimport { sum } from '../ops/sum';\nexport var multiplyGradConfig = {\n  kernelName: Multiply,\n  inputsToSave: ['a', 'b'],\n  gradFunc: function gradFunc(dy, saved) {\n    var _saved = _slicedToArray(saved, 2),\n        a = _saved[0],\n        b = _saved[1];\n\n    var outShape = assertAndGetBroadcastShape(a.shape, b.shape);\n\n    var derA = function derA() {\n      var res = mul(dy, cast(b, 'float32'));\n      var reduceAxes = getReductionAxes(a.shape, outShape);\n\n      if (reduceAxes.length > 0) {\n        return reshape(sum(res, reduceAxes), a.shape);\n      }\n\n      return res;\n    };\n\n    var derB = function derB() {\n      var res = mul(dy, cast(a, 'float32'));\n      var reduceAxes = getReductionAxes(b.shape, outShape);\n\n      if (reduceAxes.length > 0) {\n        return reshape(sum(res, reduceAxes), b.shape);\n      }\n\n      return res;\n    };\n\n    return {\n      a: derA,\n      b: derB\n    };\n  }\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Neg } from '../kernel_names';\nimport { neg } from '../ops/neg';\nexport var negGradConfig = {\n  kernelName: Neg,\n  gradFunc: function gradFunc(dy) {\n    return {\n      x: function x() {\n        return neg(dy);\n      }\n    };\n  }\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { OneHot } from '../kernel_names';\nimport { zeros } from '../ops/zeros';\nexport var oneHotGradConfig = {\n  kernelName: OneHot,\n  inputsToSave: ['indices'],\n  gradFunc: function gradFunc(dy, saved) {\n    var _indices = saved[0];\n    return {\n      indices: function indices() {\n        return zeros(_indices.shape, 'float32');\n      }\n    };\n  }\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { OnesLike } from '../kernel_names';\nimport { zerosLike } from '../ops/zeros_like';\nexport var onesLikeGradConfig = {\n  kernelName: OnesLike,\n  gradFunc: function gradFunc(dy) {\n    return {\n      x: function x() {\n        return zerosLike(dy);\n      }\n    };\n  }\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Pack } from '../kernel_names';\nimport { unstack } from '../ops/unstack';\nexport var packGradConfig = {\n  kernelName: Pack,\n  saveAllInputs: true,\n  gradFunc: function gradFunc(dy, saved, attrs) {\n    var axis = attrs.axis;\n    var derTensors = unstack(dy, axis);\n    return derTensors.map(function (t) {\n      return function () {\n        return t;\n      };\n    });\n  }\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { PadV2 } from '../kernel_names';\nimport { slice } from '../ops/slice';\nexport var padV2GradConfig = {\n  kernelName: PadV2,\n  inputsToSave: ['x'],\n  gradFunc: function gradFunc(dy, saved, attrs) {\n    // Pad introduces values around the original tensor, so the gradient\n    // slices the original shape out of the gradient.\n    var _x = saved[0];\n    var paddings = attrs.paddings;\n    var begin = paddings.map(function (p) {\n      return p[0];\n    });\n    return {\n      x: function x() {\n        return slice(dy, begin, _x.shape);\n      }\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Pow } from '../kernel_names';\nimport * as broadcast_util from '../ops/broadcast_util';\nimport { cast } from '../ops/cast';\nimport { greater } from '../ops/greater';\nimport { log } from '../ops/log';\nimport { mul } from '../ops/mul';\nimport { pow } from '../ops/pow';\nimport { reshape } from '../ops/reshape';\nimport { scalar } from '../ops/scalar';\nimport { sub } from '../ops/sub';\nimport { sum } from '../ops/sum';\nimport { where } from '../ops/where';\nimport { zerosLike } from '../ops/zeros_like';\nexport var powGradConfig = {\n  kernelName: Pow,\n  inputsToSave: ['a', 'b'],\n  outputsToSave: [true],\n  gradFunc: function gradFunc(dy, saved) {\n    var _saved = _slicedToArray(saved, 3),\n        a = _saved[0],\n        b = _saved[1],\n        y = _saved[2];\n\n    var base = a;\n    var exp = b;\n    var outShape = broadcast_util.assertAndGetBroadcastShape(base.shape, exp.shape);\n\n    var derBase = function derBase() {\n      var expFloat = cast(exp, 'float32');\n      var res = mul(dy, mul(expFloat, pow(base, sub(expFloat, scalar(1)))));\n      var reduceAxes = broadcast_util.getReductionAxes(base.shape, outShape);\n\n      if (reduceAxes.length > 0) {\n        res = sum(res, reduceAxes);\n      }\n\n      return reshape(res, base.shape);\n    };\n\n    var derExp = function derExp() {\n      var condition = greater(base, 0);\n      var logBase = where(condition, log(base), zerosLike(base));\n      var res = mul(dy, mul(y, logBase));\n      var reduceAxes = broadcast_util.getReductionAxes(exp.shape, outShape);\n\n      if (reduceAxes.length > 0) {\n        res = sum(res, reduceAxes);\n      }\n\n      return reshape(res, exp.shape);\n    };\n\n    return {\n      a: derBase,\n      b: derExp\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Prelu } from '../kernel_names';\nimport { getReductionAxes } from '../ops/broadcast_util';\nimport { greater } from '../ops/greater';\nimport { mul } from '../ops/mul';\nimport { reshape } from '../ops/reshape';\nimport { sum } from '../ops/sum';\nimport { where } from '../ops/where';\nimport { zerosLike } from '../ops/zeros_like';\nexport var preluGradConfig = {\n  kernelName: Prelu,\n  inputsToSave: ['x', 'alpha'],\n  gradFunc: function gradFunc(dy, saved) {\n    var _saved = _slicedToArray(saved, 2),\n        x = _saved[0],\n        _alpha = _saved[1];\n\n    var mask = greater(x, 0);\n    return {\n      x: function x() {\n        return where(mask, dy, mul(dy, _alpha));\n      },\n      alpha: function alpha() {\n        var res = where(mask, zerosLike(dy), mul(dy, x));\n        var reduceAxes = getReductionAxes(_alpha.shape, dy.shape);\n\n        if (reduceAxes.length > 0) {\n          res = sum(res, reduceAxes);\n        }\n\n        return reshape(res, _alpha.shape);\n      }\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { RealDiv } from '../kernel_names';\nimport * as broadcast_util from '../ops/broadcast_util';\nimport { cast } from '../ops/cast';\nimport { div } from '../ops/div';\nimport { mul } from '../ops/mul';\nimport { neg } from '../ops/neg';\nimport { reshape } from '../ops/reshape';\nimport { square } from '../ops/square';\nimport { sum } from '../ops/sum';\nexport var divGradConfig = {\n  kernelName: RealDiv,\n  inputsToSave: ['a', 'b'],\n  gradFunc: function gradFunc(dy, saved) {\n    var _saved = _slicedToArray(saved, 2),\n        a = _saved[0],\n        b = _saved[1];\n\n    var outShape = broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n\n    var derA = function derA() {\n      var res = div(dy, cast(b, 'float32'));\n      var reduceAxes = broadcast_util.getReductionAxes(a.shape, outShape);\n\n      if (reduceAxes.length > 0) {\n        return reshape(sum(res, reduceAxes), a.shape);\n      }\n\n      return res;\n    };\n\n    var derB = function derB() {\n      var res = mul(dy, cast(a, 'float32'));\n      var reduceAxes = broadcast_util.getReductionAxes(b.shape, outShape);\n\n      if (reduceAxes.length > 0) {\n        res = reshape(sum(res, reduceAxes), b.shape);\n      }\n\n      var tmp = square(b);\n      return neg(div(res, cast(tmp, 'float32')));\n    };\n\n    return {\n      a: derA,\n      b: derB\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Reciprocal } from '../kernel_names';\nimport { div } from '../ops/div';\nimport { neg } from '../ops/neg';\nimport { square } from '../ops/square';\nexport var reciprocalGradConfig = {\n  kernelName: Reciprocal,\n  inputsToSave: ['x'],\n  gradFunc: function gradFunc(dy, saved) {\n    var _saved = _slicedToArray(saved, 1),\n        _x = _saved[0];\n\n    return {\n      x: function x() {\n        return div(dy, neg(square(_x)));\n      }\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Relu6 } from '../kernel_names';\nimport { cast } from '../ops/cast';\nimport { lessEqual } from '../ops/less_equal';\nimport { mul } from '../ops/mul';\nimport { step } from '../ops/step';\nexport var relu6GradConfig = {\n  kernelName: Relu6,\n  inputsToSave: ['x'],\n  gradFunc: function gradFunc(dy, saved) {\n    var _saved = _slicedToArray(saved, 1),\n        x = _saved[0];\n\n    var mask = mul(lessEqual(x, 6), step(x));\n    return {\n      x: function x() {\n        return mul(dy, cast(mask, 'float32'));\n      }\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Relu } from '../kernel_names';\nimport { cast } from '../ops/cast';\nimport { mul } from '../ops/mul';\nimport { step } from '../ops/step';\nexport var reluGradConfig = {\n  kernelName: Relu,\n  inputsToSave: ['x'],\n  gradFunc: function gradFunc(dy, saved) {\n    var _saved = _slicedToArray(saved, 1),\n        _x = _saved[0];\n\n    return {\n      x: function x() {\n        return mul(dy, cast(step(_x), 'float32'));\n      }\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Reshape } from '../kernel_names';\nimport { reshape } from '../ops/reshape';\nexport var reshapeGradConfig = {\n  kernelName: Reshape,\n  inputsToSave: ['x'],\n  gradFunc: function gradFunc(dy, saved) {\n    var _saved = _slicedToArray(saved, 1),\n        _x = _saved[0];\n\n    return {\n      x: function x() {\n        return reshape(dy, _x.shape);\n      }\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { ResizeBilinear, ResizeBilinearGrad } from '../kernel_names';\nexport var resizeBilinearGradConfig = {\n  kernelName: ResizeBilinear,\n  inputsToSave: ['images'],\n  gradFunc: function gradFunc(dy, saved, attrs) {\n    var _saved = _slicedToArray(saved, 1),\n        images = _saved[0];\n\n    var inputs = {\n      dy: dy,\n      images: images\n    };\n\n    var imagesDer = function imagesDer() {\n      return (// tslint:disable-next-line: no-unnecessary-type-assertion\n        ENGINE.runKernel(ResizeBilinearGrad, inputs, attrs)\n      );\n    };\n\n    return {\n      images: imagesDer\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { ResizeNearestNeighbor, ResizeNearestNeighborGrad } from '../kernel_names';\nexport var resizeNearestNeighborGradConfig = {\n  kernelName: ResizeNearestNeighbor,\n  inputsToSave: ['images'],\n  gradFunc: function gradFunc(dy, saved, attrs) {\n    var _saved = _slicedToArray(saved, 1),\n        images = _saved[0];\n\n    var inputs = {\n      dy: dy,\n      images: images\n    };\n\n    var imagesDer = function imagesDer() {\n      return (// tslint:disable-next-line: no-unnecessary-type-assertion\n        ENGINE.runKernel(ResizeNearestNeighborGrad, inputs, attrs)\n      );\n    };\n\n    return {\n      images: imagesDer\n    };\n  }\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Reverse } from '../kernel_names';\nimport { reverse } from '../ops/reverse';\nimport { parseAxisParam } from '../util';\nexport var reverseGradConfig = {\n  kernelName: Reverse,\n  gradFunc: function gradFunc(dy, saved, attrs) {\n    var dims = attrs.dims;\n    var axes = parseAxisParam(dims, dy.shape);\n    return {\n      x: function x() {\n        return reverse(dy, axes);\n      }\n    };\n  }\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Round } from '../kernel_names';\nimport { zerosLike } from '../ops/zeros_like';\nexport var roundGradConfig = {\n  kernelName: Round,\n  gradFunc: function gradFunc(dy) {\n    // TODO(nsthorat): Let gradients be null for cases where we want to stop\n    // backpropgation.\n    return {\n      x: function x() {\n        return zerosLike(dy);\n      }\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Rsqrt } from '../kernel_names';\nimport { div } from '../ops/div';\nimport { mul } from '../ops/mul';\nimport { neg } from '../ops/neg';\nimport { pow } from '../ops/pow';\nexport var rsqrtGradConfig = {\n  kernelName: Rsqrt,\n  inputsToSave: ['x'],\n  gradFunc: function gradFunc(dy, saved) {\n    var _saved = _slicedToArray(saved, 1),\n        _x = _saved[0];\n\n    return {\n      x: function x() {\n        return neg(div(dy, mul(pow(_x, 1.5), 2)));\n      }\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Select } from '../kernel_names';\nimport { cast } from '../ops/cast';\nimport { logicalNot } from '../ops/logical_not';\nimport { mul } from '../ops/mul';\nimport { zerosLike } from '../ops/zeros_like';\nexport var selectGradConfig = {\n  kernelName: Select,\n  inputsToSave: ['condition'],\n  gradFunc: function gradFunc(dy, saved) {\n    var _saved = _slicedToArray(saved, 1),\n        _condition = _saved[0];\n\n    return {\n      // TODO(julianoks): Return null for condition gradient\n      // when backprop supports it.\n      condition: function condition() {\n        return cast(zerosLike(_condition), 'float32');\n      },\n      t: function t() {\n        return mul(dy, cast(_condition, dy.dtype));\n      },\n      e: function e() {\n        return mul(dy, cast(logicalNot(_condition), dy.dtype));\n      }\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Selu } from '../kernel_names';\nimport { cast } from '../ops/cast';\nimport { exp } from '../ops/exp';\nimport { greater } from '../ops/greater';\nimport { mul } from '../ops/mul';\nimport { scalar } from '../ops/scalar';\nimport { SELU_SCALE, SELU_SCALEALPHA } from '../ops/selu_util';\nimport { where } from '../ops/where';\nexport var seluGradConfig = {\n  kernelName: Selu,\n  inputsToSave: ['x'],\n  gradFunc: function gradFunc(dy, saved) {\n    var _saved = _slicedToArray(saved, 1),\n        _x = _saved[0];\n\n    return {\n      x: function x() {\n        var mask = greater(_x, scalar(0));\n        var scaleAlpha = scalar(SELU_SCALEALPHA);\n        var scale = scalar(SELU_SCALE);\n        var greaterThanZeroDer = mul(dy, scale);\n        var lessEqualZeroDer = mul(mul(dy, scaleAlpha), exp(cast(_x, 'float32')));\n        return where(mask, greaterThanZeroDer, lessEqualZeroDer);\n      }\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Sigmoid } from '../kernel_names';\nimport { mul } from '../ops/mul';\nimport { scalar } from '../ops/scalar';\nimport { sub } from '../ops/sub';\nexport var sigmoidGradConfig = {\n  kernelName: Sigmoid,\n  outputsToSave: [true],\n  gradFunc: function gradFunc(dy, saved) {\n    var _saved = _slicedToArray(saved, 1),\n        y = _saved[0];\n\n    return {\n      x: function x() {\n        return mul(dy, mul(y, sub(scalar(1), y)));\n      }\n    };\n  }\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Sign } from '../kernel_names';\nimport { zerosLike } from '../ops/zeros_like';\nexport var signGradConfig = {\n  kernelName: Sign,\n  gradFunc: function gradFunc(dy) {\n    return {\n      x: function x() {\n        return zerosLike(dy);\n      }\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Sin } from '../kernel_names';\nimport { cast } from '../ops/cast';\nimport { cos } from '../ops/cos';\nimport { mul } from '../ops/mul';\nexport var sinGradConfig = {\n  kernelName: Sin,\n  inputsToSave: ['x'],\n  gradFunc: function gradFunc(dy, saved) {\n    var _saved = _slicedToArray(saved, 1),\n        _x = _saved[0];\n\n    return {\n      x: function x() {\n        return mul(cos(cast(_x, 'float32')), dy);\n      }\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Sinh } from '../kernel_names';\nimport { cast } from '../ops/cast';\nimport { cosh } from '../ops/cosh';\nimport { mul } from '../ops/mul';\nexport var sinhGradConfig = {\n  kernelName: Sinh,\n  inputsToSave: ['x'],\n  gradFunc: function gradFunc(dy, saved) {\n    var _saved = _slicedToArray(saved, 1),\n        _x = _saved[0];\n\n    return {\n      x: function x() {\n        return mul(cosh(cast(_x, 'float32')), dy);\n      }\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Slice } from '../kernel_names';\nimport { pad } from '../ops/pad';\nimport { parseSliceParams } from '../ops/slice_util';\nexport var sliceGradConfig = {\n  kernelName: Slice,\n  inputsToSave: ['x'],\n  gradFunc: function gradFunc(dy, saved, attrs) {\n    var _saved = _slicedToArray(saved, 1),\n        x = _saved[0];\n\n    var begin = attrs.begin,\n        size = attrs.size;\n    var inputShape = x.shape;\n\n    var _parseSliceParams = parseSliceParams(x, begin, size),\n        _parseSliceParams2 = _slicedToArray(_parseSliceParams, 2),\n        begin_ = _parseSliceParams2[0],\n        size_ = _parseSliceParams2[1]; // Create an Nx2 padding where the first column represents how many\n    // zeros are prepended (at start) for each dimension, and the second\n    // column indicates how many zeros are appended (at end).\n    // The number of zeros to append is the shape of the input\n    // elementwise-subtracted by both the begin vector and sizes vector.\n\n\n    var paddings = [];\n\n    for (var i = 0; i < dy.rank; i++) {\n      paddings.push([begin_[i], inputShape[i] - begin_[i] - size_[i]]);\n    }\n\n    return {\n      x: function x() {\n        return pad(dy, paddings);\n      }\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Softmax } from '../kernel_names';\nimport { mul } from '../ops/mul';\nimport { sub } from '../ops/sub';\nimport { sum } from '../ops/sum';\nexport var softmaxGradConfig = {\n  kernelName: Softmax,\n  outputsToSave: [true],\n  gradFunc: function gradFunc(dy, saved, attrs) {\n    var _saved = _slicedToArray(saved, 1),\n        y = _saved[0];\n\n    var dim = attrs.dim;\n    var keepDims = true;\n    var dyTimesY = mul(dy, y);\n    return {\n      logits: function logits() {\n        return sub(dyTimesY, mul(sum(dyTimesY, [dim], keepDims), y));\n      }\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Softplus } from '../kernel_names';\nimport { mul } from '../ops/mul';\nimport { sigmoid } from '../ops/sigmoid';\nexport var softplusGradConfig = {\n  kernelName: Softplus,\n  inputsToSave: ['x'],\n  gradFunc: function gradFunc(dy, saved) {\n    var _saved = _slicedToArray(saved, 1),\n        _x = _saved[0];\n\n    return {\n      x: function x() {\n        return mul(dy, sigmoid(_x));\n      }\n    };\n  }\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { SpaceToBatchND } from '../kernel_names';\nimport { batchToSpaceND } from '../ops/batch_to_space_nd';\nexport var spaceToBatchNDGradConfig = {\n  kernelName: SpaceToBatchND,\n  gradFunc: function gradFunc(dy, saved, attrs) {\n    var blockShape = attrs.blockShape,\n        paddings = attrs.paddings;\n    return {\n      x: function x() {\n        return batchToSpaceND(dy, blockShape, paddings);\n      }\n    };\n  }\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { SplitV } from '../kernel_names';\nimport { concat } from '../ops/concat';\nexport var splitVGradConfig = {\n  kernelName: SplitV,\n  gradFunc: function gradFunc(dy, saved, attrs) {\n    var axis = attrs.axis;\n    return {\n      x: function x() {\n        return concat(dy, axis);\n      }\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Sqrt } from '../kernel_names';\nimport { cast } from '../ops/cast';\nimport { div } from '../ops/div';\nimport { mul } from '../ops/mul';\nimport { sqrt } from '../ops/sqrt';\nexport var sqrtGradConfig = {\n  kernelName: Sqrt,\n  inputsToSave: ['x'],\n  gradFunc: function gradFunc(dy, saved) {\n    var _saved = _slicedToArray(saved, 1),\n        _x = _saved[0];\n\n    return {\n      x: function x() {\n        return div(dy, mul(sqrt(cast(_x, 'float32')), 2));\n      }\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Square } from '../kernel_names';\nimport { cast } from '../ops/cast';\nimport { mul } from '../ops/mul';\nexport var squareGradConfig = {\n  kernelName: Square,\n  inputsToSave: ['x'],\n  gradFunc: function gradFunc(dy, saved) {\n    var _saved = _slicedToArray(saved, 1),\n        _x = _saved[0];\n\n    return {\n      x: function x() {\n        return mul(dy, mul(cast(_x, 'float32'), 2));\n      }\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { SquaredDifference } from '../kernel_names';\nimport { mul } from '../ops/mul';\nimport { scalar } from '../ops/scalar';\nimport { sub } from '../ops/sub';\nexport var squaredDifferenceGradConfig = {\n  kernelName: SquaredDifference,\n  inputsToSave: ['a', 'b'],\n  gradFunc: function gradFunc(dy, saved) {\n    var _saved = _slicedToArray(saved, 2),\n        a = _saved[0],\n        b = _saved[1];\n\n    var two = scalar(2);\n\n    var derA = function derA() {\n      return mul(dy, mul(two, sub(a, b)));\n    };\n\n    var derB = function derB() {\n      return mul(dy, mul(two, sub(b, a)));\n    };\n\n    return {\n      a: derA,\n      b: derB\n    };\n  }\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Step } from '../kernel_names';\nimport { zerosLike } from '../ops/zeros_like';\nexport var stepGradConfig = {\n  kernelName: Step,\n  gradFunc: function gradFunc(dy) {\n    // TODO(manrajgrover): Return null for gradients when backprop supports\n    // it.\n    return {\n      x: function x() {\n        return zerosLike(dy);\n      }\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Sub } from '../kernel_names';\nimport * as broadcast_util from '../ops/broadcast_util';\nimport { neg } from '../ops/neg';\nimport { reshape } from '../ops/reshape';\nimport { sum } from '../ops/sum';\nexport var subGradConfig = {\n  kernelName: Sub,\n  inputsToSave: ['a', 'b'],\n  gradFunc: function gradFunc(dy, saved) {\n    var _saved = _slicedToArray(saved, 2),\n        a = _saved[0],\n        b = _saved[1];\n\n    var outShape = broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n\n    var derA = function derA() {\n      var res = dy;\n      var reduceAxes = broadcast_util.getReductionAxes(a.shape, outShape);\n\n      if (reduceAxes.length > 0) {\n        res = sum(res, reduceAxes);\n      }\n\n      return reshape(res, a.shape);\n    };\n\n    var derB = function derB() {\n      var res = dy;\n      var reduceAxes = broadcast_util.getReductionAxes(b.shape, outShape);\n\n      if (reduceAxes.length > 0) {\n        res = sum(res, reduceAxes);\n      }\n\n      return reshape(neg(res), b.shape);\n    };\n\n    return {\n      a: derA,\n      b: derB\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Sum } from '../kernel_names';\nimport { mul } from '../ops/mul';\nimport { ones } from '../ops/ones';\nimport { reshape } from '../ops/reshape';\nimport { parseAxisParam } from '../util';\nexport var sumGradConfig = {\n  kernelName: Sum,\n  inputsToSave: ['x'],\n  gradFunc: function gradFunc(dy, saved, attrs) {\n    var _saved = _slicedToArray(saved, 1),\n        x = _saved[0];\n\n    var expandedDyShape = x.shape.slice();\n    var axis = attrs.axis;\n    var axes = parseAxisParam(axis, x.shape);\n    axes.forEach(function (axis) {\n      expandedDyShape[axis] = 1;\n    });\n    var expandedDy = reshape(dy, expandedDyShape);\n    var derX = mul(expandedDy, ones(x.shape, 'float32'));\n    return {\n      x: function x() {\n        return derX;\n      }\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Tan } from '../kernel_names';\nimport { cos } from '../ops/cos';\nimport { div } from '../ops/div';\nimport { square } from '../ops/square';\nexport var tanGradConfig = {\n  kernelName: Tan,\n  inputsToSave: ['x'],\n  gradFunc: function gradFunc(dy, saved) {\n    var _saved = _slicedToArray(saved, 1),\n        _x = _saved[0];\n\n    return {\n      x: function x() {\n        return div(dy, square(cos(_x)));\n      }\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Tanh } from '../kernel_names';\nimport { mul } from '../ops/mul';\nimport { scalar } from '../ops/scalar';\nimport { square } from '../ops/square';\nimport { sub } from '../ops/sub';\nexport var tanhGradConfig = {\n  kernelName: Tanh,\n  outputsToSave: [true],\n  gradFunc: function gradFunc(dy, saved) {\n    var _saved = _slicedToArray(saved, 1),\n        y = _saved[0];\n\n    return {\n      x: function x() {\n        return mul(sub(scalar(1), square(y)), dy);\n      }\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Tile } from '../kernel_names';\nimport { add } from '../ops/add';\nimport { slice } from '../ops/slice';\nimport { zerosLike } from '../ops/zeros_like';\nexport var tileGradConfig = {\n  kernelName: Tile,\n  inputsToSave: ['x'],\n  gradFunc: function gradFunc(dy, saved, attrs) {\n    var _saved = _slicedToArray(saved, 1),\n        x = _saved[0];\n\n    var reps = attrs.reps;\n\n    var derX = function derX() {\n      var xGrad = zerosLike(x); // TODO(cais): Maybe reduce memory footprint by avoiding repeated\n      // slicing.\n\n      if (x.rank === 1) {\n        for (var i = 0; i < reps[0]; ++i) {\n          xGrad = add(xGrad, slice(dy, [i * x.shape[0]], [x.shape[0]]));\n        }\n      } else if (x.rank === 2) {\n        for (var _i = 0; _i < reps[0]; ++_i) {\n          for (var j = 0; j < reps[1]; ++j) {\n            xGrad = add(xGrad, slice(dy, [_i * x.shape[0], j * x.shape[1]], [x.shape[0], x.shape[1]]));\n          }\n        }\n      } else if (x.rank === 3) {\n        for (var _i2 = 0; _i2 < reps[0]; ++_i2) {\n          for (var _j = 0; _j < reps[1]; ++_j) {\n            for (var k = 0; k < reps[2]; ++k) {\n              xGrad = add(xGrad, slice(dy, [_i2 * x.shape[0], _j * x.shape[1], k * x.shape[2]], [x.shape[0], x.shape[1], x.shape[2]]));\n            }\n          }\n        }\n      } else if (x.rank === 4) {\n        for (var _i3 = 0; _i3 < reps[0]; ++_i3) {\n          for (var _j2 = 0; _j2 < reps[1]; ++_j2) {\n            for (var _k = 0; _k < reps[2]; ++_k) {\n              for (var l = 0; l < reps[3]; ++l) {\n                xGrad = add(xGrad, slice(dy, [_i3 * x.shape[0], _j2 * x.shape[1], _k * x.shape[2], l * x.shape[3]], [x.shape[0], x.shape[1], x.shape[2], x.shape[3]]));\n              }\n            }\n          }\n        }\n      } else {\n        throw new Error(\"Gradient for tile operation is not implemented for rank-\" + \"\".concat(x.rank, \" tensors yet.\"));\n      }\n\n      return xGrad;\n    };\n\n    return {\n      x: derX\n    };\n  }\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Transpose } from '../kernel_names';\nimport * as axis_util from '../ops/axis_util';\nimport { transpose } from '../ops/transpose';\nexport var transposeGradConfig = {\n  kernelName: Transpose,\n  gradFunc: function gradFunc(dy, saved, attrs) {\n    var transposeAttrs = attrs;\n    var perm = transposeAttrs.perm;\n    var undoPerm = axis_util.getUndoAxesPermutation(perm);\n    return {\n      x: function x() {\n        return transpose(dy, undoPerm);\n      }\n    };\n  }\n};","/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Unpack } from '../kernel_names';\nimport { stack } from '../ops/stack';\nexport var unpackGradConfig = {\n  kernelName: Unpack,\n  gradFunc: function gradFunc(dy, saved, attrs) {\n    var unpackAttrs = attrs;\n    var axis = unpackAttrs.axis;\n    return {\n      value: function value() {\n        return stack(dy, axis);\n      }\n    };\n  }\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { UnsortedSegmentSum } from '../kernel_names';\nimport { expandDims } from '../ops/expand_dims';\nimport { gather } from '../ops/gather';\nimport { greaterEqual } from '../ops/greater_equal';\nimport { logicalAnd } from '../ops/logical_and';\nimport { maximum } from '../ops/maximum';\nimport { ones } from '../ops/ones';\nimport { scalar } from '../ops/scalar';\nimport { where } from '../ops/where';\nimport { zerosLike } from '../ops/zeros_like';\nexport var unsortedSegmentSumGradConfig = {\n  kernelName: UnsortedSegmentSum,\n  inputsToSave: ['segmentIds'],\n  gradFunc: function gradFunc(dy, saved) {\n    var _saved = _slicedToArray(saved, 1),\n        segmentIds = _saved[0];\n\n    var derX = function derX() {\n      return gatherDropNegatives(dy, segmentIds);\n    };\n\n    return {\n      x: derX\n    };\n  }\n};\n\nfunction gatherDropNegatives(x, indices) {\n  // Helper function for unsorted segment ops. Gathers params for\n  // positive segment ids and gathers 0 for inputs with negative segment id.\n  // Mirrors _GatherDropNegatives from tensorflow/python/ops/math_grad.py\n  var zeroClippedIndices = maximum(indices, zerosLike(indices));\n  var gathered = gather(x, zeroClippedIndices);\n  var isPositive = greaterEqual(indices, scalar(0, 'int32'));\n  var numIters = gathered.rank - isPositive.rank;\n\n  for (var i = 0; i < numIters; ++i) {\n    isPositive = expandDims(isPositive, i + 1);\n  }\n\n  isPositive = logicalAnd(isPositive, ones(gathered.shape, 'bool'));\n  var zeroSlice = zerosLike(gathered);\n  return where(isPositive, gathered, zeroSlice);\n}","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { absGradConfig } from './gradients/Abs_grad';\nimport { acosGradConfig } from './gradients/Acos_grad';\nimport { acoshGradConfig } from './gradients/Acosh_grad';\nimport { addGradConfig } from './gradients/Add_grad';\nimport { addNGradConfig } from './gradients/AddN_grad';\nimport { argMaxGradConfig } from './gradients/ArgMax_grad';\nimport { argMinGradConfig } from './gradients/ArgMin_grad';\nimport { asinGradConfig } from './gradients/Asin_grad';\nimport { asinhGradConfig } from './gradients/Asinh_grad';\nimport { atan2GradConfig } from './gradients/Atan2_grad';\nimport { atanGradConfig } from './gradients/Atan_grad';\nimport { atanhGradConfig } from './gradients/Atanh_grad';\nimport { avgPool3DGradConfig } from './gradients/AvgPool3D_grad';\nimport { avgPoolGradConfig } from './gradients/AvgPool_grad';\nimport { batchMatMulGradConfig } from './gradients/BatchMatMul_grad';\nimport { batchToSpaceNDGradConfig } from './gradients/BatchToSpaceND_grad';\nimport { broadcastToGradConfig } from './gradients/BroadcastTo_grad';\nimport { castGradConfig } from './gradients/Cast_grad';\nimport { ceilGradConfig } from './gradients/Ceil_grad';\nimport { clipByValueGradConfig } from './gradients/ClipByValue_grad';\nimport { complexAbsGradConfig } from './gradients/ComplexAbs_grad';\nimport { concatGradConfig } from './gradients/Concat_grad';\nimport { conv2DGradConfig } from './gradients/Conv2D_grad';\nimport { conv2DBackpropInputGradConfig } from './gradients/Conv2DBackpropInput_grad';\nimport { conv3DGradConfig } from './gradients/Conv3D_grad';\nimport { cosGradConfig } from './gradients/Cos_grad';\nimport { coshGradConfig } from './gradients/Cosh_grad';\nimport { cumsumGradConfig } from './gradients/Cumsum_grad';\nimport { depthwiseConv2dNativeGradConfig } from './gradients/DepthwiseConv2dNative_grad';\nimport { dilation2dGradConfig } from './gradients/Dilation2D_grad';\nimport { eluGradConfig } from './gradients/Elu_grad';\nimport { erfGradConfig } from './gradients/Erf_grad';\nimport { expGradConfig } from './gradients/Exp_grad';\nimport { expandDimsGradConfig } from './gradients/ExpandDims_grad';\nimport { expm1GradConfig } from './gradients/Expm1_grad';\nimport { floorGradConfig } from './gradients/Floor_grad';\nimport { floorDivGradConfig } from './gradients/FloorDiv_grad';\nimport { fusedBatchNormGradConfig } from './gradients/FusedBatchNorm_grad';\nimport { gatherGradConfig } from './gradients/GatherV2_grad';\nimport { greaterEqualGradConfig } from './gradients/GreaterEqual_grad';\nimport { identityGradConfig } from './gradients/Identity_grad';\nimport { isFiniteGradConfig } from './gradients/IsFinite_grad';\nimport { isInfGradConfig } from './gradients/IsInf_grad';\nimport { isNanGradConfig } from './gradients/IsNan_grad';\nimport { leakyReluGradConfig } from './gradients/LeakyRelu_grad';\nimport { log1pGradConfig } from './gradients/Log1p_grad';\nimport { logGradConfig } from './gradients/Log_grad';\nimport { logSoftmaxGradConfig } from './gradients/LogSoftmax_grad';\nimport { lrnGradConfig } from './gradients/LRN_grad';\nimport { maxGradConfig } from './gradients/Max_grad';\nimport { maximumGradConfig } from './gradients/Maximum_grad';\nimport { maxPool3DGradConfig } from './gradients/MaxPool3D_grad';\nimport { maxPoolGradConfig } from './gradients/MaxPool_grad';\nimport { meanGradConfig } from './gradients/Mean_grad';\nimport { minGradConfig } from './gradients/Min_grad';\nimport { minimumGradConfig } from './gradients/Minimum_grad';\nimport { mirrorPadGradConfig } from './gradients/MirrorPad_grad';\nimport { modGradConfig } from './gradients/Mod_grad';\nimport { multiplyGradConfig } from './gradients/Multiply_grad';\nimport { negGradConfig } from './gradients/Neg_grad';\nimport { oneHotGradConfig } from './gradients/OneHot_grad';\nimport { onesLikeGradConfig } from './gradients/OnesLike_grad';\nimport { packGradConfig } from './gradients/Pack_grad';\nimport { padV2GradConfig } from './gradients/PadV2_grad';\nimport { powGradConfig } from './gradients/Pow_grad';\nimport { preluGradConfig } from './gradients/Prelu_grad';\nimport { divGradConfig } from './gradients/RealDiv_grad';\nimport { reciprocalGradConfig } from './gradients/Reciprocal_grad';\nimport { relu6GradConfig } from './gradients/Relu6_grad';\nimport { reluGradConfig } from './gradients/Relu_grad';\nimport { reshapeGradConfig } from './gradients/Reshape_grad';\nimport { resizeBilinearGradConfig } from './gradients/ResizeBilinear_grad';\nimport { resizeNearestNeighborGradConfig } from './gradients/ResizeNearestNeighbor_grad';\nimport { reverseGradConfig } from './gradients/Reverse_grad';\nimport { roundGradConfig } from './gradients/Round_grad';\nimport { rsqrtGradConfig } from './gradients/Rsqrt_grad';\nimport { selectGradConfig } from './gradients/Select_grad';\nimport { seluGradConfig } from './gradients/Selu_grad';\nimport { sigmoidGradConfig } from './gradients/Sigmoid_grad';\nimport { signGradConfig } from './gradients/Sign_grad';\nimport { sinGradConfig } from './gradients/Sin_grad';\nimport { sinhGradConfig } from './gradients/Sinh_grad';\nimport { sliceGradConfig } from './gradients/Slice_grad';\nimport { softmaxGradConfig } from './gradients/Softmax_grad';\nimport { softplusGradConfig } from './gradients/Softplus_grad';\nimport { spaceToBatchNDGradConfig } from './gradients/SpaceToBatchND_grad';\nimport { splitVGradConfig } from './gradients/SplitV_grad';\nimport { sqrtGradConfig } from './gradients/Sqrt_grad';\nimport { squareGradConfig } from './gradients/Square_grad';\nimport { squaredDifferenceGradConfig } from './gradients/SquaredDifference_grad';\nimport { stepGradConfig } from './gradients/Step_grad';\nimport { subGradConfig } from './gradients/Sub_grad';\nimport { sumGradConfig } from './gradients/Sum_grad';\nimport { tanGradConfig } from './gradients/Tan_grad';\nimport { tanhGradConfig } from './gradients/Tanh_grad';\nimport { tileGradConfig } from './gradients/Tile_grad';\nimport { transposeGradConfig } from './gradients/Transpose_grad';\nimport { unpackGradConfig } from './gradients/Unpack_grad';\nimport { unsortedSegmentSumGradConfig } from './gradients/UnsortedSegmentSum_grad';\nimport { zerosLikeGradConfig } from './gradients/ZerosLike_grad';\nimport { registerGradient } from './kernel_registry'; // Export all kernel configs here so that the package can auto register them\n\nvar gradConfigs = [absGradConfig, acosGradConfig, acoshGradConfig, addGradConfig, addNGradConfig, argMaxGradConfig, argMinGradConfig, asinGradConfig, asinhGradConfig, atan2GradConfig, atanGradConfig, atanhGradConfig, avgPool3DGradConfig, avgPoolGradConfig, batchMatMulGradConfig, batchToSpaceNDGradConfig, broadcastToGradConfig, castGradConfig, ceilGradConfig, clipByValueGradConfig, complexAbsGradConfig, concatGradConfig, conv2DBackpropInputGradConfig, conv2DGradConfig, conv3DGradConfig, cosGradConfig, coshGradConfig, cumsumGradConfig, depthwiseConv2dNativeGradConfig, dilation2dGradConfig, divGradConfig, eluGradConfig, erfGradConfig, expGradConfig, expandDimsGradConfig, expm1GradConfig, floorDivGradConfig, floorGradConfig, fusedBatchNormGradConfig, gatherGradConfig, greaterEqualGradConfig, identityGradConfig, isFiniteGradConfig, isInfGradConfig, isNanGradConfig, leakyReluGradConfig, log1pGradConfig, logGradConfig, logSoftmaxGradConfig, lrnGradConfig, maxGradConfig, maxGradConfig, maximumGradConfig, maxPool3DGradConfig, maxPoolGradConfig, meanGradConfig, minGradConfig, minimumGradConfig, mirrorPadGradConfig, modGradConfig, multiplyGradConfig, negGradConfig, oneHotGradConfig, onesLikeGradConfig, packGradConfig, padV2GradConfig, padV2GradConfig, powGradConfig, preluGradConfig, reciprocalGradConfig, relu6GradConfig, reluGradConfig, reshapeGradConfig, resizeBilinearGradConfig, resizeNearestNeighborGradConfig, reverseGradConfig, roundGradConfig, rsqrtGradConfig, selectGradConfig, seluGradConfig, sigmoidGradConfig, signGradConfig, sinGradConfig, sinhGradConfig, sliceGradConfig, softmaxGradConfig, softplusGradConfig, spaceToBatchNDGradConfig, spaceToBatchNDGradConfig, splitVGradConfig, splitVGradConfig, sqrtGradConfig, squaredDifferenceGradConfig, squareGradConfig, stepGradConfig, subGradConfig, sumGradConfig, tanGradConfig, tanhGradConfig, tileGradConfig, transposeGradConfig, unpackGradConfig, unsortedSegmentSumGradConfig, zerosLikeGradConfig];\n\nfor (var _i = 0, _gradConfigs = gradConfigs; _i < _gradConfigs.length; _i++) {\n  var gradientConfig = _gradConfigs[_i];\n  registerGradient(gradientConfig);\n}","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ZerosLike } from '../kernel_names';\nimport { zerosLike } from '../ops/zeros_like';\nexport var zerosLikeGradConfig = {\n  kernelName: ZerosLike,\n  gradFunc: function gradFunc(dy) {\n    return {\n      x: function x() {\n        return zerosLike(dy);\n      }\n    };\n  }\n};","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\nimport { backend } from '@tensorflow/tfjs-core';\n\nvar _epsilon;\n/**\n * Returns the value of the fuzz factor used in numeric expressions.\n */\n\n\nexport function epsilon() {\n  if (_epsilon == null) {\n    _epsilon = backend().epsilon();\n  }\n\n  return _epsilon;\n}\n/**\n * Sets the value of the fuzz factor used in numeric expressions.\n * @param e New value of epsilon.\n */\n\nexport function setEpsilon(e) {\n  _epsilon = e;\n}\n/**\n * Returns the default image data format convention.\n */\n\nexport function imageDataFormat() {\n  return 'channelsLast';\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _assertThisInitialized from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _wrapNativeSuper from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/**\n * Explicit error types.\n *\n * See the following link for more information about why the code includes\n * calls to setPrototypeOf:\n *\n * https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n */\n// tslint:enable\n\n/**\n * Equivalent of Python's AttributeError.\n */\nexport var AttributeError = /*#__PURE__*/function (_Error) {\n  _inherits(AttributeError, _Error);\n\n  var _super = _createSuper(AttributeError);\n\n  function AttributeError(message) {\n    var _this;\n\n    _classCallCheck(this, AttributeError);\n\n    _this = _super.call(this, message); // Set the prototype explicitly.\n\n    Object.setPrototypeOf(_assertThisInitialized(_this), AttributeError.prototype);\n    return _this;\n  }\n\n  return AttributeError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n/**\n * Equivalent of Python's RuntimeError.\n */\n\nexport var RuntimeError = /*#__PURE__*/function (_Error2) {\n  _inherits(RuntimeError, _Error2);\n\n  var _super2 = _createSuper(RuntimeError);\n\n  function RuntimeError(message) {\n    var _this2;\n\n    _classCallCheck(this, RuntimeError);\n\n    _this2 = _super2.call(this, message); // Set the prototype explicitly.\n\n    Object.setPrototypeOf(_assertThisInitialized(_this2), RuntimeError.prototype);\n    return _this2;\n  }\n\n  return RuntimeError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n/**\n * Equivalent of Python's ValueError.\n */\n\nexport var ValueError = /*#__PURE__*/function (_Error3) {\n  _inherits(ValueError, _Error3);\n\n  var _super3 = _createSuper(ValueError);\n\n  function ValueError(message) {\n    var _this3;\n\n    _classCallCheck(this, ValueError);\n\n    _this3 = _super3.call(this, message); // Set the prototype explicitly.\n\n    Object.setPrototypeOf(_assertThisInitialized(_this3), ValueError.prototype);\n    return _this3;\n  }\n\n  return ValueError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n/**\n * Equivalent of Python's NotImplementedError.\n */\n\nexport var NotImplementedError = /*#__PURE__*/function (_Error4) {\n  _inherits(NotImplementedError, _Error4);\n\n  var _super4 = _createSuper(NotImplementedError);\n\n  function NotImplementedError(message) {\n    var _this4;\n\n    _classCallCheck(this, NotImplementedError);\n\n    _this4 = _super4.call(this, message); // Set the prototype explicitly.\n\n    Object.setPrototypeOf(_assertThisInitialized(_this4), NotImplementedError.prototype);\n    return _this4;\n  }\n\n  return NotImplementedError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n/**\n * Equivalent of Python's AssertionError.\n */\n\nexport var AssertionError = /*#__PURE__*/function (_Error5) {\n  _inherits(AssertionError, _Error5);\n\n  var _super5 = _createSuper(AssertionError);\n\n  function AssertionError(message) {\n    var _this5;\n\n    _classCallCheck(this, AssertionError);\n\n    _this5 = _super5.call(this, message); // Set the prototype explicitly.\n\n    Object.setPrototypeOf(_assertThisInitialized(_this5), AssertionError.prototype);\n    return _this5;\n  }\n\n  return AssertionError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n/**\n * Equivalent of Python's IndexError.\n */\n\nexport var IndexError = /*#__PURE__*/function (_Error6) {\n  _inherits(IndexError, _Error6);\n\n  var _super6 = _createSuper(IndexError);\n\n  function IndexError(message) {\n    var _this6;\n\n    _classCallCheck(this, IndexError);\n\n    _this6 = _super6.call(this, message); // Set the prototype explicitly.\n\n    Object.setPrototypeOf(_assertThisInitialized(_this6), IndexError.prototype);\n    return _this6;\n  }\n\n  return IndexError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));","import _toConsumableArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/* Original source: utils/generic_utils.py */\nimport { util } from '@tensorflow/tfjs-core';\nimport { AssertionError, ValueError } from '../errors'; // tslint:enable\n\n/**\n * If `value` is an Array, equivalent to Python's `value * numValues`.\n * If `value` is not an Array, equivalent to Python's `[value] * numValues`\n */\n// tslint:disable-next-line:no-any\n\nexport function pyListRepeat(value, numValues) {\n  if (Array.isArray(value)) {\n    // tslint:disable-next-line:no-any\n    var newArray = [];\n\n    for (var i = 0; i < numValues; i++) {\n      newArray = newArray.concat(value);\n    }\n\n    return newArray;\n  } else {\n    var _newArray = new Array(numValues);\n\n    _newArray.fill(value);\n\n    return _newArray;\n  }\n}\nexport function assert(val, message) {\n  if (!val) {\n    throw new AssertionError(message);\n  }\n}\n/**\n * Count the number of elements of the `array` that are equal to `reference`.\n */\n\nexport function count(array, refernce) {\n  var counter = 0;\n\n  var _iterator = _createForOfIteratorHelper(array),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var item = _step.value;\n\n      if (item === refernce) {\n        counter++;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return counter;\n}\n/**\n * If an array is of length 1, just return the first element. Otherwise, return\n * the full array.\n * @param tensors\n */\n\nexport function singletonOrArray(xs) {\n  if (xs.length === 1) {\n    return xs[0];\n  }\n\n  return xs;\n}\n/**\n * Normalizes a list/tensor into a list.\n *\n * If a tensor is passed, we return\n * a list of size 1 containing the tensor.\n *\n * @param x target object to be normalized.\n */\n// tslint:disable-next-line:no-any\n\nexport function toList(x) {\n  if (Array.isArray(x)) {\n    return x;\n  }\n\n  return [x];\n}\n/**\n * Generate a UID for a list\n */\n// tslint:disable-next-line:no-any\n\nexport function objectListUid(objs) {\n  var objectList = toList(objs);\n  var retVal = '';\n\n  var _iterator2 = _createForOfIteratorHelper(objectList),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var obj = _step2.value;\n\n      if (obj.id == null) {\n        throw new ValueError(\"Object \".concat(obj, \" passed to objectListUid without an id\"));\n      }\n\n      if (retVal !== '') {\n        retVal = retVal + ', ';\n      }\n\n      retVal = \"\".concat(retVal).concat(Math.abs(obj.id));\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  return retVal;\n}\n/**\n * Converts string to snake-case.\n * @param name\n */\n\nexport function toSnakeCase(name) {\n  var intermediate = name.replace(/(.)([A-Z][a-z0-9]+)/g, '$1_$2');\n  var insecure = intermediate.replace(/([a-z])([A-Z])/g, '$1_$2').toLowerCase();\n  /*\n   If the class is private the name starts with \"_\" which is not secure\n   for creating scopes. We prefix the name with \"private\" in this case.\n   */\n\n  if (insecure[0] !== '_') {\n    return insecure;\n  }\n\n  return 'private' + insecure;\n}\nexport function toCamelCase(identifier) {\n  // quick return for empty string or single character strings\n  if (identifier.length <= 1) {\n    return identifier;\n  } // Check for the underscore indicating snake_case\n\n\n  if (identifier.indexOf('_') === -1) {\n    return identifier;\n  }\n\n  return identifier.replace(/[_]+(\\w|$)/g, function (m, p1) {\n    return p1.toUpperCase();\n  });\n} // tslint:disable-next-line:no-any\n\nvar _GLOBAL_CUSTOM_OBJECTS = {};\nexport function serializeKerasObject(instance) {\n  if (instance === null || instance === undefined) {\n    return null;\n  }\n\n  var dict = {};\n  dict['className'] = instance.getClassName();\n  dict['config'] = instance.getConfig();\n  return dict;\n}\n/**\n * Replace ndarray-style scalar objects in serialization objects with numbers.\n *\n * Background: In some versions of tf.keras, certain scalar values in the HDF5\n * model save file can be serialized as: `{'type': 'ndarray', 'value': num}`,\n * where in `num` is a plain number. This method converts such serialization\n * to a `number`.\n *\n * @param config The keras-format serialization object to be processed\n *   (in place).\n */\n\nfunction convertNDArrayScalarsInConfig(config) {\n  if (config == null || typeof config !== 'object') {\n    return;\n  } else if (Array.isArray(config)) {\n    config.forEach(function (configItem) {\n      return convertNDArrayScalarsInConfig(configItem);\n    });\n  } else {\n    var fields = Object.keys(config);\n\n    for (var _i = 0, _fields = fields; _i < _fields.length; _i++) {\n      var field = _fields[_i];\n      var value = config[field];\n\n      if (value != null && typeof value === 'object') {\n        if (!Array.isArray(value) && value['type'] === 'ndarray' && typeof value['value'] === 'number') {\n          config[field] = value['value'];\n        } else {\n          convertNDArrayScalarsInConfig(value);\n        }\n      }\n    }\n  }\n}\n/**\n * Deserialize a saved Keras Object\n * @param identifier either a string ID or a saved Keras dictionary\n * @param moduleObjects a list of Python class names to object constructors\n * @param customObjects a list of Python class names to object constructors\n * @param printableModuleName debug text for the object being reconstituted\n * @param fastWeightInit Optional flag to use fast weight initialization\n *   during deserialization. This is applicable to cases in which\n *   the initialization will be immediately overwritten by loaded weight\n *   values. Default: `false`.\n * @returns a TensorFlow.js Layers object\n */\n// tslint:disable:no-any\n\n\nexport function deserializeKerasObject(identifier) {\n  var moduleObjects = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var customObjects = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var printableModuleName = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'object';\n  var fastWeightInit = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n  // tslint:enable\n  if (typeof identifier === 'string') {\n    var functionName = identifier;\n    var fn;\n\n    if (functionName in customObjects) {\n      fn = customObjects[functionName];\n    } else if (functionName in _GLOBAL_CUSTOM_OBJECTS) {\n      fn = _GLOBAL_CUSTOM_OBJECTS[functionName];\n    } else {\n      fn = moduleObjects[functionName];\n\n      if (fn == null) {\n        throw new ValueError(\"Unknown \".concat(printableModuleName, \": \").concat(identifier, \". \") + \"This may be due to one of the following reasons:\\n\" + \"1. The \".concat(printableModuleName, \" is defined in Python, in which \") + \"case it needs to be ported to TensorFlow.js or your JavaScript \" + \"code.\\n\" + \"2. The custom \".concat(printableModuleName, \" is defined in JavaScript, \") + \"but is not registered properly with \" + \"tf.serialization.registerClass().\"); // TODO(cais): Add link to tutorial page on custom layers.\n      }\n    }\n\n    return fn;\n  } else {\n    // In this case we are dealing with a Keras config dictionary.\n    var config = identifier;\n\n    if (config['className'] == null || config['config'] == null) {\n      throw new ValueError(\"\".concat(printableModuleName, \": Improper config format: \") + \"\".concat(JSON.stringify(config), \".\\n\") + \"'className' and 'config' must set.\");\n    }\n\n    var className = config['className'];\n    var cls, fromConfig;\n\n    if (className in customObjects) {\n      var _customObjects$classN = _slicedToArray(customObjects[className], 2);\n\n      cls = _customObjects$classN[0];\n      fromConfig = _customObjects$classN[1];\n    } else if (className in _GLOBAL_CUSTOM_OBJECTS) {\n      var _GLOBAL_CUSTOM_OBJECT = _slicedToArray(_GLOBAL_CUSTOM_OBJECTS['className'], 2);\n\n      cls = _GLOBAL_CUSTOM_OBJECT[0];\n      fromConfig = _GLOBAL_CUSTOM_OBJECT[1];\n    } else if (className in moduleObjects) {\n      var _moduleObjects$classN = _slicedToArray(moduleObjects[className], 2);\n\n      cls = _moduleObjects$classN[0];\n      fromConfig = _moduleObjects$classN[1];\n    }\n\n    if (cls == null) {\n      throw new ValueError(\"Unknown \".concat(printableModuleName, \": \").concat(className, \". \") + \"This may be due to one of the following reasons:\\n\" + \"1. The \".concat(printableModuleName, \" is defined in Python, in which \") + \"case it needs to be ported to TensorFlow.js or your JavaScript \" + \"code.\\n\" + \"2. The custom \".concat(printableModuleName, \" is defined in JavaScript, \") + \"but is not registered properly with \" + \"tf.serialization.registerClass().\"); // TODO(cais): Add link to tutorial page on custom layers.\n    }\n\n    if (fromConfig != null) {\n      // Porting notes: Instead of checking to see whether fromConfig accepts\n      // customObjects, we create a customObjects dictionary and tack it on to\n      // config['config'] as config['config'].customObjects. Objects can use it,\n      // if they want.\n      // tslint:disable-next-line:no-any\n      var customObjectsCombined = {};\n\n      for (var _i2 = 0, _Object$keys = Object.keys(_GLOBAL_CUSTOM_OBJECTS); _i2 < _Object$keys.length; _i2++) {\n        var key = _Object$keys[_i2];\n        customObjectsCombined[key] = _GLOBAL_CUSTOM_OBJECTS[key];\n      }\n\n      for (var _i3 = 0, _Object$keys2 = Object.keys(customObjects); _i3 < _Object$keys2.length; _i3++) {\n        var _key = _Object$keys2[_i3];\n        customObjectsCombined[_key] = customObjects[_key];\n      } // Add the customObjects to config\n\n\n      var nestedConfig = config['config'];\n      nestedConfig['customObjects'] = customObjectsCombined;\n      var backupCustomObjects = Object.assign({}, _GLOBAL_CUSTOM_OBJECTS);\n\n      for (var _i4 = 0, _Object$keys3 = Object.keys(customObjects); _i4 < _Object$keys3.length; _i4++) {\n        var _key2 = _Object$keys3[_i4];\n        _GLOBAL_CUSTOM_OBJECTS[_key2] = customObjects[_key2];\n      }\n\n      convertNDArrayScalarsInConfig(config['config']);\n      var returnObj = fromConfig(cls, config['config'], customObjects, fastWeightInit);\n      _GLOBAL_CUSTOM_OBJECTS = Object.assign({}, backupCustomObjects);\n      return returnObj;\n    } else {\n      // Then `cls` may be a function returning a class.\n      // In this case by convention `config` holds\n      // the kwargs of the function.\n      var _backupCustomObjects = Object.assign({}, _GLOBAL_CUSTOM_OBJECTS);\n\n      for (var _i5 = 0, _Object$keys4 = Object.keys(customObjects); _i5 < _Object$keys4.length; _i5++) {\n        var _key3 = _Object$keys4[_i5];\n        _GLOBAL_CUSTOM_OBJECTS[_key3] = customObjects[_key3];\n      } // In python this is **config['config'], for tfjs-layers we require\n      // classes that use this fall-through construction method to take\n      // a config interface that mimics the expansion of named parameters.\n\n\n      var _returnObj = new cls(config['config']);\n\n      _GLOBAL_CUSTOM_OBJECTS = Object.assign({}, _backupCustomObjects);\n      return _returnObj;\n    }\n  }\n}\n/**\n * Compares two numbers for sorting.\n * @param a\n * @param b\n */\n\nexport function numberCompare(a, b) {\n  return a < b ? -1 : a > b ? 1 : 0;\n}\n/**\n * Comparison of two numbers for reverse sorting.\n * @param a\n * @param b\n */\n\nexport function reverseNumberCompare(a, b) {\n  return -1 * numberCompare(a, b);\n}\n/**\n * Convert a string into the corresponding DType.\n * @param dtype\n * @returns An instance of DType.\n */\n\nexport function stringToDType(dtype) {\n  switch (dtype) {\n    case 'float32':\n      return 'float32';\n\n    default:\n      throw new ValueError(\"Invalid dtype: \".concat(dtype));\n  }\n}\n/**\n * Test the element-by-element equality of two Arrays of strings.\n * @param xs First array of strings.\n * @param ys Second array of strings.\n * @returns Wether the two arrays are all equal, element by element.\n */\n\nexport function stringsEqual(xs, ys) {\n  if (xs == null || ys == null) {\n    return xs === ys;\n  }\n\n  if (xs.length !== ys.length) {\n    return false;\n  }\n\n  for (var i = 0; i < xs.length; ++i) {\n    if (xs[i] !== ys[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\n * Get the unique elements of an array.\n * @param xs Array.\n * @returns An Array consisting of the unique elements in `xs`.\n */\n\nexport function unique(xs) {\n  if (xs == null) {\n    return xs;\n  }\n\n  var out = []; // TODO(cais): Maybe improve performance by sorting.\n\n  var _iterator3 = _createForOfIteratorHelper(xs),\n      _step3;\n\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var x = _step3.value;\n\n      if (out.indexOf(x) === -1) {\n        out.push(x);\n      }\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n\n  return out;\n}\n/**\n * Determine if an Object is empty (i.e., does not have own properties).\n * @param obj Object\n * @returns Whether the Object is empty.\n * @throws ValueError: If object is `null` or `undefined`.\n */\n\nexport function isObjectEmpty(obj) {\n  if (obj == null) {\n    throw new ValueError(\"Invalid value in obj: \".concat(JSON.stringify(obj)));\n  }\n\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\n * Helper function used to build type union/enum run-time checkers.\n * @param values The list of allowed values.\n * @param label A string name for the type\n * @param value The value to test.\n * @throws ValueError: If the value is not in values nor `undefined`/`null`.\n */\n\nexport function checkStringTypeUnionValue(values, label, value) {\n  if (value == null) {\n    return;\n  }\n\n  if (values.indexOf(value) < 0) {\n    throw new ValueError(\"\".concat(value, \" is not a valid \").concat(label, \".  Valid values are \").concat(values, \" or null/undefined.\"));\n  }\n}\n/**\n * Helper function for verifying the types of inputs.\n *\n * Ensures that the elements of `x` are all of type `expectedType`.\n * Also verifies that the length of `x` is within bounds.\n *\n * @param x Object to test.\n * @param expectedType The string expected type of all of the elements in the\n * Array.\n * @param minLength Return false if x.length is less than this.\n * @param maxLength Return false if x.length is greater than this.\n * @returns true if and only if `x` is an `Array<expectedType>` with\n * length >= `minLength` and <= `maxLength`.\n */\n// tslint:disable:no-any\n\nexport function checkArrayTypeAndLength(x, expectedType) {\n  var minLength = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var maxLength = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : Infinity;\n  assert(minLength >= 0);\n  assert(maxLength >= minLength);\n  return Array.isArray(x) && x.length >= minLength && x.length <= maxLength && x.every(function (e) {\n    return typeof e === expectedType;\n  });\n} // tslint:enable:no-any\n\n/**\n * Assert that a value or an array of value are positive integer.\n *\n * @param value The value being asserted on. May be a single number or an array\n *   of numbers.\n * @param name Name of the value, used to make the error message.\n */\n\nexport function assertPositiveInteger(value, name) {\n  if (Array.isArray(value)) {\n    util.assert(value.length > 0, function () {\n      return \"\".concat(name, \" is unexpectedly an empty array.\");\n    });\n    value.forEach(function (v, i) {\n      return assertPositiveInteger(v, \"element \".concat(i + 1, \" of \").concat(name));\n    });\n  } else {\n    util.assert(Number.isInteger(value) && value > 0, function () {\n      return \"Expected \".concat(name, \" to be a positive integer, but got \") + \"\".concat(formatAsFriendlyString(value), \".\");\n    });\n  }\n}\n/**\n * Format a value into a display-friendly, human-readable fashion.\n *\n * - `null` is formatted as `'null'`\n * - Strings are formated with flanking pair of quotes.\n * - Arrays are formatted with flanking pair of square brackets.\n *\n * @param value The value to display.\n * @return Formatted string.\n */\n// tslint:disable-next-line:no-any\n\nexport function formatAsFriendlyString(value) {\n  if (value === null) {\n    return 'null';\n  } else if (Array.isArray(value)) {\n    return '[' + value.map(function (v) {\n      return formatAsFriendlyString(v);\n    }).join(',') + ']';\n  } else if (typeof value === 'string') {\n    return \"\\\"\".concat(value, \"\\\"\");\n  } else {\n    return \"\".concat(value);\n  }\n}\n/**\n * Returns a function `f2` (decorator) which wraps the original function\n * `f`. `f2` guarantees that `f` can be called at most once\n * every `waitMs` ms. If `f2` is called more often, it will return\n * the last returned result of `f`.\n *\n * @param f The original function `f` to wrap.\n * @param waitMs The time between two consecutive calls to `f` in ms.\n */\n\nexport function debounce(f, waitMs) {\n  var lastTime = util.now();\n  var lastResult;\n\n  var f2 = function f2() {\n    var now = util.now();\n\n    if (now - lastTime < waitMs) {\n      return lastResult;\n    }\n\n    lastTime = now;\n    lastResult = f.apply(void 0, arguments);\n    return lastResult;\n  };\n\n  return f2;\n}\n/**\n * Returns the fusable activation given a layers identifier.\n *\n * @param activationName The layers identifier string.\n * @return The name of the fusable activation.\n */\n\nexport function mapActivationToFusedKernel(activationName) {\n  if (activationName === 'relu') {\n    return 'relu';\n  }\n\n  if (activationName === 'linear') {\n    return 'linear';\n  }\n\n  if (activationName === 'elu') {\n    return 'elu';\n  }\n\n  return null;\n}\n/**\n * Returns the cartesian product of sets of values.\n * This works the same as itertools.product in Python.\n *\n * Example:\n *\n * filters = [128, 256, 512]\n * paddings = ['same', 'valid']\n *\n * product = [ [128, 'same'], [128, 'valid'], [256, 'same'], [256, 'valid'],\n * [512, 'same'], [512, 'valid']]\n *\n * @param arrayOfValues List/array of values.\n * @return The cartesian product.\n */\n\nexport function getCartesianProductOfValues() {\n  for (var _len = arguments.length, arrayOfValues = new Array(_len), _key4 = 0; _key4 < _len; _key4++) {\n    arrayOfValues[_key4] = arguments[_key4];\n  }\n\n  assert(arrayOfValues.length > 0, 'arrayOfValues is empty');\n\n  for (var _i6 = 0, _arrayOfValues = arrayOfValues; _i6 < _arrayOfValues.length; _i6++) {\n    var values = _arrayOfValues[_i6];\n    assert(Array.isArray(values), 'one of the values is not an array');\n    assert(values.length > 0, 'one of the values is empty');\n  }\n\n  return arrayOfValues.reduce(function (products, values) {\n    if (products.length === 0) {\n      return values.map(function (value) {\n        return [value];\n      });\n    }\n\n    return values.map(function (value) {\n      return products.map(function (prevValue) {\n        return [].concat(_toConsumableArray(prevValue), [value]);\n      });\n    }).reduce(function (flattenedProduct, unflattenedProduct) {\n      return flattenedProduct.concat(unflattenedProduct);\n    }, []);\n  }, []);\n}","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/* Original source: keras/contraints.py */\nimport * as tfc from '@tensorflow/tfjs-core';\nimport { serialization, tidy } from '@tensorflow/tfjs-core';\nimport { epsilon } from './backend/common';\nimport { deserializeKerasObject, serializeKerasObject } from './utils/generic_utils';\n/**\n * Helper function used by many of the Constraints to find the L2Norms.\n */\n\nfunction calcL2Norms(w, axis) {\n  return tidy(function () {\n    return tfc.sqrt(tfc.sum(tfc.mul(w, w), axis, true));\n  });\n}\n/**\n * Base class for functions that impose constraints on weight values\n *\n * @doc {\n *   heading: 'Constraints',\n *   subheading: 'Classes',\n *   namespace: 'constraints'\n * }\n */\n\n\nexport var Constraint = /*#__PURE__*/function (_serialization$Serial) {\n  _inherits(Constraint, _serialization$Serial);\n\n  var _super = _createSuper(Constraint);\n\n  function Constraint() {\n    _classCallCheck(this, Constraint);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Constraint, [{\n    key: \"getConfig\",\n    value: function getConfig() {\n      return {};\n    }\n  }]);\n\n  return Constraint;\n}(serialization.Serializable);\nexport var MaxNorm = /*#__PURE__*/function (_Constraint) {\n  _inherits(MaxNorm, _Constraint);\n\n  var _super2 = _createSuper(MaxNorm);\n\n  function MaxNorm(args) {\n    var _this;\n\n    _classCallCheck(this, MaxNorm);\n\n    _this = _super2.call(this);\n    _this.defaultMaxValue = 2;\n    _this.defaultAxis = 0;\n    _this.maxValue = args.maxValue != null ? args.maxValue : _this.defaultMaxValue;\n    _this.axis = args.axis != null ? args.axis : _this.defaultAxis;\n    return _this;\n  }\n\n  _createClass(MaxNorm, [{\n    key: \"apply\",\n    value: function apply(w) {\n      var _this2 = this;\n\n      return tidy(function () {\n        var norms = calcL2Norms(w, _this2.axis);\n        var desired = tfc.clipByValue(norms, 0, _this2.maxValue);\n        return tfc.mul(w, tfc.div(desired, tfc.add(epsilon(), norms)));\n      });\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      return {\n        maxValue: this.maxValue,\n        axis: this.axis\n      };\n    }\n  }]);\n\n  return MaxNorm;\n}(Constraint);\n/** @nocollapse */\n\nMaxNorm.className = 'MaxNorm';\nserialization.registerClass(MaxNorm);\nexport var UnitNorm = /*#__PURE__*/function (_Constraint2) {\n  _inherits(UnitNorm, _Constraint2);\n\n  var _super3 = _createSuper(UnitNorm);\n\n  function UnitNorm(args) {\n    var _this3;\n\n    _classCallCheck(this, UnitNorm);\n\n    _this3 = _super3.call(this);\n    _this3.defaultAxis = 0;\n    _this3.axis = args.axis != null ? args.axis : _this3.defaultAxis;\n    return _this3;\n  }\n\n  _createClass(UnitNorm, [{\n    key: \"apply\",\n    value: function apply(w) {\n      var _this4 = this;\n\n      return tidy(function () {\n        return tfc.div(w, tfc.add(epsilon(), calcL2Norms(w, _this4.axis)));\n      });\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      return {\n        axis: this.axis\n      };\n    }\n  }]);\n\n  return UnitNorm;\n}(Constraint);\n/** @nocollapse */\n\nUnitNorm.className = 'UnitNorm';\nserialization.registerClass(UnitNorm);\nexport var NonNeg = /*#__PURE__*/function (_Constraint3) {\n  _inherits(NonNeg, _Constraint3);\n\n  var _super4 = _createSuper(NonNeg);\n\n  function NonNeg() {\n    _classCallCheck(this, NonNeg);\n\n    return _super4.apply(this, arguments);\n  }\n\n  _createClass(NonNeg, [{\n    key: \"apply\",\n    value: function apply(w) {\n      return tfc.relu(w);\n    }\n  }]);\n\n  return NonNeg;\n}(Constraint);\n/** @nocollapse */\n\nNonNeg.className = 'NonNeg';\nserialization.registerClass(NonNeg);\nexport var MinMaxNorm = /*#__PURE__*/function (_Constraint4) {\n  _inherits(MinMaxNorm, _Constraint4);\n\n  var _super5 = _createSuper(MinMaxNorm);\n\n  function MinMaxNorm(args) {\n    var _this5;\n\n    _classCallCheck(this, MinMaxNorm);\n\n    _this5 = _super5.call(this);\n    _this5.defaultMinValue = 0.0;\n    _this5.defaultMaxValue = 1.0;\n    _this5.defaultRate = 1.0;\n    _this5.defaultAxis = 0;\n    _this5.minValue = args.minValue != null ? args.minValue : _this5.defaultMinValue;\n    _this5.maxValue = args.maxValue != null ? args.maxValue : _this5.defaultMaxValue;\n    _this5.rate = args.rate != null ? args.rate : _this5.defaultRate;\n    _this5.axis = args.axis != null ? args.axis : _this5.defaultAxis;\n    return _this5;\n  }\n\n  _createClass(MinMaxNorm, [{\n    key: \"apply\",\n    value: function apply(w) {\n      var _this6 = this;\n\n      return tidy(function () {\n        var norms = calcL2Norms(w, _this6.axis);\n        var desired = tfc.add(tfc.mul(_this6.rate, tfc.clipByValue(norms, _this6.minValue, _this6.maxValue)), tfc.mul(1.0 - _this6.rate, norms));\n        return tfc.mul(w, tfc.div(desired, tfc.add(epsilon(), norms)));\n      });\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      return {\n        minValue: this.minValue,\n        maxValue: this.maxValue,\n        rate: this.rate,\n        axis: this.axis\n      };\n    }\n  }]);\n\n  return MinMaxNorm;\n}(Constraint);\n/** @nocollapse */\n\nMinMaxNorm.className = 'MinMaxNorm';\nserialization.registerClass(MinMaxNorm); // Maps the JavaScript-like identifier keys to the corresponding registry\n// symbols.\n\nexport var CONSTRAINT_IDENTIFIER_REGISTRY_SYMBOL_MAP = {\n  'maxNorm': 'MaxNorm',\n  'minMaxNorm': 'MinMaxNorm',\n  'nonNeg': 'NonNeg',\n  'unitNorm': 'UnitNorm'\n};\nexport function serializeConstraint(constraint) {\n  return serializeKerasObject(constraint);\n}\nexport function deserializeConstraint(config) {\n  var customObjects = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return deserializeKerasObject(config, serialization.SerializationMap.getMap().classNameMap, customObjects, 'constraint');\n}\nexport function getConstraint(identifier) {\n  if (identifier == null) {\n    return null;\n  }\n\n  if (typeof identifier === 'string') {\n    var className = identifier in CONSTRAINT_IDENTIFIER_REGISTRY_SYMBOL_MAP ? CONSTRAINT_IDENTIFIER_REGISTRY_SYMBOL_MAP[identifier] : identifier;\n    var config = {\n      className: className,\n      config: {}\n    };\n    return deserializeConstraint(config);\n  } else if (identifier instanceof Constraint) {\n    return identifier;\n  } else {\n    return deserializeConstraint(identifier);\n  }\n}","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\nexport var VALID_DATA_FORMAT_VALUES = ['channelsFirst', 'channelsLast'];\nexport var VALID_INTERPOLATION_FORMAT_VALUES = ['nearest', 'bilinear'];\nexport var VALID_PADDING_MODE_VALUES = ['valid', 'same', 'causal'];\nexport var VALID_POOL_MODE_VALUES = ['max', 'avg'];\nexport var VALID_BIDIRECTIONAL_MERGE_MODES = ['sum', 'mul', 'concat', 'ave'];\nexport var VALID_SAMPLE_WEIGHT_MODES = ['temporal'];","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/**\n * Common functions for TensorFlow.js Layers.\n */\nimport { VALID_DATA_FORMAT_VALUES, VALID_INTERPOLATION_FORMAT_VALUES, VALID_PADDING_MODE_VALUES, VALID_POOL_MODE_VALUES } from './keras_format/common';\nimport { checkStringTypeUnionValue } from './utils/generic_utils'; // A map from the requested scoped name of a Tensor to the number of Tensors\n// wanting that name so far.  This allows enforcing name uniqueness by appending\n// an incrementing index, e.g. scope/name, scope/name_1, scope/name_2, etc.\n\nvar nameMap = new Map();\nexport function checkDataFormat(value) {\n  checkStringTypeUnionValue(VALID_DATA_FORMAT_VALUES, 'DataFormat', value);\n}\nexport function checkInterpolationFormat(value) {\n  checkStringTypeUnionValue(VALID_INTERPOLATION_FORMAT_VALUES, 'InterpolationFormat', value);\n}\nexport function checkPaddingMode(value) {\n  checkStringTypeUnionValue(VALID_PADDING_MODE_VALUES, 'PaddingMode', value);\n}\nexport function checkPoolMode(value) {\n  checkStringTypeUnionValue(VALID_POOL_MODE_VALUES, 'PoolMode', value);\n}\nvar _nameScopeStack = [];\nvar _nameScopeDivider = '/';\n/**\n * Enter namescope, which can be nested.\n */\n\nexport function nameScope(name, fn) {\n  _nameScopeStack.push(name);\n\n  try {\n    var val = fn();\n\n    _nameScopeStack.pop();\n\n    return val;\n  } catch (e) {\n    _nameScopeStack.pop();\n\n    throw e;\n  }\n}\n/**\n * Get the current namescope as a flat, concatenated string.\n */\n\nfunction currentNameScopePrefix() {\n  if (_nameScopeStack.length === 0) {\n    return '';\n  } else {\n    return _nameScopeStack.join(_nameScopeDivider) + _nameScopeDivider;\n  }\n}\n/**\n * Get the name a Tensor (or Variable) would have if not uniqueified.\n * @param tensorName\n * @return Scoped name string.\n */\n\n\nexport function getScopedTensorName(tensorName) {\n  if (!isValidTensorName(tensorName)) {\n    throw new Error('Not a valid tensor name: \\'' + tensorName + '\\'');\n  }\n\n  return currentNameScopePrefix() + tensorName;\n}\n/**\n * Get unique names for Tensors and Variables.\n * @param scopedName The fully-qualified name of the Tensor, i.e. as produced by\n *  `getScopedTensorName()`.\n * @return A unique version of the given fully scoped name.\n *   If this is the first time that the scoped name is seen in this session,\n *   then the given `scopedName` is returned unaltered.  If the same name is\n *   seen again (producing a collision), an incrementing suffix is added to the\n *   end of the name, so it takes the form 'scope/name_1', 'scope/name_2', etc.\n */\n\nexport function getUniqueTensorName(scopedName) {\n  if (!isValidTensorName(scopedName)) {\n    throw new Error('Not a valid tensor name: \\'' + scopedName + '\\'');\n  }\n\n  if (!nameMap.has(scopedName)) {\n    nameMap.set(scopedName, 0);\n  }\n\n  var index = nameMap.get(scopedName);\n  nameMap.set(scopedName, nameMap.get(scopedName) + 1);\n\n  if (index > 0) {\n    var result = \"\".concat(scopedName, \"_\").concat(index); // Mark the composed name as used in case someone wants\n    // to call getUniqueTensorName(\"name_1\").\n\n    nameMap.set(result, 1);\n    return result;\n  } else {\n    return scopedName;\n  }\n}\nvar tensorNameRegex = new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\\._\\/]*$/);\n/**\n * Determine whether a string is a valid tensor name.\n * @param name\n * @returns A Boolean indicating whether `name` is a valid tensor name.\n */\n\nexport function isValidTensorName(name) {\n  return !!name.match(tensorNameRegex);\n}","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/**\n * Math utility functions.\n *\n * This file contains some frequently used math function that operates on\n * number[] or Float32Array and return a number. Many of these functions are\n * not-so-thick wrappers around TF.js Core functions. But they offer the\n * convenience of\n * 1) not having to convert the inputs into Tensors,\n * 2) not having to convert the returned Tensors to numbers.\n */\nimport * as tfc from '@tensorflow/tfjs-core';\nimport { scalar, tensor1d } from '@tensorflow/tfjs-core';\nimport { ValueError } from '../errors';\n/**\n * Determine if a number is an integer.\n */\n\nexport function isInteger(x) {\n  return x === parseInt(x.toString(), 10);\n}\n/**\n * Calculate the product of an array of numbers.\n * @param array The array to calculate the product over.\n * @param begin Beginning index, inclusive.\n * @param end Ending index, exclusive.\n * @return The product.\n */\n\nexport function arrayProd(array, begin, end) {\n  if (begin == null) {\n    begin = 0;\n  }\n\n  if (end == null) {\n    end = array.length;\n  }\n\n  var prod = 1;\n\n  for (var i = begin; i < end; ++i) {\n    prod *= array[i];\n  }\n\n  return prod;\n}\n/**\n * A helper function transforms the two input types to an instance of Tensor1D,\n * so the return value can be fed directly into various TF.js Core functions.\n * @param array\n */\n\nfunction toArray1D(array) {\n  array = Array.isArray(array) ? new Float32Array(array) : array;\n  return tensor1d(array);\n}\n/**\n * Compute minimum value.\n * @param array\n * @return minimum value.\n */\n\n\nexport function min(array) {\n  return tfc.min(toArray1D(array)).dataSync()[0];\n}\n/**\n * Compute maximum value.\n * @param array\n * @return maximum value\n */\n\nexport function max(array) {\n  return tfc.max(toArray1D(array)).dataSync()[0];\n}\n/**\n * Compute sum of array.\n * @param array\n * @return The sum.\n */\n\nexport function sum(array) {\n  return tfc.sum(toArray1D(array)).dataSync()[0];\n}\n/**\n * Compute mean of array.\n * @param array\n * @return The mean.\n */\n\nexport function mean(array) {\n  return sum(array) / array.length;\n}\n/**\n * Compute variance of array.\n * @param array\n * @return The variance.\n */\n\nexport function variance(array) {\n  var demeaned = tfc.sub(toArray1D(array), scalar(mean(array)));\n  var sumSquare = tfc.sum(tfc.mul(demeaned, demeaned)).dataSync()[0];\n  return sumSquare / array.length;\n}\n/**\n * Compute median of array.\n * @param array\n * @return The median value.\n */\n\nexport function median(array) {\n  var arraySorted = array.slice().sort(function (a, b) {\n    return a - b;\n  });\n  var lowIdx = Math.floor((arraySorted.length - 1) / 2);\n  var highIdx = Math.ceil((arraySorted.length - 1) / 2);\n\n  if (lowIdx === highIdx) {\n    return arraySorted[lowIdx];\n  }\n\n  return (arraySorted[lowIdx] + arraySorted[highIdx]) / 2;\n}\n/**\n * Generate an array of integers in [begin, end).\n * @param begin Beginning integer, inclusive.\n * @param end Ending integer, exclusive.\n * @returns Range array.\n * @throws ValueError, iff `end` < `begin`.\n */\n\nexport function range(begin, end) {\n  if (end < begin) {\n    throw new ValueError(\"end (\".concat(end, \") < begin (\").concat(begin, \") is forbidden.\"));\n  }\n\n  var out = [];\n\n  for (var i = begin; i < end; ++i) {\n    out.push(i);\n  }\n\n  return out;\n}","import _toConsumableArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/**\n * deeplearn.js backend.\n */\nimport * as tfc from '@tensorflow/tfjs-core';\nimport { onesLike as coreOnesLike, scalar, tensor1d, tidy, where, zerosLike as coreZerosLike } from '@tensorflow/tfjs-core';\nimport { checkDataFormat } from '../common';\nimport { NotImplementedError, ValueError } from '../errors';\nimport * as math_utils from '../utils/math_utils';\nimport { imageDataFormat } from './common'; // tslint:enable\n\n/* Setting and getting backend from deeplearn.js. */\n// Default deeplearn.js backend is WebGL (GPU).\n\nvar backend = 'webgl';\nexport function setBackend(requestedBackend) {\n  tfc.setBackend(requestedBackend);\n  backend = requestedBackend;\n}\nexport function getBackend() {\n  return backend;\n}\n/**\n * Indicates whether the backend is operating symbolically.\n *\n * This function will be used to determine how to interpret user code. If\n * it returns true, calls to the backend construct a symbolic graph; if\n * it returns false, calls to the backend execute immediately.\n */\n\nexport function isBackendSymbolic() {\n  return false;\n}\n/**\n * Get the number of elements in a Tensor.\n * @param x The Tensor.\n * @return Number of elements in `x`.\n */\n\nexport function countParams(x) {\n  var shape = x.shape;\n\n  if (shape.length > 0) {\n    return shape.reduce(function (a, b) {\n      return a * b;\n    });\n  } else {\n    // Scalar.\n    return 1;\n  }\n}\n/**\n * Casts a tensor to a different dtype and returns it.\n * @param x Input tensor.\n * @param dtype String: 'float32'|'int32'|'bool'.\n * @returns Tensor of the specified `dtype`.\n */\n\nexport function cast(x, dtype) {\n  return x.asType(dtype);\n}\n/**\n * Adds a 1-sized dimension at index \"axis\".\n * @param x Input tensor.\n * @param axis Position where to add the new axis.\n * @returns Result of the dimension expansion.\n */\n\nexport function expandDims(x) {\n  var axis = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\n  var outShape = x.shape.slice();\n\n  if (axis < 0) {\n    axis = outShape.length + axis + 1;\n  }\n\n  outShape.splice(axis, 0, 1);\n  return x.reshape(outShape);\n}\n/**\n * Repeats a 2D tensor.\n *\n * If `x` has shape `[samples, dim]` and `n` is 2, for example, the output\n * will have shape `[samples, 2, dim]`.\n *\n * @param x Input tensor.\n * @param n Integer, number of times to repeat.\n * @returns The result of the repeat operation.\n * @throws ValueError: If input tensor is not 2D.\n */\n\nexport function repeat(x, n) {\n  return tidy(function () {\n    if (x.shape.length !== 2) {\n      throw new ValueError(\"repeat() expects a rank-2 tensor, but received a \" + \"rank-\".concat(x.shape.length, \" tensor.\"));\n    }\n\n    var y = expandDims(x, 1);\n    return tile(y, [1, n, 1]);\n  });\n}\n/**\n * Flatten a Tensor into 1D.\n * @param x Input tensor.\n * @return The result of the flattening `x`.\n */\n\nexport function flatten(x) {\n  var newShape = [math_utils.arrayProd(x.shape)];\n  return x.reshape(newShape);\n}\n/**\n * Turn a nD tensor into a 2D tensor with same 0th dimension.\n * In other words, it flattens each data samples of a batch.\n *\n * @param x The tensor to flatten. The rank of this tensor is required to be 2\n *   or higher.\n * @return The result of the flattening.\n */\n\nexport function batchFlatten(x) {\n  if (x.rank <= 1) {\n    throw new ValueError(\"batchFlatten requires a minimum rank of 2. Got rank: \".concat(x.rank, \".\"));\n  }\n\n  var newShape = [x.shape[0], math_utils.arrayProd(x.shape, 1)];\n  return x.reshape(newShape);\n}\n/**\n * Do slicing along the first axis.\n * @param array input `tf.Tensor`.\n * @param start starting index, inclusive.\n * @param size size of the slice along the first axis.\n * @returns result of the slicing.\n * @throws ValueError: If `array` is of an unsupported subtype of `tf.Tensor`.\n */\n\nexport function sliceAlongFirstAxis(array, start, size) {\n  return tidy(function () {\n    switch (array.rank) {\n      case 1:\n        return tfc.slice1d(array, start, size);\n\n      case 2:\n        return tfc.slice2d(array, [start, 0], [size, array.shape[1]]);\n\n      case 3:\n        return tfc.slice3d(array, [start, 0, 0], [size, array.shape[1], array.shape[2]]);\n\n      case 4:\n        return tfc.slice4d(array, [start, 0, 0, 0], [size, array.shape[1], array.shape[2], array.shape[3]]);\n\n      case 5:\n        return tfc.slice(array, [start, 0, 0, 0, 0], [size, array.shape[1], array.shape[2], array.shape[3], array.shape[4]]);\n\n      case 6:\n        return tfc.slice(array, [start, 0, 0, 0, 0, 0], [size, array.shape[1], array.shape[2], array.shape[3], array.shape[4], array.shape[5]]);\n\n      default:\n        throw new ValueError(\"sliceAlongFirstAxis() received an unsupported tensor rank: \" + \"\".concat(array.rank));\n    }\n  });\n}\n/**\n * Do slicing along the last axis.\n * @param array input `tf.Tensor`.\n * @param start starting index, inclusive.\n * @param size size of the slice along the last axis.\n * @returns result of the slicing.\n * @throws ValueError: If `array` is of an unsupported subtype of `tf.Tensor`.\n */\n\nexport function sliceAlongLastAxis(array, start, size) {\n  return tidy(function () {\n    switch (array.rank) {\n      case 1:\n        return tfc.slice1d(array, start, size);\n\n      case 2:\n        return tfc.slice2d(array, [0, start], [array.shape[0], size]);\n\n      case 3:\n        return tfc.slice3d(array, [0, 0, start], [array.shape[0], array.shape[1], size]);\n\n      case 4:\n        return tfc.slice4d(array, [0, 0, 0, start], [array.shape[0], array.shape[1], array.shape[2], size]);\n\n      default:\n        throw new ValueError(\"sliceAlongLastAxis() received an unsupported tensor rank: \" + \"\".concat(array.rank));\n    }\n  });\n}\n/**\n * Do slicing along the sepcified axis.\n * @param array input `tf.Tensor`.\n * @param start starting index, inclusive.\n * @param size of the slice along the chosen axis.\n * @param choose an axis.\n * @returns result of the slicing.\n * @throws ValueError: If `array` is of an unsupported subtype of `tf.Tensor`.\n */\n\nexport function sliceAlongAxis(array, start, size, axis) {\n  return tidy(function () {\n    switch (array.rank) {\n      case 1:\n        return tfc.slice1d(array, start, size);\n\n      case 2:\n        switch (axis) {\n          case 1:\n            return sliceAlongFirstAxis(array, start, size);\n\n          case 2:\n            return sliceAlongLastAxis(array, start, size);\n\n          default:\n            throw new ValueError(\"The axis is not within the rank of the tensor \" + \"\".concat(axis));\n        }\n\n      case 3:\n        switch (axis) {\n          case 1:\n            return sliceAlongFirstAxis(array, start, size);\n\n          case 2:\n            return tfc.slice3d(array, [0, start, 0], [array.shape[0], size, array.shape[2]]);\n\n          case 3:\n            return sliceAlongLastAxis(array, start, size);\n\n          default:\n            throw new ValueError(\"The axis is not within the rank of the tensor \" + \"\".concat(axis));\n        }\n\n      case 4:\n        switch (axis) {\n          case 1:\n            return sliceAlongFirstAxis(array, start, size);\n\n          case 2:\n            return tfc.slice4d(array, [0, start, 0, 0], [array.shape[0], size, array.shape[2], array.shape[3]]);\n\n          case 3:\n            return tfc.slice4d(array, [0, 0, start, 0], [array.shape[0], array.shape[1], size, array.shape[3]]);\n\n          case 4:\n            return sliceAlongLastAxis(array, start, size);\n\n          default:\n            throw new ValueError(\"The axis is not within the rank of the tensor \" + \"\".concat(axis));\n        }\n\n      default:\n        throw new ValueError(\"sliceAlongLastAxis() received an unsupported tensor rank: \" + \"\".concat(array.rank));\n    }\n  });\n}\n/**\n * Concatenates a list of tensors alongside the specified axis.\n * @param tensors `Array` of tensors to concatenate.\n * @param axis Concatenation axis.\n * @returns The result of the concatenation.\n */\n\nexport function concatenate(tensors) {\n  var axis = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\n  var rank;\n\n  if (axis < 0) {\n    rank = tensors[0].rank;\n\n    if (rank !== 0) {\n      axis = rank;\n    } else {\n      axis = 0;\n    }\n  }\n\n  if (axis === tensors[0].rank) {\n    // Porting Note: This is necessary because tfc.concat() requires axis to be\n    //   in the interval [-rank, rank).\n    axis = -1;\n  } // Porting Note: Sparse concat is not supported yet.\n\n\n  return tfc.concat(tensors, axis);\n}\n/**\n * Concatenate two arrays along the first dimension.\n * @param a The 1st `tf.Tensor` to concatenate.\n * @param b The 2nd `tf.Tensor` to concatenate.\n * @returns Result of the concatenation.\n * @throws ValueError: If `a` is of an unsupported subtype of `tf.Tensor`.\n */\n\nexport function concatAlongFirstAxis(a, b) {\n  switch (a.rank) {\n    case 1:\n      return tfc.concat1d([a, b]);\n\n    case 2:\n      return tfc.concat2d([a, b], 0);\n\n    case 3:\n      return tfc.concat3d([a, b], 0);\n\n    case 4:\n      return tfc.concat4d([a, b], 0);\n\n    default:\n      throw new ValueError(\"concatAlongFirstAxis() received an unsupported \" + \"tensor rank: \".concat(a.rank));\n  }\n}\n/**\n * Creates a tensor by tiling `x` by `n`.\n * @param x A tensor.\n * @param n An Array of integers or a single integer. If an Array, the length\n *   must be the same as the number of dimensions in `x`. If a single integer,\n *   it will be treated as an Array of length 1.\n */\n\nexport function tile(x, n) {\n  if (!Array.isArray(n)) {\n    n = [n];\n  }\n\n  if (x.rank !== n.length) {\n    throw new ValueError(\"The length of input n (\".concat(n.length, \") does not match \") + \"the number of dimensions in input x (\".concat(x.rank, \")\"));\n  }\n\n  return tfc.tile(x, n);\n}\n/* Creation of random tensors. */\n\n/**\n * Get a tensor with normal distribution of values.\n *\n * @param shape Shape of the tensor.\n * @param mean mean value of the normal distribution.\n * @param stddev standard deviation of the normal distribution.\n * @param dtype\n * @param seed\n * @return The normal tensor.\n */\n\nexport function randomNormal(shape) {\n  var mean = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.0;\n  var stddev = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1.0;\n  var dtype = arguments.length > 3 ? arguments[3] : undefined;\n  var seed = arguments.length > 4 ? arguments[4] : undefined;\n  return tfc.randomNormal(shape, mean, stddev, dtype, seed);\n}\n/* Linear Algebra */\n\n/**\n * Multiply two tensors and returns the result as a tensor.\n *\n * For 2D tensors, this is equivalent to matrix multiplication (matMul).\n * For tensors of higher ranks, it follows the Theano behavior,\n * (e.g. `(2, 3) * (4, 3, 5) -> (2, 4, 5)`).  From the Theano documentation:\n *\n * For N dimensions it is a sum product over the last axis of x and the\n * second-to-last of y:\n *\n * @param a A tensor of at least rank 2.\n * @param b A tensor of at least rank 2.\n * @param activation (optional) A string identifying the activation\n *   function.\n * @return Result of the dot operation.\n */\n\nexport function dot(a, b, activation, bias) {\n  if (a.rank < 2 || b.rank < 2) {\n    throw new NotImplementedError(\"dot requires both inputs to be rank >= 2\" + \" but got x shape = \".concat(a.shape, \" and y shape = \").concat(b.shape));\n  }\n\n  if (b.rank >= 3) {\n    var xLastDim = a.shape.slice(-1)[0];\n    var ySecondLastDim = b.shape.slice(-2)[0];\n\n    if (xLastDim !== ySecondLastDim) {\n      throw new NotImplementedError(\"If rank y >= 3, then the second last dim\" + \" of y must equal the last dim of x but got x shape = \".concat(a.shape, \" and \") + \" y shape = \".concat(b.shape));\n    }\n  } // Handle basic 2D x 2D case.\n\n\n  if (a.rank === 2 && b.rank === 2) {\n    var transposeA = false;\n    var transposeB = false; // tfc.fused.matMul only fuses certain activation functions. Unsupported\n    // activation functions are treated as 'linear' activations, which is\n    // equivalent to a no-op.\n\n    return tfc.fused.matMul({\n      a: a,\n      b: b,\n      transposeA: transposeA,\n      transposeB: transposeB,\n      bias: bias ? reshapeBias(a.rank, bias, imageDataFormat()) : null,\n      activation: activation\n    });\n  } else {\n    // Reshape x into the analogous 2D Tensor.\n    var aFirstDims = a.shape.slice(); // Holds all but the last dim of x.\n\n    var aLastDim = aFirstDims.pop();\n    a = a.reshape([-1, aLastDim]); // Reshape y into the analogous 2D Tensor, and keep track of the\n    // required dimensions to reproduce the output shape.\n\n    var bShape = b.shape.slice();\n    var bLastDim = bShape.pop();\n\n    var _ySecondLastDim = bShape.pop();\n\n    var yOtherDims = [].concat(_toConsumableArray(bShape), [bLastDim]); // permutation should be like [r-2, 0, 1, 2, ... r-4, r-3, r-1]\n    // where r is the rank of y.\n\n    var perm = Array.from({\n      length: b.rank\n    }, function (_, i) {\n      if (i === 0) {\n        return b.rank - 2;\n      } else if (i <= b.rank - 2) {\n        return i - 1;\n      }\n\n      return i;\n    });\n    b = b.transpose(perm).reshape([_ySecondLastDim, -1]); // Multiply x and y as 2D Tensors, and then reshape back to original.\n\n    var outputShape = [].concat(_toConsumableArray(aFirstDims), _toConsumableArray(yOtherDims));\n    var _transposeA = false;\n    var _transposeB = false;\n    return tfc.fused.matMul({\n      a: a,\n      b: b,\n      transposeA: _transposeA,\n      transposeB: _transposeB,\n      bias: bias ? reshapeBias(a.rank, bias, imageDataFormat()) : null,\n      activation: activation\n    }).reshape(outputShape);\n  }\n}\n/**\n * Compute the sign Tensor of an input Tensor.\n *\n * Elements of the input `tf.Tensor` that are === 0 are mapped to 0.\n * Elements of the input `tf.Tensor` that are > 0 are mapped to 1.\n * Elements of the input `tf.Tensor` that are < 0 are mapped to -1.\n *\n * @param x Input `tf.Tensor`.\n * @return The sign `tf.Tensor`.\n */\n\nexport function sign(x) {\n  // TODO(cais): Move to the core.\n  return tidy(function () {\n    var zerosLikeX = coreZerosLike(x);\n    var onesLikeX = coreOnesLike(x);\n    return where(tfc.equal(x, zerosLikeX), zerosLikeX, where(tfc.greater(x, coreZerosLike(x)), onesLikeX, tfc.mul(-1, onesLikeX)));\n  });\n}\n/**\n * Computes the one-hot representation of an integer tensor.\n * @param indices nD integer tensor of shape\n *   `(batch_size, dim1, dim2, ... dim(n-1))`\n * @param numClasses Integer, number of classes to consider.\n * @returns (n + 1)D one hot representation of the input\n *   with shape `(batch_size, dim1, dim2, ... dim(n-1), num_classes)`\n */\n\nexport function oneHot(indices, numClasses) {\n  return tidy(function () {\n    if (indices.rank !== 1) {\n      throw new Error('Only 1D one-hot tensors are supported in the ' + 'deeplearn backend, at present.');\n    }\n\n    indices = indices.toInt();\n    return tfc.oneHot(indices, numClasses).toFloat();\n  });\n}\n/* Elementary math functions. */\n\n/**\n * Retrieves the elements of indices `indices` in the tensor `reference`.\n * @param reference A tensor.\n * @param indices An integer tensor of indices or an `Array` of integers.\n * @param axis Axis along which to perform the gather operation.\n * @returns The result of the gathering as a tensor.\n */\n\nexport function gather(reference, indices, axis) {\n  return tidy(function () {\n    if (Array.isArray(indices)) {\n      indices = tensor1d(indices, 'int32');\n    } else {\n      indices = indices.toInt();\n    }\n\n    return tfc.gather(reference, indices, axis);\n  });\n}\n/**\n * Element-wise square.\n * @param x Input tensor.\n * @return element-wise x^2\n */\n\nexport function square(x) {\n  return tfc.mul(x, x);\n}\n/**\n * Element-wise exponentiation.\n *\n * Porting Note: In PyKeras, `a` (the exponent) is a Python integer, which\n *   takes advatnage of the backend's (e.g., TensorFlow's) automatic\n * conversion to tensor. Here we allow `a` to be either a number or a tensor.\n *\n * @param x The base tensor.\n * @param a The exponent, tensor or number. If a number, it is rounded to the\n *   nearest integer and converted to a tensor.\n * @returns A tensor of the same shape as `x`.\n */\n\nexport function pow(x, a) {\n  return tidy(function () {\n    if (typeof a === 'number') {\n      a = scalar(Math.round(a), 'int32');\n    }\n\n    if (a.dtype !== 'int32') {\n      throw new NotImplementedError(\"Non-int32 dtype (\".concat(a.dtype, \") is not supported by pow() yet\"));\n    }\n\n    return tfc.pow(x, a);\n  });\n}\n/**\n * Reshapes bias tensor according to rank of x.\n */\n\nfunction reshapeBias(xRank, bias, dataFormat) {\n  var biasShape = bias.shape;\n\n  if (bias.rank !== 1 && bias.rank !== xRank) {\n    throw new ValueError(\"Unexpected bias dimensions: \".concat(bias.rank) + \"; expected it to be 1 or \".concat(xRank));\n  }\n\n  if (xRank === 5) {\n    if (dataFormat === 'channelsFirst') {\n      if (biasShape.length === 1) {\n        return bias.reshape([1, biasShape[0], 1, 1, 1]);\n      } else {\n        return bias.reshape([1, biasShape[3], biasShape[0], biasShape[1], biasShape[2]]);\n      }\n    } else if (dataFormat === 'channelsLast') {\n      if (biasShape.length === 1) {\n        return bias.reshape([1, 1, 1, 1, biasShape[0]]);\n      } else {\n        return bias.reshape([1].concat(biasShape));\n      }\n    }\n  } else if (xRank === 4) {\n    if (dataFormat === 'channelsFirst') {\n      if (biasShape.length === 1) {\n        return bias.reshape([1, biasShape[0], 1, 1]);\n      } else {\n        return bias.reshape([1, biasShape[2], biasShape[0], biasShape[1]]);\n      }\n    } else if (dataFormat === 'channelsLast') {\n      if (biasShape.length === 1) {\n        return bias.reshape([1, 1, 1, biasShape[0]]);\n      } else {\n        return bias.reshape([1].concat(biasShape));\n      }\n    }\n  } else if (xRank === 3) {\n    if (dataFormat === 'channelsFirst') {\n      if (biasShape.length === 1) {\n        return bias.reshape([1, biasShape[0], 1]);\n      } else {\n        return bias.reshape([1, biasShape[1], biasShape[0]]);\n      }\n    } else if (dataFormat === 'channelsLast') {\n      if (biasShape.length === 1) {\n        return bias.reshape([1, 1, biasShape[0]]);\n      } else {\n        return bias.reshape([1].concat(biasShape));\n      }\n    }\n  } else if (xRank < 3) {\n    return bias;\n  }\n\n  throw new ValueError(\"Unsupported input rank by biasAdd: \".concat(bias.rank));\n}\n/* Neural-network operations. */\n\n/**\n * Add a bias to a tensor.\n *\n * @param x The tensor to add the bias to.\n * @param bias The bias to add to `x`. Must be 1D or the same rank as `x`.\n * @return Result of the bias adding.\n * @throws ValueError: If the rank of `bias` is incorrect.\n */\n\n\nexport function biasAdd(x, bias, dataFormat) {\n  return tidy(function () {\n    if (dataFormat == null) {\n      dataFormat = imageDataFormat();\n    }\n\n    checkDataFormat(dataFormat);\n    return x.add(reshapeBias(x.rank, bias, dataFormat));\n  });\n}\n/**\n * Exponential linear unit (ELU).\n * @param x A tensor or variable to compute the activation function for.\n * @param alpha: A scalar, a scaling factor for the negative section.\n * @return Output of the ELU operation.\n */\n\nexport function elu(x) {\n  var alpha = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n  // TODO(cais): Add support for alpha values other than 1.\n  if (alpha !== 1) {\n    throw new NotImplementedError(\"Support for alpha values other than 1 (\".concat(alpha, \") is not implemented \") + \"yet.\");\n  }\n\n  return tfc.elu(x);\n}\n/**\n * Softsign of a tensor.\n *\n * Defined as x / (abs(x) + 1), element-wise.\n *\n * @param x: Input.\n * @returns Output.\n */\n\nexport function softsign(x) {\n  return tidy(function () {\n    return tfc.div(x, tfc.abs(x).add(1));\n  });\n}\n/**\n * Sets entries in `x` to zero at random, while scaling the entire tensor.\n *\n * @param x input tensor.\n * @param level fraction of the entries in the tensor that will be set to 0.\n * @param noiseShape shape of randomly generated keep/drop flags, must be\n *   broadcastable to the shape of `x`. Optional.\n * @param seed random seed to ensure determinism. Optional.\n * @returns Result of the dropout operation.\n */\n\nexport function dropout(x, level, noiseShape, seed) {\n  return tidy(function () {\n    return tfc.dropout(x, level, noiseShape, seed);\n  });\n}\n/**\n * Element-wise, segment-wise linear approximation of sigmoid.\n *\n * Returns `0.` if `x < -2.5`, `1.` if `x > 2.5`.\n * In `-2.5 <= x <= 2.5`, returns `0.2 * x + 0.5`.\n *\n * @param x Input tensor.\n * @returns Output tensor.\n */\n\nexport function hardSigmoid(x) {\n  return tidy(function () {\n    var y = tfc.add(.5, tfc.mul(.2, x));\n    return tfc.clipByValue(y, 0, 1);\n  });\n}\n/**\n * Invoke `x` in the training phase, and `alt` otherwise.\n *\n * Porting Note: We do not create placeholder tensors for the `training`\n * boolean flag here, because there is no such thing in the TF.js imperative\n * backend.\n *\n * @param x The function to invoke iff `training` is `true`.\n * @param alt The function to invoke iff `training` is `false`.\n * @param training Boolean flag for whether training phase is active.\n * @returns The return value of `x()` if `training` is `true`, or the return\n *   value of `alt()` if `training` is `false`.\n */\n\nexport function inTrainPhase(x, alt) {\n  var training = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return training ? x() : alt();\n}","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\nexport var VALID_FAN_MODE_VALUES = ['fanIn', 'fanOut', 'fanAvg'];\nexport var VALID_DISTRIBUTION_VALUES = ['normal', 'uniform', 'truncatedNormal']; // We can't easily extract a string[] from the string union type, but we can\n// recapitulate the list, enforcing at compile time that the values are valid\n// and that we have the right number of them.\n\n/**\n * A string array of valid Initializer class names.\n *\n * This is guaranteed to match the `InitializerClassName` union type.\n */\n\nexport var initializerClassNames = ['Zeros', 'Ones', 'Constant', 'RandomNormal', 'RandomUniform', 'TruncatedNormal', 'VarianceScaling', 'Orthogonal', 'Identity'];","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\nimport { eye, linalg, mul, ones, randomUniform, scalar, serialization, tidy, truncatedNormal, zeros } from '@tensorflow/tfjs-core';\nimport * as K from './backend/tfjs_backend';\nimport { checkDataFormat } from './common';\nimport { NotImplementedError, ValueError } from './errors';\nimport { VALID_DISTRIBUTION_VALUES, VALID_FAN_MODE_VALUES } from './keras_format/initializer_config';\nimport { checkStringTypeUnionValue, deserializeKerasObject, serializeKerasObject } from './utils/generic_utils';\nimport { arrayProd } from './utils/math_utils';\nexport function checkFanMode(value) {\n  checkStringTypeUnionValue(VALID_FAN_MODE_VALUES, 'FanMode', value);\n}\nexport function checkDistribution(value) {\n  checkStringTypeUnionValue(VALID_DISTRIBUTION_VALUES, 'Distribution', value);\n}\n/**\n * Initializer base class.\n *\n * @doc {\n *   heading: 'Initializers', subheading: 'Classes', namespace: 'initializers'}\n */\n\nexport var Initializer = /*#__PURE__*/function (_serialization$Serial) {\n  _inherits(Initializer, _serialization$Serial);\n\n  var _super = _createSuper(Initializer);\n\n  function Initializer() {\n    _classCallCheck(this, Initializer);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Initializer, [{\n    key: \"fromConfigUsesCustomObjects\",\n    value: function fromConfigUsesCustomObjects() {\n      return false;\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      return {};\n    }\n  }]);\n\n  return Initializer;\n}(serialization.Serializable);\nexport var Zeros = /*#__PURE__*/function (_Initializer) {\n  _inherits(Zeros, _Initializer);\n\n  var _super2 = _createSuper(Zeros);\n\n  function Zeros() {\n    _classCallCheck(this, Zeros);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(Zeros, [{\n    key: \"apply\",\n    value: function apply(shape, dtype) {\n      return zeros(shape, dtype);\n    }\n  }]);\n\n  return Zeros;\n}(Initializer);\n/** @nocollapse */\n\nZeros.className = 'Zeros';\nserialization.registerClass(Zeros);\nexport var Ones = /*#__PURE__*/function (_Initializer2) {\n  _inherits(Ones, _Initializer2);\n\n  var _super3 = _createSuper(Ones);\n\n  function Ones() {\n    _classCallCheck(this, Ones);\n\n    return _super3.apply(this, arguments);\n  }\n\n  _createClass(Ones, [{\n    key: \"apply\",\n    value: function apply(shape, dtype) {\n      return ones(shape, dtype);\n    }\n  }]);\n\n  return Ones;\n}(Initializer);\n/** @nocollapse */\n\nOnes.className = 'Ones';\nserialization.registerClass(Ones);\nexport var Constant = /*#__PURE__*/function (_Initializer3) {\n  _inherits(Constant, _Initializer3);\n\n  var _super4 = _createSuper(Constant);\n\n  function Constant(args) {\n    var _this;\n\n    _classCallCheck(this, Constant);\n\n    _this = _super4.call(this);\n\n    if (typeof args !== 'object') {\n      throw new ValueError(\"Expected argument of type ConstantConfig but got \".concat(args));\n    }\n\n    if (args.value === undefined) {\n      throw new ValueError(\"config must have value set but got \".concat(args));\n    }\n\n    _this.value = args.value;\n    return _this;\n  }\n\n  _createClass(Constant, [{\n    key: \"apply\",\n    value: function apply(shape, dtype) {\n      var _this2 = this;\n\n      return tidy(function () {\n        return mul(scalar(_this2.value), ones(shape, dtype));\n      });\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      return {\n        value: this.value\n      };\n    }\n  }]);\n\n  return Constant;\n}(Initializer);\n/** @nocollapse */\n\nConstant.className = 'Constant';\nserialization.registerClass(Constant);\nexport var RandomUniform = /*#__PURE__*/function (_Initializer4) {\n  _inherits(RandomUniform, _Initializer4);\n\n  var _super5 = _createSuper(RandomUniform);\n\n  function RandomUniform(args) {\n    var _this3;\n\n    _classCallCheck(this, RandomUniform);\n\n    _this3 = _super5.call(this);\n    _this3.DEFAULT_MINVAL = -0.05;\n    _this3.DEFAULT_MAXVAL = 0.05;\n    _this3.minval = args.minval || _this3.DEFAULT_MINVAL;\n    _this3.maxval = args.maxval || _this3.DEFAULT_MAXVAL;\n    _this3.seed = args.seed;\n    return _this3;\n  }\n\n  _createClass(RandomUniform, [{\n    key: \"apply\",\n    value: function apply(shape, dtype) {\n      return randomUniform(shape, this.minval, this.maxval, dtype);\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      return {\n        minval: this.minval,\n        maxval: this.maxval,\n        seed: this.seed\n      };\n    }\n  }]);\n\n  return RandomUniform;\n}(Initializer);\n/** @nocollapse */\n\nRandomUniform.className = 'RandomUniform';\nserialization.registerClass(RandomUniform);\nexport var RandomNormal = /*#__PURE__*/function (_Initializer5) {\n  _inherits(RandomNormal, _Initializer5);\n\n  var _super6 = _createSuper(RandomNormal);\n\n  function RandomNormal(args) {\n    var _this4;\n\n    _classCallCheck(this, RandomNormal);\n\n    _this4 = _super6.call(this);\n    _this4.DEFAULT_MEAN = 0.;\n    _this4.DEFAULT_STDDEV = 0.05;\n    _this4.mean = args.mean || _this4.DEFAULT_MEAN;\n    _this4.stddev = args.stddev || _this4.DEFAULT_STDDEV;\n    _this4.seed = args.seed;\n    return _this4;\n  }\n\n  _createClass(RandomNormal, [{\n    key: \"apply\",\n    value: function apply(shape, dtype) {\n      dtype = dtype || 'float32';\n\n      if (dtype !== 'float32' && dtype !== 'int32') {\n        throw new NotImplementedError(\"randomNormal does not support dType \".concat(dtype, \".\"));\n      }\n\n      return K.randomNormal(shape, this.mean, this.stddev, dtype, this.seed);\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      return {\n        mean: this.mean,\n        stddev: this.stddev,\n        seed: this.seed\n      };\n    }\n  }]);\n\n  return RandomNormal;\n}(Initializer);\n/** @nocollapse */\n\nRandomNormal.className = 'RandomNormal';\nserialization.registerClass(RandomNormal);\nexport var TruncatedNormal = /*#__PURE__*/function (_Initializer6) {\n  _inherits(TruncatedNormal, _Initializer6);\n\n  var _super7 = _createSuper(TruncatedNormal);\n\n  function TruncatedNormal(args) {\n    var _this5;\n\n    _classCallCheck(this, TruncatedNormal);\n\n    _this5 = _super7.call(this);\n    _this5.DEFAULT_MEAN = 0.;\n    _this5.DEFAULT_STDDEV = 0.05;\n    _this5.mean = args.mean || _this5.DEFAULT_MEAN;\n    _this5.stddev = args.stddev || _this5.DEFAULT_STDDEV;\n    _this5.seed = args.seed;\n    return _this5;\n  }\n\n  _createClass(TruncatedNormal, [{\n    key: \"apply\",\n    value: function apply(shape, dtype) {\n      dtype = dtype || 'float32';\n\n      if (dtype !== 'float32' && dtype !== 'int32') {\n        throw new NotImplementedError(\"truncatedNormal does not support dType \".concat(dtype, \".\"));\n      }\n\n      return truncatedNormal(shape, this.mean, this.stddev, dtype, this.seed);\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      return {\n        mean: this.mean,\n        stddev: this.stddev,\n        seed: this.seed\n      };\n    }\n  }]);\n\n  return TruncatedNormal;\n}(Initializer);\n/** @nocollapse */\n\nTruncatedNormal.className = 'TruncatedNormal';\nserialization.registerClass(TruncatedNormal);\nexport var Identity = /*#__PURE__*/function (_Initializer7) {\n  _inherits(Identity, _Initializer7);\n\n  var _super8 = _createSuper(Identity);\n\n  function Identity(args) {\n    var _this6;\n\n    _classCallCheck(this, Identity);\n\n    _this6 = _super8.call(this);\n    _this6.gain = args.gain != null ? args.gain : 1.0;\n    return _this6;\n  }\n\n  _createClass(Identity, [{\n    key: \"apply\",\n    value: function apply(shape, dtype) {\n      var _this7 = this;\n\n      return tidy(function () {\n        if (shape.length !== 2 || shape[0] !== shape[1]) {\n          throw new ValueError('Identity matrix initializer can only be used for' + ' 2D square matrices.');\n        } else {\n          return mul(_this7.gain, eye(shape[0]));\n        }\n      });\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      return {\n        gain: this.gain\n      };\n    }\n  }]);\n\n  return Identity;\n}(Initializer);\n/** @nocollapse */\n\nIdentity.className = 'Identity';\nserialization.registerClass(Identity);\n/**\n * Computes the number of input and output units for a weight shape.\n * @param shape Shape of weight.\n * @param dataFormat data format to use for convolution kernels.\n *   Note that all kernels in Keras are standardized on the\n *   CHANNEL_LAST ordering (even when inputs are set to CHANNEL_FIRST).\n * @return An length-2 array: fanIn, fanOut.\n */\n\nfunction computeFans(shape) {\n  var dataFormat = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'channelsLast';\n  var fanIn;\n  var fanOut;\n  checkDataFormat(dataFormat);\n\n  if (shape.length === 2) {\n    fanIn = shape[0];\n    fanOut = shape[1];\n  } else if ([3, 4, 5].indexOf(shape.length) !== -1) {\n    if (dataFormat === 'channelsFirst') {\n      var receptiveFieldSize = arrayProd(shape, 2);\n      fanIn = shape[1] * receptiveFieldSize;\n      fanOut = shape[0] * receptiveFieldSize;\n    } else if (dataFormat === 'channelsLast') {\n      var _receptiveFieldSize = arrayProd(shape, 0, shape.length - 2);\n\n      fanIn = shape[shape.length - 2] * _receptiveFieldSize;\n      fanOut = shape[shape.length - 1] * _receptiveFieldSize;\n    }\n  } else {\n    var shapeProd = arrayProd(shape);\n    fanIn = Math.sqrt(shapeProd);\n    fanOut = Math.sqrt(shapeProd);\n  }\n\n  return [fanIn, fanOut];\n}\n\nexport var VarianceScaling = /*#__PURE__*/function (_Initializer8) {\n  _inherits(VarianceScaling, _Initializer8);\n\n  var _super9 = _createSuper(VarianceScaling);\n\n  /**\n   * Constructor of VarianceScaling.\n   * @throws ValueError for invalid value in scale.\n   */\n  function VarianceScaling(args) {\n    var _this8;\n\n    _classCallCheck(this, VarianceScaling);\n\n    _this8 = _super9.call(this);\n\n    if (args.scale < 0.0) {\n      throw new ValueError(\"scale must be a positive float. Got: \".concat(args.scale));\n    }\n\n    _this8.scale = args.scale == null ? 1.0 : args.scale;\n    _this8.mode = args.mode == null ? 'fanIn' : args.mode;\n    checkFanMode(_this8.mode);\n    _this8.distribution = args.distribution == null ? 'normal' : args.distribution;\n    checkDistribution(_this8.distribution);\n    _this8.seed = args.seed;\n    return _this8;\n  }\n\n  _createClass(VarianceScaling, [{\n    key: \"apply\",\n    value: function apply(shape, dtype) {\n      var fans = computeFans(shape);\n      var fanIn = fans[0];\n      var fanOut = fans[1];\n      var scale = this.scale;\n\n      if (this.mode === 'fanIn') {\n        scale /= Math.max(1, fanIn);\n      } else if (this.mode === 'fanOut') {\n        scale /= Math.max(1, fanOut);\n      } else {\n        scale /= Math.max(1, (fanIn + fanOut) / 2);\n      }\n\n      if (this.distribution === 'normal') {\n        var stddev = Math.sqrt(scale);\n        dtype = dtype || 'float32';\n\n        if (dtype !== 'float32' && dtype !== 'int32') {\n          throw new NotImplementedError(\"\".concat(this.getClassName(), \" does not support dType \").concat(dtype, \".\"));\n        }\n\n        return truncatedNormal(shape, 0, stddev, dtype, this.seed);\n      } else {\n        var limit = Math.sqrt(3 * scale);\n        return randomUniform(shape, -limit, limit, dtype);\n      }\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      return {\n        scale: this.scale,\n        mode: this.mode,\n        distribution: this.distribution,\n        seed: this.seed\n      };\n    }\n  }]);\n\n  return VarianceScaling;\n}(Initializer);\n/** @nocollapse */\n\nVarianceScaling.className = 'VarianceScaling';\nserialization.registerClass(VarianceScaling);\nexport var GlorotUniform = /*#__PURE__*/function (_VarianceScaling) {\n  _inherits(GlorotUniform, _VarianceScaling);\n\n  var _super10 = _createSuper(GlorotUniform);\n\n  /**\n   * Constructor of GlorotUniform\n   * @param scale\n   * @param mode\n   * @param distribution\n   * @param seed\n   */\n  function GlorotUniform(args) {\n    _classCallCheck(this, GlorotUniform);\n\n    return _super10.call(this, {\n      scale: 1.0,\n      mode: 'fanAvg',\n      distribution: 'uniform',\n      seed: args == null ? null : args.seed\n    });\n  }\n\n  _createClass(GlorotUniform, [{\n    key: \"getClassName\",\n    value: function getClassName() {\n      // In Python Keras, GlorotUniform is not a class, but a helper method\n      // that creates a VarianceScaling object. Use 'VarianceScaling' as\n      // class name to be compatible with that.\n      return VarianceScaling.className;\n    }\n  }]);\n\n  return GlorotUniform;\n}(VarianceScaling);\n/** @nocollapse */\n\nGlorotUniform.className = 'GlorotUniform';\nserialization.registerClass(GlorotUniform);\nexport var GlorotNormal = /*#__PURE__*/function (_VarianceScaling2) {\n  _inherits(GlorotNormal, _VarianceScaling2);\n\n  var _super11 = _createSuper(GlorotNormal);\n\n  /**\n   * Constructor of GlorotNormal.\n   * @param scale\n   * @param mode\n   * @param distribution\n   * @param seed\n   */\n  function GlorotNormal(args) {\n    _classCallCheck(this, GlorotNormal);\n\n    return _super11.call(this, {\n      scale: 1.0,\n      mode: 'fanAvg',\n      distribution: 'normal',\n      seed: args == null ? null : args.seed\n    });\n  }\n\n  _createClass(GlorotNormal, [{\n    key: \"getClassName\",\n    value: function getClassName() {\n      // In Python Keras, GlorotNormal is not a class, but a helper method\n      // that creates a VarianceScaling object. Use 'VarianceScaling' as\n      // class name to be compatible with that.\n      return VarianceScaling.className;\n    }\n  }]);\n\n  return GlorotNormal;\n}(VarianceScaling);\n/** @nocollapse */\n\nGlorotNormal.className = 'GlorotNormal';\nserialization.registerClass(GlorotNormal);\nexport var HeNormal = /*#__PURE__*/function (_VarianceScaling3) {\n  _inherits(HeNormal, _VarianceScaling3);\n\n  var _super12 = _createSuper(HeNormal);\n\n  function HeNormal(args) {\n    _classCallCheck(this, HeNormal);\n\n    return _super12.call(this, {\n      scale: 2.0,\n      mode: 'fanIn',\n      distribution: 'normal',\n      seed: args == null ? null : args.seed\n    });\n  }\n\n  _createClass(HeNormal, [{\n    key: \"getClassName\",\n    value: function getClassName() {\n      // In Python Keras, HeNormal is not a class, but a helper method\n      // that creates a VarianceScaling object. Use 'VarianceScaling' as\n      // class name to be compatible with that.\n      return VarianceScaling.className;\n    }\n  }]);\n\n  return HeNormal;\n}(VarianceScaling);\n/** @nocollapse */\n\nHeNormal.className = 'HeNormal';\nserialization.registerClass(HeNormal);\nexport var HeUniform = /*#__PURE__*/function (_VarianceScaling4) {\n  _inherits(HeUniform, _VarianceScaling4);\n\n  var _super13 = _createSuper(HeUniform);\n\n  function HeUniform(args) {\n    _classCallCheck(this, HeUniform);\n\n    return _super13.call(this, {\n      scale: 2.0,\n      mode: 'fanIn',\n      distribution: 'uniform',\n      seed: args == null ? null : args.seed\n    });\n  }\n\n  _createClass(HeUniform, [{\n    key: \"getClassName\",\n    value: function getClassName() {\n      // In Python Keras, HeUniform is not a class, but a helper method\n      // that creates a VarianceScaling object. Use 'VarianceScaling' as\n      // class name to be compatible with that.\n      return VarianceScaling.className;\n    }\n  }]);\n\n  return HeUniform;\n}(VarianceScaling);\n/** @nocollapse */\n\nHeUniform.className = 'HeUniform';\nserialization.registerClass(HeUniform);\nexport var LeCunNormal = /*#__PURE__*/function (_VarianceScaling5) {\n  _inherits(LeCunNormal, _VarianceScaling5);\n\n  var _super14 = _createSuper(LeCunNormal);\n\n  function LeCunNormal(args) {\n    _classCallCheck(this, LeCunNormal);\n\n    return _super14.call(this, {\n      scale: 1.0,\n      mode: 'fanIn',\n      distribution: 'normal',\n      seed: args == null ? null : args.seed\n    });\n  }\n\n  _createClass(LeCunNormal, [{\n    key: \"getClassName\",\n    value: function getClassName() {\n      // In Python Keras, LeCunNormal is not a class, but a helper method\n      // that creates a VarianceScaling object. Use 'VarianceScaling' as\n      // class name to be compatible with that.\n      return VarianceScaling.className;\n    }\n  }]);\n\n  return LeCunNormal;\n}(VarianceScaling);\n/** @nocollapse */\n\nLeCunNormal.className = 'LeCunNormal';\nserialization.registerClass(LeCunNormal);\nexport var LeCunUniform = /*#__PURE__*/function (_VarianceScaling6) {\n  _inherits(LeCunUniform, _VarianceScaling6);\n\n  var _super15 = _createSuper(LeCunUniform);\n\n  function LeCunUniform(args) {\n    _classCallCheck(this, LeCunUniform);\n\n    return _super15.call(this, {\n      scale: 1.0,\n      mode: 'fanIn',\n      distribution: 'uniform',\n      seed: args == null ? null : args.seed\n    });\n  }\n\n  _createClass(LeCunUniform, [{\n    key: \"getClassName\",\n    value: function getClassName() {\n      // In Python Keras, LeCunUniform is not a class, but a helper method\n      // that creates a VarianceScaling object. Use 'VarianceScaling' as\n      // class name to be compatible with that.\n      return VarianceScaling.className;\n    }\n  }]);\n\n  return LeCunUniform;\n}(VarianceScaling);\n/** @nocollapse */\n\nLeCunUniform.className = 'LeCunNormal';\nserialization.registerClass(LeCunUniform);\nexport var Orthogonal = /*#__PURE__*/function (_Initializer9) {\n  _inherits(Orthogonal, _Initializer9);\n\n  var _super16 = _createSuper(Orthogonal);\n\n  function Orthogonal(args) {\n    var _this9;\n\n    _classCallCheck(this, Orthogonal);\n\n    _this9 = _super16.call(this);\n    _this9.DEFAULT_GAIN = 1;\n    _this9.gain = args.gain == null ? _this9.DEFAULT_GAIN : args.gain;\n    _this9.seed = args.seed;\n\n    if (_this9.seed != null) {\n      throw new NotImplementedError('Random seed is not implemented for Orthogonal Initializer yet.');\n    }\n\n    return _this9;\n  }\n\n  _createClass(Orthogonal, [{\n    key: \"apply\",\n    value: function apply(shape, dtype) {\n      var _this10 = this;\n\n      return tidy(function () {\n        if (shape.length < 2) {\n          throw new NotImplementedError('Shape must be at least 2D.');\n        }\n\n        if (shape[0] * shape[1] > 2000) {\n          console.warn(\"Orthogonal initializer is being called on a matrix with more \" + \"than 2000 (\".concat(shape[0] * shape[1], \") elements: \") + \"Slowness may result.\");\n        } // TODO(cais): Add seed support.\n\n\n        var normalizedShape = shape[0] > shape[1] ? [shape[1], shape[0]] : shape;\n        var a = K.randomNormal(normalizedShape, 0, 1, 'float32');\n        var q = linalg.gramSchmidt(a);\n\n        if (shape[0] > shape[1]) {\n          q = q.transpose();\n        }\n\n        return mul(_this10.gain, q);\n      });\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      return {\n        gain: this.gain,\n        seed: this.seed\n      };\n    }\n  }]);\n\n  return Orthogonal;\n}(Initializer);\n/** @nocollapse */\n\nOrthogonal.className = 'Orthogonal';\nserialization.registerClass(Orthogonal); // Maps the JavaScript-like identifier keys to the corresponding registry\n// symbols.\n\nexport var INITIALIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP = {\n  'constant': 'Constant',\n  'glorotNormal': 'GlorotNormal',\n  'glorotUniform': 'GlorotUniform',\n  'heNormal': 'HeNormal',\n  'heUniform': 'HeUniform',\n  'identity': 'Identity',\n  'leCunNormal': 'LeCunNormal',\n  'leCunUniform': 'LeCunUniform',\n  'ones': 'Ones',\n  'orthogonal': 'Orthogonal',\n  'randomNormal': 'RandomNormal',\n  'randomUniform': 'RandomUniform',\n  'truncatedNormal': 'TruncatedNormal',\n  'varianceScaling': 'VarianceScaling',\n  'zeros': 'Zeros'\n};\n\nfunction deserializeInitializer(config) {\n  var customObjects = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return deserializeKerasObject(config, serialization.SerializationMap.getMap().classNameMap, customObjects, 'initializer');\n}\n\nexport function serializeInitializer(initializer) {\n  return serializeKerasObject(initializer);\n}\nexport function getInitializer(identifier) {\n  if (typeof identifier === 'string') {\n    var className = identifier in INITIALIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP ? INITIALIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP[identifier] : identifier;\n    /* We have four 'helper' classes for common initializers that\n    all get serialized as 'VarianceScaling' and shouldn't go through\n    the deserializeInitializer pathway. */\n\n    if (className === 'GlorotNormal') {\n      return new GlorotNormal();\n    } else if (className === 'GlorotUniform') {\n      return new GlorotUniform();\n    } else if (className === 'HeNormal') {\n      return new HeNormal();\n    } else if (className === 'HeUniform') {\n      return new HeUniform();\n    } else if (className === 'LeCunNormal') {\n      return new LeCunNormal();\n    } else if (className === 'LeCunUniform') {\n      return new LeCunUniform();\n    } else {\n      var config = {};\n      config['className'] = className;\n      config['config'] = {};\n      return deserializeInitializer(config);\n    }\n  } else if (identifier instanceof Initializer) {\n    return identifier;\n  } else {\n    return deserializeInitializer(identifier);\n  }\n}","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/**\n * Utilities related to persistent state in the backend.\n */\n\n/**\n * An ID to track `tf.SymbolicTensor`s and derived classes.\n * Required in different places in engine/topology.ts to identify unique\n * tensors.\n */\nvar _nextUniqueTensorId = 0;\nexport function getNextUniqueTensorId() {\n  return _nextUniqueTensorId++;\n}\nvar _uidPrefixes = {};\n/**\n * Provides a unique UID given a string prefix.\n *\n * @param prefix\n */\n\nexport function getUid() {\n  var prefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n  if (!(prefix in _uidPrefixes)) {\n    _uidPrefixes[prefix] = 0;\n  }\n\n  _uidPrefixes[prefix] += 1;\n  return prefix + _uidPrefixes[prefix].toString();\n}","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\nimport { ValueError } from '../errors'; // tslint:enable\n\n/**\n * Determine whether the input is an Array of Shapes.\n */\n\nexport function isArrayOfShapes(x) {\n  return Array.isArray(x) && Array.isArray(x[0]);\n}\n/**\n * Special case of normalizing shapes to lists.\n *\n * @param x A shape or list of shapes to normalize into a list of Shapes.\n * @return A list of Shapes.\n */\n\nexport function normalizeShapeList(x) {\n  if (x.length === 0) {\n    return [];\n  }\n\n  if (!Array.isArray(x[0])) {\n    return [x];\n  }\n\n  return x;\n}\n/**\n * Helper function to obtain exactly one Tensor.\n * @param xs: A single `tf.Tensor` or an `Array` of `tf.Tensor`s.\n * @return A single `tf.Tensor`. If `xs` is an `Array`, return the first one.\n * @throws ValueError: If `xs` is an `Array` and its length is not 1.\n */\n\nexport function getExactlyOneTensor(xs) {\n  var x;\n\n  if (Array.isArray(xs)) {\n    if (xs.length !== 1) {\n      throw new ValueError(\"Expected Tensor length to be 1; got \".concat(xs.length));\n    }\n\n    x = xs[0];\n  } else {\n    x = xs;\n  }\n\n  return x;\n}\n/**\n * Helper function to obtain exactly on instance of Shape.\n *\n * @param shapes Input single `Shape` or Array of `Shape`s.\n * @returns If input is a single `Shape`, return it unchanged. If the input is\n *   an `Array` containing exactly one instance of `Shape`, return the instance.\n *   Otherwise, throw a `ValueError`.\n * @throws ValueError: If input is an `Array` of `Shape`s, and its length is not\n *   1.\n */\n\nexport function getExactlyOneShape(shapes) {\n  if (Array.isArray(shapes) && Array.isArray(shapes[0])) {\n    if (shapes.length === 1) {\n      shapes = shapes;\n      return shapes[0];\n    } else {\n      throw new ValueError(\"Expected exactly 1 Shape; got \".concat(shapes.length));\n    }\n  } else {\n    return shapes;\n  }\n}","function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/**\n * Count the elements in an Array of LayerVariables.\n *\n * @param weights: The LayerVariables of which the constituent numbers are to\n *   be counted.\n * @returns A count of the elements in all the LayerVariables\n */\nexport function countParamsInWeights(weights) {\n  var count = 0;\n\n  var _iterator = _createForOfIteratorHelper(weights),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var weight = _step.value;\n\n      if (weight.shape.length === 0) {\n        count += 1;\n      } else {\n        count += weight.shape.reduce(function (a, b) {\n          return a * b;\n        });\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return count;\n}","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\nimport * as tfc from '@tensorflow/tfjs-core';\nimport { variableGrads } from '@tensorflow/tfjs-core';\nimport { getNextUniqueTensorId } from './backend/state';\nimport { getScopedTensorName, getUniqueTensorName } from './common';\nimport { NotImplementedError } from './errors';\nvar DEFAULT_VARIABLE_NAME_PREFIX = 'Variable';\n/**\n * A `tf.layers.LayerVariable` is similar to a `tf.Tensor` in that it has a\n * dtype and shape, but its value is mutable.  The value is itself represented\n * as a`tf.Tensor`, and can be read with the `read()` method and updated with\n * the `write()` method.\n */\n\nexport var LayerVariable = /*#__PURE__*/function () {\n  /**\n   * Construct Variable from a `tf.Tensor`.\n   *\n   * If not explicitly named, the Variable will be given a name with the\n   * prefix 'Variable'. Variable names are unique. In the case of name\n   * collision, suffixies '_<num>' will be added to the name.\n   *\n   * @param val Initial value of the Variable.\n   * @param name Name of the variable. If `null` or `undefined` is provided, it\n   *   will default a name with the prefix 'Variable'.\n   * @param constraint Optional, projection function to be applied to the\n   * variable after optimize updates\n   * @throws ValueError if `name` is `null` or `undefined`.\n   */\n  function LayerVariable(val) {\n    var dtype = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'float32';\n    var name = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_VARIABLE_NAME_PREFIX;\n    var trainable = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n    var constraint = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n\n    _classCallCheck(this, LayerVariable);\n\n    this.dtype = dtype == null ? 'float32' : dtype;\n    this.shape = val.shape;\n    this.id = getNextUniqueTensorId();\n    name = name == null ? DEFAULT_VARIABLE_NAME_PREFIX : name;\n    this.originalName = getScopedTensorName(name);\n    this.name = getUniqueTensorName(this.originalName);\n    this.trainable_ = trainable;\n    this.constraint = constraint;\n    this.val = tfc.variable(val, this.trainable_, this.name, this.dtype);\n  }\n  /**\n   * Get a snapshot of the Variable's value.\n   *\n   * The returned value is a snapshot of the Variable's value at the time of\n   * the invocation. Future mutations in the value of the tensor will only\n   * be reflected by future calls to this method.\n   */\n\n\n  _createClass(LayerVariable, [{\n    key: \"read\",\n    value: function read() {\n      this.assertNotDisposed();\n      return this.val;\n    }\n    /**\n     * Update the value of the Variable.\n     *\n     * @param newVal: The new value to update to. Must be consistent with the\n     *   dtype and shape of the Variable.\n     * @return This Variable.\n     */\n\n  }, {\n    key: \"write\",\n    value: function write(newVal) {\n      // TODO(cais): Once  TF.js Core supports Tensor.dtype, check dtype match.\n      this.assertNotDisposed();\n      checkShapesMatch(this.val, newVal); // Skip updating if this is the exact same tensor.\n\n      if (this.val.id !== newVal.id) {\n        this.val.assign(newVal);\n\n        if (this.constraint != null) {\n          this.val.assign(this.constraint.apply(this.val));\n        }\n      }\n\n      return this;\n    }\n    /**\n     * Dispose this LayersVariable instance from memory.\n     */\n\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.assertNotDisposed();\n      this.val.dispose();\n    }\n  }, {\n    key: \"assertNotDisposed\",\n    value: function assertNotDisposed() {\n      if (this.val.isDisposed) {\n        throw new Error(\"LayersVariable \".concat(this.name, \" is already disposed.\"));\n      }\n    }\n  }, {\n    key: \"trainable\",\n    get: function get() {\n      return this.trainable_;\n    },\n    set: function set(trainable) {\n      this.trainable_ = trainable;\n      this.val.trainable = trainable;\n    }\n  }]);\n\n  return LayerVariable;\n}();\n\nfunction checkShapesMatch(x, y) {\n  if (x.shape.toString() !== y.shape.toString()) {\n    throw new Error('Shape mismatch: ' + JSON.stringify(x.shape) + ' vs. ' + JSON.stringify(y.shape));\n  }\n}\n/**\n * Create a Variable.\n * @param x The initial value of the `Variable`.\n * @param dtype optional, the type of the variable.\n * @param name optional, the name of the variable, default provided by\n * Variable.\n * @param constraint optional, a constraint to be applied after every update.\n * @return The newly instantiated `Variable`.\n */\n\n\nexport function variable(x, dtype, name, constraint) {\n  return new LayerVariable(x, dtype, name, true, constraint);\n}\n/**\n * Instantiates an all-zeros Variable and returns it.\n *\n * @param shape Shape of the tensor.\n * @param dtype DType of the tensor.\n * @param name Name of the tensor.\n * @return An all-zero Variable.\n */\n\nexport function zerosVariable(shape, dtype, name) {\n  // TODO(cais): Implement logic for dtype.\n  return new LayerVariable(tfc.zeros(shape), dtype, name);\n}\n/**\n * Instantiates an all-zeros tensor of the same shape as another tensor.\n *\n * @param x The other tensor.\n * @param dtype DType of the tensor.\n * @param name Name of the tensor.\n * @return A newly instantiated Variable.\n */\n\nexport function zerosLike(x, dtype, name) {\n  return new LayerVariable(tfc.zerosLike(x), dtype, name);\n}\n/**\n * Instantiates an all-ones tensor and returns it.\n *\n * @param shape Shape of the tensor.\n * @param dtype DType of the tensor.\n * @param name Name of the tensor.\n * @return An all-ones Variable.\n */\n\nexport function onesVariable(shape, dtype, name) {\n  // TODO(cais): Implement logic for dtype.\n  var allocated = tfc.ones(shape);\n  return new LayerVariable(allocated, dtype, name);\n}\n/**\n * Instantiates an all-ones tensor of the same shape as another tensor.\n *\n * @param x The other tensor.\n * @param dtype DType of the tensor.\n * @param name Name of the tensor.\n * @return A newly instantiated Variable.\n */\n\nexport function onesLike(x, dtype, name) {\n  var allocated = tfc.onesLike(x);\n  return new LayerVariable(allocated, dtype, name);\n}\n/**\n * Instantiate an identity matrix and returns it, as a Variable\n *\n * @param size Number of rows/columns.\n * @param dtype Data type of returned Variable.\n * @param name Name of returned Variable.\n * @return A Variable, an identity matrix.\n */\n\nexport function eyeVariable(size, dtype, name) {\n  return new LayerVariable(tfc.eye(size), dtype, name);\n}\n/**\n * Get a Variable with uniform distribution of values.\n * @param shape Shape of the tensor.\n * @param minval Lower bound of the uniform distribution.\n * @param maxval Upper bound of the uniform distribution.\n * @param dtype\n * @param seed\n * @param name Optional name.\n * @return The uniform-random Variable.\n */\n\nexport function randomUniformVariable(shape, minval, maxval, dtype, seed) {\n  var name = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 'randomUniform';\n  return new LayerVariable(tfc.randomUniform(shape, minval, maxval, dtype), dtype, name);\n}\n/**\n * Get a Variable with truncated-normal distribution of values.\n * @param shape Shape of the tensor.\n * @param mean mean value of the normal distribution.\n * @param stddev standard deviation of the normal distribution.\n * @param dtype\n * @param seed\n * @param name Optional name.\n * @return The truncated-normal-random Variable.\n */\n\nexport function truncatedNormalVariable(shape) {\n  var mean = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.0;\n  var stddev = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1.0;\n  var dtype = arguments.length > 3 ? arguments[3] : undefined;\n  var seed = arguments.length > 4 ? arguments[4] : undefined;\n  var name = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 'truncatedNormal';\n  // TODO(cais): Implement logic for dtype and seed once they are supported\n  // by deeplearn.js.\n  dtype = dtype || 'float32';\n\n  if (dtype !== 'float32' && dtype !== 'int32') {\n    throw new NotImplementedError(\"randomNormal does not support dType \".concat(dtype, \".\"));\n  }\n\n  return new LayerVariable(tfc.truncatedNormal(shape, mean, stddev, dtype, seed), dtype, name);\n}\n/**\n * Get a Variable with normal distribution of values.\n * @param shape Shape of the tensor.\n * @param mean mean value of the normal distribution.\n * @param stddev standard deviation of the normal distribution.\n * @param dtype\n * @param seed\n * @param name Optional name.\n * @return The truncated-normal-random Variable.\n */\n\nexport function randomNormalVariable(shape) {\n  var mean = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.0;\n  var stddev = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1.0;\n  var dtype = arguments.length > 3 ? arguments[3] : undefined;\n  var seed = arguments.length > 4 ? arguments[4] : undefined;\n  var name = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 'randomNormal';\n  dtype = dtype || 'float32';\n\n  if (dtype !== 'float32' && dtype !== 'int32') {\n    throw new NotImplementedError(\"randomNormalVariable does not support dType \".concat(dtype, \".\"));\n  }\n\n  return new LayerVariable(tfc.randomNormal(shape, mean, stddev, dtype, seed), dtype, name);\n}\n/**\n * Update the value of a Variable.\n * @param x The Variable to be updated.\n * @param xNew The new value to update to.\n * @return The Variable updated.\n */\n\nexport function update(x, xNew) {\n  return x.write(xNew);\n}\n/**\n * Update the value of a Variable by adding an increment.\n * @param x The Variable to be updated.\n * @param increment The incrment to add to `x`.\n * @return The Variable updated.\n */\n\nexport function updateAdd(x, increment) {\n  return x.write(tfc.add(x.read(), increment));\n}\n/**\n * Update the value of a Variable by subtracting a decrement.\n * @param x The Variable to be updated.\n * @param decrement The decrement to subtract from `x`.\n * @return The Variable updated.\n */\n\nexport function updateSub(x, decrement) {\n  return x.write(tfc.sub(x.read(), decrement));\n}\n/**\n * Get the values of an array of Variables.\n *\n * @param tensors An `Array` of `Variable`s to get the values of.\n * @return The values of the inputs, as an `Array` of`tf.Tensor`s.\n */\n\nexport function batchGetValue(xs) {\n  return xs.map(function (x) {\n    return x.read();\n  });\n}\n/**\n * Update the value of multiple Variables at once.\n *\n * @param variablesAndValues An `Array`, each element is of type\n *   [Variable, Tensor]. The first item is the\n *   `Variable` of which the value is to be updated. The second item\n *   carries the new value.\n */\n\nexport function batchSetValue(variablesAndValues) {\n  variablesAndValues.forEach(function (variableAndValue) {\n    var variable = variableAndValue[0];\n    variable.write(variableAndValue[1]);\n  });\n}\n/**\n * Returns the gradients of `variables` w.r.t. the return value of `lossFn`.\n * @param lossFn A function which returns a Scalar to be used as the function\n *   value (i.e., numerator) for differentiation.\n * @param variables List of variables to be used as the independent variables\n *   (i.e., denominator) for differentiation.\n * @returns An Array of gradients tensors.\n */\n\nexport function gradients(lossFn, variables) {\n  // TODO(cais): The return type signature can be simplified if deeplearn makes\n  //   the corresponding type public.\n  var variableList = variables.map(function (variable) {\n    return variable.read();\n  });\n  var valudAndGrads = variableGrads(lossFn, variableList);\n  return variables.map(function (variable) {\n    return valudAndGrads.grads[variable.name];\n  });\n}","import _toConsumableArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _inherits from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/* Original source: keras/engine/topology.py */\nimport { serialization, tidy, util } from '@tensorflow/tfjs-core';\nimport { getNextUniqueTensorId, getUid } from '../backend/state';\nimport { getScopedTensorName, getUniqueTensorName, nameScope } from '../common';\nimport { AttributeError, NotImplementedError, RuntimeError, ValueError } from '../errors';\nimport { getInitializer } from '../initializers';\nimport * as generic_utils from '../utils/generic_utils';\nimport * as types_utils from '../utils/types_utils';\nimport * as variable_utils from '../utils/variable_utils';\nimport { batchGetValue, batchSetValue, LayerVariable } from '../variables';\n/**\n * Specifies the ndim, dtype and shape of every input to a layer.\n *\n * Every layer should expose (if appropriate) an `inputSpec` attribute:\n * a list of instances of InputSpec (one per input tensor).\n *\n * A null entry in a shape is compatible with any dimension,\n * a null shape is compatible with any shape.\n */\n\nexport var InputSpec = function InputSpec(args) {\n  _classCallCheck(this, InputSpec);\n\n  this.dtype = args.dtype;\n  this.shape = args.shape;\n  /*\n    TODO(michaelterry): Could throw error if ndim and shape are both defined\n      (then backport).\n  */\n\n  if (args.shape != null) {\n    this.ndim = args.shape.length;\n  } else {\n    this.ndim = args.ndim;\n  }\n\n  this.maxNDim = args.maxNDim;\n  this.minNDim = args.minNDim;\n  this.axes = args.axes || {};\n};\n/**\n * `tf.SymbolicTensor` is a placeholder for a Tensor without any concrete value.\n *\n * They are most often encountered when building a graph of `Layer`s for a\n * a `tf.LayersModel` and the input data's shape, but not values are known.\n *\n * @doc {heading: 'Models', 'subheading': 'Classes'}\n */\n\nexport var SymbolicTensor =\n/**\n *\n * @param dtype\n * @param shape\n * @param sourceLayer The Layer that produced this symbolic tensor.\n * @param inputs The inputs passed to sourceLayer's __call__() method.\n * @param nodeIndex\n * @param tensorIndex\n * @param callArgs The keyword arguments passed to the __call__() method.\n * @param name\n * @param outputTensorIndex The index of this tensor in the list of outputs\n *   returned by apply().\n */\nfunction SymbolicTensor(dtype, shape, sourceLayer, inputs, callArgs, name, outputTensorIndex) {\n  _classCallCheck(this, SymbolicTensor);\n\n  this.dtype = dtype;\n  this.shape = shape;\n  this.sourceLayer = sourceLayer;\n  this.inputs = inputs;\n  this.callArgs = callArgs;\n  this.outputTensorIndex = outputTensorIndex;\n  this.id = getNextUniqueTensorId();\n\n  if (name != null) {\n    this.originalName = getScopedTensorName(name);\n    this.name = getUniqueTensorName(this.originalName);\n  }\n\n  this.rank = shape.length;\n};\nvar _nextNodeID = 0;\n/**\n * A `Node` describes the connectivity between two layers.\n *\n * Each time a layer is connected to some new input,\n * a node is added to `layer.inboundNodes`.\n *\n * Each time the output of a layer is used by another layer,\n * a node is added to `layer.outboundNodes`.\n *\n * `nodeIndices` and `tensorIndices` are basically fine-grained coordinates\n * describing the origin of the `inputTensors`, verifying the following:\n *\n * `inputTensors[i] ==\n * inboundLayers[i].inboundNodes[nodeIndices[i]].outputTensors[\n *   tensorIndices[i]]`\n *\n * A node from layer A to layer B is added to:\n *     A.outboundNodes\n *     B.inboundNodes\n */\n\nexport var Node = /*#__PURE__*/function () {\n  function Node(args, // TODO(michaelterry): Define actual type for this.\n  callArgs) {\n    _classCallCheck(this, Node);\n\n    this.callArgs = callArgs;\n    this.id = _nextNodeID++;\n    /*\n      Layer instance (NOT a list).\n      this is the layer that takes a list of input tensors\n      and turns them into a list of output tensors.\n      the current node will be added to\n      the inboundNodes of outboundLayer.\n    */\n\n    this.outboundLayer = args.outboundLayer;\n    /*\n        The following 3 properties describe where\n        the input tensors come from: which layers,\n        and for each layer, which node and which\n        tensor output of each node.\n    */\n    // List of layer instances.\n\n    this.inboundLayers = args.inboundLayers; // List of integers, 1:1 mapping with inboundLayers.\n\n    this.nodeIndices = args.nodeIndices; // List of integers, 1:1 mapping with inboundLayers.\n\n    this.tensorIndices = args.tensorIndices;\n    /*\n        Following 2 properties:\n        tensor inputs and outputs of outboundLayer.\n    */\n    // List of tensors. 1:1 mapping with inboundLayers.\n\n    this.inputTensors = args.inputTensors; // List of tensors, created by outboundLayer.call().\n\n    this.outputTensors = args.outputTensors;\n    /*\n        Following 2 properties: input and output masks.\n        List of tensors, 1:1 mapping with inputTensor.\n    */\n\n    this.inputMasks = args.inputMasks; // List of tensors, created by outboundLayer.computeMask().\n\n    this.outputMasks = args.outputMasks; // Following 2 properties: input and output shapes.\n    // List of shape tuples, shapes of inputTensors.\n\n    this.inputShapes = args.inputShapes; // List of shape tuples, shapes of outputTensors.\n\n    this.outputShapes = args.outputShapes; // Add nodes to all layers involved.\n\n    var _iterator = _createForOfIteratorHelper(args.inboundLayers),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var layer = _step.value;\n\n        if (layer != null) {\n          layer.outboundNodes.push(this);\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    args.outboundLayer.inboundNodes.push(this);\n  }\n\n  _createClass(Node, [{\n    key: \"getConfig\",\n    value: function getConfig() {\n      var inboundNames = [];\n\n      var _iterator2 = _createForOfIteratorHelper(this.inboundLayers),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var layer = _step2.value;\n\n          if (layer != null) {\n            inboundNames.push(layer.name);\n          } else {\n            inboundNames.push(null);\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      return {\n        outboundLayer: this.outboundLayer ? this.outboundLayer.name : null,\n        inboundLayers: inboundNames,\n        nodeIndices: this.nodeIndices,\n        tensorIndices: this.tensorIndices\n      };\n    }\n  }]);\n\n  return Node;\n}();\nvar _nextLayerID = 0;\n/**\n * A layer is a grouping of operations and weights that can be composed to\n * create a `tf.LayersModel`.\n *\n * Layers are constructed by using the functions under the\n * [tf.layers](#Layers-Basic) namespace.\n *\n * @doc {heading: 'Layers', subheading: 'Classes', namespace: 'layers'}\n */\n\nexport var Layer = /*#__PURE__*/function (_serialization$Serial) {\n  _inherits(Layer, _serialization$Serial);\n\n  var _super = _createSuper(Layer);\n\n  function Layer() {\n    var _this;\n\n    var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Layer);\n\n    _this = _super.call(this);\n    _this._callHook = null;\n    _this._addedWeightNames = []; // Porting Notes: PyKeras does not have this property in this base Layer\n    //   class. Instead lets Layer subclass set it dynamically and checks the\n    //   value with `hasattr`. In tfjs-layers, we let this be a member of this\n    //   base class.\n\n    _this._stateful = false;\n    _this.id = _nextLayerID++;\n    _this.activityRegularizer = null;\n    _this.inputSpec = null;\n    _this.supportsMasking = false; // These properties will be set upon call of this.build()\n\n    _this._trainableWeights = [];\n    _this._nonTrainableWeights = [];\n    _this._losses = [];\n    _this._updates = [];\n    _this._built = false;\n    /*\n      These lists will be filled via successive calls\n      to this.addInboundNode().\n     */\n\n    _this.inboundNodes = [];\n    _this.outboundNodes = [];\n    var name = args.name;\n\n    if (!name) {\n      var prefix = _this.getClassName();\n\n      name = generic_utils.toSnakeCase(prefix) + '_' + getUid(prefix);\n    }\n\n    _this.name = name;\n    _this.trainable_ = args.trainable == null ? true : args.trainable;\n\n    if (args.inputShape != null || args.batchInputShape != null) {\n      /*\n        In this case we will later create an input layer\n        to insert before the current layer\n       */\n      var batchInputShape;\n\n      if (args.batchInputShape != null) {\n        batchInputShape = args.batchInputShape;\n      } else if (args.inputShape != null) {\n        var batchSize = null;\n\n        if (args.batchSize != null) {\n          batchSize = args.batchSize;\n        }\n\n        batchInputShape = [batchSize].concat(args.inputShape);\n      }\n\n      _this.batchInputShape = batchInputShape; // Set dtype.\n\n      var dtype = args.dtype;\n\n      if (dtype == null) {\n        dtype = args.inputDType;\n      }\n\n      if (dtype == null) {\n        dtype = 'float32';\n      }\n\n      _this.dtype = dtype;\n    }\n\n    if (args.weights != null) {\n      _this.initialWeights = args.weights;\n    } else {\n      _this.initialWeights = null;\n    } // The value of `_refCount` is initialized to null. When the layer is used\n    // in a symbolic way for the first time, it will be set to 1.\n\n\n    _this._refCount = null;\n    _this.fastWeightInitDuringBuild = false;\n    return _this;\n  }\n  /**\n   * Converts a layer and its index to a unique (immutable type) name.\n   * This function is used internally with `this.containerNodes`.\n   * @param layer The layer.\n   * @param nodeIndex The layer's position (e.g. via enumerate) in a list of\n   *   nodes.\n   *\n   * @returns The unique name.\n   */\n\n\n  _createClass(Layer, [{\n    key: \"getNodeAtIndex\",\n    value:\n    /**\n     * Returns this.inboundNode at index nodeIndex.\n     *\n     * Porting note: This is a replacement for _get_node_attribute_at_index()\n     * @param nodeIndex\n     * @param attrName The name of the attribute related to request for this node.\n     */\n    function getNodeAtIndex(nodeIndex, attrName) {\n      if (this.inboundNodes.length === 0) {\n        throw new RuntimeError('The layer has never been called ' + \"and thus has no defined \".concat(attrName, \".\"));\n      }\n\n      if (this.inboundNodes.length <= nodeIndex) {\n        throw new ValueError(\"Asked to get \".concat(attrName, \" at node \").concat(nodeIndex, \", \") + \"but the layer has only \".concat(this.inboundNodes.length, \" inbound nodes.\"));\n      }\n\n      return this.inboundNodes[nodeIndex];\n    }\n    /**\n     * Retrieves the input tensor(s) of a layer at a given node.\n     *\n     * @param nodeIndex Integer, index of the node from which to retrieve the\n     *   attribute. E.g. `nodeIndex=0` will correspond to the first time the layer\n     *   was called.\n     *\n     * @return A tensor (or list of tensors if the layer has multiple inputs).\n     */\n\n  }, {\n    key: \"getInputAt\",\n    value: function getInputAt(nodeIndex) {\n      return generic_utils.singletonOrArray(this.getNodeAtIndex(nodeIndex, 'input').inputTensors);\n    }\n    /**\n     * Retrieves the output tensor(s) of a layer at a given node.\n     *\n     * @param nodeIndex Integer, index of the node from which to retrieve the\n     *   attribute. E.g. `nodeIndex=0` will correspond to the first time the layer\n     *   was called.\n     *\n     * @return A tensor (or list of tensors if the layer has multiple outputs).\n     */\n\n  }, {\n    key: \"getOutputAt\",\n    value: function getOutputAt(nodeIndex) {\n      return generic_utils.singletonOrArray(this.getNodeAtIndex(nodeIndex, 'output').outputTensors);\n    } // Properties\n\n    /**\n     * Retrieves the input tensor(s) of a layer.\n     *\n     * Only applicable if the layer has exactly one inbound node,\n     * i.e. if it is connected to one incoming layer.\n     *\n     * @return Input tensor or list of input tensors.\n     *\n     * @exception AttributeError if the layer is connected to more than one\n     *   incoming layers.\n     */\n\n  }, {\n    key: \"input\",\n    get: function get() {\n      if (this.inboundNodes.length > 1) {\n        throw new AttributeError(\"Layer \".concat(this.name) + ' has multiple inbound nodes, ' + 'hence the notion of \"layer input\" ' + 'is ill-defined. ' + 'Use `getInputAt(nodeIndex)` instead.');\n      } else if (this.inboundNodes.length === 0) {\n        throw new AttributeError(\"Layer \".concat(this.name) + ' is not connected, no input to return.');\n      }\n\n      return generic_utils.singletonOrArray(this.getNodeAtIndex(0, 'input').inputTensors);\n    }\n    /**\n     * Retrieves the output tensor(s) of a layer.\n     *\n     * Only applicable if the layer has exactly one inbound node,\n     * i.e. if it is connected to one incoming layer.\n     *\n     * @return Output tensor or list of output tensors.\n     *\n     * @exception AttributeError if the layer is connected to more than one\n     *   incoming layers.\n     */\n\n  }, {\n    key: \"output\",\n    get: function get() {\n      if (this.inboundNodes.length === 0) {\n        throw new AttributeError(\"Layer \".concat(this.name) + ' has no inbound nodes.');\n      }\n\n      if (this.inboundNodes.length > 1) {\n        throw new AttributeError(\"Layer \".concat(this.name) + ' has multiple inbound nodes, ' + 'hence the notion of \"layer output\" ' + 'is ill-defined. ' + 'Use `getOutputAt(nodeIndex)` instead.');\n      }\n\n      return generic_utils.singletonOrArray(this.getNodeAtIndex(0, 'output').outputTensors);\n    }\n  }, {\n    key: \"losses\",\n    get: function get() {\n      return this._losses;\n    }\n    /**\n     * Retrieves the Layer's current loss values.\n     *\n     * Used for regularizers during training.\n     */\n\n  }, {\n    key: \"calculateLosses\",\n    value: function calculateLosses() {\n      // Porting Node: This is an augmentation to Layer.loss in PyKeras.\n      //   In PyKeras, Layer.loss returns symbolic tensors. Here a concrete\n      //   Tensor (specifically Scalar) values are returned. This is due to the\n      //   imperative backend.\n      return this.losses.map(function (lossFn) {\n        return lossFn();\n      });\n    }\n  }, {\n    key: \"updates\",\n    get: function get() {\n      return this._updates;\n    }\n  }, {\n    key: \"built\",\n    get: function get() {\n      return this._built;\n    },\n    set: function set(built) {\n      this._built = built;\n    }\n  }, {\n    key: \"trainable\",\n    get: function get() {\n      return this.trainable_;\n    },\n    set: function set(trainable) {\n      this._trainableWeights.forEach(function (w) {\n        return w.trainable = trainable;\n      });\n\n      this.trainable_ = trainable;\n    }\n  }, {\n    key: \"trainableWeights\",\n    get: function get() {\n      if (this.trainable_) {\n        return this._trainableWeights.filter(function (w) {\n          return w.trainable;\n        });\n      } else {\n        return [];\n      }\n    },\n    set: function set(weights) {\n      this._trainableWeights = weights;\n    }\n  }, {\n    key: \"nonTrainableWeights\",\n    get: function get() {\n      if (this.trainable) {\n        return this._trainableWeights.filter(function (w) {\n          return !w.trainable;\n        }).concat(this._nonTrainableWeights);\n      } else {\n        return this._trainableWeights.concat(this._nonTrainableWeights);\n      }\n    },\n    set: function set(weights) {\n      this._nonTrainableWeights = weights;\n    }\n    /**\n     * The concatenation of the lists trainableWeights and nonTrainableWeights\n     * (in this order).\n     */\n\n  }, {\n    key: \"weights\",\n    get: function get() {\n      return this.trainableWeights.concat(this.nonTrainableWeights);\n    }\n  }, {\n    key: \"stateful\",\n    get: function get() {\n      return this._stateful;\n    }\n    /**\n     * Reset the states of the layer.\n     *\n     * This method of the base Layer class is essentially a no-op.\n     * Subclasses that are stateful (e.g., stateful RNNs) should override this\n     * method.\n     */\n\n  }, {\n    key: \"resetStates\",\n    value: function resetStates() {\n      if (!this.stateful) {\n        throw new Error('Cannot call the resetStates() method of a non-stateful Layer ' + 'object.');\n      }\n    }\n    /**\n     * Checks compatibility between the layer and provided inputs.\n     *\n     * This checks that the tensor(s) `input`\n     * verify the input assumptions of the layer\n     * (if any). If not, exceptions are raised.\n     *\n     * @param inputs Input tensor or list of input tensors.\n     *\n     * @exception ValueError in case of mismatch between\n     *   the provided inputs and the expectations of the layer.\n     */\n\n  }, {\n    key: \"assertInputCompatibility\",\n    value: function assertInputCompatibility(inputs) {\n      inputs = generic_utils.toList(inputs);\n\n      if (this.inputSpec == null || this.inputSpec.length === 0) {\n        return;\n      }\n\n      var inputSpec = generic_utils.toList(this.inputSpec);\n\n      if (inputs.length !== inputSpec.length) {\n        throw new ValueError(\"Layer \".concat(this.name, \" expects \").concat(inputSpec.length, \" inputs, \") + \"but it received \".concat(inputs.length, \" input tensors. \") + \"Input received: \".concat(inputs));\n      }\n\n      for (var inputIndex = 0; inputIndex < inputs.length; inputIndex++) {\n        var x = inputs[inputIndex];\n        var spec = inputSpec[inputIndex];\n\n        if (spec == null) {\n          continue;\n        } // Check ndim.\n\n\n        var ndim = x.rank;\n\n        if (spec.ndim != null) {\n          if (ndim !== spec.ndim) {\n            throw new ValueError(\"Input \".concat(inputIndex, \" is incompatible with layer \").concat(this.name, \": \") + \"expected ndim=\".concat(spec.ndim, \", found ndim=\").concat(ndim));\n          }\n        }\n\n        if (spec.maxNDim != null) {\n          if (ndim > spec.maxNDim) {\n            throw new ValueError(\"Input \".concat(inputIndex, \" is incompatible with layer \").concat(this.name) + \": expected max_ndim=\".concat(spec.maxNDim, \", found ndim=\").concat(ndim));\n          }\n        }\n\n        if (spec.minNDim != null) {\n          if (ndim < spec.minNDim) {\n            throw new ValueError(\"Input \".concat(inputIndex, \" is incompatible with layer \").concat(this.name) + \": expected min_ndim=\".concat(spec.minNDim, \", found ndim=\").concat(ndim, \".\"));\n          }\n        } // Check dtype.\n\n\n        if (spec.dtype != null) {\n          if (x.dtype !== spec.dtype) {\n            throw new ValueError(\"Input \".concat(inputIndex, \" is incompatible with layer \").concat(this.name, \" \") + \": expected dtype=\".concat(spec.dtype, \", found dtype=\").concat(x.dtype, \".\"));\n          }\n        } // Check specific shape axes.\n\n\n        if (spec.axes) {\n          var xShape = x.shape;\n\n          for (var key in spec.axes) {\n            var axis = Number(key);\n            var value = spec.axes[key]; // Perform Python-style slicing in case axis < 0;\n            // TODO(cais): Use https://github.com/alvivi/typescript-underscore to\n            // ensure type safety through Underscore calls.\n\n            var xShapeAtAxis = axis >= 0 ? xShape[axis] : xShape[xShape.length + axis];\n\n            if (value != null && [value, null].indexOf(xShapeAtAxis) === -1) {\n              throw new ValueError(\"Input \".concat(inputIndex, \" is incompatible with layer \") + \"\".concat(this.name, \": expected axis \").concat(axis, \" of input shape to \") + \"have value \".concat(value, \" but got shape \").concat(xShape, \".\"));\n            }\n          }\n        } // Check shape.\n\n\n        if (spec.shape != null) {\n          for (var i = 0; i < spec.shape.length; ++i) {\n            var specDim = spec.shape[i];\n            var dim = x.shape[i];\n\n            if (specDim != null && dim != null) {\n              if (specDim !== dim) {\n                throw new ValueError(\"Input \".concat(inputIndex, \" is incompatible with layer \") + \"\".concat(this.name, \": expected shape=\").concat(spec.shape, \", \") + \"found shape=\".concat(x.shape, \".\"));\n              }\n            }\n          }\n        }\n      }\n    }\n    /**\n     * This is where the layer's logic lives.\n     *\n     * @param inputs Input tensor, or list/tuple of input tensors.\n     * @param kwargs Additional keyword arguments.\n     *\n     * @return A tensor or list/tuple of tensors.\n     */\n\n  }, {\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      return inputs;\n    }\n  }, {\n    key: \"invokeCallHook\",\n    value: function invokeCallHook(inputs, kwargs) {\n      if (this._callHook != null) {\n        this._callHook(inputs, kwargs);\n      }\n    }\n    /**\n     * Set call hook.\n     * This is currently used for testing only.\n     * @param callHook\n     */\n\n  }, {\n    key: \"setCallHook\",\n    value: function setCallHook(callHook) {\n      this._callHook = callHook;\n    }\n    /**\n     * Clear call hook.\n     * This is currently used for testing only.\n     */\n\n  }, {\n    key: \"clearCallHook\",\n    value: function clearCallHook() {\n      this._callHook = null;\n    }\n    /**\n     * Builds or executes a `Layer's logic.\n     *\n     * When called with `tf.Tensor`(s), execute the `Layer`s computation and\n     * return Tensor(s). For example:\n     *\n     * ```js\n     * const denseLayer = tf.layers.dense({\n     *   units: 1,\n     *   kernelInitializer: 'zeros',\n     *   useBias: false\n     * });\n     *\n     * // Invoke the layer's apply() method with a `tf.Tensor` (with concrete\n     * // numeric values).\n     * const input = tf.ones([2, 2]);\n     * const output = denseLayer.apply(input);\n     *\n     * // The output's value is expected to be [[0], [0]], due to the fact that\n     * // the dense layer has a kernel initialized to all-zeros and does not have\n     * // a bias.\n     * output.print();\n     * ```\n     *\n     * When called with `tf.SymbolicTensor`(s), this will prepare the layer for\n     * future execution.  This entails internal book-keeping on shapes of\n     * expected Tensors, wiring layers together, and initializing weights.\n     *\n     * Calling `apply` with `tf.SymbolicTensor`s are typically used during the\n     * building of non-`tf.Sequential` models. For example:\n     *\n     * ```js\n     * const flattenLayer = tf.layers.flatten();\n     * const denseLayer = tf.layers.dense({units: 1});\n     *\n     * // Use tf.layers.input() to obtain a SymbolicTensor as input to apply().\n     * const input = tf.input({shape: [2, 2]});\n     * const output1 = flattenLayer.apply(input);\n     *\n     * // output1.shape is [null, 4]. The first dimension is the undetermined\n     * // batch size. The second dimension comes from flattening the [2, 2]\n     * // shape.\n     * console.log(JSON.stringify(output1.shape));\n     *\n     * // The output SymbolicTensor of the flatten layer can be used to call\n     * // the apply() of the dense layer:\n     * const output2 = denseLayer.apply(output1);\n     *\n     * // output2.shape is [null, 1]. The first dimension is the undetermined\n     * // batch size. The second dimension matches the number of units of the\n     * // dense layer.\n     * console.log(JSON.stringify(output2.shape));\n     *\n     * // The input and output and be used to construct a model that consists\n     * // of the flatten and dense layers.\n     * const model = tf.model({inputs: input, outputs: output2});\n     * ```\n     *\n     * @param inputs a `tf.Tensor` or `tf.SymbolicTensor` or an Array of them.\n     * @param kwargs Additional keyword arguments to be passed to `call()`.\n     *\n     * @return Output of the layer's `call` method.\n     *\n     * @exception ValueError error in case the layer is missing shape information\n     *   for its `build` call.\n     *\n     * @doc {heading: 'Models', 'subheading': 'Classes'}\n     */\n    // Porting Note: This is a replacement for __call__() in Python.\n\n  }, {\n    key: \"apply\",\n    value: function apply(inputs, kwargs) {\n      var _this2 = this;\n\n      kwargs = kwargs || {};\n      this.assertNotDisposed(); // Ensure inputs are all the same type.\n\n      var inputsList = generic_utils.toList(inputs);\n      var allAreSymbolic = true;\n\n      var _iterator3 = _createForOfIteratorHelper(inputsList),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var input = _step3.value;\n\n          if (!(input instanceof SymbolicTensor)) {\n            allAreSymbolic = false;\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      var noneAreSymbolic = true;\n\n      var _iterator4 = _createForOfIteratorHelper(inputsList),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var _input = _step4.value;\n\n          if (_input instanceof SymbolicTensor) {\n            noneAreSymbolic = false;\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      if (allAreSymbolic === noneAreSymbolic) {\n        throw new ValueError('Arguments to apply() must be all ' + 'SymbolicTensors or all Tensors');\n      } // TODO(michaelterry): nameScope() may not be necessary.\n\n\n      return nameScope(this.name, function () {\n        // Handle laying building (weight creating, input spec locking).\n        if (!_this2.built) {\n          /*\n            Throw exceptions in case the input is not compatible\n            with the inputSpec specified in the layer constructor.\n           */\n          _this2.assertInputCompatibility(inputs); // Collect input shapes to build layer.\n\n\n          var inputShapes = [];\n\n          var _iterator5 = _createForOfIteratorHelper(generic_utils.toList(inputs)),\n              _step5;\n\n          try {\n            for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n              var xElem = _step5.value;\n              inputShapes.push(xElem.shape);\n            }\n          } catch (err) {\n            _iterator5.e(err);\n          } finally {\n            _iterator5.f();\n          }\n\n          _this2.build(generic_utils.singletonOrArray(inputShapes));\n\n          _this2.built = true; // Load weights that were specified at layer instantiation.\n\n          if (_this2.initialWeights) {\n            _this2.setWeights(_this2.initialWeights);\n          }\n\n          if (_this2._refCount === null && noneAreSymbolic) {\n            // The first use of this layer is a non-symbolic call, set ref count\n            // to 1 so the Layer can be properly disposed if its dispose() method\n            // is called.\n            _this2._refCount = 1;\n          }\n        }\n        /*\n          Throw exceptions in case the input is not compatible\n          with the inputSpec set at build time.\n        */\n\n\n        _this2.assertInputCompatibility(inputs); // Handle mask propagation.\n        // TODO(michaelterry): Mask propagation not currently implemented.\n        // Actually call the layer, collecting output(s), mask(s), and shape(s).\n\n\n        if (noneAreSymbolic) {\n          var output = _this2.call(inputs, kwargs); // TODO(michaelterry): Compute the outputMask\n          // If the layer returns tensors from its inputs, unmodified,\n          // we copy them to avoid loss of tensor metadata.\n\n\n          var outputList = generic_utils.toList(output);\n          var outputListCopy = []; // TODO(michaelterry): This copying may not be necessary given our eager\n          // backend.\n\n          var _iterator6 = _createForOfIteratorHelper(outputList),\n              _step6;\n\n          try {\n            for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n              var x = _step6.value;\n\n              if (inputsList.indexOf(x) !== -1) {\n                x = x.clone();\n              }\n\n              outputListCopy.push(x);\n            }\n          } catch (err) {\n            _iterator6.e(err);\n          } finally {\n            _iterator6.f();\n          }\n\n          output = generic_utils.singletonOrArray(outputListCopy);\n\n          if (_this2.activityRegularizer != null) {\n            throw new NotImplementedError('Layer invocation in the presence of activity ' + 'regularizer(s) is not supported yet.');\n          } // TODO(michaelterry): Call addInboundNode()?\n\n\n          return output;\n        } else {\n          var inputShape = collectInputShape(inputs);\n\n          var outputShape = _this2.computeOutputShape(inputShape);\n\n          var _output;\n\n          var outputDType = guessOutputDType(inputs);\n\n          _this2.warnOnIncompatibleInputShape(Array.isArray(inputs) ? inputShape[0] : inputShape);\n\n          if (outputShape != null && outputShape.length > 0 && Array.isArray(outputShape[0])) {\n            // We have multiple output shapes. Create multiple output tensors.\n            _output = outputShape.map(function (shape, index) {\n              return new SymbolicTensor(outputDType, shape, _this2, generic_utils.toList(inputs), kwargs, _this2.name, index);\n            });\n          } else {\n            _output = new SymbolicTensor(outputDType, outputShape, _this2, generic_utils.toList(inputs), kwargs, _this2.name);\n          }\n          /*\n            Add an inbound node to the layer, so that it keeps track\n            of the call and of all new variables created during the call.\n            This also updates the layer history of the output tensor(s).\n            If the input tensor(s) had no previous history,\n            this does nothing.\n          */\n\n\n          _this2.addInboundNode(inputs, _output, null, null, inputShape, outputShape, kwargs);\n\n          _this2._refCount++;\n\n          if (_this2.activityRegularizer != null) {\n            throw new NotImplementedError('Layer invocation in the presence of activity ' + 'regularizer(s) is not supported yet.');\n          }\n\n          return _output;\n        }\n      });\n    }\n    /**\n     * Check compatibility between input shape and this layer's batchInputShape.\n     *\n     * Print warning if any incompatibility is found.\n     *\n     * @param inputShape Input shape to be checked.\n     */\n\n  }, {\n    key: \"warnOnIncompatibleInputShape\",\n    value: function warnOnIncompatibleInputShape(inputShape) {\n      if (this.batchInputShape == null) {\n        return;\n      } else if (inputShape.length !== this.batchInputShape.length) {\n        console.warn(\"The rank of the input tensor provided (shape: \" + \"\".concat(JSON.stringify(inputShape), \") does not match that of the \") + \"batchInputShape (\".concat(JSON.stringify(this.batchInputShape), \") \") + \"of the layer \".concat(this.name));\n      } else {\n        var dimMismatch = false;\n        this.batchInputShape.forEach(function (dimension, i) {\n          if (dimension != null && inputShape[i] != null && inputShape[i] !== dimension) {\n            dimMismatch = true;\n          }\n        });\n\n        if (dimMismatch) {\n          console.warn(\"The shape of the input tensor \" + \"(\".concat(JSON.stringify(inputShape), \") does not \") + \"match the expectation of layer \".concat(this.name, \": \") + \"\".concat(JSON.stringify(this.batchInputShape)));\n        }\n      }\n    }\n    /**\n     * Retrieves the output shape(s) of a layer.\n     *\n     * Only applicable if the layer has only one inbound node, or if all inbound\n     * nodes have the same output shape.\n     *\n     * @returns Output shape or shapes.\n     * @throws AttributeError: if the layer is connected to more than one incoming\n     *   nodes.\n     *\n     * @doc {heading: 'Models', 'subheading': 'Classes'}\n     */\n\n  }, {\n    key: \"outputShape\",\n    get: function get() {\n      if (this.inboundNodes == null || this.inboundNodes.length === 0) {\n        throw new AttributeError(\"The layer \".concat(this.name, \" has never been called and thus has no \") + \"defined output shape.\");\n      }\n\n      var allOutputShapes = [];\n\n      var _iterator7 = _createForOfIteratorHelper(this.inboundNodes),\n          _step7;\n\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var node = _step7.value;\n          var shapeString = JSON.stringify(node.outputShapes);\n\n          if (allOutputShapes.indexOf(shapeString) === -1) {\n            allOutputShapes.push(shapeString);\n          }\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n\n      if (allOutputShapes.length === 1) {\n        var outputShapes = this.inboundNodes[0].outputShapes;\n\n        if (Array.isArray(outputShapes) && Array.isArray(outputShapes[0]) && outputShapes.length === 1) {\n          return outputShapes[0];\n        } else {\n          return outputShapes;\n        }\n      } else {\n        throw new AttributeError(\"The layer \".concat(this.name, \" has multiple inbound nodes with different \") + \"output shapes. Hence the notion of \\\"output shape\\\" is ill-defined \" + \"for the layer.\"); // TODO(cais): Implement getOutputShapeAt().\n      }\n    }\n    /**\n     * Counts the total number of numbers (e.g., float32, int32) in the\n     * weights.\n     *\n     * @returns An integer count.\n     * @throws RuntimeError: If the layer is not built yet (in which case its\n     *   weights are not defined yet.)\n     *\n     * @doc {heading: 'Models', 'subheading': 'Classes'}\n     */\n\n  }, {\n    key: \"countParams\",\n    value: function countParams() {\n      if (!this.built) {\n        throw new RuntimeError(\"You tried to call countParams() on \".concat(this.name, \", \") + \"but the layer is not built yet. Build it first by calling \" + \"build(batchInputShape).\");\n      }\n\n      return variable_utils.countParamsInWeights(this.weights);\n    }\n    /**\n     * Creates the layer weights.\n     *\n     * Must be implemented on all layers that have weights.\n     *\n     * Called when apply() is called to construct the weights.\n     *\n     * @param inputShape A `Shape` or array of `Shape` (unused).\n     *\n     * @doc {heading: 'Models', 'subheading': 'Classes'}\n     */\n\n  }, {\n    key: \"build\",\n    value: function build(inputShape) {\n      this.built = true;\n    }\n    /**\n     * Returns the current values of the weights of the layer.\n     *\n     * @param trainableOnly Whether to get the values of only trainable weights.\n     * @returns Weight values as an `Array` of `tf.Tensor`s.\n     *\n     * @doc {heading: 'Models', 'subheading': 'Classes'}\n     */\n\n  }, {\n    key: \"getWeights\",\n    value: function getWeights() {\n      var trainableOnly = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      return batchGetValue(trainableOnly ? this.trainableWeights : this.weights);\n    }\n    /**\n     * Sets the weights of the layer, from Tensors.\n     *\n     * @param weights a list of Tensors. The number of arrays and their shape\n     *   must match number of the dimensions of the weights of the layer (i.e.\n     *   it should match the output of `getWeights`).\n     *\n     * @exception ValueError If the provided weights list does not match the\n     *   layer's specifications.\n     *\n     * @doc {heading: 'Models', 'subheading': 'Classes'}\n     */\n\n  }, {\n    key: \"setWeights\",\n    value: function setWeights(weights) {\n      var _this3 = this;\n\n      tidy(function () {\n        var params = _this3.weights;\n\n        if (params.length !== weights.length) {\n          // TODO(cais): Restore the following and use `providedWeights`, instead\n          // of `weights` in the error message, once the deeplearn.js bug is\n          // fixed: https://github.com/PAIR-code/deeplearnjs/issues/498 const\n          // providedWeights = JSON.stringify(weights).substr(0, 50);\n          throw new ValueError(\"You called setWeights(weights) on layer \\\"\".concat(_this3.name, \"\\\" \") + \"with a weight list of length \".concat(weights.length, \", \") + \"but the layer was expecting \".concat(params.length, \" weights. \") + \"Provided weights: \".concat(weights, \"...\"));\n        }\n\n        if (params.length === 0) {\n          return;\n        }\n\n        var weightValueTuples = [];\n        var paramValues = batchGetValue(params);\n\n        for (var i = 0; i < paramValues.length; ++i) {\n          var pv = paramValues[i];\n          var p = params[i];\n          var w = weights[i];\n\n          if (!util.arraysEqual(pv.shape, w.shape)) {\n            throw new ValueError(\"Layer weight shape \".concat(pv.shape, \" \") + \"not compatible with provided weight shape \".concat(w.shape));\n          }\n\n          weightValueTuples.push([p, w]);\n        }\n\n        batchSetValue(weightValueTuples);\n      });\n    }\n    /**\n     * Adds a weight variable to the layer.\n     *\n     * @param name Name of the new weight variable.\n     * @param shape The shape of the weight.\n     * @param dtype The dtype of the weight.\n     * @param initializer An initializer instance.\n     * @param regularizer A regularizer instance.\n     * @param trainable Whether the weight should be trained via backprop or not\n     *   (assuming that the layer itself is also trainable).\n     * @param constraint An optional trainable.\n     * @return The created weight variable.\n     *\n     * @doc {heading: 'Models', 'subheading': 'Classes'}\n     */\n\n  }, {\n    key: \"addWeight\",\n    value: function addWeight(name, shape, dtype, initializer, regularizer, trainable, constraint) {\n      // Reject duplicate weight names.\n      if (this._addedWeightNames.indexOf(name) !== -1) {\n        throw new ValueError(\"Duplicate weight name \".concat(name, \" for layer \").concat(this.name));\n      }\n\n      this._addedWeightNames.push(name);\n\n      if (dtype == null) {\n        dtype = 'float32';\n      }\n\n      if (this.fastWeightInitDuringBuild) {\n        initializer = getInitializer('zeros');\n      }\n\n      var initValue = initializer.apply(shape, dtype);\n      var weight = new LayerVariable(initValue, dtype, name, trainable, constraint);\n      initValue.dispose(); // Request backend not to dispose the weights of the model on scope() exit.\n\n      if (regularizer != null) {\n        this.addLoss(function () {\n          return regularizer.apply(weight.read());\n        });\n      }\n\n      if (trainable == null) {\n        trainable = true;\n      }\n\n      if (trainable) {\n        this._trainableWeights.push(weight);\n      } else {\n        this._nonTrainableWeights.push(weight);\n      }\n\n      return weight;\n    }\n    /**\n     * Set the fast-weight-initialization flag.\n     *\n     * In cases where the initialized weight values will be immediately\n     * overwritten by loaded weight values during model loading, setting\n     * the flag to `true` saves unnecessary calls to potentially expensive\n     * initializers and speeds up the loading process.\n     *\n     * @param value Target value of the flag.\n     */\n\n  }, {\n    key: \"setFastWeightInitDuringBuild\",\n    value: function setFastWeightInitDuringBuild(value) {\n      this.fastWeightInitDuringBuild = value;\n    }\n    /**\n     * Add losses to the layer.\n     *\n     * The loss may potentionally be conditional on some inputs tensors,\n     * for instance activity losses are conditional on the layer's inputs.\n     *\n     * @doc {heading: 'Models', 'subheading': 'Classes'}\n     */\n\n  }, {\n    key: \"addLoss\",\n    value: function addLoss(losses) {\n      if (losses == null || Array.isArray(losses) && losses.length === 0) {\n        return;\n      } // Update this.losses\n\n\n      losses = generic_utils.toList(losses);\n\n      if (this._losses !== undefined && this._losses !== null) {\n        var _this$losses;\n\n        (_this$losses = this.losses).push.apply(_this$losses, _toConsumableArray(losses));\n      }\n    }\n    /**\n     * Computes the output shape of the layer.\n     *\n     * Assumes that the layer will be built to match that input shape provided.\n     *\n     * @param inputShape A shape (tuple of integers) or a list of shape tuples\n     *   (one per output tensor of the layer). Shape tuples can include null for\n     *   free dimensions, instead of an integer.\n     *\n     * @doc {heading: 'Models', 'subheading': 'Classes'}\n     */\n\n  }, {\n    key: \"computeOutputShape\",\n    value: function computeOutputShape(inputShape) {\n      return inputShape;\n    }\n    /**\n     * Computes an output mask tensor.\n     *\n     * @param inputs Tensor or list of tensors.\n     * @param mask Tensor or list of tensors.\n     *\n     * @return null or a tensor (or list of tensors, one per output tensor of the\n     * layer).\n     */\n\n  }, {\n    key: \"computeMask\",\n    value: function computeMask(inputs, mask) {\n      var _this4 = this;\n\n      if (!this.supportsMasking) {\n        if (mask != null) {\n          if (Array.isArray(mask)) {\n            mask.forEach(function (maskElement) {\n              if (maskElement != null) {\n                throw new TypeError(\"Layer \".concat(_this4.name, \" does not support masking, \") + 'but was passed an inputMask.');\n              }\n            });\n          } else {\n            throw new TypeError(\"Layer \".concat(this.name, \" does not support masking, \") + 'but was passed an inputMask.');\n          }\n        } // masking not explicitly supported: return null as mask\n\n\n        return null;\n      } // if masking is explictly supported, by default\n      // carry over the input mask\n\n\n      return mask;\n    }\n    /**\n     * Internal method to create an inbound node for the layer.\n     *\n     * @param inputTensors List of input tensors.\n     * @param outputTensors List of output tensors.\n     * @param inputMasks List of input masks (a mask can be a tensor, or null).\n     * @param outputMasks List of output masks (a mask can be a tensor, or null).\n     * @param inputShapes List of input shape tuples.\n     * @param outputShapes List of output shape tuples.\n     * @param kwargs Dictionary of keyword arguments that were passed to the\n     *   `call` method of the layer at the call that created the node.\n     */\n\n  }, {\n    key: \"addInboundNode\",\n    value: function addInboundNode(inputTensors, outputTensors, inputMasks, outputMasks, inputShapes, outputShapes) {\n      var kwargs = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n      var inputTensorList = generic_utils.toList(inputTensors);\n      outputTensors = generic_utils.toList(outputTensors);\n      inputMasks = generic_utils.toList(inputMasks);\n      outputMasks = generic_utils.toList(outputMasks);\n      inputShapes = types_utils.normalizeShapeList(inputShapes);\n      outputShapes = types_utils.normalizeShapeList(outputShapes); // Collect input tensor(s) coordinates.\n\n      var inboundLayers = [];\n      var nodeIndices = [];\n      var tensorIndices = [];\n\n      var _iterator8 = _createForOfIteratorHelper(inputTensorList),\n          _step8;\n\n      try {\n        for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n          var x = _step8.value;\n\n          /*\n           * TODO(michaelterry): Keras adds this value to tensors; it's not\n           * clear whether we'll use this or not.\n           */\n          inboundLayers.push(x.sourceLayer);\n          nodeIndices.push(x.nodeIndex);\n          tensorIndices.push(x.tensorIndex);\n        } // Create node, add it to inbound nodes.\n        // (This call has side effects.)\n        // tslint:disable-next-line:no-unused-expression\n\n      } catch (err) {\n        _iterator8.e(err);\n      } finally {\n        _iterator8.f();\n      }\n\n      new Node({\n        outboundLayer: this,\n        inboundLayers: inboundLayers,\n        nodeIndices: nodeIndices,\n        tensorIndices: tensorIndices,\n        inputTensors: inputTensorList,\n        outputTensors: outputTensors,\n        inputMasks: inputMasks,\n        outputMasks: outputMasks,\n        inputShapes: inputShapes,\n        outputShapes: outputShapes\n      }, kwargs); // Update tensor history\n\n      for (var i = 0; i < outputTensors.length; i++) {\n        // TODO(michaelterry: _uses_learning_phase not tracked.\n        outputTensors[i].sourceLayer = this;\n        outputTensors[i].nodeIndex = this.inboundNodes.length - 1;\n        outputTensors[i].tensorIndex = i;\n      }\n    }\n    /**\n     * Returns the config of the layer.\n     *\n     * A layer config is a TS dictionary (serializable)\n     * containing the configuration of a layer.\n     * The same layer can be reinstantiated later\n     * (without its trained weights) from this configuration.\n     *\n     * The config of a layer does not include connectivity\n     * information, nor the layer class name.  These are handled\n     * by 'Container' (one layer of abstraction above).\n     *\n     * Porting Note: The TS dictionary follows TS naming standrds for\n     * keys, and uses tfjs-layers type-safe Enums.  Serialization methods\n     * should use a helper function to convert to the pythonic storage\n     * standard. (see serialization_utils.convertTsToPythonic)\n     *\n     * @returns TS dictionary of configuration.\n     *\n     * @doc {heading: 'Models', 'subheading': 'Classes'}\n     */\n\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      var config = {\n        name: this.name,\n        trainable: this.trainable\n      };\n\n      if (this.batchInputShape != null) {\n        config['batchInputShape'] = this.batchInputShape;\n      }\n\n      if (this.dtype != null) {\n        config['dtype'] = this.dtype;\n      }\n\n      return config;\n    }\n    /**\n     * Dispose the weight variables that this Layer instance holds.\n     *\n     * @returns {number} Number of disposed variables.\n     */\n\n  }, {\n    key: \"disposeWeights\",\n    value: function disposeWeights() {\n      this.weights.forEach(function (weight) {\n        return weight.dispose();\n      });\n      return this.weights.length;\n    }\n  }, {\n    key: \"assertNotDisposed\",\n    value: function assertNotDisposed() {\n      if (this._refCount === 0) {\n        throw new Error(\"Layer '\".concat(this.name, \"' is already disposed.\"));\n      }\n    }\n    /**\n     * Attempt to dispose layer's weights.\n     *\n     * This method decrease the reference count of the Layer object by 1.\n     *\n     * A Layer is reference-counted. Its reference count is incremented by 1\n     * the first item its `apply()` method is called and when it becomes a part\n     * of a new `Node` (through calling the `apply()`) method on a\n     * `tf.SymbolicTensor`).\n     *\n     * If the reference count of a Layer becomes 0, all the weights will be\n     * disposed and the underlying memory (e.g., the textures allocated in WebGL)\n     * will be freed.\n     *\n     * Note: If the reference count is greater than 0 after the decrement, the\n     * weights of the Layer will *not* be disposed.\n     *\n     * After a Layer is disposed, it cannot be used in calls such as `apply()`,\n     * `getWeights()` or `setWeights()` anymore.\n     *\n     * @returns A DisposeResult Object with the following fields:\n     *   - refCountAfterDispose: The reference count of the Container after this\n     *     `dispose()` call.\n     *   - numDisposedVariables: Number of `tf.Variable`s (i.e., weights) disposed\n     *     during this `dispose()` call.\n     * @throws {Error} If the layer is not built yet, or if the layer has already\n     *   been disposed.\n     *\n     * @doc {heading: 'Models', 'subheading': 'Classes'}\n     */\n\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      if (!this.built) {\n        throw new Error(\"Cannot dispose Layer \".concat(this.name, \" because it has not been \") + \"built yet.\");\n      }\n\n      if (this._refCount === null) {\n        throw new Error(\"Cannot dispose Layer \".concat(this.name, \" because it has not been used \") + \"yet.\");\n      }\n\n      this.assertNotDisposed();\n      var numDisposedVariables = 0;\n\n      if (--this._refCount === 0) {\n        numDisposedVariables = this.disposeWeights();\n      }\n\n      return {\n        refCountAfterDispose: this._refCount,\n        numDisposedVariables: numDisposedVariables\n      };\n    }\n  }], [{\n    key: \"nodeKey\",\n    value: function nodeKey(layer, nodeIndex) {\n      return layer.name + '_ib-' + nodeIndex.toString();\n    }\n  }]);\n\n  return Layer;\n}(serialization.Serializable);\n/**\n * Collects the input shape(s) of a list of `tf.Tensor`s or\n * `tf.SymbolicTensor`s.\n *\n * TODO(michaelterry): Update PyKeras docs (backport).\n *\n * @param inputTensors List of input tensors (or single input tensor).\n *\n * @return List of shape tuples (or single tuple), one tuple per input.\n */\n\nfunction collectInputShape(inputTensors) {\n  inputTensors = generic_utils.toList(inputTensors);\n  var shapes = [];\n\n  var _iterator9 = _createForOfIteratorHelper(inputTensors),\n      _step9;\n\n  try {\n    for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n      var x = _step9.value;\n      shapes.push(x.shape);\n    }\n  } catch (err) {\n    _iterator9.e(err);\n  } finally {\n    _iterator9.f();\n  }\n\n  return generic_utils.singletonOrArray(shapes);\n}\n/**\n * Guesses output dtype based on inputs.\n *\n * At present, just returns 'float32' for any input.\n *\n * @param inputTensors List of input tensors (or single input tensor).\n *\n * @return The guessed DType. At present, always returns 'float32'.\n */\n\n\nfunction guessOutputDType(inputTensors) {\n  return 'float32';\n}\n/**\n * Returns the list of input tensors necessary to compute `tensor`.\n *\n * Output will always be a list of tensors (potentially with 1 element).\n *\n * @param tensor The tensor to start from.\n * @param layer Origin layer of the tensor.\n * @param nodeIndex Origin node index of the tensor.\n *\n * @return Array of input tensors.\n */\n\n\nexport function getSourceInputs(tensor, layer, nodeIndex) {\n  if (layer == null || nodeIndex != null && nodeIndex > 0) {\n    layer = tensor.sourceLayer;\n    nodeIndex = tensor.nodeIndex;\n  }\n\n  if (layer.inboundNodes.length === 0) {\n    return [tensor];\n  } else {\n    var node = layer.inboundNodes[nodeIndex];\n\n    if (node.inboundLayers.length === 0) {\n      return node.inputTensors;\n    } else {\n      var sourceTensors = [];\n\n      for (var i = 0; i < node.inboundLayers.length; i++) {\n        var x = node.inputTensors[i];\n        var _layer = node.inboundLayers[i];\n        var _nodeIndex = node.nodeIndices[i];\n        var previousSources = getSourceInputs(x, _layer, _nodeIndex); // Avoid input redundancy.\n\n        var _iterator10 = _createForOfIteratorHelper(previousSources),\n            _step10;\n\n        try {\n          for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n            var _x = _step10.value;\n\n            if (sourceTensors.indexOf(_x) === -1) {\n              sourceTensors.push(_x);\n            }\n          }\n        } catch (err) {\n          _iterator10.e(err);\n        } finally {\n          _iterator10.f();\n        }\n      }\n\n      return sourceTensors;\n    }\n  }\n}","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\nimport { serialization } from '@tensorflow/tfjs-core';\nimport { getUid } from '../backend/state';\nimport { ValueError } from '../errors';\nimport { Layer, Node, SymbolicTensor } from './topology';\nexport var InputLayer = /*#__PURE__*/function (_Layer) {\n  _inherits(InputLayer, _Layer);\n\n  var _super = _createSuper(InputLayer);\n\n  function InputLayer(args) {\n    var _this;\n\n    _classCallCheck(this, InputLayer);\n\n    _this = _super.call(this, {\n      dtype: args.dtype,\n      name: args.name != null ? args.name : getUid('input').toString()\n    }); // Normalize config.batchSize and config.sparse\n\n    if (args.batchSize == null) {\n      args.batchSize = null;\n    }\n\n    if (args.sparse == null) {\n      args.sparse = false;\n    }\n\n    _this.trainable = false;\n    _this.built = true;\n    _this.sparse = args.sparse;\n\n    if (args.inputShape != null && args.batchInputShape != null) {\n      throw new ValueError('Only provide the inputShape OR ' + 'batchInputShape argument to inputLayer, not both at the same time.');\n    }\n\n    var batchInputShape = args.batchInputShape;\n\n    if (batchInputShape == null) {\n      if (args.inputShape == null) {\n        throw new ValueError('An InputLayer should be passed either a ' + '`batchInputShape` or an `inputShape`.');\n      } else {\n        batchInputShape = [args.batchSize].concat(args.inputShape);\n      }\n    } else {\n      // TODO(michaelterry): Backport to PyKeras\n      if (args.batchSize != null) {\n        throw new ValueError('Cannot specify batchSize if batchInputShape is ' + 'specified when creating an InputLayer.');\n      }\n    }\n\n    var dtype = args.dtype || 'float32';\n    _this.batchInputShape = batchInputShape;\n    _this.dtype = dtype; // TODO(michaelterry): Backport this to PyKeras?\n\n    _this.inputSpec = [{\n      shape: batchInputShape\n    }];\n    var inputTensor = new SymbolicTensor(_this.dtype, _this.batchInputShape, _assertThisInitialized(_this), [], {}, _this.name);\n    inputTensor.nodeIndex = 0;\n    inputTensor.tensorIndex = 0; // Create an input node to add to this.outboundNode.\n    // (This call has side effects.)\n    // tslint:disable-next-line:no-unused-expression\n\n    new Node({\n      outboundLayer: _assertThisInitialized(_this),\n      inboundLayers: [],\n      nodeIndices: [],\n      tensorIndices: [],\n      inputTensors: [inputTensor],\n      outputTensors: [inputTensor],\n      inputMasks: [null],\n      outputMasks: [null],\n      inputShapes: [batchInputShape],\n      outputShapes: [batchInputShape]\n    });\n    return _this;\n  }\n\n  _createClass(InputLayer, [{\n    key: \"apply\",\n    value: function apply(inputs, kwargs) {\n      throw new ValueError('Cannot pass any input to an ' + \"InputLayer's apply() method. InputLayer name: \".concat(this.name));\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      // dispose() for InputLayer is overridden as no-op.\n      return {\n        refCountAfterDispose: this._refCount,\n        numDisposedVariables: 0\n      };\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      return {\n        batchInputShape: this.batchInputShape,\n        dtype: this.dtype,\n        sparse: this.sparse,\n        name: this.name\n      };\n    }\n  }]);\n\n  return InputLayer;\n}(Layer);\n/** @nocollapse */\n\nInputLayer.className = 'InputLayer';\nserialization.registerClass(InputLayer);\nexport function Input(config) {\n  if (config.batchShape == null && config.shape == null) {\n    throw new Error('Please provide to Input either a `shape`' + ' or a `batchShape` argument. Note that ' + '`shape` does not include the batch ' + 'dimension.');\n  }\n\n  if (config.batchShape != null && config.shape != null) {\n    // TODO(michaelterry): Backport to PyKeras.\n    throw new ValueError('Please provide either a `shape` or `batchShape` ' + 'argument to Input, but not both.');\n  }\n\n  var batchShape = config.batchShape;\n\n  if (config.shape != null && batchShape == null) {\n    batchShape = [null].concat(config.shape);\n  }\n\n  var dtype = config.dtype;\n\n  if (dtype == null) {\n    dtype = 'float32';\n  }\n\n  var inputLayer = new InputLayer({\n    batchInputShape: batchShape,\n    name: config.name,\n    dtype: dtype,\n    sparse: config.sparse\n  });\n  var outputs = inputLayer.inboundNodes[0].outputTensors;\n  return outputs[0];\n}","import _toConsumableArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _assertThisInitialized from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _asyncToGenerator from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport _regeneratorRuntime from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/regenerator\";\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/* Original source: keras/callbacks.py */\nimport { add, div, keep, mul, nextFrame, tidy, util } from '@tensorflow/tfjs-core';\nimport { ValueError } from './errors';\nimport { resolveScalarsInLogs } from './logs';\nimport * as generic_utils from './utils/generic_utils';\n/** Verbosity logging level when fitting a model. */\n\nexport var ModelLoggingVerbosity;\n\n(function (ModelLoggingVerbosity) {\n  ModelLoggingVerbosity[ModelLoggingVerbosity[\"SILENT\"] = 0] = \"SILENT\";\n  ModelLoggingVerbosity[ModelLoggingVerbosity[\"VERBOSE\"] = 1] = \"VERBOSE\";\n})(ModelLoggingVerbosity || (ModelLoggingVerbosity = {}));\n/** How often to yield to the main thread when training (in ms). */\n\n\nexport var DEFAULT_YIELD_EVERY_MS = 125;\n/**\n * Abstract base class used to build new callbacks.\n *\n * The `logs` dictionary that callback methods take as argument will contain\n * keys for quantities relevant to the current batch or epoch.\n *\n * Currently, the `.fit()` method of the `Sequential` model class\n * will include the following quantities in the `logs` that\n * it passes to its callbacks:\n *\n * onEpochEnd: Logs include `acc` and `loss`, and optionally include `valLoss`\n *   (if validation is enabled in `fit`), and `valAcc` (if validation and\n *   accuracy monitoring are enabled).\n * onBatchBegin: Logs include `size`, the number of samples in the current\n *   batch.\n * onBatchEnd: Logs include `loss`, and optionally `acc` (if accuracy monitoring\n *   is enabled).\n */\n\nexport var BaseCallback = /*#__PURE__*/function () {\n  function BaseCallback() {\n    _classCallCheck(this, BaseCallback);\n\n    // TODO(michaelterry): This type is a best guess.\n    this.validationData = null;\n  }\n\n  _createClass(BaseCallback, [{\n    key: \"setParams\",\n    value: function setParams(params) {\n      this.params = params;\n    }\n  }, {\n    key: \"onEpochBegin\",\n    value: function () {\n      var _onEpochBegin = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(epoch, logs) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function onEpochBegin(_x, _x2) {\n        return _onEpochBegin.apply(this, arguments);\n      }\n\n      return onEpochBegin;\n    }()\n  }, {\n    key: \"onEpochEnd\",\n    value: function () {\n      var _onEpochEnd = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(epoch, logs) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function onEpochEnd(_x3, _x4) {\n        return _onEpochEnd.apply(this, arguments);\n      }\n\n      return onEpochEnd;\n    }()\n  }, {\n    key: \"onBatchBegin\",\n    value: function () {\n      var _onBatchBegin = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(batch, logs) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function onBatchBegin(_x5, _x6) {\n        return _onBatchBegin.apply(this, arguments);\n      }\n\n      return onBatchBegin;\n    }()\n  }, {\n    key: \"onBatchEnd\",\n    value: function () {\n      var _onBatchEnd = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(batch, logs) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function onBatchEnd(_x7, _x8) {\n        return _onBatchEnd.apply(this, arguments);\n      }\n\n      return onBatchEnd;\n    }()\n  }, {\n    key: \"onTrainBegin\",\n    value: function () {\n      var _onTrainBegin = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(logs) {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function onTrainBegin(_x9) {\n        return _onTrainBegin.apply(this, arguments);\n      }\n\n      return onTrainBegin;\n    }()\n  }, {\n    key: \"onTrainEnd\",\n    value: function () {\n      var _onTrainEnd = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(logs) {\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      function onTrainEnd(_x10) {\n        return _onTrainEnd.apply(this, arguments);\n      }\n\n      return onTrainEnd;\n    }() // LayersModel needs to call Callback.setModel(), but cannot actually depend\n    // on Callback because that creates a cyclic dependency.  Providing this no-op\n    // method on BaseCallback breaks the cycle: this way LayersModel can depend on\n    // BaseCallback but not on Callback.  The argument is typed as `Container`\n    // (the superclass of LayersModel) to avoid recapitulating the cycle. Callback\n    // overrides this method and enforces that the argument is really a\n    // LayersModel.\n\n  }, {\n    key: \"setModel\",\n    value: function setModel(model) {// Do nothing. Use Callback instead of BaseCallback to track the model.\n    }\n  }]);\n\n  return BaseCallback;\n}();\n/**\n * Container abstracting a list of callbacks.\n */\n\nexport var CallbackList = /*#__PURE__*/function () {\n  // TODO(cais): When the need arises, uncomment the following lines and\n  // implement the queue for time values.\n  // private deltaTBatch: number;\n  // private deltaTsBatchBegin: Array<number>;\n  // private deltaTsBatchEnd: Array<number>;\n\n  /**\n   * Constructor of CallbackList.\n   * @param callbacks Array of `Callback` instances.\n   * @param queueLength Queue length for keeping running statistics over\n   *   callback execution time.\n   */\n  function CallbackList(callbacks) {\n    var queueLength = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n\n    _classCallCheck(this, CallbackList);\n\n    // TODO(cais): Make use of queueLength when implementing the queue for time\n    // values.\n    if (callbacks == null) {\n      callbacks = [];\n    }\n\n    this.callbacks = callbacks;\n    this.queueLength = queueLength;\n  }\n\n  _createClass(CallbackList, [{\n    key: \"append\",\n    value: function append(callback) {\n      this.callbacks.push(callback);\n    }\n  }, {\n    key: \"setParams\",\n    value: function setParams(params) {\n      var _iterator = _createForOfIteratorHelper(this.callbacks),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var callback = _step.value;\n          callback.setParams(params);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"setModel\",\n    value: function setModel(model) {\n      var _iterator2 = _createForOfIteratorHelper(this.callbacks),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var callback = _step2.value;\n          callback.setModel(model);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n    /**\n     * Called at the start of an epoch.\n     * @param epoch Index of epoch.\n     * @param logs Dictionary of logs.\n     */\n\n  }, {\n    key: \"onEpochBegin\",\n    value: function () {\n      var _onEpochBegin2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(epoch, logs) {\n        var _iterator3, _step3, callback;\n\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                if (logs == null) {\n                  logs = {};\n                }\n\n                _iterator3 = _createForOfIteratorHelper(this.callbacks);\n                _context7.prev = 2;\n\n                _iterator3.s();\n\n              case 4:\n                if ((_step3 = _iterator3.n()).done) {\n                  _context7.next = 10;\n                  break;\n                }\n\n                callback = _step3.value;\n                _context7.next = 8;\n                return callback.onEpochBegin(epoch, logs);\n\n              case 8:\n                _context7.next = 4;\n                break;\n\n              case 10:\n                _context7.next = 15;\n                break;\n\n              case 12:\n                _context7.prev = 12;\n                _context7.t0 = _context7[\"catch\"](2);\n\n                _iterator3.e(_context7.t0);\n\n              case 15:\n                _context7.prev = 15;\n\n                _iterator3.f();\n\n                return _context7.finish(15);\n\n              case 18:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this, [[2, 12, 15, 18]]);\n      }));\n\n      function onEpochBegin(_x11, _x12) {\n        return _onEpochBegin2.apply(this, arguments);\n      }\n\n      return onEpochBegin;\n    }()\n    /**\n     * Called at the end of an epoch.\n     * @param epoch Index of epoch.\n     * @param logs Dictionary of logs.\n     */\n\n  }, {\n    key: \"onEpochEnd\",\n    value: function () {\n      var _onEpochEnd2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(epoch, logs) {\n        var _iterator4, _step4, callback;\n\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                if (logs == null) {\n                  logs = {};\n                }\n\n                _iterator4 = _createForOfIteratorHelper(this.callbacks);\n                _context8.prev = 2;\n\n                _iterator4.s();\n\n              case 4:\n                if ((_step4 = _iterator4.n()).done) {\n                  _context8.next = 10;\n                  break;\n                }\n\n                callback = _step4.value;\n                _context8.next = 8;\n                return callback.onEpochEnd(epoch, logs);\n\n              case 8:\n                _context8.next = 4;\n                break;\n\n              case 10:\n                _context8.next = 15;\n                break;\n\n              case 12:\n                _context8.prev = 12;\n                _context8.t0 = _context8[\"catch\"](2);\n\n                _iterator4.e(_context8.t0);\n\n              case 15:\n                _context8.prev = 15;\n\n                _iterator4.f();\n\n                return _context8.finish(15);\n\n              case 18:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this, [[2, 12, 15, 18]]);\n      }));\n\n      function onEpochEnd(_x13, _x14) {\n        return _onEpochEnd2.apply(this, arguments);\n      }\n\n      return onEpochEnd;\n    }()\n    /**\n     * Called  right before processing a batch.\n     * @param batch Index of batch within the current epoch.\n     * @param logs Dictionary of logs.\n     */\n\n  }, {\n    key: \"onBatchBegin\",\n    value: function () {\n      var _onBatchBegin2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(batch, logs) {\n        var _iterator5, _step5, callback;\n\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                if (logs == null) {\n                  logs = {};\n                }\n\n                _iterator5 = _createForOfIteratorHelper(this.callbacks);\n                _context9.prev = 2;\n\n                _iterator5.s();\n\n              case 4:\n                if ((_step5 = _iterator5.n()).done) {\n                  _context9.next = 10;\n                  break;\n                }\n\n                callback = _step5.value;\n                _context9.next = 8;\n                return callback.onBatchBegin(batch, logs);\n\n              case 8:\n                _context9.next = 4;\n                break;\n\n              case 10:\n                _context9.next = 15;\n                break;\n\n              case 12:\n                _context9.prev = 12;\n                _context9.t0 = _context9[\"catch\"](2);\n\n                _iterator5.e(_context9.t0);\n\n              case 15:\n                _context9.prev = 15;\n\n                _iterator5.f();\n\n                return _context9.finish(15);\n\n              case 18:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this, [[2, 12, 15, 18]]);\n      }));\n\n      function onBatchBegin(_x15, _x16) {\n        return _onBatchBegin2.apply(this, arguments);\n      }\n\n      return onBatchBegin;\n    }()\n    /**\n     * Called at the end of a batch.\n     * @param batch Index of batch within the current epoch.\n     * @param logs Dictionary of logs.\n     */\n\n  }, {\n    key: \"onBatchEnd\",\n    value: function () {\n      var _onBatchEnd2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(batch, logs) {\n        var _iterator6, _step6, callback;\n\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                if (logs == null) {\n                  logs = {};\n                }\n\n                _iterator6 = _createForOfIteratorHelper(this.callbacks);\n                _context10.prev = 2;\n\n                _iterator6.s();\n\n              case 4:\n                if ((_step6 = _iterator6.n()).done) {\n                  _context10.next = 10;\n                  break;\n                }\n\n                callback = _step6.value;\n                _context10.next = 8;\n                return callback.onBatchEnd(batch, logs);\n\n              case 8:\n                _context10.next = 4;\n                break;\n\n              case 10:\n                _context10.next = 15;\n                break;\n\n              case 12:\n                _context10.prev = 12;\n                _context10.t0 = _context10[\"catch\"](2);\n\n                _iterator6.e(_context10.t0);\n\n              case 15:\n                _context10.prev = 15;\n\n                _iterator6.f();\n\n                return _context10.finish(15);\n\n              case 18:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this, [[2, 12, 15, 18]]);\n      }));\n\n      function onBatchEnd(_x17, _x18) {\n        return _onBatchEnd2.apply(this, arguments);\n      }\n\n      return onBatchEnd;\n    }()\n    /**\n     * Called at the beginning of training.\n     * @param logs Dictionary of logs.\n     */\n\n  }, {\n    key: \"onTrainBegin\",\n    value: function () {\n      var _onTrainBegin2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(logs) {\n        var _iterator7, _step7, callback;\n\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                if (logs == null) {\n                  logs = {};\n                }\n\n                _iterator7 = _createForOfIteratorHelper(this.callbacks);\n                _context11.prev = 2;\n\n                _iterator7.s();\n\n              case 4:\n                if ((_step7 = _iterator7.n()).done) {\n                  _context11.next = 10;\n                  break;\n                }\n\n                callback = _step7.value;\n                _context11.next = 8;\n                return callback.onTrainBegin(logs);\n\n              case 8:\n                _context11.next = 4;\n                break;\n\n              case 10:\n                _context11.next = 15;\n                break;\n\n              case 12:\n                _context11.prev = 12;\n                _context11.t0 = _context11[\"catch\"](2);\n\n                _iterator7.e(_context11.t0);\n\n              case 15:\n                _context11.prev = 15;\n\n                _iterator7.f();\n\n                return _context11.finish(15);\n\n              case 18:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this, [[2, 12, 15, 18]]);\n      }));\n\n      function onTrainBegin(_x19) {\n        return _onTrainBegin2.apply(this, arguments);\n      }\n\n      return onTrainBegin;\n    }()\n    /**\n     * Called at the end of training.\n     * @param logs Dictionary of logs.\n     */\n\n  }, {\n    key: \"onTrainEnd\",\n    value: function () {\n      var _onTrainEnd2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12(logs) {\n        var _iterator8, _step8, callback;\n\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                if (logs == null) {\n                  logs = {};\n                }\n\n                _iterator8 = _createForOfIteratorHelper(this.callbacks);\n                _context12.prev = 2;\n\n                _iterator8.s();\n\n              case 4:\n                if ((_step8 = _iterator8.n()).done) {\n                  _context12.next = 10;\n                  break;\n                }\n\n                callback = _step8.value;\n                _context12.next = 8;\n                return callback.onTrainEnd(logs);\n\n              case 8:\n                _context12.next = 4;\n                break;\n\n              case 10:\n                _context12.next = 15;\n                break;\n\n              case 12:\n                _context12.prev = 12;\n                _context12.t0 = _context12[\"catch\"](2);\n\n                _iterator8.e(_context12.t0);\n\n              case 15:\n                _context12.prev = 15;\n\n                _iterator8.f();\n\n                return _context12.finish(15);\n\n              case 18:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this, [[2, 12, 15, 18]]);\n      }));\n\n      function onTrainEnd(_x20) {\n        return _onTrainEnd2.apply(this, arguments);\n      }\n\n      return onTrainEnd;\n    }()\n  }]);\n\n  return CallbackList;\n}();\n/**\n * Callback that accumulates epoch averages of metrics.\n *\n * This callback is automatically applied to every LayersModel.\n */\n\nexport var BaseLogger = /*#__PURE__*/function (_BaseCallback) {\n  _inherits(BaseLogger, _BaseCallback);\n\n  var _super = _createSuper(BaseLogger);\n\n  function BaseLogger() {\n    _classCallCheck(this, BaseLogger);\n\n    return _super.call(this);\n  }\n\n  _createClass(BaseLogger, [{\n    key: \"onEpochBegin\",\n    value: function () {\n      var _onEpochBegin3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13(epoch) {\n        return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                this.seen = 0;\n                this.totals = {};\n\n              case 2:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      function onEpochBegin(_x21) {\n        return _onEpochBegin3.apply(this, arguments);\n      }\n\n      return onEpochBegin;\n    }()\n  }, {\n    key: \"onBatchEnd\",\n    value: function () {\n      var _onBatchEnd3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14(batch, logs) {\n        var _this = this;\n\n        var batchSize, _loop, key;\n\n        return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                if (logs == null) {\n                  logs = {};\n                }\n\n                batchSize = logs['size'] == null ? 0 : logs['size'];\n                this.seen += batchSize;\n\n                _loop = function _loop(key) {\n                  var value = logs[key];\n\n                  if (typeof value === 'number') {\n                    if (!_this.totals.hasOwnProperty(key)) {\n                      _this.totals[key] = 0;\n                    }\n\n                    _this.totals[key] = _this.totals[key] + value * batchSize;\n                  } else {\n                    var oldTotalsToDispose;\n\n                    if (key in _this.totals) {\n                      oldTotalsToDispose = _this.totals[key];\n                    } else {\n                      _this.totals[key] = 0;\n                    }\n\n                    var total = tidy(function () {\n                      return add(_this.totals[key], mul(value, batchSize));\n                    });\n                    _this.totals[key] = total;\n\n                    if (oldTotalsToDispose != null) {\n                      oldTotalsToDispose.dispose();\n                    }\n                  }\n                };\n\n                for (key in logs) {\n                  _loop(key);\n                }\n\n              case 5:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this);\n      }));\n\n      function onBatchEnd(_x22, _x23) {\n        return _onBatchEnd3.apply(this, arguments);\n      }\n\n      return onBatchEnd;\n    }()\n  }, {\n    key: \"onEpochEnd\",\n    value: function () {\n      var _onEpochEnd3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee15(epoch, logs) {\n        var _this2 = this;\n\n        var _iterator9, _step9, _loop2, _ret;\n\n        return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                if (!(logs != null)) {\n                  _context15.next = 19;\n                  break;\n                }\n\n                _iterator9 = _createForOfIteratorHelper(this.params['metrics']);\n                _context15.prev = 2;\n\n                _loop2 = function _loop2() {\n                  var key = _step9.value;\n\n                  if (_this2.totals[key] == null) {\n                    return \"continue\";\n                  }\n\n                  if (typeof _this2.totals[key] === 'number') {\n                    logs[key] = _this2.totals[key] / _this2.seen;\n                  } else {\n                    tidy(function () {\n                      var log = mul(div(1, _this2.seen), _this2.totals[key]);\n                      logs[key] = log;\n\n                      _this2.totals[key].dispose();\n\n                      keep(logs[key]);\n                    });\n                  }\n                };\n\n                _iterator9.s();\n\n              case 5:\n                if ((_step9 = _iterator9.n()).done) {\n                  _context15.next = 11;\n                  break;\n                }\n\n                _ret = _loop2();\n\n                if (!(_ret === \"continue\")) {\n                  _context15.next = 9;\n                  break;\n                }\n\n                return _context15.abrupt(\"continue\", 9);\n\n              case 9:\n                _context15.next = 5;\n                break;\n\n              case 11:\n                _context15.next = 16;\n                break;\n\n              case 13:\n                _context15.prev = 13;\n                _context15.t0 = _context15[\"catch\"](2);\n\n                _iterator9.e(_context15.t0);\n\n              case 16:\n                _context15.prev = 16;\n\n                _iterator9.f();\n\n                return _context15.finish(16);\n\n              case 19:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this, [[2, 13, 16, 19]]);\n      }));\n\n      function onEpochEnd(_x24, _x25) {\n        return _onEpochEnd3.apply(this, arguments);\n      }\n\n      return onEpochEnd;\n    }()\n  }]);\n\n  return BaseLogger;\n}(BaseCallback);\n/**\n * Callback that records events into a `History` object. This callback is\n * automatically applied to every TF.js Layers model. The `History` object\n * gets returned by the `fit` method of models.\n */\n\nexport var History = /*#__PURE__*/function (_BaseCallback2) {\n  _inherits(History, _BaseCallback2);\n\n  var _super2 = _createSuper(History);\n\n  function History() {\n    _classCallCheck(this, History);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(History, [{\n    key: \"onTrainBegin\",\n    value: function () {\n      var _onTrainBegin3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee16(logs) {\n        return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                this.epoch = [];\n                this.history = {};\n\n              case 2:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16, this);\n      }));\n\n      function onTrainBegin(_x26) {\n        return _onTrainBegin3.apply(this, arguments);\n      }\n\n      return onTrainBegin;\n    }()\n  }, {\n    key: \"onEpochEnd\",\n    value: function () {\n      var _onEpochEnd4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee17(epoch, logs) {\n        var key;\n        return _regeneratorRuntime.wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                if (logs == null) {\n                  logs = {};\n                }\n\n                this.epoch.push(epoch);\n\n                for (key in logs) {\n                  if (this.history[key] == null) {\n                    this.history[key] = [];\n                  }\n\n                  this.history[key].push(logs[key]);\n                }\n\n              case 3:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }, _callee17, this);\n      }));\n\n      function onEpochEnd(_x27, _x28) {\n        return _onEpochEnd4.apply(this, arguments);\n      }\n\n      return onEpochEnd;\n    }()\n    /**\n     * Await the values of all losses and metrics.\n     */\n\n  }, {\n    key: \"syncData\",\n    value: function () {\n      var _syncData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee18() {\n        var promises, keys, indices, key, valueArray, i, valueScalar, values, n, tensorToDispose;\n        return _regeneratorRuntime.wrap(function _callee18$(_context18) {\n          while (1) {\n            switch (_context18.prev = _context18.next) {\n              case 0:\n                promises = [];\n                keys = [];\n                indices = [];\n\n                for (key in this.history) {\n                  valueArray = this.history[key];\n\n                  for (i = 0; i < valueArray.length; ++i) {\n                    if (typeof valueArray[i] !== 'number') {\n                      valueScalar = valueArray[i];\n                      promises.push(valueScalar.data());\n                      keys.push(key);\n                      indices.push(i);\n                    }\n                  }\n                }\n\n                _context18.next = 6;\n                return Promise.all(promises);\n\n              case 6:\n                values = _context18.sent;\n\n                for (n = 0; n < values.length; ++n) {\n                  tensorToDispose = this.history[keys[n]][indices[n]];\n                  tensorToDispose.dispose();\n                  this.history[keys[n]][indices[n]] = values[n][0];\n                }\n\n              case 8:\n              case \"end\":\n                return _context18.stop();\n            }\n          }\n        }, _callee18, this);\n      }));\n\n      function syncData() {\n        return _syncData.apply(this, arguments);\n      }\n\n      return syncData;\n    }()\n  }]);\n\n  return History;\n}(BaseCallback);\n/**\n * Custom callback for training.\n */\n\nexport var CustomCallback = /*#__PURE__*/function (_BaseCallback3) {\n  _inherits(CustomCallback, _BaseCallback3);\n\n  var _super3 = _createSuper(CustomCallback);\n\n  function CustomCallback(args, yieldEvery) {\n    var _this3;\n\n    _classCallCheck(this, CustomCallback);\n\n    _this3 = _super3.call(this);\n    _this3.currentEpoch = 0;\n    _this3.yieldEvery = yieldEvery || 'auto';\n\n    if (_this3.yieldEvery === 'auto') {\n      _this3.yieldEvery = DEFAULT_YIELD_EVERY_MS;\n    }\n\n    if (_this3.yieldEvery === 'never' && args.onYield != null) {\n      throw new Error('yieldEvery is `never` but you provided an `onYield` callback. ' + 'Either change `yieldEvery` or remove the callback');\n    }\n\n    if (util.isNumber(_this3.yieldEvery)) {\n      // Decorate `maybeWait` so it will be called at most once every\n      // `yieldEvery` ms.\n      _this3.maybeWait = generic_utils.debounce(_this3.maybeWait.bind(_assertThisInitialized(_this3)), _this3.yieldEvery);\n    }\n\n    _this3.trainBegin = args.onTrainBegin;\n    _this3.trainEnd = args.onTrainEnd;\n    _this3.epochBegin = args.onEpochBegin;\n    _this3.epochEnd = args.onEpochEnd;\n    _this3.batchBegin = args.onBatchBegin;\n    _this3.batchEnd = args.onBatchEnd;\n    _this3.yield = args.onYield;\n    return _this3;\n  }\n\n  _createClass(CustomCallback, [{\n    key: \"maybeWait\",\n    value: function () {\n      var _maybeWait = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee19(epoch, batch, logs) {\n        var ps;\n        return _regeneratorRuntime.wrap(function _callee19$(_context19) {\n          while (1) {\n            switch (_context19.prev = _context19.next) {\n              case 0:\n                ps = [];\n\n                if (!(this.yield != null)) {\n                  _context19.next = 5;\n                  break;\n                }\n\n                _context19.next = 4;\n                return resolveScalarsInLogs(logs);\n\n              case 4:\n                ps.push(this.yield(epoch, batch, logs));\n\n              case 5:\n                ps.push(nextFrame());\n                _context19.next = 8;\n                return Promise.all(ps);\n\n              case 8:\n              case \"end\":\n                return _context19.stop();\n            }\n          }\n        }, _callee19, this);\n      }));\n\n      function maybeWait(_x29, _x30, _x31) {\n        return _maybeWait.apply(this, arguments);\n      }\n\n      return maybeWait;\n    }()\n  }, {\n    key: \"onEpochBegin\",\n    value: function () {\n      var _onEpochBegin4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee20(epoch, logs) {\n        return _regeneratorRuntime.wrap(function _callee20$(_context20) {\n          while (1) {\n            switch (_context20.prev = _context20.next) {\n              case 0:\n                this.currentEpoch = epoch;\n\n                if (!(this.epochBegin != null)) {\n                  _context20.next = 6;\n                  break;\n                }\n\n                _context20.next = 4;\n                return resolveScalarsInLogs(logs);\n\n              case 4:\n                _context20.next = 6;\n                return this.epochBegin(epoch, logs);\n\n              case 6:\n              case \"end\":\n                return _context20.stop();\n            }\n          }\n        }, _callee20, this);\n      }));\n\n      function onEpochBegin(_x32, _x33) {\n        return _onEpochBegin4.apply(this, arguments);\n      }\n\n      return onEpochBegin;\n    }()\n  }, {\n    key: \"onEpochEnd\",\n    value: function () {\n      var _onEpochEnd5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee21(epoch, logs) {\n        var ps;\n        return _regeneratorRuntime.wrap(function _callee21$(_context21) {\n          while (1) {\n            switch (_context21.prev = _context21.next) {\n              case 0:\n                ps = [];\n\n                if (!(this.epochEnd != null)) {\n                  _context21.next = 5;\n                  break;\n                }\n\n                _context21.next = 4;\n                return resolveScalarsInLogs(logs);\n\n              case 4:\n                ps.push(this.epochEnd(epoch, logs));\n\n              case 5:\n                if (this.yieldEvery === 'epoch') {\n                  ps.push(nextFrame());\n                }\n\n                _context21.next = 8;\n                return Promise.all(ps);\n\n              case 8:\n              case \"end\":\n                return _context21.stop();\n            }\n          }\n        }, _callee21, this);\n      }));\n\n      function onEpochEnd(_x34, _x35) {\n        return _onEpochEnd5.apply(this, arguments);\n      }\n\n      return onEpochEnd;\n    }()\n  }, {\n    key: \"onBatchBegin\",\n    value: function () {\n      var _onBatchBegin3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee22(batch, logs) {\n        return _regeneratorRuntime.wrap(function _callee22$(_context22) {\n          while (1) {\n            switch (_context22.prev = _context22.next) {\n              case 0:\n                if (!(this.batchBegin != null)) {\n                  _context22.next = 5;\n                  break;\n                }\n\n                _context22.next = 3;\n                return resolveScalarsInLogs(logs);\n\n              case 3:\n                _context22.next = 5;\n                return this.batchBegin(batch, logs);\n\n              case 5:\n              case \"end\":\n                return _context22.stop();\n            }\n          }\n        }, _callee22, this);\n      }));\n\n      function onBatchBegin(_x36, _x37) {\n        return _onBatchBegin3.apply(this, arguments);\n      }\n\n      return onBatchBegin;\n    }()\n  }, {\n    key: \"onBatchEnd\",\n    value: function () {\n      var _onBatchEnd4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee23(batch, logs) {\n        var ps;\n        return _regeneratorRuntime.wrap(function _callee23$(_context23) {\n          while (1) {\n            switch (_context23.prev = _context23.next) {\n              case 0:\n                ps = [];\n\n                if (!(this.batchEnd != null)) {\n                  _context23.next = 5;\n                  break;\n                }\n\n                _context23.next = 4;\n                return resolveScalarsInLogs(logs);\n\n              case 4:\n                ps.push(this.batchEnd(batch, logs));\n\n              case 5:\n                if (this.yieldEvery === 'batch') {\n                  ps.push(nextFrame());\n                } else if (util.isNumber(this.yieldEvery)) {\n                  ps.push(this.maybeWait(this.currentEpoch, batch, logs));\n                }\n\n                _context23.next = 8;\n                return Promise.all(ps);\n\n              case 8:\n              case \"end\":\n                return _context23.stop();\n            }\n          }\n        }, _callee23, this);\n      }));\n\n      function onBatchEnd(_x38, _x39) {\n        return _onBatchEnd4.apply(this, arguments);\n      }\n\n      return onBatchEnd;\n    }()\n  }, {\n    key: \"onTrainBegin\",\n    value: function () {\n      var _onTrainBegin4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee24(logs) {\n        return _regeneratorRuntime.wrap(function _callee24$(_context24) {\n          while (1) {\n            switch (_context24.prev = _context24.next) {\n              case 0:\n                if (!(this.trainBegin != null)) {\n                  _context24.next = 5;\n                  break;\n                }\n\n                _context24.next = 3;\n                return resolveScalarsInLogs(logs);\n\n              case 3:\n                _context24.next = 5;\n                return this.trainBegin(logs);\n\n              case 5:\n              case \"end\":\n                return _context24.stop();\n            }\n          }\n        }, _callee24, this);\n      }));\n\n      function onTrainBegin(_x40) {\n        return _onTrainBegin4.apply(this, arguments);\n      }\n\n      return onTrainBegin;\n    }()\n  }, {\n    key: \"onTrainEnd\",\n    value: function () {\n      var _onTrainEnd3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee25(logs) {\n        return _regeneratorRuntime.wrap(function _callee25$(_context25) {\n          while (1) {\n            switch (_context25.prev = _context25.next) {\n              case 0:\n                if (!(this.trainEnd != null)) {\n                  _context25.next = 5;\n                  break;\n                }\n\n                _context25.next = 3;\n                return resolveScalarsInLogs(logs);\n\n              case 3:\n                _context25.next = 5;\n                return this.trainEnd(logs);\n\n              case 5:\n              case \"end\":\n                return _context25.stop();\n            }\n          }\n        }, _callee25, this);\n      }));\n\n      function onTrainEnd(_x41) {\n        return _onTrainEnd3.apply(this, arguments);\n      }\n\n      return onTrainEnd;\n    }()\n  }]);\n\n  return CustomCallback;\n}(BaseCallback);\n/**\n * Standardize callbacks or configurations of them to an Array of callbacks.\n */\n\nexport function standardizeCallbacks(callbacks, yieldEvery) {\n  if (callbacks == null) {\n    callbacks = {};\n  }\n\n  if (callbacks instanceof BaseCallback) {\n    return [callbacks];\n  }\n\n  if (Array.isArray(callbacks) && callbacks[0] instanceof BaseCallback) {\n    return callbacks;\n  } // Convert custom callback configs to custom callback objects.\n\n\n  var callbackConfigs = generic_utils.toList(callbacks);\n  return callbackConfigs.map(function (callbackConfig) {\n    return new CustomCallback(callbackConfig, yieldEvery);\n  });\n}\n/**\n * A global registry for callback constructors to be used during\n * LayersModel.fit().\n */\n\nexport var CallbackConstructorRegistry = /*#__PURE__*/function () {\n  /**\n   * Blocks public access to constructor.\n   */\n  function CallbackConstructorRegistry() {\n    _classCallCheck(this, CallbackConstructorRegistry);\n  }\n  /**\n   * Register a tf.LayersModel.fit() callback constructor.\n   *\n   * The registered callback constructor will be used to instantiate\n   * callbacks for every tf.LayersModel.fit() call afterwards.\n   *\n   * @param verbosityLevel Level of verbosity at which the `callbackConstructor`\n   *   is to be reigstered.\n   * @param callbackConstructor A no-arg constructor for `tf.Callback`.\n   * @throws Error, if the same callbackConstructor has been registered before,\n   *   either at the same or a different `verbosityLevel`.\n   */\n\n\n  _createClass(CallbackConstructorRegistry, null, [{\n    key: \"registerCallbackConstructor\",\n    value: function registerCallbackConstructor(verbosityLevel, callbackConstructor) {\n      util.assert(verbosityLevel >= 0 && Number.isInteger(verbosityLevel), function () {\n        return \"Verbosity level is expected to be an integer >= 0, \" + \"but got \".concat(verbosityLevel);\n      });\n      CallbackConstructorRegistry.checkForDuplicate(callbackConstructor);\n\n      if (CallbackConstructorRegistry.constructors[verbosityLevel] == null) {\n        CallbackConstructorRegistry.constructors[verbosityLevel] = [];\n      }\n\n      CallbackConstructorRegistry.constructors[verbosityLevel].push(callbackConstructor);\n    }\n  }, {\n    key: \"checkForDuplicate\",\n    value: function checkForDuplicate(callbackConstructor) {\n      for (var levelName in CallbackConstructorRegistry.constructors) {\n        var constructors = CallbackConstructorRegistry.constructors[+levelName];\n        constructors.forEach(function (ctor) {\n          if (ctor === callbackConstructor) {\n            throw new ValueError('Duplicate callback constructor.');\n          }\n        });\n      }\n    }\n    /**\n     * Clear all registered callback constructors.\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      CallbackConstructorRegistry.constructors = {};\n    }\n    /**\n     * Create callbacks using the registered callback constructors.\n     *\n     * Given `verbosityLevel`, all constructors registered at that level or above\n     * will be called and the instantiated callbacks will be used.\n     *\n     * @param verbosityLevel: Level of verbosity.\n     */\n\n  }, {\n    key: \"createCallbacks\",\n    value: function createCallbacks(verbosityLevel) {\n      var constructors = [];\n\n      for (var levelName in CallbackConstructorRegistry.constructors) {\n        var level = +levelName;\n\n        if (verbosityLevel >= level) {\n          constructors.push.apply(constructors, _toConsumableArray(CallbackConstructorRegistry.constructors[level]));\n        }\n      }\n\n      return constructors.map(function (ctor) {\n        return new ctor();\n      });\n    }\n  }]);\n\n  return CallbackConstructorRegistry;\n}();\nCallbackConstructorRegistry.constructors = {};\nexport function configureCallbacks(callbacks, verbose, epochs, initialEpoch, numTrainSamples, stepsPerEpoch, batchSize, doValidation, callbackMetrics) {\n  var history = new History();\n  var actualCallbacks = [new BaseLogger()].concat(_toConsumableArray(CallbackConstructorRegistry.createCallbacks(verbose)));\n\n  if (callbacks != null) {\n    actualCallbacks.push.apply(actualCallbacks, _toConsumableArray(callbacks));\n  }\n\n  actualCallbacks.push(history);\n  var callbackList = new CallbackList(actualCallbacks); // TODO(cais): Figure out when this LayersModel instance can have a\n  // dynamically\n  //   set property called 'callback_model' as in PyKeras.\n\n  callbackList.setParams({\n    epochs: epochs,\n    initialEpoch: initialEpoch,\n    samples: numTrainSamples,\n    steps: stepsPerEpoch,\n    batchSize: batchSize,\n    verbose: verbose,\n    doValidation: doValidation,\n    metrics: callbackMetrics\n  });\n  return {\n    callbackList: callbackList,\n    history: history\n  };\n}","import _asyncToGenerator from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _regeneratorRuntime from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/regenerator\";\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\nimport { dispose } from '@tensorflow/tfjs-core';\n/**\n * Turn any Scalar values in a Logs object into actual number values.\n *\n * @param logs The `Logs` object to be resolved in place.\n */\n\nexport function resolveScalarsInLogs(_x) {\n  return _resolveScalarsInLogs.apply(this, arguments);\n}\n/**\n * Dispose all Tensors in an UnresolvedLogs object.\n *\n * @param logs An `UnresolvedLogs` object potentially containing `tf.Tensor`s in\n *   places where the values can be `tf.Tensor` or `number`.\n */\n\nfunction _resolveScalarsInLogs() {\n  _resolveScalarsInLogs = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(logs) {\n    var promises, keys, scalarsToDispose, key, value, valueScalar, values, i;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(logs == null)) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            promises = [];\n            keys = [];\n            scalarsToDispose = [];\n\n            for (key in logs) {\n              value = logs[key];\n\n              if (typeof value !== 'number') {\n                valueScalar = value;\n                promises.push(valueScalar.data());\n                keys.push(key);\n                scalarsToDispose.push(valueScalar);\n              }\n            }\n\n            if (!(promises.length > 0)) {\n              _context.next = 12;\n              break;\n            }\n\n            _context.next = 9;\n            return Promise.all(promises);\n\n          case 9:\n            values = _context.sent;\n\n            for (i = 0; i < values.length; ++i) {\n              logs[keys[i]] = values[i][0];\n            } // Dispose the original scalar tensors.\n\n\n            dispose(scalarsToDispose);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _resolveScalarsInLogs.apply(this, arguments);\n}\n\nexport function disposeTensorsInLogs(logs) {\n  if (logs == null) {\n    return;\n  }\n\n  for (var key in logs) {\n    var value = logs[key];\n\n    if (typeof value !== 'number') {\n      value.dispose();\n    }\n  }\n}","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/* Original Source layers/__init__.py */\nimport { serialization } from '@tensorflow/tfjs-core';\nimport { deserializeKerasObject } from '../utils/generic_utils';\n/**\n * Instantiate a layer from a config dictionary.\n * @param config dict of the form {class_name: str, config: dict}\n * @param customObjects dict mapping class names (or function names)\n *   of custom (non-Keras) objects to class/functions\n * @param fastWeightInit Optional flag to use fast weight initialization\n *   during deserialization. This is applicable to cases in which\n *   the initialization will be immediately overwritten by loaded weight\n *   values. Default: `false`.\n * @returns Layer instance (may be LayersModel, Sequential, Layer...)\n */\n\nexport function deserialize(config) {\n  var customObjects = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var fastWeightInit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return deserializeKerasObject(config, serialization.SerializationMap.getMap().classNameMap, customObjects, 'layer', fastWeightInit);\n}","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/* Original Source: losses.py */\nimport * as tfc from '@tensorflow/tfjs-core';\nimport { tidy, util } from '@tensorflow/tfjs-core';\nimport { epsilon } from './backend/common';\nimport * as K from './backend/tfjs_backend';\nimport { ValueError } from './errors';\n/**\n * Normalizes a tensor wrt the L2 norm alongside the specified axis.\n * @param x\n * @param axis Axis along which to perform normalization.\n */\n\nexport function l2Normalize(x, axis) {\n  return tidy(function () {\n    if (x.dtype !== 'float32') {\n      x = x.asType('float32');\n    }\n\n    var squareSum = tfc.sum(K.square(x), axis, true);\n    var epsilonTensor = tfc.fill(squareSum.shape, epsilon());\n    var norm = tfc.sqrt(tfc.maximum(squareSum, epsilonTensor));\n    return tfc.div(x, norm);\n  });\n}\nexport function meanSquaredError(yTrue, yPred) {\n  return tidy(function () {\n    return tfc.mean(K.square(tfc.sub(yPred, yTrue)), -1);\n  });\n}\nexport function meanAbsoluteError(yTrue, yPred) {\n  return tidy(function () {\n    return tfc.mean(tfc.abs(tfc.sub(yPred, yTrue)), -1);\n  });\n}\nexport function meanAbsolutePercentageError(yTrue, yPred) {\n  return tidy(function () {\n    var diff = tfc.sub(yTrue, yPred);\n    var clippedTrue = tfc.clipByValue(tfc.abs(yTrue), epsilon(), Number.MAX_VALUE);\n    var absResult = tfc.abs(tfc.div(diff, clippedTrue));\n    return tfc.mul(100, tfc.mean(absResult, -1));\n  });\n}\nexport function meanSquaredLogarithmicError(yTrue, yPred) {\n  return tidy(function () {\n    var clippedPred = tfc.clipByValue(yPred, epsilon(), Number.MAX_VALUE);\n    var firstLog = tfc.log(tfc.add(1, clippedPred));\n    var clippedTrue = tfc.clipByValue(yTrue, epsilon(), Number.MAX_VALUE);\n    var secondLog = tfc.log(tfc.add(1, clippedTrue));\n    return tfc.mean(K.square(tfc.sub(firstLog, secondLog)), -1);\n  });\n}\nexport function squaredHinge(yTrue, yPred) {\n  return tidy(function () {\n    var maxResult = tfc.maximum(0, tfc.sub(1, tfc.mul(yTrue, yPred)));\n    return tfc.mean(K.square(maxResult), -1);\n  });\n}\nexport function hinge(yTrue, yPred) {\n  return tidy(function () {\n    var maxResult = tfc.maximum(0, tfc.sub(1, tfc.mul(yTrue, yPred)));\n    return tfc.mean(maxResult, -1);\n  });\n}\nexport function categoricalHinge(yTrue, yPred) {\n  return tidy(function () {\n    var pos = tfc.sum(tfc.mul(yTrue, yPred), -1);\n    var neg = tfc.max(tfc.mul(tfc.sub(1, yTrue), yPred), -1);\n    return tfc.maximum(0, tfc.add(1, tfc.sub(neg, pos)));\n  });\n}\n/**\n * Logarithm of the hyperbolic cosine of the prediction error.\n *\n * `log(cosh(x))` is approximately equal to `(x ** 2) / 2` for small `x` and\n * to `abs(x) - log(2)` for large `x`. This means that 'logcosh' works mostly\n * like the mean squared error, but will not be so strongly affected by the\n * occasional wildly incorrect prediction.\n */\n\nexport function logcosh(yTrue, yPred) {\n  return tidy(function () {\n    var log2 = Math.log(2);\n    var predictionDiff = tfc.sub(yPred, yTrue);\n    var logcoshResult = tfc.sub(tfc.add(predictionDiff, tfc.softplus(tfc.mul(-2, predictionDiff))), log2);\n    return tfc.mean(logcoshResult, -1);\n  });\n}\nexport function categoricalCrossentropy(target, output) {\n  var fromLogits = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return tidy(function () {\n    if (fromLogits) {\n      output = tfc.softmax(output);\n    } else {\n      // scale preds so that the class probabilities of each sample sum to 1.\n      var outputSum = tfc.sum(output, output.shape.length - 1, true);\n      output = tfc.div(output, outputSum);\n    }\n\n    output = tfc.clipByValue(output, epsilon(), 1 - epsilon());\n    return tfc.neg(tfc.sum(tfc.mul(target.toFloat(), tfc.log(output)), output.shape.length - 1));\n  });\n}\n/**\n * Categorical crossentropy with integer targets.\n *\n * @param target An integer tensor.\n * @param output A tensor resulting from a softmax (unless `fromLogits` is\n *  `true`, in which case `output` is expected to be the logits).\n * @param fromLogits Boolean, whether `output` is the result of a softmax, or is\n *   a tensor of logits.\n */\n\nexport function sparseCategoricalCrossentropy(target, output) {\n  var fromLogits = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return tidy(function () {\n    var flatTarget = tfc.floor(K.flatten(target)).toInt();\n    output = tfc.clipByValue(output, epsilon(), 1 - epsilon());\n    var outputShape = output.shape;\n    var oneHotTarget = tfc.oneHot(flatTarget, outputShape[outputShape.length - 1]).reshape(outputShape);\n    return categoricalCrossentropy(oneHotTarget, output, fromLogits);\n  });\n}\n/**\n * From TensorFlow's implementation in nn_impl.py:\n *\n * For brevity, let `x = logits`, `z = labels`.  The logistic loss is\n *      z * -log(sigmoid(x)) + (1 - z) * -log(1 - sigmoid(x))\n *    = z * -log(1 / (1 + exp(-x))) + (1 - z) * -log(exp(-x) / (1 + exp(-x)))\n *    = z * log(1 + exp(-x)) + (1 - z) * (-log(exp(-x)) + log(1 + exp(-x)))\n *    = z * log(1 + exp(-x)) + (1 - z) * (x + log(1 + exp(-x))\n *    = (1 - z) * x + log(1 + exp(-x))\n *    = x - x * z + log(1 + exp(-x))\n * For x < 0, to avoid overflow in exp(-x), we reformulate the above\n *      x - x * z + log(1 + exp(-x))\n *    = log(exp(x)) - x * z + log(1 + exp(-x))\n *    = - x * z + log(1 + exp(x))\n * Hence, to ensure stability and avoid overflow, the implementation uses this\n * equivalent formulation\n *    max(x, 0) - x * z + log(1 + exp(-abs(x)))\n *\n * @param labels The labels.\n * @param logits The logits.\n */\n\nexport function sigmoidCrossEntropyWithLogits(labels, logits) {\n  if (!util.arraysEqual(labels.shape, logits.shape)) {\n    throw new ValueError(\"logits and labels must have the same shape, but got shapes \" + \"\".concat(JSON.stringify(labels.shape), \" and \").concat(JSON.stringify(logits.shape)));\n  }\n\n  return tidy(function () {\n    // The logistic loss formula from above is\n    //   x - x * z + log(1 + exp(-x))\n    // For x < 0, a more numerically stable formula is\n    //   -x * z + log(1 + exp(x))\n    // Note that these two expressions can be combined into the following:\n    //   max(x, 0) - x * z + log(1 + exp(-abs(x)))\n    var reluLogits = logits.relu();\n    var negAbsLogits = logits.abs().neg();\n    return reluLogits.sub(logits.mul(labels)).add(negAbsLogits.exp().log1p());\n  });\n}\nexport function binaryCrossentropy(yTrue, yPred) {\n  return tidy(function () {\n    var y;\n    y = tfc.clipByValue(yPred, epsilon(), 1 - epsilon());\n    y = tfc.log(tfc.div(y, tfc.sub(1, y)));\n    return tfc.mean(sigmoidCrossEntropyWithLogits(yTrue, y), -1);\n  });\n}\nexport function kullbackLeiblerDivergence(yTrue, yPred) {\n  return tidy(function () {\n    var clippedTrue = tfc.clipByValue(yTrue, epsilon(), 1);\n    var clippedPred = tfc.clipByValue(yPred, epsilon(), 1);\n    return tfc.sum(tfc.mul(yTrue, tfc.log(tfc.div(clippedTrue, clippedPred))), -1);\n  });\n}\nexport function poisson(yTrue, yPred) {\n  return tidy(function () {\n    var logPred = tfc.log(tfc.add(epsilon(), yPred));\n    return tfc.mean(tfc.sub(yPred, tfc.mul(yTrue, logPred)), -1);\n  });\n}\nexport function cosineProximity(yTrue, yPred) {\n  return tidy(function () {\n    var trueNormalized = l2Normalize(yTrue, -1);\n    var predNormalized = l2Normalize(yPred, -1);\n    var trueXPred = tfc.mul(trueNormalized, predNormalized);\n    return tfc.neg(tfc.sum(trueXPred, -1));\n  });\n}\nexport var mse = meanSquaredError;\nexport var MSE = meanSquaredError;\nexport var mae = meanAbsoluteError;\nexport var MAE = meanAbsoluteError;\nexport var mape = meanAbsolutePercentageError;\nexport var MAPE = meanAbsolutePercentageError;\nexport var msle = meanSquaredLogarithmicError;\nexport var MSLE = meanSquaredLogarithmicError;\nexport var kld = kullbackLeiblerDivergence;\nexport var KLD = kullbackLeiblerDivergence;\nexport var cosine = cosineProximity; // TODO(michaelterry): Add deserialize() function.\n\nexport var lossesMap = {\n  meanSquaredError: meanSquaredError,\n  meanAbsoluteError: meanAbsoluteError,\n  meanAbsolutePercentageError: meanAbsolutePercentageError,\n  meanSquaredLogarithmicError: meanSquaredLogarithmicError,\n  squaredHinge: squaredHinge,\n  hinge: hinge,\n  categoricalHinge: categoricalHinge,\n  logcosh: logcosh,\n  categoricalCrossentropy: categoricalCrossentropy,\n  sparseCategoricalCrossentropy: sparseCategoricalCrossentropy,\n  binaryCrossentropy: binaryCrossentropy,\n  kullbackLeiblerDivergence: kullbackLeiblerDivergence,\n  poisson: poisson,\n  cosineProximity: cosineProximity\n}; // Porting note: This diverges from the PyKeras implementation and may need to\n// change based on (de)serialization requirements.\n\nexport function get(identifierOrFn) {\n  if (typeof identifierOrFn === 'string') {\n    if (identifierOrFn in lossesMap) {\n      return lossesMap[identifierOrFn];\n    }\n\n    var errMsg = \"Unknown loss \".concat(identifierOrFn);\n\n    if (identifierOrFn.toLowerCase().includes('softmaxcrossentropy')) {\n      errMsg = \"Unknown loss \".concat(identifierOrFn, \". \") + 'Use \"categoricalCrossentropy\" as the string name for ' + 'tf.losses.softmaxCrossEntropy';\n    }\n\n    throw new ValueError(errMsg);\n  } else {\n    return identifierOrFn;\n  }\n}","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/**\n * Built-in metrics.\n */\nimport * as tfc from '@tensorflow/tfjs-core';\nimport { tidy } from '@tensorflow/tfjs-core';\nimport * as K from './backend/tfjs_backend';\nimport { NotImplementedError, ValueError } from './errors';\nimport { categoricalCrossentropy as categoricalCrossentropyLoss, cosineProximity, meanAbsoluteError, meanAbsolutePercentageError, meanSquaredError, sparseCategoricalCrossentropy as sparseCategoricalCrossentropyLoss } from './losses';\nimport { binaryCrossentropy as lossBinaryCrossentropy } from './losses';\nimport { lossesMap } from './losses';\nimport * as util from './utils/generic_utils';\nexport function binaryAccuracy(yTrue, yPred) {\n  return tidy(function () {\n    var threshold = tfc.mul(.5, tfc.onesLike(yPred));\n    var yPredThresholded = K.cast(tfc.greater(yPred, threshold), yTrue.dtype);\n    return tfc.mean(tfc.equal(yTrue, yPredThresholded), -1);\n  });\n}\nexport function categoricalAccuracy(yTrue, yPred) {\n  return tidy(function () {\n    return K.cast(tfc.equal(tfc.argMax(yTrue, -1), tfc.argMax(yPred, -1)), 'float32');\n  });\n}\n\nfunction truePositives(yTrue, yPred) {\n  return tidy(function () {\n    return tfc.logicalAnd(yTrue.equal(1), yPred.equal(1)).sum().cast('float32');\n  });\n}\n\nfunction falseNegatives(yTrue, yPred) {\n  return tidy(function () {\n    return tfc.logicalAnd(yTrue.equal(1), yPred.equal(0)).sum().cast('float32');\n  });\n}\n\nfunction falsePositives(yTrue, yPred) {\n  return tidy(function () {\n    return tfc.logicalAnd(yTrue.equal(0), yPred.equal(1)).sum().cast('float32');\n  });\n}\n\nexport function precision(yTrue, yPred) {\n  return tidy(function () {\n    var tp = truePositives(yTrue, yPred);\n    var fp = falsePositives(yTrue, yPred);\n    var denominator = tp.add(fp);\n    return tfc.where(tfc.greater(denominator, 0), tp.div(denominator), 0).cast('float32');\n  });\n}\nexport function recall(yTrue, yPred) {\n  return tidy(function () {\n    var tp = truePositives(yTrue, yPred);\n    var fn = falseNegatives(yTrue, yPred);\n    var denominator = tp.add(fn);\n    return tfc.where(tfc.greater(denominator, 0), tp.div(denominator), 0).cast('float32');\n  });\n}\nexport function binaryCrossentropy(yTrue, yPred) {\n  return lossBinaryCrossentropy(yTrue, yPred);\n}\nexport function sparseCategoricalAccuracy(yTrue, yPred) {\n  if (yTrue.rank === yPred.rank) {\n    yTrue = yTrue.squeeze([yTrue.rank - 1]);\n  }\n\n  yPred = yPred.argMax(-1);\n\n  if (yPred.dtype !== yTrue.dtype) {\n    yPred = yPred.asType(yTrue.dtype);\n  }\n\n  return tfc.equal(yTrue, yPred).asType('float32');\n}\nexport function topKCategoricalAccuracy(yTrue, yPred) {\n  throw new NotImplementedError();\n}\nexport function sparseTopKCategoricalAccuracy(yTrue, yPred) {\n  throw new NotImplementedError();\n} // Aliases.\n\nexport var mse = meanSquaredError;\nexport var MSE = meanSquaredError;\nexport var mae = meanAbsoluteError;\nexport var MAE = meanAbsoluteError;\nexport var mape = meanAbsolutePercentageError;\nexport var MAPE = meanAbsolutePercentageError;\nexport var categoricalCrossentropy = categoricalCrossentropyLoss;\nexport var cosine = cosineProximity;\nexport var sparseCategoricalCrossentropy = sparseCategoricalCrossentropyLoss; // TODO(cais, nielsene): Add serialize().\n\nexport var metricsMap = {\n  binaryAccuracy: binaryAccuracy,\n  categoricalAccuracy: categoricalAccuracy,\n  precision: precision,\n  categoricalCrossentropy: categoricalCrossentropy,\n  sparseCategoricalCrossentropy: sparseCategoricalCrossentropy,\n  mse: mse,\n  MSE: MSE,\n  mae: mae,\n  MAE: MAE,\n  mape: mape,\n  MAPE: MAPE,\n  cosine: cosine\n};\nexport function get(identifier) {\n  if (typeof identifier === 'string' && identifier in metricsMap) {\n    return metricsMap[identifier];\n  } else if (typeof identifier !== 'string' && identifier != null) {\n    return identifier;\n  } else {\n    throw new ValueError(\"Unknown metric \".concat(identifier));\n  }\n}\n/**\n * Get the shortcut function name.\n *\n * If the fn name is a string,\n *   directly return the string name.\n * If the function is included in metricsMap or lossesMap,\n *   return key of the map.\n *   - If the function relative to multiple keys,\n *     return the first found key as the function name.\n *   - If the function exists in both lossesMap and metricsMap,\n *     search lossesMap first.\n * If the function is not included in metricsMap or lossesMap,\n *   return the function name.\n *\n * @param fn loss function, metric function, or short cut name.\n * @returns Loss or Metric name in string.\n */\n\nexport function getLossOrMetricName(fn) {\n  util.assert(fn !== null, \"Unknown LossOrMetricFn \".concat(fn));\n\n  if (typeof fn === 'string') {\n    return fn;\n  } else {\n    var fnName;\n\n    for (var _i = 0, _Object$keys = Object.keys(lossesMap); _i < _Object$keys.length; _i++) {\n      var key = _Object$keys[_i];\n\n      if (lossesMap[key] === fn) {\n        fnName = key;\n        break;\n      }\n    }\n\n    if (fnName !== undefined) {\n      return fnName;\n    }\n\n    for (var _i2 = 0, _Object$keys2 = Object.keys(metricsMap); _i2 < _Object$keys2.length; _i2++) {\n      var _key = _Object$keys2[_i2];\n\n      if (metricsMap[_key] === fn) {\n        fnName = _key;\n        break;\n      }\n    }\n\n    if (fnName !== undefined) {\n      return fnName;\n    }\n\n    return fn.name;\n  }\n}","function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/** Utility functions related to user-defined metadata. */\n// Maximum recommended serialized size for user-defined metadata.\n// Beyond this limit, a warning message will be printed during model loading and\n// saving.\nexport var MAX_USER_DEFINED_METADATA_SERIALIZED_LENGTH = 1 * 1024 * 1024;\n/**\n * Check validity of user-defined metadata.\n *\n * @param userDefinedMetadata\n * @param modelName Name of the model that the user-defined metadata belongs to.\n *   Used during construction of error messages.\n * @param checkSize Whether to check the size of the metadata is under\n *   recommended limit. Default: `false`. If `true`, will try stringify the\n *   JSON object and print a console warning if the serialzied size is above the\n *   limit.\n * @throws Error if `userDefinedMetadata` is not a plain JSON object.\n */\n\nexport function checkUserDefinedMetadata(userDefinedMetadata, modelName) {\n  var checkSize = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  if (userDefinedMetadata == null || typeof userDefinedMetadata !== 'object' || Object.getPrototypeOf(userDefinedMetadata) !== Object.prototype || !plainObjectCheck(userDefinedMetadata)) {\n    throw new Error('User-defined metadata is expected to be a JSON object, but is not.');\n  }\n\n  if (checkSize) {\n    var out = JSON.stringify(userDefinedMetadata);\n\n    if (out.length > MAX_USER_DEFINED_METADATA_SERIALIZED_LENGTH) {\n      console.warn(\"User-defined metadata of model \\\"\".concat(modelName, \"\\\" is too large in \") + \"size (length=\".concat(out.length, \" when serialized). It is not \") + \"recommended to store such large objects in user-defined metadata. \" + \"Please make sure its serialized length is <= \" + \"\".concat(MAX_USER_DEFINED_METADATA_SERIALIZED_LENGTH, \".\"));\n    }\n  }\n}\n/**\n * Check if an input is plain JSON object or any valid subfield of it.\n *\n * @param x The input to be checked.\n * @param assertObject Whether to assert `x` is a JSON object, i.e., reject\n *   cases of arrays and primitives.\n * @return Returns `true` if and only if `x` is a plain JSON object,\n *   a JSON-valid primitive including string, number, boolean and null,\n *   or an array of the said types.\n */\n// tslint:disable-next-line:no-any\n\nexport function plainObjectCheck(x) {\n  if (x === null) {\n    // Note: typeof `null` is 'object', and `null` is valid in JSON.\n    return true;\n  } else if (typeof x === 'object') {\n    if (Object.getPrototypeOf(x) === Object.prototype) {\n      // `x` is a JavaScript object and its prototype is Object.\n      var keys = Object.keys(x);\n\n      for (var _i = 0, _keys = keys; _i < _keys.length; _i++) {\n        var key = _keys[_i];\n\n        if (typeof key !== 'string') {\n          // JSON keys must be strings.\n          return false;\n        }\n\n        if (!plainObjectCheck(x[key])) {\n          // Recursive call.\n          return false;\n        }\n      }\n\n      return true;\n    } else {\n      // `x` is a JavaScript object but its prototype is not Object.\n      if (Array.isArray(x)) {\n        // `x` is a JavaScript array.\n        var _iterator = _createForOfIteratorHelper(x),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var item = _step.value;\n\n            if (!plainObjectCheck(item)) {\n              // Recursive call.\n              return false;\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        return true;\n      } else {\n        // `x` is a JavaScript object and its prototype is not Object,\n        // and it's not an Array. I.e., it's a complex object such as\n        // `Error` and `Date`.\n        return false;\n      }\n    }\n  } else {\n    // `x` is not a JavaScript object or `null`.\n    var xType = typeof x;\n    return xType === 'string' || xType === 'number' || xType === 'boolean';\n  }\n}","import _toConsumableArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\nimport { countParamsInWeights } from './variable_utils';\n/**\n * Print the summary of a LayersModel object.\n *\n * @param model tf.LayersModel instance.\n * @param lineLength Total length of printed lines. Set this to adapt to the\n *   display to different terminal or console sizes.\n * @param positions Relative or absolute positions of log elements in each\n *   line. Each number corresponds to right-most (i.e., ending) position of a\n *   column.\n *   If not provided, defaults to `[0.45, 0.85, 1]` for sequential-like\n *   models and `[0.33, 0.55, 0.67, 1]` for non-sequential like models.\n * @param printFn Print function to use.\n *   It will be called on each line of the summary. You can provide a custom\n *   function in order to capture the string summary. Defaults to `console.log`.\n */\n\nexport function printSummary(model, lineLength, positions) {\n  var printFn = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : console.log;\n  var sequentialLike = isModelSequentialLike(model); // Header names for different log elements.\n\n  var toDisplay = ['Layer (type)', 'Output shape', 'Param #'];\n\n  if (sequentialLike) {\n    lineLength = lineLength || 65;\n    positions = positions || [0.45, 0.85, 1];\n  } else {\n    lineLength = lineLength || 98;\n    positions = positions || [0.33, 0.55, 0.67, 1]; // Header names for different log elements.\n  }\n\n  if (positions[positions.length - 1] <= 1) {\n    // `positions` is relative. Convert it to absolute positioning.\n    positions = positions.map(function (p) {\n      return Math.floor(lineLength * p);\n    });\n  }\n\n  var relevantNodes;\n\n  if (!sequentialLike) {\n    toDisplay.push('Receives inputs');\n    relevantNodes = [];\n\n    for (var depth in model.nodesByDepth) {\n      var _relevantNodes;\n\n      (_relevantNodes = relevantNodes).push.apply(_relevantNodes, _toConsumableArray(model.nodesByDepth[depth]));\n    }\n  }\n\n  printFn('_'.repeat(lineLength));\n  printRow(toDisplay, positions, printFn);\n  printFn('='.repeat(lineLength));\n  var layers = model.layers;\n\n  for (var i = 0; i < layers.length; ++i) {\n    if (sequentialLike) {\n      printLayerSummary(layers[i], positions, printFn);\n    } else {\n      printLayerSummaryWithConnections(layers[i], positions, relevantNodes, printFn);\n    }\n\n    printFn((i === layers.length - 1 ? '=' : '_').repeat(lineLength));\n  } // tslint:disable-next-line:no-any\n\n\n  model.checkTrainableWeightsConsistency();\n  var trainableCount = countTrainableParams(model);\n  var nonTrainableCount = countParamsInWeights(model.nonTrainableWeights);\n  printFn(\"Total params: \".concat(trainableCount + nonTrainableCount));\n  printFn(\"Trainable params: \".concat(trainableCount));\n  printFn(\"Non-trainable params: \".concat(nonTrainableCount));\n  printFn('_'.repeat(lineLength));\n}\n\nfunction countTrainableParams(model) {\n  var trainableCount; // tslint:disable:no-any\n\n  if (model.collectedTrainableWeights != null) {\n    trainableCount = countParamsInWeights(model.collectedTrainableWeights);\n  } else {\n    trainableCount = countParamsInWeights(model.trainableWeights);\n  } // tslint:enable:no-any\n\n\n  return trainableCount;\n}\n\nfunction isModelSequentialLike(model) {\n  var sequentialLike = true;\n  var nodesByDepth = [];\n  var nodes = [];\n\n  for (var depth in model.nodesByDepth) {\n    nodesByDepth.push(model.nodesByDepth[depth]);\n  }\n\n  for (var _i = 0, _nodesByDepth = nodesByDepth; _i < _nodesByDepth.length; _i++) {\n    var depthNodes = _nodesByDepth[_i];\n\n    if (depthNodes.length > 1 || depthNodes.length === 1 && depthNodes[0].inboundLayers.length > 1) {\n      sequentialLike = false;\n      break;\n    }\n\n    nodes.push.apply(nodes, _toConsumableArray(depthNodes));\n  }\n\n  if (sequentialLike) {\n    // Search for shared layers.\n    var _iterator = _createForOfIteratorHelper(model.layers),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var layer = _step.value;\n        var flag = false;\n\n        var _iterator2 = _createForOfIteratorHelper(layer.inboundNodes),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var node = _step2.value;\n\n            if (nodes.indexOf(node) !== -1) {\n              if (flag) {\n                sequentialLike = false;\n                break;\n              } else {\n                flag = true;\n              }\n            }\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n\n        if (!sequentialLike) {\n          break;\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n\n  return sequentialLike;\n}\n\nfunction printRow(fields, positions) {\n  var printFn = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : console.log;\n  var line = '';\n\n  for (var i = 0; i < fields.length; ++i) {\n    if (i > 0) {\n      line = line.slice(0, line.length - 1) + ' ';\n    }\n\n    line += fields[i];\n    line = line.slice(0, positions[i]);\n    line += ' '.repeat(positions[i] - line.length);\n  }\n\n  printFn(line);\n}\n/**\n * Prints a summary for a single Layer, without connectivity information.\n *\n * @param layer: Layer instance to print.\n */\n\n\nfunction printLayerSummary(layer, positions, // tslint:disable-next-line:no-any\nprintFn) {\n  var outputShape;\n\n  try {\n    outputShape = JSON.stringify(layer.outputShape);\n  } catch (err) {\n    outputShape = 'multiple';\n  }\n\n  var name = layer.name;\n  var className = layer.getClassName();\n  var fields = [\"\".concat(name, \" (\").concat(className, \")\"), outputShape, layer.countParams().toString()];\n  printRow(fields, positions, printFn);\n}\n/**\n * Prints a summary for a single Layer, with connectivity information.\n */\n\n\nfunction printLayerSummaryWithConnections(layer, positions, relevantNodes, // tslint:disable-next-line:no-any\nprintFn) {\n  var outputShape;\n\n  try {\n    outputShape = JSON.stringify(layer.outputShape);\n  } catch (err) {\n    outputShape = 'multiple';\n  }\n\n  var connections = [];\n\n  var _iterator3 = _createForOfIteratorHelper(layer.inboundNodes),\n      _step3;\n\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var node = _step3.value;\n\n      if (relevantNodes != null && relevantNodes.length > 0 && relevantNodes.indexOf(node) === -1) {\n        continue;\n      }\n\n      for (var _i2 = 0; _i2 < node.inboundLayers.length; ++_i2) {\n        var inboundLayer = node.inboundLayers[_i2].name;\n        var inboundLayerIndex = node.nodeIndices[_i2];\n        var inboundTensorIndex = node.tensorIndices[_i2];\n        connections.push(\"\".concat(inboundLayer, \"[\").concat(inboundLayerIndex, \"][\").concat(inboundTensorIndex, \"]\"));\n      }\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n\n  var name = layer.name;\n  var className = layer.getClassName();\n  var firstConnection = connections.length === 0 ? '' : connections[0];\n  var fields = [\"\".concat(name, \" (\").concat(className, \")\"), outputShape, layer.countParams().toString(), firstConnection];\n  printRow(fields, positions, printFn);\n\n  for (var i = 1; i < connections.length; ++i) {\n    printRow(['', '', '', connections[i]], positions, printFn);\n  }\n}","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\nimport * as generic_utils from '../utils/generic_utils'; // tslint:enable\n\n/**\n * Test whether a value in an array is the name of a LayersModel or Layer.\n * @param key The key name that the value is found under. Note that the key\n *   may not be at the level immediately above the value, if the value is in a\n *   nested array.\n * @param index Index of the value in the Array that it is found in.\n * @param value The value object.\n * @returns A boolean indicating whether value is a name.\n */\n\nfunction isArrayItemInputOrOutputName(key, index, value) {\n  return (key === 'inboundNodes' || key === 'outputLayers' || key === 'inputLayers') && index === 0 && typeof value === 'string';\n}\n/**\n * Convert a Pythonic config object to TypeScript config object.\n * @param pythonicConfig The config object to convert.\n * @param key Optional key name of the object being converted.\n * @returns Result of the conversion.\n */\n\n\nexport function convertPythonicToTs(pythonicConfig, key) {\n  if (pythonicConfig === null) {\n    return null;\n  } else if (typeof pythonicConfig === 'string') {\n    return generic_utils.toCamelCase(pythonicConfig);\n  } else if (typeof pythonicConfig === 'number' || typeof pythonicConfig === 'boolean') {\n    return pythonicConfig;\n  } else if (pythonicConfig instanceof Array) {\n    var tsArray = [];\n    var arrayLength = pythonicConfig.length;\n\n    for (var i = 0; i < arrayLength; ++i) {\n      var item = pythonicConfig[i];\n\n      if (isArrayItemInputOrOutputName(key, i, item)) {\n        tsArray.push(item);\n      } else {\n        tsArray.push(convertPythonicToTs(item, key));\n      }\n    }\n\n    return tsArray;\n  } else {\n    var tsDict = {};\n\n    for (var _i = 0, _Object$keys = Object.keys(pythonicConfig); _i < _Object$keys.length; _i++) {\n      var pythonicKey = _Object$keys[_i];\n      var pythonicValue = pythonicConfig[pythonicKey];\n\n      if (pythonicKey === 'name' && typeof pythonicValue === 'string') {\n        // Special case the 'name' key with a string value. Name values, such as\n        // the names of LayersModel and Layer instances, should not undergo the\n        // camel-case conversion.\n        tsDict[pythonicKey] = pythonicValue;\n      } else {\n        var tsKey = generic_utils.toCamelCase(pythonicKey);\n        tsDict[tsKey] = convertPythonicToTs(pythonicValue, tsKey);\n      }\n    }\n\n    return tsDict;\n  }\n}\n/**\n * Convert a TypeScript config object to Python config object.\n * @param tsConfig The config object to convert.\n * @param key Optional key name of the object being converted.\n * @returns Result of the conversion.\n */\n\nexport function convertTsToPythonic(tsConfig, key) {\n  if (tsConfig === null || tsConfig === undefined) {\n    return null;\n  } else if (typeof tsConfig === 'string') {\n    return generic_utils.toSnakeCase(tsConfig);\n  } else if (typeof tsConfig === 'number' || typeof tsConfig === 'boolean') {\n    return tsConfig;\n  } else if (tsConfig instanceof Array) {\n    var pyArray = [];\n    var arrayLength = tsConfig.length;\n\n    for (var i = 0; i < arrayLength; ++i) {\n      var item = tsConfig[i];\n\n      if (isArrayItemInputOrOutputName(key, i, item)) {\n        pyArray.push(item);\n      } else {\n        pyArray.push(convertTsToPythonic(item, key));\n      }\n    }\n\n    return pyArray;\n  } else {\n    var pyDict = {};\n\n    for (var _i2 = 0, _Object$keys2 = Object.keys(tsConfig); _i2 < _Object$keys2.length; _i2++) {\n      var tsKey = _Object$keys2[_i2];\n      var tsValue = tsConfig[tsKey];\n      var pyKey = generic_utils.toSnakeCase(tsKey);\n\n      if ((tsKey === 'name' || tsKey === 'className') && typeof tsValue === 'string') {\n        // Special case the 'name' key with a string value. Name values, such as\n        // the names of LayersModel and Layer instances, should not undergo the\n        // snake-case conversion.\n        pyDict[pyKey] = tsValue;\n      } else {\n        pyDict[pyKey] = convertTsToPythonic(tsValue, tsKey);\n      }\n    }\n\n    return pyDict;\n  }\n}","/** @license See the LICENSE file. */\n// This code is auto-generated, do not modify this file!\nvar version = '3.4.0';\nexport { version };","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/**\n * Executor: Evaluates SymbolicTensor based on feeds.\n */\nimport { cast, dispose, memory, util } from '@tensorflow/tfjs-core';\nimport { ValueError } from '../errors';\nimport { toList } from '../utils/generic_utils';\nimport { InputLayer } from './input_layer';\nimport { SymbolicTensor } from './topology';\n/**\n * Helper function to check the dtype and shape compatibility of a feed value.\n */\n\nfunction assertFeedCompatibility(key, val) {\n  // Check dtype compatibility.\n  if (key.dtype == null || key.dtype === val.dtype) {\n    //  a.  If types match, return val tensor as is.\n    return val;\n  }\n\n  try {\n    //  b. Attempt to convert to expected type.\n    return cast(val, key.dtype);\n  } catch (err) {\n    //  c. If conversion fails, return helpful error.\n    throw new ValueError(\"The dtype of the feed (\".concat(val.dtype, \") can not be cast to the dtype \") + \"of the key '\".concat(key.name, \"' (\").concat(key.dtype, \").\"));\n  }\n}\n/**\n * FeedDict: A mapping from unique SymbolicTensors to feed values for them.\n * A feed value is a concrete value represented as an `Tensor`.\n */\n\n\nexport var FeedDict = /*#__PURE__*/function () {\n  /**\n   * Constructor, optionally does copy-construction.\n   * @param feeds An Array of `Feed`s, or another `FeedDict`, in which case\n   *   copy-construction will be performed.\n   */\n  function FeedDict(feeds) {\n    _classCallCheck(this, FeedDict);\n\n    this.id2Value = {};\n    this.id2Mask = {};\n    this.name2Id = {};\n\n    if (feeds instanceof FeedDict) {\n      for (var id in feeds.id2Value) {\n        this.id2Value[id] = feeds.id2Value[id];\n\n        if (id in feeds.id2Mask) {\n          this.id2Mask[id] = feeds.id2Mask[id];\n        }\n      }\n    } else {\n      if (feeds == null) {\n        return;\n      }\n\n      var _iterator = _createForOfIteratorHelper(feeds),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var feed = _step.value;\n          this.add(feed.key, feed.value);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }\n  /**\n   * Add a key-value pair to the FeedDict.\n   *\n   * @param key The key of the feed.\n   * @param value The value of the tensor feed.\n   * @param mask The value of the mask feed (optional).\n   * @returns This `FeedDict`.\n   * @throws ValueError: If the key `SymbolicTensor` already exists in the\n   *   `FeedDict`.\n   */\n\n\n  _createClass(FeedDict, [{\n    key: \"add\",\n    value: function add(key, value, mask) {\n      if (this.id2Value[key.id] == null) {\n        this.id2Value[key.id] = assertFeedCompatibility(key, value);\n        this.name2Id[key.name] = key.id;\n\n        if (mask != null) {\n          this.id2Mask[key.id] = mask;\n        }\n      } else {\n        throw new ValueError(\"Duplicate key: name=\".concat(key.name, \", id=\").concat(key.id));\n      }\n\n      return this;\n    }\n    /**\n     * Add a Feed to the FeedDict.\n     * @param feed The new `Feed` to add.\n     * @returns This `FeedDict`.\n     */\n\n  }, {\n    key: \"addFeed\",\n    value: function addFeed(feed) {\n      this.add(feed.key, feed.value);\n    }\n    /**\n     * Probe whether a key already exists in the FeedDict.\n     * @param key\n     */\n\n  }, {\n    key: \"hasKey\",\n    value: function hasKey(key) {\n      return this.id2Value[key.id] != null;\n    }\n    /**\n     * Get all the SymbolicTensor available in this FeedDict.\n     */\n\n  }, {\n    key: \"names\",\n    value: function names() {\n      return Object.keys(this.name2Id);\n    }\n    /**\n     * Get the feed value for given key.\n     * @param key The SymbolicTensor, or its name (as a string), of which the\n     *     value is sought.\n     * @returns If `key` exists, the corresponding feed value.\n     * @throws ValueError: If `key` does not exist in this `FeedDict`.\n     */\n\n  }, {\n    key: \"getValue\",\n    value: function getValue(key) {\n      if (key instanceof SymbolicTensor) {\n        if (this.id2Value[key.id] == null) {\n          throw new ValueError(\"Nonexistent key: \".concat(key.name));\n        } else {\n          return this.id2Value[key.id];\n        }\n      } else {\n        var id = this.name2Id[key];\n\n        if (id == null) {\n          throw new ValueError(\"Feed dict has no SymbolicTensor name: \".concat(key));\n        }\n\n        return this.id2Value[id];\n      }\n    }\n    /**\n     * Get the feed mask for given key.\n     * @param key The SymbolicTensor, or its name (as a string), of which the\n     *     value is sought.\n     * @returns If `key` exists, the corresponding feed mask.\n     * @throws ValueError: If `key` does not exist in this `FeedDict`.\n     */\n\n  }, {\n    key: \"getMask\",\n    value: function getMask(key) {\n      if (key instanceof SymbolicTensor) {\n        if (this.id2Value[key.id] == null) {\n          throw new ValueError(\"Nonexistent key: \".concat(key.name));\n        } else {\n          return this.id2Mask[key.id];\n        }\n      } else {\n        var id = this.name2Id[key];\n\n        if (id == null) {\n          throw new ValueError(\"Feed dict has no SymbolicTensor name: \".concat(key));\n        }\n\n        return this.id2Mask[id];\n      }\n    }\n    /** Dispose all mask Tensors held by this object. */\n\n  }, {\n    key: \"disposeMasks\",\n    value: function disposeMasks() {\n      if (this.id2Mask != null) {\n        dispose(this.id2Mask);\n      }\n    }\n  }]);\n\n  return FeedDict;\n}(); // Cache for topologically sorted SymbolicTensors for given execution\n// targets (i.e., fetches).\n\nvar cachedSorted = {}; // Cache for recipient count maps for given execution targets (i.e., fetches).\n\nvar cachedRecipientCounts = {};\n/**\n * Execute a SymbolicTensor by using concrete feed values.\n *\n * A `SymbolicTensor` object is a node in a computation graph of TF.js\n * Layers. The object is backed by a source layer and input\n * `SymbolicTensor`s to the source layer. This method evaluates\n * the `call()` method of the source layer, using concrete values of the\n * inputs obtained from either\n * * `feedDict`, if the input key exists in `feedDict`, or else,\n * * a recursive call to `execute()` itself.\n *\n * @param x: The `SymbolicTensor` to execute.\n * @param feedDict: The feed values, as base condition of the recursion.\n *   execution.\n * @param kwargs: Optional keyword arguments.\n * @param probe: A probe object (of interface `ExecutionProbe`) used for\n *   testing memory footprint of `execute` calls.\n * @returns Result of the execution.\n * @throws ValueError: If any `SymbolicTensor`s from `InputLayer`s\n *   encountered during the execution lacks a feed value in `feedDict`.\n */\n\nexport function execute(fetches, feedDict, kwargs, probe) {\n  var training = kwargs == null ? false : kwargs['training'];\n  var arrayFetches = Array.isArray(fetches);\n  var fetchArray = arrayFetches ? fetches : [fetches];\n  var outputNames = fetchArray.map(function (t) {\n    return t.name;\n  });\n  var finalOutputs = [];\n  var feedNames = feedDict.names();\n\n  var _iterator2 = _createForOfIteratorHelper(outputNames),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var outputName = _step2.value;\n\n      if (feedNames.indexOf(outputName) !== -1) {\n        finalOutputs.push(feedDict.getValue(outputName));\n      } else {\n        finalOutputs.push(null);\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  if (probe != null) {\n    // For optional probing of memory footprint during execution.\n    probe.maxNumTensors = -Infinity;\n    probe.minNumTensors = Infinity;\n  } // Check cache.\n\n\n  var fetchAndFeedKey = outputNames.join(',') + '|' + feedDict.names().join(',');\n  var sorted;\n  var recipientCounts;\n\n  if (cachedSorted[fetchAndFeedKey] == null) {\n    // Cache doesn't contain the desired combination of fetches. Compute\n    // topological sort for the combination for the first time.\n    var out = getTopologicalSortAndRecipientCounts(fetchArray, feedDict);\n    sorted = out.sorted;\n    recipientCounts = out.recipientCounts; // Store results in cache for future use.\n\n    cachedSorted[fetchAndFeedKey] = sorted;\n    cachedRecipientCounts[fetchAndFeedKey] = recipientCounts;\n  }\n\n  sorted = cachedSorted[fetchAndFeedKey];\n  recipientCounts = {};\n\n  if (!training) {\n    Object.assign(recipientCounts, cachedRecipientCounts[fetchAndFeedKey]);\n  }\n\n  var internalFeedDict = new FeedDict(feedDict); // Start iterative execution on the topologically-sorted SymbolicTensors.\n\n  for (var i = 0; i < sorted.length; ++i) {\n    if (probe != null) {\n      // For optional probing of memory usage during execution.\n      var numTensors = memory().numTensors;\n\n      if (numTensors > probe.maxNumTensors) {\n        probe.maxNumTensors = numTensors;\n      }\n\n      if (numTensors < probe.minNumTensors) {\n        probe.minNumTensors = numTensors;\n      }\n    }\n\n    var symbolic = sorted[i];\n    var srcLayer = symbolic.sourceLayer;\n\n    if (srcLayer instanceof InputLayer) {\n      continue;\n    }\n\n    var inputValues = [];\n    var inputMasks = [];\n    var tensorsToDispose = [];\n    var maskExists = false;\n\n    var _iterator3 = _createForOfIteratorHelper(symbolic.inputs),\n        _step3;\n\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var input = _step3.value;\n        var value = internalFeedDict.getValue(input);\n        var mask = internalFeedDict.getMask(input);\n        inputValues.push(value);\n        inputMasks.push(mask);\n\n        if (mask != null) {\n          maskExists = true;\n        }\n\n        if (!training) {\n          recipientCounts[input.name]--;\n\n          if (recipientCounts[input.name] === 0 && !feedDict.hasKey(input) && outputNames.indexOf(input.name) === -1 && !value.isDisposed && input.sourceLayer.stateful !== true) {\n            tensorsToDispose.push(value);\n          }\n        }\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n\n    if (maskExists) {\n      kwargs = kwargs || {};\n      kwargs['mask'] = inputMasks[0];\n    }\n\n    var outputTensors = toList(srcLayer.apply(inputValues, kwargs));\n    var outputMask = null;\n\n    if (srcLayer.supportsMasking) {\n      outputMask = srcLayer.computeMask(inputValues, inputMasks);\n    }\n\n    var layerOutputs = getNodeOutputs(symbolic);\n    var outputSymbolicTensors = Array.isArray(layerOutputs) ? layerOutputs : [layerOutputs];\n\n    for (var _i = 0; _i < outputSymbolicTensors.length; ++_i) {\n      if (!internalFeedDict.hasKey(outputSymbolicTensors[_i])) {\n        internalFeedDict.add(outputSymbolicTensors[_i], outputTensors[_i], Array.isArray(outputMask) ? outputMask[0] : outputMask);\n      }\n\n      var index = outputNames.indexOf(outputSymbolicTensors[_i].name);\n\n      if (index !== -1) {\n        finalOutputs[index] = outputTensors[_i];\n      }\n    }\n\n    if (!training) {\n      // Clean up Tensors that are no longer needed.\n      dispose(tensorsToDispose);\n    }\n  } // NOTE(cais): Unlike intermediate tensors, we don't discard mask\n  // tensors as we go, because these tensors are sometimes passed over a\n  // series of mutliple layers, i.e., not obeying the immediate input\n  // relations in the graph. If this becomes a memory-usage concern,\n  // we can improve this in the future.\n\n\n  internalFeedDict.disposeMasks();\n  return arrayFetches ? finalOutputs : finalOutputs[0];\n}\n/**\n * Sort the `SymbolicTensor`s topologically, for an array of fetches.\n *\n * This function calls getTopologicalSortAndRecipientCountsForOneFetch and\n * merges their results.\n *\n * @param fetch The array of fetches requested. Must be a non-empty array.\n * @param feedDict The dictionary of fed values.\n * @returns sorted: Topologically-sorted array of SymbolicTensors.\n *   recipientCounts: Recipient counts for all SymbolicTensors in `sorted`.\n */\n\nfunction getTopologicalSortAndRecipientCounts(fetches, feedDict) {\n  util.assert(fetches != null && fetches.length > 0, function () {\n    return \"Expected at least one fetch, got none\";\n  });\n  var finalSorted = [];\n  var finalRecipientMap = {};\n\n  if (fetches.length === 1) {\n    // Special-casing 1 fetch for efficiency.\n    var out = getTopologicalSortAndRecipientCountsForOneFetch(fetches[0], feedDict);\n    finalSorted = out.sorted;\n    finalRecipientMap = out.recipientMap;\n  } else {\n    var visited = new Set();\n\n    var _iterator4 = _createForOfIteratorHelper(fetches),\n        _step4;\n\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var fetch = _step4.value;\n\n        var _getTopologicalSortAn = getTopologicalSortAndRecipientCountsForOneFetch(fetch, feedDict),\n            sorted = _getTopologicalSortAn.sorted,\n            recipientMap = _getTopologicalSortAn.recipientMap; // Merge sorted SymbolicTensor Arrays.\n\n\n        var _iterator5 = _createForOfIteratorHelper(sorted),\n            _step5;\n\n        try {\n          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n            var symbolicTensor = _step5.value;\n\n            if (!visited.has(symbolicTensor.name)) {\n              finalSorted.push(symbolicTensor);\n              visited.add(symbolicTensor.name);\n            }\n          } // Merge recipient maps.\n\n        } catch (err) {\n          _iterator5.e(err);\n        } finally {\n          _iterator5.f();\n        }\n\n        var _loop = function _loop(name) {\n          if (finalRecipientMap[name] == null) {\n            finalRecipientMap[name] = new Set();\n          }\n\n          recipientMap[name].forEach(function (recipient) {\n            return finalRecipientMap[name].add(recipient);\n          });\n        };\n\n        for (var name in recipientMap) {\n          _loop(name);\n        }\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n  }\n\n  return {\n    sorted: finalSorted,\n    recipientCounts: recipientMap2Counts(finalRecipientMap)\n  };\n}\n\nfunction recipientMap2Counts(recipientMap) {\n  var recipientCounts = {};\n\n  for (var name in recipientMap) {\n    recipientCounts[name] = recipientMap[name].size;\n  }\n\n  return recipientCounts;\n}\n/**\n * Sort the `SymbolicTensor`s topologically, for a single fetch.\n *\n * This helper function processes the upstream SymbolicTensors of a single\n * fetch.\n *\n * @param fetch The single fetch requested.\n * @param feedDict The dictionary of fed values.\n * @returns sorted: Topologically-sorted array of SymbolicTensors.\n *   recipientMap: Recipient names for all SymbolicTensors in `sorted`.\n */\n\n\nexport function getTopologicalSortAndRecipientCountsForOneFetch(fetch, feedDict) {\n  var visited = new Set();\n  var sorted = [];\n  var recipientMap = {}; // Put keys of the feedDict into visited first, so they don't have to be\n  // walked. This is needed in case where there are feeds for intermediate\n  // SymbolicTensors of the graph.\n\n  var _iterator6 = _createForOfIteratorHelper(feedDict.names()),\n      _step6;\n\n  try {\n    for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n      var key = _step6.value;\n      visited.add(key);\n    }\n  } catch (err) {\n    _iterator6.e(err);\n  } finally {\n    _iterator6.f();\n  }\n\n  var stack = [];\n  var marks = []; // Initial population of stack and marks.\n\n  stack.push(fetch);\n\n  while (stack.length > 0) {\n    var top = stack[stack.length - 1];\n\n    if (visited.has(top.name)) {\n      stack.pop();\n      continue;\n    }\n\n    var topIsMarked = marks[marks.length - 1] === stack.length - 1;\n\n    if (top.inputs.length === 0 || topIsMarked) {\n      // Input SymbolicTensor or all children have been visited.\n      stack.pop();\n      sorted.push(top);\n      visited.add(top.name);\n\n      if (topIsMarked) {\n        marks.pop();\n      }\n    } else {\n      // A non-input SymbolicTensor whose upstream SymbolicTensors haven't\n      // been visited yet. Push them onto the stack.\n      marks.push(stack.length - 1);\n\n      var _iterator7 = _createForOfIteratorHelper(top.inputs),\n          _step7;\n\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var input = _step7.value;\n\n          // Increment the recipient count. Note that this needs to happen\n          // regardless of whether the SymbolicTensor has been visited before.\n          if (recipientMap[input.name] == null) {\n            recipientMap[input.name] = new Set();\n          }\n\n          recipientMap[input.name].add(top.name);\n\n          if (visited.has(input.name)) {\n            continue; // Avoid repeated visits to the same SymbolicTensor.\n          }\n\n          stack.push(input);\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n    }\n  }\n\n  return {\n    sorted: sorted,\n    recipientMap: recipientMap\n  };\n}\n/**\n * Get the symbolic output tensors of the node to which a given fetch belongs.\n * @param fetch The fetched symbolic tensor.\n * @returns The Array of symbolic tensors output by the node to which `fetch`\n *   belongs.\n */\n\nfunction getNodeOutputs(fetch) {\n  var layerOutputs;\n\n  if (fetch.sourceLayer.inboundNodes.length === 1) {\n    layerOutputs = fetch.sourceLayer.output;\n  } else {\n    var nodeIndex = null;\n\n    for (var i = 0; i < fetch.sourceLayer.inboundNodes.length; ++i) {\n      var _iterator8 = _createForOfIteratorHelper(fetch.sourceLayer.inboundNodes[i].outputTensors),\n          _step8;\n\n      try {\n        for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n          var outputTensor = _step8.value;\n\n          if (outputTensor.id === fetch.id) {\n            nodeIndex = i;\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator8.e(err);\n      } finally {\n        _iterator8.f();\n      }\n    }\n\n    layerOutputs = fetch.sourceLayer.getOutputAt(nodeIndex);\n  }\n\n  return layerOutputs;\n}","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/* Original source: keras/engine/topology.py */\nimport { tidy } from '@tensorflow/tfjs-core';\nimport { getUid } from '../backend/state';\nimport { NotImplementedError, RuntimeError, ValueError } from '../errors';\nimport { deserialize as deserializeLayer } from '../layers/serialization';\nimport * as generic_utils from '../utils/generic_utils';\nimport { convertTsToPythonic } from '../utils/serialization_utils';\nimport * as types_utils from '../utils/types_utils';\nimport { batchSetValue } from '../variables';\nimport { version as layersVersion } from '../version';\nimport { execute, FeedDict } from './executor';\nimport { InputLayer } from './input_layer';\nimport { Layer, Node } from './topology';\n/**\n * A Container is a directed acyclic graph of layers.\n *\n * It is the topological form of a \"model\". A LayersModel\n * is simply a Container with added training routines.\n *\n */\n\nexport var Container = /*#__PURE__*/function (_Layer) {\n  _inherits(Container, _Layer);\n\n  var _super = _createSuper(Container);\n\n  function Container(args) {\n    var _this;\n\n    _classCallCheck(this, Container);\n\n    // No args passed to super's constructor.\n    _this = _super.call(this, {});\n    _this.containerNodes = new Set();\n    _this.name = args.name;\n\n    if (_this.name == null) {\n      var prefix = _this.getClassName().toLowerCase();\n\n      _this.name = getUid(prefix);\n    }\n\n    _this.supportsMasking = false;\n    _this.trainable_ = true; // TODO(michaelterry): Initialize perInputLosses/Updates here.\n    // Container-specific properties.\n\n    if (Array.isArray(args.inputs)) {\n      _this.inputs = args.inputs.slice();\n    } else {\n      _this.inputs = [args.inputs];\n    }\n\n    if (Array.isArray(args.outputs)) {\n      _this.outputs = args.outputs.slice();\n    } else {\n      _this.outputs = [args.outputs];\n    } // Check for redundancy in inputs.\n\n\n    if (generic_utils.unique(_this.inputs).length !== _this.inputs.length) {\n      throw new ValueError('The list of inputs passed to the model is ' + 'redundant. All inputs should only appear once. Found: ' + \"\".concat(_this.inputs.map(function (x) {\n        return x.name;\n      })));\n    } // Check for redundancy in outputs.\n\n\n    if (generic_utils.unique(_this.outputs).length !== _this.outputs.length) {\n      console.warn('The list of outputs passed to the model is redundant. ' + 'All outputs should only appear once. Found: ' + \"\".concat(_this.outputs.map(function (x) {\n        return x.name;\n      })));\n    }\n    /*\n      List of initial layers (1 to 1 mapping with this.inputs, hence the same\n      layer might appear twice)\n    */\n\n\n    _this.inputLayers = [];\n    _this.inputLayersNodeIndices = [];\n    _this.inputLayersTensorIndices = [];\n    /*\n      List of layers (1 to 1 mapping with this.outputs, hence the same layer\n      might appear twice)\n    */\n\n    _this.outputLayers = [];\n    _this.outputLayersNodeIndices = [];\n    _this.outputLayersTensorIndices = [];\n    /*\n      All layers in order of horizontal graph traversal. Entries are unique.\n      Includes input and output layers.\n    */\n\n    _this.layers = [];\n    /*\n      References to container layers that were constructed internally. We need\n      these to properly dispose of tensors from nested containers.\n    */\n\n    _this.internalContainerRefs = []; // TODO(michaelterry): Determine if caching still needed with eager\n    // backend.\n\n    /*\n      This is for performance optimization when calling the Container on new\n      inputs. Every time the Container is called on a set on input tensors,\n      we compute the output tensors, output masks and output shapes in one pass,\n      then cache them here. When one of these outputs is queried later,\n      we retrieve it from there instead of recomputing it.\n    */\n    // this.outputTensorCache = {};\n    // this.outputShapeCache = {};\n    // Build this.outputLayers:\n\n    var _iterator = _createForOfIteratorHelper(_this.outputs),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var x = _step.value;\n        var _layer2 = x.sourceLayer;\n        var nodeIndex = x.nodeIndex;\n        var tensorIndex = x.tensorIndex;\n\n        _this.outputLayers.push(_layer2);\n\n        _this.outputLayersNodeIndices.push(nodeIndex);\n\n        _this.outputLayersTensorIndices.push(tensorIndex);\n      } // TODO(michaelterry): Add output mask cache code.\n      // Build this.inputLayers:\n\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    var _iterator2 = _createForOfIteratorHelper(_this.inputs),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var _x = _step2.value;\n        var _layer3 = _x.sourceLayer;\n        var _nodeIndex2 = _x.nodeIndex;\n        var _tensorIndex2 = _x.tensorIndex;\n        /*\n          It's supposed to be an input layer, so only one node\n          and one tensor output.\n        */\n\n        generic_utils.assert(_nodeIndex2 === 0, 'input layer has >1 nodes');\n        generic_utils.assert(_tensorIndex2 === 0, 'input layer has >1 tensors');\n\n        _this.inputLayers.push(_layer3);\n\n        _this.inputLayersNodeIndices.push(_nodeIndex2);\n\n        _this.inputLayersTensorIndices.push(_tensorIndex2);\n      } // Build this.inputNames and this.outputNames.\n\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n\n    _this.inputNames = [];\n    _this.outputNames = [];\n    _this.feedInputShapes = [];\n    _this.feedInputNames = [];\n    _this.feedOutputNames = [];\n\n    for (var i = 0; i < _this.inputLayers.length; i++) {\n      var layer = _this.inputLayers[i]; // Check that layer is an InputLayer.\n\n      if (!(layer instanceof InputLayer)) {\n        throw new TypeError('Input layers to a LayersModel must be InputLayer objects. ' + \"Received inputs: \".concat(args.inputs, \". \") + \"Input \".concat(i, \" (0-based) originates \") + \"from layer type \".concat(layer.getClassName(), \".\"));\n      }\n\n      _this.inputNames.push(layer.name);\n\n      _this.feedInputShapes.push(layer.batchInputShape);\n\n      _this.feedInputNames.push(layer.name);\n    }\n\n    var _iterator3 = _createForOfIteratorHelper(_this.outputLayers),\n        _step3;\n\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var _layer4 = _step3.value;\n\n        _this.outputNames.push(_layer4.name);\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n\n    _this.internalInputShapes = _this.inputs.map(function (x) {\n      return x.shape;\n    });\n    _this.internalOutputShapes = _this.outputs.map(function (x) {\n      return x.shape;\n    });\n    /*\n      Container_nodes: set of nodes included in the graph (not all nodes\n      included in the layers are relevant to the current graph).\n    */\n    // ids of all nodes relevant to the Container:\n\n    var nodesDepths = {}; // To recover nodes from their ID.\n\n    var nodeIDToNode = {};\n    var layersDepths = {}; // To layers from their ID.\n\n    var layerIDToLayer = {};\n    var layerIndices = {};\n    var nodesInDecreasingDepth = [];\n    /**\n     * Builds a map of the graph of layers.\n     *\n     * This recursively updates the map `layerIndices`,\n     * the list `nodesInDecreasingDepth` and the set `containerNodes`.\n     *\n     * @param tensor Some tensor in a graph.\n     * @param finishedNodes Set of nodes whose subgraphs have been traversed\n     *         completely. Useful to prevent duplicated work.\n     * @param nodesInProgress Set of nodes that are currently active on the\n     *         recursion stack. Useful to detect cycles.\n     * @param layer Layer from which `tensor` comes from. If not provided,\n     *   will be obtained from tensor.sourceLayer.\n     * @param nodeIndex Node index from which `tensor` comes from.\n     * @param tensorIndex TensorIndex from which `tensor` comes from.\n     *\n     * @exception RuntimeError if a cycle is detected.\n     */\n\n    var buildMapOfGraph = function buildMapOfGraph(tensor, finishedNodes, nodesInProgress, layer, nodeIndex, tensorIndex) {\n      if (layer == null || nodeIndex == null || tensorIndex == null) {\n        layer = tensor.sourceLayer;\n        nodeIndex = tensor.nodeIndex;\n        tensorIndex = tensor.tensorIndex;\n      }\n\n      var node = layer.inboundNodes[nodeIndex]; // Prevent cycles.\n\n      if (nodesInProgress.indexOf(node) !== -1) {\n        throw new RuntimeError(\"The tensor \".concat(tensor.name, \" at layer \\\"\").concat(layer.name, \"\\\" \") + 'is part of a cycle.');\n      } // Don't repeat work for shared subgraphs\n\n\n      if (finishedNodes.indexOf(node) !== -1) {\n        return;\n      } // Update containerNodes.\n\n\n      _this.containerNodes.add(Container.nodeKey(layer, nodeIndex)); // Store the traversal order for layer sorting.\n\n\n      if (!(layer.id in layerIndices)) {\n        layerIndices[layer.id] = Object.keys(layerIndices).length;\n      }\n\n      if (nodesInProgress.indexOf(node) === -1) {\n        nodesInProgress.push(node);\n      } // Propagate to all previous tensors connected to this node.\n\n\n      var numInboundLayers = node.inboundLayers.length;\n\n      for (var _i = 0; _i < numInboundLayers; _i++) {\n        var x = node.inputTensors[_i];\n        var _layer = node.inboundLayers[_i];\n        var _nodeIndex = node.nodeIndices[_i];\n        var _tensorIndex = node.tensorIndices[_i];\n        buildMapOfGraph(x, finishedNodes, nodesInProgress, _layer, _nodeIndex, _tensorIndex);\n      }\n\n      finishedNodes.push(node);\n\n      while (nodesInProgress.indexOf(node) >= 0) {\n        nodesInProgress.splice(nodesInProgress.indexOf(node), 1);\n      }\n\n      nodesInDecreasingDepth.push(node);\n    };\n\n    var finishedNodes = [];\n    var nodesInProgress = [];\n\n    var _iterator4 = _createForOfIteratorHelper(_this.outputs),\n        _step4;\n\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var _x2 = _step4.value;\n        buildMapOfGraph(_x2, finishedNodes, nodesInProgress);\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n\n    var reversedNodesInDecreasingDepth = nodesInDecreasingDepth.slice().reverse();\n\n    var _iterator5 = _createForOfIteratorHelper(reversedNodesInDecreasingDepth),\n        _step5;\n\n    try {\n      for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n        var node = _step5.value;\n        nodeIDToNode[node.id] = node; // If the depth is not set, the node has no outbound nodes (depth 0).\n\n        if (!(node.id in nodesDepths)) {\n          nodesDepths[node.id] = 0;\n        }\n\n        var _depth2 = nodesDepths[node.id]; // Update the depth of the corresponding layer\n\n        var previousDepth = layersDepths[node.outboundLayer.id] == null ? 0 : layersDepths[node.outboundLayer.id];\n        /*\n          If we've seen this layer before at a higher depth, we should use that\n          depth instead of the node depth.  This is necessary for shared layers\n          that have inputs at different depth levels in the graph.\n        */\n\n        _depth2 = Math.max(_depth2, previousDepth);\n        layersDepths[node.outboundLayer.id] = _depth2;\n        layerIDToLayer[node.outboundLayer.id] = node.outboundLayer;\n        nodesDepths[node.id] = _depth2; // Update the depth of inbound nodes.\n\n        for (var _i2 = 0; _i2 < node.inboundLayers.length; _i2++) {\n          var inboundLayer = node.inboundLayers[_i2];\n          var _nodeIndex3 = node.nodeIndices[_i2];\n          var inboundNode = inboundLayer.inboundNodes[_nodeIndex3];\n\n          var _previousDepth = nodesDepths[inboundNode.id] == null ? 0 : nodesDepths[inboundNode.id];\n\n          nodesDepths[inboundNode.id] = Math.max(_depth2 + 1, _previousDepth);\n          nodeIDToNode[inboundNode.id] = inboundNode;\n        }\n      } // Build a dict {depth: list of nodes with this depth}\n\n    } catch (err) {\n      _iterator5.e(err);\n    } finally {\n      _iterator5.f();\n    }\n\n    var nodesByDepth = {};\n\n    for (var nodeID in nodesDepths) {\n      var depth = nodesDepths[nodeID];\n\n      if (!(depth in nodesByDepth)) {\n        nodesByDepth[depth] = [];\n      }\n\n      nodesByDepth[depth].push(nodeIDToNode[nodeID]);\n    } // Build a dict {depth: list of layers with this depth}\n\n\n    var layersByDepth = {};\n\n    for (var layerID in layersDepths) {\n      var _depth = layersDepths[layerID];\n\n      if (!(_depth in layersByDepth)) {\n        layersByDepth[_depth] = [];\n      }\n\n      layersByDepth[_depth].push(layerIDToLayer[layerID]);\n    } // Get sorted list of layer depths.\n\n\n    var depthKeys = Object.keys(layersByDepth).map(function (x) {\n      return parseInt(x, 10);\n    }).sort(generic_utils.reverseNumberCompare); // Set this.layers and this.layersByDepth.\n\n    _this.layers = [];\n\n    var _iterator6 = _createForOfIteratorHelper(depthKeys),\n        _step6;\n\n    try {\n      for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n        var _depth3 = _step6.value;\n        var layersForDepth = layersByDepth[_depth3]; // Container.layers needs to have a deterministic order:\n        // here we order them by traversal order.\n\n        layersForDepth.sort(function (a, b) {\n          var aIndex = layerIndices[a.id];\n          var bIndex = layerIndices[b.id];\n\n          if (aIndex < bIndex) {\n            return -1;\n          }\n\n          if (aIndex > bIndex) {\n            return 1;\n          }\n\n          return 0;\n        });\n\n        var _iterator9 = _createForOfIteratorHelper(layersForDepth),\n            _step9;\n\n        try {\n          for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n            var _layer5 = _step9.value;\n\n            if (_layer5 instanceof Container) {\n              _this.internalContainerRefs.push(_layer5);\n            }\n\n            _this.layers.push(_layer5);\n          }\n        } catch (err) {\n          _iterator9.e(err);\n        } finally {\n          _iterator9.f();\n        }\n      }\n    } catch (err) {\n      _iterator6.e(err);\n    } finally {\n      _iterator6.f();\n    }\n\n    _this.layersByDepth = layersByDepth; // Get sorted list of node depths;\n\n    depthKeys = Object.keys(nodesByDepth).map(function (x) {\n      return parseInt(x, 10);\n    }).sort(generic_utils.reverseNumberCompare); // Check that all tensors required are computable.\n    // computable_tensors: all tensors in the graph\n    // that can be computed from the inputs provided.\n\n    var computableTensors = _this.inputs.slice(); // To provide a better error msg.\n\n\n    var layersWithCompleteInput = [];\n\n    var _iterator7 = _createForOfIteratorHelper(depthKeys),\n        _step7;\n\n    try {\n      for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n        var _depth4 = _step7.value;\n\n        var _iterator10 = _createForOfIteratorHelper(nodesByDepth[_depth4]),\n            _step10;\n\n        try {\n          for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n            var _node = _step10.value;\n            var _layer6 = _node.outboundLayer;\n\n            if (_layer6 != null) {\n              var _iterator11 = _createForOfIteratorHelper(_node.inputTensors),\n                  _step11;\n\n              try {\n                for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n                  var _x3 = _step11.value;\n\n                  if (computableTensors.indexOf(_x3) === -1) {\n                    throw new RuntimeError(\"Graph disconnected: cannot obtain value for tensor \".concat(_x3) + \" at layer \\\"\".concat(_layer6.name, \"\\\". \") + 'The following previous layers were accessed without ' + \"issue: \".concat(layersWithCompleteInput));\n                  }\n                }\n              } catch (err) {\n                _iterator11.e(err);\n              } finally {\n                _iterator11.f();\n              }\n\n              var _iterator12 = _createForOfIteratorHelper(_node.outputTensors),\n                  _step12;\n\n              try {\n                for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n                  var _x4 = _step12.value;\n                  computableTensors.push(_x4);\n                }\n              } catch (err) {\n                _iterator12.e(err);\n              } finally {\n                _iterator12.f();\n              }\n\n              layersWithCompleteInput.push(_layer6.name);\n            }\n          }\n        } catch (err) {\n          _iterator10.e(err);\n        } finally {\n          _iterator10.f();\n        }\n      } // Set this.containerNodes and this.nodesByDepth.\n\n    } catch (err) {\n      _iterator7.e(err);\n    } finally {\n      _iterator7.f();\n    }\n\n    _this.nodesByDepth = nodesByDepth; // Ensure name unicity, which will be crucial for serialization\n    // (since serialized nodes refer to layers by their name).\n\n    var allNames = _this.layers.map(function (x) {\n      return x.name;\n    });\n\n    var _iterator8 = _createForOfIteratorHelper(allNames),\n        _step8;\n\n    try {\n      var _loop = function _loop() {\n        var name = _step8.value;\n        var numOccurrences = allNames.filter(function (x) {\n          return x === name;\n        }).length;\n\n        if (numOccurrences !== 1) {\n          throw new RuntimeError(\"The name \\\"\".concat(name, \"\\\" is used \").concat(numOccurrences, \" times \") + 'in the model. All layer names should be unique. Layer names: ' + JSON.stringify(allNames));\n        }\n      };\n\n      for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n        _loop();\n      } // Layer parameters.\n      // The new container starts with a single inbound node\n      // for its inputs, and no outbound nodes.\n      // Will be appended to by future calls to apply().\n\n    } catch (err) {\n      _iterator8.e(err);\n    } finally {\n      _iterator8.f();\n    }\n\n    _this.outboundNodes = []; // Will be appended to below, and by future calls to apply().\n\n    _this.inboundNodes = []; // Create the node linking internal inputs to internal outputs.\n    // (This call has side effects.)\n    // tslint:disable-next-line:no-unused-expression\n\n    new Node({\n      outboundLayer: _assertThisInitialized(_this),\n      inboundLayers: [],\n      nodeIndices: [],\n      tensorIndices: [],\n      inputTensors: _this.inputs,\n      outputTensors: _this.outputs,\n      inputMasks: _this.inputs.map(function (x) {\n        return null;\n      }),\n      outputMasks: _this.outputs.map(function (x) {\n        return null;\n      }),\n      inputShapes: _this.inputs.map(function (x) {\n        return x.shape;\n      }),\n      outputShapes: _this.outputs.map(function (x) {\n        return x.shape;\n      })\n    });\n    _this.built = true;\n    _this._refCount = 1; // The ref count of a container always start at 1.\n\n    return _this;\n  }\n\n  _createClass(Container, [{\n    key: \"assertNotDisposed\",\n    value: function assertNotDisposed() {\n      if (this._refCount === 0) {\n        throw new Error(\"Container '\".concat(this.name, \"' is already disposed.\"));\n      }\n    }\n    /**\n     * Attempt to dispose a LayersModel's weights.\n     *\n     * This method decrease the reference count of the LayersModel object by 1.\n     *\n     * A LayersModel is reference-counted. Its reference count is incremented by 1\n     * when it is first constructed and when it is used as a Layer of another\n     * LayersModel.\n     *\n     * If the reference count of a LayersModel becomes 0, the `dispose` method of\n     * all its constituent `Layer`s will be called.\n     *\n     * Note: If the reference count is greater than 0 after the decrement, the\n     * `dispose` method of its constituent `Layer`s will *not* be called.\n     *\n     * After a LayersModel is disposed, it cannot be used in calls such as\n     * 'predict`, `evaluate` or `fit` anymore.\n     *\n     * @returns A DisposeResult Object with the following fields:\n     *   - refCountAfterDispose: The reference count of the LayersModel after this\n     *     `dispose()` call.\n     *   - numDisposedVariables: Number of `tf.Variable`s (i.e., weights) disposed\n     *     during this `dispose()` call.\n     * @throws {Error} If the layer is not built yet, or if the LayersModel has\n     *   already been disposed.\n     */\n\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.assertNotDisposed();\n      var result = {\n        refCountAfterDispose: null,\n        numDisposedVariables: 0\n      };\n\n      if (--this._refCount === 0) {\n        var _iterator13 = _createForOfIteratorHelper(this.layers),\n            _step13;\n\n        try {\n          for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n            var layer = _step13.value;\n            result.numDisposedVariables += layer.dispose().numDisposedVariables;\n          } // Call dispose on each internally created container layer again to ensure\n          // their refCounts hit zero and their tensors are subsequently deleted.\n\n        } catch (err) {\n          _iterator13.e(err);\n        } finally {\n          _iterator13.f();\n        }\n\n        var _iterator14 = _createForOfIteratorHelper(this.internalContainerRefs),\n            _step14;\n\n        try {\n          for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n            var container = _step14.value;\n            result.numDisposedVariables += container.dispose().numDisposedVariables;\n          }\n        } catch (err) {\n          _iterator14.e(err);\n        } finally {\n          _iterator14.f();\n        }\n      }\n\n      result.refCountAfterDispose = this._refCount;\n      return result;\n    }\n  }, {\n    key: \"trainable\",\n    get: function get() {\n      return this.trainable_;\n    },\n    set: function set(trainable) {\n      this.layers.forEach(function (layer) {\n        // tslint:disable-next-line:no-any\n        layer._trainableWeights.forEach(function (w) {\n          return w.trainable = trainable;\n        });\n      });\n      this.trainable_ = trainable;\n    }\n  }, {\n    key: \"trainableWeights\",\n    get: function get() {\n      // Porting Note: This check below is to prevent errors where the\n      //   _trainableWeights inherited from the parent class (Layer) gets\n      //   inadvertently used.\n      if (this._trainableWeights.length > 0) {\n        throw new ValueError('Container instance unexpectedly contains _trainableWeights.' + 'The trainable weights of a Container are a union of the ' + 'trainable weights of its consituent Layers. Its own ' + '_trainableWeights must remain an empty Array.');\n      }\n\n      if (!this.trainable) {\n        return [];\n      }\n\n      var weights = [];\n\n      var _iterator15 = _createForOfIteratorHelper(this.layers),\n          _step15;\n\n      try {\n        for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n          var layer = _step15.value;\n          weights = weights.concat(layer.trainableWeights);\n        }\n      } catch (err) {\n        _iterator15.e(err);\n      } finally {\n        _iterator15.f();\n      }\n\n      return weights;\n    }\n  }, {\n    key: \"nonTrainableWeights\",\n    get: function get() {\n      var weights = [];\n\n      var _iterator16 = _createForOfIteratorHelper(this.layers),\n          _step16;\n\n      try {\n        for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n          var _layer7 = _step16.value;\n          weights.push.apply(weights, _toConsumableArray(_layer7.nonTrainableWeights));\n        }\n      } catch (err) {\n        _iterator16.e(err);\n      } finally {\n        _iterator16.f();\n      }\n\n      if (!this.trainable) {\n        var trainableWeights = [];\n\n        var _iterator17 = _createForOfIteratorHelper(this.layers),\n            _step17;\n\n        try {\n          for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {\n            var layer = _step17.value;\n            trainableWeights.push.apply(trainableWeights, _toConsumableArray(layer.trainableWeights));\n          }\n        } catch (err) {\n          _iterator17.e(err);\n        } finally {\n          _iterator17.f();\n        }\n\n        return trainableWeights.concat(weights);\n      }\n\n      return weights;\n    }\n  }, {\n    key: \"weights\",\n    get: function get() {\n      return this.trainableWeights.concat(this.nonTrainableWeights);\n    }\n    /**\n     * Loads all layer weights from a JSON object.\n     *\n     * Porting Note: HDF5 weight files cannot be directly loaded in JavaScript /\n     *   TypeScript. The utility script at `scripts/pykeras.py` offers means\n     *   to convert them into JSON strings compatible with this method.\n     * Porting Note: TensorFlow.js Layers supports only loading by name currently.\n     *\n     * @param weights A JSON mapping weight names to weight values as nested\n     *   arrays of numbers, or a `NamedTensorMap`, i.e., a JSON mapping weight\n     *   names to `tf.Tensor` objects.\n     * @param strict Require that the provided weights exactly match those\n     *   required by the container.  Default: `true`.  Passing `false` means that\n     *   extra weights and missing weights will be silently ignored.\n     */\n\n  }, {\n    key: \"loadWeights\",\n    value: function loadWeights(weights) {\n      var strict = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var nameToWeight = {};\n      var totalWeightsCount = 0;\n\n      var _iterator18 = _createForOfIteratorHelper(this.layers),\n          _step18;\n\n      try {\n        for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {\n          var layer = _step18.value;\n\n          var _iterator19 = _createForOfIteratorHelper(layer.weights),\n              _step19;\n\n          try {\n            for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {\n              var weight = _step19.value;\n\n              if (nameToWeight[weight.originalName] != null) {\n                throw new ValueError(\"Duplicate weight name: \".concat(weight.originalName));\n              }\n\n              nameToWeight[weight.originalName] = weight;\n              totalWeightsCount++;\n            }\n          } catch (err) {\n            _iterator19.e(err);\n          } finally {\n            _iterator19.f();\n          }\n        }\n      } catch (err) {\n        _iterator18.e(err);\n      } finally {\n        _iterator18.f();\n      }\n\n      var weightValueTuples = [];\n\n      for (var name in weights) {\n        // TF 2.2.0 added cell name to the weight name in the format of\n        // layer_name/cell_name/weight_name, we need to remove\n        // the inner cell name.\n        var validatedName = name;\n\n        if (nameToWeight[name] == null) {\n          var tokens = name.split('/');\n          var shortenNameArray = tokens.slice(0, -2).concat([tokens[tokens.length - 1]]);\n          validatedName = shortenNameArray.join('/');\n        }\n\n        if (nameToWeight[validatedName] != null) {\n          weightValueTuples.push([nameToWeight[validatedName], weights[name]]);\n        } else if (strict) {\n          throw new ValueError(\"Provided weight data has no target variable: \".concat(name));\n        }\n\n        delete nameToWeight[validatedName];\n      }\n\n      if (strict) {\n        // Check that all weights are set.\n        var unsetNames = [];\n\n        for (var _name in nameToWeight) {\n          unsetNames.push(_name);\n        }\n\n        if (unsetNames.length > 0) {\n          throw new ValueError(\"\".concat(unsetNames.length, \" of \").concat(totalWeightsCount, \" weights are not set: \") + \"\".concat(unsetNames));\n        }\n      }\n\n      batchSetValue(weightValueTuples);\n    }\n    /**\n     * Util shared between different serialization methods.\n     * @returns LayersModel config with Keras version information added.\n     */\n\n  }, {\n    key: \"updatedConfig\",\n    value: function updatedConfig() {\n      var theConfig = this.getConfig();\n      var modelConfig = {};\n      modelConfig['className'] = this.getClassName();\n      modelConfig['config'] = theConfig;\n      modelConfig['kerasVersion'] = \"tfjs-layers \".concat(layersVersion); // TODO(nielsene): Replace something like K.backend() once\n      // possible.\n\n      modelConfig['backend'] = 'TensorFlow.js';\n      return modelConfig;\n    }\n    /**\n     * Returns a JSON string containing the network configuration.\n     *\n     * To load a network from a JSON save file, use\n     * models.modelFromJSON(jsonString);\n     * @param extraJsonArgs Unused in tfjs-layers, maintained for PyKeras\n     * @param returnString Whether the return value should be stringified\n     *    (default: `true`).\n     * @returns a JSON string if `returnString` (default), or a JSON object if\n     *   `!returnString`.\n     */\n    // tslint:disable-next-line:no-any\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(unused) {\n      var returnString = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var modelConfig = convertTsToPythonic(this.updatedConfig());\n      return returnString ? JSON.stringify(modelConfig) : modelConfig;\n    }\n    /**\n     * Call the model on new inputs.\n     *\n     * In this case `call` just reapplies all ops in the graph to the new inputs\n     * (e.g. build a new computational graph from the provided inputs).\n     *\n     * @param inputs A tensor or list of tensors.\n     * @param mask A mask or list of masks. A mask can be either a tensor or null\n     *   (no mask).\n     *\n     * @return A tensor if there is a single output, or a list of tensors if there\n     *   are more than one outputs.\n     */\n\n  }, {\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      var _this2 = this;\n\n      return tidy(function () {\n        inputs = generic_utils.toList(inputs);\n        var feedDict = new FeedDict();\n\n        for (var i = 0; i < _this2.inputs.length; ++i) {\n          feedDict.add(_this2.inputs[i], inputs[i]);\n        }\n\n        return execute(_this2.outputs, feedDict, kwargs);\n      });\n    }\n    /**\n     * Computes an output mask tensor.\n     *\n     * @param inputs Tensor or list of tensors.\n     * @param mask Tensor or list of tensors.\n     *\n     * @return null or a tensor (or list of tensors, one per output tensor of the\n     * layer).\n     */\n\n  }, {\n    key: \"computeMask\",\n    value: function computeMask(inputs, mask) {\n      var _this3 = this;\n\n      return tidy(function () {\n        inputs = generic_utils.toList(inputs);\n        var masks;\n\n        if (mask == null) {\n          masks = generic_utils.pyListRepeat(null, inputs.length);\n        } else {\n          masks = generic_utils.toList(mask);\n        } // TODO(michaelterry): Add support for mask caching.\n\n\n        return _this3.runInternalGraph(inputs, masks)[1];\n      });\n    }\n    /**\n     * Computes the output shape of the layer.\n     *\n     * Assumes that the layer will be built to match that input shape provided.\n     *\n     * @param inputShape A shape (tuple of integers) or a list of shape tuples\n     *   (one per output tensor of the layer). Shape tuples can include null for\n     *   free dimensions, instead of an integer.\n     */\n\n  }, {\n    key: \"computeOutputShape\",\n    value: function computeOutputShape(inputShape) {\n      var inputShapes = types_utils.normalizeShapeList(inputShape);\n\n      if (inputShapes.length !== this.inputLayers.length) {\n        throw new ValueError(\"Invalid inputShape argument \".concat(inputShape, \": \") + \"model has \".concat(this.inputLayers.length, \" tensor inputs.\"));\n      } // TODO(michaelterry): Add caching\n\n\n      var layersToOutputShapes = {};\n\n      for (var i = 0; i < inputShapes.length; i++) {\n        var layer = this.inputLayers[i];\n        var _inputShape = inputShapes[i]; // It's an input layer: computeOutputShape is identity,\n        // and there is only one node and one tensor output.\n\n        var shapeKey = layer.name + '_0_0';\n        layersToOutputShapes[shapeKey] = _inputShape;\n      }\n\n      var depthKeys = Object.keys(this.nodesByDepth).map(function (x) {\n        return parseInt(x, 10);\n      }).sort(generic_utils.reverseNumberCompare); // Iterate over nodes, by depth level.\n\n      if (depthKeys.length > 1) {\n        var _iterator20 = _createForOfIteratorHelper(depthKeys),\n            _step20;\n\n        try {\n          for (_iterator20.s(); !(_step20 = _iterator20.n()).done;) {\n            var depth = _step20.value;\n            var nodes = this.nodesByDepth[depth];\n\n            var _iterator21 = _createForOfIteratorHelper(nodes),\n                _step21;\n\n            try {\n              for (_iterator21.s(); !(_step21 = _iterator21.n()).done;) {\n                var node = _step21.value;\n                // This is always a single layer, never a list.\n                var _layer8 = node.outboundLayer;\n\n                if (this.inputLayers.map(function (x) {\n                  return x.id;\n                }).indexOf(_layer8.id) !== -1) {\n                  // We've already covered the input layers a few lines above.\n                  continue;\n                } // Potentially redundant list, same size of node.inputTensors.\n\n\n                var _inputShapes = [];\n\n                for (var j = 0; j < node.inboundLayers.length; j++) {\n                  var inboundLayer = node.inboundLayers[j];\n                  var _nodeIndex4 = node.nodeIndices[j];\n                  var tensorIndex = node.tensorIndices[j];\n\n                  var _shapeKey = \"\".concat(inboundLayer.name, \"_\").concat(_nodeIndex4, \"_\").concat(tensorIndex);\n\n                  var _inputShape2 = layersToOutputShapes[_shapeKey];\n\n                  _inputShapes.push(_inputShape2);\n                }\n\n                var outputShape = _layer8.computeOutputShape(generic_utils.singletonOrArray(_inputShapes));\n\n                var _outputShapes = types_utils.normalizeShapeList(outputShape);\n\n                var nodeIndex = _layer8.inboundNodes.indexOf(node);\n\n                for (var _j = 0; _j < _outputShapes.length; _j++) {\n                  var _shapeKey2 = \"\".concat(_layer8.name, \"_\").concat(nodeIndex, \"_\").concat(_j);\n\n                  layersToOutputShapes[_shapeKey2] = _outputShapes[_j];\n                }\n              }\n            } catch (err) {\n              _iterator21.e(err);\n            } finally {\n              _iterator21.f();\n            }\n          }\n        } catch (err) {\n          _iterator20.e(err);\n        } finally {\n          _iterator20.f();\n        }\n      } // Read final output shapes from layersToOutputShapes.\n\n\n      var outputShapes = [];\n      var outputShapeKeys = [];\n\n      for (var _i3 = 0; _i3 < this.outputLayers.length; _i3++) {\n        var _layer9 = this.outputLayers[_i3];\n        var _nodeIndex5 = this.outputLayersNodeIndices[_i3];\n        var _tensorIndex3 = this.outputLayersTensorIndices[_i3];\n\n        var _shapeKey3 = \"\".concat(_layer9.name, \"_\").concat(_nodeIndex5, \"_\").concat(_tensorIndex3);\n\n        outputShapeKeys.push(_shapeKey3);\n      }\n\n      for (var _i4 = 0; _i4 < outputShapeKeys.length; _i4++) {\n        var key = outputShapeKeys[_i4];\n        generic_utils.assert(key in layersToOutputShapes);\n        outputShapes.push(layersToOutputShapes[key]);\n      } // TODO(michaelterry): Update cache\n\n\n      return generic_utils.singletonOrArray(outputShapes);\n    }\n    /**\n     * Computes output tensors for new inputs.\n     *\n     * Note:\n     *   - Expects `inputs` to be a list (potentially with 1 element).\n     *\n     * @param inputs List of tensors\n     * @param masks List of masks (tensors or null).\n     * @return Three lists: outputTensors, outputMasks, outputShapes\n     */\n\n  }, {\n    key: \"runInternalGraph\",\n    value: function runInternalGraph(inputs, masks) {\n      if (masks == null) {\n        masks = generic_utils.pyListRepeat(null, inputs.length);\n      } // Dictionary mapping reference tensors to tuples\n      // (computed tensor, compute mask)\n      // we assume a 1:1 mapping from tensor to mask\n      // TODO: raise exception when a `.computeMask()` call\n      // does not return a list the same size as `call`\n\n\n      var tensorMap = {};\n\n      for (var i = 0; i < this.inputs.length; ++i) {\n        var x = this.inputs[i];\n        var y = inputs[i];\n        var mask = masks[i];\n        tensorMap[x.id] = [y, mask];\n      }\n\n      var depthKeys = Object.keys(this.nodesByDepth).map(function (x) {\n        return parseInt(x, 10);\n      }).sort(generic_utils.reverseNumberCompare);\n\n      var _iterator22 = _createForOfIteratorHelper(depthKeys),\n          _step22;\n\n      try {\n        for (_iterator22.s(); !(_step22 = _iterator22.n()).done;) {\n          var depth = _step22.value;\n          var nodes = this.nodesByDepth[depth];\n\n          var _iterator24 = _createForOfIteratorHelper(nodes),\n              _step24;\n\n          try {\n            for (_iterator24.s(); !(_step24 = _iterator24.n()).done;) {\n              var node = _step24.value;\n              // This is always a single layer, never a list.\n              var layer = node.outboundLayer;\n              var referenceInputTensors = node.inputTensors;\n              var referenceOutputTensors = node.outputTensors; // If all previous input tensors are available in tensorMap,\n              // then call node.inboundLayer on them.\n              // List of tuples [input, mask]:\n\n              var computedData = new Array();\n\n              var _iterator25 = _createForOfIteratorHelper(referenceInputTensors),\n                  _step25;\n\n              try {\n                for (_iterator25.s(); !(_step25 = _iterator25.n()).done;) {\n                  var _x6 = _step25.value;\n\n                  if (_x6.id in tensorMap) {\n                    computedData.push(tensorMap[_x6.id]);\n                  }\n                }\n              } catch (err) {\n                _iterator25.e(err);\n              } finally {\n                _iterator25.f();\n              }\n\n              if (computedData.length === referenceInputTensors.length) {\n                // TODO(michaelterry): Add K.name_scope here, if we need it.\n                var kwargs = {};\n                var computedTensors = void 0;\n                var computedMasks = void 0;\n\n                var _outputTensors = void 0;\n\n                var _outputMasks = void 0; // call layer\n\n\n                if (node.callArgs != null) {\n                  kwargs = node.callArgs;\n                }\n\n                if (computedData.length === 1) {\n                  var _computedData$ = _slicedToArray(computedData[0], 2),\n                      computedTensor = _computedData$[0],\n                      computedMask = _computedData$[1];\n\n                  if (kwargs['mask'] == null) {\n                    kwargs['mask'] = computedMask;\n                  }\n\n                  _outputTensors = generic_utils.toList(layer.call(computedTensor, kwargs));\n                  _outputMasks = generic_utils.toList(layer.computeMask(computedTensor, computedMask));\n                  computedTensors = [computedTensor];\n                  computedMasks = [computedMask];\n                } else {\n                  computedTensors = computedData.map(function (x) {\n                    return x[0];\n                  });\n                  computedMasks = computedData.map(function (x) {\n                    return x[1];\n                  });\n\n                  if (kwargs['mask'] == null) {\n                    kwargs['mask'] = computedMasks;\n                  }\n\n                  _outputTensors = generic_utils.toList(layer.call(computedTensors, kwargs));\n                  _outputMasks = generic_utils.toList(layer.computeMask(computedTensors, computedMasks));\n                }\n\n                if (layer.activityRegularizer) {\n                  throw new NotImplementedError('LayersModel invocation with concrete Tensor value(s) in the ' + 'presence of activity regularizer(s) is not supported yet.');\n                } // TODO(michaelterry): Add model updates and losses\n                // Update tensor map.\n\n\n                for (var _i5 = 0; _i5 < referenceOutputTensors.length; ++_i5) {\n                  var _x5 = referenceOutputTensors[_i5];\n                  var _y = _outputTensors[_i5];\n                  var _mask = _outputMasks[_i5];\n                  tensorMap[_x5.id] = [_y, _mask];\n                }\n              }\n            }\n          } catch (err) {\n            _iterator24.e(err);\n          } finally {\n            _iterator24.f();\n          }\n        }\n      } catch (err) {\n        _iterator22.e(err);\n      } finally {\n        _iterator22.f();\n      }\n\n      var outputTensors = [];\n      var outputMasks = [];\n      var outputShapes = [];\n\n      var _iterator23 = _createForOfIteratorHelper(this.outputs),\n          _step23;\n\n      try {\n        for (_iterator23.s(); !(_step23 = _iterator23.n()).done;) {\n          var _x7 = _step23.value;\n          generic_utils.assert(_x7.id in tensorMap, \"Could not compute output \".concat(_x7.name, \" : \").concat(_x7.id));\n\n          var _tensorMap$_x7$id = _slicedToArray(tensorMap[_x7.id], 2),\n              tensor = _tensorMap$_x7$id[0],\n              _mask2 = _tensorMap$_x7$id[1];\n\n          outputShapes.push(tensor.shape);\n          outputTensors.push(tensor);\n          outputMasks.push(_mask2);\n        } // TODO(michaelterry): Add support for caches.\n\n      } catch (err) {\n        _iterator23.e(err);\n      } finally {\n        _iterator23.f();\n      }\n\n      return [outputTensors, outputMasks, outputShapes];\n    }\n    /**\n     * Builds a map of internal node keys to node ordering.\n     * Used in serializaion a node orderings may change as unused nodes are\n     * dropped. Porting Note:  This helper method was pulled out of getConfig to\n     * improve readability.\n     * @param layers An array of Layers in the model.\n     * @returns Map of Node Keys to index order within the layer.\n     */\n\n  }, {\n    key: \"buildNodeConversionMap\",\n    value: function buildNodeConversionMap(layers) {\n      var nodeConversionMap = {};\n      var keptNodes;\n\n      var _iterator26 = _createForOfIteratorHelper(this.layers),\n          _step26;\n\n      try {\n        for (_iterator26.s(); !(_step26 = _iterator26.n()).done;) {\n          var layer = _step26.value;\n          keptNodes = layer instanceof Container ? 1 : 0;\n\n          for (var originalNodeIndex = 0; originalNodeIndex < layer.inboundNodes.length; originalNodeIndex++) {\n            var nodeKey = Container.nodeKey(layer, originalNodeIndex);\n\n            if (this.containerNodes.has(nodeKey)) {\n              // i.e. we mark it to be saved\n              nodeConversionMap[nodeKey] = keptNodes;\n              keptNodes += 1;\n            }\n          }\n        }\n      } catch (err) {\n        _iterator26.e(err);\n      } finally {\n        _iterator26.f();\n      }\n\n      return nodeConversionMap;\n    }\n    /**\n     * Retrieves a layer based on either its name (unique) or index.\n     *\n     * Indices are based on order of horizontal graph traversal (bottom-up).\n     *\n     * If both `name` and `index` are specified, `index` takes precedence.\n     *\n     * @param name Name of layer.\n     * @param index Index of layer.\n     * @returns A Layer instance.\n     * @throws ValueError: In case of invalid layer name or index.\n     *\n     * @doc {\n     *    heading: 'Layers',\n     *    subheading: 'Classes',\n     *    namespace: 'layers',\n     *    subclasses: ['LayersModel']\n     * }\n     */\n\n  }, {\n    key: \"getLayer\",\n    value: function getLayer(name, index) {\n      if (index != null) {\n        if (this.layers.length <= index) {\n          throw new ValueError(\"Was asked to retrieve layer at index \".concat(index, \", but model only \") + \"has \".concat(this.layers.length, \" layer(s).\"));\n        } else {\n          return this.layers[index];\n        }\n      } else {\n        if (name == null) {\n          throw new ValueError('Provide either a layer name or layer index');\n        }\n      }\n\n      var _iterator27 = _createForOfIteratorHelper(this.layers),\n          _step27;\n\n      try {\n        for (_iterator27.s(); !(_step27 = _iterator27.n()).done;) {\n          var layer = _step27.value;\n\n          if (layer.name === name) {\n            return layer;\n          }\n        }\n      } catch (err) {\n        _iterator27.e(err);\n      } finally {\n        _iterator27.f();\n      }\n\n      throw new ValueError(\"No such layer: \".concat(name));\n    }\n    /**\n     * Retrieves the Container's current loss values.\n     *\n     * Used for regularizers during training.\n     */\n\n  }, {\n    key: \"calculateLosses\",\n    value: function calculateLosses() {\n      var _this4 = this;\n\n      // Porting Node: This is an augmentation to Container.loss in PyKeras.\n      //   In PyKeras, Container.loss returns symbolic tensors. Here a concrete\n      //   Tensor (specifically Scalar) values are returned. This is due to the\n      //   imperative backend.\n      return tidy(function () {\n        var losses = [];\n\n        var _iterator28 = _createForOfIteratorHelper(_this4.layers),\n            _step28;\n\n        try {\n          for (_iterator28.s(); !(_step28 = _iterator28.n()).done;) {\n            var layer = _step28.value;\n\n            for (var nodeIndex = 0; nodeIndex < layer.inboundNodes.length; ++nodeIndex) {\n              var nodeKey = Container.nodeKey(layer, nodeIndex);\n\n              if (_this4.containerNodes.has(nodeKey)) {\n                losses.push.apply(losses, _toConsumableArray(layer.calculateLosses()));\n              }\n            }\n          } // TODO(cais): Add any unconditional model-level losses?\n\n        } catch (err) {\n          _iterator28.e(err);\n        } finally {\n          _iterator28.f();\n        }\n\n        return losses;\n      });\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      var config = {\n        name: this.name\n      }; // Build a map from layer unique name (self._node_key)\n      // to the index of the nodes that are saved in the config.\n      // Only nodes in container_nodes are saved.\n\n      var nodeConversionMap = this.buildNodeConversionMap(this.layers); // Serialize and save the layers in layerConfigs\n\n      var layerConfigs = [];\n\n      var _iterator29 = _createForOfIteratorHelper(this.layers),\n          _step29;\n\n      try {\n        for (_iterator29.s(); !(_step29 = _iterator29.n()).done;) {\n          var _layer11 = _step29.value;\n\n          var layerClassName = _layer11.getClassName();\n\n          var layerConfig = _layer11.getConfig();\n\n          var filteredInboundNodes = [];\n\n          for (var originalNodeIndex = 0; originalNodeIndex < _layer11.inboundNodes.length; originalNodeIndex++) {\n            var node = _layer11.inboundNodes[originalNodeIndex];\n\n            var _nodeKey2 = Container.nodeKey(_layer11, originalNodeIndex);\n\n            var kwargs = {};\n\n            if (this.containerNodes.has(_nodeKey2)) {\n              // The node is relevant to the model:\n              // add to filteredInboundNodes.\n              if (node.callArgs) {\n                try {\n                  JSON.stringify(node.callArgs);\n                  kwargs = node.callArgs;\n                } catch (err) {\n                  console.warn(\"Layer \".concat(_layer11.name, \" was passed \") + \"non-serializable keyword arguments: \" + \"\".concat(node.callArgs, \". They will not be included \") + \"in the serialized model (and thus will be \" + \"missing at deserialization time).\");\n                  kwargs = {};\n                }\n              }\n\n              if (node.inboundLayers.length > 0) {\n                var nodeData = [];\n\n                for (var _i7 = 0; _i7 < node.inboundLayers.length; _i7++) {\n                  var inboundLayer = node.inboundLayers[_i7];\n                  var _nodeIndex7 = node.nodeIndices[_i7];\n                  var _tensorIndex5 = node.tensorIndices[_i7];\n\n                  var _nodeKey3 = Container.nodeKey(inboundLayer, _nodeIndex7);\n\n                  var _newNodeIndex2 = nodeConversionMap[_nodeKey3];\n\n                  if (_newNodeIndex2 == null) {\n                    _newNodeIndex2 = 0;\n                  }\n\n                  nodeData.push([inboundLayer.name, _newNodeIndex2, _tensorIndex5, kwargs]);\n                }\n\n                filteredInboundNodes.push(nodeData);\n              }\n            }\n          }\n\n          var dict = {};\n          dict['name'] = _layer11.name;\n          dict['className'] = layerClassName;\n          dict['config'] = layerConfig;\n          dict['inboundNodes'] = filteredInboundNodes;\n          layerConfigs.push(dict);\n        }\n      } catch (err) {\n        _iterator29.e(err);\n      } finally {\n        _iterator29.f();\n      }\n\n      config['layers'] = layerConfigs; // Gather info about inputs and outputs\n\n      var modelInputs = [];\n\n      for (var i = 0; i < this.inputLayers.length; i++) {\n        var layer = this.inputLayers[i];\n        var nodeIndex = this.inputLayersNodeIndices[i];\n        var nodeKey = Container.nodeKey(layer, nodeIndex);\n\n        if (!this.containerNodes.has(nodeKey)) {\n          continue;\n        }\n\n        var newNodeIndex = nodeConversionMap[nodeKey];\n\n        if (newNodeIndex === null || newNodeIndex === undefined) {\n          newNodeIndex = 0;\n        }\n\n        var tensorIndex = this.inputLayersTensorIndices[i];\n        modelInputs.push([layer.name, newNodeIndex, tensorIndex]);\n      }\n\n      config['inputLayers'] = modelInputs;\n      var modelOutputs = [];\n\n      for (var _i6 = 0; _i6 < this.outputLayers.length; _i6++) {\n        var _layer10 = this.outputLayers[_i6];\n        var _nodeIndex6 = this.outputLayersNodeIndices[_i6];\n\n        var _nodeKey = Container.nodeKey(_layer10, _nodeIndex6);\n\n        if (!this.containerNodes.has(_nodeKey)) {\n          continue;\n        }\n\n        var _newNodeIndex = nodeConversionMap[_nodeKey];\n\n        if (_newNodeIndex === null || _newNodeIndex === undefined) {\n          _newNodeIndex = 0;\n        }\n\n        var _tensorIndex4 = this.outputLayersTensorIndices[_i6];\n        modelOutputs.push([_layer10.name, _newNodeIndex, _tensorIndex4]);\n      }\n\n      config['outputLayers'] = modelOutputs;\n      return config;\n    }\n    /**\n     * Instantiates a LayersModel from its config (output of `get_config()`).\n     * @param cls the class to create\n     * @param config LayersModel config dictionary.\n     * @param customObjects An optional dictionary of custom objects.\n     * @param fastWeightInit Optional flag to use fast weight initialization\n     *   during deserialization. This is applicable to cases in which\n     *   the initialization will be immediately overwritten by loaded weight\n     *   values. Default: `false`.\n     * @returns A LayersModel instance.\n     * @throws ValueError: In case of improperly formatted config dict.\n     */\n\n    /** @nocollapse */\n\n  }, {\n    key: \"stateful\",\n    get:\n    /**\n     * Determine whether the container is stateful.\n     *\n     * Porting Note: this is the equivalent of the stateful @property of\n     *   the Container class in PyKeras.\n     */\n    function get() {\n      // Porting Note: This check is to prevent inadvertent setting of the\n      //   _stateful property of the Container instance.\n      if (this._stateful) {\n        throw new ValueError('Container instance unexpectedly has _stateful = true. The ' + 'statefulness of a Container is determined by the Layers it ' + 'contains. Its _stateful property must remain the default false.');\n      }\n\n      var _iterator30 = _createForOfIteratorHelper(this.layers),\n          _step30;\n\n      try {\n        for (_iterator30.s(); !(_step30 = _iterator30.n()).done;) {\n          var layer = _step30.value;\n\n          if (layer.stateful) {\n            return true;\n          }\n        }\n      } catch (err) {\n        _iterator30.e(err);\n      } finally {\n        _iterator30.f();\n      }\n\n      return false;\n    }\n    /**\n     * Reset the state of all stateful constituent layers (if any).\n     *\n     * Examples of stateful layers include RNN layers whose `stateful` property\n     * is set as `true`.\n     */\n\n  }, {\n    key: \"resetStates\",\n    value: function resetStates() {\n      var _this5 = this;\n\n      tidy(function () {\n        _this5.layers.forEach(function (layer) {\n          // tslint:disable:no-any\n          if (layer.stateful) {\n            layer.resetStates();\n          } // tslint:enable:no-any\n\n        });\n      });\n    }\n  }], [{\n    key: \"fromConfig\",\n    value: function fromConfig(cls, config) {\n      var customObjects = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var fastWeightInit = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      // Layer instances created during\n      // the graph reconstruction process\n      var createdLayers = {}; // Dictionary mapping layer instances to\n      // node data that specifies a layer call.\n      // It acts as a queue that maintains any unprocessed\n      // layer call until it becomes possible to process it\n      // (i.e. until the input tensors to the call all exist).\n\n      var unprocessedNodes = {};\n\n      function addUnprocessedNode(layer, nodeData) {\n        if (!(layer.name in unprocessedNodes)) {\n          unprocessedNodes[layer.name] = [nodeData];\n        } else {\n          unprocessedNodes[layer.name].push(nodeData);\n        }\n      }\n\n      function processNode(layer, nodeData) {\n        var inputTensors = [];\n        var kwargs;\n\n        var _iterator31 = _createForOfIteratorHelper(nodeData),\n            _step31;\n\n        try {\n          for (_iterator31.s(); !(_step31 = _iterator31.n()).done;) {\n            var inputData = _step31.value;\n            var inboundLayerName = inputData[0];\n            var inboundNodeIndex = inputData[1];\n            var inboundTensorIndex = inputData[2];\n            kwargs = inputData[3] == null ? {} : inputData[3];\n\n            if (!(inboundLayerName in createdLayers)) {\n              addUnprocessedNode(layer, nodeData);\n              return;\n            }\n\n            var inboundLayer = createdLayers[inboundLayerName];\n\n            if (inboundLayer.inboundNodes.length <= inboundNodeIndex) {\n              addUnprocessedNode(layer, nodeData);\n              return;\n            }\n\n            var inboundNode = inboundLayer.inboundNodes[inboundNodeIndex];\n            inputTensors.push(inboundNode.outputTensors[inboundTensorIndex]);\n          } // Call layer on its inputs, thus creating the node\n          // and building the layer if needed.\n          // Note: This has Eager vs Graph Implications.\n\n        } catch (err) {\n          _iterator31.e(err);\n        } finally {\n          _iterator31.f();\n        }\n\n        if (inputTensors.length > 0) {\n          layer.apply(generic_utils.singletonOrArray(inputTensors), kwargs); // was ** kwargs\n        }\n      }\n      /**\n       * Deserialize a layer, then call it on appropriate inputs.\n       * @param layerData: layer config dict.\n       * @throws ValueError: In case of improperly formatted `layer_data`\n       * dict.\n       */\n\n\n      function processLayer(layerData) {\n        var layerName = layerData['name']; // Instantiate layer.\n\n        var layer = deserializeLayer(layerData, config['customObjects'] != null ? config['customObjects'] : {});\n        layer.setFastWeightInitDuringBuild(fastWeightInit);\n        createdLayers[layerName] = layer; // Gather layer inputs.\n\n        var inboundNodesData = layerData['inboundNodes'];\n        inboundNodesData.forEach(function (nodeData) {\n          if (!(nodeData instanceof Array)) {\n            throw new ValueError(\"Corrupted configuration, expected array for nodeData: \".concat(nodeData));\n          } // We don't process nodes (i.e. make layer calls)\n          // on the fly because the inbound node may not yet exist,\n          // in case of layer shared at different topological depths\n          // (e.g.a model such as A(B(A(B(x)))))\n\n\n          addUnprocessedNode(layer, nodeData);\n        });\n      } // First, we create all layers and enqueue nodes to be processed.\n\n\n      var name = config['name'];\n      var layersFromConfig = config['layers'];\n\n      var _iterator32 = _createForOfIteratorHelper(layersFromConfig),\n          _step32;\n\n      try {\n        for (_iterator32.s(); !(_step32 = _iterator32.n()).done;) {\n          var _layerData = _step32.value;\n          processLayer(_layerData);\n        } // Then we process nodes in order of layer depth.\n        // Nodes that cannot yet be processed(if the inbound node\n        // does not yet exist) are re - enqueued, and the process\n        // is repeated until all nodes are processed.\n\n      } catch (err) {\n        _iterator32.e(err);\n      } finally {\n        _iterator32.f();\n      }\n\n      while (!generic_utils.isObjectEmpty(unprocessedNodes)) {\n        var _iterator33 = _createForOfIteratorHelper(layersFromConfig),\n            _step33;\n\n        try {\n          for (_iterator33.s(); !(_step33 = _iterator33.n()).done;) {\n            var layerData = _step33.value;\n            var layer = createdLayers[layerData['name']];\n\n            if (layer.name in unprocessedNodes) {\n              var currentUnprocessedNodesForLayer = unprocessedNodes[layer.name];\n              delete unprocessedNodes[layer.name];\n\n              var _iterator34 = _createForOfIteratorHelper(currentUnprocessedNodesForLayer),\n                  _step34;\n\n              try {\n                for (_iterator34.s(); !(_step34 = _iterator34.n()).done;) {\n                  var nodeData = _step34.value;\n                  processNode(layer, nodeData);\n                }\n              } catch (err) {\n                _iterator34.e(err);\n              } finally {\n                _iterator34.f();\n              }\n            }\n          }\n        } catch (err) {\n          _iterator33.e(err);\n        } finally {\n          _iterator33.f();\n        }\n      }\n\n      var inputTensors = [];\n      var outputTensors = [];\n      var inputLayersFromConfig = config['inputLayers'];\n\n      var _iterator35 = _createForOfIteratorHelper(inputLayersFromConfig),\n          _step35;\n\n      try {\n        for (_iterator35.s(); !(_step35 = _iterator35.n()).done;) {\n          var _layerData2 = _step35.value;\n          var layerName = _layerData2[0];\n          var nodeIndex = _layerData2[1];\n          var tensorIndex = _layerData2[2];\n          generic_utils.assert(layerName in createdLayers);\n          var _layer12 = createdLayers[layerName];\n          var layerOutputTensors = _layer12.inboundNodes[nodeIndex].outputTensors;\n          inputTensors.push(layerOutputTensors[tensorIndex]);\n        }\n      } catch (err) {\n        _iterator35.e(err);\n      } finally {\n        _iterator35.f();\n      }\n\n      var outputLayersFromConfig = config['outputLayers'];\n\n      var _iterator36 = _createForOfIteratorHelper(outputLayersFromConfig),\n          _step36;\n\n      try {\n        for (_iterator36.s(); !(_step36 = _iterator36.n()).done;) {\n          var _layerData3 = _step36.value;\n          var _layerName = _layerData3[0];\n          var _nodeIndex8 = _layerData3[1];\n          var _tensorIndex6 = _layerData3[2];\n          generic_utils.assert(_layerName in createdLayers);\n          var _layer13 = createdLayers[_layerName];\n          var _layerOutputTensors = _layer13.inboundNodes[_nodeIndex8].outputTensors;\n          outputTensors.push(_layerOutputTensors[_tensorIndex6]);\n        }\n      } catch (err) {\n        _iterator36.e(err);\n      } finally {\n        _iterator36.f();\n      }\n\n      return new cls({\n        inputs: inputTensors,\n        outputs: outputTensors,\n        name: name\n      });\n    }\n  }]);\n\n  return Container;\n}(Layer);","import _asyncToGenerator from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _regeneratorRuntime from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/regenerator\";\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\nimport { dispose, mul, tensor1d, tidy } from '@tensorflow/tfjs-core';\n\nfunction standardizeSampleOrClassWeights(xWeight, outputNames, weightType) {\n  var numOutputs = outputNames.length;\n\n  if (xWeight == null || Array.isArray(xWeight) && xWeight.length === 0) {\n    return outputNames.map(function (name) {\n      return null;\n    });\n  }\n\n  if (numOutputs === 1) {\n    if (Array.isArray(xWeight) && xWeight.length === 1) {\n      return xWeight;\n    } else if (typeof xWeight === 'object' && outputNames[0] in xWeight) {\n      return [xWeight[outputNames[0]]];\n    } else {\n      return [xWeight];\n    }\n  }\n\n  if (Array.isArray(xWeight)) {\n    if (xWeight.length !== numOutputs) {\n      throw new Error(\"Provided \".concat(weightType, \" is an array of \").concat(xWeight.length, \" \") + \"element(s), but the model has \".concat(numOutputs, \" outputs. \") + \"Make sure a set of weights is provided for each model output.\");\n    }\n\n    return xWeight;\n  } else if (typeof xWeight === 'object' && Object.keys(xWeight).length > 0 && typeof xWeight[Object.keys(xWeight)[0]] === 'object') {\n    var output = [];\n    outputNames.forEach(function (outputName) {\n      if (outputName in xWeight) {\n        output.push(xWeight[outputName]);\n      } else {\n        output.push(null);\n      }\n    });\n    return output;\n  } else {\n    throw new Error(\"The model has multiple (\".concat(numOutputs, \") outputs, \") + \"so \".concat(weightType, \" must be either an array with \") + \"\".concat(numOutputs, \" elements or an object with \").concat(outputNames, \" keys. \") + \"Provided \".concat(weightType, \" not understood: \").concat(JSON.stringify(xWeight)));\n  }\n}\n/**\n * Standardize class weighting objects.\n *\n * This function takes a single class-weighting object, an array of them,\n * or a map from output name to class-weighting object. It compares it to the\n * output name(s) of the model, base on which it outputs an array of\n * class-weighting objects of which the length matches the number of outputs.\n *\n * @param classWeight Input class-weighting object(s).\n * @param outputNames All output name(s) of the model.\n * @return An array of class-weighting objects. The length of the array matches\n *   the model's number of outputs.\n */\n\n\nexport function standardizeClassWeights(classWeight, outputNames) {\n  return standardizeSampleOrClassWeights(classWeight, outputNames, 'classWeight');\n}\nexport function standardizeSampleWeights(classWeight, outputNames) {\n  return standardizeSampleOrClassWeights(classWeight, outputNames, 'sampleWeight');\n}\n/**\n * Standardize by-sample and/or by-class weights for training.\n *\n * Note that this function operates on one model output at a time. For a model\n * with multiple outputs, you must call this function multiple times.\n *\n * @param y The target tensor that the by-sample and/or by-class weight is for.\n *     The values of y are assumed to encode the classes, either directly\n *     as an integer index, or as one-hot encoding.\n * @param sampleWeight By-sample weights.\n * @param classWeight By-class weights: an object mapping class indices\n *     (integers) to a weight (float) to apply to the model's loss for the\n *     samples from this class during training. This can be useful to tell the\n *     model to \"pay more attention\" to samples from an under-represented class.\n * @param sampleWeightMode The mode for the sample weights.\n * @return A Promise of weight tensor, of which the size of the first dimension\n *     matches that of `y`.\n */\n\nexport function standardizeWeights(_x, _x2, _x3, _x4) {\n  return _standardizeWeights.apply(this, arguments);\n}\n/**\n * Apply per-sample weights on the loss values from a number of samples.\n *\n * @param losses Loss tensor of shape `[batchSize]`.\n * @param sampleWeights Per-sample weight tensor of shape `[batchSize]`.\n * @returns Tensor of the same shape as`losses`.\n */\n\nfunction _standardizeWeights() {\n  _standardizeWeights = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(y, sampleWeight, classWeight, sampleWeightMode) {\n    var yClasses, yClassIndices, classSampleWeight;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(sampleWeight != null || sampleWeightMode != null)) {\n              _context.next = 2;\n              break;\n            }\n\n            throw new Error('Support sampleWeight is not implemented yet');\n\n          case 2:\n            if (!(classWeight != null)) {\n              _context.next = 15;\n              break;\n            }\n\n            // Apply class weights per sample.\n            yClasses = tidy(function () {\n              if (y.shape.length === 1) {\n                // Assume class indices.\n                return y.clone();\n              } else if (y.shape.length === 2) {\n                if (y.shape[1] > 1) {\n                  // Assume one-hot encoding of classes.\n                  var axis = 1;\n                  return y.argMax(axis);\n                } else if (y.shape[1] === 1) {\n                  // Class index.\n                  return y.reshape([y.shape[0]]);\n                } else {\n                  throw new Error(\"Encountered unexpected last-dimension size (\".concat(y.shape[1], \") \") + \"during handling of class weights. The size is expected to be \" + \">= 1.\");\n                }\n              } else {\n                throw new Error(\"Unexpected rank of target (y) tensor (\".concat(y.rank, \") during \") + \"handling of class weights. The rank is expected to be 1 or 2.\");\n              }\n            });\n            _context.t0 = Array;\n            _context.next = 7;\n            return yClasses.data();\n\n          case 7:\n            _context.t1 = _context.sent;\n            yClassIndices = _context.t0.from.call(_context.t0, _context.t1);\n            dispose(yClasses);\n            classSampleWeight = [];\n            yClassIndices.forEach(function (classIndex) {\n              if (classWeight[classIndex] == null) {\n                throw new Error(\"classWeight must contain all classes in the training data. \" + \"The class \".concat(classIndex, \" exists in the data but not in \") + \"classWeight\");\n              } else {\n                classSampleWeight.push(classWeight[classIndex]);\n              }\n            });\n            return _context.abrupt(\"return\", tensor1d(classSampleWeight, 'float32'));\n\n          case 15:\n            return _context.abrupt(\"return\", null);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _standardizeWeights.apply(this, arguments);\n}\n\nexport function computeWeightedLoss(losses, sampleWeights) {\n  return mul(losses, sampleWeights);\n}","import _asyncToGenerator from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _regeneratorRuntime from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/regenerator\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/**\n * Interfaces and methods for training models using TensorFlow.js datasets.\n */\nimport * as tfc from '@tensorflow/tfjs-core';\nimport { scalar } from '@tensorflow/tfjs-core';\nimport { configureCallbacks, standardizeCallbacks } from '../base_callbacks';\nimport { NotImplementedError, ValueError } from '../errors';\nimport { disposeTensorsInLogs } from '../logs';\nimport { singletonOrArray, toList } from '../utils/generic_utils';\nimport { standardizeClassWeights, standardizeWeights } from './training_utils'; // Default batch size used during tensor-based validation.\n\nvar DEFAULT_VALIDATION_BATCH_SIZE = 32;\n/**\n * Standardize the output of a dataset iterator for use by\n * LayersModel.fitDataset().\n *\n * @param model: A `tf.LayersModel` object.\n * @param iteratorOut The output of a dataset iterator. It is required to be\n *   an object of the form `{xs: TensorOrArrayOrMap, ys:\n * TensorOrArrayOrMap}`, where `TensorOrArrayOrMap` is a single `tf.Tensor`,\n * a `tf.Tensor[]`, or a flat map from string names to `tf.Tensor`s.\n * @returns A flat array of `tf.Tensor` objects: the input `tf.Tensor`s\n *   followed by the target `tf.Tensor`s.  When `tf.Tensor`s are provided\n *   as a map, the order in the resulting array is taken from the `inputNames`\n *   and `outputNames` of the model.\n */\n\nfunction standardizeDataIteratorOutput( // Type `model` as `any` here to avoid circular dependency w/\n// training.ts.\n// tslint:disable-next-line:no-any\nmodel, iteratorOut) {\n  var xs;\n  var ys;\n  var iteratorOutObj = iteratorOut;\n  xs = iteratorOutObj['xs'];\n  ys = iteratorOutObj['ys'];\n  tfc.util.assert(xs != null && ys != null, function () {\n    return 'A Dataset iterator for fitDataset() is expected to generate ' + 'objects of the form `{xs: xVal, ys: yVal}`, where the two ' + 'values may be `tf.Tensor`, an array of Tensors, or a map of ' + 'string to Tensor.  The provided Dataset instead generates ' + \"\".concat(iteratorOut);\n  });\n  var flattenedXs = flattenTensorOrArrayOrMap('input', model.inputNames, xs);\n  var flattenedYs = flattenTensorOrArrayOrMap('output', model.outputNames, ys);\n  var batchSize = flattenedXs[0].shape[0];\n  tfc.util.assert(flattenedXs.length === model.inputs.length, function () {\n    return \"LayersModel has \".concat(model.inputs.length, \" inputs, but the dataset \") + \"provides \".concat(flattenedXs.length, \" inputs.  (Expected input keys: \") + \"\".concat(JSON.stringify(model.inputNames), \")\");\n  });\n  tfc.util.assert(flattenedYs.length === model.outputs.length, function () {\n    return \"LayersModel has \".concat(model.outputs.length, \" outputs, but the dataset \") + \"provides \".concat(flattenedYs.length, \" outputs.  (Expected output keys: \") + \"\".concat(JSON.stringify(model.outputNames), \")\");\n  });\n\n  var _loop = function _loop(xIndex) {\n    tfc.util.assert(flattenedXs[xIndex].shape[0] === batchSize, function () {\n      return \"Batch size mismatch: input \" + \"\".concat(model.inputNames[xIndex], \" has \").concat(flattenedXs[xIndex].shape[0], \"; \") + \"expected  \".concat(batchSize, \" based on input \").concat(model.inputNames[0], \".\");\n    });\n  };\n\n  for (var xIndex = 0; xIndex < flattenedXs.length; xIndex++) {\n    _loop(xIndex);\n  }\n\n  var _loop2 = function _loop2(yIndex) {\n    tfc.util.assert(flattenedYs[yIndex].shape[0] === batchSize, function () {\n      return \"Batch size mismatch: output \" + \"\".concat(model.outputNames[yIndex], \" has \").concat(flattenedYs[yIndex].shape[0], \"; \") + \"expected  \".concat(batchSize, \" based on input \").concat(model.inputNames[0], \".\");\n    });\n  };\n\n  for (var yIndex = 0; yIndex < flattenedYs.length; yIndex++) {\n    _loop2(yIndex);\n  }\n\n  return {\n    xs: flattenedXs,\n    ys: flattenedYs\n  };\n}\n\nfunction flattenTensorOrArrayOrMap(inputOrOutput, names, values) {\n  if (values instanceof tfc.Tensor) {\n    return [values];\n  } else if (Array.isArray(values)) {\n    tfc.util.assert(values.length === names.length, function () {\n      return \"Received an array of \".concat(values.length, \" Tensors, but expected \").concat(names.length, \" to match the \").concat(inputOrOutput, \" keys \").concat(names, \".\");\n    });\n    return values;\n  } else {\n    var result = []; // Check that all the required keys are available.\n\n    var _iterator = _createForOfIteratorHelper(names),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var name = _step.value;\n\n        if (values[name] == null) {\n          throw new ValueError(\"The feature data generated by the dataset lacks the required \" + \"\".concat(inputOrOutput, \" key '\").concat(name, \"'.\"));\n        }\n\n        result.push(values[name]);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    return result;\n  }\n}\n\nfunction standardizeTensorValidationData(data) {\n  if (data.length === 3) {\n    throw new NotImplementedError('Validation with sample weights is not implemented yet.');\n  }\n\n  return {\n    xs: data[0],\n    ys: data[1]\n  };\n}\n\nexport function fitDataset(_x, _x2, _x3) {\n  return _fitDataset.apply(this, arguments);\n}\n/** Helper function that determines number of steps (batches) per epoch. */\n\nfunction _fitDataset() {\n  _fitDataset = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee( // Type `model` as `any` here to avoid circular dependency w/\n  // training.ts.\n  // tslint:disable-next-line:no-any\n  model, dataset, args) {\n    var hasBatchesPerEpoch, doValidation, valXs, valYs, validationData, trainFunction, outLabels, callbackMetrics, callbacks, verbose, _configureCallbacks, callbackList, history, epoch, dataIterator, epochLogs, stepsDone, batchIndex, iteratorOut, _standardizeDataItera, xs, ys, batchLogs, sampleWeights, standardClassWeights, i, ins, outs, _i, label, out, valOuts, _i2;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            hasBatchesPerEpoch = args.batchesPerEpoch != null;\n            tfc.util.assert(model.optimizer != null, function () {\n              return 'You must compile a model before training/testing. Use ' + 'LayersModel.compile(modelCompileConfig).';\n            });\n            tfc.util.assert(args != null, function () {\n              return \"For fitDataset(), the 2nd argument (config) is required, \" + \"but it is not provided in this call.\";\n            });\n            tfc.util.assert(args.epochs != null && args.epochs > 0 && Number.isInteger(args.epochs), function () {\n              return \"For fitDataset(), config.epochs is expected to be a positive \" + \"integer, but got \".concat(args.epochs);\n            });\n            tfc.util.assert(!hasBatchesPerEpoch || args.batchesPerEpoch > 0 && Number.isInteger(args.batchesPerEpoch), function () {\n              return \"For fitDataset(), config.batchesPerEpoch is expected to be a \" + \"positive integer if specified, but got \".concat(args.batchesPerEpoch);\n            });\n            tfc.util.assert( // tslint:disable-next-line:no-any\n            args['validationSplit'] == null, function () {\n              return '`validationSplit` is not supported by `fitDataset()`. ' + 'Use validationData instead.';\n            });\n\n            if (!model.isTraining) {\n              _context.next = 8;\n              break;\n            }\n\n            throw new Error('Cannot start training because another fit() call is ongoing.');\n\n          case 8:\n            model.isTraining = true;\n            _context.prev = 9;\n            doValidation = args.validationData != null;\n\n            if (doValidation) {\n              if (isDatasetObject(args.validationData)) {\n                tfc.util.assert(args.validationBatches == null || args.validationBatches > 0 && Number.isInteger(args.validationBatches), function () {\n                  return \"For fitDataset() with dataset-based validation, \" + \"config.validationBatches is expected not to be provided, \" + \"or to be a positive integer, \" + \"but got \".concat(args.validationBatches);\n                });\n              } else {\n                validationData = standardizeTensorValidationData(args.validationData);\n                valXs = validationData.xs;\n                valYs = validationData.ys;\n              }\n            }\n\n            trainFunction = model.makeTrainFunction();\n            outLabels = model.getDedupedMetricsNames();\n\n            if (doValidation) {\n              callbackMetrics = outLabels.slice().concat(outLabels.map(function (n) {\n                return 'val_' + n;\n              }));\n            } else {\n              callbackMetrics = outLabels.slice();\n            }\n\n            callbacks = standardizeCallbacks(args.callbacks, args.yieldEvery);\n            verbose = args.verbose == null ? 1 : args.verbose;\n            _configureCallbacks = configureCallbacks(callbacks, verbose, args.epochs, null, null, getStepsPerEpoch(dataset, args), null, // Batch size determined by the dataset itself.\n            doValidation, callbackMetrics), callbackList = _configureCallbacks.callbackList, history = _configureCallbacks.history;\n            callbackList.setModel(model);\n            model.history = history;\n            _context.next = 22;\n            return callbackList.onTrainBegin();\n\n          case 22:\n            model.stopTraining_ = false;\n            epoch = args.initialEpoch == null ? 0 : args.initialEpoch;\n            _context.next = 26;\n            return dataset.iterator();\n\n          case 26:\n            dataIterator = _context.sent;\n\n          case 27:\n            if (!(epoch < args.epochs)) {\n              _context.next = 98;\n              break;\n            }\n\n            epochLogs = {};\n            _context.next = 31;\n            return callbackList.onEpochBegin(epoch);\n\n          case 31:\n            stepsDone = 0;\n            batchIndex = 0;\n\n            if (hasBatchesPerEpoch) {\n              _context.next = 37;\n              break;\n            }\n\n            _context.next = 36;\n            return dataset.iterator();\n\n          case 36:\n            dataIterator = _context.sent;\n\n          case 37:\n            if (!(hasBatchesPerEpoch ? stepsDone < args.batchesPerEpoch : true)) {\n              _context.next = 91;\n              break;\n            }\n\n            _context.next = 40;\n            return dataIterator.next();\n\n          case 40:\n            iteratorOut = _context.sent;\n\n            if (!(hasBatchesPerEpoch && iteratorOut.done)) {\n              _context.next = 44;\n              break;\n            }\n\n            console.warn('You provided `batchesPerEpoch` as ' + \"\".concat(args.batchesPerEpoch, \", \") + 'but your dataset iterator ran out of data after ' + \"\".concat(stepsDone, \" batches; \") + 'interrupting training. Make sure that your ' + 'dataset can generate at least `batchesPerEpoch * epochs` ' + 'batches (in this case, ' + \"\".concat(args.batchesPerEpoch * args.epochs, \" batches). \") + 'You may need to use the repeat() function when building ' + 'your dataset.');\n            return _context.abrupt(\"break\", 91);\n\n          case 44:\n            if (!(iteratorOut.value != null)) {\n              _context.next = 73;\n              break;\n            }\n\n            _standardizeDataItera = standardizeDataIteratorOutput(model, iteratorOut.value), xs = _standardizeDataItera.xs, ys = _standardizeDataItera.ys;\n            batchLogs = {};\n            batchLogs['batch'] = batchIndex;\n            batchLogs['size'] = xs[0].shape[0];\n            _context.next = 51;\n            return callbackList.onBatchBegin(batchIndex, batchLogs);\n\n          case 51:\n            sampleWeights = [];\n\n            if (!(args.classWeight != null)) {\n              _context.next = 64;\n              break;\n            }\n\n            standardClassWeights = standardizeClassWeights(args.classWeight, model.outputNames);\n            i = 0;\n\n          case 55:\n            if (!(i < standardClassWeights.length)) {\n              _context.next = 64;\n              break;\n            }\n\n            _context.t0 = sampleWeights;\n            _context.next = 59;\n            return standardizeWeights(ys[i], null, standardClassWeights[i]);\n\n          case 59:\n            _context.t1 = _context.sent;\n\n            _context.t0.push.call(_context.t0, _context.t1);\n\n          case 61:\n            ++i;\n            _context.next = 55;\n            break;\n\n          case 64:\n            // Train on batch.\n            ins = xs.concat(ys).concat(sampleWeights);\n            outs = trainFunction(ins);\n            tfc.dispose(ins);\n\n            for (_i = 0; _i < outLabels.length; ++_i) {\n              label = outLabels[_i];\n              out = outs[_i];\n              batchLogs[label] = out;\n              tfc.keep(out);\n            }\n\n            _context.next = 70;\n            return callbackList.onBatchEnd(batchIndex, batchLogs);\n\n          case 70:\n            disposeTensorsInLogs(batchLogs);\n            batchIndex++;\n            stepsDone++;\n\n          case 73:\n            if (!(hasBatchesPerEpoch ? stepsDone >= args.batchesPerEpoch : iteratorOut.done)) {\n              _context.next = 87;\n              break;\n            }\n\n            if (!doValidation) {\n              _context.next = 86;\n              break;\n            }\n\n            valOuts = void 0;\n\n            if (!isDatasetObject(args.validationData)) {\n              _context.next = 84;\n              break;\n            }\n\n            _context.t2 = toList;\n            _context.next = 80;\n            return model.evaluateDataset(args.validationData, {\n              batches: args.validationBatches\n            });\n\n          case 80:\n            _context.t3 = _context.sent;\n            valOuts = (0, _context.t2)(_context.t3);\n            _context.next = 85;\n            break;\n\n          case 84:\n            valOuts = toList(model.evaluate(valXs, valYs, {\n              batchSize: args.validationBatchSize == null ? DEFAULT_VALIDATION_BATCH_SIZE : args.validationBatchSize,\n              verbose: 0\n            }));\n\n          case 85:\n            for (_i2 = 0; _i2 < model.metricsNames.length; ++_i2) {\n              epochLogs[\"val_\".concat(model.metricsNames[_i2])] = valOuts[_i2];\n            }\n\n          case 86:\n            return _context.abrupt(\"break\", 91);\n\n          case 87:\n            if (!model.stopTraining_) {\n              _context.next = 89;\n              break;\n            }\n\n            return _context.abrupt(\"break\", 91);\n\n          case 89:\n            _context.next = 37;\n            break;\n\n          case 91:\n            _context.next = 93;\n            return callbackList.onEpochEnd(epoch, epochLogs);\n\n          case 93:\n            epoch++;\n\n            if (!model.stopTraining_) {\n              _context.next = 96;\n              break;\n            }\n\n            return _context.abrupt(\"break\", 98);\n\n          case 96:\n            _context.next = 27;\n            break;\n\n          case 98:\n            _context.next = 100;\n            return callbackList.onTrainEnd();\n\n          case 100:\n            _context.next = 102;\n            return model.history.syncData();\n\n          case 102:\n            return _context.abrupt(\"return\", model.history);\n\n          case 103:\n            _context.prev = 103;\n            model.isTraining = false;\n            return _context.finish(103);\n\n          case 106:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[9,, 103, 106]]);\n  }));\n  return _fitDataset.apply(this, arguments);\n}\n\nfunction getStepsPerEpoch(dataset, args) {\n  // Attempt to determine # of batches in an epoch.\n  var stepsPerEpoch = null;\n\n  if (args.batchesPerEpoch != null) {\n    stepsPerEpoch = args.batchesPerEpoch;\n  } else if (Number.isFinite(dataset.size)) {\n    stepsPerEpoch = dataset.size;\n  }\n\n  return stepsPerEpoch;\n} // Check if provided object is a Dataset object by checking its .iterator\n// element.\n\n\nfunction isDatasetObject(dataset) {\n  return typeof dataset.iterator === 'function';\n} // Check if provided object is a LazyIterator object by checking it's .next\n// element.\n\n\nfunction isLazyIteratorObject(iterator) {\n  return typeof iterator.next === 'function';\n}\n\nexport function evaluateDataset(_x4, _x5, _x6) {\n  return _evaluateDataset.apply(this, arguments);\n}\n\nfunction _evaluateDataset() {\n  _evaluateDataset = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2( // Type `model` as `any` here to avoid circular dependency w/\n  // training.ts.\n  // tslint:disable-next-line:no-any\n  model, dataset, args) {\n    var hasBatches, f, outs, dataIterator, numExamples, batch, _loop3, _ret, i, oldScalar;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            args = args || {};\n            hasBatches = args.batches != null;\n            f = model.testFunction;\n            outs = [];\n\n            if (!(args.verbose > 0)) {\n              _context3.next = 6;\n              break;\n            }\n\n            throw new NotImplementedError('Verbose mode is not implemented yet.');\n\n          case 6:\n            tfc.util.assert(!hasBatches || args.batches > 0 && Number.isInteger(args.batches), function () {\n              return 'Test loop expects `batches` to be a positive integer, but ' + \"received \".concat(JSON.stringify(args.batches));\n            });\n\n            if (!isLazyIteratorObject(dataset)) {\n              _context3.next = 11;\n              break;\n            }\n\n            _context3.t0 = dataset;\n            _context3.next = 14;\n            break;\n\n          case 11:\n            _context3.next = 13;\n            return dataset.iterator();\n\n          case 13:\n            _context3.t0 = _context3.sent;\n\n          case 14:\n            dataIterator = _context3.t0;\n            // Keeps track of number of examples used in this evaluation.\n            numExamples = 0;\n            batch = 0;\n            _loop3 = /*#__PURE__*/_regeneratorRuntime.mark(function _loop3() {\n              var iteratorOut;\n              return _regeneratorRuntime.wrap(function _loop3$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      _context2.next = 2;\n                      return dataIterator.next();\n\n                    case 2:\n                      iteratorOut = _context2.sent;\n                      outs = tfc.tidy(function () {\n                        if (iteratorOut.value) {\n                          (function () {\n                            // TODO(cais): Once real dataset is available, use\n                            //   `map(x => standardizeDataIteratorOutput(model, x).map(f)`.\n                            var _standardizeDataItera2 = standardizeDataIteratorOutput(model, iteratorOut.value),\n                                xs = _standardizeDataItera2.xs,\n                                ys = _standardizeDataItera2.ys;\n\n                            var xsAndYs = xs.concat(ys);\n                            var batchOuts = tfc.tidy(function () {\n                              return f(xsAndYs);\n                            });\n                            tfc.dispose(xsAndYs);\n\n                            if (batch === 0) {\n                              for (var _i3 = 0; _i3 < batchOuts.length; ++_i3) {\n                                outs.push(scalar(0));\n                              }\n                            }\n\n                            var batchSize = xsAndYs[0].shape[0];\n\n                            var _loop4 = function _loop4(_i4) {\n                              var batchOut = batchOuts[_i4];\n                              var oldScalar = outs[_i4];\n                              outs[_i4] = tfc.tidy(function () {\n                                return tfc.add(outs[_i4], tfc.mul(batchSize, batchOut));\n                              });\n\n                              if (batch > 0) {\n                                tfc.dispose(oldScalar);\n                              }\n                            };\n\n                            for (var _i4 = 0; _i4 < batchOuts.length; ++_i4) {\n                              _loop4(_i4);\n                            }\n\n                            tfc.dispose(batchOuts);\n                            numExamples += batchSize;\n                            ++batch;\n                          })();\n                        }\n\n                        return outs;\n                      });\n\n                      if (!iteratorOut.done) {\n                        _context2.next = 7;\n                        break;\n                      }\n\n                      if (hasBatches) {\n                        console.warn('Your dataset iterator ran out of data during evaluateDataset(). ' + 'Interrupting evalution. Make sure that your ' + 'dataset can generate at least `batches` ' + \"batches (in this case, \".concat(args.batches, \" batches). \") + 'You may need to use the repeat() function when building ' + 'your dataset.');\n                      }\n\n                      return _context2.abrupt(\"return\", \"break\");\n\n                    case 7:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }\n              }, _loop3);\n            });\n\n          case 18:\n            if (!(hasBatches ? batch < args.batches : true)) {\n              _context3.next = 25;\n              break;\n            }\n\n            return _context3.delegateYield(_loop3(), \"t1\", 20);\n\n          case 20:\n            _ret = _context3.t1;\n\n            if (!(_ret === \"break\")) {\n              _context3.next = 23;\n              break;\n            }\n\n            return _context3.abrupt(\"break\", 25);\n\n          case 23:\n            _context3.next = 18;\n            break;\n\n          case 25:\n            for (i = 0; i < outs.length; ++i) {\n              oldScalar = outs[i];\n              outs[i] = tfc.div(outs[i], numExamples);\n              tfc.dispose(oldScalar);\n            }\n\n            return _context3.abrupt(\"return\", singletonOrArray(outs));\n\n          case 27:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _evaluateDataset.apply(this, arguments);\n}","import _asyncToGenerator from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _regeneratorRuntime from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/regenerator\";\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/**\n * Interfaces and methods for training models using tf.Tensor objects.\n */\nimport * as tfc from '@tensorflow/tfjs-core';\nimport { Tensor, tensor1d, util } from '@tensorflow/tfjs-core';\nimport { expandDims, gather, sliceAlongFirstAxis } from '../backend/tfjs_backend';\nimport { configureCallbacks, standardizeCallbacks } from '../base_callbacks';\nimport { NotImplementedError, ValueError } from '../errors';\nimport { disposeTensorsInLogs } from '../logs';\nimport { range } from '../utils/math_utils';\nexport function checkBatchSize(batchSize) {\n  tfc.util.assert(batchSize > 0 && Number.isInteger(batchSize), function () {\n    return \"batchSize is required to be a positive integer, but got \".concat(batchSize);\n  });\n}\n/**\n * Slice a Tensor or an Array of Tensors, by start and stop indices.\n *\n * Porting Note: The `_slice_arrays` function in PyKeras is covered by this\n *   function and `sliceArraysByIndices()` together.\n *\n * @param arrays: the input.\n * @param start: the starting index (inclusive).\n * @param stop: the stopping index (exclusive).\n * @returns The result of the slicing. If `arrays` is an `Array` of\n *   `tf.Tensor`s, the slicing will be applied to all elements of the `Array`\n *   in the same way.\n */\n\nexport function sliceArrays(arrays, start, stop) {\n  if (arrays == null) {\n    return [null];\n  } else if (Array.isArray(arrays)) {\n    return arrays.map(function (array) {\n      return sliceAlongFirstAxis(array, start, stop - start);\n    });\n  } else {\n    // Tensor.\n    return sliceAlongFirstAxis(arrays, start, stop - start);\n  }\n}\n/**\n * Slice a Tensor or an Array of Tensors, by random-order indices.\n *\n * Porting Note: The `_slice_arrays` function in PyKeras is covered by this\n *   function and `sliceArrays()` together.\n *\n * @param arrays The input `tf.Tensor` or `Array` of `tf.Tensor`s to slice.\n *   If an `Array` of `tf.Tensor`s, all `tf.Tensor`s will be sliced in the\n *   same fashion.\n * @param indices The indices to use for slicing along the first (batch)\n *   dimension.\n * @returns Result(s) of the slicing.\n */\n\nexport function sliceArraysByIndices(arrays, indices) {\n  return tfc.tidy(function () {\n    if (arrays == null) {\n      return null;\n    } else if (Array.isArray(arrays)) {\n      return arrays.map(function (array) {\n        return sliceArraysByIndices(array, indices);\n      });\n    } else {\n      // TODO(cais): indices should be a pre-constructed Tensor1D to avoid\n      //   tensor1d() calls.\n      return gather(arrays, indices.dtype === 'int32' ? indices : indices.toInt());\n    }\n  });\n}\n/**\n * Returns a list of batch indices (tuples of indices).\n * @param size: Integer, total size of the data to slice into batches.\n * @param batchSize: Integer, batch size.\n * @returns An Array of [batchStart, batchEnd] tuples. batchStart is\n *   inclusive; batchEnd is exclusive. I.e., each batch consists of indices x\n *   that satisfy batchStart <= x < batchEnd.\n */\n\nexport function makeBatches(size, batchSize) {\n  var output = [];\n  var batchStart = 0;\n  var batchEnd = null;\n\n  while (batchStart < size) {\n    batchEnd = batchStart + batchSize;\n\n    if (batchEnd >= size) {\n      batchEnd = size;\n    }\n\n    output.push([batchStart, batchEnd]);\n    batchStart = batchEnd;\n  }\n\n  return output;\n}\n/**\n * Abstract fit function for `f(ins)`.\n * @param f A Function returning a list of tensors. For training, this\n *   function is expected to perform the updates to the variables.\n * @param ins List of tensors to be fed to `f`.\n * @param outLabels List of strings, display names of the outputs of `f`.\n * @param batchSize Integer batch size or `== null` if unknown. Default : 32.\n * @param epochs Number of times to iterate over the data. Default : 1.\n * @param verbose Verbosity mode: 0, 1, or 2. Default: 1.\n * @param callbacks List of callbacks to be called during training.\n * @param valF Function to call for validation.\n * @param valIns List of tensors to be fed to `valF`.\n * @param shuffle Whether to shuffle the data at the beginning of every\n * epoch. Default : true.\n * @param callbackMetrics List of strings, the display names of the metrics\n *   passed to the callbacks. They should be the concatenation of the\n *   display names of the outputs of `f` and the list of display names\n *   of the outputs of `valF`.\n * @param initialEpoch Epoch at which to start training (useful for\n *   resuming a previous training run). Default : 0.\n * @param stepsPerEpoch Total number of steps (batches on samples) before\n *   declaring one epoch finished and starting the next epoch. Ignored with\n *   the default value of `undefined` or `null`.\n * @param validationSteps Number of steps to run validation for (only if\n *   doing validation from data tensors). Not applicable for tfjs-layers.\n * @returns A `History` object.\n */\n\nfunction fitLoop(_x, _x2, _x3, _x4, _x5, _x6, _x7, _x8, _x9, _x10, _x11, _x12, _x13, _x14, _x15) {\n  return _fitLoop.apply(this, arguments);\n}\n\nfunction _fitLoop() {\n  _fitLoop = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2( // Type `model` as `any` here to avoid circular dependency w/ training.ts.\n  // tslint:disable-next-line:no-any\n  model, f, ins, outLabels, batchSize, epochs, verbose, callbacks, valF, valIns, shuffle, callbackMetrics, initialEpoch, stepsPerEpoch, validationSteps) {\n    var doValidation, numTrainSamples, indexArray, _configureCallbacks, callbackList, history, _loop, epoch, _ret;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            if (batchSize == null) {\n              batchSize = 32;\n            }\n\n            if (epochs == null) {\n              epochs = 1;\n            }\n\n            if (shuffle == null) {\n              shuffle = true;\n            }\n\n            if (initialEpoch == null) {\n              initialEpoch = 0;\n            } // TODO(cais): Change const to let below when implementing validation.\n\n\n            doValidation = false;\n\n            if (valF != null && valIns != null) {\n              doValidation = true; // TODO(cais): verbose message.\n            }\n\n            if (!(validationSteps != null)) {\n              _context4.next = 10;\n              break;\n            }\n\n            doValidation = true;\n\n            if (!(stepsPerEpoch == null)) {\n              _context4.next = 10;\n              break;\n            }\n\n            throw new ValueError('Can only use `validationSteps` when doing step-wise training, ' + 'i.e., `stepsPerEpoch` must be set.');\n\n          case 10:\n            numTrainSamples = model.checkNumSamples(ins, batchSize, stepsPerEpoch, 'steps_per_epoch');\n\n            if (numTrainSamples != null) {\n              indexArray = range(0, numTrainSamples);\n            }\n\n            if (verbose == null) {\n              verbose = 1;\n            }\n\n            _configureCallbacks = configureCallbacks(callbacks, verbose, epochs, initialEpoch, numTrainSamples, stepsPerEpoch, batchSize, doValidation, callbackMetrics), callbackList = _configureCallbacks.callbackList, history = _configureCallbacks.history;\n            callbackList.setModel(model);\n            model.history = history;\n            _context4.next = 18;\n            return callbackList.onTrainBegin();\n\n          case 18:\n            model.stopTraining_ = false; // TODO(cais): Take care of callbacks.validation_data as in PyKeras.\n            // TODO(cais): Pre-convert feeds for performance as in PyKeras.\n\n            _loop = /*#__PURE__*/_regeneratorRuntime.mark(function _loop(epoch) {\n              var epochLogs;\n              return _regeneratorRuntime.wrap(function _loop$(_context3) {\n                while (1) {\n                  switch (_context3.prev = _context3.next) {\n                    case 0:\n                      _context3.next = 2;\n                      return callbackList.onEpochBegin(epoch);\n\n                    case 2:\n                      epochLogs = {};\n\n                      if (!(stepsPerEpoch != null)) {\n                        _context3.next = 7;\n                        break;\n                      }\n\n                      throw new NotImplementedError('stepsPerEpoch mode is not implemented yet.');\n\n                    case 7:\n                      return _context3.delegateYield( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                        var epochIndexArray1D, batches, _loop2, batchIndex, _ret2;\n\n                        return _regeneratorRuntime.wrap(function _callee$(_context2) {\n                          while (1) {\n                            switch (_context2.prev = _context2.next) {\n                              case 0:\n                                if (!(shuffle === 'batch')) {\n                                  _context2.next = 4;\n                                  break;\n                                }\n\n                                throw new NotImplementedError('batch shuffling is not implemneted yet');\n\n                              case 4:\n                                if (shuffle) {\n                                  util.shuffle(indexArray);\n                                }\n\n                              case 5:\n                                // Convert the potentially shuffled indices to Tensor1D, to avoid the\n                                // cost of repeated creation of Array1Ds later on.\n                                epochIndexArray1D = tensor1d(indexArray);\n                                batches = makeBatches(numTrainSamples, batchSize);\n                                _loop2 = /*#__PURE__*/_regeneratorRuntime.mark(function _loop2(batchIndex) {\n                                  var batchLogs;\n                                  return _regeneratorRuntime.wrap(function _loop2$(_context) {\n                                    while (1) {\n                                      switch (_context.prev = _context.next) {\n                                        case 0:\n                                          batchLogs = {};\n                                          _context.next = 3;\n                                          return callbackList.onBatchBegin(batchIndex, batchLogs);\n\n                                        case 3:\n                                          tfc.tidy(function () {\n                                            var batchStart = batches[batchIndex][0];\n                                            var batchEnd = batches[batchIndex][1];\n                                            var batchIds = sliceAlongFirstAxis(epochIndexArray1D, batchStart, batchEnd - batchStart);\n                                            batchLogs['batch'] = batchIndex;\n                                            batchLogs['size'] = batchEnd - batchStart; // TODO(cais): In ins, train flag can be a number, instead of an\n                                            //   Tensor? Do we need to handle this in tfjs-layers?\n\n                                            var insBatch = sliceArraysByIndices(ins, batchIds);\n                                            var outs = f(insBatch);\n\n                                            for (var i = 0; i < outLabels.length; ++i) {\n                                              var label = outLabels[i];\n                                              var out = outs[i];\n                                              batchLogs[label] = out;\n                                              tfc.keep(out); // TODO(cais): Use scope() to avoid ownership.\n                                            }\n\n                                            if (batchIndex === batches.length - 1) {\n                                              // Last batch.\n                                              if (doValidation) {\n                                                var valOuts = model.testLoop(valF, valIns, batchSize); // Porting Notes: In tfjs-layers, valOuts is always an Array.\n\n                                                for (var _i = 0; _i < outLabels.length; ++_i) {\n                                                  var _label = outLabels[_i];\n                                                  var _out = valOuts[_i];\n                                                  tfc.keep(_out); // TODO(cais): Use scope() to avoid ownership.\n\n                                                  epochLogs['val_' + _label] = _out;\n                                                }\n                                              }\n                                            }\n                                          });\n                                          _context.next = 6;\n                                          return callbackList.onBatchEnd(batchIndex, batchLogs);\n\n                                        case 6:\n                                          disposeTensorsInLogs(batchLogs);\n\n                                          if (!model.stopTraining_) {\n                                            _context.next = 9;\n                                            break;\n                                          }\n\n                                          return _context.abrupt(\"return\", \"break\");\n\n                                        case 9:\n                                        case \"end\":\n                                          return _context.stop();\n                                      }\n                                    }\n                                  }, _loop2);\n                                });\n                                batchIndex = 0;\n\n                              case 9:\n                                if (!(batchIndex < batches.length)) {\n                                  _context2.next = 17;\n                                  break;\n                                }\n\n                                return _context2.delegateYield(_loop2(batchIndex), \"t0\", 11);\n\n                              case 11:\n                                _ret2 = _context2.t0;\n\n                                if (!(_ret2 === \"break\")) {\n                                  _context2.next = 14;\n                                  break;\n                                }\n\n                                return _context2.abrupt(\"break\", 17);\n\n                              case 14:\n                                ++batchIndex;\n                                _context2.next = 9;\n                                break;\n\n                              case 17:\n                                epochIndexArray1D.dispose();\n\n                              case 18:\n                              case \"end\":\n                                return _context2.stop();\n                            }\n                          }\n                        }, _callee);\n                      })(), \"t0\", 8);\n\n                    case 8:\n                      _context3.next = 10;\n                      return callbackList.onEpochEnd(epoch, epochLogs);\n\n                    case 10:\n                      if (!model.stopTraining_) {\n                        _context3.next = 12;\n                        break;\n                      }\n\n                      return _context3.abrupt(\"return\", \"break\");\n\n                    case 12:\n                    case \"end\":\n                      return _context3.stop();\n                  }\n                }\n              }, _loop);\n            });\n            epoch = initialEpoch;\n\n          case 21:\n            if (!(epoch < epochs)) {\n              _context4.next = 29;\n              break;\n            }\n\n            return _context4.delegateYield(_loop(epoch), \"t0\", 23);\n\n          case 23:\n            _ret = _context4.t0;\n\n            if (!(_ret === \"break\")) {\n              _context4.next = 26;\n              break;\n            }\n\n            return _context4.abrupt(\"break\", 29);\n\n          case 26:\n            ++epoch;\n            _context4.next = 21;\n            break;\n\n          case 29:\n            _context4.next = 31;\n            return callbackList.onTrainEnd();\n\n          case 31:\n            _context4.next = 33;\n            return model.history.syncData();\n\n          case 33:\n            return _context4.abrupt(\"return\", model.history);\n\n          case 34:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _fitLoop.apply(this, arguments);\n}\n\nexport function fitTensors(_x16, _x17, _x18) {\n  return _fitTensors.apply(this, arguments);\n}\n/**\n * Ensure tensors all have a rank of at least 2.\n *\n * If a tensor has a rank of 1, it is dimension-expanded to rank 2.\n * If any tensor has a rank of 0 (i.e., is a scalar), an error will be thrown.\n */\n\nfunction _fitTensors() {\n  _fitTensors = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3( // Type `model` as `any` here to avoid circular dependency w/ training.ts.\n  // tslint:disable-next-line:no-any\n  model, x, y) {\n    var args,\n        inputs,\n        targets,\n        inputValX,\n        inputValY,\n        valX,\n        valY,\n        sampleWeights,\n        batchSize,\n        checkBatchAxis,\n        standardizedOuts,\n        doValidation,\n        valIns,\n        _checkBatchAxis,\n        valStandardized,\n        splitAt,\n        originalBatchSize,\n        ins,\n        trainFunction,\n        outLabels,\n        valFunction,\n        callbackMetrics,\n        callbacks,\n        out,\n        _args5 = arguments;\n\n    return _regeneratorRuntime.wrap(function _callee3$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            args = _args5.length > 3 && _args5[3] !== undefined ? _args5[3] : {};\n\n            if (!model.isTraining) {\n              _context5.next = 3;\n              break;\n            }\n\n            throw new Error('Cannot start training because another fit() call is ongoing.');\n\n          case 3:\n            model.isTraining = true;\n            _context5.prev = 4;\n            batchSize = args.batchSize == null ? 32 : args.batchSize;\n            checkBatchSize(batchSize); // Validate user data.\n            // TODO(cais): Support sampleWeight.\n\n            checkBatchAxis = false;\n            _context5.next = 10;\n            return model.standardizeUserData(x, y, args.sampleWeight, args.classWeight, checkBatchAxis, batchSize);\n\n          case 10:\n            standardizedOuts = _context5.sent;\n            inputs = standardizedOuts[0];\n            targets = standardizedOuts[1];\n            sampleWeights = standardizedOuts[2]; // Prepare validation data.\n\n            doValidation = false;\n\n            if (!(args.validationData != null && args.validationData.length > 0)) {\n              _context5.next = 36;\n              break;\n            }\n\n            doValidation = true;\n\n            if (!(args.validationData.length === 2)) {\n              _context5.next = 22;\n              break;\n            }\n\n            // config.validationData consists of valX and valY.\n            inputValX = args.validationData[0];\n            inputValY = args.validationData[1];\n            _context5.next = 27;\n            break;\n\n          case 22:\n            if (!(args.validationData.length === 3)) {\n              _context5.next = 26;\n              break;\n            }\n\n            throw new NotImplementedError('validationData including sample weights is not supported yet.');\n\n          case 26:\n            throw new ValueError(\"When passing validation data, it must contain 2 (valX, valY) \" + \"or 3 (valX, valY, valSampleWeight) items; \" + \"\".concat(args.validationData, \" is invalid.\"));\n\n          case 27:\n            _checkBatchAxis = true;\n            _context5.next = 30;\n            return model.standardizeUserData(inputValX, inputValY, null,\n            /** Unused sample weights. */\n            null,\n            /** Unused class weights. */\n            _checkBatchAxis, batchSize);\n\n          case 30:\n            valStandardized = _context5.sent;\n            valX = valStandardized[0];\n            valY = valStandardized[1];\n            valIns = valX.concat(valY); // TODO(cais): Add useLearningPhase data properly.\n\n            _context5.next = 37;\n            break;\n\n          case 36:\n            if (args.validationSplit != null && args.validationSplit > 0 && args.validationSplit < 1) {\n              doValidation = true; // Porting Note: In tfjs-layers, inputs[0] is always a Tensor.\n\n              splitAt = Math.floor(inputs[0].shape[0] * (1 - args.validationSplit));\n              originalBatchSize = inputs[0].shape[0];\n              valX = sliceArrays(inputs, splitAt, originalBatchSize);\n              inputs = sliceArrays(inputs, 0, splitAt);\n              valY = sliceArrays(targets, splitAt, originalBatchSize);\n              targets = sliceArrays(targets, 0, splitAt); // TODO(cais): Once sampleWeights becomes available, slice it to get\n              //   valSampleWeights.\n\n              valIns = valX.concat(valY); // TODO(cais): Add useLearningPhase data properly.\n            } else if (args.validationSteps != null) {\n              doValidation = true; // TODO(cais): Add useLearningPhase.\n            }\n\n          case 37:\n            ins = inputs.concat(targets).concat(sampleWeights);\n            model.checkTrainableWeightsConsistency(); // TODO(cais): Handle use_learning_phase and learning_phase?\n            // Porting Note: Here we see a key deviation of tfjs-layers from\n            // Keras.\n            //  Due to the imperative nature of tfjs-layers' backend (tfjs-core),\n            //  we do not construct symbolic computation graphs to embody the\n            //  training process. Instead, we define a function that performs the\n            //  training action. In PyKeras, the data (inputs and targets) are fed\n            //  through graph placeholders. In tfjs-layers, the data are fed as\n            //  function arguments. Since the function are defined below in the\n            //  scope, we don't have equivalents of PyKeras's\n            //  `_make_train_funciton`.\n\n            trainFunction = model.makeTrainFunction();\n            outLabels = model.getDedupedMetricsNames();\n\n            if (doValidation) {\n              model.makeTestFunction();\n              valFunction = model.testFunction;\n              callbackMetrics = outLabels.slice().concat(outLabels.map(function (n) {\n                return 'val_' + n;\n              }));\n            } else {\n              valFunction = null;\n              valIns = [];\n              callbackMetrics = outLabels.slice();\n            }\n\n            callbacks = standardizeCallbacks(args.callbacks, args.yieldEvery);\n            _context5.next = 45;\n            return fitLoop(model, trainFunction, ins, outLabels, batchSize, args.epochs, args.verbose, callbacks, valFunction, valIns, args.shuffle, callbackMetrics, args.initialEpoch, null, null);\n\n          case 45:\n            out = _context5.sent;\n            return _context5.abrupt(\"return\", out);\n\n          case 47:\n            _context5.prev = 47;\n            model.isTraining = false; // Memory clean up.\n\n            disposeNewTensors(inputs, x);\n            disposeNewTensors(targets, y);\n            disposeNewTensors(valX, inputValX);\n            disposeNewTensors(valY, inputValY);\n\n            if (sampleWeights != null) {\n              tfc.dispose(sampleWeights);\n            }\n\n            return _context5.finish(47);\n\n          case 55:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee3, null, [[4,, 47, 55]]);\n  }));\n  return _fitTensors.apply(this, arguments);\n}\n\nexport function ensureTensorsRank2OrHigher(tensors) {\n  var outs = [];\n\n  if (tensors instanceof Tensor) {\n    tensors = [tensors];\n  } // Make Tensors at least 2D.\n\n\n  for (var i = 0; i < tensors.length; ++i) {\n    var tensor = tensors[i];\n\n    if (tensor.rank === 1) {\n      outs.push(expandDims(tensor, 1));\n    } else if (tensor.rank === 0) {\n      throw new Error('Expected tensor to be at least 1D, but received a 0D tensor ' + '(scalar).');\n    } else {\n      outs.push(tensor);\n    }\n  }\n\n  return outs;\n}\n/**\n * Compare a set of tensors with a reference (old) set, discard the ones\n * in the new set that are not present in the reference set.\n *\n * This method is used for memory clenaup during calls such as\n * LayersModel.fit().\n *\n * @param tensors New set which may contain Tensors not present in\n *   `refTensors`.\n * @param refTensors Reference Tensor set.\n */\n// TODO(cais, kangyizhang): Deduplicate with tfjs-data.\n\nexport function disposeNewTensors(tensors, refTensors) {\n  if (tensors == null) {\n    return;\n  }\n\n  var oldTensorIds = [];\n\n  if (refTensors instanceof Tensor) {\n    oldTensorIds.push(refTensors.id);\n  } else if (Array.isArray(refTensors)) {\n    refTensors.forEach(function (t) {\n      return oldTensorIds.push(t.id);\n    });\n  } else if (refTensors != null) {\n    // `oldTensors` is a map from string name to Tensor.\n    for (var name in refTensors) {\n      var oldTensor = refTensors[name];\n      oldTensorIds.push(oldTensor.id);\n    }\n  }\n\n  var tensorsToDispose = [];\n\n  if (tensors instanceof Tensor) {\n    if (oldTensorIds.indexOf(tensors.id) === -1) {\n      tensorsToDispose.push(tensors);\n    }\n  } else if (Array.isArray(tensors)) {\n    tensors.forEach(function (t) {\n      if (oldTensorIds.indexOf(t.id) === -1) {\n        tensorsToDispose.push(t);\n      }\n    });\n  } else if (tensors != null) {\n    // `oldTensors` is a map from string name to Tensor.\n    for (var _name in tensors) {\n      var tensor = tensors[_name];\n\n      if (oldTensorIds.indexOf(tensor.id) === -1) {\n        tensorsToDispose.push(tensor);\n      }\n    }\n  }\n\n  tensorsToDispose.forEach(function (t) {\n    if (!t.isDisposed) {\n      t.dispose();\n    }\n  });\n}","import _toConsumableArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/get\";\nimport _inherits from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _regeneratorRuntime from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/* Original Source: engine/training.py */\nimport * as tfc from '@tensorflow/tfjs-core';\nimport { io, Optimizer, scalar, serialization, Tensor, tensor1d, util } from '@tensorflow/tfjs-core';\nimport * as K from '../backend/tfjs_backend';\nimport { nameScope } from '../common';\nimport { NotImplementedError, RuntimeError, ValueError } from '../errors';\nimport { deserialize } from '../layers/serialization';\nimport * as losses from '../losses';\nimport * as Metrics from '../metrics';\nimport * as optimizers from '../optimizers';\nimport { checkUserDefinedMetadata } from '../user_defined_metadata';\nimport { count, pyListRepeat, singletonOrArray, toCamelCase, toSnakeCase, unique } from '../utils/generic_utils';\nimport { printSummary } from '../utils/layer_utils';\nimport { range } from '../utils/math_utils';\nimport { convertPythonicToTs } from '../utils/serialization_utils';\nimport { version } from '../version';\nimport { Container } from './container';\nimport { execute as _execute, FeedDict } from './executor';\nimport { evaluateDataset as _evaluateDataset, fitDataset as _fitDataset } from './training_dataset';\nimport { checkBatchSize, disposeNewTensors, ensureTensorsRank2OrHigher, fitTensors, makeBatches, sliceArrays, sliceArraysByIndices } from './training_tensors';\nimport { computeWeightedLoss, standardizeClassWeights, standardizeWeights } from './training_utils';\n/**\n * Helper function for polymorphic input data: 1. singleton Tensor.\n */\n\nexport function isDataTensor(x) {\n  return x instanceof Tensor;\n}\n/**\n * Helper function for polymorphic input data: 2. Array of Tensor.\n */\n\nexport function isDataArray(x) {\n  return Array.isArray(x);\n}\n/**\n * Helper function for polymorphic input data: 3. \"dict\" of Tensor.\n */\n\nexport function isDataDict(x) {\n  return !isDataTensor(x) && !isDataArray(x);\n}\n/**\n * Normalizes inputs and targets provided by users.\n * @param data User-provided input data (polymorphic).\n * @param names An Array of expected Tensor names.\n * @param shapes Optional Array of expected Tensor shapes.\n * @param checkBatchAxis Whether to check that the batch axis of the arrays\n *   match  the expected value found in `shapes`.\n * @param exceptionPrefix String prefix used for exception formatting.\n * @returns List of standardized input Tensors (one Tensor per model input).\n * @throws ValueError: in case of improperly formatted user data.\n */\n\nexport function standardizeInputData(data, names, shapes) {\n  var checkBatchAxis = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  var exceptionPrefix = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : '';\n\n  if (names == null || names.length === 0) {\n    // Check for the case where the model expected no data, but some data got\n    // sent.\n    if (data != null) {\n      var gotUnexpectedData = false;\n\n      if (isDataArray(data) && data.length > 0) {\n        gotUnexpectedData = true;\n      } else if (isDataDict(data)) {\n        for (var key in data) {\n          if (data.hasOwnProperty(key)) {\n            gotUnexpectedData = true;\n            break;\n          }\n        }\n      } else {\n        // `data` is a singleton Tensor in this case.\n        gotUnexpectedData = true;\n      }\n\n      if (gotUnexpectedData) {\n        throw new ValueError(\"Error when checking model \".concat(exceptionPrefix, \" expected no data, \") + \"but got \".concat(data));\n      }\n    }\n\n    return [];\n  }\n\n  if (data == null) {\n    return names.map(function (name) {\n      return null;\n    });\n  }\n\n  var arrays;\n\n  if (isDataDict(data)) {\n    data = data;\n    arrays = [];\n\n    var _iterator = _createForOfIteratorHelper(names),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var name = _step.value;\n\n        if (data[name] == null) {\n          throw new ValueError(\"No data provided for \\\"\".concat(name, \"\\\". Need data for each key in: \") + \"\".concat(names));\n        }\n\n        arrays.push(data[name]);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  } else if (isDataArray(data)) {\n    data = data;\n\n    if (data.length !== names.length) {\n      throw new ValueError(\"Error when checking model \".concat(exceptionPrefix, \": the Array of \") + \"Tensors that you are passing to your model is not the size the \" + \"model expected. Expected to see \".concat(names.length, \" Tensor(s), but \") + \"instead got the following list of Tensor(s): \".concat(data));\n    }\n\n    arrays = data;\n  } else {\n    data = data;\n\n    if (names.length > 1) {\n      throw new ValueError(\"The model \".concat(exceptionPrefix, \" expects \").concat(names.length, \" Tensor(s), \") + \"but only received one Tensor. Found: Tensor with shape \".concat(data.shape));\n    }\n\n    arrays = [data];\n  }\n\n  arrays = ensureTensorsRank2OrHigher(arrays); // Check shape compatibility.\n\n  if (shapes != null) {\n    for (var i = 0; i < names.length; ++i) {\n      if (shapes[i] == null) {\n        continue;\n      }\n\n      var array = arrays[i];\n\n      if (array.shape.length !== shapes[i].length) {\n        throw new ValueError(\"Error when checking \".concat(exceptionPrefix, \": expected \").concat(names[i], \" \") + \"to have \".concat(shapes[i].length, \" dimension(s). but got array with \") + \"shape \".concat(array.shape));\n      }\n\n      for (var j = 0; j < shapes[i].length; ++j) {\n        if (j === 0 && !checkBatchAxis) {\n          // Skip the first (batch) axis.\n          continue;\n        }\n\n        var dim = array.shape[j];\n        var refDim = shapes[i][j];\n\n        if (refDim != null && refDim >= 0 && dim !== refDim) {\n          throw new ValueError(\"Error when checking \".concat(exceptionPrefix, \": expected \").concat(names[i], \" \") + \"to have shape [\".concat(shapes[i], \"], but got array with shape \") + \"[\".concat(array.shape, \"].\"));\n        }\n      }\n    }\n  }\n\n  return arrays;\n}\n/**\n * User input validation for Tensors.\n * @param inputs `Array` of `tf.Tensor`s for inputs.\n * @param targets `Array` of `tf.Tensor`s for targets.\n * @param weights Optional `Array` of `tf.Tensor`s for sample weights.\n * @throws ValueError: in case of incorrectly formatted data.\n */\n\nexport function checkArrayLengths(inputs, targets, weights) {\n  var setX = unique(inputs.map(function (input) {\n    return input.shape[0];\n  }));\n  setX.sort();\n  var setY = unique(targets.map(function (target) {\n    return target.shape[0];\n  }));\n  setY.sort(); // TODO(cais): Check `weights` as well.\n\n  if (setX.length > 1) {\n    throw new ValueError(\"All input Tensors (x) should have the same number of samples. \" + \"Got array shapes: \" + \"\".concat(JSON.stringify(inputs.map(function (input) {\n      return input.shape;\n    }))));\n  }\n\n  if (setY.length > 1) {\n    throw new ValueError(\"All target Tensors (y) should have the same number of samples. \" + \"Got array shapes: \" + \"\".concat(JSON.stringify(targets.map(function (target) {\n      return target.shape;\n    }))));\n  }\n\n  if (setX.length > 0 && setY.length > 0 && !util.arraysEqual(setX, setY)) {\n    throw new ValueError(\"Input Tensors should have the same number of samples as target \" + \"Tensors. Found \".concat(setX[0], \" input sample(s) and \").concat(setY[0], \" target \") + \"sample(s).\");\n  }\n}\n/**\n * Validation on the compatibility of targes and loss functions.\n *\n * This helps prevent users from using loss functions incorrectly.\n *\n * @param targets `Array` of `tf.Tensor`s of targets.\n * @param lossFns `Array` of loss functions.\n * @param outputShapes `Array` of shapes of model outputs.\n */\n\nfunction checkLossAndTargetCompatibility(targets, lossFns, outputShapes) {\n  // TODO(cais): Dedicated test coverage?\n  var keyLosses = [losses.meanSquaredError, losses.binaryCrossentropy, losses.categoricalCrossentropy];\n\n  for (var i = 0; i < targets.length; ++i) {\n    var y = targets[i];\n    var loss = lossFns[i];\n    var shape = outputShapes[i];\n\n    if (loss == null) {\n      continue;\n    }\n\n    if (loss === losses.categoricalCrossentropy) {\n      if (y.shape[y.shape.length - 1] === 1) {\n        throw new ValueError(\"You are passing a target array of shape \".concat(y.shape, \" while using \") + \"a loss 'categorical_crossentropy'. 'categorical_crossentropy'\" + \"expects targets to be binary matrices (1s and 0s) of shape \" + \"[samples, classes].\"); // TODO(cais): Example code in error message.\n      }\n    }\n\n    if (keyLosses.indexOf(loss) !== -1) {\n      var slicedYShape = y.shape.slice(1);\n      var slicedShape = shape.slice(1);\n\n      for (var j = 0; j < slicedYShape.length; ++j) {\n        var targetDim = slicedYShape[j];\n        var outDim = slicedShape[j];\n\n        if (outDim != null && targetDim !== outDim) {\n          throw new ValueError(\"A target Tensor with shape \".concat(y.shape, \" was passed for an \") + \"output of shape \".concat(shape, \", while using a loss function that \") + \"expects targets to have the same shape as the output.\");\n        }\n      }\n    }\n  }\n}\n/**\n * Check inputs provided by the user.\n *\n * Porting Note: This corresponds to _standardize_input_data() in Python\n *   Keras. Because of the strong typing in TF.js, we do not need to convert\n *   the data. Specifically:\n *   1) in PyKeras, `data` can be `DataFrame` instances from pandas, for\n *      example. We don't need to worry about that here because there is no\n *      widely popular javascript/typesdcript equivalent of pandas (so far).\n *      If one becomes available in the future, we can add support.\n *   2) in PyKeras, inputs can be Python dict. But here we are stipulating\n * that the data is either a single `tf.Tensor` or an Array of `tf.Tensor`s. We\n * may add support for `Object` data inputs in the future when the need\n * arises.\n *\n * Instead, we perform basic checks for number of parameters and shapes.\n *\n * @param data: The input data.\n * @param names: Name for the inputs, from the model.\n * @param shapes: Expected shapes for the input data, from the model.\n * @param checkBatchAxis: Whether the size along the batch axis (i.e., the\n *   first dimension) will be checked for matching.\n * @param exceptionPrefix: Execption prefix message, used in generating error\n *   messages.\n * @throws ValueError: on incorrect number of inputs or mismatches in shapes.\n */\n\n\nfunction checkInputData(data, names, shapes) {\n  var checkBatchAxis = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  var exceptionPrefix = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : '';\n  var arrays;\n\n  if (Array.isArray(data)) {\n    if (data.length !== names.length) {\n      throw new ValueError(\"Error when checking model \".concat(exceptionPrefix, \": the Array of \") + \"Tensors that you are passing to your model is not the size the \" + \"the model expected. Expected to see \".concat(names.length, \" Tensor(s),\") + \" but instead got \".concat(data.length, \" Tensors(s).\"));\n    }\n\n    arrays = data;\n  } else {\n    if (names.length > 1) {\n      throw new ValueError(\"The model expects \".concat(names.length, \" \").concat(exceptionPrefix, \" Tensors, \") + \"but only received one Tensor. Found: array with shape \" + \"\".concat(JSON.stringify(data.shape), \".\"));\n    }\n\n    arrays = [data];\n  }\n\n  if (shapes != null) {\n    for (var i = 0; i < names.length; ++i) {\n      if (shapes[i] == null) {\n        continue;\n      }\n\n      var array = arrays[i];\n\n      if (array.shape.length !== shapes[i].length) {\n        throw new ValueError(\"Error when checking \".concat(exceptionPrefix, \": expected \").concat(names[i], \" \") + \"to have \".concat(shapes[i].length, \" dimension(s), but got array with \") + \"shape \".concat(JSON.stringify(array.shape)));\n      }\n\n      for (var j = 0; j < shapes[i].length; ++j) {\n        if (j === 0 && !checkBatchAxis) {\n          continue;\n        }\n\n        var dim = array.shape[j];\n        var refDim = shapes[i][j];\n\n        if (refDim != null) {\n          if (refDim !== dim) {\n            throw new ValueError(\"Error when checking \".concat(exceptionPrefix, \": expected \") + \"\".concat(names[i], \" to have shape \").concat(JSON.stringify(shapes[i]), \" but \") + \"got array with shape \".concat(JSON.stringify(array.shape), \".\"));\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Maps metric functions to model outputs.\n * @param metrics An shortcut strings name, metric function, `Array` or dict\n *   (`Object`) of metric functions.\n * @param outputNames An `Array` of the names of model outputs.\n * @returns An `Array` (one entry per model output) of `Array` of metric\n *   functions. For instance, if the model has 2 outputs, and for the first\n *   output we want to compute `binaryAccuracy` and `binaryCrossentropy`,\n *   and just `binaryAccuracy` for the second output, the `Array` would look\n *   like:\n *     `[[binaryAccuracy, binaryCrossentropy],  [binaryAccuracy]]`\n * @throws TypeError: incompatible metrics format.\n */\n\n\nexport function collectMetrics(metrics, outputNames) {\n  if (metrics == null || Array.isArray(metrics) && metrics.length === 0) {\n    return outputNames.map(function (name) {\n      return [];\n    });\n  }\n\n  var wrappedMetrics;\n\n  if (typeof metrics === 'string' || typeof metrics === 'function') {\n    wrappedMetrics = [metrics];\n  } else if (Array.isArray(metrics) || typeof metrics === 'object') {\n    wrappedMetrics = metrics;\n  } else {\n    throw new TypeError('Type of metrics argument not understood. Expected an string,' + \"function, Array, or Object, found: \".concat(metrics));\n  }\n\n  if (Array.isArray(wrappedMetrics)) {\n    // We then apply all metrics to all outputs.\n    return outputNames.map(function (name) {\n      return wrappedMetrics;\n    });\n  } else {\n    // In this case, metrics is a dict.\n    var nestedMetrics = [];\n\n    var _iterator2 = _createForOfIteratorHelper(outputNames),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var name = _step2.value;\n        var outputMetrics = wrappedMetrics.hasOwnProperty(name) ? wrappedMetrics[name] : [];\n\n        if (!Array.isArray(outputMetrics)) {\n          outputMetrics = [outputMetrics];\n        }\n\n        nestedMetrics.push(outputMetrics);\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n\n    return nestedMetrics;\n  }\n}\nvar LAYERS_MODEL_FORMAT_NAME = 'layers-model';\n/**\n * A `tf.LayersModel` is a directed, acyclic graph of `tf.Layer`s plus methods\n * for training, evaluation, prediction and saving.\n *\n * `tf.LayersModel` is the basic unit of training, inference and evaluation in\n * TensorFlow.js. To create a `tf.LayersModel`, use `tf.LayersModel`.\n *\n * See also:\n *   `tf.Sequential`, `tf.loadLayersModel`.\n *\n * @doc {heading: 'Models', subheading: 'Classes'}\n */\n\nexport var LayersModel = /*#__PURE__*/function (_Container) {\n  _inherits(LayersModel, _Container);\n\n  var _super = _createSuper(LayersModel);\n\n  function LayersModel(args) {\n    var _this;\n\n    _classCallCheck(this, LayersModel);\n\n    _this = _super.call(this, args);\n    _this.isTraining = false;\n    return _this;\n  }\n  /**\n   * Print a text summary of the model's layers.\n   *\n   * The summary includes\n   * - Name and type of all layers that comprise the model.\n   * - Output shape(s) of the layers\n   * - Number of weight parameters of each layer\n   * - If the model has non-sequential-like topology, the inputs each layer\n   *   receives\n   * - The total number of trainable and non-trainable parameters of the model.\n   *\n   * ```js\n   * const input1 = tf.input({shape: [10]});\n   * const input2 = tf.input({shape: [20]});\n   * const dense1 = tf.layers.dense({units: 4}).apply(input1);\n   * const dense2 = tf.layers.dense({units: 8}).apply(input2);\n   * const concat = tf.layers.concatenate().apply([dense1, dense2]);\n   * const output =\n   *     tf.layers.dense({units: 3, activation: 'softmax'}).apply(concat);\n   *\n   * const model = tf.model({inputs: [input1, input2], outputs: output});\n   * model.summary();\n   * ```\n   *\n   * @param lineLength Custom line length, in number of characters.\n   * @param positions Custom widths of each of the columns, as either\n   *   fractions of `lineLength` (e.g., `[0.5, 0.75, 1]`) or absolute number\n   *   of characters (e.g., `[30, 50, 65]`). Each number corresponds to\n   *   right-most (i.e., ending) position of a column.\n   * @param printFn Custom print function. Can be used to replace the default\n   *   `console.log`. For example, you can use `x => {}` to mute the printed\n   *   messages in the console.\n   *\n   * @doc {heading: 'Models', subheading: 'Classes'}\n   */\n\n\n  _createClass(LayersModel, [{\n    key: \"summary\",\n    value: function summary(lineLength, positions) {\n      var printFn = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : console.log;\n\n      if (!this.built) {\n        throw new ValueError(\"This model has never been called, thus its weights have not been \" + \"created yet. So no summary can be displayed. Build the model \" + \"first (e.g., by calling it on some test data).\");\n      }\n\n      printSummary(this, lineLength, positions, printFn);\n    }\n    /**\n     * Configures and prepares the model for training and evaluation.  Compiling\n     * outfits the model with an optimizer, loss, and/or metrics.  Calling `fit`\n     * or `evaluate` on an un-compiled model will throw an error.\n     *\n     * @param args a `ModelCompileArgs` specifying the loss, optimizer, and\n     * metrics to be used for fitting and evaluating this model.\n     *\n     * @doc {heading: 'Models', subheading: 'Classes'}\n     */\n\n  }, {\n    key: \"compile\",\n    value: function compile(args) {\n      var _this2 = this;\n\n      if (args.loss == null) {\n        args.loss = [];\n      }\n\n      this.loss = args.loss;\n\n      if (typeof args.optimizer === 'string') {\n        this.optimizer_ = optimizers.getOptimizer(args.optimizer);\n        this.isOptimizerOwned = true;\n      } else {\n        if (!(args.optimizer instanceof Optimizer)) {\n          throw new ValueError(\"User-defined optimizer must be an instance of tf.Optimizer.\");\n        }\n\n        this.optimizer_ = args.optimizer;\n        this.isOptimizerOwned = false;\n      } // TODO(cais): Add lossWeights.\n      // TODO(cais): Add sampleWeightMode.\n      // Prepare loss functions.\n\n\n      var lossFunctions = [];\n\n      if (!Array.isArray(args.loss) && typeof args.loss !== 'string' && typeof args.loss !== 'function') {\n        args.loss = args.loss;\n\n        for (var name in args.loss) {\n          if (this.outputNames.indexOf(name) === -1) {\n            throw new ValueError(\"Unknown entry in loss dictionary: \\\"\".concat(name, \"\\\". \") + \"Only expected the following keys: \".concat(this.outputNames));\n          }\n        }\n\n        var _iterator3 = _createForOfIteratorHelper(this.outputNames),\n            _step3;\n\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var _name = _step3.value;\n\n            if (args.loss[_name] == null) {\n              console.warn(\"Output \\\"\".concat(_name, \"\\\" is missing from loss dictionary. We assume \") + \"this was done on purpose, and we will not be expecting data \" + \"to be passed to \".concat(_name, \" during training\"));\n            }\n\n            lossFunctions.push(losses.get(args.loss[_name]));\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n      } else if (Array.isArray(args.loss)) {\n        if (args.loss.length !== this.outputs.length) {\n          throw new ValueError(\"When passing an Array as loss, it should have one entry per \" + \"model output. The model has \".concat(this.outputs.length, \" output(s), \") + \"but you passed loss=\".concat(args.loss, \".\"));\n        }\n\n        var theLosses = args.loss;\n        lossFunctions = theLosses.map(function (l) {\n          return losses.get(l);\n        });\n      } else {\n        var lossFunction = losses.get(args.loss);\n        this.outputs.forEach(function (_) {\n          lossFunctions.push(lossFunction);\n        });\n      }\n\n      this.lossFunctions = lossFunctions;\n      this.feedOutputNames = [];\n      this.feedOutputShapes = [];\n      this.feedLossFns = [];\n\n      for (var i = 0; i < this.outputs.length; ++i) {\n        // TODO(cais): Logic for skipping target(s).\n        var shape = this.internalOutputShapes[i];\n        var _name2 = this.outputNames[i];\n        this.feedOutputNames.push(_name2);\n        this.feedOutputShapes.push(shape);\n        this.feedLossFns.push(this.lossFunctions[i]);\n      } // TODO(cais): Add logic for output masks.\n      // TODO(cais): Add logic for sample weights.\n\n\n      var skipTargetIndices = []; // Prepare metrics.\n\n      this.metrics = args.metrics; // TODO(cais): Add weightedMetrics.\n\n      this.metricsNames = ['loss'];\n      this.metricsTensors = []; // Compute total loss.\n      // Porting Note: In PyKeras, metrics_tensors are symbolic tensor objects.\n      //   Here, metricsTensors are TypeScript functions. This difference is due\n      //   to the difference in symbolic/imperative property of the backends.\n\n      nameScope('loss', function () {\n        for (var _i = 0; _i < _this2.outputs.length; ++_i) {\n          if (skipTargetIndices.indexOf(_i) !== -1) {\n            continue;\n          } // TODO(cais): Add weightedLoss, sampleWeight and mask.\n          //   The following line should be weightedLoss\n\n\n          var weightedLoss = _this2.lossFunctions[_i];\n\n          if (_this2.outputs.length > 1) {\n            _this2.metricsTensors.push([weightedLoss, _i]);\n\n            _this2.metricsNames.push(_this2.outputNames[_i] + '_loss');\n          }\n        } // Porting Note: Due to the imperative nature of the backend, we calculate\n        //   the regularizer penalties in the totalLossFunction, instead of here.\n\n      });\n      var nestedMetrics = collectMetrics(args.metrics, this.outputNames); // TODO(cais): Add nestedWeightedMetrics.\n\n      /**\n       * Helper function used in loop below.\n       */\n\n      var appendMetric = function appendMetric(outputIndex, metricName, metricTensor) {\n        if (_this2.outputNames.length > 1) {\n          metricName = _this2.outputNames[outputIndex] + '_' + metricName;\n        }\n\n        _this2.metricsNames.push(metricName);\n\n        _this2.metricsTensors.push([metricTensor, outputIndex]);\n      };\n\n      nameScope('metric', function () {\n        var _loop = function _loop(_i2) {\n          if (skipTargetIndices.indexOf(_i2) !== -1) {\n            return \"continue\";\n          }\n\n          var outputMetrics = nestedMetrics[_i2]; // TODO(cais): Add weights and outputWeightedMetrics.\n          // TODO(cais): Add optional arg `weights` to the following function.\n\n          var handleMetrics = function handleMetrics(metrics) {\n            var metricNamePrefix = '';\n            var metricName;\n            var accFn;\n            var weightedMetricFn; //  TODO(cais): Use 'weights_' for weighted metrics.\n\n            var _iterator4 = _createForOfIteratorHelper(metrics),\n                _step4;\n\n            try {\n              for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                var metric = _step4.value;\n\n                if (typeof metric === 'string' && ['accuracy', 'acc', 'crossentropy', 'ce'].indexOf(metric) !== -1) {\n                  var outputShape = _this2.internalOutputShapes[_i2];\n\n                  if (outputShape[outputShape.length - 1] === 1 || _this2.lossFunctions[_i2] === losses.binaryCrossentropy) {\n                    // case: binary accuracy/crossentropy.\n                    if (['accuracy', 'acc'].indexOf(metric) !== -1) {\n                      accFn = Metrics.binaryAccuracy;\n                    } else if (['crossentropy', 'ce'].indexOf(metric) !== -1) {\n                      accFn = Metrics.binaryCrossentropy;\n                    }\n                  } else if (_this2.lossFunctions[_i2] === losses.sparseCategoricalCrossentropy) {\n                    // case: categorical accuracy / crossentropy with sparse\n                    // targets.\n                    if (['accuracy', 'acc'].indexOf(metric) !== -1) {\n                      accFn = Metrics.sparseCategoricalAccuracy;\n                    } else if (['crossentropy', 'ce'].indexOf(metric) !== -1) {\n                      accFn = Metrics.sparseCategoricalCrossentropy;\n                    }\n                  } else {\n                    // case: categorical accuracy / crossentropy.\n                    if (['accuracy', 'acc'].indexOf(metric) !== -1) {\n                      accFn = Metrics.categoricalAccuracy;\n                    } else if (['crossentropy', 'ce'].indexOf(metric) !== -1) {\n                      accFn = Metrics.categoricalCrossentropy;\n                    }\n                  }\n\n                  var suffix = void 0;\n\n                  if (['accuracy', 'acc'].indexOf(metric) !== -1) {\n                    suffix = 'acc';\n                  } else if (['crossentropy', 'ce'].indexOf(metric) !== -1) {\n                    suffix = 'ce';\n                  } // TODO(cais): Add weighting actually.\n\n\n                  weightedMetricFn = accFn;\n                  metricName = metricNamePrefix + suffix;\n                } else {\n                  var metricFn = Metrics.get(metric); // TODO(cais): Add weighting actually.\n\n                  weightedMetricFn = metricFn;\n                  metricName = metricNamePrefix + Metrics.getLossOrMetricName(metric);\n                } // TODO(cais): Add weighting and masking to metricResult.\n\n\n                var metricResult = void 0;\n                nameScope(metricName, function () {\n                  metricResult = weightedMetricFn;\n                });\n                appendMetric(_i2, metricName, metricResult);\n              }\n            } catch (err) {\n              _iterator4.e(err);\n            } finally {\n              _iterator4.f();\n            }\n          };\n\n          handleMetrics(outputMetrics); // TODO(cais): Call handleMetrics with weights.\n        };\n\n        for (var _i2 = 0; _i2 < _this2.outputs.length; ++_i2) {\n          var _ret = _loop(_i2);\n\n          if (_ret === \"continue\") continue;\n        }\n      }); // Porting Notes: Given the imperative backend of tfjs-core,\n      //   there is no need for constructing the symbolic graph and placeholders.\n\n      this.collectedTrainableWeights = this.trainableWeights;\n    }\n    /**\n     * Check trainable weights count consistency.\n     *\n     * This will raise a warning if `this.trainableWeights` and\n     * `this.collectedTrainableWeights` are inconsistent (i.e., have different\n     * numbers of parameters).\n     * Inconsistency will typically arise when one modifies `model.trainable`\n     * without calling `model.compile()` again.\n     */\n\n  }, {\n    key: \"checkTrainableWeightsConsistency\",\n    value: function checkTrainableWeightsConsistency() {\n      if (this.collectedTrainableWeights == null) {\n        return;\n      }\n\n      if (this.trainableWeights.length !== this.collectedTrainableWeights.length) {\n        console.warn('Discrepancy between trainableweights and collected trainable ' + 'weights. Did you set `model.trainable` without calling ' + '`model.compile()` afterwards?');\n      }\n    }\n    /**\n     * Returns the loss value & metrics values for the model in test mode.\n     *\n     * Loss and metrics are specified during `compile()`, which needs to happen\n     * before calls to `evaluate()`.\n     *\n     * Computation is done in batches.\n     *\n     * ```js\n     * const model = tf.sequential({\n     *   layers: [tf.layers.dense({units: 1, inputShape: [10]})]\n     * });\n     * model.compile({optimizer: 'sgd', loss: 'meanSquaredError'});\n     * const result = model.evaluate(\n     *     tf.ones([8, 10]), tf.ones([8, 1]), {batchSize: 4});\n     * result.print();\n     * ```\n     *\n     * @param x `tf.Tensor` of test data, or an `Array` of `tf.Tensor`s if the\n     * model has multiple inputs.\n     * @param y `tf.Tensor` of target data, or an `Array` of `tf.Tensor`s if the\n     * model has multiple outputs.\n     * @param args A `ModelEvaluateArgs`, containing optional fields.\n     *\n     * @return `Scalar` test loss (if the model has a single output and no\n     *   metrics) or `Array` of `Scalar`s (if the model has multiple outputs\n     *   and/or metrics). The attribute `model.metricsNames`\n     *   will give you the display labels for the scalar outputs.\n     *\n     * @doc {heading: 'Models', subheading: 'Classes'}\n     */\n\n  }, {\n    key: \"evaluate\",\n    value: function evaluate(x, y) {\n      var args = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var batchSize = args.batchSize == null ? 32 : args.batchSize;\n      checkBatchSize(batchSize); // TODO(cais): Standardize `config.sampleWeights` as well.\n      // Validate user data.\n\n      var checkBatchAxis = true;\n      var standardizedOuts = this.standardizeUserDataXY(x, y, checkBatchAxis, batchSize);\n\n      try {\n        // TODO(cais): If uses `useLearningPhase`, set the corresponding element\n        // of the input to 0.\n        var ins = standardizedOuts[0].concat(standardizedOuts[1]);\n        this.makeTestFunction();\n        var f = this.testFunction;\n        var testOuts = this.testLoop(f, ins, batchSize, args.verbose, args.steps);\n        return singletonOrArray(testOuts);\n      } finally {\n        disposeNewTensors(standardizedOuts[0], x);\n        disposeNewTensors(standardizedOuts[1], y);\n      }\n    } // TODO(cais): Add code snippet below once real dataset objects are\n    //   available.\n\n    /**\n     * Evaluate model using a dataset object.\n     *\n     * Note: Unlike `evaluate()`, this method is asynchronous (`async`);\n     *\n     * @param dataset A dataset object. Its `iterator()` method is expected\n     *   to generate a dataset iterator object, the `next()` method of which\n     *   is expected to produce data batches for evaluation. The return value\n     *   of the `next()` call ought to contain a boolean `done` field and a\n     *   `value` field. The `value` field is expected to be an array of two\n     *   `tf.Tensor`s or an array of two nested `tf.Tensor` structures. The former\n     *   case is for models with exactly one input and one output (e.g..\n     *   a sequential model). The latter case is for models with multiple\n     *   inputs and/or multiple outputs. Of the two items in the array, the\n     *   first is the input feature(s) and the second is the output target(s).\n     * @param args A configuration object for the dataset-based evaluation.\n     * @returns Loss and metric values as an Array of `Scalar` objects.\n     *\n     * @doc {heading: 'Models', subheading: 'Classes'}\n     */\n\n  }, {\n    key: \"evaluateDataset\",\n    value: function () {\n      var _evaluateDataset2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dataset, args) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.makeTestFunction();\n                return _context.abrupt(\"return\", _evaluateDataset(this, dataset, args));\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function evaluateDataset(_x, _x2) {\n        return _evaluateDataset2.apply(this, arguments);\n      }\n\n      return evaluateDataset;\n    }()\n    /**\n     * Get number of samples provided for training, evaluation or prediction.\n     *\n     * @param ins Input `tf.Tensor`.\n     * @param batchSize Integer batch size, optional.\n     * @param steps Total number of steps (batches of samples) before\n     * declaring loop finished. Optional.\n     * @param stepsName The public API's parameter name for `steps`.\n     * @returns Number of samples provided.\n     */\n\n  }, {\n    key: \"checkNumSamples\",\n    value: function checkNumSamples(ins, batchSize, steps) {\n      var stepsName = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'steps';\n      var numSamples;\n\n      if (steps != null) {\n        numSamples = null;\n\n        if (batchSize != null) {\n          throw new ValueError(\"If \".concat(stepsName, \" is set, batchSize must be null or undefined.\") + \"Got batchSize = \".concat(batchSize));\n        }\n      } else if (ins != null) {\n        if (Array.isArray(ins)) {\n          numSamples = ins[0].shape[0];\n        } else {\n          numSamples = ins.shape[0];\n        }\n      } else {\n        throw new ValueError(\"Either the input data should have a defined shape, or \" + \"\".concat(stepsName, \" shoud be specified.\"));\n      }\n\n      return numSamples;\n    }\n    /**\n     * Execute internal tensors of the model with input data feed.\n     * @param inputs Input data feed. Must match the inputs of the model.\n     * @param outputs Names of the output tensors to be fetched. Must match\n     *   names of the SymbolicTensors that belong to the graph.\n     * @returns Fetched values for `outputs`.\n     */\n\n  }, {\n    key: \"execute\",\n    value: function execute(inputs, outputs) {\n      if (Array.isArray(outputs) && outputs.length === 0) {\n        throw new ValueError('`outputs` is an empty Array, which is not allowed.');\n      }\n\n      var outputsIsArray = Array.isArray(outputs);\n      var outputNames = outputsIsArray ? outputs : [outputs];\n      var outputSymbolicTensors = this.retrieveSymbolicTensors(outputNames); // Format the input into a FeedDict.\n\n      var feedDict = new FeedDict();\n\n      if (inputs instanceof Tensor) {\n        inputs = [inputs];\n      }\n\n      if (Array.isArray(inputs)) {\n        if (inputs.length !== this.inputs.length) {\n          throw new ValueError(\"The number of inputs provided (\".concat(inputs.length, \") \") + \"does not match the number of inputs of this model \" + \"(\".concat(this.inputs.length, \").\"));\n        }\n\n        for (var i = 0; i < this.inputs.length; ++i) {\n          feedDict.add(this.inputs[i], inputs[i]);\n        }\n      } else {\n        var _iterator5 = _createForOfIteratorHelper(this.inputs),\n            _step5;\n\n        try {\n          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n            var input = _step5.value;\n            var tensorValue = inputs[input.name];\n\n            if (tensorValue == null) {\n              throw new ValueError(\"No value is provided for the model's input \".concat(input.name));\n            }\n\n            feedDict.add(input, tensorValue);\n          }\n        } catch (err) {\n          _iterator5.e(err);\n        } finally {\n          _iterator5.f();\n        }\n      } // Run execution.\n\n\n      var executeOutputs = _execute(outputSymbolicTensors, feedDict);\n\n      return outputsIsArray ? executeOutputs : executeOutputs[0];\n    }\n    /**\n     * Retrieve the model's internal symbolic tensors from symbolic-tensor names.\n     */\n\n  }, {\n    key: \"retrieveSymbolicTensors\",\n    value: function retrieveSymbolicTensors(symbolicTensorNames) {\n      var outputSymbolicTensors = pyListRepeat(null, symbolicTensorNames.length);\n      var outputsRemaining = symbolicTensorNames.length;\n\n      var _iterator6 = _createForOfIteratorHelper(this.layers),\n          _step6;\n\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var layer = _step6.value;\n          var layerOutputs = Array.isArray(layer.output) ? layer.output : [layer.output];\n          var layerOutputNames = layerOutputs.map(function (output) {\n            return output.name;\n          });\n\n          for (var i = 0; i < symbolicTensorNames.length; ++i) {\n            var index = layerOutputNames.indexOf(symbolicTensorNames[i]);\n\n            if (index !== -1) {\n              outputSymbolicTensors[i] = layerOutputs[index];\n              outputsRemaining--;\n            }\n\n            if (outputsRemaining === 0) {\n              break;\n            }\n          }\n\n          if (outputsRemaining === 0) {\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n\n      if (outputsRemaining > 0) {\n        var remainingNames = [];\n        outputSymbolicTensors.forEach(function (tensor, i) {\n          if (tensor == null) {\n            remainingNames.push(symbolicTensorNames[i]);\n          }\n        });\n        throw new ValueError(\"Cannot find SymbolicTensors for output name(s): \" + \"\".concat(JSON.stringify(remainingNames)));\n      }\n\n      return outputSymbolicTensors;\n    }\n    /**\n     * Helper method to loop over some data in batches.\n     *\n     * Porting Note: Not using the functional approach in the Python equivalent\n     *   due to the imperative backend.\n     * Porting Note: Does not support step mode currently.\n     *\n     * @param ins: input data\n     * @param batchSize: integer batch size.\n     * @param verbose: verbosity model\n     * @returns: Predictions as `tf.Tensor` (if a single output) or an `Array` of\n     *   `tf.Tensor` (if multipe outputs).\n     */\n\n  }, {\n    key: \"predictLoop\",\n    value: function predictLoop(ins) {\n      var _this3 = this;\n\n      var batchSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 32;\n      var verbose = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      return tfc.tidy(function () {\n        var numSamples = _this3.checkNumSamples(ins);\n\n        if (verbose) {\n          throw new NotImplementedError('Verbose predictLoop() is not implemented yet.');\n        } // Sample-based predictions.\n        // Porting Note: Tensor currently does not support sliced assignments as\n        //   in numpy, e.g., x[1:3] = y. Therefore we use concatenation while\n        //   iterating over the batches.\n\n\n        var batches = makeBatches(numSamples, batchSize);\n\n        var outsBatches = _this3.outputs.map(function (output) {\n          return [];\n        }); // TODO(cais): Can the scope() be pushed down inside the for loop?\n\n\n        var _loop2 = function _loop2(batchIndex) {\n          var batchOuts = tfc.tidy(function () {\n            var batchStart = batches[batchIndex][0];\n            var batchEnd = batches[batchIndex][1]; // TODO(cais): Take care of the case of the last element is a flag for\n            //   training/test.\n\n            var insBatch = sliceArrays(ins, batchStart, batchEnd); // Construct the feeds for execute();\n\n            var feeds = [];\n\n            if (Array.isArray(insBatch)) {\n              for (var i = 0; i < insBatch.length; ++i) {\n                feeds.push({\n                  key: _this3.inputs[i],\n                  value: insBatch[i]\n                });\n              }\n            } else {\n              feeds.push({\n                key: _this3.inputs[0],\n                value: insBatch\n              });\n            }\n\n            var feedDict = new FeedDict(feeds);\n            return _execute(_this3.outputs, feedDict);\n          });\n          batchOuts.forEach(function (batchOut, i) {\n            return outsBatches[i].push(batchOut);\n          });\n        };\n\n        for (var batchIndex = 0; batchIndex < batches.length; ++batchIndex) {\n          _loop2(batchIndex);\n        }\n\n        return singletonOrArray(outsBatches.map(function (batches) {\n          return tfc.concat(batches, 0);\n        }));\n      });\n    }\n    /**\n     * Generates output predictions for the input samples.\n     *\n     * Computation is done in batches.\n     *\n     * Note: the \"step\" mode of predict() is currently not supported.\n     *   This is because the TensorFlow.js core backend is imperative only.\n     *\n     * ```js\n     * const model = tf.sequential({\n     *   layers: [tf.layers.dense({units: 1, inputShape: [10]})]\n     * });\n     * model.predict(tf.ones([8, 10]), {batchSize: 4}).print();\n     * ```\n     *\n     * @param x The input data, as a Tensor, or an `Array` of `tf.Tensor`s if\n     *   the model has multiple inputs.\n     * @param args A `ModelPredictArgs` object containing optional fields.\n     *\n     * @return Prediction results as a `tf.Tensor`(s).\n     *\n     * @exception ValueError In case of mismatch between the provided input data\n     *   and the model's expectations, or in case a stateful model receives a\n     *   number of samples that is not a multiple of the batch size.\n     *\n     * @doc {heading: 'Models', subheading: 'Classes'}\n     */\n\n  }, {\n    key: \"predict\",\n    value: function predict(x) {\n      var args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var xsRank2OrHigher = ensureTensorsRank2OrHigher(x);\n      checkInputData(xsRank2OrHigher, this.inputNames, this.feedInputShapes, false);\n\n      try {\n        // TODO(cais): Take care of stateful models.\n        //   if (this.stateful) ...\n        // TODO(cais): Take care of the learning_phase boolean flag.\n        //   if (this.useLearningPhase) ...\n        var batchSize = args.batchSize == null ? 32 : args.batchSize;\n        checkBatchSize(batchSize);\n        return this.predictLoop(xsRank2OrHigher, batchSize);\n      } finally {\n        disposeNewTensors(xsRank2OrHigher, x);\n      }\n    }\n    /**\n     * Returns predictions for a single batch of samples.\n     *\n     * ```js\n     * const model = tf.sequential({\n     *   layers: [tf.layers.dense({units: 1, inputShape: [10]})]\n     * });\n     * model.predictOnBatch(tf.ones([8, 10])).print();\n     * ```\n     * @param x: Input samples, as a Tensor (for models with exactly one\n     *   input) or an array of Tensors (for models with more than one input).\n     * @return Tensor(s) of predictions\n     *\n     * @doc {heading: 'Models', subheading: 'Classes'}\n     */\n\n  }, {\n    key: \"predictOnBatch\",\n    value: function predictOnBatch(x) {\n      checkInputData(x, this.inputNames, this.feedInputShapes, true); // TODO(cais): Take care of the learning_phase boolean flag.\n      //   if (this.useLearningPhase) ...\n\n      var batchSize = (Array.isArray(x) ? x[0] : x).shape[0];\n      return this.predictLoop(x, batchSize);\n    }\n  }, {\n    key: \"standardizeUserDataXY\",\n    value: function standardizeUserDataXY(x, y) {\n      var checkBatchAxis = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var batchSize = arguments.length > 3 ? arguments[3] : undefined;\n\n      // TODO(cais): Add sampleWeight, classWeight\n      if (this.optimizer_ == null) {\n        throw new RuntimeError('You must compile a model before training/testing. Use ' + 'LayersModel.compile(modelCompileArgs).');\n      }\n\n      var outputShapes = [];\n\n      for (var i = 0; i < this.feedOutputShapes.length; ++i) {\n        var outputShape = this.feedOutputShapes[i];\n        var lossFn = this.feedLossFns[i];\n\n        if (lossFn === losses.sparseCategoricalCrossentropy) {\n          outputShapes.push(outputShape.slice(0, outputShape.length - 1).concat([1]));\n        } else {\n          // Porting Note: Because of strong typing `lossFn` must be a function.\n          outputShapes.push(outputShape);\n        }\n      }\n\n      x = standardizeInputData(x, this.feedInputNames, this.feedInputShapes, false, 'input');\n      y = standardizeInputData(y, this.feedOutputNames, outputShapes, false, 'target'); // TODO(cais): Standardize sampleWeights & classWeights.\n\n      checkArrayLengths(x, y, null); // TODO(cais): Check sampleWeights as well.\n\n      checkLossAndTargetCompatibility(y, this.feedLossFns, this.feedOutputShapes);\n\n      if (this.stateful && batchSize != null && batchSize > 0) {\n        if (x[0].shape[0] % batchSize !== 0) {\n          throw new ValueError(\"In a stateful network, you should only pass inputs with a \" + \"number of samples that is divisible by the batch size \" + \"\".concat(batchSize, \". Found: \").concat(x[0].shape[0], \" sample(s).\"));\n        }\n      }\n\n      return [x, y];\n    }\n  }, {\n    key: \"standardizeUserData\",\n    value: function () {\n      var _standardizeUserData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(x, y, sampleWeight, classWeight) {\n        var checkBatchAxis,\n            batchSize,\n            _this$standardizeUser,\n            _this$standardizeUser2,\n            standardXs,\n            standardYs,\n            standardSampleWeights,\n            classWeights,\n            i,\n            _args2 = arguments;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                checkBatchAxis = _args2.length > 4 && _args2[4] !== undefined ? _args2[4] : true;\n                batchSize = _args2.length > 5 ? _args2[5] : undefined;\n                _this$standardizeUser = this.standardizeUserDataXY(x, y, checkBatchAxis, batchSize), _this$standardizeUser2 = _slicedToArray(_this$standardizeUser, 2), standardXs = _this$standardizeUser2[0], standardYs = _this$standardizeUser2[1]; // TODO(cais): Handle sampleWeights.\n\n                if (!(sampleWeight != null)) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                throw new Error('sample weight is not supported yet.');\n\n              case 5:\n                standardSampleWeights = null;\n\n                if (!(classWeight != null)) {\n                  _context2.next = 19;\n                  break;\n                }\n\n                classWeights = standardizeClassWeights(classWeight, this.outputNames);\n                standardSampleWeights = [];\n                i = 0;\n\n              case 10:\n                if (!(i < classWeights.length)) {\n                  _context2.next = 19;\n                  break;\n                }\n\n                _context2.t0 = standardSampleWeights;\n                _context2.next = 14;\n                return standardizeWeights(standardYs[i], null, classWeights[i]);\n\n              case 14:\n                _context2.t1 = _context2.sent;\n\n                _context2.t0.push.call(_context2.t0, _context2.t1);\n\n              case 16:\n                ++i;\n                _context2.next = 10;\n                break;\n\n              case 19:\n                return _context2.abrupt(\"return\", [standardXs, standardYs, standardSampleWeights]);\n\n              case 20:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function standardizeUserData(_x3, _x4, _x5, _x6) {\n        return _standardizeUserData.apply(this, arguments);\n      }\n\n      return standardizeUserData;\n    }()\n    /**\n     * Loop over some test data in batches.\n     * @param f A Function returning a list of tensors.\n     * @param ins Array of tensors to be fed to `f`.\n     * @param batchSize Integer batch size or `null` / `undefined`.\n     * @param verbose verbosity mode.\n     * @param steps Total number of steps (batches of samples) before\n     * declaring test finished. Ignored with the default value of `null` /\n     * `undefined`.\n     * @returns Array of Scalars.\n     */\n\n  }, {\n    key: \"testLoop\",\n    value: function testLoop(f, ins, batchSize) {\n      var _this4 = this;\n\n      var verbose = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n      var steps = arguments.length > 4 ? arguments[4] : undefined;\n      return tfc.tidy(function () {\n        var numSamples = _this4.checkNumSamples(ins, batchSize, steps, 'steps');\n\n        var outs = [];\n\n        if (verbose > 0) {\n          throw new NotImplementedError('Verbose mode is not implemented yet.');\n        } // TODO(cais): Use `indicesForConversionToDense' to prevent slow down.\n\n\n        if (steps != null) {\n          throw new NotImplementedError('steps mode in testLoop() is not implemented yet');\n        } else {\n          var batches = makeBatches(numSamples, batchSize);\n          var indexArray = tensor1d(range(0, numSamples));\n\n          for (var batchIndex = 0; batchIndex < batches.length; ++batchIndex) {\n            var batchStart = batches[batchIndex][0];\n            var batchEnd = batches[batchIndex][1];\n            var batchIds = K.sliceAlongFirstAxis(indexArray, batchStart, batchEnd - batchStart); // TODO(cais): In ins, train flag can be a number, instead of an\n            //   Tensor? Do we need to handle this in tfjs-layers?\n\n            var insBatch = sliceArraysByIndices(ins, batchIds);\n            var batchOuts = f(insBatch);\n\n            if (batchIndex === 0) {\n              for (var i = 0; i < batchOuts.length; ++i) {\n                outs.push(scalar(0));\n              }\n            }\n\n            for (var _i3 = 0; _i3 < batchOuts.length; ++_i3) {\n              var batchOut = batchOuts[_i3];\n              outs[_i3] = tfc.add(outs[_i3], tfc.mul(batchEnd - batchStart, batchOut));\n            }\n          }\n\n          for (var _i4 = 0; _i4 < outs.length; ++_i4) {\n            outs[_i4] = tfc.div(outs[_i4], numSamples);\n          }\n        }\n\n        return outs;\n      });\n    }\n  }, {\n    key: \"getDedupedMetricsNames\",\n    value: function getDedupedMetricsNames() {\n      var outLabels = this.metricsNames; // Rename duplicated metrics names (can happen with an output layer\n      // shared among multiple dataflows).\n\n      var dedupedOutLabels = [];\n\n      for (var i = 0; i < outLabels.length; ++i) {\n        var label = outLabels[i];\n        var newLabel = label;\n\n        if (count(outLabels, label) > 1) {\n          var dupIndex = count(outLabels.slice(0, i), label);\n          newLabel += \"_\".concat(dupIndex);\n        }\n\n        dedupedOutLabels.push(newLabel);\n      }\n\n      return dedupedOutLabels;\n    }\n    /**\n     * Creates a function that performs the following actions:\n     *\n     * 1. computes the losses\n     * 2. sums them to get the total loss\n     * 3. call the optimizer computes the gradients of the LayersModel's\n     *    trainable weights w.r.t. the total loss and update the variables\n     * 4. calculates the metrics\n     * 5. returns the values of the losses and metrics.\n     */\n\n  }, {\n    key: \"makeTrainFunction\",\n    value: function makeTrainFunction() {\n      var _this5 = this;\n\n      return function (data) {\n        var lossValues = [];\n        var inputs = data.slice(0, _this5.inputs.length);\n        var targets = data.slice(_this5.inputs.length, _this5.inputs.length + _this5.outputs.length);\n        var sampleWeights = data.slice(_this5.inputs.length + _this5.outputs.length, _this5.inputs.length + _this5.outputs.length * 2);\n        var metricsValues = []; // Create a function that computes the total loss based on the\n        // inputs. This function is used for obtaining gradients through\n        // backprop.\n\n        var totalLossFunction = function totalLossFunction() {\n          var feeds = [];\n\n          for (var i = 0; i < _this5.inputs.length; ++i) {\n            feeds.push({\n              key: _this5.inputs[i],\n              value: inputs[i]\n            });\n          }\n\n          var feedDict = new FeedDict(feeds);\n\n          var outputs = _execute(_this5.outputs, feedDict, {\n            'training': true\n          }); // TODO(cais): Take care of the case of multiple outputs from a\n          //   single layer?\n\n\n          var totalLoss;\n\n          for (var _i5 = 0; _i5 < _this5.lossFunctions.length; ++_i5) {\n            var lossFunction = _this5.lossFunctions[_i5];\n            var loss = lossFunction(targets[_i5], outputs[_i5]);\n\n            if (sampleWeights[_i5] != null) {\n              loss = computeWeightedLoss(loss, sampleWeights[_i5]);\n            } // TODO(cais): push Scalar instead.\n\n\n            var meanLoss = tfc.mean(loss); // TODO(cais): Use a scope() instead, to avoid ownership.\n\n            lossValues.push(meanLoss);\n\n            if (_i5 === 0) {\n              totalLoss = loss;\n            } else {\n              totalLoss = tfc.add(totalLoss, loss);\n            }\n          } // Compute the metrics.\n          // TODO(cais): These should probably be calculated outside\n          //   totalLossFunction to benefit speed?\n\n\n          for (var _i6 = 0; _i6 < _this5.metricsTensors.length; ++_i6) {\n            var weightedMetric = void 0;\n\n            if (_this5.outputs.length > 1 && _i6 < _this5.outputs.length) {\n              weightedMetric = lossValues[_i6];\n            } else {\n              var metric = _this5.metricsTensors[_i6][0];\n              var outputIndex = _this5.metricsTensors[_i6][1];\n              weightedMetric = tfc.mean(metric(targets[outputIndex], outputs[outputIndex]));\n            }\n\n            tfc.keep(weightedMetric); // TODO(cais): Use a scope() instead, to avoid ownership.\n\n            metricsValues.push(weightedMetric);\n          }\n\n          totalLoss = tfc.mean(totalLoss); // Add regularizer penalties.\n\n          _this5.calculateLosses().forEach(function (regularizerLoss) {\n            totalLoss = tfc.add(totalLoss, regularizerLoss);\n          });\n\n          return totalLoss;\n        };\n\n        var variables = _this5.collectedTrainableWeights.map(function (param) {\n          return param.read();\n        });\n\n        var returnCost = true;\n\n        var totalLossValue = _this5.optimizer_.minimize(totalLossFunction, returnCost, variables);\n\n        return [totalLossValue].concat(metricsValues);\n      };\n    }\n    /**\n     * Create a function which, when invoked with an array of `tf.Tensor`s as a\n     * batch of inputs, returns the prespecified loss and metrics of the model\n     * under the batch of input data.\n     */\n\n  }, {\n    key: \"makeTestFunction\",\n    value: function makeTestFunction() {\n      var _this6 = this;\n\n      this.testFunction = function (data) {\n        return tfc.tidy(function () {\n          var valOutputs = [];\n          var totalLoss;\n          var inputs = data.slice(0, _this6.inputs.length);\n          var targets = data.slice(_this6.inputs.length, _this6.inputs.length + _this6.outputs.length);\n          var feeds = [];\n\n          for (var i = 0; i < _this6.inputs.length; ++i) {\n            feeds.push({\n              key: _this6.inputs[i],\n              value: inputs[i]\n            });\n          }\n\n          var feedDict = new FeedDict(feeds);\n\n          var outputs = _execute(_this6.outputs, feedDict); // Compute total loss.\n\n\n          for (var _i7 = 0; _i7 < _this6.lossFunctions.length; ++_i7) {\n            var lossFunction = _this6.lossFunctions[_i7]; // TODO(cais): Add sample weighting and replace the simple\n            // averaging.\n\n            var loss = tfc.mean(lossFunction(targets[_i7], outputs[_i7]));\n\n            if (_i7 === 0) {\n              totalLoss = loss;\n            } else {\n              totalLoss = tfc.add(totalLoss, loss);\n            }\n\n            valOutputs.push(totalLoss);\n          } // Compute the metrics.\n\n\n          for (var _i8 = 0; _i8 < _this6.metricsTensors.length; ++_i8) {\n            var metric = _this6.metricsTensors[_i8][0];\n            var outputIndex = _this6.metricsTensors[_i8][1]; // TODO(cais): Replace K.mean() with a proper weighting function.\n\n            var meanMetric = tfc.mean(metric(targets[outputIndex], outputs[outputIndex]));\n            valOutputs.push(meanMetric);\n          }\n\n          return valOutputs;\n        });\n      };\n    }\n    /**\n     * Trains the model for a fixed number of epochs (iterations on a\n     * dataset).\n     *\n     * ```js\n     * const model = tf.sequential({\n     *     layers: [tf.layers.dense({units: 1, inputShape: [10]})]\n     * });\n     * model.compile({optimizer: 'sgd', loss: 'meanSquaredError'});\n     * for (let i = 1; i < 5 ; ++i) {\n     *   const h = await model.fit(tf.ones([8, 10]), tf.ones([8, 1]), {\n     *       batchSize: 4,\n     *       epochs: 3\n     *   });\n     *   console.log(\"Loss after Epoch \" + i + \" : \" + h.history.loss[0]);\n     * }\n     * ```\n     *\n     * @param x `tf.Tensor` of training data, or an array of `tf.Tensor`s if the\n     * model has multiple inputs. If all inputs in the model are named, you\n     * can also pass a dictionary mapping input names to `tf.Tensor`s.\n     * @param y `tf.Tensor` of target (label) data, or an array of `tf.Tensor`s if\n     * the model has multiple outputs. If all outputs in the model are named,\n     * you can also pass a dictionary mapping output names to `tf.Tensor`s.\n     * @param args A `ModelFitArgs`, containing optional fields.\n     *\n     * @return A `History` instance. Its `history` attribute contains all\n     *   information collected during training.\n     *\n     * @exception ValueError In case of mismatch between the provided input\n     * data and what the model expects.\n     *\n     * @doc {heading: 'Models', subheading: 'Classes'}\n     */\n\n  }, {\n    key: \"fit\",\n    value: function () {\n      var _fit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(x, y) {\n        var args,\n            _args3 = arguments;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                args = _args3.length > 2 && _args3[2] !== undefined ? _args3[2] : {};\n                return _context3.abrupt(\"return\", fitTensors(this, x, y, args));\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function fit(_x7, _x8) {\n        return _fit.apply(this, arguments);\n      }\n\n      return fit;\n    }() // TODO(cais): Add code snippet below when it's possible to instantiate\n    //   actual dataset objects.\n\n    /**\n     * Trains the model using a dataset object.\n     *\n     * @param dataset A dataset object. Its `iterator()` method is expected\n     *   to generate a dataset iterator object, the `next()` method of which\n     *   is expected to produce data batches for training. The return value\n     *   of the `next()` call ought to contain a boolean `done` field and a\n     *   `value` field. The `value` field is expected to be an array of two\n     *   `tf.Tensor`s or an array of two nested `tf.Tensor` structures. The former\n     *   case is for models with exactly one input and one output (e.g..\n     *   a sequential model). The latter case is for models with multiple\n     *   inputs and/or multiple outputs.\n     *   Of the two items in the array, the first is the input feature(s) and\n     *   the second is the output target(s).\n     * @param args A `ModelFitDatasetArgs`, containing optional fields.\n     *\n     * @return A `History` instance. Its `history` attribute contains all\n     *   information collected during training.\n     *\n     * @doc {heading: 'Models', subheading: 'Classes'}\n     */\n\n  }, {\n    key: \"fitDataset\",\n    value: function () {\n      var _fitDataset2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dataset, args) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                return _context4.abrupt(\"return\", _fitDataset(this, dataset, args));\n\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function fitDataset(_x9, _x10) {\n        return _fitDataset2.apply(this, arguments);\n      }\n\n      return fitDataset;\n    }()\n    /**\n     * Runs a single gradient update on a single batch of data.\n     *\n     * This method differs from `fit()` and `fitDataset()` in the following\n     * regards:\n     *   - It operates on exactly one batch of data.\n     *   - It returns only the loss and matric values, instead of\n     *     returning the batch-by-batch loss and metric values.\n     *   - It doesn't support fine-grained options such as verbosity and\n     *     callbacks.\n     *\n     * @param x Input data. It could be one of the following:\n     *   - A `tf.Tensor`, or an Array of `tf.Tensor`s (in case the model has\n     *     multiple inputs).\n     *   - An Object mapping input names to corresponding `tf.Tensor` (if the\n     *     model has named inputs).\n     * @param y Target darta. It could be either a `tf.Tensor` a multiple\n     *   `tf.Tensor`s. It should be consistent with `x`.\n     * @returns Training loss or losses (in case the model has\n     *   multiple outputs), along with metrics (if any), as numbers.\n     *\n     * @doc {heading: 'Models', subheading: 'Classes'}\n     */\n\n  }, {\n    key: \"trainOnBatch\",\n    value: function () {\n      var _trainOnBatch = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(x, y) {\n        var standardizeOut, inputs, targets, trainFunction, losses, lossValues, _iterator7, _step7, loss, v;\n\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.standardizeUserData(x, y);\n\n              case 2:\n                standardizeOut = _context5.sent;\n                inputs = standardizeOut[0];\n                targets = standardizeOut[1];\n                trainFunction = this.makeTrainFunction();\n                losses = trainFunction(inputs.concat(targets));\n                lossValues = [];\n                _iterator7 = _createForOfIteratorHelper(losses);\n                _context5.prev = 9;\n\n                _iterator7.s();\n\n              case 11:\n                if ((_step7 = _iterator7.n()).done) {\n                  _context5.next = 19;\n                  break;\n                }\n\n                loss = _step7.value;\n                _context5.next = 15;\n                return loss.data();\n\n              case 15:\n                v = _context5.sent;\n                lossValues.push(v[0]);\n\n              case 17:\n                _context5.next = 11;\n                break;\n\n              case 19:\n                _context5.next = 24;\n                break;\n\n              case 21:\n                _context5.prev = 21;\n                _context5.t0 = _context5[\"catch\"](9);\n\n                _iterator7.e(_context5.t0);\n\n              case 24:\n                _context5.prev = 24;\n\n                _iterator7.f();\n\n                return _context5.finish(24);\n\n              case 27:\n                tfc.dispose(losses);\n                return _context5.abrupt(\"return\", singletonOrArray(lossValues));\n\n              case 29:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[9, 21, 24, 27]]);\n      }));\n\n      function trainOnBatch(_x11, _x12) {\n        return _trainOnBatch.apply(this, arguments);\n      }\n\n      return trainOnBatch;\n    }()\n    /**\n     * Extract weight values of the model.\n     *\n     * @param config: An instance of `io.SaveConfig`, which specifies\n     * model-saving options such as whether only trainable weights are to be\n     * saved.\n     * @returns A `NamedTensorMap` mapping original weight names (i.e.,\n     *   non-uniqueified weight names) to their values.\n     */\n\n  }, {\n    key: \"getNamedWeights\",\n    value: function getNamedWeights(config) {\n      var namedWeights = [];\n      var trainableOnly = config != null && config.trainableOnly;\n      var weights = trainableOnly ? this.trainableWeights : this.weights;\n      var weightValues = this.getWeights(trainableOnly);\n\n      for (var i = 0; i < weights.length; ++i) {\n        if (trainableOnly && !weights[i].trainable) {\n          // Optionally skip non-trainable weights.\n          continue;\n        }\n\n        namedWeights.push({\n          name: weights[i].originalName,\n          tensor: weightValues[i]\n        });\n      }\n\n      return namedWeights;\n    }\n    /**\n     * Setter used for force stopping of LayersModel.fit() (i.e., training).\n     *\n     * Example:\n     *\n     * ```js\n     * const input = tf.input({shape: [10]});\n     * const output = tf.layers.dense({units: 1}).apply(input);\n     * const model = tf.model({inputs: [input], outputs: [output]});\n     * model.compile({loss: 'meanSquaredError', optimizer: 'sgd'});\n     * const xs = tf.ones([8, 10]);\n     * const ys = tf.zeros([8, 1]);\n     *\n     * const history = await model.fit(xs, ys, {\n     *   epochs: 10,\n     *   callbacks: {\n     *     onEpochEnd: async (epoch, logs) => {\n     *       if (epoch === 2) {\n     *         model.stopTraining = true;\n     *       }\n     *     }\n     *   }\n     * });\n     *\n     * // There should be only 3 values in the loss array, instead of 10\n     * values,\n     * // due to the stopping after 3 epochs.\n     * console.log(history.history.loss);\n     * ```\n     */\n\n  }, {\n    key: \"stopTraining\",\n    get: function get() {\n      return this.stopTraining_;\n    },\n    set: function set(stop) {\n      this.stopTraining_ = stop;\n    }\n  }, {\n    key: \"optimizer\",\n    get: function get() {\n      return this.optimizer_;\n    },\n    set: function set(optimizer) {\n      if (this.optimizer_ !== optimizer) {\n        this.optimizer_ = optimizer;\n        this.isOptimizerOwned = false;\n      }\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      var result = _get(_getPrototypeOf(LayersModel.prototype), \"dispose\", this).call(this);\n\n      if (result.refCountAfterDispose === 0 && this.optimizer != null && this.isOptimizerOwned) {\n        var numTensorsBeforeOptmizerDisposal = tfc.memory().numTensors;\n        this.optimizer_.dispose();\n        result.numDisposedVariables += numTensorsBeforeOptmizerDisposal - tfc.memory().numTensors;\n      }\n\n      return result;\n    }\n  }, {\n    key: \"getLossIdentifiers\",\n    value: function getLossIdentifiers() {\n      var lossNames;\n\n      if (typeof this.loss === 'string') {\n        lossNames = toSnakeCase(this.loss);\n      } else if (Array.isArray(this.loss)) {\n        var _iterator8 = _createForOfIteratorHelper(this.loss),\n            _step8;\n\n        try {\n          for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n            var loss = _step8.value;\n\n            if (typeof loss !== 'string') {\n              throw new Error('Serialization of non-string loss is not supported.');\n            }\n          }\n        } catch (err) {\n          _iterator8.e(err);\n        } finally {\n          _iterator8.f();\n        }\n\n        lossNames = this.loss.map(function (name) {\n          return toSnakeCase(name);\n        });\n      } else {\n        var outputNames = Object.keys(this.loss);\n        lossNames = {};\n        var _losses = this.loss;\n\n        for (var _i9 = 0, _outputNames = outputNames; _i9 < _outputNames.length; _i9++) {\n          var outputName = _outputNames[_i9];\n\n          if (typeof _losses[outputName] === 'string') {\n            lossNames[outputName] = toSnakeCase(_losses[outputName]);\n          } else {\n            throw new Error('Serialization of non-string loss is not supported.');\n          }\n        }\n      }\n\n      return lossNames;\n    }\n  }, {\n    key: \"getMetricIdentifiers\",\n    value: function getMetricIdentifiers() {\n      if (typeof this.metrics === 'string' || typeof this.metrics === 'function') {\n        return [toSnakeCase(Metrics.getLossOrMetricName(this.metrics))];\n      } else if (Array.isArray(this.metrics)) {\n        return this.metrics.map(function (metric) {\n          return toSnakeCase(Metrics.getLossOrMetricName(metric));\n        });\n      } else {\n        var metricsIdentifiers = {};\n\n        for (var key in this.metrics) {\n          metricsIdentifiers[key] = toSnakeCase(Metrics.getLossOrMetricName(this.metrics[key]));\n        }\n\n        return metricsIdentifiers;\n      }\n    }\n  }, {\n    key: \"getTrainingConfig\",\n    value: function getTrainingConfig() {\n      return {\n        loss: this.getLossIdentifiers(),\n        metrics: this.getMetricIdentifiers(),\n        optimizer_config: {\n          class_name: this.optimizer.getClassName(),\n          config: this.optimizer.getConfig()\n        }\n      }; // TODO(cais): Add weight_metrics when they are supported.\n      // TODO(cais): Add sample_weight_mode when it's supported.\n      // TODO(cais): Add loss_weights when it's supported.\n    }\n  }, {\n    key: \"loadTrainingConfig\",\n    value: function loadTrainingConfig(trainingConfig) {\n      if (trainingConfig.weighted_metrics != null) {\n        throw new Error('Loading weight_metrics is not supported yet.');\n      }\n\n      if (trainingConfig.loss_weights != null) {\n        throw new Error('Loading loss_weights is not supported yet.');\n      }\n\n      if (trainingConfig.sample_weight_mode != null) {\n        throw new Error('Loading sample_weight_mode is not supported yet.');\n      }\n\n      var tsConfig = convertPythonicToTs(trainingConfig.optimizer_config);\n      var optimizer = deserialize(tsConfig);\n      var loss;\n\n      if (typeof trainingConfig.loss === 'string') {\n        loss = toCamelCase(trainingConfig.loss);\n      } else if (Array.isArray(trainingConfig.loss)) {\n        loss = trainingConfig.loss.map(function (lossEntry) {\n          return toCamelCase(lossEntry);\n        });\n      } else if (trainingConfig.loss != null) {\n        loss = {};\n\n        for (var key in trainingConfig.loss) {\n          loss[key] = toCamelCase(trainingConfig.loss[key]);\n        }\n      }\n\n      var metrics;\n\n      if (Array.isArray(trainingConfig.metrics)) {\n        metrics = trainingConfig.metrics.map(function (metric) {\n          return toCamelCase(metric);\n        });\n      } else if (trainingConfig.metrics != null) {\n        metrics = {};\n\n        for (var _key in trainingConfig.metrics) {\n          metrics[_key] = toCamelCase(trainingConfig.metrics[_key]);\n        }\n      }\n\n      this.compile({\n        loss: loss,\n        metrics: metrics,\n        optimizer: optimizer\n      });\n    }\n    /**\n     * Save the configuration and/or weights of the LayersModel.\n     *\n     * An `IOHandler` is an object that has a `save` method of the proper\n     * signature defined. The `save` method manages the storing or\n     * transmission of serialized data (\"artifacts\") that represent the\n     * model's topology and weights onto or via a specific medium, such as\n     * file downloads, local storage, IndexedDB in the web browser and HTTP\n     * requests to a server. TensorFlow.js provides `IOHandler`\n     * implementations for a number of frequently used saving mediums, such as\n     * `tf.io.browserDownloads` and `tf.io.browserLocalStorage`. See `tf.io`\n     * for more details.\n     *\n     * This method also allows you to refer to certain types of `IOHandler`s\n     * as URL-like string shortcuts, such as 'localstorage://' and\n     * 'indexeddb://'.\n     *\n     * Example 1: Save `model`'s topology and weights to browser [local\n     * storage](https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage);\n     * then load it back.\n     *\n     * ```js\n     * const model = tf.sequential(\n     *     {layers: [tf.layers.dense({units: 1, inputShape: [3]})]});\n     * console.log('Prediction from original model:');\n     * model.predict(tf.ones([1, 3])).print();\n     *\n     * const saveResults = await model.save('localstorage://my-model-1');\n     *\n     * const loadedModel = await tf.loadLayersModel('localstorage://my-model-1');\n     * console.log('Prediction from loaded model:');\n     * loadedModel.predict(tf.ones([1, 3])).print();\n     * ```\n     *\n     * Example 2. Saving `model`'s topology and weights to browser\n     * [IndexedDB](https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API);\n     * then load it back.\n     *\n     * ```js\n     * const model = tf.sequential(\n     *     {layers: [tf.layers.dense({units: 1, inputShape: [3]})]});\n     * console.log('Prediction from original model:');\n     * model.predict(tf.ones([1, 3])).print();\n     *\n     * const saveResults = await model.save('indexeddb://my-model-1');\n     *\n     * const loadedModel = await tf.loadLayersModel('indexeddb://my-model-1');\n     * console.log('Prediction from loaded model:');\n     * loadedModel.predict(tf.ones([1, 3])).print();\n     * ```\n     *\n     * Example 3. Saving `model`'s topology and weights as two files\n     * (`my-model-1.json` and `my-model-1.weights.bin`) downloaded from\n     * browser.\n     *\n     * ```js\n     * const model = tf.sequential(\n     *     {layers: [tf.layers.dense({units: 1, inputShape: [3]})]});\n     * const saveResults = await model.save('downloads://my-model-1');\n     * ```\n     *\n     * Example 4. Send  `model`'s topology and weights to an HTTP server.\n     * See the documentation of `tf.io.http` for more details\n     * including specifying request parameters and implementation of the\n     * server.\n     *\n     * ```js\n     * const model = tf.sequential(\n     *     {layers: [tf.layers.dense({units: 1, inputShape: [3]})]});\n     * const saveResults = await model.save('http://my-server/model/upload');\n     * ```\n     *\n     * @param handlerOrURL An instance of `IOHandler` or a URL-like,\n     * scheme-based string shortcut for `IOHandler`.\n     * @param config Options for saving the model.\n     * @returns A `Promise` of `SaveResult`, which summarizes the result of\n     * the saving, such as byte sizes of the saved artifacts for the model's\n     *   topology and weight values.\n     *\n     * @doc {heading: 'Models', subheading: 'Classes', ignoreCI: true}\n     */\n\n  }, {\n    key: \"save\",\n    value: function () {\n      var _save = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(handlerOrURL, config) {\n        var handlers, weightDataAndSpecs, returnString, unusedArg, modelConfig, modelArtifacts, includeOptimizer, _weightDataAndSpecs$s, weightType, _yield$io$encodeWeigh, optimizerWeightData, optimizerWeightSpecs, checkSize;\n\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                if (!(typeof handlerOrURL === 'string')) {\n                  _context6.next = 9;\n                  break;\n                }\n\n                handlers = io.getSaveHandlers(handlerOrURL);\n\n                if (!(handlers.length === 0)) {\n                  _context6.next = 6;\n                  break;\n                }\n\n                throw new ValueError(\"Cannot find any save handlers for URL '\".concat(handlerOrURL, \"'\"));\n\n              case 6:\n                if (!(handlers.length > 1)) {\n                  _context6.next = 8;\n                  break;\n                }\n\n                throw new ValueError(\"Found more than one (\".concat(handlers.length, \") save handlers for \") + \"URL '\".concat(handlerOrURL, \"'\"));\n\n              case 8:\n                handlerOrURL = handlers[0];\n\n              case 9:\n                if (!(handlerOrURL.save == null)) {\n                  _context6.next = 11;\n                  break;\n                }\n\n                throw new ValueError('LayersModel.save() cannot proceed because the IOHandler ' + 'provided does not have the `save` attribute defined.');\n\n              case 11:\n                _context6.next = 13;\n                return io.encodeWeights(this.getNamedWeights(config));\n\n              case 13:\n                weightDataAndSpecs = _context6.sent;\n                returnString = false;\n                unusedArg = null;\n                modelConfig = this.toJSON(unusedArg, returnString);\n                modelArtifacts = {\n                  modelTopology: modelConfig,\n                  format: LAYERS_MODEL_FORMAT_NAME,\n                  generatedBy: \"TensorFlow.js tfjs-layers v\".concat(version),\n                  convertedBy: null\n                };\n                includeOptimizer = config == null ? false : config.includeOptimizer;\n\n                if (!(includeOptimizer && this.optimizer != null)) {\n                  _context6.next = 34;\n                  break;\n                }\n\n                modelArtifacts.trainingConfig = this.getTrainingConfig();\n                weightType = 'optimizer';\n                _context6.t0 = io;\n                _context6.next = 25;\n                return this.optimizer.getWeights();\n\n              case 25:\n                _context6.t1 = _context6.sent;\n                _context6.t2 = weightType;\n                _context6.next = 29;\n                return _context6.t0.encodeWeights.call(_context6.t0, _context6.t1, _context6.t2);\n\n              case 29:\n                _yield$io$encodeWeigh = _context6.sent;\n                optimizerWeightData = _yield$io$encodeWeigh.data;\n                optimizerWeightSpecs = _yield$io$encodeWeigh.specs;\n\n                (_weightDataAndSpecs$s = weightDataAndSpecs.specs).push.apply(_weightDataAndSpecs$s, _toConsumableArray(optimizerWeightSpecs));\n\n                weightDataAndSpecs.data = io.concatenateArrayBuffers([weightDataAndSpecs.data, optimizerWeightData]);\n\n              case 34:\n                if (this.userDefinedMetadata != null) {\n                  // Check serialized size of user-defined metadata.\n                  checkSize = true;\n                  checkUserDefinedMetadata(this.userDefinedMetadata, this.name, checkSize);\n                  modelArtifacts.userDefinedMetadata = this.userDefinedMetadata;\n                }\n\n                modelArtifacts.weightData = weightDataAndSpecs.data;\n                modelArtifacts.weightSpecs = weightDataAndSpecs.specs;\n                return _context6.abrupt(\"return\", handlerOrURL.save(modelArtifacts));\n\n              case 38:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function save(_x13, _x14) {\n        return _save.apply(this, arguments);\n      }\n\n      return save;\n    }()\n    /**\n     * Set user-defined metadata.\n     *\n     * The set metadata will be serialized together with the topology\n     * and weights of the model during `save()` calls.\n     *\n     * @param setUserDefinedMetadata\n     */\n\n  }, {\n    key: \"setUserDefinedMetadata\",\n    value: function setUserDefinedMetadata(userDefinedMetadata) {\n      checkUserDefinedMetadata(userDefinedMetadata, this.name);\n      this.userDefinedMetadata = userDefinedMetadata;\n    }\n    /**\n     * Get user-defined metadata.\n     *\n     * The metadata is supplied via one of the two routes:\n     *   1. By calling `setUserDefinedMetadata()`.\n     *   2. Loaded during model loading (if the model is constructed\n     *      via `tf.loadLayersModel()`.)\n     *\n     * If no user-defined metadata is available from either of the\n     * two routes, this function will return `undefined`.\n     */\n\n  }, {\n    key: \"getUserDefinedMetadata\",\n    value: function getUserDefinedMetadata() {\n      return this.userDefinedMetadata;\n    }\n  }]);\n\n  return LayersModel;\n}(Container); // The class name is 'Model' rather than 'LayersModel' for backwards\n// compatibility since this class name shows up in the serialization format.\n\n/** @nocollapse */\n\nLayersModel.className = 'Model';\nserialization.registerClass(LayersModel);\n/**\n * A `tf.Functional` is an alias to `tf.LayersModel`.\n *\n * See also:\n *   `tf.LayersModel`, `tf.Sequential`, `tf.loadLayersModel`.\n */\n\n/** @doc {heading: 'Models', subheading: 'Classes'} */\n\nexport var Functional = /*#__PURE__*/function (_LayersModel) {\n  _inherits(Functional, _LayersModel);\n\n  var _super2 = _createSuper(Functional);\n\n  function Functional() {\n    _classCallCheck(this, Functional);\n\n    return _super2.apply(this, arguments);\n  }\n\n  return Functional;\n}(LayersModel);\nFunctional.className = 'Functional';\nserialization.registerClass(Functional);","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/**\n * Optimizers.\n */\nimport { train } from '@tensorflow/tfjs-core';\nimport { epsilon } from './backend/common';\nimport { ValueError } from './errors'; // Add (de)serialize()\n// Porting note: This diverges from the PyKeras implementation and may need to\n// change based on (de)serialization requirements.\n\nexport function getOptimizer(identifier) {\n  var optimizerMap = {\n    'Adagrad': function Adagrad() {\n      return train.adagrad(0.01);\n    },\n    'Adadelta': function Adadelta() {\n      return train.adadelta(1, 0.95, epsilon());\n    },\n    'Adam': function Adam() {\n      return train.adam(0.001, 0.9, 0.999, epsilon());\n    },\n    'Adamax': function Adamax() {\n      return train.adamax(0.002, 0.9, 0.999, epsilon(), 0);\n    },\n    'RMSProp': function RMSProp() {\n      return train.rmsprop(0.001, 0.9, 0, epsilon());\n    },\n    'SGD': function SGD() {\n      return train.sgd(0.01);\n    }\n  };\n  optimizerMap['adagrad'] = optimizerMap['Adagrad'];\n  optimizerMap['adadelta'] = optimizerMap['Adadelta'];\n  optimizerMap['adam'] = optimizerMap['Adam'];\n  optimizerMap['adamax'] = optimizerMap['Adamax'];\n  optimizerMap['rmsprop'] = optimizerMap['RMSProp'];\n  optimizerMap['sgd'] = optimizerMap['SGD'];\n\n  if (identifier in optimizerMap) {\n    return optimizerMap[identifier]();\n  }\n\n  throw new ValueError(\"Unknown Optimizer \".concat(identifier));\n}","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/get\";\nimport _inherits from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _asyncToGenerator from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _regeneratorRuntime from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/regenerator\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/* Original source keras/models.py */\nimport { dispose, io, serialization, util } from '@tensorflow/tfjs-core';\nimport { getUid } from './backend/state';\nimport { Input } from './engine/input_layer';\nimport { getSourceInputs, Node } from './engine/topology';\nimport { LayersModel } from './engine/training';\nimport { NotImplementedError, RuntimeError, ValueError } from './errors';\nimport { deserialize } from './layers/serialization';\nimport * as generic_utils from './utils/generic_utils';\nimport { convertPythonicToTs } from './utils/serialization_utils';\nimport { getExactlyOneShape } from './utils/types_utils';\n/**\n * Parses a JSON model configuration file and returns a model instance.\n *\n * ```js\n * // This example shows how to serialize a model using `toJSON()` and\n * // deserialize it as another model using `tf.models.modelFromJSON()`.\n * // Note: this example serializes and deserializes only the topology\n * // of the model; the weights of the loaded model will be different\n * // from those of the the original model, due to random weight\n * // initialization.\n * // To load the topology and weights of a model, use `tf.loadLayersModel()`.\n * const model1 = tf.sequential();\n * model1.add(tf.layers.repeatVector({inputShape: [2], n: 4}));\n * // Serialize `model1` as a JSON object.\n * const model1JSON = model1.toJSON(null, false);\n * model1.summary();\n *\n * const model2 = await tf.models.modelFromJSON(model1JSON);\n * model2.summary();\n * ```\n *\n *  @param modelAndWeightsConfig JSON object or string encoding a model and\n *       weights configuration. It can also be only the topology JSON of the\n *       model, in which case the weights will not be loaded.\n *  @param custom_objects Optional dictionary mapping names\n *       (strings) to custom classes or functions to be\n *       considered during deserialization.\n * @returns A TensorFlow.js Layers `tf.LayersModel` instance (uncompiled).\n */\n\nexport function modelFromJSON(_x, _x2) {\n  return _modelFromJSON.apply(this, arguments);\n}\n/**\n * Load a model, including its topology and optionally weights.  See the\n * Tutorial named \"How to import a Keras Model\" for usage examples.\n *\n * Example 1: Save `model`'s topology and weights to browser [local\n * storage](https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage);\n * then load it back.\n *\n * ```js\n * const model = tf.sequential(\n *     {layers: [tf.layers.dense({units: 1, inputShape: [3]})]});\n * console.log('Prediction from original model:');\n * model.predict(tf.ones([1, 3])).print();\n *\n * const saveResults = await model.save('localstorage://my-model-1');\n *\n * const loadedModel = await tf.loadLayersModel('localstorage://my-model-1');\n * console.log('Prediction from loaded model:');\n * loadedModel.predict(tf.ones([1, 3])).print();\n * ```\n *\n * Example 2. Saving `model`'s topology and weights to browser\n * [IndexedDB](https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API);\n * then load it back.\n *\n * ```js\n * const model = tf.sequential(\n *     {layers: [tf.layers.dense({units: 1, inputShape: [3]})]});\n * console.log('Prediction from original model:');\n * model.predict(tf.ones([1, 3])).print();\n *\n * const saveResults = await model.save('indexeddb://my-model-1');\n *\n * const loadedModel = await tf.loadLayersModel('indexeddb://my-model-1');\n * console.log('Prediction from loaded model:');\n * loadedModel.predict(tf.ones([1, 3])).print();\n * ```\n *\n * Example 3. Load a model from user-selected files from HTML\n * [file input\n * elements](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file).\n *\n * ```js\n * // Note: this code snippet will not work without the HTML elements in the\n * //   page\n * const jsonUpload = document.getElementById('json-upload');\n * const weightsUpload = document.getElementById('weights-upload');\n *\n * const model = await tf.loadLayersModel(\n *     tf.io.browserFiles([jsonUpload.files[0], weightsUpload.files[0]]));\n * ```\n *\n * Example 4. Load a model from an HTTP server.\n *\n * ```js\n * const model = await\n *     tf.loadLayersModel('https://storage.googleapis.com/tfjs-models/tfjs/iris_v1/model.json');\n * model.summary();\n * ```\n *\n * @param pathOrIOHandler Can be either of the two formats\n *   1. A string path to the `ModelAndWeightsConfig` JSON describing\n *      the model in the canonical TensorFlow.js format. This path will be\n *      interpreted as a relative HTTP path, to which `fetch` will be used to\n *      request the model topology and weight manifest JSON.\n *      The content of the JSON file is assumed to be a JSON object with the\n *      following fields and values:\n *      - 'modelTopology': A JSON object that can be either of:\n *        1. a model architecture JSON consistent with the format of the return\n *            value of `keras.Model.to_json()`\n *        2. a full model JSON in the format of `keras.models.save_model()`.\n *      - 'weightsManifest': A TensorFlow.js weights manifest.\n *      See the Python converter function `save_model()` for more details.\n *      It is also assumed that model weights can be accessed from relative\n *      paths described by the `paths` fields in weights manifest.\n *   2. An `tf.io.IOHandler` object that loads model artifacts with its `load`\n *      method.\n * @param options Optional configuration arguments for the model loading,\n *   including:\n *   - `strict`: Require that the provided weights exactly match those required\n *     by the layers.  Default true.  Passing false means that both extra\n *     weights and missing weights will be silently ignored.\n *   - `onProgress`: A progress callback of the form:\n *     `(fraction: number) => void`. This callback can be used to monitor the\n *     model-loading process.\n * @returns A `Promise` of `tf.LayersModel`, with the topology and weights\n *     loaded.\n */\n\nfunction _modelFromJSON() {\n  _modelFromJSON = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(modelAndWeightsConfig, customObjects) {\n    var modelTopology, tsConfig, model, weightValues, uniqueWeightValues, _iterator4, _step4, weight;\n\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            if (!('modelTopology' in modelAndWeightsConfig)) {\n              modelAndWeightsConfig = {\n                modelTopology: modelAndWeightsConfig\n              };\n            }\n\n            modelAndWeightsConfig = modelAndWeightsConfig;\n            modelTopology = modelAndWeightsConfig.modelTopology;\n\n            if (modelTopology['model_config'] != null) {\n              // If the model-topology JSON contains a 'model_config' field, then it is\n              // a full model JSON (e.g., from `keras.Model.save()`), which contains\n              // not only the model's architecture in its 'model_config' field, but\n              // additional information such as the model's optimizer. We use only the\n              // 'model_config' field currently.\n              modelTopology = modelTopology['model_config'];\n            }\n\n            tsConfig = convertPythonicToTs(modelTopology);\n            model = deserialize(tsConfig, customObjects);\n\n            if (!(modelAndWeightsConfig.weightsManifest != null)) {\n              _context5.next = 15;\n              break;\n            }\n\n            _context5.next = 9;\n            return io.loadWeights(modelAndWeightsConfig.weightsManifest, modelAndWeightsConfig.pathPrefix, model.weights.map(function (weight) {\n              return weight.originalName;\n            }));\n\n          case 9:\n            weightValues = _context5.sent;\n            // Map the weights to the unique tensor names generated during model loading\n            uniqueWeightValues = {};\n            _iterator4 = _createForOfIteratorHelper(model.weights);\n\n            try {\n              for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                weight = _step4.value;\n                uniqueWeightValues[weight.originalName] = weightValues[weight.originalName];\n              }\n            } catch (err) {\n              _iterator4.e(err);\n            } finally {\n              _iterator4.f();\n            }\n\n            model.loadWeights(uniqueWeightValues); // Dispose temporary weight values.\n\n            dispose(weightValues);\n\n          case 15:\n            return _context5.abrupt(\"return\", model);\n\n          case 16:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _modelFromJSON.apply(this, arguments);\n}\n\nexport function loadLayersModelInternal(_x3, _x4) {\n  return _loadLayersModelInternal.apply(this, arguments);\n}\n/**\n * Load a model and optionally its weights, using an IOHandler object.\n *\n * @param handler The instance of `IOHandler` to be used during the model\n *   loading.\n * @param customObjects Any optional custom objects to be used during model\n *   loading.\n * @param strict Whether the weight loading will be done in strict mode.\n *   Default: `true`.\n */\n\nfunction _loadLayersModelInternal() {\n  _loadLayersModelInternal = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(pathOrIOHandler, options) {\n    var handlers;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            if (options == null) {\n              options = {};\n            }\n\n            if (!(typeof pathOrIOHandler === 'string')) {\n              _context6.next = 10;\n              break;\n            }\n\n            handlers = io.getLoadHandlers(pathOrIOHandler, options);\n\n            if (!(handlers.length === 0)) {\n              _context6.next = 7;\n              break;\n            }\n\n            // For backward compatibility: if no load handler can be found,\n            // assume it is a relative http path.\n            // TODO(cais): Reformat the args into a single `LoadOptions` once the core\n            // is refactored.\n            handlers.push(io.browserHTTPRequest(pathOrIOHandler, options));\n            _context6.next = 9;\n            break;\n\n          case 7:\n            if (!(handlers.length > 1)) {\n              _context6.next = 9;\n              break;\n            }\n\n            throw new ValueError(\"Found more than one (\".concat(handlers.length, \") load handlers for \") + \"URL '\".concat(pathOrIOHandler, \"'\"));\n\n          case 9:\n            pathOrIOHandler = handlers[0];\n\n          case 10:\n            return _context6.abrupt(\"return\", loadLayersModelFromIOHandler(pathOrIOHandler, undefined, options));\n\n          case 11:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _loadLayersModelInternal.apply(this, arguments);\n}\n\nexport function loadLayersModelFromIOHandler(_x5, _x6, _x7) {\n  return _loadLayersModelFromIOHandler.apply(this, arguments);\n}\n\nfunction _loadLayersModelFromIOHandler() {\n  _loadLayersModelFromIOHandler = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(handler, customObjects, options) {\n    var artifacts, modelTopology, strict, fastWeightInit, model, trainingConfig, _decodeModelAndOptimi, modelWeights, optimizerWeights;\n\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            if (options == null) {\n              options = {};\n            }\n\n            if (!(handler.load == null)) {\n              _context7.next = 3;\n              break;\n            }\n\n            throw new ValueError('Cannot proceed with model loading because the IOHandler provided ' + 'does not have the `load` method implemented.');\n\n          case 3:\n            _context7.next = 5;\n            return handler.load();\n\n          case 5:\n            artifacts = _context7.sent;\n            modelTopology = artifacts.modelTopology;\n\n            if (modelTopology['model_config'] != null) {\n              modelTopology = modelTopology['model_config'];\n            }\n\n            strict = options.strict == null ? true : options.strict; // If weights are provided and the weight-loading mode is strict, use\n            // fast weight initialization. This skips costly initializers such as\n            // 'orthogonal' and saves unnecessary computation in cases where\n            // the initialized weight values will immediately be overwritten by\n            // loaded weight values.\n\n            fastWeightInit = artifacts.weightData != null && artifacts.weightSpecs != null && strict;\n            model = deserialize(convertPythonicToTs(modelTopology), customObjects, fastWeightInit);\n            trainingConfig = artifacts.trainingConfig;\n\n            if (trainingConfig != null) {\n              model.loadTrainingConfig(trainingConfig);\n            }\n\n            if (artifacts.userDefinedMetadata != null) {\n              model.setUserDefinedMetadata(artifacts.userDefinedMetadata);\n            } // If weightData is present, load the weights into the model.\n\n\n            if (!(artifacts.weightData != null)) {\n              _context7.next = 24;\n              break;\n            }\n\n            if (!(artifacts.weightSpecs == null)) {\n              _context7.next = 17;\n              break;\n            }\n\n            throw new ValueError('LayersModel artifacts contains weight data, but not weight specs. ' + 'Therefore loading of weights cannot proceed.');\n\n          case 17:\n            _decodeModelAndOptimi = decodeModelAndOptimizerWeights(artifacts.weightData, artifacts.weightSpecs), modelWeights = _decodeModelAndOptimi.modelWeights, optimizerWeights = _decodeModelAndOptimi.optimizerWeights;\n            model.loadWeights(modelWeights, strict);\n\n            if (!(model.optimizer != null && optimizerWeights.length > 0)) {\n              _context7.next = 22;\n              break;\n            }\n\n            _context7.next = 22;\n            return model.optimizer.setWeights(optimizerWeights);\n\n          case 22:\n            // Dispose temporary weight values.\n            dispose(modelWeights);\n            dispose(optimizerWeights.map(function (w) {\n              return w.tensor;\n            }));\n\n          case 24:\n            return _context7.abrupt(\"return\", model);\n\n          case 25:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n  return _loadLayersModelFromIOHandler.apply(this, arguments);\n}\n\nfunction decodeModelAndOptimizerWeights(buffer, specs) {\n  var name2Tensor = io.decodeWeights(buffer, specs);\n  var modelWeights = {};\n  var optimizerWeights = [];\n  specs.forEach(function (spec) {\n    if (spec.group === 'optimizer') {\n      optimizerWeights.push({\n        name: spec.name,\n        tensor: name2Tensor[spec.name]\n      });\n    } else {\n      modelWeights[spec.name] = name2Tensor[spec.name];\n    }\n  });\n  return {\n    modelWeights: modelWeights,\n    optimizerWeights: optimizerWeights\n  };\n}\n/**\n * A model with a stack of layers, feeding linearly from one to the next.\n *\n * `tf.sequential` is a factory function that creates an instance of\n * `tf.Sequential`.\n *\n * ```js\n *  // Define a model for linear regression.\n *  const model = tf.sequential();\n *  model.add(tf.layers.dense({units: 1, inputShape: [1]}));\n *\n *  // Prepare the model for training: Specify the loss and the optimizer.\n *  model.compile({loss: 'meanSquaredError', optimizer: 'sgd'});\n *\n *  // Generate some synthetic data for training.\n *  const xs = tf.tensor2d([1, 2, 3, 4], [4, 1]);\n *  const ys = tf.tensor2d([1, 3, 5, 7], [4, 1]);\n *\n *  // Train the model using the data then do inference on a data point the\n *  // model hasn't seen:\n *  await model.fit(xs, ys);\n *  model.predict(tf.tensor2d([5], [1, 1])).print();\n * ```\n *\n * @doc {heading: 'Models', subheading: 'Classes'}\n */\n\n\nexport var Sequential = /*#__PURE__*/function (_LayersModel) {\n  _inherits(Sequential, _LayersModel);\n\n  var _super = _createSuper(Sequential);\n\n  function Sequential(args) {\n    var _this;\n\n    _classCallCheck(this, Sequential);\n\n    _this = _super.call(this, {\n      inputs: [],\n      outputs: []\n    });\n    args = args || {};\n    _this.trainable = true;\n    _this.built = false; // Set model name.\n\n    _this.name = args.name != null ? args.name : getUid('sequential_'); // Add to the model any layers passed to the constructor.\n\n    if (args.layers != null) {\n      var _iterator = _createForOfIteratorHelper(args.layers),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var layer = _step.value;\n\n          _this.add(layer);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n\n    return _this;\n  } // Helper function to Sequential.add  Throws if the new output shape will be\n  // invalid.\n\n\n  _createClass(Sequential, [{\n    key: \"checkShape\",\n    value: function checkShape(layer) {\n      var shape = layer.inboundNodes[0].outputTensors[0].shape;\n\n      if (shape.some(function (x) {\n        return x < 0;\n      })) {\n        throw new ValueError('Negative dimension size caused by adding layer ' + \"\".concat(layer.name, \" with input shape [\") + \"\".concat(layer.inboundNodes[0].inputTensors[0].shape, \"]\"));\n      }\n    }\n    /**\n     * Adds a layer instance on top of the layer stack.\n     *\n     * ```js\n     *  const model = tf.sequential();\n     *  model.add(tf.layers.dense({units: 8, inputShape: [1]}));\n     *  model.add(tf.layers.dense({units: 4, activation: 'relu6'}));\n     *  model.add(tf.layers.dense({units: 1, activation: 'relu6'}));\n     *  // Note that the untrained model is random at this point.\n     *  model.predict(tf.randomNormal([10, 1])).print();\n     * ```\n     * @param layer Layer instance.\n     *\n     * @exception ValueError In case the `layer` argument does not know its\n     * input shape.\n     * @exception ValueError In case the `layer` argument has multiple output\n     *   tensors, or is already connected somewhere else (forbidden in\n     *   `Sequential` models).\n     *\n     * @doc {heading: 'Models', subheading: 'Classes'}\n     */\n\n  }, {\n    key: \"add\",\n    value: function add(layer) {\n      var isLayerModelInstance = layer instanceof Sequential || layer instanceof LayersModel;\n      var modelLayer;\n\n      if (isLayerModelInstance) {\n        modelLayer = layer;\n\n        if (modelLayer.outputs.length !== 1) {\n          throw new ValueError('All layers in a Sequential model ' + 'should have a single output tensor. ' + 'For multi-output layers, ' + 'use the functional API.');\n        }\n\n        if (modelLayer.inputs.length !== 1) {\n          throw new ValueError('All layers in a Sequential model ' + 'should have a single input tensor. ' + 'For multi-input layers, ' + 'use the functional API.');\n        }\n      }\n\n      if (this.outputs.length === 0) {\n        // first layer in model: check that it is an input layer\n        if (layer.inboundNodes.length === 0) {\n          // create an input layer\n          if (layer.batchInputShape == null) {\n            throw new ValueError('The first layer in a Sequential model must ' + 'get an `inputShape` or `batchInputShape` argument.');\n          } // Instantiate the input layer.\n\n\n          var x = Input({\n            batchShape: layer.batchInputShape,\n            dtype: layer.dtype,\n            name: layer.name + '_input'\n          }); // This will build the current layer and create the node connecting\n          // the current layer to the input layer we just created.\n\n          layer.apply(x);\n        }\n\n        if (isLayerModelInstance) {\n          this.outputs = modelLayer.outputs;\n          this.inputs = modelLayer.inputs;\n        } else {\n          if (layer.inboundNodes.length !== 1) {\n            throw new ValueError('A layer added to a Sequential model must not already be ' + \"connected somewhere else. LayersModel received layer \".concat(layer.name, \" \") + \"which has \".concat(layer.inboundNodes.length, \" pre-existing inbound \") + 'connections.');\n          }\n\n          if (layer.inboundNodes[0].outputTensors.length !== 1) {\n            throw new ValueError('All layers in a Sequential model ' + 'should have a single output tensor. ' + 'For multi-output layers, ' + 'use the functional API.');\n          }\n\n          this.checkShape(layer);\n          this.outputs = [layer.inboundNodes[0].outputTensors[0]];\n          this.inputs = getSourceInputs(this.outputs[0]);\n        }\n\n        this.inboundNodes = []; // We create an input node, which we will keep updated\n        // as we add more layers.\n        // (This call has side effects.)\n        // tslint:disable-next-line:no-unused-expression\n\n        new Node({\n          outboundLayer: this,\n          inboundLayers: [],\n          nodeIndices: [],\n          tensorIndices: [],\n          inputTensors: this.inputs,\n          outputTensors: this.outputs,\n          // no model-level masking for now\n          inputMasks: generic_utils.pyListRepeat(null, this.inputs.length),\n          outputMasks: [null],\n          inputShapes: this.inputs.map(function (x) {\n            return x.shape;\n          }),\n          outputShapes: this.outputs[0].shape\n        });\n      } else {\n        var outputTensor = layer.apply(this.outputs[0]);\n\n        if (Array.isArray(outputTensor)) {\n          throw new TypeError('All layers in a Sequential model ' + 'should have a single output tensor. ' + 'For multi-output layers, ' + 'use the functional API.');\n        }\n\n        this.checkShape(layer);\n        this.outputs = [outputTensor]; // update self.inbound_nodes\n\n        this.inboundNodes[0].outputTensors = this.outputs;\n        this.inboundNodes[0].outputShapes = [this.outputs[0].shape];\n      }\n\n      this.layers.push(layer);\n      this.built = false;\n    }\n    /**\n     * Removes the last layer in the model.\n     *\n     * @exception TypeError if there are no layers in the model.\n     */\n\n  }, {\n    key: \"pop\",\n    value: function pop() {\n      if (this.layers.length === 0) {\n        throw new TypeError('There are no layers in the model.');\n      }\n\n      this.layers.pop();\n\n      if (this.layers.length === 0) {\n        this.outputs = [];\n        this.inboundNodes = [];\n        this.outboundNodes = [];\n      } else {\n        var lastLayerIndex = this.layers.length - 1;\n        this.layers[lastLayerIndex].outboundNodes = [];\n        this.outputs = [this.layers[lastLayerIndex].output]; // update self.inbound_nodes\n\n        this.inboundNodes[0].outputTensors = this.outputs;\n        this.inboundNodes[0].outputShapes = [this.outputs[0].shape];\n      }\n    }\n  }, {\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      if (this.model == null) {\n        this.build();\n      }\n\n      return this.model.call(inputs, kwargs);\n    }\n  }, {\n    key: \"build\",\n    value: function build(inputShape) {\n      // Call `getExactlyOneShape` without using its return value,\n      // to verify that exactly one input shape is provided.\n      getExactlyOneShape(inputShape);\n\n      if (this.inputs.length === 0 || this.outputs.length === 0) {\n        throw new TypeError('Sequential model cannot be built: model is empty.' + ' Add some layers first.');\n      } // actually create the model\n\n\n      this.model = new LayersModel({\n        inputs: this.inputs,\n        outputs: this.outputs[0],\n        name: this.name + '_model'\n      });\n      this.model.trainable = this.trainable; // mirror model attributes\n\n      this.supportsMasking = this.model.supportsMasking; // TODO(michaelterry): Add caches\n\n      this.inputLayers = this.model.inputLayers;\n      this.inputLayersNodeIndices = this.model.inputLayersNodeIndices;\n      this.inputLayersTensorIndices = this.model.inputLayersTensorIndices;\n      this.outputLayers = this.model.outputLayers;\n      this.outputLayersNodeIndices = this.model.outputLayersNodeIndices;\n      this.outputLayersTensorIndices = this.model.outputLayersTensorIndices;\n      this.nodesByDepth = this.model.nodesByDepth;\n      this.containerNodes = this.model.containerNodes;\n      this.outputNames = this.model.outputNames;\n      this.inputNames = this.model.inputNames; // TODO(michaelterry): Add feedInputNames, feedInputs, if needed.\n      // TODO(michaelterry): Add callbackModel if needed.\n\n      this.built = true;\n    }\n  }, {\n    key: \"countParams\",\n    value: function countParams() {\n      if (!this.built) {\n        this.build();\n      }\n\n      return _get(_getPrototypeOf(Sequential.prototype), \"countParams\", this).call(this);\n    }\n    /**\n     * Print a text summary of the Sequential model's layers.\n     *\n     * The summary includes\n     * - Name and type of all layers that comprise the model.\n     * - Output shape(s) of the layers\n     * - Number of weight parameters of each layer\n     * - The total number of trainable and non-trainable parameters of the\n     * model.\n     *\n     * ```js\n     * const model = tf.sequential();\n     * model.add(\n     *     tf.layers.dense({units: 100, inputShape: [10], activation: 'relu'}));\n     * model.add(tf.layers.dense({units: 1, activation: 'sigmoid'}));\n     *\n     * model.summary();\n     * ```\n     *\n     * @param lineLength Custom line length, in number of characters.\n     * @param positions Custom widths of each of the columns, as either\n     *   fractions of `lineLength` (e.g., `[0.5, 0.75, 1]`) or absolute number\n     *   of characters (e.g., `[30, 50, 65]`). Each number corresponds to\n     *   right-most (i.e., ending) position of a column.\n     * @param printFn Custom print function. Can be used to replace the default\n     *   `console.log`. For example, you can use `x => {}` to mute the printed\n     *   messages in the console.\n     *\n     * @doc {heading: 'Models', subheading: 'Classes'}\n     */\n\n  }, {\n    key: \"summary\",\n    value: function summary(lineLength, positions) {\n      var printFn = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : console.log;\n\n      if (!this.built) {\n        this.build();\n      }\n\n      _get(_getPrototypeOf(Sequential.prototype), \"summary\", this).call(this, lineLength, positions, printFn);\n    }\n    /**\n     * Sets the weights of the model.\n     *\n     * @param weights Should be a list of Tensors with shapes and types matching\n     *   the output of `model.getWeights()`.\n     */\n\n  }, {\n    key: \"setWeights\",\n    value: function setWeights(weights) {\n      if (this.model == null) {\n        this.build();\n      }\n\n      this.model.setWeights(weights);\n    }\n    /**\n     * Returns the loss value & metrics values for the model in test mode.\n     *\n     * Loss and metrics are specified during `compile()`, which needs to happen\n     * before calls to `evaluate()`.\n     *\n     * Computation is done in batches.\n     *\n     * ```js\n     * const model = tf.sequential({\n     *   layers: [tf.layers.dense({units: 1, inputShape: [10]})]\n     * });\n     * model.compile({optimizer: 'sgd', loss: 'meanSquaredError'});\n     * const result = model.evaluate(tf.ones([8, 10]), tf.ones([8, 1]), {\n     *   batchSize: 4,\n     * });\n     * result.print();\n     * ```\n     *\n     * @param x `tf.Tensor` of test data, or an `Array` of `tf.Tensor`s if the\n     * model has multiple inputs.\n     * @param y `tf.Tensor` of target data, or an `Array` of `tf.Tensor`s if the\n     * model has multiple outputs.\n     * @param args A `ModelEvaluateConfig`, containing optional fields.\n     *\n     * @return `Scalar` test loss (if the model has a single output and no\n     *   metrics) or `Array` of `Scalar`s (if the model has multiple outputs\n     *   and/or metrics). The attribute `model.metricsNames`\n     *   will give you the display labels for the scalar outputs.\n     *\n     * @doc {heading: 'Models', subheading: 'Classes'}\n     */\n\n  }, {\n    key: \"evaluate\",\n    value: function evaluate(x, y) {\n      var args = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      if (!this.built) {\n        throw new RuntimeError('The model needs to be compiled before being used.');\n      }\n\n      return this.model.evaluate(x, y, args);\n    } // TODO(cais): Add code snippet below once real dataset objects are\n    //   available.\n\n    /**\n     * Evaluate model using a dataset object.\n     *\n     * Note: Unlike `evaluate()`, this method is asynchronous (`async`);\n     *\n     * @param dataset A dataset object. Its `iterator()` method is expected\n     *   to generate a dataset iterator object, the `next()` method of which\n     *   is expected to produce data batches for evaluation. The return value\n     *   of the `next()` call ought to contain a boolean `done` field and a\n     *   `value` field. The `value` field is expected to be an array of two\n     *   `tf.Tensor`s or an array of two nested `tf.Tensor` structures. The former\n     *   case is for models with exactly one input and one output (e.g..\n     *   a sequential model). The latter case is for models with multiple\n     *   inputs and/or multiple outputs. Of the two items in the array, the\n     *   first is the input feature(s) and the second is the output target(s).\n     * @param args A configuration object for the dataset-based evaluation.\n     * @returns Loss and metric values as an Array of `Scalar` objects.\n     *\n     * @doc {heading: 'Models', subheading: 'Classes'}\n     */\n\n  }, {\n    key: \"evaluateDataset\",\n    value: function () {\n      var _evaluateDataset = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dataset, args) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this.built) {\n                  _context.next = 2;\n                  break;\n                }\n\n                throw new RuntimeError('The model needs to be compiled before being used.');\n\n              case 2:\n                return _context.abrupt(\"return\", this.model.evaluateDataset(dataset, args));\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function evaluateDataset(_x8, _x9) {\n        return _evaluateDataset.apply(this, arguments);\n      }\n\n      return evaluateDataset;\n    }()\n    /**\n     * Generates output predictions for the input samples.\n     *\n     * Computation is done in batches.\n     *\n     * Note: the \"step\" mode of predict() is currently not supported.\n     *   This is because the TensorFow.js core backend is imperative only.\n     *\n     * ```js\n     * const model = tf.sequential({\n     *   layers: [tf.layers.dense({units: 1, inputShape: [10]})]\n     * });\n     * model.predict(tf.ones([2, 10])).print();\n     * ```\n     *\n     * @param x The input data, as a Tensor, or an `Array` of `tf.Tensor`s if\n     *   the model has multiple inputs.\n     * @param conifg A `ModelPredictConfig` object containing optional fields.\n     *\n     * @return `tf.Tensor`(s) of predictions.\n     *\n     * @exception ValueError In case of mismatch between the provided input data\n     *   and the model's expectations, or in case a stateful model receives a\n     *   number of samples that is not a multiple of the batch size.\n     *\n     * @doc {heading: 'Models', subheading: 'Classes'}\n     */\n\n  }, {\n    key: \"predict\",\n    value: function predict(x) {\n      var args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (this.model == null) {\n        this.build();\n      }\n\n      return this.model.predict(x, args);\n    }\n    /**\n     * Returns predictions for a single batch of samples.\n     *\n     * @param x: Input samples, as a Tensor, or list of Tensors (if the model\n     *   has multiple inputs).\n     * @return Tensor(s) of predictions\n     */\n\n  }, {\n    key: \"predictOnBatch\",\n    value: function predictOnBatch(x) {\n      if (this.model == null) {\n        this.build();\n      }\n\n      return this.model.predictOnBatch(x);\n    }\n    /**\n     * See `LayersModel.compile`.\n     *\n     * @param args\n     */\n\n  }, {\n    key: \"compile\",\n    value: function compile(args) {\n      this.build();\n      this.model.compile(args);\n      this.optimizer_ = this.model.optimizer; // tslint:disable-next-line:no-any\n\n      this.isOptimizerOwned = this.model.isOptimizerOwned;\n      this.loss = this.model.loss;\n      this.metrics = this.model.metrics; // TODO(cais): Add this.lossWeights, this.sampleWeightMode,\n      //   this.weightedMetrics, this.targets.\n\n      this.metricsTensors = this.model.metricsTensors;\n      this.metricsNames = this.model.metricsNames; // TODO(cais): Add sampleWeights.\n    }\n  }, {\n    key: \"optimizer\",\n    get: function get() {\n      return this.model == null ? undefined : this.model.optimizer;\n    },\n    set: function set(optimizer) {\n      this.model.optimizer = optimizer;\n    }\n    /**\n     * Trains the model for a fixed number of epochs (iterations on a dataset).\n     *\n     * ```js\n     * const model = tf.sequential({\n     *   layers: [tf.layers.dense({units: 1, inputShape: [10]})]\n     * });\n     * model.compile({optimizer: 'sgd', loss: 'meanSquaredError'});\n     * const history = await model.fit(tf.ones([8, 10]), tf.ones([8, 1]), {\n     *   batchSize: 4,\n     *   epochs: 3\n     * });\n     * console.log(history.history.loss[0]);\n     * ```\n     *\n     * @param x `tf.Tensor` of training data, or an array of `tf.Tensor`s if the\n     * model has multiple inputs. If all inputs in the model are named, you can\n     * also pass a dictionary mapping input names to `tf.Tensor`s.\n     * @param y `tf.Tensor` of target (label) data, or an array of `tf.Tensor`s if\n     * the model has multiple outputs. If all outputs in the model are named, you\n     *  can also pass a dictionary mapping output names to `tf.Tensor`s.\n     * @param args  A `ModelFitConfig`, containing optional fields.\n     *\n     * @return A `History` instance. Its `history` attribute contains all\n     *   information collected during training.\n     *\n     * @exception ValueError In case of mismatch between the provided input data\n     *   and what the model expects.\n     *\n     * @doc {heading: 'Models', subheading: 'Classes'}\n     */\n\n  }, {\n    key: \"fit\",\n    value: function () {\n      var _fit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(x, y) {\n        var args,\n            _args2 = arguments;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                args = _args2.length > 2 && _args2[2] !== undefined ? _args2[2] : {};\n\n                if (this.built) {\n                  _context2.next = 3;\n                  break;\n                }\n\n                throw new RuntimeError('The model needs to be compiled before ' + 'being used.');\n\n              case 3:\n                return _context2.abrupt(\"return\", this.model.fit(x, y, args));\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function fit(_x10, _x11) {\n        return _fit.apply(this, arguments);\n      }\n\n      return fit;\n    }()\n    /**\n     * Trains the model using a dataset object.\n     *\n     * ```js\n     * const xArray = [\n     *   [1, 1, 1, 1, 1, 1, 1, 1, 1],\n     *   [1, 1, 1, 1, 1, 1, 1, 1, 1],\n     *   [1, 1, 1, 1, 1, 1, 1, 1, 1],\n     *   [1, 1, 1, 1, 1, 1, 1, 1, 1],\n     * ];\n     * const yArray = [1, 1, 1, 1];\n     * // Create a dataset from the JavaScript array.\n     * const xDataset = tf.data.array(xArray);\n     * const yDataset = tf.data.array(yArray);\n     * // Zip combines the `x` and `y` Datasets into a single Dataset, the\n     * // iterator of which will return an object containing of two tensors,\n     * // corresponding to `x` and `y`.  The call to `batch(4)` will bundle\n     * // four such samples into a single object, with the same keys now pointing\n     * // to tensors that hold 4 examples, organized along the batch dimension.\n     * // The call to `shuffle(4)` causes each iteration through the dataset to\n     * // happen in a different order.  The size of the shuffle window is 4.\n     * const xyDataset = tf.data.zip({xs: xDataset, ys: yDataset})\n     *     .batch(4)\n     *     .shuffle(4);\n     * const model = tf.sequential({\n     *   layers: [tf.layers.dense({units: 1, inputShape: [9]})]\n     * });\n     * model.compile({optimizer: 'sgd', loss: 'meanSquaredError'});\n     * const history = await model.fitDataset(xyDataset, {\n     *   epochs: 4,\n     *   callbacks: {onEpochEnd: (epoch, logs) => console.log(logs.loss)}\n     * });\n     * ```\n     *\n     * @param dataset A dataset object. Its `iterator()` method is expected to\n     *   generate a dataset iterator object, the `next()` method of which is\n     *   expected to produce data batches for evaluation. The return value of the\n     *   `next()` call ought to contain a boolean `done` field and a `value`\n     *   field.\n     *\n     *   The `value` field is expected to be an object of with fields\n     *   `xs` and `ys`, which point to the feature tensor and the target tensor,\n     *   respectively. This case is for models with exactly one input and one\n     *   output (e.g.. a sequential model). For example:\n     *   ```js\n     *   {value: {xs: xsTensor, ys: ysTensor}, done: false}\n     *   ```\n     *\n     *   If the model has multiple inputs, the `xs` field of `value` should\n     *   be an object mapping input names to their respective feature tensors.\n     *   For example:\n     *   ```js\n     *   {\n     *     value: {\n     *       xs: {\n     *         input_1: xsTensor1,\n     *         input_2: xsTensor2\n     *       },\n     *       ys: ysTensor\n     *     },\n     *     done: false\n     *   }\n     *   ```\n     *   If the model has multiple outputs, the `ys` field of `value` should\n     *   be an object mapping output names to their respective target tensors.\n     *   For example:\n     *   ```js\n     *   {\n     *     value: {\n     *       xs: xsTensor,\n     *       ys: {\n     *         output_1: ysTensor1,\n     *         output_2: ysTensor2\n     *       },\n     *     },\n     *     done: false\n     *   }\n     *   ```\n     * @param args A `ModelFitDatasetArgs`, containing optional fields.\n     *\n     * @return A `History` instance. Its `history` attribute contains all\n     *   information collected during training.\n     *\n     * @doc {heading: 'Models', subheading: 'Classes', ignoreCI: true}\n     */\n\n  }, {\n    key: \"fitDataset\",\n    value: function () {\n      var _fitDataset = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dataset, args) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (this.built) {\n                  _context3.next = 2;\n                  break;\n                }\n\n                throw new RuntimeError('The model needs to be compiled before ' + 'being used.');\n\n              case 2:\n                return _context3.abrupt(\"return\", this.model.fitDataset(dataset, args));\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function fitDataset(_x12, _x13) {\n        return _fitDataset.apply(this, arguments);\n      }\n\n      return fitDataset;\n    }()\n    /**\n     * Runs a single gradient update on a single batch of data.\n     *\n     * This method differs from `fit()` and `fitDataset()` in the following\n     * regards:\n     *   - It operates on exactly one batch of data.\n     *   - It returns only the loss and matric values, instead of\n     *     returning the batch-by-batch loss and metric values.\n     *   - It doesn't support fine-grained options such as verbosity and\n     *     callbacks.\n     *\n     * @param x Input data. It could be one of the following:\n     *   - A `tf.Tensor`, or an Array of `tf.Tensor`s (in case the model has\n     *     multiple inputs).\n     *   - An Object mapping input names to corresponding `tf.Tensor` (if the\n     *     model has named inputs).\n     * @param y Target darta. It could be either a `tf.Tensor` a multiple\n     *   `tf.Tensor`s. It should be consistent with `x`.\n     * @returns Training loss or losses (in case the model has\n     *   multiple outputs), along with metrics (if any), as numbers.\n     *\n     * @doc {heading: 'Models', subheading: 'Classes'}\n     */\n\n  }, {\n    key: \"trainOnBatch\",\n    value: function () {\n      var _trainOnBatch = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(x, y) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                return _context4.abrupt(\"return\", this.model.trainOnBatch(x, y));\n\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function trainOnBatch(_x14, _x15) {\n        return _trainOnBatch.apply(this, arguments);\n      }\n\n      return trainOnBatch;\n    }()\n    /* See parent class for JsDoc */\n\n    /** @nocollapse */\n\n  }, {\n    key: \"stopTraining\",\n    get: function get() {\n      if (this.model == null) {\n        throw new ValueError('Cannot get the stopTraining property of a sequential model before ' + 'it is compiled.');\n      }\n\n      return this.model.stopTraining;\n    } // TODO(cais): Override get trainableWeights() here\n    // tslint:disable-next-line:no-any\n    ,\n    set:\n    /**\n     * Setter used for force stopping of LayersModel.fit() (i.e., training).\n     *\n     * Example:\n     *\n     * ```js\n     * const model = tf.sequential();\n     * model.add(tf.layers.dense({units: 1, inputShape: [10]}));\n     * model.compile({loss: 'meanSquaredError', optimizer: 'sgd'});\n     * const xs = tf.ones([8, 10]);\n     * const ys = tf.zeros([8, 1]);\n     *\n     * const history = await model.fit(xs, ys, {\n     *   epochs: 10,\n     *   callbacks: {\n     *     onEpochEnd: async (epoch, logs) => {\n     *       if (epoch === 2) {\n     *         model.stopTraining = true;\n     *       }\n     *     }\n     *   }\n     * });\n     *\n     * // There should be only 3 values in the loss array, instead of 10 values,\n     * // due to the stopping after 3 epochs.\n     * console.log(history.history.loss);\n     * ```\n     */\n    function set(stop) {\n      // TODO(cais): When refactoring to remove the composition pattern happens,\n      // remove this method overriding.\n      if (this.model == null) {\n        throw new ValueError('Cannot set the stopTraining property of a sequential model before ' + 'it is compiled.');\n      }\n\n      this.model.stopTraining = stop;\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      // NOTE(cais): We override the return type of getConfig() to `any` here,\n      //   because the `Sequential` class is a special case among `Container`\n      //   subtypes in that its getConfig() method returns an Array (not a\n      //   dict).\n      var layers = [];\n\n      var _iterator2 = _createForOfIteratorHelper(this.layers),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var layer = _step2.value;\n          var dict = {};\n          dict['className'] = layer.getClassName();\n          dict['config'] = layer.getConfig();\n          layers.push(dict);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      return {\n        name: this.name,\n        layers: layers\n      };\n    }\n  }], [{\n    key: \"fromConfig\",\n    value: function fromConfig(cls, config) {\n      var customObjects = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var fastWeightInit = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      var configArray;\n      var extraModelConfig = {};\n\n      if (config instanceof Array) {\n        if (!(config[0].className != null) || config[0]['className'] === 'Merge') {\n          throw new ValueError('Legacy serialization format not supported yet.');\n        }\n\n        configArray = config;\n      } else {\n        util.assert(config['layers'] != null, function () {\n          return \"When the config data for a Sequential model is not an Array, \" + \"it must be an Object that contains the 'layers' field.\";\n        });\n        configArray = config['layers'];\n        delete config['layers'];\n        extraModelConfig = config;\n      }\n\n      var model = new cls(extraModelConfig);\n\n      if (!(model instanceof Sequential)) {\n        throw new NotImplementedError(\"Sequential.fromConfig called on non-Sequential input: \".concat(model));\n      }\n\n      var _iterator3 = _createForOfIteratorHelper(configArray),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var conf = _step3.value;\n          var _customObjects = undefined;\n          var layer = deserialize(conf, _customObjects, fastWeightInit);\n\n          if (fastWeightInit) {\n            layer.setFastWeightInitDuringBuild(true);\n          }\n\n          model.add(layer);\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      return model;\n    }\n  }]);\n\n  return Sequential;\n}(LayersModel);\n/** @nocollapse */\n\nSequential.className = 'Sequential';\nserialization.registerClass(Sequential);","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\nimport { CallbackConstructorRegistry } from './base_callbacks';\nimport { Input } from './engine/input_layer';\nimport { LayersModel } from './engine/training';\nimport { loadLayersModelInternal, Sequential } from './models'; // TODO(cais): Add doc string to all the public static functions in this\n//   class; include exectuable JavaScript code snippets where applicable\n//   (b/74074458).\n// LayersModel and related factory methods.\n\n/**\n * A model is a data structure that consists of `Layers` and defines inputs\n * and outputs.\n *\n * The key difference between `tf.model` and `tf.sequential` is that\n * `tf.model` is more generic, supporting an arbitrary graph (without\n * cycles) of layers. `tf.sequential` is less generic and supports only a linear\n * stack of layers.\n *\n * When creating a `tf.LayersModel`, specify its input(s) and output(s). Layers\n * are used to wire input(s) to output(s).\n *\n * For example, the following code snippet defines a model consisting of\n * two `dense` layers, with 10 and 4 units, respectively.\n *\n * ```js\n * // Define input, which has a size of 5 (not including batch dimension).\n * const input = tf.input({shape: [5]});\n *\n * // First dense layer uses relu activation.\n * const denseLayer1 = tf.layers.dense({units: 10, activation: 'relu'});\n * // Second dense layer uses softmax activation.\n * const denseLayer2 = tf.layers.dense({units: 4, activation: 'softmax'});\n *\n * // Obtain the output symbolic tensor by applying the layers on the input.\n * const output = denseLayer2.apply(denseLayer1.apply(input));\n *\n * // Create the model based on the inputs.\n * const model = tf.model({inputs: input, outputs: output});\n *\n * // The model can be used for training, evaluation and prediction.\n * // For example, the following line runs prediction with the model on\n * // some fake data.\n * model.predict(tf.ones([2, 5])).print();\n * ```\n * See also:\n *   `tf.sequential`, `tf.loadLayersModel`.\n *\n * @doc {heading: 'Models', subheading: 'Creation'}\n */\n\nexport function model(args) {\n  return new LayersModel(args);\n}\n/**\n * Creates a `tf.Sequential` model.  A sequential model is any model where the\n * outputs of one layer are the inputs to the next layer, i.e. the model\n * topology is a simple 'stack' of layers, with no branching or skipping.\n *\n * This means that the first layer passed to a `tf.Sequential` model should have\n * a defined input shape. What that means is that it should have received an\n * `inputShape` or `batchInputShape` argument, or for some type of layers\n * (recurrent, Dense...) an `inputDim` argument.\n *\n * The key difference between `tf.model` and `tf.sequential` is that\n * `tf.sequential` is less generic, supporting only a linear stack of layers.\n * `tf.model` is more generic and supports an arbitrary graph (without\n * cycles) of layers.\n *\n * Examples:\n *\n * ```js\n * const model = tf.sequential();\n *\n * // First layer must have an input shape defined.\n * model.add(tf.layers.dense({units: 32, inputShape: [50]}));\n * // Afterwards, TF.js does automatic shape inference.\n * model.add(tf.layers.dense({units: 4}));\n *\n * // Inspect the inferred shape of the model's output, which equals\n * // `[null, 4]`. The 1st dimension is the undetermined batch dimension; the\n * // 2nd is the output size of the model's last layer.\n * console.log(JSON.stringify(model.outputs[0].shape));\n * ```\n *\n * It is also possible to specify a batch size (with potentially undetermined\n * batch dimension, denoted by \"null\") for the first layer using the\n * `batchInputShape` key. The following example is equivalent to the above:\n *\n * ```js\n * const model = tf.sequential();\n *\n * // First layer must have a defined input shape\n * model.add(tf.layers.dense({units: 32, batchInputShape: [null, 50]}));\n * // Afterwards, TF.js does automatic shape inference.\n * model.add(tf.layers.dense({units: 4}));\n *\n * // Inspect the inferred shape of the model's output.\n * console.log(JSON.stringify(model.outputs[0].shape));\n * ```\n *\n * You can also use an `Array` of already-constructed `Layer`s to create\n * a `tf.Sequential` model:\n *\n * ```js\n * const model = tf.sequential({\n *   layers: [tf.layers.dense({units: 32, inputShape: [50]}),\n *            tf.layers.dense({units: 4})]\n * });\n * console.log(JSON.stringify(model.outputs[0].shape));\n * ```\n *\n * @doc {heading: 'Models', subheading: 'Creation'}\n */\n\nexport function sequential(config) {\n  return new Sequential(config);\n}\n/**\n * Load a model composed of Layer objects, including its topology and optionally\n * weights. See the Tutorial named \"How to import a Keras Model\" for usage\n * examples.\n *\n * This method is applicable to:\n *\n * 1. Models created with the `tf.layers.*`, `tf.sequential`, and\n * `tf.model` APIs of TensorFlow.js and later saved with the\n * `tf.LayersModel.save` method.\n * 2. Models converted from Keras or TensorFlow tf.keras using the\n * [tensorflowjs_converter](https://github.com/tensorflow/tfjs/tree/master/tfjs-converter).\n *\n * This mode is *not* applicable to TensorFlow `SavedModel`s or their converted\n * forms. For those models, use `tf.loadGraphModel`.\n *\n * Example 1. Load a model from an HTTP server.\n *\n * ```js\n * const model = await tf.loadLayersModel(\n *     'https://storage.googleapis.com/tfjs-models/tfjs/iris_v1/model.json');\n * model.summary();\n * ```\n *\n * Example 2: Save `model`'s topology and weights to browser [local\n * storage](https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage);\n * then load it back.\n *\n * ```js\n * const model = tf.sequential(\n *     {layers: [tf.layers.dense({units: 1, inputShape: [3]})]});\n * console.log('Prediction from original model:');\n * model.predict(tf.ones([1, 3])).print();\n *\n * const saveResults = await model.save('localstorage://my-model-1');\n *\n * const loadedModel = await tf.loadLayersModel('localstorage://my-model-1');\n * console.log('Prediction from loaded model:');\n * loadedModel.predict(tf.ones([1, 3])).print();\n * ```\n *\n * Example 3. Saving `model`'s topology and weights to browser\n * [IndexedDB](https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API);\n * then load it back.\n *\n * ```js\n * const model = tf.sequential(\n *     {layers: [tf.layers.dense({units: 1, inputShape: [3]})]});\n * console.log('Prediction from original model:');\n * model.predict(tf.ones([1, 3])).print();\n *\n * const saveResults = await model.save('indexeddb://my-model-1');\n *\n * const loadedModel = await tf.loadLayersModel('indexeddb://my-model-1');\n * console.log('Prediction from loaded model:');\n * loadedModel.predict(tf.ones([1, 3])).print();\n * ```\n *\n * Example 4. Load a model from user-selected files from HTML\n * [file input\n * elements](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file).\n *\n * ```js\n * // Note: this code snippet will not work without the HTML elements in the\n * //   page\n * const jsonUpload = document.getElementById('json-upload');\n * const weightsUpload = document.getElementById('weights-upload');\n *\n * const model = await tf.loadLayersModel(\n *     tf.io.browserFiles([jsonUpload.files[0], weightsUpload.files[0]]));\n * ```\n *\n * @param pathOrIOHandler Can be either of the two formats\n *   1. A string path to the `ModelAndWeightsConfig` JSON describing\n *      the model in the canonical TensorFlow.js format. For file://\n *      (tfjs-node-only), http:// and https:// schemas, the path can be\n *      either absolute or relative.\n *   2. An `tf.io.IOHandler` object that loads model artifacts with its `load`\n *      method.\n * @param options Optional configuration arguments for the model loading,\n *   including:\n *   - `strict`: Require that the provided weights exactly match those required\n *     by the layers.  Default true.  Passing false means that both extra\n *     weights and missing weights will be silently ignored.\n *   - `onProgress`: A function of the signature `(fraction: number) => void',\n *     that can be used as the progress callback for the model loading.\n * @returns A `Promise` of `tf.LayersModel`, with the topology and weights\n *     loaded.\n *\n * @doc {heading: 'Models', subheading: 'Loading'}\n */\n\nexport function loadLayersModel(pathOrIOHandler, options) {\n  if (options == null) {\n    options = {};\n  }\n\n  return loadLayersModelInternal(pathOrIOHandler, options);\n}\n/**\n * Used to instantiate an input to a model as a `tf.SymbolicTensor`.\n *\n * Users should call the `input` factory function for\n * consistency with other generator functions.\n *\n * Example:\n *\n * ```js\n * // Defines a simple logistic regression model with 32 dimensional input\n * // and 3 dimensional output.\n * const x = tf.input({shape: [32]});\n * const y = tf.layers.dense({units: 3, activation: 'softmax'}).apply(x);\n * const model = tf.model({inputs: x, outputs: y});\n * model.predict(tf.ones([2, 32])).print();\n * ```\n *\n * Note: `input` is only necessary when using `model`. When using\n * `sequential`, specify `inputShape` for the first layer or use `inputLayer`\n * as the first layer.\n *\n * @doc {heading: 'Models', subheading: 'Inputs'}\n */\n\nexport function input(config) {\n  return Input(config);\n}\nexport function registerCallbackConstructor(verbosityLevel, callbackConstructor) {\n  CallbackConstructorRegistry.registerCallbackConstructor(verbosityLevel, callbackConstructor);\n}","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n// Layer activation functions\nimport * as tfc from '@tensorflow/tfjs-core';\nimport { serialization, tidy } from '@tensorflow/tfjs-core';\nimport * as K from './backend/tfjs_backend';\nimport { deserializeKerasObject } from './utils/generic_utils';\n/**\n * Base class for Activations.\n *\n * Special note: due to cross-language compatibility reasons, the\n * static readonly className field in this family of classes must be set to\n * the initialLowerCamelCase name of the activation.\n */\n\nexport var Activation = /*#__PURE__*/function (_serialization$Serial) {\n  _inherits(Activation, _serialization$Serial);\n\n  var _super = _createSuper(Activation);\n\n  function Activation() {\n    _classCallCheck(this, Activation);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Activation, [{\n    key: \"getConfig\",\n    value: function getConfig() {\n      return {};\n    }\n  }]);\n\n  return Activation;\n}(serialization.Serializable);\n/**\n * Exponential linear unit (ELU).\n * Reference: https://arxiv.org/abs/1511.07289\n */\n\nexport var Elu = /*#__PURE__*/function (_Activation) {\n  _inherits(Elu, _Activation);\n\n  var _super2 = _createSuper(Elu);\n\n  function Elu() {\n    _classCallCheck(this, Elu);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(Elu, [{\n    key: \"apply\",\n    value:\n    /**\n     * Calculate the activation function.\n     *\n     * @param x: Input.\n     * @param alpha: Scaling factor the negative section.\n     * @return Output of the ELU activation.\n     */\n    function apply(x) {\n      var alpha = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      return K.elu(x, alpha);\n    }\n  }]);\n\n  return Elu;\n}(Activation);\n/** @nocollapse */\n\nElu.className = 'elu';\nserialization.registerClass(Elu);\n/**\n * Scaled Exponential Linear Unit. (Klambauer et al., 2017).\n * Reference: Self-Normalizing Neural Networks, https://arxiv.org/abs/1706.02515\n * Notes:\n *   - To be used together with the initialization \"lecunNormal\".\n *   - To be used together with the dropout variant \"AlphaDropout\".\n */\n\nexport var Selu = /*#__PURE__*/function (_Activation2) {\n  _inherits(Selu, _Activation2);\n\n  var _super3 = _createSuper(Selu);\n\n  function Selu() {\n    _classCallCheck(this, Selu);\n\n    return _super3.apply(this, arguments);\n  }\n\n  _createClass(Selu, [{\n    key: \"apply\",\n    value: function apply(x) {\n      return tfc.selu(x);\n    }\n  }]);\n\n  return Selu;\n}(Activation);\n/** @nocollapse */\n\nSelu.className = 'selu';\nserialization.registerClass(Selu);\n/**\n *  Rectified linear unit\n */\n\nexport var Relu = /*#__PURE__*/function (_Activation3) {\n  _inherits(Relu, _Activation3);\n\n  var _super4 = _createSuper(Relu);\n\n  function Relu() {\n    _classCallCheck(this, Relu);\n\n    return _super4.apply(this, arguments);\n  }\n\n  _createClass(Relu, [{\n    key: \"apply\",\n    value: function apply(x) {\n      return tfc.relu(x);\n    }\n  }]);\n\n  return Relu;\n}(Activation);\n/** @nocollapse */\n\nRelu.className = 'relu';\nserialization.registerClass(Relu);\n/**\n * Rectified linear unit activation maxing out at 6.0.\n */\n\nexport var Relu6 = /*#__PURE__*/function (_Activation4) {\n  _inherits(Relu6, _Activation4);\n\n  var _super5 = _createSuper(Relu6);\n\n  function Relu6() {\n    _classCallCheck(this, Relu6);\n\n    return _super5.apply(this, arguments);\n  }\n\n  _createClass(Relu6, [{\n    key: \"apply\",\n    value: function apply(x) {\n      return tidy(function () {\n        return tfc.minimum(6.0, tfc.relu(x));\n      });\n    }\n  }]);\n\n  return Relu6;\n}(Activation);\n/** @nocollapse */\n\nRelu6.className = 'relu6';\nserialization.registerClass(Relu6); //* Linear activation (no-op) */\n\nexport var Linear = /*#__PURE__*/function (_Activation5) {\n  _inherits(Linear, _Activation5);\n\n  var _super6 = _createSuper(Linear);\n\n  function Linear() {\n    _classCallCheck(this, Linear);\n\n    return _super6.apply(this, arguments);\n  }\n\n  _createClass(Linear, [{\n    key: \"apply\",\n    value: function apply(x) {\n      return x;\n    }\n  }]);\n\n  return Linear;\n}(Activation);\n/** @nocollapse */\n\nLinear.className = 'linear';\nserialization.registerClass(Linear);\n/**\n * Sigmoid activation function.\n */\n\nexport var Sigmoid = /*#__PURE__*/function (_Activation6) {\n  _inherits(Sigmoid, _Activation6);\n\n  var _super7 = _createSuper(Sigmoid);\n\n  function Sigmoid() {\n    _classCallCheck(this, Sigmoid);\n\n    return _super7.apply(this, arguments);\n  }\n\n  _createClass(Sigmoid, [{\n    key: \"apply\",\n    value: function apply(x) {\n      return tfc.sigmoid(x);\n    }\n  }]);\n\n  return Sigmoid;\n}(Activation);\n/** @nocollapse */\n\nSigmoid.className = 'sigmoid';\nserialization.registerClass(Sigmoid);\n/**\n * Segment-wise linear approximation of sigmoid.\n */\n\nexport var HardSigmoid = /*#__PURE__*/function (_Activation7) {\n  _inherits(HardSigmoid, _Activation7);\n\n  var _super8 = _createSuper(HardSigmoid);\n\n  function HardSigmoid() {\n    _classCallCheck(this, HardSigmoid);\n\n    return _super8.apply(this, arguments);\n  }\n\n  _createClass(HardSigmoid, [{\n    key: \"apply\",\n    value: function apply(x) {\n      return K.hardSigmoid(x);\n    }\n  }]);\n\n  return HardSigmoid;\n}(Activation);\n/** @nocollapse */\n\nHardSigmoid.className = 'hardSigmoid';\nserialization.registerClass(HardSigmoid);\n/**\n * Softplus activation function.\n */\n\nexport var Softplus = /*#__PURE__*/function (_Activation8) {\n  _inherits(Softplus, _Activation8);\n\n  var _super9 = _createSuper(Softplus);\n\n  function Softplus() {\n    _classCallCheck(this, Softplus);\n\n    return _super9.apply(this, arguments);\n  }\n\n  _createClass(Softplus, [{\n    key: \"apply\",\n    value: function apply(x) {\n      return tfc.softplus(x);\n    }\n  }]);\n\n  return Softplus;\n}(Activation);\n/** @nocollapse */\n\nSoftplus.className = 'softplus';\nserialization.registerClass(Softplus);\n/**\n * Softsign activation function.\n */\n\nexport var Softsign = /*#__PURE__*/function (_Activation9) {\n  _inherits(Softsign, _Activation9);\n\n  var _super10 = _createSuper(Softsign);\n\n  function Softsign() {\n    _classCallCheck(this, Softsign);\n\n    return _super10.apply(this, arguments);\n  }\n\n  _createClass(Softsign, [{\n    key: \"apply\",\n    value: function apply(x) {\n      return K.softsign(x);\n    }\n  }]);\n\n  return Softsign;\n}(Activation);\n/** @nocollapse */\n\nSoftsign.className = 'softsign';\nserialization.registerClass(Softsign);\n/**\n * Hyperbolic tangent function.\n */\n\nexport var Tanh = /*#__PURE__*/function (_Activation10) {\n  _inherits(Tanh, _Activation10);\n\n  var _super11 = _createSuper(Tanh);\n\n  function Tanh() {\n    _classCallCheck(this, Tanh);\n\n    return _super11.apply(this, arguments);\n  }\n\n  _createClass(Tanh, [{\n    key: \"apply\",\n    value: function apply(x) {\n      return tfc.tanh(x);\n    }\n  }]);\n\n  return Tanh;\n}(Activation);\n/** @nocollapse */\n\nTanh.className = 'tanh';\nserialization.registerClass(Tanh);\n/**\n * Softmax activation function\n */\n\nexport var Softmax = /*#__PURE__*/function (_Activation11) {\n  _inherits(Softmax, _Activation11);\n\n  var _super12 = _createSuper(Softmax);\n\n  function Softmax() {\n    _classCallCheck(this, Softmax);\n\n    return _super12.apply(this, arguments);\n  }\n\n  _createClass(Softmax, [{\n    key: \"apply\",\n    value:\n    /**\n     * Calculate the activation function.\n     *\n     * @param x Tensor.\n     * @param axis Integer, axis along which the softmax normalization is applied.\n     * Invalid if < 2, as softmax across 1 (the batch dimension) is assumed to be\n     * an error.\n     *\n     * @returns a Tensor of the same shape as x\n     *\n     * @throws ValueError: In case `dim(x) < 2`.\n     */\n    function apply(x) {\n      var axis = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\n      return tfc.softmax(x, axis);\n    }\n  }]);\n\n  return Softmax;\n}(Activation);\n/** @nocollapse */\n\nSoftmax.className = 'softmax';\nserialization.registerClass(Softmax);\n/**\n * Log softmax activation function\n */\n\nexport var LogSoftmax = /*#__PURE__*/function (_Activation12) {\n  _inherits(LogSoftmax, _Activation12);\n\n  var _super13 = _createSuper(LogSoftmax);\n\n  function LogSoftmax() {\n    _classCallCheck(this, LogSoftmax);\n\n    return _super13.apply(this, arguments);\n  }\n\n  _createClass(LogSoftmax, [{\n    key: \"apply\",\n    value:\n    /**\n     * Calculate the activation function of log softmax:\n     * log( exp(x_i) / sum(exp(x)) )\n     *\n     * @param x Tensor.\n     * @param axis Integer, axis along which the softmax normalization is applied.\n     * Invalid if < 2, as softmax across 1 (the batch dimension) is assumed to be\n     * an error.\n     *\n     * @returns a Tensor of the same shape as x\n     *\n     * @throws ValueError: In case `dim(x) < 2`.\n     */\n    function apply(x) {\n      var axis = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\n      return tfc.logSoftmax(x, axis);\n    }\n  }]);\n\n  return LogSoftmax;\n}(Activation);\n/** @nocollapse */\n\nLogSoftmax.className = 'logSoftmax';\nserialization.registerClass(LogSoftmax);\n/**\n * Swish activation function\n */\n\nexport var Swish = /*#__PURE__*/function (_Activation13) {\n  _inherits(Swish, _Activation13);\n\n  var _super14 = _createSuper(Swish);\n\n  function Swish() {\n    _classCallCheck(this, Swish);\n\n    return _super14.apply(this, arguments);\n  }\n\n  _createClass(Swish, [{\n    key: \"apply\",\n    value:\n    /**\n     * Calculate the activation function.\n     *\n     * @param x Tensor.\n     * @param alpha Scaling factor for the sigmoid function.\n     * @returns a Tensor of the same shape as x\n     */\n    function apply(x) {\n      var alpha = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      return tidy(function () {\n        return tfc.sigmoid(x.mul(alpha)).mul(x);\n      });\n    }\n  }]);\n\n  return Swish;\n}(Activation);\n/** @nocollapse */\n\nSwish.className = 'swish';\nserialization.registerClass(Swish);\nexport function serializeActivation(activation) {\n  return activation.getClassName();\n}\nexport function deserializeActivation(config) {\n  var customObjects = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return deserializeKerasObject(config, serialization.SerializationMap.getMap().classNameMap, customObjects, 'activation');\n}\nexport function getActivation(identifier) {\n  if (identifier == null) {\n    var config = {};\n    config['className'] = 'linear';\n    config['config'] = {};\n    return deserializeActivation(config);\n  }\n\n  if (typeof identifier === 'string') {\n    var _config = {};\n    _config['className'] = identifier;\n    _config['config'] = {};\n    return deserializeActivation(_config);\n  } else if (identifier instanceof Activation) {\n    return identifier;\n  } else {\n    return deserializeActivation(identifier);\n  }\n}","import _createClass from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _inherits from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/* original source: keras/regularizers.py */\nimport * as tfc from '@tensorflow/tfjs-core';\nimport { abs, add, serialization, sum, tidy, zeros } from '@tensorflow/tfjs-core';\nimport * as K from './backend/tfjs_backend';\nimport { deserializeKerasObject, serializeKerasObject } from './utils/generic_utils';\n\nfunction assertObjectArgs(args) {\n  if (args != null && typeof args !== 'object') {\n    throw new Error(\"Argument to L1L2 regularizer's constructor is expected to be an \" + \"object, but received: \".concat(args));\n  }\n}\n/**\n * Regularizer base class.\n */\n\n\nexport var Regularizer = /*#__PURE__*/function (_serialization$Serial) {\n  _inherits(Regularizer, _serialization$Serial);\n\n  var _super = _createSuper(Regularizer);\n\n  function Regularizer() {\n    _classCallCheck(this, Regularizer);\n\n    return _super.apply(this, arguments);\n  }\n\n  return Regularizer;\n}(serialization.Serializable);\nexport var L1L2 = /*#__PURE__*/function (_Regularizer) {\n  _inherits(L1L2, _Regularizer);\n\n  var _super2 = _createSuper(L1L2);\n\n  function L1L2(args) {\n    var _this;\n\n    _classCallCheck(this, L1L2);\n\n    _this = _super2.call(this);\n    assertObjectArgs(args);\n    _this.l1 = args == null || args.l1 == null ? 0.01 : args.l1;\n    _this.l2 = args == null || args.l2 == null ? 0.01 : args.l2;\n    _this.hasL1 = _this.l1 !== 0;\n    _this.hasL2 = _this.l2 !== 0;\n    return _this;\n  }\n  /**\n   * Porting note: Renamed from __call__.\n   * @param x Variable of which to calculate the regularization score.\n   */\n\n\n  _createClass(L1L2, [{\n    key: \"apply\",\n    value: function apply(x) {\n      var _this2 = this;\n\n      return tidy(function () {\n        var regularization = zeros([1]);\n\n        if (_this2.hasL1) {\n          regularization = add(regularization, sum(tfc.mul(_this2.l1, abs(x))));\n        }\n\n        if (_this2.hasL2) {\n          regularization = add(regularization, sum(tfc.mul(_this2.l2, K.square(x))));\n        }\n\n        return regularization.asScalar();\n      });\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      return {\n        'l1': this.l1,\n        'l2': this.l2\n      };\n    }\n    /** @nocollapse */\n\n  }], [{\n    key: \"fromConfig\",\n    value: function fromConfig(cls, config) {\n      return new cls({\n        l1: config['l1'],\n        l2: config['l2']\n      });\n    }\n  }]);\n\n  return L1L2;\n}(Regularizer);\n/** @nocollapse */\n\nL1L2.className = 'L1L2';\nserialization.registerClass(L1L2);\nexport function l1(args) {\n  assertObjectArgs(args);\n  return new L1L2({\n    l1: args != null ? args.l1 : null,\n    l2: 0\n  });\n}\nexport function l2(args) {\n  assertObjectArgs(args);\n  return new L1L2({\n    l2: args != null ? args.l2 : null,\n    l1: 0\n  });\n} // Maps the JavaScript-like identifier keys to the corresponding keras symbols.\n\nexport var REGULARIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP = {\n  'l1l2': 'L1L2'\n};\nexport function serializeRegularizer(constraint) {\n  return serializeKerasObject(constraint);\n}\nexport function deserializeRegularizer(config) {\n  var customObjects = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return deserializeKerasObject(config, serialization.SerializationMap.getMap().classNameMap, customObjects, 'regularizer');\n}\nexport function getRegularizer(identifier) {\n  if (identifier == null) {\n    return null;\n  }\n\n  if (typeof identifier === 'string') {\n    var className = identifier in REGULARIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP ? REGULARIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP[identifier] : identifier;\n    var config = {\n      className: className,\n      config: {}\n    };\n    return deserializeRegularizer(config);\n  } else if (identifier instanceof Regularizer) {\n    return identifier;\n  } else {\n    return deserializeRegularizer(identifier);\n  }\n}","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/get\";\nimport _inherits from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/**\n *  Advanced activation layers.\n */\nimport { clipByValue, elu, leakyRelu, prelu, relu, serialization } from '@tensorflow/tfjs-core';\nimport { Softmax as softmaxActivation } from '../activations';\nimport { cast } from '../backend/tfjs_backend';\nimport { getConstraint, serializeConstraint } from '../constraints';\nimport { InputSpec, Layer } from '../engine/topology';\nimport { NotImplementedError, ValueError } from '../errors';\nimport { getInitializer, serializeInitializer } from '../initializers';\nimport { getRegularizer, serializeRegularizer } from '../regularizers';\nimport { getExactlyOneShape, getExactlyOneTensor } from '../utils/types_utils';\nexport var ReLU = /*#__PURE__*/function (_Layer) {\n  _inherits(ReLU, _Layer);\n\n  var _super = _createSuper(ReLU);\n\n  function ReLU(args) {\n    var _this;\n\n    _classCallCheck(this, ReLU);\n\n    _this = _super.call(this, args == null ? {} : args);\n    _this.supportsMasking = true;\n\n    if (args != null) {\n      _this.maxValue = args.maxValue;\n    }\n\n    return _this;\n  }\n\n  _createClass(ReLU, [{\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      inputs = getExactlyOneTensor(inputs);\n      var output = relu(inputs);\n\n      if (this.maxValue != null) {\n        output = clipByValue(output, 0, this.maxValue);\n      }\n\n      return output;\n    }\n  }, {\n    key: \"computeOutputShape\",\n    value: function computeOutputShape(inputShape) {\n      return inputShape;\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      var config = {\n        maxValue: this.maxValue\n      };\n\n      var baseConfig = _get(_getPrototypeOf(ReLU.prototype), \"getConfig\", this).call(this);\n\n      Object.assign(config, baseConfig);\n      return config;\n    }\n  }]);\n\n  return ReLU;\n}(Layer);\n/** @nocollapse */\n\nReLU.className = 'ReLU';\nserialization.registerClass(ReLU);\nexport var LeakyReLU = /*#__PURE__*/function (_Layer2) {\n  _inherits(LeakyReLU, _Layer2);\n\n  var _super2 = _createSuper(LeakyReLU);\n\n  function LeakyReLU(args) {\n    var _this2;\n\n    _classCallCheck(this, LeakyReLU);\n\n    _this2 = _super2.call(this, args == null ? {} : args);\n    _this2.DEFAULT_ALPHA = 0.3;\n\n    if (args == null) {\n      args = {};\n    }\n\n    _this2.alpha = args.alpha == null ? _this2.DEFAULT_ALPHA : args.alpha;\n    return _this2;\n  }\n\n  _createClass(LeakyReLU, [{\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      var x = getExactlyOneTensor(inputs);\n      return leakyRelu(x, this.alpha);\n    }\n  }, {\n    key: \"computeOutputShape\",\n    value: function computeOutputShape(inputShape) {\n      return inputShape;\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      var config = {\n        alpha: this.alpha\n      };\n\n      var baseConfig = _get(_getPrototypeOf(LeakyReLU.prototype), \"getConfig\", this).call(this);\n\n      Object.assign(config, baseConfig);\n      return config;\n    }\n  }]);\n\n  return LeakyReLU;\n}(Layer);\n/** @nocollapse */\n\nLeakyReLU.className = 'LeakyReLU';\nserialization.registerClass(LeakyReLU);\nexport var PReLU = /*#__PURE__*/function (_Layer3) {\n  _inherits(PReLU, _Layer3);\n\n  var _super3 = _createSuper(PReLU);\n\n  function PReLU(args) {\n    var _this3;\n\n    _classCallCheck(this, PReLU);\n\n    _this3 = _super3.call(this, args == null ? {} : args);\n    _this3.DEFAULT_ALPHA_INITIALIZER = 'zeros';\n\n    if (args == null) {\n      args = {};\n    }\n\n    _this3.supportsMasking = true;\n    _this3.alphaInitializer = getInitializer(args.alphaInitializer || _this3.DEFAULT_ALPHA_INITIALIZER);\n    _this3.alphaRegularizer = getRegularizer(args.alphaRegularizer);\n    _this3.alphaConstraint = getConstraint(args.alphaConstraint);\n\n    if (args.sharedAxes == null) {\n      _this3.sharedAxes = null;\n    } else if (Array.isArray(args.sharedAxes)) {\n      _this3.sharedAxes = args.sharedAxes;\n    } else if (typeof args.sharedAxes === 'number') {\n      _this3.sharedAxes = [args.sharedAxes];\n    } else {\n      throw new ValueError(\"Expected sharedAxes to be a number or an array of numbers, \" + \"but got \".concat(args.sharedAxes));\n    }\n\n    return _this3;\n  }\n\n  _createClass(PReLU, [{\n    key: \"build\",\n    value: function build(inputShape) {\n      inputShape = getExactlyOneShape(inputShape);\n      var paramShape = inputShape.slice(1);\n\n      if (this.sharedAxes != null) {\n        var _iterator = _createForOfIteratorHelper(this.sharedAxes),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var i = _step.value;\n            paramShape[i - 1] = 1;\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n\n      this.alpha = this.addWeight('alpha', paramShape, 'float32', this.alphaInitializer, this.alphaRegularizer, true, this.alphaConstraint); // Set input spec.\n\n      var axes = {};\n\n      if (this.sharedAxes != null) {\n        for (var _i = 1; _i < inputShape.length; ++_i) {\n          axes[_i] = inputShape[_i];\n        }\n      }\n\n      this.inputSpec = [new InputSpec({\n        ndim: inputShape.length,\n        axes: axes\n      })];\n      this.built = true;\n    }\n  }, {\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      inputs = getExactlyOneTensor(inputs);\n      return prelu(inputs, this.alpha.read());\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      var config = {\n        alphaInitializer: serializeInitializer(this.alphaInitializer),\n        alphaRegularizer: serializeRegularizer(this.alphaRegularizer),\n        alphaConstraint: serializeConstraint(this.alphaConstraint),\n        sharedAxes: this.sharedAxes\n      };\n\n      var baseConfig = _get(_getPrototypeOf(PReLU.prototype), \"getConfig\", this).call(this);\n\n      Object.assign(config, baseConfig);\n      return config;\n    }\n  }]);\n\n  return PReLU;\n}(Layer);\n/** @nocollapse */\n\nPReLU.className = 'PReLU';\nserialization.registerClass(PReLU);\nexport var ELU = /*#__PURE__*/function (_Layer4) {\n  _inherits(ELU, _Layer4);\n\n  var _super4 = _createSuper(ELU);\n\n  function ELU(args) {\n    var _this4;\n\n    _classCallCheck(this, ELU);\n\n    _this4 = _super4.call(this, args == null ? {} : args);\n    _this4.DEFAULT_ALPHA = 1.0;\n\n    if (args == null) {\n      args = {};\n    }\n\n    if (args.alpha != null && args.alpha !== _this4.DEFAULT_ALPHA) {\n      throw new NotImplementedError(\"Non-default alpha value (\".concat(args.alpha, \") is not supported by the \") + \"ELU layer yet.\");\n    }\n\n    _this4.alpha = args.alpha == null ? _this4.DEFAULT_ALPHA : args.alpha;\n    return _this4;\n  }\n\n  _createClass(ELU, [{\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      var x = getExactlyOneTensor(inputs);\n      return elu(x);\n    }\n  }, {\n    key: \"computeOutputShape\",\n    value: function computeOutputShape(inputShape) {\n      return inputShape;\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      var config = {\n        alpha: this.alpha\n      };\n\n      var baseConfig = _get(_getPrototypeOf(ELU.prototype), \"getConfig\", this).call(this);\n\n      Object.assign(config, baseConfig);\n      return config;\n    }\n  }]);\n\n  return ELU;\n}(Layer);\n/** @nocollapse */\n\nELU.className = 'ELU';\nserialization.registerClass(ELU);\nexport var ThresholdedReLU = /*#__PURE__*/function (_Layer5) {\n  _inherits(ThresholdedReLU, _Layer5);\n\n  var _super5 = _createSuper(ThresholdedReLU);\n\n  function ThresholdedReLU(args) {\n    var _this5;\n\n    _classCallCheck(this, ThresholdedReLU);\n\n    _this5 = _super5.call(this, args == null ? {} : args);\n    _this5.DEFAULT_THETA = 1.0;\n\n    if (args == null) {\n      args = {};\n    }\n\n    _this5.theta = args.theta == null ? _this5.DEFAULT_THETA : args.theta;\n    return _this5;\n  }\n\n  _createClass(ThresholdedReLU, [{\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      var x = getExactlyOneTensor(inputs);\n      return x.mul(cast(x.greater(this.theta), 'float32'));\n    }\n  }, {\n    key: \"computeOutputShape\",\n    value: function computeOutputShape(inputShape) {\n      return inputShape;\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      var config = {\n        theta: this.theta\n      };\n\n      var baseConfig = _get(_getPrototypeOf(ThresholdedReLU.prototype), \"getConfig\", this).call(this);\n\n      Object.assign(config, baseConfig);\n      return config;\n    }\n  }]);\n\n  return ThresholdedReLU;\n}(Layer);\n/** @nocollapse */\n\nThresholdedReLU.className = 'ThresholdedReLU';\nserialization.registerClass(ThresholdedReLU);\nexport var Softmax = /*#__PURE__*/function (_Layer6) {\n  _inherits(Softmax, _Layer6);\n\n  var _super6 = _createSuper(Softmax);\n\n  function Softmax(args) {\n    var _this6;\n\n    _classCallCheck(this, Softmax);\n\n    _this6 = _super6.call(this, args == null ? {} : args);\n    _this6.DEFAULT_AXIS = 1.0;\n\n    if (args == null) {\n      args = {};\n    }\n\n    _this6.softmax = new softmaxActivation().apply;\n    _this6.axis = args.axis == null ? _this6.DEFAULT_AXIS : args.axis;\n    return _this6;\n  }\n\n  _createClass(Softmax, [{\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      var x = getExactlyOneTensor(inputs);\n      return this.softmax(x, this.axis);\n    }\n  }, {\n    key: \"computeOutputShape\",\n    value: function computeOutputShape(inputShape) {\n      return inputShape;\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      var config = {\n        axis: this.axis\n      };\n\n      var baseConfig = _get(_getPrototypeOf(Softmax.prototype), \"getConfig\", this).call(this);\n\n      Object.assign(config, baseConfig);\n      return config;\n    }\n  }]);\n\n  return Softmax;\n}(Layer);\n/** @nocollapse */\n\nSoftmax.className = 'Softmax';\nserialization.registerClass(Softmax);","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\nimport { ValueError } from '../errors';\nimport { pyListRepeat } from './generic_utils';\nimport { isInteger, max } from './math_utils';\n/**\n * Transforms a single number of array of numbers into an array of numbers.\n * @param value\n * @param n: The size of the tuple to be returned.\n * @param name: Name of the parameter, used for generating error messages.\n * @returns An array of numbers.\n */\n\nexport function normalizeArray(value, n, name) {\n  if (typeof value === 'number') {\n    return pyListRepeat(value, n);\n  } else {\n    if (value.length !== n) {\n      throw new ValueError(\"The \".concat(name, \" argument must be an integer or tuple of \").concat(n, \" integers.\") + \" Received: \".concat(value.length, \" elements.\"));\n    }\n\n    for (var i = 0; i < n; ++i) {\n      var singleValue = value[i];\n\n      if (!isInteger(singleValue)) {\n        throw new ValueError(\"The \".concat(name, \" argument must be an integer or tuple of \").concat(n) + \" integers. Received: \".concat(JSON.stringify(value), \" including a\") + \" non-integer number \".concat(singleValue));\n      }\n    }\n\n    return value;\n  }\n}\n/**\n * Determines output length of a convolution given input length.\n * @param inputLength\n * @param filterSize\n * @param padding\n * @param stride\n * @param dilation: dilation rate.\n */\n\nexport function convOutputLength(inputLength, filterSize, padding, stride) {\n  var dilation = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n\n  if (inputLength == null) {\n    return inputLength;\n  }\n\n  var dilatedFilterSize = filterSize + (filterSize - 1) * (dilation - 1);\n  var outputLength;\n\n  if (padding === 'same') {\n    outputLength = inputLength;\n  } else {\n    // VALID\n    outputLength = inputLength - dilatedFilterSize + 1;\n  }\n\n  return Math.floor((outputLength + stride - 1) / stride);\n}\nexport function deconvLength(dimSize, strideSize, kernelSize, padding) {\n  if (dimSize == null) {\n    return null;\n  }\n\n  if (padding === 'valid') {\n    dimSize = dimSize * strideSize + max([kernelSize - strideSize, 0]);\n  } else if (padding === 'same') {\n    dimSize = dimSize * strideSize;\n  } else {\n    throw new ValueError(\"Unsupport padding mode: \".concat(padding, \".\"));\n  }\n\n  return dimSize;\n}","import _defineProperty from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/get\";\nimport _inherits from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/**\n * TensorFlow.js Layers: Convolutional Layers\n */\nimport * as tfc from '@tensorflow/tfjs-core';\nimport { serialization, tidy } from '@tensorflow/tfjs-core';\nimport { getActivation, serializeActivation } from '../activations';\nimport { imageDataFormat } from '../backend/common';\nimport * as K from '../backend/tfjs_backend';\nimport { checkDataFormat, checkInterpolationFormat, checkPaddingMode } from '../common';\nimport { getConstraint, serializeConstraint } from '../constraints';\nimport { InputSpec, Layer } from '../engine/topology';\nimport { NotImplementedError, ValueError } from '../errors';\nimport { getInitializer, serializeInitializer } from '../initializers';\nimport { getRegularizer, serializeRegularizer } from '../regularizers';\nimport { convOutputLength, deconvLength, normalizeArray } from '../utils/conv_utils';\nimport * as generic_utils from '../utils/generic_utils';\nimport { getExactlyOneShape, getExactlyOneTensor } from '../utils/types_utils';\n/**\n * Transpose and cast the input before the conv2d.\n * @param x Input image tensor.\n * @param dataFormat\n */\n\nexport function preprocessConv2DInput(x, dataFormat) {\n  // TODO(cais): Cast type to float32 if not.\n  return tidy(function () {\n    checkDataFormat(dataFormat);\n\n    if (dataFormat === 'channelsFirst') {\n      return tfc.transpose(x, [0, 2, 3, 1]); // NCHW -> NHWC.\n    } else {\n      return x;\n    }\n  });\n}\n/**\n * Transpose and cast the input before the conv3d.\n * @param x Input image tensor.\n * @param dataFormat\n */\n\nexport function preprocessConv3DInput(x, dataFormat) {\n  return tidy(function () {\n    checkDataFormat(dataFormat);\n\n    if (dataFormat === 'channelsFirst') {\n      return tfc.transpose(x, [0, 2, 3, 4, 1]); // NCDHW -> NDHWC.\n    } else {\n      return x;\n    }\n  });\n}\n/**\n * 1D-convolution with bias added.\n *\n * Porting Note: This function does not exist in the Python Keras backend.\n *   It is exactly the same as `conv2d`, except the added `bias`.\n *\n * @param x Input tensor, rank-3, of shape `[batchSize, width, inChannels]`.\n * @param kernel Kernel, rank-3, of shape `[filterWidth, inDepth, outDepth]`.\n * @param bias Bias, rank-3, of shape `[outDepth]`.\n * @param strides\n * @param padding Padding mode.\n * @param dataFormat Data format.\n * @param dilationRate\n * @returns The result of the 1D convolution.\n * @throws ValueError, if `x`, `kernel` or `bias` is not of the correct rank.\n */\n\nexport function conv1dWithBias(x, kernel, bias) {\n  var strides = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n  var padding = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'valid';\n  var dataFormat = arguments.length > 5 ? arguments[5] : undefined;\n  var dilationRate = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 1;\n  return tidy(function () {\n    if (dataFormat == null) {\n      dataFormat = imageDataFormat();\n    }\n\n    checkDataFormat(dataFormat); // Check the ranks of x, kernel and bias.\n\n    if (x.shape.length !== 3) {\n      throw new ValueError(\"The input of a conv1dWithBias operation should be 3, but is \" + \"\".concat(x.shape.length, \" instead.\"));\n    }\n\n    if (kernel.shape.length !== 3) {\n      throw new ValueError(\"The kernel for a conv1dWithBias operation should be 3, but is \" + \"\".concat(kernel.shape.length, \" instead\"));\n    }\n\n    if (bias != null && bias.shape.length !== 1) {\n      throw new ValueError(\"The bias for a conv1dWithBias operation should be 1, but is \" + \"\".concat(kernel.shape.length, \" instead\"));\n    } // TODO(cais): Support CAUSAL padding mode.\n\n\n    if (dataFormat === 'channelsFirst') {\n      x = tfc.transpose(x, [0, 2, 1]); // NCW -> NWC.\n    }\n\n    if (padding === 'causal') {\n      throw new NotImplementedError('The support for CAUSAL padding mode in conv1dWithBias is not ' + 'implemented yet.');\n    }\n\n    var y = tfc.conv1d(x, kernel, strides, padding === 'same' ? 'same' : 'valid', 'NWC', dilationRate);\n\n    if (bias != null) {\n      y = K.biasAdd(y, bias);\n    }\n\n    return y;\n  });\n}\n/**\n * 1D-convolution.\n *\n * @param x Input tensor, rank-3, of shape `[batchSize, width, inChannels]`.\n * @param kernel Kernel, rank-3, of shape `[filterWidth, inDepth, outDepth]`.s\n * @param strides\n * @param padding Padding mode.\n * @param dataFormat Data format.\n * @param dilationRate\n * @returns The result of the 1D convolution.\n * @throws ValueError, if `x`, `kernel` or `bias` is not of the correct rank.\n */\n\nexport function conv1d(x, kernel) {\n  var strides = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var padding = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'valid';\n  var dataFormat = arguments.length > 4 ? arguments[4] : undefined;\n  var dilationRate = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 1;\n  return tidy(function () {\n    checkDataFormat(dataFormat);\n    return conv1dWithBias(x, kernel, null, strides, padding, dataFormat, dilationRate);\n  });\n}\n/**\n * 2D Convolution\n * @param x\n * @param kernel kernel of the convolution.\n * @param strides strides array.\n * @param padding padding mode. Default to 'valid'.\n * @param dataFormat data format. Defaults to 'channelsLast'.\n * @param dilationRate dilation rate array.\n * @returns Result of the 2D pooling.\n */\n\nexport function conv2d(x, kernel) {\n  var strides = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [1, 1];\n  var padding = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'valid';\n  var dataFormat = arguments.length > 4 ? arguments[4] : undefined;\n  var dilationRate = arguments.length > 5 ? arguments[5] : undefined;\n  return tidy(function () {\n    checkDataFormat(dataFormat);\n    return conv2dWithBiasActivation(x, kernel, null, strides, padding, dataFormat, dilationRate);\n  });\n}\n/**\n * 2D Convolution with an added bias and optional activation.\n * Note: This function does not exist in the Python Keras Backend. This function\n * is exactly the same as `conv2d`, except the added `bias`.\n */\n\nexport function conv2dWithBiasActivation(x, kernel, bias) {\n  var strides = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [1, 1];\n  var padding = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'valid';\n  var dataFormat = arguments.length > 5 ? arguments[5] : undefined;\n  var dilationRate = arguments.length > 6 ? arguments[6] : undefined;\n  var activation = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : null;\n  return tidy(function () {\n    if (dataFormat == null) {\n      dataFormat = imageDataFormat();\n    }\n\n    checkDataFormat(dataFormat);\n\n    if (x.rank !== 3 && x.rank !== 4) {\n      throw new ValueError(\"conv2dWithBiasActivation expects input to be of rank 3 or 4, \" + \"but received \".concat(x.rank, \".\"));\n    }\n\n    if (kernel.rank !== 3 && kernel.rank !== 4) {\n      throw new ValueError(\"conv2dWithBiasActivation expects kernel to be of rank 3 or 4, \" + \"but received \".concat(x.rank, \".\"));\n    }\n\n    var y = preprocessConv2DInput(x, dataFormat);\n\n    if (padding === 'causal') {\n      throw new NotImplementedError('The support for CAUSAL padding mode in conv1dWithBias is not ' + 'implemented yet.');\n    }\n\n    y = tfc.fused.conv2d({\n      x: y,\n      filter: kernel,\n      strides: strides,\n      pad: padding === 'same' ? 'same' : 'valid',\n      dilations: dilationRate,\n      dataFormat: 'NHWC',\n      bias: bias,\n      activation: activation\n    });\n\n    if (dataFormat === 'channelsFirst') {\n      y = tfc.transpose(y, [0, 3, 1, 2]);\n    }\n\n    return y;\n  });\n}\n/**\n * 3D Convolution.\n * @param x\n * @param kernel kernel of the convolution.\n * @param strides strides array.\n * @param padding padding mode. Default to 'valid'.\n * @param dataFormat data format. Defaults to 'channelsLast'.\n * @param dilationRate dilation rate array.\n * @returns Result of the 3D convolution.\n */\n\nexport function conv3d(x, kernel) {\n  var strides = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [1, 1, 1];\n  var padding = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'valid';\n  var dataFormat = arguments.length > 4 ? arguments[4] : undefined;\n  var dilationRate = arguments.length > 5 ? arguments[5] : undefined;\n  return tidy(function () {\n    checkDataFormat(dataFormat);\n    return conv3dWithBias(x, kernel, null, strides, padding, dataFormat, dilationRate);\n  });\n}\n/**\n * 3D Convolution with an added bias.\n * Note: This function does not exist in the Python Keras Backend. This function\n * is exactly the same as `conv3d`, except the added `bias`.\n */\n\nexport function conv3dWithBias(x, kernel, bias) {\n  var strides = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [1, 1, 1];\n  var padding = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'valid';\n  var dataFormat = arguments.length > 5 ? arguments[5] : undefined;\n  var dilationRate = arguments.length > 6 ? arguments[6] : undefined;\n  return tidy(function () {\n    if (dataFormat == null) {\n      dataFormat = imageDataFormat();\n    }\n\n    checkDataFormat(dataFormat);\n\n    if (x.rank !== 4 && x.rank !== 5) {\n      throw new ValueError(\"conv3dWithBias expects input to be of rank 4 or 5, but received \" + \"\".concat(x.rank, \".\"));\n    }\n\n    if (kernel.rank !== 4 && kernel.rank !== 5) {\n      throw new ValueError(\"conv3dWithBias expects kernel to be of rank 4 or 5, but received \" + \"\".concat(x.rank, \".\"));\n    }\n\n    var y = preprocessConv3DInput(x, dataFormat);\n\n    if (padding === 'causal') {\n      throw new NotImplementedError('The support for CAUSAL padding mode in conv3dWithBias is not ' + 'implemented yet.');\n    }\n\n    y = tfc.conv3d(y, kernel, strides, padding === 'same' ? 'same' : 'valid', 'NDHWC', dilationRate);\n\n    if (bias != null) {\n      y = K.biasAdd(y, bias);\n    }\n\n    if (dataFormat === 'channelsFirst') {\n      y = tfc.transpose(y, [0, 4, 1, 2, 3]);\n    }\n\n    return y;\n  });\n}\n/**\n * Abstract convolution layer.\n */\n\nexport var BaseConv = /*#__PURE__*/function (_Layer) {\n  _inherits(BaseConv, _Layer);\n\n  var _super = _createSuper(BaseConv);\n\n  function BaseConv(rank, args) {\n    var _this;\n\n    _classCallCheck(this, BaseConv);\n\n    _this = _super.call(this, args);\n    _this.bias = null;\n    _this.DEFAULT_KERNEL_INITIALIZER = 'glorotNormal';\n    _this.DEFAULT_BIAS_INITIALIZER = 'zeros';\n    BaseConv.verifyArgs(args);\n    _this.rank = rank;\n    generic_utils.assertPositiveInteger(_this.rank, 'rank');\n\n    if (_this.rank !== 1 && _this.rank !== 2 && _this.rank !== 3) {\n      throw new NotImplementedError(\"Convolution layer for rank other than 1, 2, or 3 (\".concat(_this.rank, \") is \") + \"not implemented yet.\");\n    }\n\n    _this.kernelSize = normalizeArray(args.kernelSize, rank, 'kernelSize');\n    _this.strides = normalizeArray(args.strides == null ? 1 : args.strides, rank, 'strides');\n    _this.padding = args.padding == null ? 'valid' : args.padding;\n    checkPaddingMode(_this.padding);\n    _this.dataFormat = args.dataFormat == null ? 'channelsLast' : args.dataFormat;\n    checkDataFormat(_this.dataFormat);\n    _this.activation = getActivation(args.activation);\n    _this.useBias = args.useBias == null ? true : args.useBias;\n    _this.biasInitializer = getInitializer(args.biasInitializer || _this.DEFAULT_BIAS_INITIALIZER);\n    _this.biasConstraint = getConstraint(args.biasConstraint);\n    _this.biasRegularizer = getRegularizer(args.biasRegularizer);\n    _this.activityRegularizer = getRegularizer(args.activityRegularizer);\n    _this.dilationRate = normalizeArray(args.dilationRate == null ? 1 : args.dilationRate, rank, 'dilationRate');\n\n    if (_this.rank === 1 && Array.isArray(_this.dilationRate) && _this.dilationRate.length !== 1) {\n      throw new ValueError(\"dilationRate must be a number or an array of a single number \" + \"for 1D convolution, but received \" + \"\".concat(JSON.stringify(_this.dilationRate)));\n    } else if (_this.rank === 2) {\n      if (typeof _this.dilationRate === 'number') {\n        _this.dilationRate = [_this.dilationRate, _this.dilationRate];\n      } else if (_this.dilationRate.length !== 2) {\n        throw new ValueError(\"dilationRate must be a number or array of two numbers for 2D \" + \"convolution, but received \".concat(JSON.stringify(_this.dilationRate)));\n      }\n    } else if (_this.rank === 3) {\n      if (typeof _this.dilationRate === 'number') {\n        _this.dilationRate = [_this.dilationRate, _this.dilationRate, _this.dilationRate];\n      } else if (_this.dilationRate.length !== 3) {\n        throw new ValueError(\"dilationRate must be a number or array of three numbers for 3D \" + \"convolution, but received \".concat(JSON.stringify(_this.dilationRate)));\n      }\n    }\n\n    return _this;\n  }\n\n  _createClass(BaseConv, [{\n    key: \"getConfig\",\n    value: function getConfig() {\n      var config = {\n        kernelSize: this.kernelSize,\n        strides: this.strides,\n        padding: this.padding,\n        dataFormat: this.dataFormat,\n        dilationRate: this.dilationRate,\n        activation: serializeActivation(this.activation),\n        useBias: this.useBias,\n        biasInitializer: serializeInitializer(this.biasInitializer),\n        biasRegularizer: serializeRegularizer(this.biasRegularizer),\n        activityRegularizer: serializeRegularizer(this.activityRegularizer),\n        biasConstraint: serializeConstraint(this.biasConstraint)\n      };\n\n      var baseConfig = _get(_getPrototypeOf(BaseConv.prototype), \"getConfig\", this).call(this);\n\n      Object.assign(config, baseConfig);\n      return config;\n    }\n  }], [{\n    key: \"verifyArgs\",\n    value: function verifyArgs(args) {\n      // Check config.kernelSize type and shape.\n      generic_utils.assert('kernelSize' in args, \"required key 'kernelSize' not in config\");\n\n      if (typeof args.kernelSize !== 'number' && !generic_utils.checkArrayTypeAndLength(args.kernelSize, 'number', 1, 3)) {\n        throw new ValueError(\"BaseConv expects config.kernelSize to be number or number[] with \" + \"length 1, 2, or 3, but received \".concat(JSON.stringify(args.kernelSize), \".\"));\n      }\n    }\n  }]);\n\n  return BaseConv;\n}(Layer);\n/**\n * Abstract nD convolution layer.  Ancestor of convolution layers which reduce\n * across channels, i.e., Conv1D and Conv2D, but not DepthwiseConv2D.\n */\n\nexport var Conv = /*#__PURE__*/function (_BaseConv) {\n  _inherits(Conv, _BaseConv);\n\n  var _super2 = _createSuper(Conv);\n\n  function Conv(rank, args) {\n    var _this2;\n\n    _classCallCheck(this, Conv);\n\n    _this2 = _super2.call(this, rank, args);\n    _this2.kernel = null;\n    Conv.verifyArgs(args);\n    _this2.filters = args.filters;\n    generic_utils.assertPositiveInteger(_this2.filters, 'filters');\n    _this2.kernelInitializer = getInitializer(args.kernelInitializer || _this2.DEFAULT_KERNEL_INITIALIZER);\n    _this2.kernelConstraint = getConstraint(args.kernelConstraint);\n    _this2.kernelRegularizer = getRegularizer(args.kernelRegularizer);\n    return _this2;\n  }\n\n  _createClass(Conv, [{\n    key: \"build\",\n    value: function build(inputShape) {\n      inputShape = getExactlyOneShape(inputShape);\n      var channelAxis = this.dataFormat === 'channelsFirst' ? 1 : inputShape.length - 1;\n\n      if (inputShape[channelAxis] == null) {\n        throw new ValueError(\"The channel dimension of the input should be defined. \" + \"Found \".concat(inputShape[channelAxis]));\n      }\n\n      var inputDim = inputShape[channelAxis];\n      var kernelShape = this.kernelSize.concat([inputDim, this.filters]);\n      this.kernel = this.addWeight('kernel', kernelShape, null, this.kernelInitializer, this.kernelRegularizer, true, this.kernelConstraint);\n\n      if (this.useBias) {\n        this.bias = this.addWeight('bias', [this.filters], null, this.biasInitializer, this.biasRegularizer, true, this.biasConstraint);\n      }\n\n      this.inputSpec = [{\n        ndim: this.rank + 2,\n        axes: _defineProperty({}, channelAxis, inputDim)\n      }];\n      this.built = true;\n    }\n  }, {\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      var _this3 = this;\n\n      return tidy(function () {\n        inputs = getExactlyOneTensor(inputs);\n        var outputs;\n        var biasValue = _this3.bias == null ? null : _this3.bias.read();\n        var fusedActivationName = generic_utils.mapActivationToFusedKernel(_this3.activation.getClassName());\n\n        if (fusedActivationName != null && _this3.rank === 2) {\n          outputs = conv2dWithBiasActivation(inputs, _this3.kernel.read(), biasValue, _this3.strides, _this3.padding, _this3.dataFormat, _this3.dilationRate, fusedActivationName);\n        } else {\n          if (_this3.rank === 1) {\n            outputs = conv1dWithBias(inputs, _this3.kernel.read(), biasValue, _this3.strides[0], _this3.padding, _this3.dataFormat, _this3.dilationRate[0]);\n          } else if (_this3.rank === 2) {\n            // TODO(cais): Move up to constructor.\n            outputs = conv2dWithBiasActivation(inputs, _this3.kernel.read(), biasValue, _this3.strides, _this3.padding, _this3.dataFormat, _this3.dilationRate);\n          } else if (_this3.rank === 3) {\n            outputs = conv3dWithBias(inputs, _this3.kernel.read(), biasValue, _this3.strides, _this3.padding, _this3.dataFormat, _this3.dilationRate);\n          } else {\n            throw new NotImplementedError('convolutions greater than 3D are not implemented yet.');\n          }\n\n          if (_this3.activation != null) {\n            outputs = _this3.activation.apply(outputs);\n          }\n        }\n\n        return outputs;\n      });\n    }\n  }, {\n    key: \"computeOutputShape\",\n    value: function computeOutputShape(inputShape) {\n      inputShape = getExactlyOneShape(inputShape);\n      var newSpace = [];\n      var space = this.dataFormat === 'channelsLast' ? inputShape.slice(1, inputShape.length - 1) : inputShape.slice(2);\n\n      for (var i = 0; i < space.length; ++i) {\n        var newDim = convOutputLength(space[i], this.kernelSize[i], this.padding, this.strides[i], typeof this.dilationRate === 'number' ? this.dilationRate : this.dilationRate[i]);\n        newSpace.push(newDim);\n      }\n\n      var outputShape = [inputShape[0]];\n\n      if (this.dataFormat === 'channelsLast') {\n        outputShape = outputShape.concat(newSpace);\n        outputShape.push(this.filters);\n      } else {\n        outputShape.push(this.filters);\n        outputShape = outputShape.concat(newSpace);\n      }\n\n      return outputShape;\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      var config = {\n        filters: this.filters,\n        kernelInitializer: serializeInitializer(this.kernelInitializer),\n        kernelRegularizer: serializeRegularizer(this.kernelRegularizer),\n        kernelConstraint: serializeConstraint(this.kernelConstraint)\n      };\n\n      var baseConfig = _get(_getPrototypeOf(Conv.prototype), \"getConfig\", this).call(this);\n\n      Object.assign(config, baseConfig);\n      return config;\n    }\n  }], [{\n    key: \"verifyArgs\",\n    value: function verifyArgs(args) {\n      // Check config.filters type, shape, and value.\n      if (!('filters' in args) || typeof args.filters !== 'number' || args.filters < 1) {\n        throw new ValueError(\"Convolution layer expected config.filters to be a 'number' > 0 \" + \"but got \".concat(JSON.stringify(args.filters)));\n      }\n    }\n  }]);\n\n  return Conv;\n}(BaseConv);\nexport var Conv2D = /*#__PURE__*/function (_Conv) {\n  _inherits(Conv2D, _Conv);\n\n  var _super3 = _createSuper(Conv2D);\n\n  function Conv2D(args) {\n    var _this4;\n\n    _classCallCheck(this, Conv2D);\n\n    _this4 = _super3.call(this, 2, args);\n    Conv2D.verifyArgs(args);\n    return _this4;\n  }\n\n  _createClass(Conv2D, [{\n    key: \"getConfig\",\n    value: function getConfig() {\n      var config = _get(_getPrototypeOf(Conv2D.prototype), \"getConfig\", this).call(this);\n\n      delete config['rank'];\n      return config;\n    }\n  }], [{\n    key: \"verifyArgs\",\n    value: function verifyArgs(args) {\n      // config.kernelSize must be a number or array of numbers.\n      if (typeof args.kernelSize !== 'number' && !generic_utils.checkArrayTypeAndLength(args.kernelSize, 'number', 1, 2)) {\n        throw new ValueError(\"Conv2D expects config.kernelSize to be number or number[] with \" + \"length 1 or 2, but received \".concat(JSON.stringify(args.kernelSize), \".\"));\n      }\n    }\n  }]);\n\n  return Conv2D;\n}(Conv);\n/** @nocollapse */\n\nConv2D.className = 'Conv2D';\nserialization.registerClass(Conv2D);\nexport var Conv3D = /*#__PURE__*/function (_Conv2) {\n  _inherits(Conv3D, _Conv2);\n\n  var _super4 = _createSuper(Conv3D);\n\n  function Conv3D(args) {\n    var _this5;\n\n    _classCallCheck(this, Conv3D);\n\n    _this5 = _super4.call(this, 3, args);\n    Conv3D.verifyArgs(args);\n    return _this5;\n  }\n\n  _createClass(Conv3D, [{\n    key: \"getConfig\",\n    value: function getConfig() {\n      var config = _get(_getPrototypeOf(Conv3D.prototype), \"getConfig\", this).call(this);\n\n      delete config['rank'];\n      return config;\n    }\n  }], [{\n    key: \"verifyArgs\",\n    value: function verifyArgs(args) {\n      // config.kernelSize must be a number or array of numbers.\n      if (typeof args.kernelSize !== 'number') {\n        if (!(Array.isArray(args.kernelSize) && (args.kernelSize.length === 1 || args.kernelSize.length === 3))) {\n          throw new ValueError(\"Conv3D expects config.kernelSize to be number or\" + \" [number, number, number], but received \".concat(JSON.stringify(args.kernelSize), \".\"));\n        }\n      }\n    }\n  }]);\n\n  return Conv3D;\n}(Conv);\n/** @nocollapse */\n\nConv3D.className = 'Conv3D';\nserialization.registerClass(Conv3D);\nexport var Conv2DTranspose = /*#__PURE__*/function (_Conv2D) {\n  _inherits(Conv2DTranspose, _Conv2D);\n\n  var _super5 = _createSuper(Conv2DTranspose);\n\n  function Conv2DTranspose(args) {\n    var _this6;\n\n    _classCallCheck(this, Conv2DTranspose);\n\n    _this6 = _super5.call(this, args);\n    _this6.inputSpec = [new InputSpec({\n      ndim: 4\n    })];\n\n    if (_this6.padding !== 'same' && _this6.padding !== 'valid') {\n      throw new ValueError(\"Conv2DTranspose currently supports only padding modes 'same' \" + \"and 'valid', but received padding mode \".concat(_this6.padding));\n    }\n\n    return _this6;\n  }\n\n  _createClass(Conv2DTranspose, [{\n    key: \"build\",\n    value: function build(inputShape) {\n      inputShape = getExactlyOneShape(inputShape);\n\n      if (inputShape.length !== 4) {\n        throw new ValueError('Input should have rank 4; Received input shape: ' + JSON.stringify(inputShape));\n      }\n\n      var channelAxis = this.dataFormat === 'channelsFirst' ? 1 : inputShape.length - 1;\n\n      if (inputShape[channelAxis] == null) {\n        throw new ValueError('The channel dimension of the inputs should be defined. ' + 'Found `None`.');\n      }\n\n      var inputDim = inputShape[channelAxis];\n      var kernelShape = this.kernelSize.concat([this.filters, inputDim]);\n      this.kernel = this.addWeight('kernel', kernelShape, 'float32', this.kernelInitializer, this.kernelRegularizer, true, this.kernelConstraint);\n\n      if (this.useBias) {\n        this.bias = this.addWeight('bias', [this.filters], 'float32', this.biasInitializer, this.biasRegularizer, true, this.biasConstraint);\n      } // Set input spec.\n\n\n      this.inputSpec = [new InputSpec({\n        ndim: 4,\n        axes: _defineProperty({}, channelAxis, inputDim)\n      })];\n      this.built = true;\n    }\n  }, {\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      var _this7 = this;\n\n      return tfc.tidy(function () {\n        var input = getExactlyOneTensor(inputs);\n\n        if (input.shape.length !== 4) {\n          throw new ValueError(\"Conv2DTranspose.call() expects input tensor to be rank-4, but \" + \"received a tensor of rank-\".concat(input.shape.length));\n        }\n\n        var inputShape = input.shape;\n        var batchSize = inputShape[0];\n        var hAxis;\n        var wAxis;\n\n        if (_this7.dataFormat === 'channelsFirst') {\n          hAxis = 2;\n          wAxis = 3;\n        } else {\n          hAxis = 1;\n          wAxis = 2;\n        }\n\n        var height = inputShape[hAxis];\n        var width = inputShape[wAxis];\n        var kernelH = _this7.kernelSize[0];\n        var kernelW = _this7.kernelSize[1];\n        var strideH = _this7.strides[0];\n        var strideW = _this7.strides[1]; // Infer the dynamic output shape.\n\n        var outHeight = deconvLength(height, strideH, kernelH, _this7.padding);\n        var outWidth = deconvLength(width, strideW, kernelW, _this7.padding); // Porting Note: We don't branch based on `this.dataFormat` here,\n        // because\n        //   the tjfs-core function `conv2dTranspose` called below always\n        //   assumes channelsLast.\n\n        var outputShape = [batchSize, outHeight, outWidth, _this7.filters];\n\n        if (_this7.dataFormat !== 'channelsLast') {\n          input = tfc.transpose(input, [0, 2, 3, 1]);\n        }\n\n        var outputs = tfc.conv2dTranspose(input, _this7.kernel.read(), outputShape, _this7.strides, _this7.padding);\n\n        if (_this7.dataFormat !== 'channelsLast') {\n          outputs = tfc.transpose(outputs, [0, 3, 1, 2]);\n        }\n\n        if (_this7.bias != null) {\n          outputs = K.biasAdd(outputs, _this7.bias.read(), _this7.dataFormat);\n        }\n\n        if (_this7.activation != null) {\n          outputs = _this7.activation.apply(outputs);\n        }\n\n        return outputs;\n      });\n    }\n  }, {\n    key: \"computeOutputShape\",\n    value: function computeOutputShape(inputShape) {\n      inputShape = getExactlyOneShape(inputShape);\n      var outputShape = inputShape.slice();\n      var channelAxis;\n      var heightAxis;\n      var widthAxis;\n\n      if (this.dataFormat === 'channelsFirst') {\n        channelAxis = 1;\n        heightAxis = 2;\n        widthAxis = 3;\n      } else {\n        channelAxis = 3;\n        heightAxis = 1;\n        widthAxis = 2;\n      }\n\n      var kernelH = this.kernelSize[0];\n      var kernelW = this.kernelSize[1];\n      var strideH = this.strides[0];\n      var strideW = this.strides[1];\n      outputShape[channelAxis] = this.filters;\n      outputShape[heightAxis] = deconvLength(outputShape[heightAxis], strideH, kernelH, this.padding);\n      outputShape[widthAxis] = deconvLength(outputShape[widthAxis], strideW, kernelW, this.padding);\n      return outputShape;\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      var config = _get(_getPrototypeOf(Conv2DTranspose.prototype), \"getConfig\", this).call(this);\n\n      delete config['dilationRate'];\n      return config;\n    }\n  }]);\n\n  return Conv2DTranspose;\n}(Conv2D);\n/** @nocollapse */\n\nConv2DTranspose.className = 'Conv2DTranspose';\nserialization.registerClass(Conv2DTranspose);\nexport var Conv3DTranspose = /*#__PURE__*/function (_Conv3D) {\n  _inherits(Conv3DTranspose, _Conv3D);\n\n  var _super6 = _createSuper(Conv3DTranspose);\n\n  function Conv3DTranspose(args) {\n    var _this8;\n\n    _classCallCheck(this, Conv3DTranspose);\n\n    _this8 = _super6.call(this, args);\n    _this8.inputSpec = [new InputSpec({\n      ndim: 5\n    })];\n\n    if (_this8.padding !== 'same' && _this8.padding !== 'valid') {\n      throw new ValueError(\"Conv3DTranspose currently supports only padding modes 'same' \" + \"and 'valid', but received padding mode \".concat(_this8.padding));\n    }\n\n    return _this8;\n  }\n\n  _createClass(Conv3DTranspose, [{\n    key: \"build\",\n    value: function build(inputShape) {\n      inputShape = getExactlyOneShape(inputShape);\n\n      if (inputShape.length !== 5) {\n        throw new ValueError('Input should have rank 5; Received input shape: ' + JSON.stringify(inputShape));\n      }\n\n      var channelAxis = this.dataFormat === 'channelsFirst' ? 1 : inputShape.length - 1;\n\n      if (inputShape[channelAxis] == null) {\n        throw new ValueError('The channel dimension of the inputs should be defined. ' + 'Found `None`.');\n      }\n\n      var inputDim = inputShape[channelAxis];\n      var kernelShape = this.kernelSize.concat([this.filters, inputDim]);\n      this.kernel = this.addWeight('kernel', kernelShape, 'float32', this.kernelInitializer, this.kernelRegularizer, true, this.kernelConstraint);\n\n      if (this.useBias) {\n        this.bias = this.addWeight('bias', [this.filters], 'float32', this.biasInitializer, this.biasRegularizer, true, this.biasConstraint);\n      } // Set input spec.\n\n\n      this.inputSpec = [new InputSpec({\n        ndim: 5,\n        axes: _defineProperty({}, channelAxis, inputDim)\n      })];\n      this.built = true;\n    }\n  }, {\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      var _this9 = this;\n\n      return tfc.tidy(function () {\n        var input = getExactlyOneTensor(inputs);\n\n        if (input.shape.length !== 5) {\n          throw new ValueError(\"Conv3DTranspose.call() expects input tensor to be rank-4, but \" + \"received a tensor of rank-\".concat(input.shape.length));\n        }\n\n        var inputShape = input.shape;\n        var batchSize = inputShape[0];\n        var hAxis;\n        var wAxis;\n        var dAxis;\n\n        if (_this9.dataFormat === 'channelsFirst') {\n          dAxis = 2;\n          hAxis = 3;\n          wAxis = 4;\n        } else {\n          dAxis = 1;\n          hAxis = 2;\n          wAxis = 3;\n        }\n\n        var depth = inputShape[dAxis];\n        var height = inputShape[hAxis];\n        var width = inputShape[wAxis];\n        var kernelD = _this9.kernelSize[0];\n        var kernelH = _this9.kernelSize[1];\n        var kernelW = _this9.kernelSize[2];\n        var strideD = _this9.strides[0];\n        var strideH = _this9.strides[1];\n        var strideW = _this9.strides[2]; // Infer the dynamic output shape.\n\n        var outDepth = deconvLength(depth, strideD, kernelD, _this9.padding);\n        var outHeight = deconvLength(height, strideH, kernelH, _this9.padding);\n        var outWidth = deconvLength(width, strideW, kernelW, _this9.padding); // Same as `conv2dTranspose`. We always assumes channelsLast.\n\n        var outputShape = [batchSize, outDepth, outHeight, outWidth, _this9.filters];\n\n        if (_this9.dataFormat !== 'channelsLast') {\n          input = tfc.transpose(input, [0, 2, 3, 4, 1]);\n        }\n\n        var outputs = tfc.conv3dTranspose(input, _this9.kernel.read(), outputShape, _this9.strides, _this9.padding);\n\n        if (_this9.dataFormat !== 'channelsLast') {\n          outputs = tfc.transpose(outputs, [0, 4, 1, 2, 3]);\n        }\n\n        if (_this9.bias !== null) {\n          outputs = K.biasAdd(outputs, _this9.bias.read(), _this9.dataFormat);\n        }\n\n        if (_this9.activation !== null) {\n          outputs = _this9.activation.apply(outputs);\n        }\n\n        return outputs;\n      });\n    }\n  }, {\n    key: \"computeOutputShape\",\n    value: function computeOutputShape(inputShape) {\n      inputShape = getExactlyOneShape(inputShape);\n      var outputShape = inputShape.slice();\n      var channelAxis;\n      var depthAxis;\n      var heightAxis;\n      var widthAxis;\n\n      if (this.dataFormat === 'channelsFirst') {\n        channelAxis = 1;\n        depthAxis = 2;\n        heightAxis = 3;\n        widthAxis = 4;\n      } else {\n        channelAxis = 4;\n        depthAxis = 1;\n        heightAxis = 2;\n        widthAxis = 3;\n      }\n\n      var kernelD = this.kernelSize[0];\n      var kernelH = this.kernelSize[1];\n      var kernelW = this.kernelSize[2];\n      var strideD = this.strides[0];\n      var strideH = this.strides[1];\n      var strideW = this.strides[2];\n      outputShape[channelAxis] = this.filters;\n      outputShape[depthAxis] = deconvLength(outputShape[depthAxis], strideD, kernelD, this.padding);\n      outputShape[heightAxis] = deconvLength(outputShape[heightAxis], strideH, kernelH, this.padding);\n      outputShape[widthAxis] = deconvLength(outputShape[widthAxis], strideW, kernelW, this.padding);\n      return outputShape;\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      var config = _get(_getPrototypeOf(Conv3DTranspose.prototype), \"getConfig\", this).call(this);\n\n      delete config['dilationRate'];\n      return config;\n    }\n  }]);\n\n  return Conv3DTranspose;\n}(Conv3D);\n/** @nocollapse */\n\nConv3DTranspose.className = 'Conv3DTranspose';\nserialization.registerClass(Conv3DTranspose);\nexport var SeparableConv = /*#__PURE__*/function (_Conv3) {\n  _inherits(SeparableConv, _Conv3);\n\n  var _super7 = _createSuper(SeparableConv);\n\n  function SeparableConv(rank, config) {\n    var _this10;\n\n    _classCallCheck(this, SeparableConv);\n\n    _this10 = _super7.call(this, rank, config);\n    _this10.DEFAULT_DEPTHWISE_INITIALIZER = 'glorotUniform';\n    _this10.DEFAULT_POINTWISE_INITIALIZER = 'glorotUniform';\n    _this10.depthwiseKernel = null;\n    _this10.pointwiseKernel = null;\n\n    if (config.filters == null) {\n      throw new ValueError('The `filters` configuration field is required by SeparableConv, ' + 'but is unspecified.');\n    }\n\n    if (config.kernelInitializer != null || config.kernelRegularizer != null || config.kernelConstraint != null) {\n      throw new ValueError('Fields kernelInitializer, kernelRegularizer and kernelConstraint ' + 'are invalid for SeparableConv2D. Use depthwiseInitializer, ' + 'depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, ' + 'pointwiseRegularizer and pointwiseConstraint instead.');\n    }\n\n    if (config.padding != null && config.padding !== 'same' && config.padding !== 'valid') {\n      throw new ValueError(\"SeparableConv\".concat(_this10.rank, \"D supports only padding modes: \") + \"'same' and 'valid', but received \".concat(JSON.stringify(config.padding)));\n    }\n\n    _this10.depthMultiplier = config.depthMultiplier == null ? 1 : config.depthMultiplier;\n    _this10.depthwiseInitializer = getInitializer(config.depthwiseInitializer || _this10.DEFAULT_DEPTHWISE_INITIALIZER);\n    _this10.depthwiseRegularizer = getRegularizer(config.depthwiseRegularizer);\n    _this10.depthwiseConstraint = getConstraint(config.depthwiseConstraint);\n    _this10.pointwiseInitializer = getInitializer(config.depthwiseInitializer || _this10.DEFAULT_POINTWISE_INITIALIZER);\n    _this10.pointwiseRegularizer = getRegularizer(config.pointwiseRegularizer);\n    _this10.pointwiseConstraint = getConstraint(config.pointwiseConstraint);\n    return _this10;\n  }\n\n  _createClass(SeparableConv, [{\n    key: \"build\",\n    value: function build(inputShape) {\n      inputShape = getExactlyOneShape(inputShape);\n\n      if (inputShape.length < this.rank + 2) {\n        throw new ValueError(\"Inputs to SeparableConv\".concat(this.rank, \"D should have rank \") + \"\".concat(this.rank + 2, \", but received input shape: \") + \"\".concat(JSON.stringify(inputShape)));\n      }\n\n      var channelAxis = this.dataFormat === 'channelsFirst' ? 1 : inputShape.length - 1;\n\n      if (inputShape[channelAxis] == null || inputShape[channelAxis] < 0) {\n        throw new ValueError(\"The channel dimension of the inputs should be defined, \" + \"but found \".concat(JSON.stringify(inputShape[channelAxis])));\n      }\n\n      var inputDim = inputShape[channelAxis];\n      var depthwiseKernelShape = this.kernelSize.concat([inputDim, this.depthMultiplier]);\n      var pointwiseKernelShape = [];\n\n      for (var i = 0; i < this.rank; ++i) {\n        pointwiseKernelShape.push(1);\n      }\n\n      pointwiseKernelShape.push(inputDim * this.depthMultiplier, this.filters);\n      var trainable = true;\n      this.depthwiseKernel = this.addWeight('depthwise_kernel', depthwiseKernelShape, 'float32', this.depthwiseInitializer, this.depthwiseRegularizer, trainable, this.depthwiseConstraint);\n      this.pointwiseKernel = this.addWeight('pointwise_kernel', pointwiseKernelShape, 'float32', this.pointwiseInitializer, this.pointwiseRegularizer, trainable, this.pointwiseConstraint);\n\n      if (this.useBias) {\n        this.bias = this.addWeight('bias', [this.filters], 'float32', this.biasInitializer, this.biasRegularizer, trainable, this.biasConstraint);\n      } else {\n        this.bias = null;\n      }\n\n      this.inputSpec = [new InputSpec({\n        ndim: this.rank + 2,\n        axes: _defineProperty({}, channelAxis, inputDim)\n      })];\n      this.built = true;\n    }\n  }, {\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      var _this11 = this;\n\n      return tidy(function () {\n        inputs = getExactlyOneTensor(inputs);\n        var output;\n\n        if (_this11.rank === 1) {\n          throw new NotImplementedError('1D separable convolution is not implemented yet.');\n        } else if (_this11.rank === 2) {\n          if (_this11.dataFormat === 'channelsFirst') {\n            inputs = tfc.transpose(inputs, [0, 2, 3, 1]); // NCHW -> NHWC.\n          }\n\n          output = tfc.separableConv2d(inputs, _this11.depthwiseKernel.read(), _this11.pointwiseKernel.read(), _this11.strides, _this11.padding, _this11.dilationRate, 'NHWC');\n        }\n\n        if (_this11.useBias) {\n          output = K.biasAdd(output, _this11.bias.read(), _this11.dataFormat);\n        }\n\n        if (_this11.activation != null) {\n          output = _this11.activation.apply(output);\n        }\n\n        if (_this11.dataFormat === 'channelsFirst') {\n          output = tfc.transpose(output, [0, 3, 1, 2]); // NHWC -> NCHW.\n        }\n\n        return output;\n      });\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      var config = _get(_getPrototypeOf(SeparableConv.prototype), \"getConfig\", this).call(this);\n\n      delete config['rank'];\n      delete config['kernelInitializer'];\n      delete config['kernelRegularizer'];\n      delete config['kernelConstraint'];\n      config['depthwiseInitializer'] = serializeInitializer(this.depthwiseInitializer);\n      config['pointwiseInitializer'] = serializeInitializer(this.pointwiseInitializer);\n      config['depthwiseRegularizer'] = serializeRegularizer(this.depthwiseRegularizer);\n      config['pointwiseRegularizer'] = serializeRegularizer(this.pointwiseRegularizer);\n      config['depthwiseConstraint'] = serializeConstraint(this.depthwiseConstraint);\n      config['pointwiseConstraint'] = serializeConstraint(this.pointwiseConstraint);\n      return config;\n    }\n  }]);\n\n  return SeparableConv;\n}(Conv);\n/** @nocollapse */\n\nSeparableConv.className = 'SeparableConv';\nexport var SeparableConv2D = /*#__PURE__*/function (_SeparableConv) {\n  _inherits(SeparableConv2D, _SeparableConv);\n\n  var _super8 = _createSuper(SeparableConv2D);\n\n  function SeparableConv2D(args) {\n    _classCallCheck(this, SeparableConv2D);\n\n    return _super8.call(this, 2, args);\n  }\n\n  return SeparableConv2D;\n}(SeparableConv);\n/** @nocollapse */\n\nSeparableConv2D.className = 'SeparableConv2D';\nserialization.registerClass(SeparableConv2D);\nexport var Conv1D = /*#__PURE__*/function (_Conv4) {\n  _inherits(Conv1D, _Conv4);\n\n  var _super9 = _createSuper(Conv1D);\n\n  function Conv1D(args) {\n    var _this12;\n\n    _classCallCheck(this, Conv1D);\n\n    _this12 = _super9.call(this, 1, args);\n    Conv1D.verifyArgs(args);\n    _this12.inputSpec = [{\n      ndim: 3\n    }];\n    return _this12;\n  }\n\n  _createClass(Conv1D, [{\n    key: \"getConfig\",\n    value: function getConfig() {\n      var config = _get(_getPrototypeOf(Conv1D.prototype), \"getConfig\", this).call(this);\n\n      delete config['rank'];\n      delete config['dataFormat'];\n      return config;\n    }\n  }], [{\n    key: \"verifyArgs\",\n    value: function verifyArgs(args) {\n      // config.kernelSize must be a number or array of numbers.\n      if (typeof args.kernelSize !== 'number' && !generic_utils.checkArrayTypeAndLength(args.kernelSize, 'number', 1, 1)) {\n        throw new ValueError(\"Conv1D expects config.kernelSize to be number or number[] with \" + \"length 1, but received \".concat(JSON.stringify(args.kernelSize), \".\"));\n      }\n    }\n  }]);\n\n  return Conv1D;\n}(Conv);\n/** @nocollapse */\n\nConv1D.className = 'Conv1D';\nserialization.registerClass(Conv1D);\nexport var Cropping2D = /*#__PURE__*/function (_Layer2) {\n  _inherits(Cropping2D, _Layer2);\n\n  var _super10 = _createSuper(Cropping2D);\n\n  function Cropping2D(args) {\n    var _this13;\n\n    _classCallCheck(this, Cropping2D);\n\n    _this13 = _super10.call(this, args);\n\n    if (typeof args.cropping === 'number') {\n      _this13.cropping = [[args.cropping, args.cropping], [args.cropping, args.cropping]];\n    } else if (typeof args.cropping[0] === 'number') {\n      _this13.cropping = [[args.cropping[0], args.cropping[0]], [args.cropping[1], args.cropping[1]]];\n    } else {\n      _this13.cropping = args.cropping;\n    }\n\n    _this13.dataFormat = args.dataFormat === undefined ? 'channelsLast' : args.dataFormat;\n    _this13.inputSpec = [{\n      ndim: 4\n    }];\n    return _this13;\n  }\n\n  _createClass(Cropping2D, [{\n    key: \"computeOutputShape\",\n    value: function computeOutputShape(inputShape) {\n      if (this.dataFormat === 'channelsFirst') {\n        return [inputShape[0], inputShape[1], inputShape[2] - this.cropping[0][0] - this.cropping[0][1], inputShape[3] - this.cropping[1][0] - this.cropping[1][1]];\n      } else {\n        return [inputShape[0], inputShape[1] - this.cropping[0][0] - this.cropping[0][1], inputShape[2] - this.cropping[1][0] - this.cropping[1][1], inputShape[3]];\n      }\n    }\n  }, {\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      var _this14 = this;\n\n      return tidy(function () {\n        inputs = getExactlyOneTensor(inputs);\n\n        if (_this14.dataFormat === 'channelsLast') {\n          var hSliced = K.sliceAlongAxis(inputs, _this14.cropping[0][0], inputs.shape[1] - _this14.cropping[0][0] - _this14.cropping[0][1], 2);\n          return K.sliceAlongAxis(hSliced, _this14.cropping[1][0], inputs.shape[2] - _this14.cropping[1][1] - _this14.cropping[1][0], 3);\n        } else {\n          var _hSliced = K.sliceAlongAxis(inputs, _this14.cropping[0][0], inputs.shape[2] - _this14.cropping[0][0] - _this14.cropping[0][1], 3);\n\n          return K.sliceAlongAxis(_hSliced, _this14.cropping[1][0], inputs.shape[3] - _this14.cropping[1][1] - _this14.cropping[1][0], 4);\n        }\n      });\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      var config = {\n        cropping: this.cropping,\n        dataFormat: this.dataFormat\n      };\n\n      var baseConfig = _get(_getPrototypeOf(Cropping2D.prototype), \"getConfig\", this).call(this);\n\n      Object.assign(config, baseConfig);\n      return config;\n    }\n  }]);\n\n  return Cropping2D;\n}(Layer);\n/** @nocollapse */\n\nCropping2D.className = 'Cropping2D';\nserialization.registerClass(Cropping2D);\nexport var UpSampling2D = /*#__PURE__*/function (_Layer3) {\n  _inherits(UpSampling2D, _Layer3);\n\n  var _super11 = _createSuper(UpSampling2D);\n\n  function UpSampling2D(args) {\n    var _this15;\n\n    _classCallCheck(this, UpSampling2D);\n\n    _this15 = _super11.call(this, args);\n    _this15.DEFAULT_SIZE = [2, 2];\n    _this15.inputSpec = [{\n      ndim: 4\n    }];\n    _this15.size = args.size == null ? _this15.DEFAULT_SIZE : args.size;\n    _this15.dataFormat = args.dataFormat == null ? 'channelsLast' : args.dataFormat;\n    checkDataFormat(_this15.dataFormat);\n    _this15.interpolation = args.interpolation == null ? 'nearest' : args.interpolation;\n    checkInterpolationFormat(_this15.interpolation);\n    return _this15;\n  }\n\n  _createClass(UpSampling2D, [{\n    key: \"computeOutputShape\",\n    value: function computeOutputShape(inputShape) {\n      if (this.dataFormat === 'channelsFirst') {\n        var height = inputShape[2] == null ? null : this.size[0] * inputShape[2];\n        var width = inputShape[3] == null ? null : this.size[1] * inputShape[3];\n        return [inputShape[0], inputShape[1], height, width];\n      } else {\n        var _height = inputShape[1] == null ? null : this.size[0] * inputShape[1];\n\n        var _width = inputShape[2] == null ? null : this.size[1] * inputShape[2];\n\n        return [inputShape[0], _height, _width, inputShape[3]];\n      }\n    }\n  }, {\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      var _this16 = this;\n\n      return tfc.tidy(function () {\n        var input = getExactlyOneTensor(inputs);\n        var inputShape = input.shape;\n\n        if (_this16.dataFormat === 'channelsFirst') {\n          input = tfc.transpose(input, [0, 2, 3, 1]);\n          var height = _this16.size[0] * inputShape[2];\n          var width = _this16.size[1] * inputShape[3];\n          var resized = _this16.interpolation === 'nearest' ? input.resizeNearestNeighbor([height, width]) : input.resizeBilinear([height, width]);\n          return tfc.transpose(resized, [0, 3, 1, 2]);\n        } else {\n          var _height2 = _this16.size[0] * inputShape[1];\n\n          var _width2 = _this16.size[1] * inputShape[2];\n\n          return _this16.interpolation === 'nearest' ? input.resizeNearestNeighbor([_height2, _width2]) : input.resizeBilinear([_height2, _width2]);\n        }\n      });\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      var config = {\n        size: this.size,\n        dataFormat: this.dataFormat\n      };\n\n      var baseConfig = _get(_getPrototypeOf(UpSampling2D.prototype), \"getConfig\", this).call(this);\n\n      Object.assign(config, baseConfig);\n      return config;\n    }\n  }]);\n\n  return UpSampling2D;\n}(Layer);\n/** @nocollapse */\n\nUpSampling2D.className = 'UpSampling2D';\nserialization.registerClass(UpSampling2D);","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/get\";\nimport _inherits from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/**\n * TensorFlow.js Layers: Depthwise Convolutional Layers\n */\nimport * as tfc from '@tensorflow/tfjs-core';\nimport { serialization, tidy } from '@tensorflow/tfjs-core';\nimport { imageDataFormat } from '../backend/common';\nimport * as K from '../backend/tfjs_backend';\nimport { checkDataFormat } from '../common';\nimport { getConstraint, serializeConstraint } from '../constraints';\nimport { ValueError } from '../errors';\nimport { getInitializer, serializeInitializer } from '../initializers';\nimport { getRegularizer, serializeRegularizer } from '../regularizers';\nimport { convOutputLength } from '../utils/conv_utils';\nimport { getExactlyOneShape, getExactlyOneTensor } from '../utils/types_utils';\nimport { BaseConv, preprocessConv2DInput } from './convolutional';\n/**\n * 2D convolution with separable filters.\n * @param x Input tensor.\n * @param depthwiseKernel Convolution kernel for depthwise convolution.\n * @param strides Strides (Array of two integers).\n * @param padding Padding model.\n * @param dataFormat Data format.\n * @param dilationRate Array of two integers, dilation rates for the separable\n *   convolution.\n * @returns Output tensor.\n * @throws ValueError If depthwiseKernel is not a 4D array.\n */\n\nexport function depthwiseConv2d(x, depthwiseKernel) {\n  var strides = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [1, 1];\n  var padding = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'valid';\n  var dataFormat = arguments.length > 4 ? arguments[4] : undefined;\n  var dilationRate = arguments.length > 5 ? arguments[5] : undefined;\n  return tidy(function () {\n    if (dataFormat == null) {\n      dataFormat = imageDataFormat();\n    }\n\n    checkDataFormat(dataFormat);\n    var y = preprocessConv2DInput(x, dataFormat);\n\n    if (x.rank !== 4) {\n      throw new ValueError(\"Input for depthwiseConv2d is required to be 4-D, but is instead \" + \"\".concat(x.rank, \"-D\"));\n    }\n\n    if (depthwiseKernel.rank !== 4) {\n      throw new ValueError(\"depthwiseKernel is required to be 4-D, but is instead \" + \"\".concat(depthwiseKernel.rank, \"-D\"));\n    }\n\n    y = tfc.depthwiseConv2d(y, depthwiseKernel, strides, padding === 'same' ? 'same' : 'valid', 'NHWC', dilationRate);\n\n    if (dataFormat === 'channelsFirst') {\n      y = tfc.transpose(y, [0, 3, 1, 2]);\n    }\n\n    return y;\n  });\n}\nexport var DepthwiseConv2D = /*#__PURE__*/function (_BaseConv) {\n  _inherits(DepthwiseConv2D, _BaseConv);\n\n  var _super = _createSuper(DepthwiseConv2D);\n\n  function DepthwiseConv2D(args) {\n    var _this;\n\n    _classCallCheck(this, DepthwiseConv2D);\n\n    _this = _super.call(this, 2, args);\n    _this.depthwiseKernel = null;\n    _this.depthMultiplier = args.depthMultiplier == null ? 1 : args.depthMultiplier;\n    _this.depthwiseInitializer = getInitializer(args.depthwiseInitializer || _this.DEFAULT_KERNEL_INITIALIZER);\n    _this.depthwiseConstraint = getConstraint(args.depthwiseConstraint);\n    _this.depthwiseRegularizer = getRegularizer(args.depthwiseRegularizer);\n    return _this;\n  }\n\n  _createClass(DepthwiseConv2D, [{\n    key: \"build\",\n    value: function build(inputShape) {\n      inputShape = getExactlyOneShape(inputShape);\n\n      if (inputShape.length < 4) {\n        throw new ValueError(\"Inputs to DepthwiseConv2D should have rank 4. \" + \"Received input shape: \".concat(JSON.stringify(inputShape), \".\"));\n      }\n\n      var channelAxis = this.dataFormat === 'channelsFirst' ? 1 : 3;\n\n      if (inputShape[channelAxis] == null || inputShape[channelAxis] < 0) {\n        throw new ValueError('The channel dimension of the inputs to DepthwiseConv2D should ' + \"be defined, but is not (\".concat(inputShape[channelAxis], \").\"));\n      }\n\n      var inputDim = inputShape[channelAxis];\n      var depthwiseKernelShape = [this.kernelSize[0], this.kernelSize[1], inputDim, this.depthMultiplier];\n      this.depthwiseKernel = this.addWeight('depthwise_kernel', depthwiseKernelShape, null, this.depthwiseInitializer, this.depthwiseRegularizer, true, this.depthwiseConstraint);\n\n      if (this.useBias) {\n        this.bias = this.addWeight('bias', [inputDim * this.depthMultiplier], null, this.biasInitializer, this.biasRegularizer, true, this.biasConstraint);\n      } else {\n        this.bias = null;\n      }\n\n      this.built = true;\n    }\n  }, {\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      var _this2 = this;\n\n      return tidy(function () {\n        inputs = getExactlyOneTensor(inputs);\n        var outputs = depthwiseConv2d(inputs, _this2.depthwiseKernel.read(), _this2.strides, _this2.padding, _this2.dataFormat, null); // TODO(cais): Add support for dilation.\n\n        if (_this2.useBias) {\n          outputs = K.biasAdd(outputs, _this2.bias.read(), _this2.dataFormat);\n        }\n\n        if (_this2.activation != null) {\n          outputs = _this2.activation.apply(outputs);\n        }\n\n        return outputs;\n      });\n    }\n  }, {\n    key: \"computeOutputShape\",\n    value: function computeOutputShape(inputShape) {\n      inputShape = getExactlyOneShape(inputShape);\n      var rows = this.dataFormat === 'channelsFirst' ? inputShape[2] : inputShape[1];\n      var cols = this.dataFormat === 'channelsFirst' ? inputShape[3] : inputShape[2];\n      var outFilters = this.dataFormat === 'channelsFirst' ? inputShape[1] * this.depthMultiplier : inputShape[3] * this.depthMultiplier;\n      var outRows = convOutputLength(rows, this.kernelSize[0], this.padding, this.strides[0]);\n      var outCols = convOutputLength(cols, this.kernelSize[1], this.padding, this.strides[1]);\n\n      if (this.dataFormat === 'channelsFirst') {\n        return [inputShape[0], outFilters, outRows, outCols];\n      } else {\n        // In this case, assume 'channelsLast'.\n        return [inputShape[0], outRows, outCols, outFilters];\n      }\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      var config = _get(_getPrototypeOf(DepthwiseConv2D.prototype), \"getConfig\", this).call(this);\n\n      config['depthMultiplier'] = this.depthMultiplier;\n      config['depthwiseInitializer'] = serializeInitializer(this.depthwiseInitializer);\n      config['depthwiseRegularizer'] = serializeRegularizer(this.depthwiseRegularizer);\n      config['depthwiseConstraint'] = serializeConstraint(this.depthwiseRegularizer);\n      return config;\n    }\n  }]);\n\n  return DepthwiseConv2D;\n}(BaseConv);\n/** @nocollapse */\n\nDepthwiseConv2D.className = 'DepthwiseConv2D';\nserialization.registerClass(DepthwiseConv2D);","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/get\";\nimport _inherits from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/**\n * TensorFlow.js Layers: Recurrent Neural Network Layers.\n */\nimport * as tfc from '@tensorflow/tfjs-core';\nimport { serialization, tidy, util } from '@tensorflow/tfjs-core';\nimport { getActivation, serializeActivation } from '../activations';\nimport * as K from '../backend/tfjs_backend';\nimport { nameScope } from '../common';\nimport { getConstraint, serializeConstraint } from '../constraints';\nimport { InputSpec, SymbolicTensor } from '../engine/topology';\nimport { Layer } from '../engine/topology';\nimport { AttributeError, NotImplementedError, ValueError } from '../errors';\nimport { getInitializer, Initializer, Ones, serializeInitializer } from '../initializers';\nimport { getRegularizer, serializeRegularizer } from '../regularizers';\nimport { assertPositiveInteger } from '../utils/generic_utils';\nimport * as math_utils from '../utils/math_utils';\nimport { getExactlyOneShape, getExactlyOneTensor, isArrayOfShapes } from '../utils/types_utils';\nimport { batchGetValue, batchSetValue } from '../variables';\nimport { deserialize } from './serialization';\n/**\n * Standardize `apply()` args to a single list of tensor inputs.\n *\n * When running a model loaded from file, the input tensors `initialState` and\n * `constants` are passed to `RNN.apply()` as part of `inputs` instead of the\n * dedicated kwargs fields. `inputs` consists of\n * `[inputs, initialState0, initialState1, ..., constant0, constant1]` in this\n * case.\n * This method makes sure that arguments are\n * separated and that `initialState` and `constants` are `Array`s of tensors\n * (or None).\n *\n * @param inputs Tensor or `Array` of  tensors.\n * @param initialState Tensor or `Array` of tensors or `null`/`undefined`.\n * @param constants Tensor or `Array` of tensors or `null`/`undefined`.\n * @returns An object consisting of\n *   inputs: A tensor.\n *   initialState: `Array` of tensors or `null`.\n *   constants: `Array` of tensors or `null`.\n * @throws ValueError, if `inputs` is an `Array` but either `initialState` or\n *   `constants` is provided.\n */\n\nexport function standardizeArgs(inputs, initialState, constants, numConstants) {\n  if (Array.isArray(inputs)) {\n    if (initialState != null || constants != null) {\n      throw new ValueError('When inputs is an array, neither initialState or constants ' + 'should be provided');\n    }\n\n    if (numConstants != null) {\n      constants = inputs.slice(inputs.length - numConstants, inputs.length);\n      inputs = inputs.slice(0, inputs.length - numConstants);\n    }\n\n    if (inputs.length > 1) {\n      initialState = inputs.slice(1, inputs.length);\n    }\n\n    inputs = inputs[0];\n  }\n\n  function toListOrNull(x) {\n    if (x == null || Array.isArray(x)) {\n      return x;\n    } else {\n      return [x];\n    }\n  }\n\n  initialState = toListOrNull(initialState);\n  constants = toListOrNull(constants);\n  return {\n    inputs: inputs,\n    initialState: initialState,\n    constants: constants\n  };\n}\n/**\n * Iterates over the time dimension of a tensor.\n *\n * @param stepFunction RNN step function.\n *   Parameters:\n *     inputs: tensor with shape `[samples, ...]` (no time dimension),\n *       representing input for the batch of samples at a certain time step.\n *     states: an Array of tensors.\n *   Returns:\n *     outputs: tensor with shape `[samples, outputDim]` (no time dimension).\n *     newStates: list of tensors, same length and shapes as `states`. The first\n *       state in the list must be the output tensor at the previous timestep.\n * @param inputs Tensor of temporal data of shape `[samples, time, ...]` (at\n *   least 3D).\n * @param initialStates Tensor with shape `[samples, outputDim]` (no time\n *   dimension), containing the initial values of the states used in the step\n *   function.\n * @param goBackwards If `true`, do the iteration over the time dimension in\n *   reverse order and return the reversed sequence.\n * @param mask Binary tensor with shape `[sample, time, 1]`, with a zero for\n *   every element that is masked.\n * @param constants An Array of constant values passed at each step.\n * @param unroll Whether to unroll the RNN or to use a symbolic loop. *Not*\n *   applicable to this imperative deeplearn.js backend. Its value is ignored.\n * @param needPerStepOutputs Whether the per-step outputs are to be\n *   concatenated into a single tensor and returned (as the second return\n *   value). Default: `false`. This arg is included so that the relatively\n *   expensive concatenation of the stepwise outputs can be omitted unless\n *   the stepwise outputs need to be kept (e.g., for an LSTM layer of which\n *   `returnSequence` is `true`.)\n * @returns An Array: `[lastOutput, outputs, newStates]`.\n *   lastOutput: the lastest output of the RNN, of shape `[samples, ...]`.\n *   outputs: tensor with shape `[samples, time, ...]` where each entry\n *     `output[s, t]` is the output of the step function at time `t` for sample\n *     `s`. This return value is provided if and only if the\n *     `needPerStepOutputs` is set as `true`. If it is set as `false`, this\n *     return value will be `undefined`.\n *   newStates: Array of tensors, latest states returned by the step function,\n *      of shape `(samples, ...)`.\n * @throws ValueError If input dimension is less than 3.\n *\n * TODO(nielsene): This needs to be tidy-ed.\n */\n\nexport function rnn(stepFunction, inputs, initialStates) {\n  var goBackwards = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var mask = arguments.length > 4 ? arguments[4] : undefined;\n  var constants = arguments.length > 5 ? arguments[5] : undefined;\n  var unroll = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;\n  var needPerStepOutputs = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : false;\n  return tfc.tidy(function () {\n    var ndim = inputs.shape.length;\n\n    if (ndim < 3) {\n      throw new ValueError(\"Input should be at least 3D, but is \".concat(ndim, \"D.\"));\n    } // Transpose to time-major, i.e., from [batch, time, ...] to [time, batch,\n    // ...].\n\n\n    var axes = [1, 0].concat(math_utils.range(2, ndim));\n    inputs = tfc.transpose(inputs, axes);\n\n    if (constants != null) {\n      throw new NotImplementedError('The rnn() functoin of the deeplearn.js backend does not support ' + 'constants yet.');\n    } // Porting Note: the unroll option is ignored by the imperative backend.\n\n\n    if (unroll) {\n      console.warn('Backend rnn(): the unroll = true option is not applicable to the ' + 'imperative deeplearn.js backend.');\n    }\n\n    if (mask != null) {\n      mask = mask.asType('bool').asType('float32');\n\n      if (mask.rank === ndim - 1) {\n        mask = tfc.expandDims(mask, -1);\n      }\n\n      mask = tfc.transpose(mask, axes);\n    }\n\n    if (goBackwards) {\n      inputs = tfc.reverse(inputs, 0);\n\n      if (mask != null) {\n        mask = tfc.reverse(mask, 0);\n      }\n    } // Porting Note: PyKeras with TensorFlow backend uses a symbolic loop\n    //   (tf.while_loop). But for the imperative deeplearn.js backend, we just\n    //   use the usual TypeScript control flow to iterate over the time steps in\n    //   the inputs.\n    // Porting Note: PyKeras patches a \"_use_learning_phase\" attribute to\n    // outputs.\n    //   This is not idiomatic in TypeScript. The info regarding whether we are\n    //   in a learning (i.e., training) phase for RNN is passed in a different\n    //   way.\n\n\n    var perStepOutputs = [];\n    var lastOutput;\n    var states = initialStates;\n    var timeSteps = inputs.shape[0];\n    var perStepInputs = tfc.unstack(inputs);\n    var perStepMasks;\n\n    if (mask != null) {\n      perStepMasks = tfc.unstack(mask);\n    }\n\n    var _loop = function _loop(t) {\n      var currentInput = perStepInputs[t];\n      var stepOutputs = tfc.tidy(function () {\n        return stepFunction(currentInput, states);\n      });\n\n      if (mask == null) {\n        lastOutput = stepOutputs[0];\n        states = stepOutputs[1];\n      } else {\n        var maskedOutputs = tfc.tidy(function () {\n          var stepMask = perStepMasks[t];\n          var negStepMask = tfc.onesLike(stepMask).sub(stepMask); // TODO(cais): Would tfc.where() be better for performance?\n\n          var output = stepOutputs[0].mul(stepMask).add(states[0].mul(negStepMask));\n          var newStates = states.map(function (state, i) {\n            return stepOutputs[1][i].mul(stepMask).add(state.mul(negStepMask));\n          });\n          return {\n            output: output,\n            newStates: newStates\n          };\n        });\n        lastOutput = maskedOutputs.output;\n        states = maskedOutputs.newStates;\n      }\n\n      if (needPerStepOutputs) {\n        perStepOutputs.push(lastOutput);\n      }\n    };\n\n    for (var t = 0; t < timeSteps; ++t) {\n      _loop(t);\n    }\n\n    var outputs;\n\n    if (needPerStepOutputs) {\n      var axis = 1;\n      outputs = tfc.stack(perStepOutputs, axis);\n    }\n\n    return [lastOutput, outputs, states];\n  });\n}\nexport var RNN = /*#__PURE__*/function (_Layer) {\n  _inherits(RNN, _Layer);\n\n  var _super = _createSuper(RNN);\n\n  function RNN(args) {\n    var _this;\n\n    _classCallCheck(this, RNN);\n\n    _this = _super.call(this, args);\n    var cell;\n\n    if (args.cell == null) {\n      throw new ValueError('cell property is missing for the constructor of RNN.');\n    } else if (Array.isArray(args.cell)) {\n      cell = new StackedRNNCells({\n        cells: args.cell\n      });\n    } else {\n      cell = args.cell;\n    }\n\n    if (cell.stateSize == null) {\n      throw new ValueError('The RNN cell should have an attribute `stateSize` (tuple of ' + 'integers, one integer per RNN state).');\n    }\n\n    _this.cell = cell;\n    _this.returnSequences = args.returnSequences == null ? false : args.returnSequences;\n    _this.returnState = args.returnState == null ? false : args.returnState;\n    _this.goBackwards = args.goBackwards == null ? false : args.goBackwards;\n    _this._stateful = args.stateful == null ? false : args.stateful;\n    _this.unroll = args.unroll == null ? false : args.unroll;\n    _this.supportsMasking = true;\n    _this.inputSpec = [new InputSpec({\n      ndim: 3\n    })];\n    _this.stateSpec = null;\n    _this.states_ = null; // TODO(cais): Add constantsSpec and numConstants.\n\n    _this.numConstants = null; // TODO(cais): Look into the use of initial_state in the kwargs of the\n    //   constructor.\n\n    _this.keptStates = [];\n    return _this;\n  } // Porting Note: This is the equivalent of `RNN.states` property getter in\n  //   PyKeras.\n\n\n  _createClass(RNN, [{\n    key: \"getStates\",\n    value: function getStates() {\n      if (this.states_ == null) {\n        var numStates = Array.isArray(this.cell.stateSize) ? this.cell.stateSize.length : 1;\n        return math_utils.range(0, numStates).map(function (x) {\n          return null;\n        });\n      } else {\n        return this.states_;\n      }\n    } // Porting Note: This is the equivalent of the `RNN.states` property setter in\n    //   PyKeras.\n\n  }, {\n    key: \"setStates\",\n    value: function setStates(states) {\n      this.states_ = states;\n    }\n  }, {\n    key: \"computeOutputShape\",\n    value: function computeOutputShape(inputShape) {\n      if (isArrayOfShapes(inputShape)) {\n        inputShape = inputShape[0];\n      }\n\n      inputShape = inputShape; // TODO(cais): Remove the casting once stacked RNN cells become supported.\n\n      var stateSize = this.cell.stateSize;\n\n      if (!Array.isArray(stateSize)) {\n        stateSize = [stateSize];\n      }\n\n      var outputDim = stateSize[0];\n      var outputShape;\n\n      if (this.returnSequences) {\n        outputShape = [inputShape[0], inputShape[1], outputDim];\n      } else {\n        outputShape = [inputShape[0], outputDim];\n      }\n\n      if (this.returnState) {\n        var stateShape = [];\n\n        var _iterator = _createForOfIteratorHelper(stateSize),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var dim = _step.value;\n            stateShape.push([inputShape[0], dim]);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        return [outputShape].concat(stateShape);\n      } else {\n        return outputShape;\n      }\n    }\n  }, {\n    key: \"computeMask\",\n    value: function computeMask(inputs, mask) {\n      var _this2 = this;\n\n      return tfc.tidy(function () {\n        if (Array.isArray(mask)) {\n          mask = mask[0];\n        }\n\n        var outputMask = _this2.returnSequences ? mask : null;\n\n        if (_this2.returnState) {\n          var stateMask = _this2.states.map(function (s) {\n            return null;\n          });\n\n          return [outputMask].concat(stateMask);\n        } else {\n          return outputMask;\n        }\n      });\n    }\n    /**\n     * Get the current state tensors of the RNN.\n     *\n     * If the state hasn't been set, return an array of `null`s of the correct\n     * length.\n     */\n\n  }, {\n    key: \"states\",\n    get: function get() {\n      if (this.states_ == null) {\n        var numStates = Array.isArray(this.cell.stateSize) ? this.cell.stateSize.length : 1;\n        var output = [];\n\n        for (var i = 0; i < numStates; ++i) {\n          output.push(null);\n        }\n\n        return output;\n      } else {\n        return this.states_;\n      }\n    },\n    set: function set(s) {\n      this.states_ = s;\n    }\n  }, {\n    key: \"build\",\n    value: function build(inputShape) {\n      // Note inputShape will be an Array of Shapes of initial states and\n      // constants if these are passed in apply().\n      var constantShape = null;\n\n      if (this.numConstants != null) {\n        throw new NotImplementedError('Constants support is not implemented in RNN yet.');\n      }\n\n      if (isArrayOfShapes(inputShape)) {\n        inputShape = inputShape[0];\n      }\n\n      inputShape = inputShape;\n      var batchSize = this.stateful ? inputShape[0] : null;\n      var inputDim = inputShape.slice(2);\n      this.inputSpec[0] = new InputSpec({\n        shape: [batchSize, null].concat(_toConsumableArray(inputDim))\n      }); // Allow cell (if RNNCell Layer) to build before we set or validate\n      // stateSpec.\n\n      var stepInputShape = [inputShape[0]].concat(inputShape.slice(2));\n\n      if (constantShape != null) {\n        throw new NotImplementedError('Constants support is not implemented in RNN yet.');\n      } else {\n        this.cell.build(stepInputShape);\n      } // Set or validate stateSpec.\n\n\n      var stateSize;\n\n      if (Array.isArray(this.cell.stateSize)) {\n        stateSize = this.cell.stateSize;\n      } else {\n        stateSize = [this.cell.stateSize];\n      }\n\n      if (this.stateSpec != null) {\n        if (!util.arraysEqual(this.stateSpec.map(function (spec) {\n          return spec.shape[spec.shape.length - 1];\n        }), stateSize)) {\n          throw new ValueError(\"An initialState was passed that is not compatible with \" + \"cell.stateSize. Received stateSpec=\".concat(this.stateSpec, \"; \") + \"However cell.stateSize is \".concat(this.cell.stateSize));\n        }\n      } else {\n        this.stateSpec = stateSize.map(function (dim) {\n          return new InputSpec({\n            shape: [null, dim]\n          });\n        });\n      }\n\n      if (this.stateful) {\n        this.resetStates();\n      }\n    }\n    /**\n     * Reset the state tensors of the RNN.\n     *\n     * If the `states` argument is `undefined` or `null`, will set the\n     * state tensor(s) of the RNN to all-zero tensors of the appropriate\n     * shape(s).\n     *\n     * If `states` is provided, will set the state tensors of the RNN to its\n     * value.\n     *\n     * @param states Optional externally-provided initial states.\n     * @param training Whether this call is done during training. For stateful\n     *   RNNs, this affects whether the old states are kept or discarded. In\n     *   particular, if `training` is `true`, the old states will be kept so\n     *   that subsequent backpropgataion through time (BPTT) may work properly.\n     *   Else, the old states will be discarded.\n     */\n\n  }, {\n    key: \"resetStates\",\n    value: function resetStates(states) {\n      var _this3 = this;\n\n      var training = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      tidy(function () {\n        if (!_this3.stateful) {\n          throw new AttributeError('Cannot call resetStates() on an RNN Layer that is not stateful.');\n        }\n\n        var batchSize = _this3.inputSpec[0].shape[0];\n\n        if (batchSize == null) {\n          throw new ValueError('If an RNN is stateful, it needs to know its batch size. Specify ' + 'the batch size of your input tensors: \\n' + '- If using a Sequential model, specify the batch size by ' + 'passing a `batchInputShape` option to your first layer.\\n' + '- If using the functional API, specify the batch size by ' + 'passing a `batchShape` option to your Input layer.');\n        } // Initialize state if null.\n\n\n        if (_this3.states_ == null) {\n          if (Array.isArray(_this3.cell.stateSize)) {\n            _this3.states_ = _this3.cell.stateSize.map(function (dim) {\n              return tfc.zeros([batchSize, dim]);\n            });\n          } else {\n            _this3.states_ = [tfc.zeros([batchSize, _this3.cell.stateSize])];\n          }\n        } else if (states == null) {\n          // Dispose old state tensors.\n          tfc.dispose(_this3.states_); // For stateful RNNs, fully dispose kept old states.\n\n          if (_this3.keptStates != null) {\n            tfc.dispose(_this3.keptStates);\n            _this3.keptStates = [];\n          }\n\n          if (Array.isArray(_this3.cell.stateSize)) {\n            _this3.states_ = _this3.cell.stateSize.map(function (dim) {\n              return tfc.zeros([batchSize, dim]);\n            });\n          } else {\n            _this3.states_[0] = tfc.zeros([batchSize, _this3.cell.stateSize]);\n          }\n        } else {\n          if (!Array.isArray(states)) {\n            states = [states];\n          }\n\n          if (states.length !== _this3.states_.length) {\n            throw new ValueError(\"Layer \".concat(_this3.name, \" expects \").concat(_this3.states_.length, \" state(s), \") + \"but it received \".concat(states.length, \" state value(s). Input \") + \"received: \".concat(states));\n          }\n\n          if (training === true) {\n            // Store old state tensors for complete disposal later, i.e., during\n            // the next no-arg call to this method. We do not dispose the old\n            // states immediately because that BPTT (among other things) require\n            // them.\n            _this3.keptStates.push(_this3.states_.slice());\n          } else {\n            tfc.dispose(_this3.states_);\n          }\n\n          for (var index = 0; index < _this3.states_.length; ++index) {\n            var value = states[index];\n            var dim = Array.isArray(_this3.cell.stateSize) ? _this3.cell.stateSize[index] : _this3.cell.stateSize;\n            var expectedShape = [batchSize, dim];\n\n            if (!util.arraysEqual(value.shape, expectedShape)) {\n              throw new ValueError(\"State \".concat(index, \" is incompatible with layer \").concat(_this3.name, \": \") + \"expected shape=\".concat(expectedShape, \", received shape=\").concat(value.shape));\n            }\n\n            _this3.states_[index] = value;\n          }\n        }\n\n        _this3.states_ = _this3.states_.map(function (state) {\n          return tfc.keep(state.clone());\n        });\n      });\n    }\n  }, {\n    key: \"apply\",\n    value: function apply(inputs, kwargs) {\n      // TODO(cais): Figure out whether initialState is in kwargs or inputs.\n      var initialState = kwargs == null ? null : kwargs['initialState'];\n      var constants = kwargs == null ? null : kwargs['constants'];\n\n      if (kwargs == null) {\n        kwargs = {};\n      }\n\n      var standardized = standardizeArgs(inputs, initialState, constants, this.numConstants);\n      inputs = standardized.inputs;\n      initialState = standardized.initialState;\n      constants = standardized.constants; // If any of `initial_state` or `constants` are specified and are\n      // `tf.SymbolicTensor`s, then add them to the inputs and temporarily modify\n      // the input_spec to include them.\n\n      var additionalInputs = [];\n      var additionalSpecs = [];\n\n      if (initialState != null) {\n        kwargs['initialState'] = initialState;\n        additionalInputs = additionalInputs.concat(initialState);\n        this.stateSpec = [];\n\n        var _iterator2 = _createForOfIteratorHelper(initialState),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var state = _step2.value;\n            this.stateSpec.push(new InputSpec({\n              shape: state.shape\n            }));\n          } // TODO(cais): Use the following instead.\n          // this.stateSpec = initialState.map(state => new InputSpec({shape:\n          // state.shape}));\n\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n\n        additionalSpecs = additionalSpecs.concat(this.stateSpec);\n      }\n\n      if (constants != null) {\n        kwargs['constants'] = constants;\n        additionalInputs = additionalInputs.concat(constants); // TODO(cais): Add this.constantsSpec.\n\n        this.numConstants = constants.length;\n      }\n\n      var isTensor = additionalInputs[0] instanceof SymbolicTensor;\n\n      if (isTensor) {\n        // Compute full input spec, including state and constants.\n        var fullInput = [inputs].concat(additionalInputs);\n        var fullInputSpec = this.inputSpec.concat(additionalSpecs); // Perform the call with temporarily replaced inputSpec.\n\n        var originalInputSpec = this.inputSpec;\n        this.inputSpec = fullInputSpec;\n\n        var output = _get(_getPrototypeOf(RNN.prototype), \"apply\", this).call(this, fullInput, kwargs);\n\n        this.inputSpec = originalInputSpec;\n        return output;\n      } else {\n        return _get(_getPrototypeOf(RNN.prototype), \"apply\", this).call(this, inputs, kwargs);\n      }\n    } // tslint:disable-next-line:no-any\n\n  }, {\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      var _this4 = this;\n\n      // Input shape: `[samples, time (padded with zeros), input_dim]`.\n      // Note that the .build() method of subclasses **must** define\n      // this.inputSpec and this.stateSpec owith complete input shapes.\n      return tidy(function () {\n        var mask = kwargs == null ? null : kwargs['mask'];\n        var training = kwargs == null ? null : kwargs['training'];\n        var initialState = kwargs == null ? null : kwargs['initialState'];\n        inputs = getExactlyOneTensor(inputs);\n\n        if (initialState == null) {\n          if (_this4.stateful) {\n            initialState = _this4.states_;\n          } else {\n            initialState = _this4.getInitialState(inputs);\n          }\n        }\n\n        var numStates = Array.isArray(_this4.cell.stateSize) ? _this4.cell.stateSize.length : 1;\n\n        if (initialState.length !== numStates) {\n          throw new ValueError(\"RNN Layer has \".concat(numStates, \" state(s) but was passed \") + \"\".concat(initialState.length, \" initial state(s).\"));\n        }\n\n        if (_this4.unroll) {\n          console.warn('Ignoring unroll = true for RNN layer, due to imperative backend.');\n        }\n\n        var cellCallKwargs = {\n          training: training\n        }; // TODO(cais): Add support for constants.\n\n        var step = function step(inputs, states) {\n          // `inputs` and `states` are concatenated to form a single `Array` of\n          // `tf.Tensor`s as the input to `cell.call()`.\n          var outputs = _this4.cell.call([inputs].concat(states), cellCallKwargs); // Marshall the return value into output and new states.\n\n\n          return [outputs[0], outputs.slice(1)];\n        }; // TODO(cais): Add support for constants.\n\n\n        var rnnOutputs = rnn(step, inputs, initialState, _this4.goBackwards, mask, null, _this4.unroll, _this4.returnSequences);\n        var lastOutput = rnnOutputs[0];\n        var outputs = rnnOutputs[1];\n        var states = rnnOutputs[2];\n\n        if (_this4.stateful) {\n          _this4.resetStates(states, training);\n        }\n\n        var output = _this4.returnSequences ? outputs : lastOutput; // TODO(cais): Porperty set learning phase flag.\n\n        if (_this4.returnState) {\n          return [output].concat(states);\n        } else {\n          return output;\n        }\n      });\n    }\n  }, {\n    key: \"getInitialState\",\n    value: function getInitialState(inputs) {\n      var _this5 = this;\n\n      return tidy(function () {\n        // Build an all-zero tensor of shape [samples, outputDim].\n        // [Samples, timeSteps, inputDim].\n        var initialState = tfc.zeros(inputs.shape); // [Samples].\n\n        initialState = tfc.sum(initialState, [1, 2]);\n        initialState = K.expandDims(initialState); // [Samples, 1].\n\n        if (Array.isArray(_this5.cell.stateSize)) {\n          return _this5.cell.stateSize.map(function (dim) {\n            return dim > 1 ? K.tile(initialState, [1, dim]) : initialState;\n          });\n        } else {\n          return _this5.cell.stateSize > 1 ? [K.tile(initialState, [1, _this5.cell.stateSize])] : [initialState];\n        }\n      });\n    }\n  }, {\n    key: \"trainableWeights\",\n    get: function get() {\n      if (!this.trainable) {\n        return [];\n      } // Porting Note: In TypeScript, `this` is always an instance of `Layer`.\n\n\n      return this.cell.trainableWeights;\n    }\n  }, {\n    key: \"nonTrainableWeights\",\n    get: function get() {\n      // Porting Note: In TypeScript, `this` is always an instance of `Layer`.\n      if (!this.trainable) {\n        return this.cell.weights;\n      }\n\n      return this.cell.nonTrainableWeights;\n    }\n  }, {\n    key: \"setFastWeightInitDuringBuild\",\n    value: function setFastWeightInitDuringBuild(value) {\n      _get(_getPrototypeOf(RNN.prototype), \"setFastWeightInitDuringBuild\", this).call(this, value);\n\n      if (this.cell != null) {\n        this.cell.setFastWeightInitDuringBuild(value);\n      }\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      var baseConfig = _get(_getPrototypeOf(RNN.prototype), \"getConfig\", this).call(this);\n\n      var config = {\n        returnSequences: this.returnSequences,\n        returnState: this.returnState,\n        goBackwards: this.goBackwards,\n        stateful: this.stateful,\n        unroll: this.unroll\n      };\n\n      if (this.numConstants != null) {\n        config['numConstants'] = this.numConstants;\n      }\n\n      var cellConfig = this.cell.getConfig();\n\n      if (this.getClassName() === RNN.className) {\n        config['cell'] = {\n          'className': this.cell.getClassName(),\n          'config': cellConfig\n        };\n      } // this order is necessary, to prevent cell name from replacing layer name\n\n\n      return Object.assign({}, cellConfig, baseConfig, config);\n    }\n    /** @nocollapse */\n\n  }], [{\n    key: \"fromConfig\",\n    value: function fromConfig(cls, config) {\n      var customObjects = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var cellConfig = config['cell'];\n      var cell = deserialize(cellConfig, customObjects);\n      return new cls(Object.assign(config, {\n        cell: cell\n      }));\n    }\n  }]);\n\n  return RNN;\n}(Layer);\n/** @nocollapse */\n\nRNN.className = 'RNN';\nserialization.registerClass(RNN); // Porting Note: This is a common parent class for RNN cells. There is no\n// equivalent of this in PyKeras. Having a common parent class forgoes the\n//  need for `has_attr(cell, ...)` checks or its TypeScript equivalent.\n\n/**\n * An RNNCell layer.\n *\n * @doc {heading: 'Layers', subheading: 'Classes'}\n */\n\nexport var RNNCell = /*#__PURE__*/function (_Layer2) {\n  _inherits(RNNCell, _Layer2);\n\n  var _super2 = _createSuper(RNNCell);\n\n  function RNNCell() {\n    _classCallCheck(this, RNNCell);\n\n    return _super2.apply(this, arguments);\n  }\n\n  return RNNCell;\n}(Layer);\nexport var SimpleRNNCell = /*#__PURE__*/function (_RNNCell) {\n  _inherits(SimpleRNNCell, _RNNCell);\n\n  var _super3 = _createSuper(SimpleRNNCell);\n\n  function SimpleRNNCell(args) {\n    var _this6;\n\n    _classCallCheck(this, SimpleRNNCell);\n\n    _this6 = _super3.call(this, args);\n    _this6.DEFAULT_ACTIVATION = 'tanh';\n    _this6.DEFAULT_KERNEL_INITIALIZER = 'glorotNormal';\n    _this6.DEFAULT_RECURRENT_INITIALIZER = 'orthogonal';\n    _this6.DEFAULT_BIAS_INITIALIZER = 'zeros';\n    _this6.units = args.units;\n    assertPositiveInteger(_this6.units, \"units\");\n    _this6.activation = getActivation(args.activation == null ? _this6.DEFAULT_ACTIVATION : args.activation);\n    _this6.useBias = args.useBias == null ? true : args.useBias;\n    _this6.kernelInitializer = getInitializer(args.kernelInitializer || _this6.DEFAULT_KERNEL_INITIALIZER);\n    _this6.recurrentInitializer = getInitializer(args.recurrentInitializer || _this6.DEFAULT_RECURRENT_INITIALIZER);\n    _this6.biasInitializer = getInitializer(args.biasInitializer || _this6.DEFAULT_BIAS_INITIALIZER);\n    _this6.kernelRegularizer = getRegularizer(args.kernelRegularizer);\n    _this6.recurrentRegularizer = getRegularizer(args.recurrentRegularizer);\n    _this6.biasRegularizer = getRegularizer(args.biasRegularizer);\n    _this6.kernelConstraint = getConstraint(args.kernelConstraint);\n    _this6.recurrentConstraint = getConstraint(args.recurrentConstraint);\n    _this6.biasConstraint = getConstraint(args.biasConstraint);\n    _this6.dropout = math_utils.min([1, math_utils.max([0, args.dropout == null ? 0 : args.dropout])]);\n    _this6.recurrentDropout = math_utils.min([1, math_utils.max([0, args.recurrentDropout == null ? 0 : args.recurrentDropout])]);\n    _this6.stateSize = _this6.units;\n    _this6.dropoutMask = null;\n    _this6.recurrentDropoutMask = null;\n    return _this6;\n  }\n\n  _createClass(SimpleRNNCell, [{\n    key: \"build\",\n    value: function build(inputShape) {\n      inputShape = getExactlyOneShape(inputShape); // TODO(cais): Use regularizer.\n\n      this.kernel = this.addWeight('kernel', [inputShape[inputShape.length - 1], this.units], null, this.kernelInitializer, this.kernelRegularizer, true, this.kernelConstraint);\n      this.recurrentKernel = this.addWeight('recurrent_kernel', [this.units, this.units], null, this.recurrentInitializer, this.recurrentRegularizer, true, this.recurrentConstraint);\n\n      if (this.useBias) {\n        this.bias = this.addWeight('bias', [this.units], null, this.biasInitializer, this.biasRegularizer, true, this.biasConstraint);\n      } else {\n        this.bias = null;\n      }\n\n      this.built = true;\n    } // Porting Note: PyKeras' equivalent of this method takes two tensor inputs:\n    //   `inputs` and `states`. Here, the two tensors are combined into an\n    //   `Tensor[]` Array as the first input argument.\n    //   Similarly, PyKeras' equivalent of this method returns two values:\n    //    `output` and `[output]`. Here the two are combined into one length-2\n    //    `Tensor[]`, consisting of `output` repeated.\n\n  }, {\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      var _this7 = this;\n\n      return tidy(function () {\n        inputs = inputs;\n\n        if (inputs.length !== 2) {\n          throw new ValueError(\"SimpleRNNCell expects 2 input Tensors, got \".concat(inputs.length, \".\"));\n        }\n\n        var prevOutput = inputs[1];\n        inputs = inputs[0];\n        var training = kwargs['training'] == null ? false : kwargs['training'];\n\n        if (0 < _this7.dropout && _this7.dropout < 1 && _this7.dropoutMask == null) {\n          _this7.dropoutMask = generateDropoutMask({\n            ones: function ones() {\n              return tfc.onesLike(inputs);\n            },\n            rate: _this7.dropout,\n            training: training\n          });\n        }\n\n        if (0 < _this7.recurrentDropout && _this7.recurrentDropout < 1 && _this7.recurrentDropoutMask == null) {\n          _this7.recurrentDropoutMask = generateDropoutMask({\n            ones: function ones() {\n              return tfc.onesLike(prevOutput);\n            },\n            rate: _this7.recurrentDropout,\n            training: training\n          });\n        }\n\n        var h;\n        var dpMask = _this7.dropoutMask;\n        var recDpMask = _this7.recurrentDropoutMask;\n\n        if (dpMask != null) {\n          h = K.dot(tfc.mul(inputs, dpMask), _this7.kernel.read());\n        } else {\n          h = K.dot(inputs, _this7.kernel.read());\n        }\n\n        if (_this7.bias != null) {\n          h = K.biasAdd(h, _this7.bias.read());\n        }\n\n        if (recDpMask != null) {\n          prevOutput = tfc.mul(prevOutput, recDpMask);\n        }\n\n        var output = tfc.add(h, K.dot(prevOutput, _this7.recurrentKernel.read()));\n\n        if (_this7.activation != null) {\n          output = _this7.activation.apply(output);\n        } // TODO(cais): Properly set learning phase on output tensor?\n\n\n        return [output, output];\n      });\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      var baseConfig = _get(_getPrototypeOf(SimpleRNNCell.prototype), \"getConfig\", this).call(this);\n\n      var config = {\n        units: this.units,\n        activation: serializeActivation(this.activation),\n        useBias: this.useBias,\n        kernelInitializer: serializeInitializer(this.kernelInitializer),\n        recurrentInitializer: serializeInitializer(this.recurrentInitializer),\n        biasInitializer: serializeInitializer(this.biasInitializer),\n        kernelRegularizer: serializeRegularizer(this.kernelRegularizer),\n        recurrentRegularizer: serializeRegularizer(this.recurrentRegularizer),\n        biasRegularizer: serializeRegularizer(this.biasRegularizer),\n        activityRegularizer: serializeRegularizer(this.activityRegularizer),\n        kernelConstraint: serializeConstraint(this.kernelConstraint),\n        recurrentConstraint: serializeConstraint(this.recurrentConstraint),\n        biasConstraint: serializeConstraint(this.biasConstraint),\n        dropout: this.dropout,\n        recurrentDropout: this.recurrentDropout\n      };\n      return Object.assign({}, baseConfig, config);\n    }\n  }]);\n\n  return SimpleRNNCell;\n}(RNNCell);\n/** @nocollapse */\n\nSimpleRNNCell.className = 'SimpleRNNCell';\nserialization.registerClass(SimpleRNNCell);\nexport var SimpleRNN = /*#__PURE__*/function (_RNN) {\n  _inherits(SimpleRNN, _RNN);\n\n  var _super4 = _createSuper(SimpleRNN);\n\n  function SimpleRNN(args) {\n    _classCallCheck(this, SimpleRNN);\n\n    args.cell = new SimpleRNNCell(args);\n    return _super4.call(this, args); // TODO(cais): Add activityRegularizer.\n  }\n\n  _createClass(SimpleRNN, [{\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      var _this8 = this;\n\n      return tidy(function () {\n        if (_this8.cell.dropoutMask != null) {\n          tfc.dispose(_this8.cell.dropoutMask);\n          _this8.cell.dropoutMask = null;\n        }\n\n        if (_this8.cell.recurrentDropoutMask != null) {\n          tfc.dispose(_this8.cell.recurrentDropoutMask);\n          _this8.cell.recurrentDropoutMask = null;\n        }\n\n        var mask = kwargs == null ? null : kwargs['mask'];\n        var training = kwargs == null ? null : kwargs['training'];\n        var initialState = kwargs == null ? null : kwargs['initialState'];\n        return _get(_getPrototypeOf(SimpleRNN.prototype), \"call\", _this8).call(_this8, inputs, {\n          mask: mask,\n          training: training,\n          initialState: initialState\n        });\n      });\n    }\n    /** @nocollapse */\n\n  }], [{\n    key: \"fromConfig\",\n    value: function fromConfig(cls, config) {\n      return new cls(config);\n    }\n  }]);\n\n  return SimpleRNN;\n}(RNN);\n/** @nocollapse */\n\nSimpleRNN.className = 'SimpleRNN';\nserialization.registerClass(SimpleRNN);\nexport var GRUCell = /*#__PURE__*/function (_RNNCell2) {\n  _inherits(GRUCell, _RNNCell2);\n\n  var _super5 = _createSuper(GRUCell);\n\n  function GRUCell(args) {\n    var _this9;\n\n    _classCallCheck(this, GRUCell);\n\n    _this9 = _super5.call(this, args);\n    _this9.DEFAULT_ACTIVATION = 'tanh';\n    _this9.DEFAULT_RECURRENT_ACTIVATION = 'hardSigmoid';\n    _this9.DEFAULT_KERNEL_INITIALIZER = 'glorotNormal';\n    _this9.DEFAULT_RECURRENT_INITIALIZER = 'orthogonal';\n    _this9.DEFAULT_BIAS_INITIALIZER = 'zeros';\n\n    if (args.resetAfter) {\n      throw new ValueError(\"GRUCell does not support reset_after parameter set to true.\");\n    }\n\n    _this9.units = args.units;\n    assertPositiveInteger(_this9.units, 'units');\n    _this9.activation = getActivation(args.activation === undefined ? _this9.DEFAULT_ACTIVATION : args.activation);\n    _this9.recurrentActivation = getActivation(args.recurrentActivation === undefined ? _this9.DEFAULT_RECURRENT_ACTIVATION : args.recurrentActivation);\n    _this9.useBias = args.useBias == null ? true : args.useBias;\n    _this9.kernelInitializer = getInitializer(args.kernelInitializer || _this9.DEFAULT_KERNEL_INITIALIZER);\n    _this9.recurrentInitializer = getInitializer(args.recurrentInitializer || _this9.DEFAULT_RECURRENT_INITIALIZER);\n    _this9.biasInitializer = getInitializer(args.biasInitializer || _this9.DEFAULT_BIAS_INITIALIZER);\n    _this9.kernelRegularizer = getRegularizer(args.kernelRegularizer);\n    _this9.recurrentRegularizer = getRegularizer(args.recurrentRegularizer);\n    _this9.biasRegularizer = getRegularizer(args.biasRegularizer);\n    _this9.kernelConstraint = getConstraint(args.kernelConstraint);\n    _this9.recurrentConstraint = getConstraint(args.recurrentConstraint);\n    _this9.biasConstraint = getConstraint(args.biasConstraint);\n    _this9.dropout = math_utils.min([1, math_utils.max([0, args.dropout == null ? 0 : args.dropout])]);\n    _this9.recurrentDropout = math_utils.min([1, math_utils.max([0, args.recurrentDropout == null ? 0 : args.recurrentDropout])]);\n    _this9.implementation = args.implementation;\n    _this9.stateSize = _this9.units;\n    _this9.dropoutMask = null;\n    _this9.recurrentDropoutMask = null;\n    return _this9;\n  }\n\n  _createClass(GRUCell, [{\n    key: \"build\",\n    value: function build(inputShape) {\n      inputShape = getExactlyOneShape(inputShape);\n      var inputDim = inputShape[inputShape.length - 1];\n      this.kernel = this.addWeight('kernel', [inputDim, this.units * 3], null, this.kernelInitializer, this.kernelRegularizer, true, this.kernelConstraint);\n      this.recurrentKernel = this.addWeight('recurrent_kernel', [this.units, this.units * 3], null, this.recurrentInitializer, this.recurrentRegularizer, true, this.recurrentConstraint);\n\n      if (this.useBias) {\n        this.bias = this.addWeight('bias', [this.units * 3], null, this.biasInitializer, this.biasRegularizer, true, this.biasConstraint);\n      } else {\n        this.bias = null;\n      } // Porting Notes: Unlike the PyKeras implementation, we perform slicing\n      //   of the weights and bias in the call() method, at execution time.\n\n\n      this.built = true;\n    }\n  }, {\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      var _this10 = this;\n\n      return tidy(function () {\n        inputs = inputs;\n\n        if (inputs.length !== 2) {\n          throw new ValueError(\"GRUCell expects 2 input Tensors (inputs, h, c), got \" + \"\".concat(inputs.length, \".\"));\n        }\n\n        var training = kwargs['training'] == null ? false : kwargs['training'];\n        var hTMinus1 = inputs[1]; // Previous memory state.\n\n        inputs = inputs[0]; // Note: For superior performance, TensorFlow.js always uses\n        // implementation 2, regardless of the actual value of\n        // config.implementation.\n\n        if (0 < _this10.dropout && _this10.dropout < 1 && _this10.dropoutMask == null) {\n          _this10.dropoutMask = generateDropoutMask({\n            ones: function ones() {\n              return tfc.onesLike(inputs);\n            },\n            rate: _this10.dropout,\n            training: training,\n            count: 3\n          });\n        }\n\n        if (0 < _this10.recurrentDropout && _this10.recurrentDropout < 1 && _this10.recurrentDropoutMask == null) {\n          _this10.recurrentDropoutMask = generateDropoutMask({\n            ones: function ones() {\n              return tfc.onesLike(hTMinus1);\n            },\n            rate: _this10.recurrentDropout,\n            training: training,\n            count: 3\n          });\n        }\n\n        var dpMask = _this10.dropoutMask;\n        var recDpMask = _this10.recurrentDropoutMask;\n        var z;\n        var r;\n        var hh;\n\n        if (0 < _this10.dropout && _this10.dropout < 1) {\n          inputs = tfc.mul(inputs, dpMask[0]);\n        }\n\n        var matrixX = K.dot(inputs, _this10.kernel.read());\n\n        if (_this10.useBias) {\n          matrixX = K.biasAdd(matrixX, _this10.bias.read());\n        }\n\n        if (0 < _this10.recurrentDropout && _this10.recurrentDropout < 1) {\n          hTMinus1 = tfc.mul(hTMinus1, recDpMask[0]);\n        }\n\n        var recurrentKernelValue = _this10.recurrentKernel.read();\n\n        var _tfc$split = tfc.split(recurrentKernelValue, [2 * _this10.units, _this10.units], recurrentKernelValue.rank - 1),\n            _tfc$split2 = _slicedToArray(_tfc$split, 2),\n            rk1 = _tfc$split2[0],\n            rk2 = _tfc$split2[1];\n\n        var matrixInner = K.dot(hTMinus1, rk1);\n\n        var _tfc$split3 = tfc.split(matrixX, 3, matrixX.rank - 1),\n            _tfc$split4 = _slicedToArray(_tfc$split3, 3),\n            xZ = _tfc$split4[0],\n            xR = _tfc$split4[1],\n            xH = _tfc$split4[2];\n\n        var _tfc$split5 = tfc.split(matrixInner, 2, matrixInner.rank - 1),\n            _tfc$split6 = _slicedToArray(_tfc$split5, 2),\n            recurrentZ = _tfc$split6[0],\n            recurrentR = _tfc$split6[1];\n\n        z = _this10.recurrentActivation.apply(tfc.add(xZ, recurrentZ));\n        r = _this10.recurrentActivation.apply(tfc.add(xR, recurrentR));\n        var recurrentH = K.dot(tfc.mul(r, hTMinus1), rk2);\n        hh = _this10.activation.apply(tfc.add(xH, recurrentH));\n        var h = tfc.add(tfc.mul(z, hTMinus1), tfc.mul(tfc.add(1, tfc.neg(z)), hh)); // TODO(cais): Add use_learning_phase flag properly.\n\n        return [h, h];\n      });\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      var baseConfig = _get(_getPrototypeOf(GRUCell.prototype), \"getConfig\", this).call(this);\n\n      var config = {\n        units: this.units,\n        activation: serializeActivation(this.activation),\n        recurrentActivation: serializeActivation(this.recurrentActivation),\n        useBias: this.useBias,\n        kernelInitializer: serializeInitializer(this.kernelInitializer),\n        recurrentInitializer: serializeInitializer(this.recurrentInitializer),\n        biasInitializer: serializeInitializer(this.biasInitializer),\n        kernelRegularizer: serializeRegularizer(this.kernelRegularizer),\n        recurrentRegularizer: serializeRegularizer(this.recurrentRegularizer),\n        biasRegularizer: serializeRegularizer(this.biasRegularizer),\n        activityRegularizer: serializeRegularizer(this.activityRegularizer),\n        kernelConstraint: serializeConstraint(this.kernelConstraint),\n        recurrentConstraint: serializeConstraint(this.recurrentConstraint),\n        biasConstraint: serializeConstraint(this.biasConstraint),\n        dropout: this.dropout,\n        recurrentDropout: this.recurrentDropout,\n        implementation: this.implementation,\n        resetAfter: false\n      };\n      return Object.assign({}, baseConfig, config);\n    }\n  }]);\n\n  return GRUCell;\n}(RNNCell);\n/** @nocollapse */\n\nGRUCell.className = 'GRUCell';\nserialization.registerClass(GRUCell);\nexport var GRU = /*#__PURE__*/function (_RNN2) {\n  _inherits(GRU, _RNN2);\n\n  var _super6 = _createSuper(GRU);\n\n  function GRU(args) {\n    _classCallCheck(this, GRU);\n\n    if (args.implementation === 0) {\n      console.warn('`implementation=0` has been deprecated, and now defaults to ' + '`implementation=1`. Please update your layer call.');\n    }\n\n    args.cell = new GRUCell(args);\n    return _super6.call(this, args); // TODO(cais): Add activityRegularizer.\n  }\n\n  _createClass(GRU, [{\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      var _this11 = this;\n\n      return tidy(function () {\n        if (_this11.cell.dropoutMask != null) {\n          tfc.dispose(_this11.cell.dropoutMask);\n          _this11.cell.dropoutMask = null;\n        }\n\n        if (_this11.cell.recurrentDropoutMask != null) {\n          tfc.dispose(_this11.cell.recurrentDropoutMask);\n          _this11.cell.recurrentDropoutMask = null;\n        }\n\n        var mask = kwargs == null ? null : kwargs['mask'];\n        var training = kwargs == null ? null : kwargs['training'];\n        var initialState = kwargs == null ? null : kwargs['initialState'];\n        return _get(_getPrototypeOf(GRU.prototype), \"call\", _this11).call(_this11, inputs, {\n          mask: mask,\n          training: training,\n          initialState: initialState\n        });\n      });\n    }\n    /** @nocollapse */\n\n  }], [{\n    key: \"fromConfig\",\n    value: function fromConfig(cls, config) {\n      if (config['implmentation'] === 0) {\n        config['implementation'] = 1;\n      }\n\n      return new cls(config);\n    }\n  }]);\n\n  return GRU;\n}(RNN);\n/** @nocollapse */\n\nGRU.className = 'GRU';\nserialization.registerClass(GRU);\nexport var LSTMCell = /*#__PURE__*/function (_RNNCell3) {\n  _inherits(LSTMCell, _RNNCell3);\n\n  var _super7 = _createSuper(LSTMCell);\n\n  function LSTMCell(args) {\n    var _this12;\n\n    _classCallCheck(this, LSTMCell);\n\n    _this12 = _super7.call(this, args);\n    _this12.DEFAULT_ACTIVATION = 'tanh';\n    _this12.DEFAULT_RECURRENT_ACTIVATION = 'hardSigmoid';\n    _this12.DEFAULT_KERNEL_INITIALIZER = 'glorotNormal';\n    _this12.DEFAULT_RECURRENT_INITIALIZER = 'orthogonal';\n    _this12.DEFAULT_BIAS_INITIALIZER = 'zeros';\n    _this12.units = args.units;\n    assertPositiveInteger(_this12.units, 'units');\n    _this12.activation = getActivation(args.activation === undefined ? _this12.DEFAULT_ACTIVATION : args.activation);\n    _this12.recurrentActivation = getActivation(args.recurrentActivation === undefined ? _this12.DEFAULT_RECURRENT_ACTIVATION : args.recurrentActivation);\n    _this12.useBias = args.useBias == null ? true : args.useBias;\n    _this12.kernelInitializer = getInitializer(args.kernelInitializer || _this12.DEFAULT_KERNEL_INITIALIZER);\n    _this12.recurrentInitializer = getInitializer(args.recurrentInitializer || _this12.DEFAULT_RECURRENT_INITIALIZER);\n    _this12.biasInitializer = getInitializer(args.biasInitializer || _this12.DEFAULT_BIAS_INITIALIZER);\n    _this12.unitForgetBias = args.unitForgetBias;\n    _this12.kernelRegularizer = getRegularizer(args.kernelRegularizer);\n    _this12.recurrentRegularizer = getRegularizer(args.recurrentRegularizer);\n    _this12.biasRegularizer = getRegularizer(args.biasRegularizer);\n    _this12.kernelConstraint = getConstraint(args.kernelConstraint);\n    _this12.recurrentConstraint = getConstraint(args.recurrentConstraint);\n    _this12.biasConstraint = getConstraint(args.biasConstraint);\n    _this12.dropout = math_utils.min([1, math_utils.max([0, args.dropout == null ? 0 : args.dropout])]);\n    _this12.recurrentDropout = math_utils.min([1, math_utils.max([0, args.recurrentDropout == null ? 0 : args.recurrentDropout])]);\n    _this12.implementation = args.implementation;\n    _this12.stateSize = [_this12.units, _this12.units];\n    _this12.dropoutMask = null;\n    _this12.recurrentDropoutMask = null;\n    return _this12;\n  }\n\n  _createClass(LSTMCell, [{\n    key: \"build\",\n    value: function build(inputShape) {\n      var _a;\n\n      inputShape = getExactlyOneShape(inputShape);\n      var inputDim = inputShape[inputShape.length - 1];\n      this.kernel = this.addWeight('kernel', [inputDim, this.units * 4], null, this.kernelInitializer, this.kernelRegularizer, true, this.kernelConstraint);\n      this.recurrentKernel = this.addWeight('recurrent_kernel', [this.units, this.units * 4], null, this.recurrentInitializer, this.recurrentRegularizer, true, this.recurrentConstraint);\n      var biasInitializer;\n\n      if (this.useBias) {\n        if (this.unitForgetBias) {\n          var capturedBiasInit = this.biasInitializer;\n          var capturedUnits = this.units;\n          biasInitializer = new (_a = /*#__PURE__*/function (_Initializer) {\n            _inherits(CustomInit, _Initializer);\n\n            var _super8 = _createSuper(CustomInit);\n\n            function CustomInit() {\n              _classCallCheck(this, CustomInit);\n\n              return _super8.apply(this, arguments);\n            }\n\n            _createClass(CustomInit, [{\n              key: \"apply\",\n              value: function apply(shape, dtype) {\n                // TODO(cais): More informative variable names?\n                var bI = capturedBiasInit.apply([capturedUnits]);\n                var bF = new Ones().apply([capturedUnits]);\n                var bCAndH = capturedBiasInit.apply([capturedUnits * 2]);\n                return K.concatAlongFirstAxis(K.concatAlongFirstAxis(bI, bF), bCAndH);\n              }\n            }]);\n\n            return CustomInit;\n          }(Initializer),\n          /** @nocollapse */\n          _a.className = 'CustomInit', _a)();\n        } else {\n          biasInitializer = this.biasInitializer;\n        }\n\n        this.bias = this.addWeight('bias', [this.units * 4], null, biasInitializer, this.biasRegularizer, true, this.biasConstraint);\n      } else {\n        this.bias = null;\n      } // Porting Notes: Unlike the PyKeras implementation, we perform slicing\n      //   of the weights and bias in the call() method, at execution time.\n\n\n      this.built = true;\n    }\n  }, {\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      var _this13 = this;\n\n      return tidy(function () {\n        var training = kwargs['training'] == null ? false : kwargs['training'];\n        inputs = inputs;\n\n        if (inputs.length !== 3) {\n          throw new ValueError(\"LSTMCell expects 3 input Tensors (inputs, h, c), got \" + \"\".concat(inputs.length, \".\"));\n        }\n\n        var hTMinus1 = inputs[1]; // Previous memory state.\n\n        var cTMinus1 = inputs[2]; // Previous carry state.\n\n        inputs = inputs[0];\n\n        if (0 < _this13.dropout && _this13.dropout < 1 && _this13.dropoutMask == null) {\n          _this13.dropoutMask = generateDropoutMask({\n            ones: function ones() {\n              return tfc.onesLike(inputs);\n            },\n            rate: _this13.dropout,\n            training: training,\n            count: 4\n          });\n        }\n\n        if (0 < _this13.recurrentDropout && _this13.recurrentDropout < 1 && _this13.recurrentDropoutMask == null) {\n          _this13.recurrentDropoutMask = generateDropoutMask({\n            ones: function ones() {\n              return tfc.onesLike(hTMinus1);\n            },\n            rate: _this13.recurrentDropout,\n            training: training,\n            count: 4\n          });\n        }\n\n        var dpMask = _this13.dropoutMask;\n        var recDpMask = _this13.recurrentDropoutMask; // Note: For superior performance, TensorFlow.js always uses\n        // implementation 2 regardless of the actual value of\n        // config.implementation.\n\n        var i;\n        var f;\n        var c;\n        var o;\n\n        if (0 < _this13.dropout && _this13.dropout < 1) {\n          inputs = tfc.mul(inputs, dpMask[0]);\n        }\n\n        var z = K.dot(inputs, _this13.kernel.read());\n\n        if (0 < _this13.recurrentDropout && _this13.recurrentDropout < 1) {\n          hTMinus1 = tfc.mul(hTMinus1, recDpMask[0]);\n        }\n\n        z = tfc.add(z, K.dot(hTMinus1, _this13.recurrentKernel.read()));\n\n        if (_this13.useBias) {\n          z = K.biasAdd(z, _this13.bias.read());\n        }\n\n        var _tfc$split7 = tfc.split(z, 4, z.rank - 1),\n            _tfc$split8 = _slicedToArray(_tfc$split7, 4),\n            z0 = _tfc$split8[0],\n            z1 = _tfc$split8[1],\n            z2 = _tfc$split8[2],\n            z3 = _tfc$split8[3];\n\n        i = _this13.recurrentActivation.apply(z0);\n        f = _this13.recurrentActivation.apply(z1);\n        c = tfc.add(tfc.mul(f, cTMinus1), tfc.mul(i, _this13.activation.apply(z2)));\n        o = _this13.recurrentActivation.apply(z3);\n        var h = tfc.mul(o, _this13.activation.apply(c)); // TODO(cais): Add use_learning_phase flag properly.\n\n        return [h, h, c];\n      });\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      var baseConfig = _get(_getPrototypeOf(LSTMCell.prototype), \"getConfig\", this).call(this);\n\n      var config = {\n        units: this.units,\n        activation: serializeActivation(this.activation),\n        recurrentActivation: serializeActivation(this.recurrentActivation),\n        useBias: this.useBias,\n        kernelInitializer: serializeInitializer(this.kernelInitializer),\n        recurrentInitializer: serializeInitializer(this.recurrentInitializer),\n        biasInitializer: serializeInitializer(this.biasInitializer),\n        unitForgetBias: this.unitForgetBias,\n        kernelRegularizer: serializeRegularizer(this.kernelRegularizer),\n        recurrentRegularizer: serializeRegularizer(this.recurrentRegularizer),\n        biasRegularizer: serializeRegularizer(this.biasRegularizer),\n        activityRegularizer: serializeRegularizer(this.activityRegularizer),\n        kernelConstraint: serializeConstraint(this.kernelConstraint),\n        recurrentConstraint: serializeConstraint(this.recurrentConstraint),\n        biasConstraint: serializeConstraint(this.biasConstraint),\n        dropout: this.dropout,\n        recurrentDropout: this.recurrentDropout,\n        implementation: this.implementation\n      };\n      return Object.assign({}, baseConfig, config);\n    }\n  }]);\n\n  return LSTMCell;\n}(RNNCell);\n/** @nocollapse */\n\nLSTMCell.className = 'LSTMCell';\nserialization.registerClass(LSTMCell);\nexport var LSTM = /*#__PURE__*/function (_RNN3) {\n  _inherits(LSTM, _RNN3);\n\n  var _super9 = _createSuper(LSTM);\n\n  function LSTM(args) {\n    _classCallCheck(this, LSTM);\n\n    if (args.implementation === 0) {\n      console.warn('`implementation=0` has been deprecated, and now defaults to ' + '`implementation=1`. Please update your layer call.');\n    }\n\n    args.cell = new LSTMCell(args);\n    return _super9.call(this, args); // TODO(cais): Add activityRegularizer.\n  }\n\n  _createClass(LSTM, [{\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      var _this14 = this;\n\n      return tidy(function () {\n        if (_this14.cell.dropoutMask != null) {\n          tfc.dispose(_this14.cell.dropoutMask);\n          _this14.cell.dropoutMask = null;\n        }\n\n        if (_this14.cell.recurrentDropoutMask != null) {\n          tfc.dispose(_this14.cell.recurrentDropoutMask);\n          _this14.cell.recurrentDropoutMask = null;\n        }\n\n        var mask = kwargs == null ? null : kwargs['mask'];\n        var training = kwargs == null ? null : kwargs['training'];\n        var initialState = kwargs == null ? null : kwargs['initialState'];\n        return _get(_getPrototypeOf(LSTM.prototype), \"call\", _this14).call(_this14, inputs, {\n          mask: mask,\n          training: training,\n          initialState: initialState\n        });\n      });\n    }\n    /** @nocollapse */\n\n  }], [{\n    key: \"fromConfig\",\n    value: function fromConfig(cls, config) {\n      if (config['implmentation'] === 0) {\n        config['implementation'] = 1;\n      }\n\n      return new cls(config);\n    }\n  }]);\n\n  return LSTM;\n}(RNN);\n/** @nocollapse */\n\nLSTM.className = 'LSTM';\nserialization.registerClass(LSTM);\nexport var StackedRNNCells = /*#__PURE__*/function (_RNNCell4) {\n  _inherits(StackedRNNCells, _RNNCell4);\n\n  var _super10 = _createSuper(StackedRNNCells);\n\n  function StackedRNNCells(args) {\n    var _this15;\n\n    _classCallCheck(this, StackedRNNCells);\n\n    _this15 = _super10.call(this, args);\n    _this15.cells = args.cells;\n    return _this15;\n  }\n\n  _createClass(StackedRNNCells, [{\n    key: \"stateSize\",\n    get: function get() {\n      // States are a flat list in reverse order of the cell stack.\n      // This allows perserving the requirement `stack.statesize[0] ===\n      // outputDim`. E.g., states of a 2-layer LSTM would be `[h2, c2, h1, c1]`,\n      // assuming one LSTM has states `[h, c]`.\n      var stateSize = [];\n\n      var _iterator3 = _createForOfIteratorHelper(this.cells.slice().reverse()),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var cell = _step3.value;\n\n          if (Array.isArray(cell.stateSize)) {\n            stateSize.push.apply(stateSize, _toConsumableArray(cell.stateSize));\n          } else {\n            stateSize.push(cell.stateSize);\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      return stateSize;\n    }\n  }, {\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      var _this16 = this;\n\n      return tidy(function () {\n        inputs = inputs;\n        var states = inputs.slice(1); // Recover per-cell states.\n\n        var nestedStates = [];\n\n        var _iterator4 = _createForOfIteratorHelper(_this16.cells.slice().reverse()),\n            _step4;\n\n        try {\n          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n            var _cell = _step4.value;\n\n            if (Array.isArray(_cell.stateSize)) {\n              nestedStates.push(states.splice(0, _cell.stateSize.length));\n            } else {\n              nestedStates.push(states.splice(0, 1));\n            }\n          }\n        } catch (err) {\n          _iterator4.e(err);\n        } finally {\n          _iterator4.f();\n        }\n\n        nestedStates.reverse(); // Call the cells in order and store the returned states.\n\n        var newNestedStates = [];\n        var callInputs;\n\n        for (var i = 0; i < _this16.cells.length; ++i) {\n          var cell = _this16.cells[i];\n          states = nestedStates[i]; // TODO(cais): Take care of constants.\n\n          if (i === 0) {\n            callInputs = [inputs[0]].concat(states);\n          } else {\n            callInputs = [callInputs[0]].concat(states);\n          }\n\n          callInputs = cell.call(callInputs, kwargs);\n          newNestedStates.push(callInputs.slice(1));\n        } // Format the new states as a flat list in reverse cell order.\n\n\n        states = [];\n\n        var _iterator5 = _createForOfIteratorHelper(newNestedStates.slice().reverse()),\n            _step5;\n\n        try {\n          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n            var _states;\n\n            var cellStates = _step5.value;\n\n            (_states = states).push.apply(_states, _toConsumableArray(cellStates));\n          }\n        } catch (err) {\n          _iterator5.e(err);\n        } finally {\n          _iterator5.f();\n        }\n\n        return [callInputs[0]].concat(states);\n      });\n    }\n  }, {\n    key: \"build\",\n    value: function build(inputShape) {\n      if (isArrayOfShapes(inputShape)) {\n        // TODO(cais): Take care of input constants.\n        // const constantShape = inputShape.slice(1);\n        inputShape = inputShape[0];\n      }\n\n      inputShape = inputShape;\n      var outputDim;\n      this.cells.forEach(function (cell, i) {\n        nameScope(\"RNNCell_\".concat(i), function () {\n          // TODO(cais): Take care of input constants.\n          cell.build(inputShape);\n\n          if (Array.isArray(cell.stateSize)) {\n            outputDim = cell.stateSize[0];\n          } else {\n            outputDim = cell.stateSize;\n          }\n\n          inputShape = [inputShape[0], outputDim];\n        });\n      });\n      this.built = true;\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      var baseConfig = _get(_getPrototypeOf(StackedRNNCells.prototype), \"getConfig\", this).call(this);\n\n      var getCellConfig = function getCellConfig(cell) {\n        return {\n          'className': cell.getClassName(),\n          'config': cell.getConfig()\n        };\n      };\n\n      var cellConfigs = this.cells.map(getCellConfig);\n      var config = {\n        'cells': cellConfigs\n      };\n      return Object.assign({}, baseConfig, config);\n    }\n    /** @nocollapse */\n\n  }, {\n    key: \"trainableWeights\",\n    get: function get() {\n      if (!this.trainable) {\n        return [];\n      }\n\n      var weights = [];\n\n      var _iterator6 = _createForOfIteratorHelper(this.cells),\n          _step6;\n\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var cell = _step6.value;\n          weights.push.apply(weights, _toConsumableArray(cell.trainableWeights));\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n\n      return weights;\n    }\n  }, {\n    key: \"nonTrainableWeights\",\n    get: function get() {\n      var weights = [];\n\n      var _iterator7 = _createForOfIteratorHelper(this.cells),\n          _step7;\n\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var _cell2 = _step7.value;\n          weights.push.apply(weights, _toConsumableArray(_cell2.nonTrainableWeights));\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n\n      if (!this.trainable) {\n        var trainableWeights = [];\n\n        var _iterator8 = _createForOfIteratorHelper(this.cells),\n            _step8;\n\n        try {\n          for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n            var cell = _step8.value;\n            trainableWeights.push.apply(trainableWeights, _toConsumableArray(cell.trainableWeights));\n          }\n        } catch (err) {\n          _iterator8.e(err);\n        } finally {\n          _iterator8.f();\n        }\n\n        return trainableWeights.concat(weights);\n      }\n\n      return weights;\n    }\n    /**\n     * Retrieve the weights of a the model.\n     *\n     * @returns A flat `Array` of `tf.Tensor`s.\n     */\n\n  }, {\n    key: \"getWeights\",\n    value: function getWeights() {\n      var weights = [];\n\n      var _iterator9 = _createForOfIteratorHelper(this.cells),\n          _step9;\n\n      try {\n        for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n          var cell = _step9.value;\n          weights.push.apply(weights, _toConsumableArray(cell.weights));\n        }\n      } catch (err) {\n        _iterator9.e(err);\n      } finally {\n        _iterator9.f();\n      }\n\n      return batchGetValue(weights);\n    }\n    /**\n     * Set the weights of the model.\n     *\n     * @param weights An `Array` of `tf.Tensor`s with shapes and types matching\n     *     the output of `getWeights()`.\n     */\n\n  }, {\n    key: \"setWeights\",\n    value: function setWeights(weights) {\n      var tuples = [];\n\n      var _iterator10 = _createForOfIteratorHelper(this.cells),\n          _step10;\n\n      try {\n        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n          var cell = _step10.value;\n          var numParams = cell.weights.length;\n          var inputWeights = weights.splice(numParams);\n\n          for (var i = 0; i < cell.weights.length; ++i) {\n            tuples.push([cell.weights[i], inputWeights[i]]);\n          }\n        }\n      } catch (err) {\n        _iterator10.e(err);\n      } finally {\n        _iterator10.f();\n      }\n\n      batchSetValue(tuples);\n    }\n  }], [{\n    key: \"fromConfig\",\n    value: function fromConfig(cls, config) {\n      var customObjects = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var cells = [];\n\n      var _iterator11 = _createForOfIteratorHelper(config['cells']),\n          _step11;\n\n      try {\n        for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n          var cellConfig = _step11.value;\n          cells.push(deserialize(cellConfig, customObjects));\n        }\n      } catch (err) {\n        _iterator11.e(err);\n      } finally {\n        _iterator11.f();\n      }\n\n      return new cls({\n        cells: cells\n      });\n    }\n  }]);\n\n  return StackedRNNCells;\n}(RNNCell);\n/** @nocollapse */\n\nStackedRNNCells.className = 'StackedRNNCells';\nserialization.registerClass(StackedRNNCells);\nexport function generateDropoutMask(args) {\n  var ones = args.ones,\n      rate = args.rate,\n      _args$training = args.training,\n      training = _args$training === void 0 ? false : _args$training,\n      _args$count = args.count,\n      count = _args$count === void 0 ? 1 : _args$count;\n\n  var droppedInputs = function droppedInputs() {\n    return K.dropout(ones(), rate);\n  };\n\n  var createMask = function createMask() {\n    return K.inTrainPhase(droppedInputs, ones, training);\n  }; // just in case count is provided with null or undefined\n\n\n  if (!count || count <= 1) {\n    return tfc.keep(createMask().clone());\n  }\n\n  var masks = Array(count).fill(undefined).map(createMask);\n  return masks.map(function (m) {\n    return tfc.keep(m.clone());\n  });\n}","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _createClass from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/get\";\nimport _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _inherits from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as tfc from '@tensorflow/tfjs-core';\nimport { util } from '@tensorflow/tfjs-core';\nimport * as K from '../backend/tfjs_backend';\nimport { checkDataFormat, checkPaddingMode } from '../common';\nimport { InputSpec } from '../engine/topology';\nimport { AttributeError, NotImplementedError, ValueError } from '../errors';\nimport { Initializer } from '../initializers';\nimport { convOutputLength, normalizeArray } from '../utils/conv_utils';\nimport { assertPositiveInteger } from '../utils/generic_utils';\nimport { getExactlyOneShape } from '../utils/types_utils';\nimport { generateDropoutMask, LSTMCell, RNN, RNNCell } from './recurrent';\n\nvar ConvRNN2DCell = /*#__PURE__*/function (_RNNCell) {\n  _inherits(ConvRNN2DCell, _RNNCell);\n\n  var _super = _createSuper(ConvRNN2DCell);\n\n  function ConvRNN2DCell() {\n    _classCallCheck(this, ConvRNN2DCell);\n\n    return _super.apply(this, arguments);\n  }\n\n  return ConvRNN2DCell;\n}(RNNCell);\n/**\n * Base class for convolutional-recurrent layers.\n */\n\n\nvar ConvRNN2D = /*#__PURE__*/function (_RNN) {\n  _inherits(ConvRNN2D, _RNN);\n\n  var _super2 = _createSuper(ConvRNN2D);\n\n  function ConvRNN2D(args) {\n    var _this;\n\n    _classCallCheck(this, ConvRNN2D);\n\n    if (args.unroll) {\n      throw new NotImplementedError('Unrolling is not possible with convolutional RNNs.');\n    }\n\n    if (Array.isArray(args.cell)) {\n      throw new NotImplementedError('It is not possible at the moment to stack convolutional cells.');\n    }\n\n    _this = _super2.call(this, args);\n    _this.inputSpec = [new InputSpec({\n      ndim: 5\n    })];\n    return _this;\n  }\n\n  _createClass(ConvRNN2D, [{\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      var _this2 = this;\n\n      return tfc.tidy(function () {\n        if (_this2.cell.dropoutMask != null) {\n          tfc.dispose(_this2.cell.dropoutMask);\n          _this2.cell.dropoutMask = null;\n        }\n\n        if (_this2.cell.recurrentDropoutMask != null) {\n          tfc.dispose(_this2.cell.recurrentDropoutMask);\n          _this2.cell.recurrentDropoutMask = null;\n        }\n\n        if (kwargs && kwargs['constants']) {\n          throw new ValueError('ConvRNN2D cell does not support constants');\n        }\n\n        var mask = kwargs == null ? null : kwargs['mask'];\n        var training = kwargs == null ? null : kwargs['training'];\n        var initialState = kwargs == null ? null : kwargs['initialState'];\n        return _get(_getPrototypeOf(ConvRNN2D.prototype), \"call\", _this2).call(_this2, inputs, {\n          mask: mask,\n          training: training,\n          initialState: initialState\n        });\n      });\n    }\n  }, {\n    key: \"computeOutputShape\",\n    value: function computeOutputShape(inputShape) {\n      var outShape = this.computeSingleOutputShape(inputShape);\n\n      if (!this.returnSequences) {\n        outShape = [outShape[0]].concat(_toConsumableArray(outShape.slice(2)));\n      }\n\n      if (this.returnState) {\n        outShape = [outShape].concat(_toConsumableArray(Array(2).fill([inputShape[0]].concat(_toConsumableArray(outShape.slice(-3))))));\n      }\n\n      return outShape;\n    }\n  }, {\n    key: \"getInitialState\",\n    value: function getInitialState(inputs) {\n      var _this3 = this;\n\n      return tfc.tidy(function () {\n        var stateSize = _this3.cell.stateSize;\n        var inputShape = inputs.shape;\n\n        var outputShape = _this3.computeSingleOutputShape(inputShape);\n\n        var stateShape = [outputShape[0]].concat(_toConsumableArray(outputShape.slice(2)));\n        var initialState = tfc.zeros(stateShape);\n\n        if (Array.isArray(stateSize)) {\n          return Array(stateSize.length).fill(initialState);\n        }\n\n        return [initialState];\n      });\n    }\n  }, {\n    key: \"resetStates\",\n    value: function resetStates(states) {\n      var _this4 = this;\n\n      var training = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      tfc.tidy(function () {\n        if (!_this4.stateful) {\n          throw new AttributeError('Cannot call resetStates() on an RNN Layer that is not stateful.');\n        }\n\n        var inputShape = _this4.inputSpec[0].shape;\n\n        var outputShape = _this4.computeSingleOutputShape(inputShape);\n\n        var stateShape = [outputShape[0]].concat(_toConsumableArray(outputShape.slice(2)));\n        var batchSize = inputShape[0];\n\n        if (batchSize == null) {\n          throw new ValueError('If an RNN is stateful, it needs to know its batch size. Specify ' + 'the batch size of your input tensors: \\n' + '- If using a Sequential model, specify the batch size by ' + 'passing a `batchInputShape` option to your first layer.\\n' + '- If using the functional API, specify the batch size by ' + 'passing a `batchShape` option to your Input layer.');\n        } // Initialize state if null.\n\n\n        if (_this4.getStates() == null) {\n          if (Array.isArray(_this4.cell.stateSize)) {\n            _this4.states_ = _this4.cell.stateSize.map(function () {\n              return tfc.zeros(stateShape);\n            });\n          } else {\n            _this4.states_ = [tfc.zeros(stateShape)];\n          }\n        } else if (states == null) {\n          // Dispose old state tensors.\n          tfc.dispose(_this4.states_); // For stateful RNNs, fully dispose kept old states.\n\n          if (_this4.keptStates != null) {\n            tfc.dispose(_this4.keptStates);\n            _this4.keptStates = [];\n          }\n\n          if (Array.isArray(_this4.cell.stateSize)) {\n            _this4.states_ = _this4.cell.stateSize.map(function () {\n              return tfc.zeros(stateShape);\n            });\n          } else {\n            _this4.states_[0] = tfc.zeros(stateShape);\n          }\n        } else {\n          if (!Array.isArray(states)) {\n            states = [states];\n          }\n\n          if (states.length !== _this4.states_.length) {\n            throw new ValueError(\"Layer \".concat(_this4.name, \" expects \").concat(_this4.states_.length, \" state(s), \") + \"but it received \".concat(states.length, \" state value(s). Input \") + \"received: \".concat(states));\n          }\n\n          if (training) {\n            // Store old state tensors for complete disposal later, i.e., during\n            // the next no-arg call to this method. We do not dispose the old\n            // states immediately because that BPTT (among other things) require\n            // them.\n            _this4.keptStates.push(_this4.states_.slice());\n          } else {\n            tfc.dispose(_this4.states_);\n          }\n\n          for (var index = 0; index < _this4.states_.length; ++index) {\n            var value = states[index];\n            var expectedShape = stateShape;\n\n            if (!util.arraysEqual(value.shape, expectedShape)) {\n              throw new ValueError(\"State \".concat(index, \" is incompatible with layer \").concat(_this4.name, \": \") + \"expected shape=\".concat(expectedShape, \", received shape=\").concat(value.shape));\n            }\n\n            _this4.states_[index] = value;\n          }\n        }\n\n        _this4.states_ = _this4.states_.map(function (state) {\n          return tfc.keep(state.clone());\n        });\n      });\n    }\n  }, {\n    key: \"computeSingleOutputShape\",\n    value: function computeSingleOutputShape(inputShape) {\n      var _this$cell = this.cell,\n          dataFormat = _this$cell.dataFormat,\n          filters = _this$cell.filters,\n          kernelSize = _this$cell.kernelSize,\n          padding = _this$cell.padding,\n          strides = _this$cell.strides,\n          dilationRate = _this$cell.dilationRate;\n      var isChannelsFirst = dataFormat === 'channelsFirst';\n      var h = inputShape[isChannelsFirst ? 3 : 2];\n      var w = inputShape[isChannelsFirst ? 4 : 3];\n      var hOut = convOutputLength(h, kernelSize[0], padding, strides[0], dilationRate[0]);\n      var wOut = convOutputLength(w, kernelSize[1], padding, strides[1], dilationRate[1]);\n      var outShape = [].concat(_toConsumableArray(inputShape.slice(0, 2)), _toConsumableArray(isChannelsFirst ? [filters, hOut, wOut] : [hOut, wOut, filters]));\n      return outShape;\n    }\n  }]);\n\n  return ConvRNN2D;\n}(RNN);\n/** @nocollapse */\n\n\nConvRNN2D.className = 'ConvRNN2D';\nexport var ConvLSTM2DCell = /*#__PURE__*/function (_LSTMCell) {\n  _inherits(ConvLSTM2DCell, _LSTMCell);\n\n  var _super3 = _createSuper(ConvLSTM2DCell);\n\n  function ConvLSTM2DCell(args) {\n    var _this5;\n\n    _classCallCheck(this, ConvLSTM2DCell);\n\n    var filters = args.filters,\n        kernelSize = args.kernelSize,\n        strides = args.strides,\n        padding = args.padding,\n        dataFormat = args.dataFormat,\n        dilationRate = args.dilationRate;\n    _this5 = _super3.call(this, Object.assign({}, args, {\n      units: filters\n    }));\n    _this5.filters = filters;\n    assertPositiveInteger(_this5.filters, 'filters');\n    _this5.kernelSize = normalizeArray(kernelSize, 2, 'kernelSize');\n\n    _this5.kernelSize.forEach(function (size) {\n      return assertPositiveInteger(size, 'kernelSize');\n    });\n\n    _this5.strides = normalizeArray(strides || 1, 2, 'strides');\n\n    _this5.strides.forEach(function (stride) {\n      return assertPositiveInteger(stride, 'strides');\n    });\n\n    _this5.padding = padding || 'valid';\n    checkPaddingMode(_this5.padding);\n    _this5.dataFormat = dataFormat || 'channelsLast';\n    checkDataFormat(_this5.dataFormat);\n    _this5.dilationRate = normalizeArray(dilationRate || 1, 2, 'dilationRate');\n\n    _this5.dilationRate.forEach(function (rate) {\n      return assertPositiveInteger(rate, 'dilationRate');\n    });\n\n    return _this5;\n  }\n\n  _createClass(ConvLSTM2DCell, [{\n    key: \"build\",\n    value: function build(inputShape) {\n      var _a;\n\n      inputShape = getExactlyOneShape(inputShape);\n      var channelAxis = this.dataFormat === 'channelsFirst' ? 1 : inputShape.length - 1;\n\n      if (inputShape[channelAxis] == null) {\n        throw new ValueError(\"The channel dimension of the input should be defined. \" + \"Found \".concat(inputShape[channelAxis]));\n      }\n\n      var inputDim = inputShape[channelAxis];\n      var numOfKernels = 4;\n      var kernelShape = this.kernelSize.concat([inputDim, this.filters * numOfKernels]);\n      this.kernel = this.addWeight('kernel', kernelShape, null, this.kernelInitializer, this.kernelRegularizer, true, this.kernelConstraint);\n      var recurrentKernelShape = this.kernelSize.concat([this.filters, this.filters * numOfKernels]);\n      this.recurrentKernel = this.addWeight('recurrent_kernel', recurrentKernelShape, null, this.recurrentInitializer, this.recurrentRegularizer, true, this.recurrentConstraint);\n\n      if (this.useBias) {\n        var biasInitializer;\n\n        if (this.unitForgetBias) {\n          var init = this.biasInitializer;\n          var filters = this.filters;\n          biasInitializer = new (_a = /*#__PURE__*/function (_Initializer) {\n            _inherits(CustomInit, _Initializer);\n\n            var _super4 = _createSuper(CustomInit);\n\n            function CustomInit() {\n              _classCallCheck(this, CustomInit);\n\n              return _super4.apply(this, arguments);\n            }\n\n            _createClass(CustomInit, [{\n              key: \"apply\",\n              value: function apply(shape, dtype) {\n                var biasI = init.apply([filters]);\n                var biasF = tfc.ones([filters]);\n                var biasCAndO = init.apply([filters * 2]);\n                return K.concatenate([biasI, biasF, biasCAndO]);\n              }\n            }]);\n\n            return CustomInit;\n          }(Initializer),\n          /** @nocollapse */\n          _a.className = 'CustomInit', _a)();\n        } else {\n          biasInitializer = this.biasInitializer;\n        }\n\n        this.bias = this.addWeight('bias', [this.filters * numOfKernels], null, biasInitializer, this.biasRegularizer, true, this.biasConstraint);\n      }\n\n      this.built = true;\n    }\n  }, {\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      var _this6 = this;\n\n      return tfc.tidy(function () {\n        if (inputs.length !== 3) {\n          throw new ValueError(\"ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got \" + \"\".concat(inputs.length, \".\"));\n        }\n\n        var training = kwargs['training'] || false;\n        var x = inputs[0]; // Current input\n\n        var hTMinus1 = inputs[1]; // Previous memory state.\n\n        var cTMinus1 = inputs[2]; // Previous carry state.\n\n        var numOfKernels = 4;\n\n        if (0 < _this6.dropout && _this6.dropout < 1 && _this6.dropoutMask == null) {\n          _this6.dropoutMask = generateDropoutMask({\n            ones: function ones() {\n              return tfc.onesLike(x);\n            },\n            rate: _this6.dropout,\n            training: training,\n            count: numOfKernels\n          });\n        }\n\n        var dropoutMask = _this6.dropoutMask;\n\n        var applyDropout = function applyDropout(x, mask, index) {\n          if (!mask || !mask[index]) {\n            return x;\n          }\n\n          return tfc.mul(mask[index], x);\n        };\n\n        var xI = applyDropout(x, dropoutMask, 0);\n        var xF = applyDropout(x, dropoutMask, 1);\n        var xC = applyDropout(x, dropoutMask, 2);\n        var xO = applyDropout(x, dropoutMask, 3);\n\n        if (0 < _this6.recurrentDropout && _this6.recurrentDropout < 1 && _this6.recurrentDropoutMask == null) {\n          _this6.recurrentDropoutMask = generateDropoutMask({\n            ones: function ones() {\n              return tfc.onesLike(hTMinus1);\n            },\n            rate: _this6.recurrentDropout,\n            training: training,\n            count: numOfKernels\n          });\n        }\n\n        var recDropoutMask = _this6.recurrentDropoutMask;\n        var hI = applyDropout(hTMinus1, recDropoutMask, 0);\n        var hF = applyDropout(hTMinus1, recDropoutMask, 1);\n        var hC = applyDropout(hTMinus1, recDropoutMask, 2);\n        var hO = applyDropout(hTMinus1, recDropoutMask, 3);\n        var kernelChannelAxis = 3;\n\n        var _tfc$split = tfc.split(_this6.kernel.read(), numOfKernels, kernelChannelAxis),\n            _tfc$split2 = _slicedToArray(_tfc$split, 4),\n            kernelI = _tfc$split2[0],\n            kernelF = _tfc$split2[1],\n            kernelC = _tfc$split2[2],\n            kernelO = _tfc$split2[3];\n\n        var _ref = _this6.useBias ? tfc.split(_this6.bias.read(), numOfKernels) : [null, null, null, null],\n            _ref2 = _slicedToArray(_ref, 4),\n            biasI = _ref2[0],\n            biasF = _ref2[1],\n            biasC = _ref2[2],\n            biasO = _ref2[3];\n\n        xI = _this6.inputConv(xI, kernelI, biasI, _this6.padding);\n        xF = _this6.inputConv(xF, kernelF, biasF, _this6.padding);\n        xC = _this6.inputConv(xC, kernelC, biasC, _this6.padding);\n        xO = _this6.inputConv(xO, kernelO, biasO, _this6.padding);\n\n        var _tfc$split3 = tfc.split(_this6.recurrentKernel.read(), numOfKernels, kernelChannelAxis),\n            _tfc$split4 = _slicedToArray(_tfc$split3, 4),\n            recKernelI = _tfc$split4[0],\n            recKernelF = _tfc$split4[1],\n            recKernelC = _tfc$split4[2],\n            recKernelO = _tfc$split4[3];\n\n        hI = _this6.recurrentConv(hI, recKernelI);\n        hF = _this6.recurrentConv(hF, recKernelF);\n        hC = _this6.recurrentConv(hC, recKernelC);\n        hO = _this6.recurrentConv(hO, recKernelO);\n\n        var i = _this6.recurrentActivation.apply(tfc.add(xI, hI));\n\n        var f = _this6.recurrentActivation.apply(tfc.add(xF, hF));\n\n        var c = tfc.add(tfc.mul(f, cTMinus1), tfc.mul(i, _this6.activation.apply(tfc.add(xC, hC))));\n        var h = tfc.mul(_this6.recurrentActivation.apply(tfc.add(xO, hO)), _this6.activation.apply(c));\n        return [h, h, c];\n      });\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      var _a = _get(_getPrototypeOf(ConvLSTM2DCell.prototype), \"getConfig\", this).call(this),\n          _ = _a['units'],\n          baseConfig = __rest(_a, ['units']);\n\n      var config = {\n        filters: this.filters,\n        kernelSize: this.kernelSize,\n        padding: this.padding,\n        dataFormat: this.dataFormat,\n        dilationRate: this.dilationRate,\n        strides: this.strides\n      };\n      return Object.assign({}, baseConfig, config);\n    }\n  }, {\n    key: \"inputConv\",\n    value: function inputConv(x, w, b, padding) {\n      var out = tfc.conv2d(x, w, this.strides, padding || 'valid', this.dataFormat === 'channelsFirst' ? 'NCHW' : 'NHWC', this.dilationRate);\n\n      if (b) {\n        return K.biasAdd(out, b, this.dataFormat);\n      }\n\n      return out;\n    }\n  }, {\n    key: \"recurrentConv\",\n    value: function recurrentConv(x, w) {\n      var strides = 1;\n      return tfc.conv2d(x, w, strides, 'same', this.dataFormat === 'channelsFirst' ? 'NCHW' : 'NHWC');\n    }\n  }]);\n\n  return ConvLSTM2DCell;\n}(LSTMCell);\n/** @nocollapse */\n\nConvLSTM2DCell.className = 'ConvLSTM2DCell';\ntfc.serialization.registerClass(ConvLSTM2DCell);\nexport var ConvLSTM2D = /*#__PURE__*/function (_ConvRNN2D) {\n  _inherits(ConvLSTM2D, _ConvRNN2D);\n\n  var _super5 = _createSuper(ConvLSTM2D);\n\n  function ConvLSTM2D(args) {\n    _classCallCheck(this, ConvLSTM2D);\n\n    var cell = new ConvLSTM2DCell(args);\n    return _super5.call(this, Object.assign({}, args, {\n      cell: cell\n    }));\n  }\n  /** @nocollapse */\n\n\n  _createClass(ConvLSTM2D, null, [{\n    key: \"fromConfig\",\n    value: function fromConfig(cls, config) {\n      return new cls(config);\n    }\n  }]);\n\n  return ConvLSTM2D;\n}(ConvRNN2D);\n/** @nocollapse */\n\nConvLSTM2D.className = 'ConvLSTM2D';\ntfc.serialization.registerClass(ConvLSTM2D);","import _defineProperty from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/get\";\nimport _inherits from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/**\n * TensorFlow.js Layers: Basic Layers.\n */\nimport { any, notEqual, serialization, tidy, transpose, util } from '@tensorflow/tfjs-core';\nimport { getActivation, serializeActivation } from '../activations';\nimport * as K from '../backend/tfjs_backend';\nimport { getConstraint, serializeConstraint } from '../constraints';\nimport { InputSpec, Layer } from '../engine/topology';\nimport { ValueError } from '../errors';\nimport { getInitializer, serializeInitializer } from '../initializers';\nimport { getRegularizer, serializeRegularizer } from '../regularizers';\nimport { assertPositiveInteger, mapActivationToFusedKernel } from '../utils/generic_utils';\nimport { arrayProd, range } from '../utils/math_utils';\nimport { getExactlyOneShape, getExactlyOneTensor } from '../utils/types_utils';\nexport var Dropout = /*#__PURE__*/function (_Layer) {\n  _inherits(Dropout, _Layer);\n\n  var _super = _createSuper(Dropout);\n\n  function Dropout(args) {\n    var _this;\n\n    _classCallCheck(this, Dropout);\n\n    _this = _super.call(this, args);\n    _this.rate = Math.max(Math.min(args.rate, 1), 0); // So that the scalar doesn't get tidied up between executions.\n\n    _this.noiseShape = args.noiseShape;\n    _this.seed = args.seed;\n    _this.supportsMasking = true;\n    return _this;\n  }\n\n  _createClass(Dropout, [{\n    key: \"getNoiseShape\",\n    value: function getNoiseShape(input) {\n      if (this.noiseShape == null) {\n        return this.noiseShape;\n      }\n\n      var inputShape = input.shape;\n      var noiseShape = [];\n\n      for (var i = 0; i < this.noiseShape.length; ++i) {\n        noiseShape.push(this.noiseShape[i] == null ? inputShape[i] : this.noiseShape[i]);\n      }\n\n      return noiseShape;\n    }\n  }, {\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      var _this2 = this;\n\n      return tidy(function () {\n        _this2.invokeCallHook(inputs, kwargs);\n\n        var input = getExactlyOneTensor(inputs);\n\n        if (0 < _this2.rate && _this2.rate < 1) {\n          var training = kwargs['training'] == null ? false : kwargs['training'];\n\n          var noiseShape = _this2.getNoiseShape(input);\n\n          var output = K.inTrainPhase(function () {\n            return K.dropout(input, _this2.rate, noiseShape, _this2.seed);\n          }, function () {\n            return input;\n          }, training);\n          return output;\n        }\n\n        return inputs;\n      });\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      var config = {\n        rate: this.rate,\n        noiseShape: this.noiseShape,\n        seed: this.seed\n      };\n\n      var baseConfig = _get(_getPrototypeOf(Dropout.prototype), \"getConfig\", this).call(this);\n\n      Object.assign(config, baseConfig);\n      return config;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      return _get(_getPrototypeOf(Dropout.prototype), \"dispose\", this).call(this);\n    }\n  }]);\n\n  return Dropout;\n}(Layer);\n/** @nocollapse */\n\nDropout.className = 'Dropout';\nserialization.registerClass(Dropout);\nexport var SpatialDropout1D = /*#__PURE__*/function (_Dropout) {\n  _inherits(SpatialDropout1D, _Dropout);\n\n  var _super2 = _createSuper(SpatialDropout1D);\n\n  function SpatialDropout1D(args) {\n    var _this3;\n\n    _classCallCheck(this, SpatialDropout1D);\n\n    _this3 = _super2.call(this, args);\n    _this3.inputSpec = [{\n      ndim: 3\n    }];\n    return _this3;\n  }\n\n  _createClass(SpatialDropout1D, [{\n    key: \"getNoiseShape\",\n    value: function getNoiseShape(input) {\n      var inputShape = input.shape;\n      return [inputShape[0], 1, inputShape[2]];\n    }\n  }]);\n\n  return SpatialDropout1D;\n}(Dropout);\n/** @nocollapse */\n\nSpatialDropout1D.className = 'SpatialDropout1D';\nserialization.registerClass(SpatialDropout1D);\nexport var Dense = /*#__PURE__*/function (_Layer2) {\n  _inherits(Dense, _Layer2);\n\n  var _super3 = _createSuper(Dense);\n\n  function Dense(args) {\n    var _this4;\n\n    _classCallCheck(this, Dense);\n\n    _this4 = _super3.call(this, args); // Default activation: Linear (none).\n\n    _this4.activation = null;\n    _this4.useBias = true;\n    _this4.kernel = null;\n    _this4.bias = null;\n    _this4.DEFAULT_KERNEL_INITIALIZER = 'glorotNormal';\n    _this4.DEFAULT_BIAS_INITIALIZER = 'zeros';\n\n    if (args.batchInputShape == null && args.inputShape == null && args.inputDim != null) {\n      // This logic is copied from Layer's constructor, since we can't\n      // do exactly what the Python constructor does for Dense().\n      var batchSize = null;\n\n      if (args.batchSize != null) {\n        batchSize = args.batchSize;\n      }\n\n      _this4.batchInputShape = [batchSize, args.inputDim];\n    }\n\n    _this4.units = args.units;\n    assertPositiveInteger(_this4.units, 'units');\n    _this4.activation = getActivation(args.activation);\n\n    if (args.useBias != null) {\n      _this4.useBias = args.useBias;\n    }\n\n    _this4.kernelInitializer = getInitializer(args.kernelInitializer || _this4.DEFAULT_KERNEL_INITIALIZER);\n    _this4.biasInitializer = getInitializer(args.biasInitializer || _this4.DEFAULT_BIAS_INITIALIZER);\n    _this4.kernelConstraint = getConstraint(args.kernelConstraint);\n    _this4.biasConstraint = getConstraint(args.biasConstraint);\n    _this4.kernelRegularizer = getRegularizer(args.kernelRegularizer);\n    _this4.biasRegularizer = getRegularizer(args.biasRegularizer);\n    _this4.activityRegularizer = getRegularizer(args.activityRegularizer);\n    _this4.supportsMasking = true;\n    _this4.inputSpec = [{\n      minNDim: 2\n    }];\n    return _this4;\n  }\n\n  _createClass(Dense, [{\n    key: \"build\",\n    value: function build(inputShape) {\n      inputShape = getExactlyOneShape(inputShape);\n      var inputLastDim = inputShape[inputShape.length - 1];\n\n      if (this.kernel == null) {\n        this.kernel = this.addWeight('kernel', [inputLastDim, this.units], null, this.kernelInitializer, this.kernelRegularizer, true, this.kernelConstraint);\n\n        if (this.useBias) {\n          this.bias = this.addWeight('bias', [this.units], null, this.biasInitializer, this.biasRegularizer, true, this.biasConstraint);\n        }\n      }\n\n      this.inputSpec = [{\n        minNDim: 2,\n        axes: _defineProperty({}, -1, inputLastDim)\n      }];\n      this.built = true;\n    }\n  }, {\n    key: \"computeOutputShape\",\n    value: function computeOutputShape(inputShape) {\n      inputShape = getExactlyOneShape(inputShape);\n      var outputShape = inputShape.slice();\n      outputShape[outputShape.length - 1] = this.units;\n      return outputShape;\n    }\n  }, {\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      var _this5 = this;\n\n      return tidy(function () {\n        _this5.invokeCallHook(inputs, kwargs); // Dense layer accepts only a single input.\n\n\n        var input = getExactlyOneTensor(inputs);\n        var fusedActivationName = mapActivationToFusedKernel(_this5.activation.getClassName());\n        var output;\n\n        if (fusedActivationName != null) {\n          output = K.dot(input, _this5.kernel.read(), fusedActivationName, _this5.bias ? _this5.bias.read() : null);\n        } else {\n          output = K.dot(input, _this5.kernel.read());\n\n          if (_this5.bias != null) {\n            output = K.biasAdd(output, _this5.bias.read());\n          }\n\n          if (_this5.activation != null) {\n            output = _this5.activation.apply(output);\n          }\n        }\n\n        return output;\n      });\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      var config = {\n        units: this.units,\n        activation: serializeActivation(this.activation),\n        useBias: this.useBias,\n        kernelInitializer: serializeInitializer(this.kernelInitializer),\n        biasInitializer: serializeInitializer(this.biasInitializer),\n        kernelRegularizer: serializeRegularizer(this.kernelRegularizer),\n        biasRegularizer: serializeRegularizer(this.biasRegularizer),\n        activityRegularizer: serializeRegularizer(this.activityRegularizer),\n        kernelConstraint: serializeConstraint(this.kernelConstraint),\n        biasConstraint: serializeConstraint(this.biasConstraint)\n      };\n\n      var baseConfig = _get(_getPrototypeOf(Dense.prototype), \"getConfig\", this).call(this);\n\n      Object.assign(config, baseConfig);\n      return config;\n    }\n  }]);\n\n  return Dense;\n}(Layer);\n/** @nocollapse */\n\nDense.className = 'Dense';\nserialization.registerClass(Dense);\nexport var Flatten = /*#__PURE__*/function (_Layer3) {\n  _inherits(Flatten, _Layer3);\n\n  var _super4 = _createSuper(Flatten);\n\n  function Flatten(args) {\n    var _this6;\n\n    _classCallCheck(this, Flatten);\n\n    args = args || {};\n    _this6 = _super4.call(this, args);\n    _this6.inputSpec = [{\n      minNDim: 3\n    }];\n    _this6.dataFormat = args.dataFormat;\n    return _this6;\n  }\n\n  _createClass(Flatten, [{\n    key: \"computeOutputShape\",\n    value: function computeOutputShape(inputShape) {\n      inputShape = getExactlyOneShape(inputShape);\n\n      var _iterator = _createForOfIteratorHelper(inputShape.slice(1)),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var dim = _step.value;\n\n          if (dim == null) {\n            throw new ValueError(\"The shape of the input to \\\"Flatten\\\" is not fully defined \" + \"(got \".concat(inputShape.slice(1), \"). Make sure to pass a complete \") + \"\\\"input_shape\\\" or \\\"batch_input_shape\\\" argument to the first \" + \"layer in your model.\");\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return [inputShape[0], arrayProd(inputShape, 1)];\n    }\n  }, {\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      var _this7 = this;\n\n      return tidy(function () {\n        _this7.invokeCallHook(inputs, kwargs);\n\n        var input = getExactlyOneTensor(inputs);\n\n        if (_this7.dataFormat === 'channelsFirst' && input.rank > 1) {\n          var permutation = [0];\n\n          for (var i = 2; i < input.rank; ++i) {\n            permutation.push(i);\n          }\n\n          permutation.push(1);\n          input = input.transpose(permutation);\n        }\n\n        return K.batchFlatten(input);\n      });\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      var config = {};\n\n      if (this.dataFormat != null) {\n        config['dataFormat'] = this.dataFormat;\n      }\n\n      var baseConfig = _get(_getPrototypeOf(Flatten.prototype), \"getConfig\", this).call(this);\n\n      Object.assign(config, baseConfig);\n      return config;\n    }\n  }]);\n\n  return Flatten;\n}(Layer);\n/** @nocollapse */\n\nFlatten.className = 'Flatten';\nserialization.registerClass(Flatten);\nexport var Activation = /*#__PURE__*/function (_Layer4) {\n  _inherits(Activation, _Layer4);\n\n  var _super5 = _createSuper(Activation);\n\n  function Activation(args) {\n    var _this8;\n\n    _classCallCheck(this, Activation);\n\n    _this8 = _super5.call(this, args);\n    _this8.supportsMasking = true;\n    _this8.activation = getActivation(args.activation);\n    return _this8;\n  }\n\n  _createClass(Activation, [{\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      var _this9 = this;\n\n      return tidy(function () {\n        _this9.invokeCallHook(inputs, kwargs);\n\n        var input = getExactlyOneTensor(inputs);\n        return _this9.activation.apply(input);\n      });\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      var config = {\n        activation: serializeActivation(this.activation)\n      };\n\n      var baseConfig = _get(_getPrototypeOf(Activation.prototype), \"getConfig\", this).call(this);\n\n      Object.assign(config, baseConfig);\n      return config;\n    }\n  }]);\n\n  return Activation;\n}(Layer);\n/** @nocollapse */\n\nActivation.className = 'Activation';\nserialization.registerClass(Activation);\nexport var RepeatVector = /*#__PURE__*/function (_Layer5) {\n  _inherits(RepeatVector, _Layer5);\n\n  var _super6 = _createSuper(RepeatVector);\n\n  function RepeatVector(args) {\n    var _this10;\n\n    _classCallCheck(this, RepeatVector);\n\n    _this10 = _super6.call(this, args);\n    _this10.n = args.n;\n    _this10.inputSpec = [{\n      ndim: 2\n    }];\n    return _this10;\n  }\n\n  _createClass(RepeatVector, [{\n    key: \"computeOutputShape\",\n    value: function computeOutputShape(inputShape) {\n      return [inputShape[0], this.n, inputShape[1]];\n    }\n  }, {\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      var _this11 = this;\n\n      return tidy(function () {\n        inputs = getExactlyOneTensor(inputs);\n        return K.repeat(inputs, _this11.n);\n      });\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      var config = {\n        n: this.n\n      };\n\n      var baseConfig = _get(_getPrototypeOf(RepeatVector.prototype), \"getConfig\", this).call(this);\n\n      Object.assign(config, baseConfig);\n      return config;\n    }\n  }]);\n\n  return RepeatVector;\n}(Layer);\n/** @nocollapse */\n\nRepeatVector.className = 'RepeatVector';\nserialization.registerClass(RepeatVector);\nexport var Reshape = /*#__PURE__*/function (_Layer6) {\n  _inherits(Reshape, _Layer6);\n\n  var _super7 = _createSuper(Reshape);\n\n  function Reshape(args) {\n    var _this12;\n\n    _classCallCheck(this, Reshape);\n\n    _this12 = _super7.call(this, args);\n    _this12.targetShape = args.targetShape; // Make sure that all unknown dimensions are represented as `null`.\n\n    for (var i = 0; i < _this12.targetShape.length; ++i) {\n      if (_this12.isUnknown(_this12.targetShape[i])) {\n        _this12.targetShape[i] = null;\n      }\n    }\n\n    return _this12;\n  }\n\n  _createClass(Reshape, [{\n    key: \"isUnknown\",\n    value: function isUnknown(dim) {\n      return dim < 0 || dim == null;\n    }\n    /**\n     * Finds and replaces a missing dimension in output shape.\n     *\n     * This is a near direct port of the internal Numpy function\n     * `_fix_unknown_dimension` in `numpy/core/src/multiarray/shape.c`.\n     *\n     * @param inputShape: Original shape of array begin reshape.\n     * @param outputShape: Target shape of the array, with at most a single\n     * `null` or negative number, which indicates an underdetermined dimension\n     * that should be derived from `inputShape` and the known dimensions of\n     *   `outputShape`.\n     * @returns: The output shape with `null` replaced with its computed value.\n     * @throws: ValueError: If `inputShape` and `outputShape` do not match.\n     */\n\n  }, {\n    key: \"fixUnknownDimension\",\n    value: function fixUnknownDimension(inputShape, outputShape) {\n      var errorMsg = 'Total size of new array must be unchanged.';\n      var finalShape = outputShape.slice();\n      var known = 1;\n      var unknown = null;\n\n      for (var i = 0; i < finalShape.length; ++i) {\n        var dim = finalShape[i];\n\n        if (this.isUnknown(dim)) {\n          if (unknown === null) {\n            unknown = i;\n          } else {\n            throw new ValueError('Can only specifiy one unknown dimension.');\n          }\n        } else {\n          known *= dim;\n        }\n      }\n\n      var originalSize = arrayProd(inputShape);\n\n      if (unknown !== null) {\n        if (known === 0 || originalSize % known !== 0) {\n          throw new ValueError(errorMsg);\n        }\n\n        finalShape[unknown] = originalSize / known;\n      } else if (originalSize !== known) {\n        throw new ValueError(errorMsg);\n      }\n\n      return finalShape;\n    }\n  }, {\n    key: \"computeOutputShape\",\n    value: function computeOutputShape(inputShape) {\n      var anyUnknownDims = false;\n\n      for (var i = 0; i < inputShape.length; ++i) {\n        if (this.isUnknown(inputShape[i])) {\n          anyUnknownDims = true;\n          break;\n        }\n      }\n\n      if (anyUnknownDims) {\n        return inputShape.slice(0, 1).concat(this.targetShape);\n      } else {\n        return inputShape.slice(0, 1).concat(this.fixUnknownDimension(inputShape.slice(1), this.targetShape));\n      }\n    }\n  }, {\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      var _this13 = this;\n\n      return tidy(function () {\n        _this13.invokeCallHook(inputs, kwargs);\n\n        var input = getExactlyOneTensor(inputs);\n        var inputShape = input.shape;\n        var outputShape = inputShape.slice(0, 1).concat(_this13.fixUnknownDimension(inputShape.slice(1), _this13.targetShape));\n        return input.reshape(outputShape);\n      });\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      var config = {\n        targetShape: this.targetShape\n      };\n\n      var baseConfig = _get(_getPrototypeOf(Reshape.prototype), \"getConfig\", this).call(this);\n\n      Object.assign(config, baseConfig);\n      return config;\n    }\n  }]);\n\n  return Reshape;\n}(Layer);\n/** @nocollapse */\n\nReshape.className = 'Reshape';\nserialization.registerClass(Reshape);\nexport var Permute = /*#__PURE__*/function (_Layer7) {\n  _inherits(Permute, _Layer7);\n\n  var _super8 = _createSuper(Permute);\n\n  function Permute(args) {\n    var _this14;\n\n    _classCallCheck(this, Permute);\n\n    _this14 = _super8.call(this, args);\n\n    if (args.dims == null) {\n      throw new Error('Required configuration field `dims` is missing during Permute ' + 'constructor call.');\n    }\n\n    if (!Array.isArray(args.dims)) {\n      throw new Error('Permute constructor requires `dims` to be an Array, but received ' + \"\".concat(args.dims, \" instead.\"));\n    } // Check the validity of the permutation indices.\n\n\n    var expectedSortedIndices = range(1, args.dims.length + 1);\n\n    if (!util.arraysEqual(args.dims.slice().sort(), expectedSortedIndices)) {\n      throw new Error('Invalid permutation `dims`: ' + JSON.stringify(args.dims) + ' `dims` must contain consecutive integers starting from 1.');\n    }\n\n    _this14.dims = args.dims;\n    _this14.dimsIncludingBatch = [0].concat(_this14.dims);\n    _this14.inputSpec = [new InputSpec({\n      ndim: _this14.dims.length + 1\n    })];\n    return _this14;\n  }\n\n  _createClass(Permute, [{\n    key: \"computeOutputShape\",\n    value: function computeOutputShape(inputShape) {\n      inputShape = getExactlyOneShape(inputShape);\n      var outputShape = inputShape.slice();\n      this.dims.forEach(function (dim, i) {\n        outputShape[i + 1] = inputShape[dim];\n      });\n      return outputShape;\n    }\n  }, {\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      return transpose(getExactlyOneTensor(inputs), this.dimsIncludingBatch);\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      var config = {\n        dims: this.dims\n      };\n\n      var baseConfig = _get(_getPrototypeOf(Permute.prototype), \"getConfig\", this).call(this);\n\n      Object.assign(config, baseConfig);\n      return config;\n    }\n  }]);\n\n  return Permute;\n}(Layer);\n/** @nocollapse */\n\nPermute.className = 'Permute';\nserialization.registerClass(Permute);\nexport var Masking = /*#__PURE__*/function (_Layer8) {\n  _inherits(Masking, _Layer8);\n\n  var _super9 = _createSuper(Masking);\n\n  function Masking(args) {\n    var _this15;\n\n    _classCallCheck(this, Masking);\n\n    _this15 = _super9.call(this, args == null ? {} : args);\n    _this15.supportsMasking = true;\n\n    if (args != null) {\n      _this15.maskValue = args.maskValue == null ? 0 : args.maskValue;\n    } else {\n      _this15.maskValue = 0;\n    }\n\n    return _this15;\n  }\n\n  _createClass(Masking, [{\n    key: \"computeOutputShape\",\n    value: function computeOutputShape(inputShape) {\n      return inputShape;\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      var baseConfig = _get(_getPrototypeOf(Masking.prototype), \"getConfig\", this).call(this);\n\n      var config = {\n        maskValue: this.maskValue\n      };\n      Object.assign(config, baseConfig);\n      return config;\n    }\n  }, {\n    key: \"computeMask\",\n    value: function computeMask(inputs, mask) {\n      var input = getExactlyOneTensor(inputs);\n      var axis = -1;\n      return any(notEqual(input, this.maskValue), axis);\n    }\n  }, {\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      var _this16 = this;\n\n      return tidy(function () {\n        _this16.invokeCallHook(inputs, kwargs);\n\n        var input = getExactlyOneTensor(inputs);\n        var axis = -1;\n        var keepDims = true;\n        var booleanMask = any(notEqual(input, _this16.maskValue), axis, keepDims);\n        var output = input.mul(booleanMask.asType(input.dtype));\n        return output;\n      });\n    }\n  }]);\n\n  return Masking;\n}(Layer);\n/** @nocollapse */\n\nMasking.className = 'Masking';\nserialization.registerClass(Masking);","import _toConsumableArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/get\";\nimport _inherits from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/**\n * TensorFlow.js Layers: Embedding Layer.\n *\n * Original source: keras/constraints.py\n */\nimport { notEqual, serialization, tidy, zerosLike } from '@tensorflow/tfjs-core';\nimport * as K from '../backend/tfjs_backend';\nimport { getConstraint, serializeConstraint } from '../constraints';\nimport { Layer } from '../engine/topology';\nimport { ValueError } from '../errors';\nimport { getInitializer, serializeInitializer } from '../initializers';\nimport { getRegularizer, serializeRegularizer } from '../regularizers';\nimport * as generic_utils from '../utils/generic_utils';\nimport { getExactlyOneShape, getExactlyOneTensor } from '../utils/types_utils';\nexport var Embedding = /*#__PURE__*/function (_Layer) {\n  _inherits(Embedding, _Layer);\n\n  var _super = _createSuper(Embedding);\n\n  function Embedding(args) {\n    var _this;\n\n    _classCallCheck(this, Embedding);\n\n    _this = _super.call(this, args);\n    _this.embeddings = null;\n    _this.DEFAULT_EMBEDDINGS_INITIALIZER = 'randomUniform';\n\n    if (args.batchInputShape == null && args.inputShape == null) {\n      // Porting Note: This logic is copied from Layer's constructor, since we\n      // can't do exactly what the Python constructor does for Embedding().\n      // Specifically, the super constructor can not be called after the\n      // mutation of the `config` argument.\n      var batchSize = null;\n\n      if (args.batchSize != null) {\n        batchSize = args.batchSize;\n      }\n\n      if (args.inputLength == null) {\n        // Fix super-constructor to what it would have done if\n        // 'config.inputShape' were (None, )\n        _this.batchInputShape = [batchSize, null];\n      } else {\n        // Fix super-constructor to what it would have done if\n        // 'config.inputShape' were (config.inputLength, )\n        _this.batchInputShape = [batchSize].concat(generic_utils.toList(args.inputLength));\n      }\n    }\n\n    _this.inputDim = args.inputDim;\n    generic_utils.assertPositiveInteger(_this.inputDim, 'inputDim');\n    _this.outputDim = args.outputDim;\n    generic_utils.assertPositiveInteger(_this.outputDim, 'outputDim');\n    _this.embeddingsInitializer = getInitializer(args.embeddingsInitializer || _this.DEFAULT_EMBEDDINGS_INITIALIZER);\n    _this.embeddingsRegularizer = getRegularizer(args.embeddingsRegularizer);\n    _this.activityRegularizer = getRegularizer(args.activityRegularizer);\n    _this.embeddingsConstraint = getConstraint(args.embeddingsConstraint);\n    _this.maskZero = args.maskZero;\n    _this.supportsMasking = args.maskZero;\n    _this.inputLength = args.inputLength;\n    return _this;\n  }\n\n  _createClass(Embedding, [{\n    key: \"build\",\n    value: function build(inputShape) {\n      this.embeddings = this.addWeight('embeddings', [this.inputDim, this.outputDim], this.dtype, this.embeddingsInitializer, this.embeddingsRegularizer, true, this.embeddingsConstraint);\n      this.built = true;\n    } // Override warnOnIncompatibleInputShape because an embedding layer allows\n    // the input to have varying ranks.\n\n  }, {\n    key: \"warnOnIncompatibleInputShape\",\n    value: function warnOnIncompatibleInputShape(inputShape) {}\n  }, {\n    key: \"computeMask\",\n    value: function computeMask(inputs, mask) {\n      var _this2 = this;\n\n      return tidy(function () {\n        if (!_this2.maskZero) {\n          return null;\n        } else {\n          inputs = getExactlyOneTensor(inputs);\n          return notEqual(inputs, zerosLike(inputs));\n        }\n      });\n    }\n  }, {\n    key: \"computeOutputShape\",\n    value: function computeOutputShape(inputShape) {\n      inputShape = getExactlyOneShape(inputShape);\n\n      if (this.inputLength == null) {\n        return [].concat(_toConsumableArray(inputShape), [this.outputDim]);\n      } // inputLength can be an array if input is 3D or higher.\n\n\n      var inLens = generic_utils.toList(this.inputLength);\n\n      if (inLens.length !== inputShape.length - 1) {\n        throw new ValueError(\"\\\"inputLength\\\" is \".concat(this.inputLength, \", but received \") + \"input shape has shape \".concat(inputShape));\n      } else {\n        var i = 0;\n\n        for (var k = 0; k < inLens.length; ++k) {\n          var s1 = inLens[k];\n          var s2 = inputShape[k + 1];\n\n          if (s1 != null && s2 != null && s1 !== s2) {\n            throw new ValueError(\"\\\"inputLength\\\" is \".concat(this.inputLength, \", but received \") + \"input shape has shape \".concat(inputShape));\n          } else if (s1 == null) {\n            inLens[i] = s2;\n          }\n\n          i++;\n        }\n      }\n\n      return [inputShape[0]].concat(_toConsumableArray(inLens), [this.outputDim]);\n    }\n  }, {\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      var _this3 = this;\n\n      return tidy(function () {\n        _this3.invokeCallHook(inputs, kwargs); // Embedding layer accepts only a single input.\n\n\n        var input = getExactlyOneTensor(inputs);\n\n        if (input.dtype !== 'int32') {\n          input = K.cast(input, 'int32');\n        }\n\n        var output = K.gather(_this3.embeddings.read(), input.as1D());\n        return output.reshape(getExactlyOneShape(_this3.computeOutputShape(input.shape)));\n      });\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      var config = {\n        inputDim: this.inputDim,\n        outputDim: this.outputDim,\n        embeddingsInitializer: serializeInitializer(this.embeddingsInitializer),\n        embeddingsRegularizer: serializeRegularizer(this.embeddingsRegularizer),\n        activityRegularizer: serializeRegularizer(this.activityRegularizer),\n        embeddingsConstraint: serializeConstraint(this.embeddingsConstraint),\n        maskZero: this.maskZero,\n        inputLength: this.inputLength\n      };\n\n      var baseConfig = _get(_getPrototypeOf(Embedding.prototype), \"getConfig\", this).call(this);\n\n      Object.assign(config, baseConfig);\n      return config;\n    }\n  }]);\n\n  return Embedding;\n}(Layer);\n/** @nocollapse */\n\nEmbedding.className = 'Embedding';\nserialization.registerClass(Embedding);","import _get from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/get\";\nimport _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/**\n * TensorFlow.js Layers: Merge Layers.\n */\nimport * as tfc from '@tensorflow/tfjs-core';\nimport { serialization, tidy, util } from '@tensorflow/tfjs-core';\nimport * as K from '../backend/tfjs_backend';\nimport { Layer } from '../engine/topology';\nimport { NotImplementedError, ValueError } from '../errors';\nimport { l2Normalize } from '../losses';\nimport * as generic_utils from '../utils/generic_utils';\nimport * as mathUtils from '../utils/math_utils';\nimport { getExactlyOneShape } from '../utils/types_utils';\n/**\n * Generic Merge layer for element-wise merge functions.\n *\n * Used to implement `Sum`, `Average`, `Concatenate`, etc.\n */\n\nexport var Merge = /*#__PURE__*/function (_Layer) {\n  _inherits(Merge, _Layer);\n\n  var _super = _createSuper(Merge);\n\n  function Merge(args) {\n    var _this;\n\n    _classCallCheck(this, Merge);\n\n    _this = _super.call(this, args || {});\n    _this.supportsMasking = true;\n    return _this;\n  }\n  /**\n   * Logic for merging multiple tensors, to be overridden by subclasses.\n   * @param inputs\n   */\n\n\n  _createClass(Merge, [{\n    key: \"mergeFunction\",\n    value: function mergeFunction(inputs) {\n      throw new NotImplementedError();\n    }\n    /**\n     * Computes the shape of the result of an elementwise operation.\n     *\n     * @param shape1: Shape of the first tensor.\n     * @param shape2: Shape of the second tensor.\n     * @returns Expected output shape when an elementwise operation is carried\n     *   out on 2 tensors with shapes `shape1` and `shape2`.\n     * @throws ValueError: If `shape1` and `shape2` are not compatible for\n     *   element-wise operations.\n     */\n\n  }, {\n    key: \"computeElementwiseOpOutputShape\",\n    value: function computeElementwiseOpOutputShape(shape1, shape2) {\n      if (shape1 == null || shape2 == null) {\n        return null;\n      } else if (shape1.length < shape2.length) {\n        return this.computeElementwiseOpOutputShape(shape2, shape1);\n      } else if (shape2.length === 0) {\n        return shape1;\n      }\n\n      var outputShape = shape1.slice(0, shape1.length - shape2.length);\n\n      for (var k = 0; k < shape2.length; ++k) {\n        var i = shape1[shape1.length - shape2.length + k];\n        var j = shape2[k];\n\n        if (i == null || j == null || i < 0 || j < 0) {\n          outputShape.push(null);\n        } else if (i === 1) {\n          outputShape.push(j);\n        } else if (j === 1) {\n          outputShape.push(i);\n        } else {\n          if (i !== j) {\n            throw new ValueError('Operands could not be broadcast together with shapes ' + JSON.stringify(shape1) + ' ' + JSON.stringify(shape2));\n          }\n\n          outputShape.push(i);\n        }\n      }\n\n      return outputShape;\n    }\n  }, {\n    key: \"build\",\n    value: function build(inputShape) {\n      // Used purely for shape validation.\n      if (Array.isArray(inputShape) && !Array.isArray(inputShape[0])) {\n        // Make sure that inputShape is an Array of shape.\n        inputShape = [getExactlyOneShape(inputShape)];\n      }\n\n      inputShape = inputShape;\n\n      if (inputShape.length < 2) {\n        throw new ValueError('A merge layer should be called on an Array of at least 2 inputs.' + \" Got \".concat(inputShape.length, \" input(s).\"));\n      } // Make sure that there is at most one unique batch size among the input\n      // shapes.\n\n\n      var batchSizes = [];\n\n      var _iterator = _createForOfIteratorHelper(inputShape),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _shape = _step.value;\n\n          if (_shape != null && _shape[0] !== null) {\n            batchSizes.push(_shape[0]);\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      batchSizes = generic_utils.unique(batchSizes);\n\n      if (batchSizes.length > 1) {\n        throw new ValueError(\"Can not merge tensors with different batch sizes. \" + \"Got tensors with shapes: \".concat(JSON.stringify(inputShape), \".\"));\n      }\n\n      var outputShape = inputShape[0] == null ? null : inputShape[0].slice(1);\n\n      for (var i = 1; i < inputShape.length; ++i) {\n        var shape = inputShape[i] == null ? null : inputShape[i].slice(1);\n        outputShape = this.computeElementwiseOpOutputShape(outputShape, shape);\n      } // If the inputs have different ranks, we have to reshape them to make them\n      // broadcastable.\n\n\n      var allRanks = inputShape.map(function (shape) {\n        return shape.length;\n      });\n\n      if (inputShape.indexOf(null) === -1 && generic_utils.unique(allRanks).length === 1) {\n        this.reshapeRequired = false;\n      } else {\n        this.reshapeRequired = true;\n      }\n    }\n  }, {\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      var _this2 = this;\n\n      return tidy(function () {\n        inputs = inputs;\n\n        if (_this2.reshapeRequired) {\n          var reshapedInputs = [];\n          var inputDims = inputs.map(function (input) {\n            return input.rank;\n          });\n\n          if (inputDims.indexOf(null) === -1) {\n            // If ranks of all inputs are available, we simply expand each of them\n            // at axis=1 until all of them have the same rank.\n            var maxNDim = mathUtils.max(inputDims);\n\n            var _iterator2 = _createForOfIteratorHelper(inputs),\n                _step2;\n\n            try {\n              for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                var x = _step2.value;\n                var xNDim = x.rank;\n\n                for (var k = 0; k < maxNDim - xNDim; ++k) {\n                  x = K.expandDims(x, 1);\n                }\n\n                reshapedInputs.push(x);\n              }\n            } catch (err) {\n              _iterator2.e(err);\n            } finally {\n              _iterator2.f();\n            }\n\n            return _this2.mergeFunction(reshapedInputs);\n          } else {\n            // Transpose all inputs so that batch size is the last dimension.\n            // [batchSize, dim1, dim2, ...] -> [dim1, dim2, ..., batchSize]\n            var transposed = false;\n\n            var _iterator3 = _createForOfIteratorHelper(inputs),\n                _step3;\n\n            try {\n              for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                var _x = _step3.value;\n                var _xNDim = _x.rank;\n\n                if (_xNDim == null) {\n                  var xShape = _x.shape;\n                  var _batchSize = xShape[0];\n\n                  var _newShape = xShape.slice(1).concat([_batchSize]);\n\n                  var xTransposed = _x.reshape([_batchSize].concat(mathUtils.arrayProd(xShape.slice(1))));\n\n                  xTransposed = tfc.transpose(xTransposed, [1, 0]);\n                  xTransposed = xTransposed.reshape(_newShape);\n                  reshapedInputs.push(xTransposed);\n                  transposed = true;\n                } else if (_xNDim > 1) {\n                  var _dims = mathUtils.range(1, _xNDim).concat([0]);\n\n                  reshapedInputs.push(tfc.transpose(_x, _dims));\n                  transposed = true;\n                } else {\n                  // We don't transpose inputs if they are 1D vectors or scalars.\n                  reshapedInputs.push(_x);\n                }\n              }\n            } catch (err) {\n              _iterator3.e(err);\n            } finally {\n              _iterator3.f();\n            }\n\n            var y = _this2.mergeFunction(reshapedInputs);\n\n            var yNDim = y.rank;\n\n            if (transposed) {\n              // If inputs have been transposed, we have to transpose the output\n              // too.\n              if (yNDim == null) {\n                var yShape = y.shape;\n                var _yNDim = yShape.length;\n                var batchSize = yShape[_yNDim - 1];\n                var newShape = [batchSize].concat(yShape.slice(0, yShape.length - 1));\n                y = tfc.transpose(y.reshape([-1, batchSize]), [1, 0]).reshape(newShape);\n              } else if (yNDim > 1) {\n                var dims = [yNDim - 1].concat(mathUtils.range(0, yNDim - 1));\n                y = tfc.transpose(y, dims);\n              }\n            }\n\n            return y;\n          }\n        } else {\n          return _this2.mergeFunction(inputs);\n        }\n      });\n    }\n  }, {\n    key: \"computeOutputShape\",\n    value: function computeOutputShape(inputShape) {\n      inputShape = inputShape;\n      var outputShape;\n\n      if (inputShape[0] == null) {\n        outputShape = null;\n      } else {\n        outputShape = inputShape[0].slice(1);\n      }\n\n      for (var i = 1; i < inputShape.length; ++i) {\n        var shape = inputShape[i] == null ? null : inputShape[i].slice(1);\n        outputShape = this.computeElementwiseOpOutputShape(outputShape, shape);\n      }\n\n      var batchSizes = [];\n\n      var _iterator4 = _createForOfIteratorHelper(inputShape),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var _shape2 = _step4.value;\n\n          if (_shape2 != null && _shape2[0] !== null) {\n            batchSizes.push(_shape2[0]);\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      batchSizes = generic_utils.unique(batchSizes);\n\n      if (batchSizes.length === 1) {\n        outputShape = batchSizes.concat(outputShape);\n      } else {\n        outputShape = [null].concat(outputShape);\n      }\n\n      return outputShape;\n    }\n  }, {\n    key: \"computeMask\",\n    value: function computeMask(inputs, mask) {\n      return tfc.tidy(function () {\n        if (mask == null) {\n          return null;\n        }\n\n        if (!Array.isArray(mask)) {\n          throw new ValueError('`mask` should be an Array');\n        }\n\n        if (!Array.isArray(inputs)) {\n          throw new ValueError('`inputs` should be an Array');\n        }\n\n        if (mask.length !== inputs.length) {\n          throw new ValueError(\"The Array 'inputs' and 'mask' are expected to have the same \" + \"length, but have different lengths \" + \"(\".concat(inputs.length, \" vs \").concat(mask.length, \")\"));\n        }\n\n        if (mask.every(function (m) {\n          return m == null;\n        })) {\n          return null;\n        }\n\n        mask = mask.map(function (m) {\n          return m == null ? m : tfc.expandDims(m, 0);\n        });\n        var output = mask[0];\n\n        for (var i = 1; i < mask.length - 1; ++i) {\n          output = tfc.logicalAnd(output, mask[i]);\n        }\n\n        return output;\n      });\n    }\n  }]);\n\n  return Merge;\n}(Layer);\nexport var Add = /*#__PURE__*/function (_Merge) {\n  _inherits(Add, _Merge);\n\n  var _super2 = _createSuper(Add);\n\n  function Add(args) {\n    _classCallCheck(this, Add);\n\n    return _super2.call(this, args);\n  }\n\n  _createClass(Add, [{\n    key: \"mergeFunction\",\n    value: function mergeFunction(inputs) {\n      return tidy(function () {\n        var output = inputs[0].clone();\n\n        for (var i = 1; i < inputs.length; ++i) {\n          output = tfc.add(output, inputs[i]);\n        }\n\n        return output;\n      });\n    }\n  }]);\n\n  return Add;\n}(Merge);\n/** @nocollapse */\n\nAdd.className = 'Add';\nserialization.registerClass(Add);\n/**\n * Calculate the element-wise sum of inputs, which all have the same shape.\n *\n * This function can be invoked in three ways.\n *\n * 1. Construct an instance of `Add` layer, by using no input argument\n *    or a single configuration argument. The resultant `Add` layer can then\n *    be used on `tf.SymbolicTensor`s or `tf.Tensor`s. For example:\n *\n * ```js\n * const addLayer = tf.layers.add();\n *\n * // The layer can be applied to inputs.\n * const input1 = tf.input({shape: [2, 2]});\n * const input2 = tf.input({shape: [2, 2]});\n * const output = addLayer.apply([input1, input2]);\n * console.log(output.shape);\n * // You get [null, 2, 2], with the first dimension as the undetermined batch\n * // dimension.\n * ```\n *\n * 2. Invoke directly on an `Array` of `tf.SymbolicTensor`s. This constructs\n *    an `Layer` object internally and calls its `apply` method on the inputs,\n *    generating a new `tf.SymbolicTensor`. For example:\n *\n * ```js\n * const input1 = tf.input({shape: [2, 2]});\n * const input2 = tf.input({shape: [2, 2]});\n * const output = tf.layers.add([input1, input2]);\n * console.log(output.shape);\n * // You get [null, 2, 2], with the first dimension as the undetermined batch\n * // dimension.\n * ```\n *\n * 3. Invoke directly on `tf.Tensor`s, i.e., concrete values. This constructs\n *    an `Layer` object internally and calls its `apply` method on the inputs,\n *    generating a new `tf.Tensor` as the result of the computation. For\n * example:\n *\n * ```js\n * const input1 = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n * const input2 = tf.tensor2d([10, 20, 30, 40], [2, 2]);\n * tf.layers.add([input1, input2]).print();\n * // Gives [[11, 22], [33, 44]].\n *\n */\n\nexport function add(config) {\n  if (Array.isArray(config)) {\n    var layer = new Add({});\n    return layer.apply(config);\n  } else {\n    return new Add(config);\n  }\n}\nexport var Multiply = /*#__PURE__*/function (_Merge2) {\n  _inherits(Multiply, _Merge2);\n\n  var _super3 = _createSuper(Multiply);\n\n  function Multiply(args) {\n    _classCallCheck(this, Multiply);\n\n    return _super3.call(this, args);\n  }\n\n  _createClass(Multiply, [{\n    key: \"mergeFunction\",\n    value: function mergeFunction(inputs) {\n      return tidy(function () {\n        var output = inputs[0].clone();\n\n        for (var i = 1; i < inputs.length; ++i) {\n          output = tfc.mul(output, inputs[i]);\n        }\n\n        return output;\n      });\n    }\n  }]);\n\n  return Multiply;\n}(Merge);\n/** @nocollapse */\n\nMultiply.className = 'Multiply';\nserialization.registerClass(Multiply);\n/**\n * Calculate the element-wise product of inputs, which all have the same shape.\n *\n * This function can be invoked in three ways.\n *\n * 1. Construct an instance of `Multiply` layer, by using no input argument\n *    or a single configuration argument. The resultant `Multiply` layer can\n *    then be used on `tf.SymbolicTensor`s or `tf.Tensor`s. For example:\n *\n * ```js\n * const multiplyLayer = tf.layers.multiply();\n *\n * // The layer can be applied to inputs.\n * const input1 = tf.input({shape: [2, 2]});\n * const input2 = tf.input({shape: [2, 2]});\n * const output = multiplyLayer.apply([input1, input2]);\n * console.log(output.shape);\n * // You get [null, 2, 2], with the first dimension as the undetermined batch\n * // dimension.\n * ```\n *\n * 2. Invoke directly on an `Array` of `tf.SymbolicTensor`s. This constructs\n *    an `Layer` object internally and calls its `apply` method on the inputs,\n *    generating a new `tf.SymbolicTensor`. For example:\n *\n * ```js\n * const input1 = tf.input({shape: [2, 2]});\n * const input2 = tf.input({shape: [2, 2]});\n * const output = tf.layers.multiply([input1, input2]);\n * console.log(output.shape);\n * // You get [null, 2, 2], with the first dimension as the undetermined batch\n * // dimension.\n * ```\n *\n * 3. Invoke directly on `tf.Tensor`s, i.e., concrete values. This constructs\n *    an `Layer` object internally and calls its `apply` method on the inputs,\n *    generating a new `tf.Tensor` as the result of the computation. For\n * example:\n *\n * ```js\n * const input1 = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n * const input2 = tf.tensor2d([10, 20, 30, 40], [2, 2]);\n * tf.layers.multiply([input1, input2]).print();\n * // Gives [[10, 40], [90, 160]].\n *\n */\n\nexport function multiply(config) {\n  if (Array.isArray(config)) {\n    var layer = new Multiply({});\n    return layer.apply(config);\n  } else {\n    return new Multiply(config);\n  }\n}\nexport var Average = /*#__PURE__*/function (_Merge3) {\n  _inherits(Average, _Merge3);\n\n  var _super4 = _createSuper(Average);\n\n  function Average(args) {\n    _classCallCheck(this, Average);\n\n    return _super4.call(this, args);\n  }\n\n  _createClass(Average, [{\n    key: \"mergeFunction\",\n    value: function mergeFunction(inputs) {\n      return tidy(function () {\n        var output = inputs[0].clone();\n\n        for (var i = 1; i < inputs.length; ++i) {\n          output = tfc.add(output, inputs[i]);\n        }\n\n        return tfc.mul(1 / inputs.length, output);\n      });\n    }\n  }]);\n\n  return Average;\n}(Merge);\n/** @nocollapse */\n\nAverage.className = 'Average';\nserialization.registerClass(Average);\n/**\n * Calculate the element-wise arithmetic mean of inputs, which all have the same\n * shape.\n *\n * This function can be invoked in three ways.\n *\n * 1. Construct an instance of `Average` layer, by using no input argument\n *    or a single configuration argument. The resultant `Average` layer can then\n *    be used on `tf.SymbolicTensor`s or `tf.Tensor`s. For example:\n *\n * ```js\n * const averageLayer = tf.layers.average();\n *\n * // The layer can be applied to inputs.\n * const input1 = tf.input({shape: [2, 2]});\n * const input2 = tf.input({shape: [2, 2]});\n * const output = averageLayer.apply([input1, input2]);\n * console.log(output.shape);\n * // You get [null, 2, 2], with the first dimension as the undetermined batch\n * // dimension.\n * ```\n *\n * 2. Invoke directly on an `Array` of `tf.SymbolicTensor`s. This constructs\n *    an `Layer` object internally and calls its `apply` method on the inputs,\n *    generating a new `tf.SymbolicTensor`. For example:\n *\n * ```js\n * const input1 = tf.input({shape: [2, 2]});\n * const input2 = tf.input({shape: [2, 2]});\n * const output = tf.layers.average([input1, input2]);\n * console.log(output.shape);\n * // You get [null, 2, 2], with the first dimension as the undetermined batch\n * // dimension.\n * ```\n *\n * 3. Invoke directly on `tf.Tensor`s, i.e., concrete values. This constructs\n *    an `Layer` object internally and calls its `apply` method on the inputs,\n *    generating a new `tf.Tensor` as the result of the computation. For\n * example:\n *\n * ```js\n * const input1 = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n * const input2 = tf.tensor2d([10, 20, 30, 40], [2, 2]);\n * tf.layers.average([input1, input2]).print();\n * // Gives [[5.5, 11], [16.5, 22]].\n *\n */\n\nexport function average(config) {\n  if (Array.isArray(config)) {\n    var layer = new Average({});\n    return layer.apply(config);\n  } else {\n    return new Average(config);\n  }\n}\nexport var Maximum = /*#__PURE__*/function (_Merge4) {\n  _inherits(Maximum, _Merge4);\n\n  var _super5 = _createSuper(Maximum);\n\n  function Maximum(args) {\n    _classCallCheck(this, Maximum);\n\n    return _super5.call(this, args);\n  }\n\n  _createClass(Maximum, [{\n    key: \"mergeFunction\",\n    value: function mergeFunction(inputs) {\n      return tidy(function () {\n        var output = inputs[0];\n\n        for (var i = 1; i < inputs.length; ++i) {\n          output = tfc.maximum(output, inputs[i]);\n        }\n\n        return output;\n      });\n    }\n  }]);\n\n  return Maximum;\n}(Merge);\n/** @nocollapse */\n\nMaximum.className = 'Maximum';\nserialization.registerClass(Maximum);\n/**\n * Calculate the element-wise maximum of inputs, which all have the same shape.\n *\n * This function can be invoked in three ways.\n *\n * 1. Construct an instance of `Maximum` layer, by using no input argument\n *    or a single configuration argument. The resultant `Maximum` layer can then\n *    be used on `tf.SymbolicTensor`s or `tf.Tensor`s. For example:\n *\n * ```js\n * const maximumLayer = tf.layers.maximum();\n *\n * // The layer can be applied to inputs.\n * const input1 = tf.input({shape: [2, 2]});\n * const input2 = tf.input({shape: [2, 2]});\n * const output = maximumLayer.apply([input1, input2]);\n * console.log(output.shape);\n * // You get [null, 2, 2], with the first dimension as the undetermined batch\n * // dimension.\n * ```\n *\n * 2. Invoke directly on an `Array` of `tf.SymbolicTensor`s. This constructs\n *    an `Layer` object internally and calls its `apply` method on the inputs,\n *    generating a new `tf.SymbolicTensor`. For example:\n *\n * ```js\n * const input1 = tf.input({shape: [2, 2]});\n * const input2 = tf.input({shape: [2, 2]});\n * const output = tf.layers.maximum([input1, input2]);\n * console.log(output.shape);\n * // You get [null, 2, 2], with the first dimension as the undetermined batch\n * // dimension.\n * ```\n *\n * 3. Invoke directly on `tf.Tensor`s, i.e., concrete values. This constructs\n *    an `Layer` object internally and calls its `apply` method on the inputs,\n *    generating a new `tf.Tensor` as the result of the computation. For\n * example:\n *\n * ```js\n * const input1 = tf.tensor2d([1, 20, 3, 40], [2, 2]);\n * const input2 = tf.tensor2d([10, 2, 30, 4], [2, 2]);\n * tf.layers.maximum([input1, input2]).print();\n * // Gives [[10, 20], [30, 40]].\n *\n */\n\nexport function maximum(config) {\n  if (Array.isArray(config)) {\n    var layer = new Maximum({});\n    return layer.apply(config);\n  } else {\n    return new Maximum(config);\n  }\n}\nexport var Minimum = /*#__PURE__*/function (_Merge5) {\n  _inherits(Minimum, _Merge5);\n\n  var _super6 = _createSuper(Minimum);\n\n  function Minimum(args) {\n    _classCallCheck(this, Minimum);\n\n    return _super6.call(this, args);\n  }\n\n  _createClass(Minimum, [{\n    key: \"mergeFunction\",\n    value: function mergeFunction(inputs) {\n      return tidy(function () {\n        var output = inputs[0];\n\n        for (var i = 1; i < inputs.length; ++i) {\n          output = tfc.minimum(output, inputs[i]);\n        }\n\n        return output;\n      });\n    }\n  }]);\n\n  return Minimum;\n}(Merge);\n/** @nocollapse */\n\nMinimum.className = 'Minimum';\nserialization.registerClass(Minimum);\n/**\n * Calculate the element-wise minimum of inputs, which all have the same shape.\n *\n * This function can be invoked in three ways.\n *\n * 1. Construct an instance of `Minimum` layer, by using no input argument\n *    or a single configuration argument. The resultant `Minimum` layer can then\n *    be used on `tf.SymbolicTensor`s or `tf.Tensor`s. For example:\n *\n * ```js\n * const minimumLayer = tf.layers.minimum();\n *\n * // The layer can be applied to inputs.\n * const input1 = tf.input({shape: [2, 2]});\n * const input2 = tf.input({shape: [2, 2]});\n * const output = minimumLayer.apply([input1, input2]);\n * console.log(output.shape);\n * // You get [null, 2, 2], with the first dimension as the undetermined batch\n * // dimension.\n * ```\n *\n * 2. Invoke directly on an `Array` of `tf.SymbolicTensor`s. This constructs\n *    an `Layer` object internally and calls its `apply` method on the inputs,\n *    generating a new `tf.SymbolicTensor`. For example:\n *\n * ```js\n * const input1 = tf.input({shape: [2, 2]});\n * const input2 = tf.input({shape: [2, 2]});\n * const output = tf.layers.minimum([input1, input2]);\n * console.log(output.shape);\n * // You get [null, 2, 2], with the first dimension as the undetermined batch\n * // dimension.\n * ```\n *\n * 3. Invoke directly on `tf.Tensor`s, i.e., concrete values. This constructs\n *    an `Layer` object internally and calls its `apply` method on the inputs,\n *    generating a new `tf.Tensor` as the result of the computation. For\n * example:\n *\n * ```js\n * const input1 = tf.tensor2d([1, 20, 3, 40], [2, 2]);\n * const input2 = tf.tensor2d([10, 2, 30, 4], [2, 2]);\n * tf.layers.minimum([input1, input2]).print();\n * // Gives [[1, 2], [3, 4]].\n *\n */\n\nexport function minimum(config) {\n  if (Array.isArray(config)) {\n    var layer = new Minimum({});\n    return layer.apply(config);\n  } else {\n    return new Minimum(config);\n  }\n}\nexport var Concatenate = /*#__PURE__*/function (_Merge6) {\n  _inherits(Concatenate, _Merge6);\n\n  var _super7 = _createSuper(Concatenate);\n\n  function Concatenate(args) {\n    var _this3;\n\n    _classCallCheck(this, Concatenate);\n\n    _this3 = _super7.call(this, args);\n    _this3.DEFAULT_AXIS = -1;\n\n    if (args == null) {\n      args = {};\n    }\n\n    _this3.axis = args.axis == null ? _this3.DEFAULT_AXIS : args.axis;\n    _this3.supportsMasking = true;\n    _this3.reshapeRequired = false;\n    return _this3;\n  }\n\n  _createClass(Concatenate, [{\n    key: \"build\",\n    value: function build(inputShape) {\n      // Used purely for shape validation.]\n      if (!(Array.isArray(inputShape) && Array.isArray(inputShape[0])) || inputShape.length === 1) {\n        throw new ValueError('A `Concatenate` layer should be called on a list of at least 2 ' + 'inputs');\n      }\n\n      inputShape = inputShape;\n      var allNoneShape = true;\n\n      var _iterator5 = _createForOfIteratorHelper(inputShape),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var _shape3 = _step5.value;\n\n          if (_shape3 != null) {\n            allNoneShape = false;\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n\n      if (allNoneShape) {\n        return;\n      }\n\n      var shapeSet = [];\n\n      for (var i = 0; i < inputShape.length; ++i) {\n        var shapeWithoutConcatAxis = inputShape[i].slice();\n        shapeWithoutConcatAxis.splice(this.axis, 1);\n        var exists = false;\n\n        var _iterator6 = _createForOfIteratorHelper(shapeSet),\n            _step6;\n\n        try {\n          for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n            var shape = _step6.value;\n\n            if (util.arraysEqual(shape, shapeWithoutConcatAxis)) {\n              exists = true;\n              break;\n            }\n          }\n        } catch (err) {\n          _iterator6.e(err);\n        } finally {\n          _iterator6.f();\n        }\n\n        if (!exists) {\n          shapeSet.push(shapeWithoutConcatAxis);\n        }\n      }\n\n      if (shapeSet.length > 1) {\n        throw new ValueError('A `Concatenate` layer requires inputs with matching shapes ' + 'except for the concat axis. Got input shapes: ' + JSON.stringify(inputShape));\n      }\n    }\n  }, {\n    key: \"mergeFunction\",\n    value: function mergeFunction(inputs) {\n      var _this4 = this;\n\n      return tidy(function () {\n        return K.concatenate(inputs, _this4.axis);\n      });\n    }\n  }, {\n    key: \"computeOutputShape\",\n    value: function computeOutputShape(inputShape) {\n      if (!(Array.isArray(inputShape) && Array.isArray(inputShape[0]))) {\n        throw new ValueError('A `Concatenate` layer should be called on a list of inputs.');\n      }\n\n      var inputShapes = inputShape;\n      var outputShape = inputShapes[0].slice();\n      var axis = this.axis < 0 ? outputShape.length + this.axis : this.axis; // Porting Note: the line above is because TypeScript doesn't support\n      //   negative indices.\n\n      var _iterator7 = _createForOfIteratorHelper(inputShapes.slice(1)),\n          _step7;\n\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var shape = _step7.value;\n\n          if (outputShape[axis] == null || shape[axis] == null) {\n            outputShape[axis] = null;\n            break;\n          }\n\n          outputShape[axis] += shape[axis];\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n\n      return outputShape;\n    }\n  }, {\n    key: \"computeMask\",\n    value: function computeMask(inputs, mask) {\n      var _this5 = this;\n\n      if (mask == null) {\n        return null;\n      }\n\n      if (!Array.isArray(mask)) {\n        throw new ValueError('`mask` should be an array for Concatenate');\n      }\n\n      if (!Array.isArray(inputs)) {\n        throw new ValueError('`inputs` should be an array for Concatenate');\n      }\n\n      if (mask.length !== inputs.length) {\n        throw new ValueError(\"Mismatch in the length of mask (\".concat(mask.length, \") \") + \"and the legnth of inputs (\".concat(inputs.length, \")\"));\n      }\n\n      return tfc.tidy(function () {\n        var allNullMasks = true;\n        mask.forEach(function (m) {\n          if (m != null) {\n            allNullMasks = false;\n            return;\n          }\n        });\n\n        if (allNullMasks) {\n          return null;\n        }\n\n        var outputMasks = [];\n\n        for (var i = 0; i < inputs.length; ++i) {\n          if (mask[i] == null) {\n            // Input is unmasked. Append all 1's to masks.\n            outputMasks.push(tfc.onesLike(inputs[i]).asType('bool'));\n          } else if (mask[i].rank < inputs[i].rank) {\n            // Mask is smaller than the input, expand it.\n            outputMasks.push(tfc.expandDims(mask[i], -1));\n          } else {\n            outputMasks.push(mask[i]);\n          }\n        }\n\n        var concatenatedMasks = tfc.concat(outputMasks, _this5.axis);\n        return tfc.all(concatenatedMasks, -1, false);\n      });\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      var config = {\n        'axis': this.axis\n      };\n\n      var baseConfig = _get(_getPrototypeOf(Concatenate.prototype), \"getConfig\", this).call(this);\n\n      Object.assign(config, baseConfig);\n      return config;\n    }\n  }]);\n\n  return Concatenate;\n}(Merge);\n/** @nocollapse */\n\nConcatenate.className = 'Concatenate';\nserialization.registerClass(Concatenate);\n/**\n * Concatenate an `Array` of inputs.\n *\n * This function can be invoked in three ways.\n *\n * 1. Construct an instance of `Concatenate` layer, by using no input argument\n *    or a single configuration argument. The resultant `Concatenate` layer can\n *    then be used on `tf.SymbolicTensor`s or `tf.Tensor`s. For example:\n *\n * ```js\n * const concatLayer = tf.layers.concatenate();\n *\n * // The layer can be applied to inputs.\n * const input1 = tf.input({shape: [2, 3]});\n * const input2 = tf.input({shape: [2, 4]});\n * const output = concatLayer.apply([input1, input2]);\n * console.log(output.shape);\n * // You get [null, 2, 7], with the first dimension as the undetermined batch\n * // dimension and the last dimension as the result of concatenating the\n * // last dimensions of the two inputs.\n * ```\n *\n * 2. Invoke directly on an `Array` of `tf.SymbolicTensor`s. This constructs\n *    an `Layer` object internally and calls its `apply` method on the inputs,\n *    generating a new `tf.SymbolicTensor`. For example:\n *\n * ```js\n * const input1 = tf.input({shape: [2, 3]});\n * const input2 = tf.input({shape: [2, 4]});\n * const output = tf.layers.concatenate([input1, input2]);\n * console.log(output.shape);\n * // You get [null, 2, 2], with the first dimension as the undetermined batch\n * // dimension and the last dimension as the result of concatenating the\n * // last dimensions of the two inputs.\n * ```\n *\n * 3. Invoke directly on `tf.Tensor`s, i.e., concrete values. This constructs\n *    an `Layer` object internally and calls its `apply` method on the inputs,\n *    generating a new `tf.Tensor` as the result of the computation. For\n * example:\n *\n * ```js\n * const input1 = tf.tensor2d([[1, 2], [3, 4]], [2, 2]);\n * const input2 = tf.tensor2d([[10, 20], [30, 40]], [2, 2]);\n * tf.layers.concatenate([input1, input2]).print();\n * // Gives [[1, 2, 10, 20], [3, 4, 30, 40]].\n *\n */\n\nexport function concatenate(config) {\n  if (Array.isArray(config)) {\n    var layer = new Concatenate({});\n    return layer.apply(config);\n  } else {\n    return new Concatenate(config);\n  }\n}\n/**\n * Interpretable potentially negative axis index.\n *\n * For example, given axis = -1, and dim = 3, this function will return 2.\n *\n * @param axis The axis index, may be a positive, zero or negative integer.\n * @param dim Total number of dimensions, a positive integer.\n * @returns A non-negative axis index equivalent to the input `axis`.\n */\n\nfunction interpretAxis(axis, dim) {\n  while (axis < 0) {\n    axis += dim;\n  }\n\n  return axis;\n}\n\nfunction batchDot(x, y, axes) {\n  if (x.shape.length > 3 || y.shape.length > 3) {\n    throw new NotImplementedError('batchDot is not implemented for tensors of 4D or higher rank yet');\n  }\n\n  tfc.util.assert(x.shape.length >= 2, function () {\n    return \"batchDot requires the rank of x to be >= 2, \" + \"but got \".concat(x.shape.length);\n  });\n  tfc.util.assert(x.shape.length >= 2, function () {\n    return \"batchDot requires the rank of y to be >= 2, \" + \"but got \".concat(y.shape.length);\n  });\n\n  if (typeof axes === 'number') {\n    axes = [axes, axes];\n  }\n\n  if (x.dtype === 'complex64' || y.dtype === 'complex64') {\n    throw new NotImplementedError('batchDot is not implemented for complex64-type Tensors yet.');\n  }\n\n  var xNDim = x.shape.length;\n  var yNDim = y.shape.length;\n\n  if (axes == null) {\n    // Behave like batchMatmul by default.\n    axes = [xNDim - 1, yNDim - 2];\n  }\n\n  var axesArray = axes;\n  return tfc.tidy(function () {\n    var diff;\n\n    if (xNDim > yNDim) {\n      diff = xNDim - yNDim;\n      var diffShape = [];\n\n      for (var i = 0; i < diff; ++i) {\n        diffShape.push(1);\n      }\n\n      y = y.reshape(y.shape.concat(diffShape));\n    } else if (yNDim > xNDim) {\n      diff = yNDim - xNDim;\n      var _diffShape = [];\n\n      for (var _i = 0; _i < diff; ++_i) {\n        _diffShape.push(1);\n      }\n\n      x = x.reshape(x.shape.concat(_diffShape));\n    } else {\n      diff = 0;\n    }\n\n    var out;\n\n    if (x.shape.length === 2 && y.shape.length === 2) {\n      if (axesArray[0] === axesArray[1]) {\n        out = x.mul(y).sum(axesArray[0]);\n      } else {\n        out = x.transpose([1, 0]).mul(y).sum(axesArray[1]);\n      }\n    } else {\n      var adjX = axesArray[0] !== x.shape.length - 1;\n      var adjY = axesArray[1] === y.shape.length - 1;\n      out = x.matMul(y, adjX, adjY);\n    }\n\n    if (diff > 0) {\n      var idx;\n\n      if (xNDim > yNDim) {\n        idx = xNDim + yNDim - 3;\n      } else {\n        idx = xNDim - 1;\n      }\n\n      var squeezeAxes = [];\n\n      for (var _i2 = idx; _i2 < idx + diff; ++_i2) {\n        squeezeAxes.push(_i2);\n      }\n\n      out = out.squeeze(squeezeAxes);\n    }\n\n    if (out.shape.length === 1) {\n      out = out.expandDims(1);\n    }\n\n    return out;\n  });\n}\n\nexport var Dot = /*#__PURE__*/function (_Merge7) {\n  _inherits(Dot, _Merge7);\n\n  var _super8 = _createSuper(Dot);\n\n  function Dot(args) {\n    var _this6;\n\n    _classCallCheck(this, Dot);\n\n    _this6 = _super8.call(this, args);\n    _this6.axes = args.axes;\n    _this6.normalize = args.normalize == null ? false : args.normalize;\n    _this6.supportsMasking = true;\n    _this6.reshapeRequired = false;\n    return _this6;\n  }\n\n  _createClass(Dot, [{\n    key: \"build\",\n    value: function build(inputShape) {\n      tfc.util.assert(Array.isArray(inputShape) && inputShape.length === 2 && Array.isArray(inputShape[0]) && Array.isArray(inputShape[1]), function () {\n        return 'A `Dot` layer should be called on a list of exactly 2 inputs.';\n      });\n      var shape1 = inputShape[0];\n      var shape2 = inputShape[1];\n\n      if (shape1.length > 3 || shape2.length > 3) {\n        throw new NotImplementedError('Dot layer does not support tensors of 4D or higher rank yet.');\n      }\n\n      var axes = this.interpretAxes(shape1, shape2);\n\n      if (shape1[axes[0]] !== shape2[axes[1]]) {\n        throw new ValueError(\"Dimension incompatibility: \" + \"\".concat(shape1[axes[0]], \" !== \").concat(shape2[axes[1]]));\n      }\n    }\n  }, {\n    key: \"mergeFunction\",\n    value: function mergeFunction(inputs) {\n      if (inputs.length !== 2) {\n        throw new ValueError('A `Dot` layer must be called on exactly 2 inputs, ' + \"but received \".concat(inputs.length, \" input(s).\"));\n      }\n\n      var x1 = inputs[0];\n      var x2 = inputs[1];\n      var axes;\n\n      if (!Array.isArray(this.axes)) {\n        axes = [interpretAxis(this.axes, x1.shape.length), interpretAxis(this.axes, x2.shape.length)];\n      } else {\n        axes = this.axes.map(function (axis, i) {\n          return interpretAxis(axis, inputs[i].shape.length);\n        });\n      }\n\n      if (this.normalize) {\n        x1 = l2Normalize(x1, axes[0]);\n        x2 = l2Normalize(x2, axes[1]);\n      }\n\n      return batchDot(x1, x2, axes);\n    }\n  }, {\n    key: \"interpretAxes\",\n    value: function interpretAxes(shape1, shape2) {\n      var axes;\n\n      if (!Array.isArray(this.axes)) {\n        // `this.axes` is a single integer.\n        axes = [interpretAxis(this.axes, shape1.length), interpretAxis(this.axes, shape2.length)];\n      } else {\n        // `this.axes` is an Array of integers.\n        axes = this.axes;\n      }\n\n      return axes;\n    }\n  }, {\n    key: \"computeOutputShape\",\n    value: function computeOutputShape(inputShape) {\n      tfc.util.assert(Array.isArray(inputShape) && inputShape.length === 2 && Array.isArray(inputShape[0]) && Array.isArray(inputShape[1]), function () {\n        return 'A `Dot` layer should be called on a list of exactly 2 inputs.';\n      });\n      var shape1 = inputShape[0].slice();\n      var shape2 = inputShape[1].slice();\n\n      if (shape1.length > 3 || shape2.length > 3) {\n        throw new NotImplementedError('Dot layer does not support tensors of 4D or higher rank yet.');\n      }\n\n      var axes = this.interpretAxes(shape1, shape2);\n      shape1.splice(axes[0], 1);\n      shape2.splice(axes[1], 1);\n      shape2.splice(0, 1);\n      var outputShape = shape1.concat(shape2);\n\n      if (outputShape.length === 1) {\n        outputShape.push(1);\n      }\n\n      return outputShape;\n    }\n  }, {\n    key: \"computeMask\",\n    value: function computeMask(inputs, mask) {\n      return null;\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      var config = {\n        'axes': this.axes,\n        'normalize': this.normalize\n      };\n\n      var baseConfig = _get(_getPrototypeOf(Dot.prototype), \"getConfig\", this).call(this);\n\n      Object.assign(config, baseConfig);\n      return config;\n    }\n  }]);\n\n  return Dot;\n}(Merge);\n/** @nocollapse */\n\nDot.className = 'Dot';\nserialization.registerClass(Dot); // TODO(cais): Add functional interfaces for the merge layers.","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/get\";\nimport _inherits from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/**\n * TensorFlow.js Layers: Noise Layers.\n */\nimport { greaterEqual, randomUniform, serialization, tidy } from '@tensorflow/tfjs-core';\nimport * as K from '../backend/tfjs_backend';\nimport { Layer } from '../engine/topology';\nimport { getExactlyOneTensor } from '../utils/types_utils';\nexport var GaussianNoise = /*#__PURE__*/function (_Layer) {\n  _inherits(GaussianNoise, _Layer);\n\n  var _super = _createSuper(GaussianNoise);\n\n  function GaussianNoise(args) {\n    var _this;\n\n    _classCallCheck(this, GaussianNoise);\n\n    _this = _super.call(this, args);\n    _this.supportsMasking = true;\n    _this.stddev = args.stddev;\n    return _this;\n  }\n\n  _createClass(GaussianNoise, [{\n    key: \"computeOutputShape\",\n    value: function computeOutputShape(inputShape) {\n      return inputShape;\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      var baseConfig = _get(_getPrototypeOf(GaussianNoise.prototype), \"getConfig\", this).call(this);\n\n      var config = {\n        stddev: this.stddev\n      };\n      Object.assign(config, baseConfig);\n      return config;\n    }\n  }, {\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      var _this2 = this;\n\n      return tidy(function () {\n        _this2.invokeCallHook(inputs, kwargs);\n\n        var input = getExactlyOneTensor(inputs);\n\n        var noised = function noised() {\n          return K.randomNormal(input.shape, 0, _this2.stddev).add(input);\n        };\n\n        var output = K.inTrainPhase(noised, function () {\n          return input;\n        }, kwargs['training'] || false);\n        return output;\n      });\n    }\n  }]);\n\n  return GaussianNoise;\n}(Layer);\n/** @nocollapse */\n\nGaussianNoise.className = 'GaussianNoise';\nserialization.registerClass(GaussianNoise);\nexport var GaussianDropout = /*#__PURE__*/function (_Layer2) {\n  _inherits(GaussianDropout, _Layer2);\n\n  var _super2 = _createSuper(GaussianDropout);\n\n  function GaussianDropout(args) {\n    var _this3;\n\n    _classCallCheck(this, GaussianDropout);\n\n    _this3 = _super2.call(this, args);\n    _this3.supportsMasking = true;\n    _this3.rate = args.rate;\n    return _this3;\n  }\n\n  _createClass(GaussianDropout, [{\n    key: \"computeOutputShape\",\n    value: function computeOutputShape(inputShape) {\n      return inputShape;\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      var baseConfig = _get(_getPrototypeOf(GaussianDropout.prototype), \"getConfig\", this).call(this);\n\n      var config = {\n        rate: this.rate\n      };\n      Object.assign(config, baseConfig);\n      return config;\n    }\n  }, {\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      var _this4 = this;\n\n      return tidy(function () {\n        _this4.invokeCallHook(inputs, kwargs);\n\n        var input = getExactlyOneTensor(inputs);\n\n        if (_this4.rate > 0 && _this4.rate < 1) {\n          var noised = function noised() {\n            var stddev = Math.sqrt(_this4.rate / (1 - _this4.rate));\n            return input.mul(K.randomNormal(input.shape, 1, stddev));\n          };\n\n          return K.inTrainPhase(noised, function () {\n            return input;\n          }, kwargs['training'] || false);\n        }\n\n        return input;\n      });\n    }\n  }]);\n\n  return GaussianDropout;\n}(Layer);\n/** @nocollapse */\n\nGaussianDropout.className = 'GaussianDropout';\nserialization.registerClass(GaussianDropout);\n/**\n * Applies Alpha Dropout to the input.\n *\n * As it is a regularization layer, it is only active at training time.\n *\n * Alpha Dropout is a `Dropout` that keeps mean and variance of inputs\n * to their original values, in order to ensure the self-normalizing property\n * even after this dropout.\n * Alpha Dropout fits well to Scaled Exponential Linear Units\n * by randomly setting activations to the negative saturation value.\n *\n * Arguments:\n *   - `rate`: float, drop probability (as with `Dropout`).\n *     The multiplicative noise will have\n *     standard deviation `sqrt(rate / (1 - rate))`.\n *   - `noise_shape`: A 1-D `Tensor` of type `int32`, representing the\n *     shape for randomly generated keep/drop flags.\n *\n * Input shape:\n *   Arbitrary. Use the keyword argument `inputShape`\n *   (tuple of integers, does not include the samples axis)\n *   when using this layer as the first layer in a model.\n *\n * Output shape:\n *   Same shape as input.\n *\n * References:\n *   - [Self-Normalizing Neural Networks](https://arxiv.org/abs/1706.02515)\n */\n\nexport var AlphaDropout = /*#__PURE__*/function (_Layer3) {\n  _inherits(AlphaDropout, _Layer3);\n\n  var _super3 = _createSuper(AlphaDropout);\n\n  function AlphaDropout(args) {\n    var _this5;\n\n    _classCallCheck(this, AlphaDropout);\n\n    _this5 = _super3.call(this, args);\n    _this5.supportsMasking = true;\n    _this5.rate = args.rate;\n    _this5.noiseShape = args.noiseShape;\n    return _this5;\n  }\n\n  _createClass(AlphaDropout, [{\n    key: \"_getNoiseShape\",\n    value: function _getNoiseShape(inputs) {\n      return this.noiseShape || getExactlyOneTensor(inputs).shape;\n    }\n  }, {\n    key: \"computeOutputShape\",\n    value: function computeOutputShape(inputShape) {\n      return inputShape;\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      var baseConfig = _get(_getPrototypeOf(AlphaDropout.prototype), \"getConfig\", this).call(this);\n\n      var config = {\n        rate: this.rate\n      };\n      Object.assign(config, baseConfig);\n      return config;\n    }\n  }, {\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      var _this6 = this;\n\n      return tidy(function () {\n        if (_this6.rate < 1 && _this6.rate > 0) {\n          var noiseShape = _this6._getNoiseShape(inputs);\n\n          var droppedInputs = function droppedInputs() {\n            var input = getExactlyOneTensor(inputs);\n            var alpha = 1.6732632423543772848170429916717;\n            var scale = 1.0507009873554804934193349852946;\n            var alphaP = -alpha * scale;\n            var keptIdx = greaterEqual(randomUniform(noiseShape), _this6.rate);\n            keptIdx = K.cast(keptIdx, 'float32'); // get default dtype.\n            // Get affine transformation params.\n\n            var a = Math.pow((1 - _this6.rate) * (1 + _this6.rate * Math.pow(alphaP, 2)), -0.5);\n            var b = -a * alphaP * _this6.rate; // Apply mask.\n\n            var x = input.mul(keptIdx).add(keptIdx.add(-1).mul(alphaP));\n            return x.mul(a).add(b);\n          };\n\n          return K.inTrainPhase(droppedInputs, function () {\n            return getExactlyOneTensor(inputs);\n          }, kwargs['training'] || false);\n        }\n\n        return inputs;\n      });\n    }\n  }]);\n\n  return AlphaDropout;\n}(Layer);\n/** @nocollapse */\n\nAlphaDropout.className = 'AlphaDropout';\nserialization.registerClass(AlphaDropout);","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/get\";\nimport _inherits from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/**\n * Normalization layers.\n */\nimport * as tfc from '@tensorflow/tfjs-core';\nimport { moments, serialization, tidy, util } from '@tensorflow/tfjs-core';\nimport { getConstraint, serializeConstraint } from '../constraints';\nimport { InputSpec, Layer } from '../engine/topology';\nimport { NotImplementedError, ValueError } from '../errors';\nimport { getInitializer, serializeInitializer } from '../initializers';\nimport { getRegularizer, serializeRegularizer } from '../regularizers';\nimport * as generic_utils from '../utils/generic_utils';\nimport * as math_utils from '../utils/math_utils';\nimport { getExactlyOneShape, getExactlyOneTensor } from '../utils/types_utils';\n/**\n * Applies batch normalization on x given mean, var, beta and gamma.\n *\n * I.e. returns:\n *   `output = (x - mean) / (sqrt(var) + epsilon) * gamma + beta`\n *\n * @param x Input tensor.\n * @param mean Mean of batch.\n * @param variance Variance of batch.\n * @param beta Tensor with which to center the input.\n * @param gamma Tensor by which to scale the input.\n * @param epsilon Fuzz factor.\n * @returns The result of the batch normalization.\n */\n\nexport function batchNormalization(x, mean, variance, beta, gamma) {\n  var epsilon = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 1e-3;\n  var out;\n\n  if (x.rank === 2) {\n    out = tfc.batchNorm2d(x, mean, variance, beta, gamma, epsilon);\n  } else if (x.rank === 3) {\n    // TODO(cais): Check rank; give proper error message.\n    out = tfc.batchNorm3d(x, mean, variance, beta, gamma, epsilon);\n  } else if (x.rank === 4) {\n    out = tfc.batchNorm4d(x, mean, variance, beta, gamma, epsilon);\n  } else {\n    throw new NotImplementedError(\"batchNormalization is not implemented for array of rank \".concat(x.rank, \" \") + \"yet\");\n  }\n\n  return out;\n}\n/**\n * Non-broadcasting batch normalization for use in training (not inference).\n *\n * The input is normalized to zero mean and unit variance along the\n * `reductionAxes`, followed by scaling with `gamma` and shifted by `beta`.\n * The result of that is returned as the first element\n * of the returned `Array`. The other two elements are the mean and variance,\n * respectively.\n *\n * @param x Input tensor to be normalized.\n * @param gamma Tensor by which to scale the input.\n * @param beta Tensor by which to center the input.\n * @param reductionAxes Axes over which to normalize.\n * @param epsilon Fuzz factor.\n * @returns An `Array` of three `Tensors`:\n *   [normalized tensor, mean of input, variance of input].\n */\n\nfunction regularNormalizeBatchInTraining(x, gamma, beta, reductionAxes) {\n  var epsilon = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1e-3;\n  return tidy(function () {\n    var meanAndVariance = tfc.moments(x, reductionAxes);\n    var mean = meanAndVariance.mean;\n    var variance = meanAndVariance.variance;\n    var normed = batchNormalization(x, mean, variance, beta, gamma, epsilon);\n    return [normed, mean, variance];\n  });\n}\n/**\n * Broadcasting batch normalization for use in training (not inference).\n *\n * The input is normalized to zero mean and unit variance along the\n * `reductionAxes`, followed by scaling with `gamma` and shifted by `beta`.\n * The result of that is returned as the first element\n * of the returned `Array`. The other two elements are the mean and variance,\n * respectively.\n *\n * @param x Input tensor to be normalized.\n * @param gamma Tensor by which to scale the input.\n * @param beta Tensor by which to center the input.\n * @param reductionAxes Axes over which to normalize.\n * @param epsilon Fuzz factor.\n * @returns An `Array` of three `Tensors`:\n *   [normalized tensor, mean of input, variance of input].\n */\n\n\nfunction broadcastNormalizeBatchInTraining(x, gamma, beta, reductionAxes) {\n  var epsilon = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1e-3;\n  return tidy(function () {\n    var meanAndVariance = tfc.moments(x, reductionAxes);\n    var mean = meanAndVariance.mean;\n    var variance = meanAndVariance.variance;\n    var targetShape = [];\n\n    var _iterator = _createForOfIteratorHelper(math_utils.range(0, x.rank)),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var axis = _step.value;\n\n        if (reductionAxes.indexOf(axis) !== -1) {\n          targetShape.push(1);\n        } else {\n          targetShape.push(x.shape[axis]);\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    var broadcastMean = mean.reshape(targetShape);\n    var broadcastVariance = variance.reshape(targetShape);\n    var broadcastGamma = gamma == null ? null : gamma.reshape(targetShape);\n    var broadcastBeta = beta == null ? null : beta.reshape(targetShape);\n    var normed = batchNormalization(x, broadcastMean, broadcastVariance, broadcastBeta, broadcastGamma, epsilon);\n    return [normed, mean, variance];\n  });\n}\n/**\n * Batch normalization for use in training (not inference).\n *\n * @param x Input tensor to be normalized.\n * @param gamma Tensor by which to scale the input.\n * @param beta Tensor by which to center the input.\n * @param reductionAxes Axes over which to normalize.\n * @param epsilon Fuzz factor.\n * @returns An `Array` of three `Tensors`:\n *   [normalized tensor, mean of input, variance of input].\n */\n\n\nexport function normalizeBatchInTraining(x, gamma, beta, reductionAxes) {\n  var epsilon = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1e-3;\n\n  if (util.arraysEqual(reductionAxes.slice().sort(), math_utils.range(0, x.rank - 1))) {\n    return regularNormalizeBatchInTraining(x, gamma, beta, reductionAxes, epsilon);\n  } else {\n    return broadcastNormalizeBatchInTraining(x, gamma, beta, reductionAxes, epsilon);\n  }\n}\nexport var BatchNormalization = /*#__PURE__*/function (_Layer) {\n  _inherits(BatchNormalization, _Layer);\n\n  var _super = _createSuper(BatchNormalization);\n\n  function BatchNormalization(args) {\n    var _this;\n\n    _classCallCheck(this, BatchNormalization);\n\n    if (args == null) {\n      args = {};\n    }\n\n    _this = _super.call(this, args);\n    _this.supportsMasking = true;\n    _this.axis = args.axis == null ? -1 : args.axis;\n    _this.momentum = args.momentum == null ? 0.99 : args.momentum;\n    _this.epsilon = args.epsilon == null ? 1e-3 : args.epsilon;\n    _this.center = args.center == null ? true : args.center;\n    _this.scale = args.scale == null ? true : args.scale;\n    _this.betaInitializer = getInitializer(args.betaInitializer || 'zeros');\n    _this.gammaInitializer = getInitializer(args.gammaInitializer || 'ones');\n    _this.movingMeanInitializer = getInitializer(args.movingMeanInitializer || 'zeros');\n    _this.movingVarianceInitializer = getInitializer(args.movingVarianceInitializer || 'ones');\n    _this.betaConstraint = getConstraint(args.betaConstraint);\n    _this.gammaConstraint = getConstraint(args.gammaConstraint);\n    _this.betaRegularizer = getRegularizer(args.betaRegularizer);\n    _this.gammaRegularizer = getRegularizer(args.gammaRegularizer);\n    return _this;\n  }\n\n  _createClass(BatchNormalization, [{\n    key: \"build\",\n    value: function build(inputShape) {\n      inputShape = getExactlyOneShape(inputShape);\n      var axis = this.axis >= 0 ? this.axis : this.axis + inputShape.length;\n      var dim = inputShape[axis];\n\n      if (dim == null) {\n        throw new ValueError(\"Axis \".concat(axis, \" of input tensor should have a defined dimension but \") + \"the layer received an input with shape \" + \"\".concat(JSON.stringify(inputShape), \".\"));\n      }\n\n      this.inputSpec = [new InputSpec({\n        ndim: inputShape.length,\n        axes: _defineProperty({}, axis, dim)\n      })];\n      var shape = [dim];\n\n      if (this.scale) {\n        this.gamma = this.addWeight('gamma', shape, null, this.gammaInitializer, this.gammaRegularizer, true, this.gammaConstraint);\n      }\n\n      if (this.center) {\n        this.beta = this.addWeight('beta', shape, null, this.betaInitializer, this.betaRegularizer, true, this.betaConstraint);\n      }\n\n      this.movingMean = this.addWeight('moving_mean', shape, null, this.movingMeanInitializer, null, false);\n      this.movingVariance = this.addWeight('moving_variance', shape, null, this.movingVarianceInitializer, null, false);\n      this.built = true;\n    }\n  }, {\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      var _this2 = this;\n\n      return tidy(function () {\n        var training = kwargs['training'] == null ? false : kwargs['training'];\n        var input = getExactlyOneTensor(inputs);\n        var inputShape = input.shape;\n        var ndim = inputShape.length;\n        var reductionAxes = math_utils.range(0, ndim);\n        var axis = _this2.axis >= 0 ? _this2.axis : _this2.axis + ndim;\n        reductionAxes.splice(axis, 1);\n        var broadcastShape = generic_utils.pyListRepeat(1, ndim);\n        broadcastShape[axis] = inputShape[axis];\n        var sortedReductionAxes = reductionAxes.slice();\n        sortedReductionAxes.sort();\n        var needsBroadcasting = !util.arraysEqual(sortedReductionAxes, math_utils.range(0, ndim).slice(0, ndim - 1));\n\n        var normalizeInference = function normalizeInference() {\n          if (needsBroadcasting) {\n            var broadcastMovingMean = _this2.movingMean.read().reshape(broadcastShape);\n\n            var broadcastMovingVariance = _this2.movingVariance.read().reshape(broadcastShape);\n\n            var broadcastBeta = _this2.center ? _this2.beta.read().reshape(broadcastShape) : null;\n            var broadcastGamma = _this2.scale ? _this2.gamma.read().reshape(broadcastShape) : null;\n            return batchNormalization(input, broadcastMovingMean, broadcastMovingVariance, broadcastBeta, broadcastGamma, _this2.epsilon);\n          } else {\n            return batchNormalization(input, _this2.movingMean.read(), _this2.movingVariance.read(), _this2.beta == null ? null : _this2.beta.read(), _this2.gamma == null ? null : _this2.gamma.read(), _this2.epsilon);\n          }\n        };\n\n        if (!training) {\n          return normalizeInference();\n        }\n\n        var _normalizeBatchInTrai = normalizeBatchInTraining(input, _this2.gamma.read(), _this2.beta.read(), reductionAxes, _this2.epsilon),\n            _normalizeBatchInTrai2 = _slicedToArray(_normalizeBatchInTrai, 3),\n            normedTraining = _normalizeBatchInTrai2[0],\n            mean = _normalizeBatchInTrai2[1],\n            variance = _normalizeBatchInTrai2[2];\n\n        var doMovingAverage = function doMovingAverage(variable, value, momentum) {\n          tfc.tidy(function () {\n            var decay = 1 - momentum;\n            var origValue = variable.read();\n            var updateDelta = origValue.sub(value).mul(decay);\n            variable.write(origValue.sub(updateDelta));\n          });\n        }; // Perform updates to moving mean and moving variance for training.\n        // Porting Note: In PyKeras, these updates to `movingMean` and\n        //   `movingAverage` are done as a deferred Graph, added to the `Layer`'s\n        //   `update`s using the `add_update()` method. Here we do it imperatively\n        //   and encapsulate the updates in a function that is invoked\n        //   immediately.\n\n\n        var updateMovingMeanAndVariance = function updateMovingMeanAndVariance() {\n          doMovingAverage(_this2.movingMean, mean, _this2.momentum);\n          doMovingAverage(_this2.movingVariance, variance, _this2.momentum);\n        };\n\n        updateMovingMeanAndVariance();\n        return normedTraining;\n      });\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      var config = {\n        axis: this.axis,\n        momentum: this.momentum,\n        epsilon: this.epsilon,\n        center: this.center,\n        scale: this.scale,\n        betaInitializer: serializeInitializer(this.betaInitializer),\n        gammaInitializer: serializeInitializer(this.gammaInitializer),\n        movingMeanInitializer: serializeInitializer(this.movingMeanInitializer),\n        movingVarianceInitializer: serializeInitializer(this.movingVarianceInitializer),\n        betaRegularizer: serializeRegularizer(this.betaRegularizer),\n        gammaRegularizer: serializeRegularizer(this.gammaRegularizer),\n        betaConstraint: serializeConstraint(this.betaConstraint),\n        gammaConstraint: serializeConstraint(this.gammaConstraint)\n      };\n\n      var baseConfig = _get(_getPrototypeOf(BatchNormalization.prototype), \"getConfig\", this).call(this);\n\n      Object.assign(config, baseConfig);\n      return config;\n    }\n  }]);\n\n  return BatchNormalization;\n}(Layer);\n/** @nocollapse */\n\nBatchNormalization.className = 'BatchNormalization';\nserialization.registerClass(BatchNormalization);\nexport var LayerNormalization = /*#__PURE__*/function (_Layer2) {\n  _inherits(LayerNormalization, _Layer2);\n\n  var _super2 = _createSuper(LayerNormalization);\n\n  function LayerNormalization(args) {\n    var _this3;\n\n    _classCallCheck(this, LayerNormalization);\n\n    if (args == null) {\n      args = {};\n    }\n\n    _this3 = _super2.call(this, args);\n    _this3.axis = args.axis == null ? -1 : args.axis;\n\n    if (typeof _this3.axis === 'number') {\n      if (!Number.isInteger(_this3.axis)) {\n        throw new Error(\"Expected axis to be an integer, but received \".concat(_this3.axis));\n      }\n    } else if (Array.isArray(_this3.axis)) {\n      var _iterator2 = _createForOfIteratorHelper(_this3.axis),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var axis = _step2.value;\n\n          if (!Number.isInteger(axis)) {\n            throw new Error(\"Expected axis to be an array of integers, \" + \"but received \".concat(JSON.stringify(_this3.axis)));\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    } else {\n      throw new Error(\"Expected axis to be an integer or an array of integers, \" + \"but received \".concat(JSON.stringify(_this3.axis)));\n    }\n\n    _this3.epsilon = args.epsilon == null ? 1e-3 : args.epsilon;\n    _this3.center = args.center == null ? true : args.center;\n    _this3.scale = args.scale == null ? true : args.scale;\n    _this3.betaInitializer = getInitializer(args.betaInitializer || 'zeros');\n    _this3.gammaInitializer = getInitializer(args.gammaInitializer || 'ones');\n    _this3.betaRegularizer = getRegularizer(args.betaRegularizer);\n    _this3.gammaRegularizer = getRegularizer(args.gammaRegularizer);\n    _this3.supportsMasking = true;\n    return _this3;\n  }\n\n  _createClass(LayerNormalization, [{\n    key: \"build\",\n    value: function build(inputShape) {\n      inputShape = getExactlyOneShape(inputShape);\n      var nDims = inputShape.length; // Convert axis to array and resolve negatives.\n\n      if (typeof this.axis === 'number') {\n        this.axis = [this.axis];\n      }\n\n      for (var i = 0; i < this.axis.length; ++i) {\n        if (this.axis[i] < 0) {\n          this.axis[i] += nDims;\n        }\n      } // Further validate axes.\n\n\n      var _iterator3 = _createForOfIteratorHelper(this.axis),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var axis = _step3.value;\n\n          if (axis < 0 || axis >= nDims) {\n            throw new Error(\"Invalid axis: \".concat(axis));\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      if (this.axis.length !== generic_utils.unique(this.axis).length) {\n        throw new Error(\"Found duplicate axes in: \".concat(this.axis));\n      }\n\n      var paramShape = this.axis.map(function (axis) {\n        return inputShape[axis];\n      });\n      var trainable = true;\n\n      if (this.scale) {\n        this.gamma = this.addWeight('gamma', paramShape, 'float32', this.gammaInitializer, this.gammaRegularizer, trainable);\n      } else {\n        this.gamma = null;\n      }\n\n      if (this.center) {\n        this.beta = this.addWeight('beta', paramShape, 'float32', this.betaInitializer, this.betaRegularizer, trainable);\n      } else {\n        this.beta = null;\n      }\n\n      this.built = true;\n    }\n  }, {\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      var _this4 = this;\n\n      var input = getExactlyOneTensor(inputs);\n      var inputShape = input.shape;\n      var nDims = inputShape.length;\n      return tidy(function () {\n        var keepDims = true;\n\n        var _moments = moments(input, _this4.axis, keepDims),\n            mean = _moments.mean,\n            variance = _moments.variance;\n\n        var broadcastShape = generic_utils.pyListRepeat(1, nDims);\n\n        var _iterator4 = _createForOfIteratorHelper(_this4.axis),\n            _step4;\n\n        try {\n          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n            var dim = _step4.value;\n            broadcastShape[dim] = inputShape[dim];\n          }\n        } catch (err) {\n          _iterator4.e(err);\n        } finally {\n          _iterator4.f();\n        }\n\n        var broadcast = function broadcast(v) {\n          if (v != null && v.shape.length !== nDims && _this4.axis !== [nDims - 1]) {\n            return v.reshape(broadcastShape);\n          } else {\n            return v;\n          }\n        };\n\n        var scale = broadcast(_this4.gamma.read());\n        var offset = broadcast(_this4.beta.read()); // TODO(https://github.com/tensorflow/tfjs/issues/2120): The tiling below\n        // is a workaround for the limitation of core's batchNormalization?d don't\n        // support broadcasting in their gradients. In addition, the tiling is\n        // necessary to ensure correctness on the browser CPU backend regardless\n        // of forward or backward computation. Remove this workaround once the\n        // limitation is addressed. See .\n\n        var momentsTiling = [];\n        var scaleOffsetTiling = [];\n\n        for (var i = 0; i < nDims; ++i) {\n          if (_this4.axis.indexOf(i) !== -1) {\n            momentsTiling.push(inputShape[i]);\n            scaleOffsetTiling.push(1);\n          } else {\n            momentsTiling.push(1);\n            scaleOffsetTiling.push(inputShape[i]);\n          }\n        }\n\n        mean = mean.tile(momentsTiling);\n        variance = variance.tile(momentsTiling);\n        scale = scale.tile(scaleOffsetTiling);\n        offset = offset.tile(scaleOffsetTiling);\n        return batchNormalization(input, mean, variance, offset, scale, _this4.epsilon);\n      });\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      var config = {\n        axis: this.axis,\n        epsilon: this.epsilon,\n        center: this.center,\n        scale: this.scale,\n        betaInitializer: serializeInitializer(this.betaInitializer),\n        gammaInitializer: serializeInitializer(this.gammaInitializer),\n        betaRegularizer: serializeRegularizer(this.betaRegularizer),\n        gammaRegularizer: serializeRegularizer(this.gammaRegularizer)\n      };\n\n      var baseConfig = _get(_getPrototypeOf(LayerNormalization.prototype), \"getConfig\", this).call(this);\n\n      Object.assign(config, baseConfig);\n      return config;\n    }\n  }]);\n\n  return LayerNormalization;\n}(Layer);\n/** @nocollapse */\n\nLayerNormalization.className = 'LayerNormalization';\nserialization.registerClass(LayerNormalization);","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/get\";\nimport _inherits from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/**\n * Padding Layers.\n */\n// Porting Note: In Python Keras, the padding layers are in convolutional.py,\n//   but we decided to put them in a separate file (padding.ts) for clarity.\nimport * as tfc from '@tensorflow/tfjs-core';\nimport { serialization, tidy } from '@tensorflow/tfjs-core';\nimport { imageDataFormat } from '../backend/common';\nimport { InputSpec, Layer } from '../engine/topology';\nimport { ValueError } from '../errors';\nimport { getExactlyOneShape, getExactlyOneTensor } from '../utils/types_utils';\n/**\n * Pads the middle dimension of a 3D tensor.\n *\n * @param x Input `tf.Tensor` to be padded.\n * @param padding `Array` of 2 integers, how many zeros to add at the start and\n *   end of the middle dimension (i.e., dimension 1).\n * @return A padded 3D `tf.Tensor`.\n */\n\nexport function temporalPadding(x, padding) {\n  return tidy(function () {\n    if (x.rank !== 3) {\n      throw new ValueError(\"temporalPadding expects input tensor to be 3-D, but received a \" + \"\".concat(x.rank, \"-D tensor.\"));\n    }\n\n    if (padding == null) {\n      padding = [1, 1];\n    }\n\n    if (padding.length !== 2) {\n      throw new ValueError(\"temporalPadding expects input padding pattern to be a length-2 \" + \"array, but received a length-\".concat(padding.length, \" array.\"));\n    }\n\n    var pattern = [[0, 0], padding, [0, 0]];\n    return tfc.pad(x, pattern);\n  });\n}\n/**\n * Pads the 2nd and 3rd dimensions of a 4D tensor.\n *\n * @param x Input `tf.Tensor` to be padded.\n * @param padding `Array` of two `Array`s, each of which is an `Array` of two\n *   integers. The amount of padding at the beginning and end of the 2nd and 3rd\n *   dimensions, respectively.\n * @param dataFormat 'channelsLast' (default) or 'channelsFirst'.\n * @return Padded 4D `tf.Tensor`.\n */\n\nexport function spatial2dPadding(x, padding, dataFormat) {\n  return tidy(function () {\n    if (x.rank !== 4) {\n      throw new ValueError(\"temporalPadding expects input tensor to be 4-D, but received a \" + \"\".concat(x.rank, \"-D tensor.\"));\n    }\n\n    if (padding == null) {\n      padding = [[1, 1], [1, 1]];\n    }\n\n    if (padding.length !== 2 || padding[0].length !== 2 || padding[1].length !== 2) {\n      throw new ValueError('spatial2dPadding expects `padding` to be an Array of two Arrays, ' + 'each of which is an Array of two integers.');\n    }\n\n    if (dataFormat == null) {\n      dataFormat = imageDataFormat();\n    }\n\n    if (dataFormat !== 'channelsLast' && dataFormat !== 'channelsFirst') {\n      throw new ValueError(\"Unknown data format: \".concat(dataFormat, \". \") + \"Supported data formats are 'channelsLast' and 'channelsFirst.\");\n    }\n\n    var pattern;\n\n    if (dataFormat === 'channelsFirst') {\n      pattern = [[0, 0], [0, 0], padding[0], padding[1]];\n    } else {\n      pattern = [[0, 0], padding[0], padding[1], [0, 0]];\n    }\n\n    return tfc.pad(x, pattern);\n  });\n}\nexport var ZeroPadding2D = /*#__PURE__*/function (_Layer) {\n  _inherits(ZeroPadding2D, _Layer);\n\n  var _super = _createSuper(ZeroPadding2D);\n\n  function ZeroPadding2D(args) {\n    var _this;\n\n    _classCallCheck(this, ZeroPadding2D);\n\n    if (args == null) {\n      args = {};\n    }\n\n    _this = _super.call(this, args);\n    _this.dataFormat = args.dataFormat == null ? imageDataFormat() : args.dataFormat; // TODO(cais): Maybe refactor the following logic surrounding `padding`\n    //   into a helper method.\n\n    if (args.padding == null) {\n      _this.padding = [[1, 1], [1, 1]];\n    } else if (typeof args.padding === 'number') {\n      _this.padding = [[args.padding, args.padding], [args.padding, args.padding]];\n    } else {\n      args.padding = args.padding;\n\n      if (args.padding.length !== 2) {\n        throw new ValueError(\"ZeroPadding2D expects padding to be a length-2 array, but \" + \"received a length-\".concat(args.padding.length, \" array.\"));\n      }\n\n      var heightPadding;\n      var widthPadding;\n\n      if (typeof args.padding[0] === 'number') {\n        heightPadding = [args.padding[0], args.padding[0]];\n        widthPadding = [args.padding[1], args.padding[1]];\n      } else {\n        args.padding = args.padding;\n\n        if (args.padding[0].length !== 2) {\n          throw new ValueError(\"ZeroPadding2D expects height padding to be a length-2 array, \" + \"but received a length-\".concat(args.padding[0].length, \" array.\"));\n        }\n\n        heightPadding = args.padding[0];\n\n        if (args.padding[1].length !== 2) {\n          throw new ValueError(\"ZeroPadding2D expects width padding to be a length-2 array, \" + \"but received a length-\".concat(args.padding[1].length, \" array.\"));\n        }\n\n        widthPadding = args.padding[1];\n      }\n\n      _this.padding = [heightPadding, widthPadding];\n    }\n\n    _this.inputSpec = [new InputSpec({\n      ndim: 4\n    })];\n    return _this;\n  }\n\n  _createClass(ZeroPadding2D, [{\n    key: \"computeOutputShape\",\n    value: function computeOutputShape(inputShape) {\n      inputShape = getExactlyOneShape(inputShape);\n      var rows;\n      var cols;\n\n      if (this.dataFormat === 'channelsFirst') {\n        if (inputShape[2] != null && inputShape[2] >= 0) {\n          rows = inputShape[2] + this.padding[0][0] + this.padding[0][1];\n        } else {\n          rows = null;\n        }\n\n        if (inputShape[3] != null && inputShape[3] >= 0) {\n          cols = inputShape[3] + this.padding[1][0] + this.padding[1][1];\n        } else {\n          cols = null;\n        }\n\n        return [inputShape[0], inputShape[1], rows, cols];\n      } else {\n        if (inputShape[1] != null && inputShape[1] >= 0) {\n          rows = inputShape[1] + this.padding[0][0] + this.padding[0][1];\n        } else {\n          rows = null;\n        }\n\n        if (inputShape[2] != null && inputShape[2] >= 0) {\n          cols = inputShape[2] + this.padding[1][0] + this.padding[1][1];\n        } else {\n          cols = null;\n        }\n\n        return [inputShape[0], rows, cols, inputShape[3]];\n      }\n    }\n  }, {\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      var _this2 = this;\n\n      return tidy(function () {\n        return spatial2dPadding(getExactlyOneTensor(inputs), _this2.padding, _this2.dataFormat);\n      });\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      var config = {\n        padding: this.padding,\n        dataFormat: this.dataFormat\n      };\n\n      var baseConfig = _get(_getPrototypeOf(ZeroPadding2D.prototype), \"getConfig\", this).call(this);\n\n      Object.assign(config, baseConfig);\n      return config;\n    }\n  }]);\n\n  return ZeroPadding2D;\n}(Layer);\n/** @nocollapse */\n\nZeroPadding2D.className = 'ZeroPadding2D';\nserialization.registerClass(ZeroPadding2D);","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/get\";\nimport _inherits from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/**\n * TensorFlow.js Layers: Pooling Layers.\n */\nimport * as tfc from '@tensorflow/tfjs-core';\nimport { serialization, tidy } from '@tensorflow/tfjs-core';\nimport { imageDataFormat } from '../backend/common';\nimport * as K from '../backend/tfjs_backend';\nimport { checkDataFormat, checkPaddingMode, checkPoolMode } from '../common';\nimport { InputSpec } from '../engine/topology';\nimport { Layer } from '../engine/topology';\nimport { NotImplementedError, ValueError } from '../errors';\nimport { convOutputLength } from '../utils/conv_utils';\nimport { assertPositiveInteger } from '../utils/generic_utils';\nimport { getExactlyOneShape, getExactlyOneTensor } from '../utils/types_utils';\nimport { preprocessConv2DInput, preprocessConv3DInput } from './convolutional';\n/**\n * 2D pooling.\n * @param x\n * @param poolSize\n * @param stridesdes strides. Defaults to [1, 1].\n * @param padding padding. Defaults to 'valid'.\n * @param dataFormat data format. Defaults to 'channelsLast'.\n * @param poolMode Mode of pooling. Defaults to 'max'.\n * @returns Result of the 2D pooling.\n */\n\nexport function pool2d(x, poolSize, strides, padding, dataFormat, poolMode) {\n  return tidy(function () {\n    checkDataFormat(dataFormat);\n    checkPoolMode(poolMode);\n    checkPaddingMode(padding);\n\n    if (strides == null) {\n      strides = [1, 1];\n    }\n\n    if (padding == null) {\n      padding = 'valid';\n    }\n\n    if (dataFormat == null) {\n      dataFormat = imageDataFormat();\n    }\n\n    if (poolMode == null) {\n      poolMode = 'max';\n    } // TODO(cais): Remove the preprocessing step once deeplearn.js supports\n    // dataFormat as an input argument.\n\n\n    x = preprocessConv2DInput(x, dataFormat); // x is NHWC after preprocessing.\n\n    var y;\n    var paddingString = padding === 'same' ? 'same' : 'valid';\n\n    if (poolMode === 'max') {\n      // TODO(cais): Rank check?\n      y = tfc.maxPool(x, poolSize, strides, paddingString);\n    } else {\n      // 'avg'\n      // TODO(cais): Check the dtype and rank of x and give clear error message\n      //   if those are incorrect.\n      y = tfc.avgPool( // TODO(cais): Rank check?\n      x, poolSize, strides, paddingString);\n    }\n\n    if (dataFormat === 'channelsFirst') {\n      y = tfc.transpose(y, [0, 3, 1, 2]); // NHWC -> NCHW.\n    }\n\n    return y;\n  });\n}\n/**\n * 3D pooling.\n * @param x\n * @param poolSize. Default to [1, 1, 1].\n * @param strides strides. Defaults to [1, 1, 1].\n * @param padding padding. Defaults to 'valid'.\n * @param dataFormat data format. Defaults to 'channelsLast'.\n * @param poolMode Mode of pooling. Defaults to 'max'.\n * @returns Result of the 3D pooling.\n */\n\nexport function pool3d(x, poolSize, strides, padding, dataFormat, poolMode) {\n  return tidy(function () {\n    checkDataFormat(dataFormat);\n    checkPoolMode(poolMode);\n    checkPaddingMode(padding);\n\n    if (strides == null) {\n      strides = [1, 1, 1];\n    }\n\n    if (padding == null) {\n      padding = 'valid';\n    }\n\n    if (dataFormat == null) {\n      dataFormat = imageDataFormat();\n    }\n\n    if (poolMode == null) {\n      poolMode = 'max';\n    } // x is NDHWC after preprocessing.\n\n\n    x = preprocessConv3DInput(x, dataFormat);\n    var y;\n    var paddingString = padding === 'same' ? 'same' : 'valid';\n\n    if (poolMode === 'max') {\n      y = tfc.maxPool3d(x, poolSize, strides, paddingString);\n    } else {\n      // 'avg'\n      y = tfc.avgPool3d(x, poolSize, strides, paddingString);\n    }\n\n    if (dataFormat === 'channelsFirst') {\n      y = tfc.transpose(y, [0, 4, 1, 2, 3]); // NDHWC -> NCDHW.\n    }\n\n    return y;\n  });\n}\n/**\n * Abstract class for different pooling 1D layers.\n */\n\nexport var Pooling1D = /*#__PURE__*/function (_Layer) {\n  _inherits(Pooling1D, _Layer);\n\n  var _super = _createSuper(Pooling1D);\n\n  /**\n   *\n   * @param args Parameters for the Pooling layer.\n   *\n   * config.poolSize defaults to 2.\n   */\n  function Pooling1D(args) {\n    var _this;\n\n    _classCallCheck(this, Pooling1D);\n\n    if (args.poolSize == null) {\n      args.poolSize = 2;\n    }\n\n    _this = _super.call(this, args);\n\n    if (typeof args.poolSize === 'number') {\n      _this.poolSize = [args.poolSize];\n    } else if (Array.isArray(args.poolSize) && args.poolSize.length === 1 && typeof args.poolSize[0] === 'number') {\n      _this.poolSize = args.poolSize;\n    } else {\n      throw new ValueError(\"poolSize for 1D convolutional layer must be a number or an \" + \"Array of a single number, but received \" + \"\".concat(JSON.stringify(args.poolSize)));\n    }\n\n    assertPositiveInteger(_this.poolSize, 'poolSize');\n\n    if (args.strides == null) {\n      _this.strides = _this.poolSize;\n    } else {\n      if (typeof args.strides === 'number') {\n        _this.strides = [args.strides];\n      } else if (Array.isArray(args.strides) && args.strides.length === 1 && typeof args.strides[0] === 'number') {\n        _this.strides = args.strides;\n      } else {\n        throw new ValueError(\"strides for 1D convolutional layer must be a number or an \" + \"Array of a single number, but received \" + \"\".concat(JSON.stringify(args.strides)));\n      }\n    }\n\n    assertPositiveInteger(_this.strides, 'strides');\n    _this.padding = args.padding == null ? 'valid' : args.padding;\n    checkPaddingMode(_this.padding);\n    _this.inputSpec = [new InputSpec({\n      ndim: 3\n    })];\n    return _this;\n  }\n\n  _createClass(Pooling1D, [{\n    key: \"computeOutputShape\",\n    value: function computeOutputShape(inputShape) {\n      inputShape = getExactlyOneShape(inputShape);\n      var length = convOutputLength(inputShape[1], this.poolSize[0], this.padding, this.strides[0]);\n      return [inputShape[0], length, inputShape[2]];\n    }\n  }, {\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      var _this2 = this;\n\n      return tidy(function () {\n        _this2.invokeCallHook(inputs, kwargs); // Add dummy last dimension.\n\n\n        inputs = K.expandDims(getExactlyOneTensor(inputs), 2);\n\n        var output = _this2.poolingFunction(getExactlyOneTensor(inputs), [_this2.poolSize[0], 1], [_this2.strides[0], 1], _this2.padding, 'channelsLast'); // Remove dummy last dimension.\n\n\n        return tfc.squeeze(output, [2]);\n      });\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      var config = {\n        poolSize: this.poolSize,\n        padding: this.padding,\n        strides: this.strides\n      };\n\n      var baseConfig = _get(_getPrototypeOf(Pooling1D.prototype), \"getConfig\", this).call(this);\n\n      Object.assign(config, baseConfig);\n      return config;\n    }\n  }]);\n\n  return Pooling1D;\n}(Layer);\nexport var MaxPooling1D = /*#__PURE__*/function (_Pooling1D) {\n  _inherits(MaxPooling1D, _Pooling1D);\n\n  var _super2 = _createSuper(MaxPooling1D);\n\n  function MaxPooling1D(args) {\n    _classCallCheck(this, MaxPooling1D);\n\n    return _super2.call(this, args);\n  }\n\n  _createClass(MaxPooling1D, [{\n    key: \"poolingFunction\",\n    value: function poolingFunction(inputs, poolSize, strides, padding, dataFormat) {\n      checkDataFormat(dataFormat);\n      checkPaddingMode(padding);\n      return pool2d(inputs, poolSize, strides, padding, dataFormat, 'max');\n    }\n  }]);\n\n  return MaxPooling1D;\n}(Pooling1D);\n/** @nocollapse */\n\nMaxPooling1D.className = 'MaxPooling1D';\nserialization.registerClass(MaxPooling1D);\nexport var AveragePooling1D = /*#__PURE__*/function (_Pooling1D2) {\n  _inherits(AveragePooling1D, _Pooling1D2);\n\n  var _super3 = _createSuper(AveragePooling1D);\n\n  function AveragePooling1D(args) {\n    _classCallCheck(this, AveragePooling1D);\n\n    return _super3.call(this, args);\n  }\n\n  _createClass(AveragePooling1D, [{\n    key: \"poolingFunction\",\n    value: function poolingFunction(inputs, poolSize, strides, padding, dataFormat) {\n      checkDataFormat(dataFormat);\n      checkPaddingMode(padding);\n      return pool2d(inputs, poolSize, strides, padding, dataFormat, 'avg');\n    }\n  }]);\n\n  return AveragePooling1D;\n}(Pooling1D);\n/** @nocollapse */\n\nAveragePooling1D.className = 'AveragePooling1D';\nserialization.registerClass(AveragePooling1D);\n/**\n * Abstract class for different pooling 2D layers.\n */\n\nexport var Pooling2D = /*#__PURE__*/function (_Layer2) {\n  _inherits(Pooling2D, _Layer2);\n\n  var _super4 = _createSuper(Pooling2D);\n\n  function Pooling2D(args) {\n    var _this3;\n\n    _classCallCheck(this, Pooling2D);\n\n    if (args.poolSize == null) {\n      args.poolSize = [2, 2];\n    }\n\n    _this3 = _super4.call(this, args);\n    _this3.poolSize = Array.isArray(args.poolSize) ? args.poolSize : [args.poolSize, args.poolSize];\n\n    if (args.strides == null) {\n      _this3.strides = _this3.poolSize;\n    } else if (Array.isArray(args.strides)) {\n      if (args.strides.length !== 2) {\n        throw new ValueError(\"If the strides property of a 2D pooling layer is an Array, \" + \"it is expected to have a length of 2, but received length \" + \"\".concat(args.strides.length, \".\"));\n      }\n\n      _this3.strides = args.strides;\n    } else {\n      // `config.strides` is a number.\n      _this3.strides = [args.strides, args.strides];\n    }\n\n    assertPositiveInteger(_this3.poolSize, 'poolSize');\n    assertPositiveInteger(_this3.strides, 'strides');\n    _this3.padding = args.padding == null ? 'valid' : args.padding;\n    _this3.dataFormat = args.dataFormat == null ? 'channelsLast' : args.dataFormat;\n    checkDataFormat(_this3.dataFormat);\n    checkPaddingMode(_this3.padding);\n    _this3.inputSpec = [new InputSpec({\n      ndim: 4\n    })];\n    return _this3;\n  }\n\n  _createClass(Pooling2D, [{\n    key: \"computeOutputShape\",\n    value: function computeOutputShape(inputShape) {\n      inputShape = getExactlyOneShape(inputShape);\n      var rows = this.dataFormat === 'channelsFirst' ? inputShape[2] : inputShape[1];\n      var cols = this.dataFormat === 'channelsFirst' ? inputShape[3] : inputShape[2];\n      rows = convOutputLength(rows, this.poolSize[0], this.padding, this.strides[0]);\n      cols = convOutputLength(cols, this.poolSize[1], this.padding, this.strides[1]);\n\n      if (this.dataFormat === 'channelsFirst') {\n        return [inputShape[0], inputShape[1], rows, cols];\n      } else {\n        return [inputShape[0], rows, cols, inputShape[3]];\n      }\n    }\n  }, {\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      var _this4 = this;\n\n      return tidy(function () {\n        _this4.invokeCallHook(inputs, kwargs);\n\n        return _this4.poolingFunction(getExactlyOneTensor(inputs), _this4.poolSize, _this4.strides, _this4.padding, _this4.dataFormat);\n      });\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      var config = {\n        poolSize: this.poolSize,\n        padding: this.padding,\n        strides: this.strides,\n        dataFormat: this.dataFormat\n      };\n\n      var baseConfig = _get(_getPrototypeOf(Pooling2D.prototype), \"getConfig\", this).call(this);\n\n      Object.assign(config, baseConfig);\n      return config;\n    }\n  }]);\n\n  return Pooling2D;\n}(Layer);\nexport var MaxPooling2D = /*#__PURE__*/function (_Pooling2D) {\n  _inherits(MaxPooling2D, _Pooling2D);\n\n  var _super5 = _createSuper(MaxPooling2D);\n\n  function MaxPooling2D(args) {\n    _classCallCheck(this, MaxPooling2D);\n\n    return _super5.call(this, args);\n  }\n\n  _createClass(MaxPooling2D, [{\n    key: \"poolingFunction\",\n    value: function poolingFunction(inputs, poolSize, strides, padding, dataFormat) {\n      checkDataFormat(dataFormat);\n      checkPaddingMode(padding);\n      return pool2d(inputs, poolSize, strides, padding, dataFormat, 'max');\n    }\n  }]);\n\n  return MaxPooling2D;\n}(Pooling2D);\n/** @nocollapse */\n\nMaxPooling2D.className = 'MaxPooling2D';\nserialization.registerClass(MaxPooling2D);\nexport var AveragePooling2D = /*#__PURE__*/function (_Pooling2D2) {\n  _inherits(AveragePooling2D, _Pooling2D2);\n\n  var _super6 = _createSuper(AveragePooling2D);\n\n  function AveragePooling2D(args) {\n    _classCallCheck(this, AveragePooling2D);\n\n    return _super6.call(this, args);\n  }\n\n  _createClass(AveragePooling2D, [{\n    key: \"poolingFunction\",\n    value: function poolingFunction(inputs, poolSize, strides, padding, dataFormat) {\n      checkDataFormat(dataFormat);\n      checkPaddingMode(padding);\n      return pool2d(inputs, poolSize, strides, padding, dataFormat, 'avg');\n    }\n  }]);\n\n  return AveragePooling2D;\n}(Pooling2D);\n/** @nocollapse */\n\nAveragePooling2D.className = 'AveragePooling2D';\nserialization.registerClass(AveragePooling2D);\n/**\n * Abstract class for different pooling 3D layers.\n */\n\nexport var Pooling3D = /*#__PURE__*/function (_Layer3) {\n  _inherits(Pooling3D, _Layer3);\n\n  var _super7 = _createSuper(Pooling3D);\n\n  function Pooling3D(args) {\n    var _this5;\n\n    _classCallCheck(this, Pooling3D);\n\n    if (args.poolSize == null) {\n      args.poolSize = [2, 2, 2];\n    }\n\n    _this5 = _super7.call(this, args);\n    _this5.poolSize = Array.isArray(args.poolSize) ? args.poolSize : [args.poolSize, args.poolSize, args.poolSize];\n\n    if (args.strides == null) {\n      _this5.strides = _this5.poolSize;\n    } else if (Array.isArray(args.strides)) {\n      if (args.strides.length !== 3) {\n        throw new ValueError(\"If the strides property of a 3D pooling layer is an Array, \" + \"it is expected to have a length of 3, but received length \" + \"\".concat(args.strides.length, \".\"));\n      }\n\n      _this5.strides = args.strides;\n    } else {\n      // `config.strides` is a number.\n      _this5.strides = [args.strides, args.strides, args.strides];\n    }\n\n    assertPositiveInteger(_this5.poolSize, 'poolSize');\n    assertPositiveInteger(_this5.strides, 'strides');\n    _this5.padding = args.padding == null ? 'valid' : args.padding;\n    _this5.dataFormat = args.dataFormat == null ? 'channelsLast' : args.dataFormat;\n    checkDataFormat(_this5.dataFormat);\n    checkPaddingMode(_this5.padding);\n    _this5.inputSpec = [new InputSpec({\n      ndim: 5\n    })];\n    return _this5;\n  }\n\n  _createClass(Pooling3D, [{\n    key: \"computeOutputShape\",\n    value: function computeOutputShape(inputShape) {\n      inputShape = getExactlyOneShape(inputShape);\n      var depths = this.dataFormat === 'channelsFirst' ? inputShape[2] : inputShape[1];\n      var rows = this.dataFormat === 'channelsFirst' ? inputShape[3] : inputShape[2];\n      var cols = this.dataFormat === 'channelsFirst' ? inputShape[4] : inputShape[3];\n      depths = convOutputLength(depths, this.poolSize[0], this.padding, this.strides[0]);\n      rows = convOutputLength(rows, this.poolSize[1], this.padding, this.strides[1]);\n      cols = convOutputLength(cols, this.poolSize[2], this.padding, this.strides[2]);\n\n      if (this.dataFormat === 'channelsFirst') {\n        return [inputShape[0], inputShape[1], depths, rows, cols];\n      } else {\n        return [inputShape[0], depths, rows, cols, inputShape[4]];\n      }\n    }\n  }, {\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      var _this6 = this;\n\n      return tidy(function () {\n        _this6.invokeCallHook(inputs, kwargs);\n\n        return _this6.poolingFunction(getExactlyOneTensor(inputs), _this6.poolSize, _this6.strides, _this6.padding, _this6.dataFormat);\n      });\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      var config = {\n        poolSize: this.poolSize,\n        padding: this.padding,\n        strides: this.strides,\n        dataFormat: this.dataFormat\n      };\n\n      var baseConfig = _get(_getPrototypeOf(Pooling3D.prototype), \"getConfig\", this).call(this);\n\n      Object.assign(config, baseConfig);\n      return config;\n    }\n  }]);\n\n  return Pooling3D;\n}(Layer);\nexport var MaxPooling3D = /*#__PURE__*/function (_Pooling3D) {\n  _inherits(MaxPooling3D, _Pooling3D);\n\n  var _super8 = _createSuper(MaxPooling3D);\n\n  function MaxPooling3D(args) {\n    _classCallCheck(this, MaxPooling3D);\n\n    return _super8.call(this, args);\n  }\n\n  _createClass(MaxPooling3D, [{\n    key: \"poolingFunction\",\n    value: function poolingFunction(inputs, poolSize, strides, padding, dataFormat) {\n      checkDataFormat(dataFormat);\n      checkPaddingMode(padding);\n      return pool3d(inputs, poolSize, strides, padding, dataFormat, 'max');\n    }\n  }]);\n\n  return MaxPooling3D;\n}(Pooling3D);\n/** @nocollapse */\n\nMaxPooling3D.className = 'MaxPooling3D';\nserialization.registerClass(MaxPooling3D);\nexport var AveragePooling3D = /*#__PURE__*/function (_Pooling3D2) {\n  _inherits(AveragePooling3D, _Pooling3D2);\n\n  var _super9 = _createSuper(AveragePooling3D);\n\n  function AveragePooling3D(args) {\n    _classCallCheck(this, AveragePooling3D);\n\n    return _super9.call(this, args);\n  }\n\n  _createClass(AveragePooling3D, [{\n    key: \"poolingFunction\",\n    value: function poolingFunction(inputs, poolSize, strides, padding, dataFormat) {\n      checkDataFormat(dataFormat);\n      checkPaddingMode(padding);\n      return pool3d(inputs, poolSize, strides, padding, dataFormat, 'avg');\n    }\n  }]);\n\n  return AveragePooling3D;\n}(Pooling3D);\n/** @nocollapse */\n\nAveragePooling3D.className = 'AveragePooling3D';\nserialization.registerClass(AveragePooling3D);\n/**\n * Abstract class for different global pooling 1D layers.\n */\n\nexport var GlobalPooling1D = /*#__PURE__*/function (_Layer4) {\n  _inherits(GlobalPooling1D, _Layer4);\n\n  var _super10 = _createSuper(GlobalPooling1D);\n\n  function GlobalPooling1D(args) {\n    var _this7;\n\n    _classCallCheck(this, GlobalPooling1D);\n\n    _this7 = _super10.call(this, args);\n    _this7.inputSpec = [new InputSpec({\n      ndim: 3\n    })];\n    return _this7;\n  }\n\n  _createClass(GlobalPooling1D, [{\n    key: \"computeOutputShape\",\n    value: function computeOutputShape(inputShape) {\n      return [inputShape[0], inputShape[2]];\n    }\n  }, {\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      throw new NotImplementedError();\n    }\n  }]);\n\n  return GlobalPooling1D;\n}(Layer);\nexport var GlobalAveragePooling1D = /*#__PURE__*/function (_GlobalPooling1D) {\n  _inherits(GlobalAveragePooling1D, _GlobalPooling1D);\n\n  var _super11 = _createSuper(GlobalAveragePooling1D);\n\n  function GlobalAveragePooling1D(args) {\n    _classCallCheck(this, GlobalAveragePooling1D);\n\n    return _super11.call(this, args || {});\n  }\n\n  _createClass(GlobalAveragePooling1D, [{\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      return tidy(function () {\n        var input = getExactlyOneTensor(inputs);\n        return tfc.mean(input, 1);\n      });\n    }\n  }]);\n\n  return GlobalAveragePooling1D;\n}(GlobalPooling1D);\n/** @nocollapse */\n\nGlobalAveragePooling1D.className = 'GlobalAveragePooling1D';\nserialization.registerClass(GlobalAveragePooling1D);\nexport var GlobalMaxPooling1D = /*#__PURE__*/function (_GlobalPooling1D2) {\n  _inherits(GlobalMaxPooling1D, _GlobalPooling1D2);\n\n  var _super12 = _createSuper(GlobalMaxPooling1D);\n\n  function GlobalMaxPooling1D(args) {\n    _classCallCheck(this, GlobalMaxPooling1D);\n\n    return _super12.call(this, args || {});\n  }\n\n  _createClass(GlobalMaxPooling1D, [{\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      return tidy(function () {\n        var input = getExactlyOneTensor(inputs);\n        return tfc.max(input, 1);\n      });\n    }\n  }]);\n\n  return GlobalMaxPooling1D;\n}(GlobalPooling1D);\n/** @nocollapse */\n\nGlobalMaxPooling1D.className = 'GlobalMaxPooling1D';\nserialization.registerClass(GlobalMaxPooling1D);\n/**\n * Abstract class for different global pooling 2D layers.\n */\n\nexport var GlobalPooling2D = /*#__PURE__*/function (_Layer5) {\n  _inherits(GlobalPooling2D, _Layer5);\n\n  var _super13 = _createSuper(GlobalPooling2D);\n\n  function GlobalPooling2D(args) {\n    var _this8;\n\n    _classCallCheck(this, GlobalPooling2D);\n\n    _this8 = _super13.call(this, args);\n    _this8.dataFormat = args.dataFormat == null ? 'channelsLast' : args.dataFormat;\n    checkDataFormat(_this8.dataFormat);\n    _this8.inputSpec = [new InputSpec({\n      ndim: 4\n    })];\n    return _this8;\n  }\n\n  _createClass(GlobalPooling2D, [{\n    key: \"computeOutputShape\",\n    value: function computeOutputShape(inputShape) {\n      inputShape = inputShape;\n\n      if (this.dataFormat === 'channelsLast') {\n        return [inputShape[0], inputShape[3]];\n      } else {\n        return [inputShape[0], inputShape[1]];\n      }\n    }\n  }, {\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      throw new NotImplementedError();\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      var config = {\n        dataFormat: this.dataFormat\n      };\n\n      var baseConfig = _get(_getPrototypeOf(GlobalPooling2D.prototype), \"getConfig\", this).call(this);\n\n      Object.assign(config, baseConfig);\n      return config;\n    }\n  }]);\n\n  return GlobalPooling2D;\n}(Layer);\nexport var GlobalAveragePooling2D = /*#__PURE__*/function (_GlobalPooling2D) {\n  _inherits(GlobalAveragePooling2D, _GlobalPooling2D);\n\n  var _super14 = _createSuper(GlobalAveragePooling2D);\n\n  function GlobalAveragePooling2D() {\n    _classCallCheck(this, GlobalAveragePooling2D);\n\n    return _super14.apply(this, arguments);\n  }\n\n  _createClass(GlobalAveragePooling2D, [{\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      var _this9 = this;\n\n      return tidy(function () {\n        var input = getExactlyOneTensor(inputs);\n\n        if (_this9.dataFormat === 'channelsLast') {\n          return tfc.mean(input, [1, 2]);\n        } else {\n          return tfc.mean(input, [2, 3]);\n        }\n      });\n    }\n  }]);\n\n  return GlobalAveragePooling2D;\n}(GlobalPooling2D);\n/** @nocollapse */\n\nGlobalAveragePooling2D.className = 'GlobalAveragePooling2D';\nserialization.registerClass(GlobalAveragePooling2D);\nexport var GlobalMaxPooling2D = /*#__PURE__*/function (_GlobalPooling2D2) {\n  _inherits(GlobalMaxPooling2D, _GlobalPooling2D2);\n\n  var _super15 = _createSuper(GlobalMaxPooling2D);\n\n  function GlobalMaxPooling2D() {\n    _classCallCheck(this, GlobalMaxPooling2D);\n\n    return _super15.apply(this, arguments);\n  }\n\n  _createClass(GlobalMaxPooling2D, [{\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      var _this10 = this;\n\n      return tidy(function () {\n        var input = getExactlyOneTensor(inputs);\n\n        if (_this10.dataFormat === 'channelsLast') {\n          return tfc.max(input, [1, 2]);\n        } else {\n          return tfc.max(input, [2, 3]);\n        }\n      });\n    }\n  }]);\n\n  return GlobalMaxPooling2D;\n}(GlobalPooling2D);\n/** @nocollapse */\n\nGlobalMaxPooling2D.className = 'GlobalMaxPooling2D';\nserialization.registerClass(GlobalMaxPooling2D);","import _toConsumableArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/get\";\nimport _inherits from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/**\n * Layers that augment the functionality of a base layer.\n */\nimport * as tfc from '@tensorflow/tfjs-core';\nimport { serialization, tidy } from '@tensorflow/tfjs-core';\nimport * as K from '../backend/tfjs_backend';\nimport { nameScope } from '../common';\nimport { InputSpec, Layer, SymbolicTensor } from '../engine/topology';\nimport { NotImplementedError, ValueError } from '../errors';\nimport { VALID_BIDIRECTIONAL_MERGE_MODES } from '../keras_format/common';\nimport * as generic_utils from '../utils/generic_utils';\nimport { getExactlyOneShape, getExactlyOneTensor } from '../utils/types_utils';\nimport { rnn, standardizeArgs } from './recurrent';\nimport { deserialize } from './serialization';\n/**\n * Abstract wrapper base class.\n *\n * Wrappers take another layer and augment it in various ways.\n * Do not use this class as a layer, it is only an abstract base class.\n * Two usable wrappers are the `TimeDistributed` and `Bidirectional` wrappers.\n */\n\nexport var Wrapper = /*#__PURE__*/function (_Layer) {\n  _inherits(Wrapper, _Layer);\n\n  var _super = _createSuper(Wrapper);\n\n  function Wrapper(args) {\n    var _this;\n\n    _classCallCheck(this, Wrapper);\n\n    // Porting Note: In PyKeras, `self.layer` is set prior to the calling\n    //   `super()`. But we can't do that here due to TypeScript's restriction.\n    //   See: https://github.com/Microsoft/TypeScript/issues/8277\n    //   As a result, we have to add checks in `get trainable()` and\n    //   `set trainable()` below in order to prevent using `this.layer` when\n    //   its value is `undefined`. The super constructor does use the getter\n    //   and the setter of `this.layer`.\n    _this = _super.call(this, args);\n    _this.layer = args.layer;\n    return _this;\n  }\n\n  _createClass(Wrapper, [{\n    key: \"build\",\n    value: function build(inputShape) {\n      this.built = true;\n    } // TODO(cais): Implement activityRegularizer getter.\n\n  }, {\n    key: \"trainable\",\n    get: function get() {\n      // Porting Note: the check of `this.layer` here is necessary due to the\n      //   way the `constructor` of this class is written (see Porting Note\n      //   above).\n      if (this.layer != null) {\n        return this.layer.trainable;\n      } else {\n        return false;\n      }\n    },\n    set: function set(value) {\n      // Porting Note: the check of `this.layer` here is necessary due to the\n      //   way the `constructor` of this class is written (see Porting Note\n      //   above).\n      if (this.layer != null) {\n        this.layer.trainable = value;\n      }\n    }\n  }, {\n    key: \"trainableWeights\",\n    get: function get() {\n      return this.layer.trainableWeights;\n    } // TODO(cais): Implement setter for trainableWeights.\n\n  }, {\n    key: \"nonTrainableWeights\",\n    get: function get() {\n      return this.layer.nonTrainableWeights;\n    } // TODO(cais): Implement setter for nonTrainableWeights.\n\n  }, {\n    key: \"updates\",\n    get: function get() {\n      // tslint:disable-next-line:no-any\n      return this.layer._updates;\n    } // TODO(cais): Implement getUpdatesFor().\n\n  }, {\n    key: \"losses\",\n    get: function get() {\n      return this.layer.losses;\n    } // TODO(cais): Implement getLossesFor().\n\n  }, {\n    key: \"getWeights\",\n    value: function getWeights() {\n      return this.layer.getWeights();\n    }\n  }, {\n    key: \"setWeights\",\n    value: function setWeights(weights) {\n      this.layer.setWeights(weights);\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      var config = {\n        'layer': {\n          'className': this.layer.getClassName(),\n          'config': this.layer.getConfig()\n        }\n      };\n\n      var baseConfig = _get(_getPrototypeOf(Wrapper.prototype), \"getConfig\", this).call(this);\n\n      Object.assign(config, baseConfig);\n      return config;\n    }\n  }, {\n    key: \"setFastWeightInitDuringBuild\",\n    value: function setFastWeightInitDuringBuild(value) {\n      _get(_getPrototypeOf(Wrapper.prototype), \"setFastWeightInitDuringBuild\", this).call(this, value);\n\n      if (this.layer != null) {\n        this.layer.setFastWeightInitDuringBuild(value);\n      }\n    }\n    /** @nocollapse */\n\n  }], [{\n    key: \"fromConfig\",\n    value: function fromConfig(cls, config) {\n      var customObjects = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var layerConfig = config['layer'];\n      var layer = deserialize(layerConfig, customObjects);\n      delete config['layer'];\n      var newConfig = {\n        layer: layer\n      };\n      Object.assign(newConfig, config);\n      return new cls(newConfig);\n    }\n  }]);\n\n  return Wrapper;\n}(Layer);\nexport var TimeDistributed = /*#__PURE__*/function (_Wrapper) {\n  _inherits(TimeDistributed, _Wrapper);\n\n  var _super2 = _createSuper(TimeDistributed);\n\n  function TimeDistributed(args) {\n    var _this2;\n\n    _classCallCheck(this, TimeDistributed);\n\n    _this2 = _super2.call(this, args);\n    _this2.supportsMasking = true;\n    return _this2;\n  }\n\n  _createClass(TimeDistributed, [{\n    key: \"build\",\n    value: function build(inputShape) {\n      inputShape = getExactlyOneShape(inputShape);\n\n      if (inputShape.length < 3) {\n        throw new ValueError(\"TimeDistributed layer expects an input shape >= 3D, but received \" + \"input shape \".concat(JSON.stringify(inputShape)));\n      }\n\n      this.inputSpec = [{\n        shape: inputShape\n      }];\n      var childInputShape = [inputShape[0]].concat(inputShape.slice(2));\n\n      if (!this.layer.built) {\n        this.layer.build(childInputShape);\n        this.layer.built = true;\n      }\n\n      _get(_getPrototypeOf(TimeDistributed.prototype), \"build\", this).call(this, inputShape);\n    }\n  }, {\n    key: \"computeOutputShape\",\n    value: function computeOutputShape(inputShape) {\n      inputShape = getExactlyOneShape(inputShape);\n      var childInputShape = [inputShape[0]].concat(inputShape.slice(2));\n      var childOutputShape = this.layer.computeOutputShape(childInputShape);\n      var timesteps = inputShape[1];\n      return [childOutputShape[0], timesteps].concat(childOutputShape.slice(1));\n    }\n  }, {\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      var _this3 = this;\n\n      return tidy(function () {\n        // TODO(cais): Add 'training' and 'useLearningPhase' to kwargs.\n        inputs = getExactlyOneTensor(inputs); // Porting Note: In tfjs-layers, `inputs` are always concrete tensor\n        // values. Hence the inputs can't have an undetermined first (batch)\n        // dimension, which is why we always use the K.rnn approach here.\n\n        var step = function step(inputs, states) {\n          // TODO(cais): Add useLearningPhase.\n          // NOTE(cais): `layer.call` may return a length-1 array of Tensor in\n          //   some cases (e.g., `layer` is a `Sequential` instance), which is\n          //   why `getExactlyOneTensor` is used below.\n          var output = getExactlyOneTensor(_this3.layer.call(inputs, kwargs));\n          return [output, []];\n        };\n\n        var rnnOutputs = rnn(step, inputs, [], false\n        /* goBackwards */\n        , null\n        /* mask */\n        , null\n        /* constants */\n        , false\n        /* unroll */\n        , true\n        /* needPerStepOutputs */\n        );\n        var y = rnnOutputs[1]; // TODO(cais): Add activity regularization.\n        // TODO(cais): Add useLearningPhase.\n\n        return y;\n      });\n    }\n  }]);\n\n  return TimeDistributed;\n}(Wrapper);\n/** @nocollapse */\n\nTimeDistributed.className = 'TimeDistributed';\nserialization.registerClass(TimeDistributed);\nexport function checkBidirectionalMergeMode(value) {\n  generic_utils.checkStringTypeUnionValue(VALID_BIDIRECTIONAL_MERGE_MODES, 'BidirectionalMergeMode', value);\n}\nvar DEFAULT_BIDIRECTIONAL_MERGE_MODE = 'concat';\nexport var Bidirectional = /*#__PURE__*/function (_Wrapper2) {\n  _inherits(Bidirectional, _Wrapper2);\n\n  var _super3 = _createSuper(Bidirectional);\n\n  function Bidirectional(args) {\n    var _this4;\n\n    _classCallCheck(this, Bidirectional);\n\n    _this4 = _super3.call(this, args); // Note: When creating `this.forwardLayer`, the original Layer object\n    //   (`config.layer`) ought to be cloned. This is why we call\n    //   `getConfig()` followed by `deserialize()`. Without this cloning,\n    //   the layer names saved during serialization will incorrectly contain\n    //   the 'forward_' prefix. In Python Keras, this is done using\n    //   `copy.copy` (shallow copy), which does not have a simple equivalent\n    //   in JavaScript. JavaScript's `Object.assign()` does not copy\n    //   methods.\n\n    var layerConfig = args.layer.getConfig();\n    var forwDict = {};\n    forwDict['className'] = args.layer.getClassName();\n    forwDict['config'] = layerConfig;\n    _this4.forwardLayer = deserialize(forwDict);\n    layerConfig['goBackwards'] = layerConfig['goBackwards'] === true ? false : true;\n    var backDict = {};\n    backDict['className'] = args.layer.getClassName();\n    backDict['config'] = layerConfig;\n    _this4.backwardLayer = deserialize(backDict);\n    _this4.forwardLayer.name = 'forward_' + _this4.forwardLayer.name;\n    _this4.backwardLayer.name = 'backward_' + _this4.backwardLayer.name;\n    _this4.mergeMode = args.mergeMode === undefined ? DEFAULT_BIDIRECTIONAL_MERGE_MODE : args.mergeMode;\n    checkBidirectionalMergeMode(_this4.mergeMode);\n\n    if (args.weights) {\n      throw new NotImplementedError('weights support is not implemented for Bidirectional layer yet.');\n    }\n\n    _this4._stateful = args.layer.stateful;\n    _this4.returnSequences = args.layer.returnSequences;\n    _this4.returnState = args.layer.returnState;\n    _this4.supportsMasking = true;\n    _this4._trainable = true;\n    _this4.inputSpec = args.layer.inputSpec;\n    _this4.numConstants = null;\n    return _this4;\n  }\n\n  _createClass(Bidirectional, [{\n    key: \"trainable\",\n    get: function get() {\n      return this._trainable;\n    },\n    set: function set(value) {\n      // Porting Note: the check of `this.layer` here is necessary due to the\n      //   way the `constructor` of this class is written (see Porting Note\n      //   above).\n      this._trainable = value;\n\n      if (this.forwardLayer != null) {\n        this.forwardLayer.trainable = value;\n      }\n\n      if (this.backwardLayer != null) {\n        this.backwardLayer.trainable = value;\n      }\n    }\n  }, {\n    key: \"getWeights\",\n    value: function getWeights() {\n      return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights());\n    }\n  }, {\n    key: \"setWeights\",\n    value: function setWeights(weights) {\n      var numWeights = weights.length;\n      var numeightsOver2 = Math.floor(numWeights / 2);\n      this.forwardLayer.setWeights(weights.slice(0, numeightsOver2));\n      this.backwardLayer.setWeights(weights.slice(numeightsOver2));\n    }\n  }, {\n    key: \"computeOutputShape\",\n    value: function computeOutputShape(inputShape) {\n      var layerShapes = this.forwardLayer.computeOutputShape(inputShape);\n\n      if (!(Array.isArray(layerShapes) && Array.isArray(layerShapes[0]))) {\n        layerShapes = [layerShapes];\n      }\n\n      layerShapes = layerShapes;\n      var outputShape;\n      var outputShapes;\n      var stateShape;\n\n      if (this.returnState) {\n        stateShape = layerShapes.slice(1);\n        outputShape = layerShapes[0];\n      } else {\n        outputShape = layerShapes[0];\n      }\n\n      outputShape = outputShape;\n\n      if (this.mergeMode === 'concat') {\n        outputShape[outputShape.length - 1] *= 2;\n        outputShapes = [outputShape];\n      } else if (this.mergeMode == null) {\n        outputShapes = [outputShape, outputShape.slice()];\n      } else {\n        outputShapes = [outputShape];\n      }\n\n      if (this.returnState) {\n        if (this.mergeMode == null) {\n          return outputShapes.concat(stateShape).concat(stateShape.slice());\n        }\n\n        return [outputShape].concat(stateShape).concat(stateShape.slice());\n      }\n\n      return generic_utils.singletonOrArray(outputShapes);\n    }\n  }, {\n    key: \"apply\",\n    value: function apply(inputs, kwargs) {\n      var initialState = kwargs == null ? null : kwargs['initialState'];\n      var constants = kwargs == null ? null : kwargs['constants'];\n\n      if (kwargs == null) {\n        kwargs = {};\n      }\n\n      var standardized = standardizeArgs(inputs, initialState, constants, this.numConstants);\n      inputs = standardized.inputs;\n      initialState = standardized.initialState;\n      constants = standardized.constants;\n\n      if (Array.isArray(inputs)) {\n        initialState = inputs.slice(1);\n        inputs = inputs[0];\n      }\n\n      if ((initialState == null || initialState.length === 0) && constants == null) {\n        return _get(_getPrototypeOf(Bidirectional.prototype), \"apply\", this).call(this, inputs, kwargs);\n      }\n\n      var additionalInputs = [];\n      var additionalSpecs = [];\n\n      if (initialState != null) {\n        var numStates = initialState.length;\n\n        if (numStates % 2 > 0) {\n          throw new ValueError('When passing `initialState` to a Bidrectional RNN, ' + 'the state should be an Array containing the states of ' + 'the underlying RNNs.');\n        }\n\n        kwargs['initialState'] = initialState;\n        additionalInputs.push.apply(additionalInputs, _toConsumableArray(initialState));\n        var stateSpecs = initialState.map(function (state) {\n          return new InputSpec({\n            shape: state.shape\n          });\n        });\n        this.forwardLayer.stateSpec = stateSpecs.slice(0, numStates / 2);\n        this.backwardLayer.stateSpec = stateSpecs.slice(numStates / 2);\n        additionalSpecs.push.apply(additionalSpecs, _toConsumableArray(stateSpecs));\n      }\n\n      if (constants != null) {\n        throw new NotImplementedError('Support for constants in Bidirectional layers is not ' + 'implemented yet.');\n      }\n\n      var isSymbolicTensor = additionalInputs[0] instanceof SymbolicTensor;\n\n      for (var _i = 0, _additionalInputs = additionalInputs; _i < _additionalInputs.length; _i++) {\n        var tensor = _additionalInputs[_i];\n\n        if (tensor instanceof SymbolicTensor !== isSymbolicTensor) {\n          throw new ValueError('The initial state of a Bidirectional layer cannot be ' + 'specified as a mix of symbolic and non-symbolic tensors');\n        }\n      }\n\n      if (isSymbolicTensor) {\n        // Compute the full input and specs, including the states.\n        var fullInput = [inputs].concat(additionalInputs);\n        var fullInputSpec = this.inputSpec.concat(additionalSpecs); // Perform the call temporarily and replace inputSpec.\n        // Note: with initial states symbolic calls and non-symbolic calls to\n        // this method differ in how the initial states are passed. For\n        // symbolic calls, the initial states are passed in the first arg, as\n        // an Array of SymbolicTensors; for non-symbolic calls, they are\n        // passed in the second arg as a part of the kwargs. Hence the need to\n        // temporarily modify inputSpec here.\n        // TODO(cais): Make refactoring so that this hacky code below is no\n        // longer needed.\n\n        var originalInputSpec = this.inputSpec;\n        this.inputSpec = fullInputSpec;\n\n        var output = _get(_getPrototypeOf(Bidirectional.prototype), \"apply\", this).call(this, fullInput, kwargs);\n\n        this.inputSpec = originalInputSpec;\n        return output;\n      } else {\n        return _get(_getPrototypeOf(Bidirectional.prototype), \"apply\", this).call(this, inputs, kwargs);\n      }\n    }\n  }, {\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      var _this5 = this;\n\n      return tidy(function () {\n        var initialState = kwargs['initialState'];\n        var y;\n        var yRev;\n\n        if (initialState == null) {\n          y = _this5.forwardLayer.call(inputs, kwargs);\n          yRev = _this5.backwardLayer.call(inputs, kwargs);\n        } else {\n          var forwardState = initialState.slice(0, initialState.length / 2);\n          var backwardState = initialState.slice(initialState.length / 2);\n          y = _this5.forwardLayer.call(inputs, Object.assign(kwargs, {\n            initialState: forwardState\n          }));\n          yRev = _this5.backwardLayer.call(inputs, Object.assign(kwargs, {\n            initialState: backwardState\n          }));\n        }\n\n        var states;\n\n        if (_this5.returnState) {\n          if (Array.isArray(y)) {\n            states = y.slice(1).concat(yRev.slice(1));\n          } else {}\n\n          y = y[0];\n          yRev = yRev[0];\n        }\n\n        if (_this5.returnSequences) {\n          yRev = tfc.reverse(yRev, 1);\n        }\n\n        var output;\n\n        if (_this5.mergeMode === 'concat') {\n          output = K.concatenate([y, yRev]);\n        } else if (_this5.mergeMode === 'sum') {\n          output = tfc.add(y, yRev);\n        } else if (_this5.mergeMode === 'ave') {\n          output = tfc.mul(.5, tfc.add(y, yRev));\n        } else if (_this5.mergeMode === 'mul') {\n          output = tfc.mul(y, yRev);\n        } else if (_this5.mergeMode == null) {\n          output = [y, yRev];\n        } // TODO(cais): Properly set learning phase.\n\n\n        if (_this5.returnState) {\n          if (_this5.mergeMode == null) {\n            return output.concat(states);\n          }\n\n          return [output].concat(states);\n        }\n\n        return output;\n      });\n    }\n  }, {\n    key: \"resetStates\",\n    value: function resetStates(states) {\n      this.forwardLayer.resetStates();\n      this.backwardLayer.resetStates();\n    }\n  }, {\n    key: \"build\",\n    value: function build(inputShape) {\n      var _this6 = this;\n\n      nameScope(this.forwardLayer.name, function () {\n        _this6.forwardLayer.build(inputShape);\n      });\n      nameScope(this.backwardLayer.name, function () {\n        _this6.backwardLayer.build(inputShape);\n      });\n      this.built = true;\n    }\n  }, {\n    key: \"computeMask\",\n    value: function computeMask(inputs, mask) {\n      if (Array.isArray(mask)) {\n        mask = mask[0];\n      }\n\n      var outputMask;\n\n      if (this.returnSequences) {\n        if (this.mergeMode == null) {\n          outputMask = [mask, mask];\n        } else {\n          outputMask = mask;\n        }\n      } else {\n        if (this.mergeMode == null) {\n          outputMask = [null, null];\n        } else {\n          outputMask = null;\n        }\n      }\n\n      if (this.returnState) {\n        var states = this.forwardLayer.states;\n        var stateMask = states.map(function (state) {\n          return null;\n        });\n\n        if (Array.isArray(outputMask)) {\n          return outputMask.concat(stateMask).concat(stateMask);\n        } else {\n          return [outputMask].concat(stateMask).concat(stateMask);\n        }\n      } else {\n        return outputMask;\n      }\n    }\n  }, {\n    key: \"trainableWeights\",\n    get: function get() {\n      return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights);\n    }\n  }, {\n    key: \"nonTrainableWeights\",\n    get: function get() {\n      return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights);\n    } // TODO(cais): Implement constraints().\n\n  }, {\n    key: \"setFastWeightInitDuringBuild\",\n    value: function setFastWeightInitDuringBuild(value) {\n      _get(_getPrototypeOf(Bidirectional.prototype), \"setFastWeightInitDuringBuild\", this).call(this, value);\n\n      if (this.forwardLayer != null) {\n        this.forwardLayer.setFastWeightInitDuringBuild(value);\n      }\n\n      if (this.backwardLayer != null) {\n        this.backwardLayer.setFastWeightInitDuringBuild(value);\n      }\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      var config = {\n        'mergeMode': this.mergeMode\n      }; // TODO(cais): Add logic for `numConstants` once the property is added.\n\n      var baseConfig = _get(_getPrototypeOf(Bidirectional.prototype), \"getConfig\", this).call(this);\n\n      Object.assign(config, baseConfig);\n      return config;\n    }\n    /** @nocollapse */\n\n  }], [{\n    key: \"fromConfig\",\n    value: function fromConfig(cls, config) {\n      var rnnLayer = deserialize(config['layer']);\n      delete config['layer']; // TODO(cais): Add logic for `numConstants` once the property is added.\n\n      if (config['numConstants'] != null) {\n        throw new NotImplementedError(\"Deserialization of a Bidirectional layer with numConstants \" + \"present is not supported yet.\");\n      } // tslint:disable-next-line:no-any\n\n\n      var newConfig = config;\n      newConfig['layer'] = rnnLayer;\n      return new cls(newConfig);\n    }\n  }]);\n\n  return Bidirectional;\n}(Wrapper);\n/** @nocollapse */\n\nBidirectional.className = 'Bidirectional';\nserialization.registerClass(Bidirectional);","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\nimport { InputLayer } from './engine/input_layer';\nimport { Layer } from './engine/topology';\nimport { input } from './exports';\nimport { ELU, LeakyReLU, PReLU, ReLU, Softmax, ThresholdedReLU } from './layers/advanced_activations';\nimport { Conv1D, Conv2D, Conv2DTranspose, Conv3D, Cropping2D, SeparableConv2D, UpSampling2D, Conv3DTranspose } from './layers/convolutional';\nimport { DepthwiseConv2D } from './layers/convolutional_depthwise';\nimport { ConvLSTM2D, ConvLSTM2DCell } from './layers/convolutional_recurrent';\nimport { Activation, Dense, Dropout, Flatten, Masking, Permute, RepeatVector, Reshape, SpatialDropout1D } from './layers/core';\nimport { Embedding } from './layers/embeddings';\nimport { Add, Average, Concatenate, Dot, Maximum, Minimum, Multiply } from './layers/merge';\nimport { AlphaDropout, GaussianDropout, GaussianNoise } from './layers/noise';\nimport { BatchNormalization, LayerNormalization } from './layers/normalization';\nimport { ZeroPadding2D } from './layers/padding';\nimport { AveragePooling1D, AveragePooling2D, AveragePooling3D, GlobalAveragePooling1D, GlobalAveragePooling2D, GlobalMaxPooling1D, GlobalMaxPooling2D, MaxPooling1D, MaxPooling2D, MaxPooling3D } from './layers/pooling';\nimport { GRU, GRUCell, LSTM, LSTMCell, RNN, RNNCell, SimpleRNN, SimpleRNNCell, StackedRNNCells } from './layers/recurrent';\nimport { Bidirectional, TimeDistributed } from './layers/wrappers'; // TODO(cais): Add doc string to all the public static functions in this\n//   class; include exectuable JavaScript code snippets where applicable\n//   (b/74074458).\n// Input Layer.\n\n/**\n * An input layer is an entry point into a `tf.LayersModel`.\n *\n * `InputLayer` is generated automatically for `tf.Sequential`` models by\n * specifying the `inputshape` or `batchInputShape` for the first layer.  It\n * should not be specified explicitly. However, it can be useful sometimes,\n * e.g., when constructing a sequential model from a subset of another\n * sequential model's layers. Like the code snippet below shows.\n *\n * ```js\n * // Define a model which simply adds two inputs.\n * const model1 = tf.sequential();\n * model1.add(tf.layers.dense({inputShape: [4], units: 3, activation: 'relu'}));\n * model1.add(tf.layers.dense({units: 1, activation: 'sigmoid'}));\n * model1.summary();\n * model1.predict(tf.zeros([1, 4])).print();\n *\n * // Construct another model, reusing the second layer of `model1` while\n * // not using the first layer of `model1`. Note that you cannot add the second\n * // layer of `model` directly as the first layer of the new sequential model,\n * // because doing so will lead to an error related to the fact that the layer\n * // is not an input layer. Instead, you need to create an `inputLayer` and add\n * // it to the new sequential model before adding the reused layer.\n * const model2 = tf.sequential();\n * // Use an inputShape that matches the input shape of `model1`'s second\n * // layer.\n * model2.add(tf.layers.inputLayer({inputShape: [3]}));\n * model2.add(model1.layers[1]);\n * model2.summary();\n * model2.predict(tf.zeros([1, 3])).print();\n * ```\n *\n * @doc {heading: 'Layers', subheading: 'Inputs', namespace: 'layers'}\n */\n\nexport function inputLayer(args) {\n  return new InputLayer(args);\n} // Advanced Activation Layers.\n\n/**\n * Exponetial Linear Unit (ELU).\n *\n * It follows:\n * `f(x) =  alpha * (exp(x) - 1.) for x < 0`,\n * `f(x) = x for x >= 0`.\n *\n * Input shape:\n *   Arbitrary. Use the configuration `inputShape` when using this layer as the\n *   first layer in a model.\n *\n * Output shape:\n *   Same shape as the input.\n *\n * References:\n *   - [Fast and Accurate Deep Network Learning by Exponential Linear Units\n * (ELUs)](https://arxiv.org/abs/1511.07289v1)\n *\n * @doc {\n *   heading: 'Layers',\n *   subheading: 'Advanced Activation',\n *   namespace: 'layers'\n * }\n */\n\nexport function elu(args) {\n  return new ELU(args);\n}\n/**\n * Rectified Linear Unit activation function.\n *\n * Input shape:\n *   Arbitrary. Use the config field `inputShape` (Array of integers, does\n *   not include the sample axis) when using this layer as the first layer\n *   in a model.\n *\n * Output shape:\n *   Same shape as the input.\n *\n * @doc {\n *   heading: 'Layers',\n *   subheading: 'Advanced Activation',\n *   namespace: 'layers'\n * }\n */\n\nexport function reLU(args) {\n  return new ReLU(args);\n}\n/**\n * Leaky version of a rectified linear unit.\n *\n * It allows a small gradient when the unit is not active:\n * `f(x) = alpha * x for x < 0.`\n * `f(x) = x for x >= 0.`\n *\n * Input shape:\n *   Arbitrary. Use the configuration `inputShape` when using this layer as the\n *   first layer in a model.\n *\n * Output shape:\n *   Same shape as the input.\n *\n * @doc {\n *   heading: 'Layers',\n *   subheading: 'Advanced Activation',\n *   namespace: 'layers'\n * }\n */\n\nexport function leakyReLU(args) {\n  return new LeakyReLU(args);\n}\n/**\n * Parameterized version of a leaky rectified linear unit.\n *\n * It follows\n * `f(x) = alpha * x for x < 0.`\n * `f(x) = x for x >= 0.`\n * wherein `alpha` is a trainable weight.\n *\n * Input shape:\n *   Arbitrary. Use the configuration `inputShape` when using this layer as the\n *   first layer in a model.\n *\n * Output shape:\n *   Same shape as the input.\n *\n * @doc {\n *   heading: 'Layers',\n *   subheading: 'Advanced Activation',\n *   namespace: 'layers'\n * }\n */\n\nexport function prelu(args) {\n  return new PReLU(args);\n}\n/**\n * Softmax activation layer.\n *\n * Input shape:\n *   Arbitrary. Use the configuration `inputShape` when using this layer as the\n *   first layer in a model.\n *\n * Output shape:\n *   Same shape as the input.\n *\n * @doc {\n *   heading: 'Layers',\n *   subheading: 'Advanced Activation',\n *   namespace: 'layers'\n * }\n */\n\nexport function softmax(args) {\n  return new Softmax(args);\n}\n/**\n * Thresholded Rectified Linear Unit.\n *\n * It follows:\n * `f(x) = x for x > theta`,\n * `f(x) = 0 otherwise`.\n *\n * Input shape:\n *   Arbitrary. Use the configuration `inputShape` when using this layer as the\n *   first layer in a model.\n *\n * Output shape:\n *   Same shape as the input.\n *\n * References:\n *   - [Zero-Bias Autoencoders and the Benefits of Co-Adapting\n * Features](http://arxiv.org/abs/1402.3337)\n *\n * @doc {\n *   heading: 'Layers',\n *   subheading: 'Advanced Activation',\n *   namespace: 'layers'\n * }\n */\n\nexport function thresholdedReLU(args) {\n  return new ThresholdedReLU(args);\n} // Convolutional Layers.\n\n/**\n * 1D convolution layer (e.g., temporal convolution).\n *\n * This layer creates a convolution kernel that is convolved\n * with the layer input over a single spatial (or temporal) dimension\n * to produce a tensor of outputs.\n *\n * If `use_bias` is True, a bias vector is created and added to the outputs.\n *\n * If `activation` is not `null`, it is applied to the outputs as well.\n *\n * When using this layer as the first layer in a model, provide an\n * `inputShape` argument `Array` or `null`.\n *\n * For example, `inputShape` would be:\n * - `[10, 128]` for sequences of 10 vectors of 128-dimensional vectors\n * - `[null, 128]` for variable-length sequences of 128-dimensional vectors.\n *\n * @doc {heading: 'Layers', subheading: 'Convolutional',  namespace: 'layers'}\n */\n\nexport function conv1d(args) {\n  return new Conv1D(args);\n}\n/**\n * 2D convolution layer (e.g. spatial convolution over images).\n *\n * This layer creates a convolution kernel that is convolved\n * with the layer input to produce a tensor of outputs.\n *\n * If `useBias` is True, a bias vector is created and added to the outputs.\n *\n * If `activation` is not `null`, it is applied to the outputs as well.\n *\n * When using this layer as the first layer in a model,\n * provide the keyword argument `inputShape`\n * (Array of integers, does not include the sample axis),\n * e.g. `inputShape=[128, 128, 3]` for 128x128 RGB pictures\n * in `dataFormat='channelsLast'`.\n *\n * @doc {heading: 'Layers', subheading: 'Convolutional', namespace: 'layers'}\n */\n\nexport function conv2d(args) {\n  return new Conv2D(args);\n}\n/**\n * Transposed convolutional layer (sometimes called Deconvolution).\n *\n * The need for transposed convolutions generally arises\n * from the desire to use a transformation going in the opposite direction of\n * a normal convolution, i.e., from something that has the shape of the output\n * of some convolution to something that has the shape of its input while\n * maintaining a connectivity pattern that is compatible with said\n * convolution.\n *\n * When using this layer as the first layer in a model, provide the\n * configuration `inputShape` (`Array` of integers, does not include the\n * sample axis), e.g., `inputShape: [128, 128, 3]` for 128x128 RGB pictures in\n * `dataFormat: 'channelsLast'`.\n *\n * Input shape:\n *   4D tensor with shape:\n *   `[batch, channels, rows, cols]` if `dataFormat` is `'channelsFirst'`.\n *   or 4D tensor with shape\n *   `[batch, rows, cols, channels]` if `dataFormat` is `'channelsLast`.\n *\n * Output shape:\n *   4D tensor with shape:\n *   `[batch, filters, newRows, newCols]` if `dataFormat` is\n * `'channelsFirst'`. or 4D tensor with shape:\n *   `[batch, newRows, newCols, filters]` if `dataFormat` is `'channelsLast'`.\n *\n * References:\n *   - [A guide to convolution arithmetic for deep\n * learning](https://arxiv.org/abs/1603.07285v1)\n *   - [Deconvolutional\n * Networks](http://www.matthewzeiler.com/pubs/cvpr2010/cvpr2010.pdf)\n *\n * @doc {heading: 'Layers', subheading: 'Convolutional', namespace: 'layers'}\n */\n\nexport function conv2dTranspose(args) {\n  return new Conv2DTranspose(args);\n}\n/**\n * 3D convolution layer (e.g. spatial convolution over volumes).\n *\n * This layer creates a convolution kernel that is convolved\n * with the layer input to produce a tensor of outputs.\n *\n * If `useBias` is True, a bias vector is created and added to the outputs.\n *\n * If `activation` is not `null`, it is applied to the outputs as well.\n *\n * When using this layer as the first layer in a model,\n * provide the keyword argument `inputShape`\n * (Array of integers, does not include the sample axis),\n * e.g. `inputShape=[128, 128, 128, 1]` for 128x128x128 grayscale volumes\n * in `dataFormat='channelsLast'`.\n *\n * @doc {heading: 'Layers', subheading: 'Convolutional', namespace: 'layers'}\n */\n\nexport function conv3d(args) {\n  return new Conv3D(args);\n}\nexport function conv3dTranspose(args) {\n  return new Conv3DTranspose(args);\n}\n/**\n * Depthwise separable 2D convolution.\n *\n * Separable convolution consists of first performing\n * a depthwise spatial convolution\n * (which acts on each input channel separately)\n * followed by a pointwise convolution which mixes together the resulting\n * output channels. The `depthMultiplier` argument controls how many\n * output channels are generated per input channel in the depthwise step.\n *\n * Intuitively, separable convolutions can be understood as\n * a way to factorize a convolution kernel into two smaller kernels,\n * or as an extreme version of an Inception block.\n *\n * Input shape:\n *   4D tensor with shape:\n *     `[batch, channels, rows, cols]` if data_format='channelsFirst'\n *   or 4D tensor with shape:\n *     `[batch, rows, cols, channels]` if data_format='channelsLast'.\n *\n * Output shape:\n *   4D tensor with shape:\n *     `[batch, filters, newRows, newCols]` if data_format='channelsFirst'\n *   or 4D tensor with shape:\n *     `[batch, newRows, newCols, filters]` if data_format='channelsLast'.\n *     `rows` and `cols` values might have changed due to padding.\n *\n * @doc {heading: 'Layers', subheading: 'Convolutional', namespace: 'layers'}\n */\n\nexport function separableConv2d(args) {\n  return new SeparableConv2D(args);\n}\n/**\n * Cropping layer for 2D input (e.g., image).\n *\n * This layer can crop an input\n * at the top, bottom, left and right side of an image tensor.\n *\n * Input shape:\n *   4D tensor with shape:\n *   - If `dataFormat` is `\"channelsLast\"`:\n *     `[batch, rows, cols, channels]`\n *   - If `data_format` is `\"channels_first\"`:\n *     `[batch, channels, rows, cols]`.\n *\n * Output shape:\n *   4D with shape:\n *   - If `dataFormat` is `\"channelsLast\"`:\n *     `[batch, croppedRows, croppedCols, channels]`\n *    - If `dataFormat` is `\"channelsFirst\"`:\n *     `[batch, channels, croppedRows, croppedCols]`.\n *\n * Examples\n * ```js\n *\n * const model = tf.sequential();\n * model.add(tf.layers.cropping2D({cropping:[[2, 2], [2, 2]],\n *                                inputShape: [128, 128, 3]}));\n * //now output shape is [batch, 124, 124, 3]\n * ```\n *\n * @doc {heading: 'Layers', subheading: 'Convolutional', namespace: 'layers'}\n */\n\nexport function cropping2D(args) {\n  return new Cropping2D(args);\n}\n/**\n * Upsampling layer for 2D inputs.\n *\n * Repeats the rows and columns of the data\n * by size[0] and size[1] respectively.\n *\n *\n * Input shape:\n *    4D tensor with shape:\n *     - If `dataFormat` is `\"channelsLast\"`:\n *         `[batch, rows, cols, channels]`\n *     - If `dataFormat` is `\"channelsFirst\"`:\n *        `[batch, channels, rows, cols]`\n *\n * Output shape:\n *     4D tensor with shape:\n *     - If `dataFormat` is `\"channelsLast\"`:\n *        `[batch, upsampledRows, upsampledCols, channels]`\n *     - If `dataFormat` is `\"channelsFirst\"`:\n *         `[batch, channels, upsampledRows, upsampledCols]`\n *\n *\n * @doc {heading: 'Layers', subheading: 'Convolutional', namespace: 'layers'}\n */\n\nexport function upSampling2d(args) {\n  return new UpSampling2D(args);\n} // Convolutional(depthwise) Layers.\n\n/**\n * Depthwise separable 2D convolution.\n *\n * Depthwise Separable convolutions consists in performing just the first step\n * in a depthwise spatial convolution (which acts on each input channel\n * separately). The `depthMultplier` argument controls how many output channels\n * are generated per input channel in the depthwise step.\n *\n * @doc {heading: 'Layers', subheading: 'Convolutional', namespace: 'layers'}\n */\n\nexport function depthwiseConv2d(args) {\n  return new DepthwiseConv2D(args);\n} // Basic Layers.\n\n/**\n * Applies an activation function to an output.\n *\n * This layer applies element-wise activation function.  Other layers, notably\n * `dense` can also apply activation functions.  Use this isolated activation\n * function to extract the values before and after the\n * activation. For instance:\n *\n * ```js\n * const input = tf.input({shape: [5]});\n * const denseLayer = tf.layers.dense({units: 1});\n * const activationLayer = tf.layers.activation({activation: 'relu6'});\n *\n * // Obtain the output symbolic tensors by applying the layers in order.\n * const denseOutput = denseLayer.apply(input);\n * const activationOutput = activationLayer.apply(denseOutput);\n *\n * // Create the model based on the inputs.\n * const model = tf.model({\n *     inputs: input,\n *     outputs: [denseOutput, activationOutput]\n * });\n *\n * // Collect both outputs and print separately.\n * const [denseOut, activationOut] = model.predict(tf.randomNormal([6, 5]));\n * denseOut.print();\n * activationOut.print();\n * ```\n *\n * @doc {heading: 'Layers', subheading: 'Basic', namespace: 'layers'}\n */\n\nexport function activation(args) {\n  return new Activation(args);\n}\n/**\n * Creates a dense (fully connected) layer.\n *\n * This layer implements the operation:\n *   `output = activation(dot(input, kernel) + bias)`\n *\n * `activation` is the element-wise activation function\n *   passed as the `activation` argument.\n *\n * `kernel` is a weights matrix created by the layer.\n *\n * `bias` is a bias vector created by the layer (only applicable if `useBias`\n * is `true`).\n *\n * **Input shape:**\n *\n *   nD `tf.Tensor` with shape: `(batchSize, ..., inputDim)`.\n *\n *   The most common situation would be\n *   a 2D input with shape `(batchSize, inputDim)`.\n *\n * **Output shape:**\n *\n *   nD tensor with shape: `(batchSize, ..., units)`.\n *\n *   For instance, for a 2D input with shape `(batchSize, inputDim)`,\n *   the output would have shape `(batchSize, units)`.\n *\n * Note: if the input to the layer has a rank greater than 2, then it is\n * flattened prior to the initial dot product with the kernel.\n *\n * @doc {heading: 'Layers', subheading: 'Basic', namespace: 'layers'}\n */\n\nexport function dense(args) {\n  return new Dense(args);\n}\n/**\n * Applies\n * [dropout](http://www.cs.toronto.edu/~rsalakhu/papers/srivastava14a.pdf) to\n * the input.\n *\n * Dropout consists in randomly setting a fraction `rate` of input units to 0 at\n * each update during training time, which helps prevent overfitting.\n *\n * @doc {heading: 'Layers', subheading: 'Basic', namespace: 'layers'}\n */\n\nexport function dropout(args) {\n  return new Dropout(args);\n}\n/**\n * Spatial 1D version of Dropout.\n *\n * This Layer type performs the same function as the Dropout layer, but it drops\n * entire 1D feature maps instead of individual elements. For example, if an\n * input example consists of 3 timesteps and the feature map for each timestep\n * has a size of 4, a `spatialDropout1d` layer may zero out the feature maps\n * of the 1st timesteps and 2nd timesteps completely while sparing all feature\n * elements of the 3rd timestep.\n *\n * If adjacent frames (timesteps) are strongly correlated (as is normally the\n * case in early convolution layers), regular dropout will not regularize the\n * activation and will otherwise just result in merely an effective learning\n * rate decrease. In this case, `spatialDropout1d` will help promote\n * independence among feature maps and should be used instead.\n *\n * **Arguments:**\n *   rate: A floating-point number >=0 and <=1. Fraction of the input elements\n *     to drop.\n *\n * **Input shape:**\n *   3D tensor with shape `(samples, timesteps, channels)`.\n *\n * **Output shape:**\n *   Same as the input shape.\n *\n * References:\n *   - [Efficient Object Localization Using Convolutional\n *      Networks](https://arxiv.org/abs/1411.4280)\n *\n * @doc {heading: 'Layers', subheading: 'Basic', namespace: 'layers'}\n */\n\nexport function spatialDropout1d(args) {\n  return new SpatialDropout1D(args);\n}\n/**\n * Flattens the input. Does not affect the batch size.\n *\n * A `Flatten` layer flattens each batch in its inputs to 1D (making the output\n * 2D).\n *\n * For example:\n *\n * ```js\n * const input = tf.input({shape: [4, 3]});\n * const flattenLayer = tf.layers.flatten();\n * // Inspect the inferred output shape of the flatten layer, which\n * // equals `[null, 12]`. The 2nd dimension is 4 * 3, i.e., the result of the\n * // flattening. (The 1st dimension is the undermined batch size.)\n * console.log(JSON.stringify(flattenLayer.apply(input).shape));\n * ```\n *\n * @doc {heading: 'Layers', subheading: 'Basic', namespace: 'layers'}\n */\n\nexport function flatten(args) {\n  return new Flatten(args);\n}\n/**\n * Repeats the input n times in a new dimension.\n *\n * ```js\n *  const model = tf.sequential();\n *  model.add(tf.layers.repeatVector({n: 4, inputShape: [2]}));\n *  const x = tf.tensor2d([[10, 20]]);\n *  // Use the model to do inference on a data point the model hasn't see\n *  model.predict(x).print();\n *  // output shape is now [batch, 2, 4]\n * ```\n *\n * @doc {heading: 'Layers', subheading: 'Basic', namespace: 'layers'}\n */\n\nexport function repeatVector(args) {\n  return new RepeatVector(args);\n}\n/**\n * Reshapes an input to a certain shape.\n *\n * ```js\n * const input = tf.input({shape: [4, 3]});\n * const reshapeLayer = tf.layers.reshape({targetShape: [2, 6]});\n * // Inspect the inferred output shape of the Reshape layer, which\n * // equals `[null, 2, 6]`. (The 1st dimension is the undermined batch size.)\n * console.log(JSON.stringify(reshapeLayer.apply(input).shape));\n * ```\n *\n * Input shape:\n *   Arbitrary, although all dimensions in the input shape must be fixed.\n *   Use the configuration `inputShape` when using this layer as the\n *   first layer in a model.\n *\n *\n * Output shape:\n *   [batchSize, targetShape[0], targetShape[1], ...,\n *    targetShape[targetShape.length - 1]].\n *\n * @doc {heading: 'Layers', subheading: 'Basic', namespace: 'layers'}\n */\n\nexport function reshape(args) {\n  return new Reshape(args);\n}\n/**\n * Permutes the dimensions of the input according to a given pattern.\n *\n * Useful for, e.g., connecting RNNs and convnets together.\n *\n * Example:\n *\n * ```js\n * const model = tf.sequential();\n * model.add(tf.layers.permute({\n *   dims: [2, 1],\n *   inputShape: [10, 64]\n * }));\n * console.log(model.outputShape);\n * // Now model's output shape is [null, 64, 10], where null is the\n * // unpermuted sample (batch) dimension.\n * ```\n *\n * Input shape:\n *   Arbitrary. Use the configuration field `inputShape` when using this\n *   layer as the first layer in a model.\n *\n * Output shape:\n *   Same rank as the input shape, but with the dimensions re-ordered (i.e.,\n *   permuted) according to the `dims` configuration of this layer.\n *\n * @doc {heading: 'Layers', subheading: 'Basic', namespace: 'layers'}\n */\n\nexport function permute(args) {\n  return new Permute(args);\n}\n/**\n * Maps positive integers (indices) into dense vectors of fixed size.\n * eg. [[4], [20]] -> [[0.25, 0.1], [0.6, -0.2]]\n *\n * **Input shape:** 2D tensor with shape: `[batchSize, sequenceLength]`.\n *\n * **Output shape:** 3D tensor with shape: `[batchSize, sequenceLength,\n * outputDim]`.\n *\n * @doc {heading: 'Layers', subheading: 'Basic', namespace: 'layers'}\n */\n\nexport function embedding(args) {\n  return new Embedding(args);\n} // Merge Layers.\n\n/**\n * Layer that performs element-wise addition on an `Array` of inputs.\n *\n * It takes as input a list of tensors, all of the same shape, and returns a\n * single tensor (also of the same shape). The inputs are specified as an\n * `Array` when the `apply` method of the `Add` layer instance is called. For\n * example:\n *\n * ```js\n * const input1 = tf.input({shape: [2, 2]});\n * const input2 = tf.input({shape: [2, 2]});\n * const addLayer = tf.layers.add();\n * const sum = addLayer.apply([input1, input2]);\n * console.log(JSON.stringify(sum.shape));\n * // You get [null, 2, 2], with the first dimension as the undetermined batch\n * // dimension.\n * ```\n *\n * @doc {heading: 'Layers', subheading: 'Merge', namespace: 'layers'}\n */\n\nexport function add(args) {\n  return new Add(args);\n}\n/**\n * Layer that performs element-wise averaging on an `Array` of inputs.\n *\n * It takes as input a list of tensors, all of the same shape, and returns a\n * single tensor (also of the same shape). For example:\n *\n * ```js\n * const input1 = tf.input({shape: [2, 2]});\n * const input2 = tf.input({shape: [2, 2]});\n * const averageLayer = tf.layers.average();\n * const average = averageLayer.apply([input1, input2]);\n * console.log(JSON.stringify(average.shape));\n * // You get [null, 2, 2], with the first dimension as the undetermined batch\n * // dimension.\n * ```\n *\n * @doc {heading: 'Layers', subheading: 'Merge', namespace: 'layers'}\n */\n\nexport function average(args) {\n  return new Average(args);\n}\n/**\n * Layer that concatenates an `Array` of inputs.\n *\n * It takes a list of tensors, all of the same shape except for the\n * concatenation axis, and returns a single tensor, the concatenation\n * of all inputs. For example:\n *\n * ```js\n * const input1 = tf.input({shape: [2, 2]});\n * const input2 = tf.input({shape: [2, 3]});\n * const concatLayer = tf.layers.concatenate();\n * const output = concatLayer.apply([input1, input2]);\n * console.log(JSON.stringify(output.shape));\n * // You get [null, 2, 5], with the first dimension as the undetermined batch\n * // dimension. The last dimension (5) is the result of concatenating the\n * // last dimensions of the inputs (2 and 3).\n * ```\n *\n * @doc {heading: 'Layers', subheading: 'Merge', namespace: 'layers'}\n */\n\nexport function concatenate(args) {\n  return new Concatenate(args);\n}\n/**\n * Layer that computes the element-wise maximum an `Array` of inputs.\n *\n * It takes as input a list of tensors, all of the same shape and returns a\n * single tensor (also of the same shape). For example:\n *\n * ```js\n * const input1 = tf.input({shape: [2, 2]});\n * const input2 = tf.input({shape: [2, 2]});\n * const maxLayer = tf.layers.maximum();\n * const max = maxLayer.apply([input1, input2]);\n * console.log(JSON.stringify(max.shape));\n * // You get [null, 2, 2], with the first dimension as the undetermined batch\n * // dimension.\n * ```\n *\n * @doc {heading: 'Layers', subheading: 'Merge', namespace: 'layers'}\n */\n\nexport function maximum(args) {\n  return new Maximum(args);\n}\n/**\n * Layer that computes the element-wise minimum of an `Array` of inputs.\n *\n * It takes as input a list of tensors, all of the same shape and returns a\n * single tensor (also of the same shape). For example:\n *\n * ```js\n * const input1 = tf.input({shape: [2, 2]});\n * const input2 = tf.input({shape: [2, 2]});\n * const minLayer = tf.layers.minimum();\n * const min = minLayer.apply([input1, input2]);\n * console.log(JSON.stringify(min.shape));\n * // You get [null, 2, 2], with the first dimension as the undetermined batch\n * // dimension.\n * ```\n *\n * @doc {heading: 'Layers', subheading: 'Merge', namespace: 'layers'}\n */\n\nexport function minimum(args) {\n  return new Minimum(args);\n}\n/**\n * Layer that multiplies (element-wise) an `Array` of inputs.\n *\n * It takes as input an Array of tensors, all of the same\n * shape, and returns a single tensor (also of the same shape).\n * For example:\n *\n * ```js\n * const input1 = tf.input({shape: [2, 2]});\n * const input2 = tf.input({shape: [2, 2]});\n * const input3 = tf.input({shape: [2, 2]});\n * const multiplyLayer = tf.layers.multiply();\n * const product = multiplyLayer.apply([input1, input2, input3]);\n * console.log(product.shape);\n * // You get [null, 2, 2], with the first dimension as the undetermined batch\n * // dimension.\n *\n * @doc {heading: 'Layers', subheading: 'Merge', namespace: 'layers'}\n */\n\nexport function multiply(args) {\n  return new Multiply(args);\n}\n/**\n * Layer that computes a dot product between samples in two tensors.\n *\n * E.g., if applied to a list of two tensors `a` and `b` both of shape\n * `[batchSize, n]`, the output will be a tensor of shape `[batchSize, 1]`,\n * where each entry at index `[i, 0]` will be the dot product between\n * `a[i, :]` and `b[i, :]`.\n *\n * Example:\n *\n * ```js\n * const dotLayer = tf.layers.dot({axes: -1});\n * const x1 = tf.tensor2d([[10, 20], [30, 40]]);\n * const x2 = tf.tensor2d([[-1, -2], [-3, -4]]);\n *\n * // Invoke the layer's apply() method in eager (imperative) mode.\n * const y = dotLayer.apply([x1, x2]);\n * y.print();\n * ```\n *\n * @doc {heading: 'Layers', subheading: 'Merge', namespace: 'layers'}\n */\n\nexport function dot(args) {\n  return new Dot(args);\n} // Normalization Layers.\n\n/**\n * Batch normalization layer (Ioffe and Szegedy, 2014).\n *\n * Normalize the activations of the previous layer at each batch,\n * i.e. applies a transformation that maintains the mean activation\n * close to 0 and the activation standard deviation close to 1.\n *\n * Input shape:\n *   Arbitrary. Use the keyword argument `inputShape` (Array of integers, does\n *   not include the sample axis) when calling the constructor of this class,\n *   if this layer is used as a first layer in a model.\n *\n * Output shape:\n *   Same shape as input.\n *\n * References:\n *   - [Batch Normalization: Accelerating Deep Network Training by Reducing\n * Internal Covariate Shift](https://arxiv.org/abs/1502.03167)\n *\n * @doc {heading: 'Layers', subheading: 'Normalization', namespace: 'layers'}\n */\n\nexport function batchNormalization(args) {\n  return new BatchNormalization(args);\n}\n/**\n * Layer-normalization layer (Ba et al., 2016).\n *\n * Normalizes the activations of the previous layer for each given example in a\n * batch independently, instead of across a batch like in `batchNormalization`.\n * In other words, this layer applies a transformation that maintanis the mean\n * activation within each example close to0 and activation variance close to 1.\n *\n * Input shape:\n *   Arbitrary. Use the argument `inputShape` when using this layer as the first\n *   layer in a model.\n *\n * Output shape:\n *   Same as input.\n *\n * References:\n *   - [Layer Normalization](https://arxiv.org/abs/1607.06450)\n *\n * @doc {heading: 'Layers', subheading: 'Normalization', namespace: 'layers'}\n */\n\nexport function layerNormalization(args) {\n  return new LayerNormalization(args);\n} // Padding Layers.\n\n/**\n * Zero-padding layer for 2D input (e.g., image).\n *\n * This layer can add rows and columns of zeros\n * at the top, bottom, left and right side of an image tensor.\n *\n * Input shape:\n *   4D tensor with shape:\n *   - If `dataFormat` is `\"channelsLast\"`:\n *     `[batch, rows, cols, channels]`\n *   - If `data_format` is `\"channels_first\"`:\n *     `[batch, channels, rows, cols]`.\n *\n * Output shape:\n *   4D with shape:\n *   - If `dataFormat` is `\"channelsLast\"`:\n *     `[batch, paddedRows, paddedCols, channels]`\n *    - If `dataFormat` is `\"channelsFirst\"`:\n *     `[batch, channels, paddedRows, paddedCols]`.\n *\n * @doc {heading: 'Layers', subheading: 'Padding', namespace: 'layers'}\n */\n\nexport function zeroPadding2d(args) {\n  return new ZeroPadding2D(args);\n} // Pooling Layers.\n\n/**\n * Average pooling operation for spatial data.\n *\n * Input shape: `[batchSize, inLength, channels]`\n *\n * Output shape: `[batchSize, pooledLength, channels]`\n *\n * `tf.avgPool1d` is an alias.\n *\n * @doc {heading: 'Layers', subheading: 'Pooling', namespace: 'layers'}\n */\n\nexport function averagePooling1d(args) {\n  return new AveragePooling1D(args);\n}\nexport function avgPool1d(args) {\n  return averagePooling1d(args);\n} // For backwards compatibility.\n// See https://github.com/tensorflow/tfjs/issues/152\n\nexport function avgPooling1d(args) {\n  return averagePooling1d(args);\n}\n/**\n * Average pooling operation for spatial data.\n *\n * Input shape:\n *  - If `dataFormat === CHANNEL_LAST`:\n *      4D tensor with shape:\n *      `[batchSize, rows, cols, channels]`\n *  - If `dataFormat === CHANNEL_FIRST`:\n *      4D tensor with shape:\n *      `[batchSize, channels, rows, cols]`\n *\n * Output shape\n *  - If `dataFormat === CHANNEL_LAST`:\n *      4D tensor with shape:\n *      `[batchSize, pooleRows, pooledCols, channels]`\n *  - If `dataFormat === CHANNEL_FIRST`:\n *      4D tensor with shape:\n *      `[batchSize, channels, pooleRows, pooledCols]`\n *\n * `tf.avgPool2d` is an alias.\n *\n * @doc {heading: 'Layers', subheading: 'Pooling', namespace: 'layers'}\n */\n\nexport function averagePooling2d(args) {\n  return new AveragePooling2D(args);\n}\nexport function avgPool2d(args) {\n  return averagePooling2d(args);\n} // For backwards compatibility.\n// See https://github.com/tensorflow/tfjs/issues/152\n\nexport function avgPooling2d(args) {\n  return averagePooling2d(args);\n}\n/**\n * Average pooling operation for 3D data.\n *\n * Input shape\n *   - If `dataFormat === channelsLast`:\n *       5D tensor with shape:\n *       `[batchSize, depths, rows, cols, channels]`\n *   - If `dataFormat === channelsFirst`:\n *      4D tensor with shape:\n *       `[batchSize, channels, depths, rows, cols]`\n *\n * Output shape\n *   - If `dataFormat=channelsLast`:\n *       5D tensor with shape:\n *       `[batchSize, pooledDepths, pooledRows, pooledCols, channels]`\n *   - If `dataFormat=channelsFirst`:\n *       5D tensor with shape:\n *       `[batchSize, channels, pooledDepths, pooledRows, pooledCols]`\n *\n * @doc {heading: 'Layers', subheading: 'Pooling', namespace: 'layers'}\n */\n\nexport function averagePooling3d(args) {\n  return new AveragePooling3D(args);\n}\nexport function avgPool3d(args) {\n  return averagePooling3d(args);\n} // For backwards compatibility.\n// See https://github.com/tensorflow/tfjs/issues/152\n\nexport function avgPooling3d(args) {\n  return averagePooling3d(args);\n}\n/**\n * Global average pooling operation for temporal data.\n *\n * Input Shape: 3D tensor with shape: `[batchSize, steps, features]`.\n *\n * Output Shape:2D tensor with shape: `[batchSize, features]`.\n *\n * @doc {heading: 'Layers', subheading: 'Pooling', namespace: 'layers'}\n */\n\nexport function globalAveragePooling1d(args) {\n  return new GlobalAveragePooling1D(args);\n}\n/**\n * Global average pooling operation for spatial data.\n *\n * Input shape:\n *   - If `dataFormat` is `CHANNEL_LAST`:\n *       4D tensor with shape: `[batchSize, rows, cols, channels]`.\n *   - If `dataFormat` is `CHANNEL_FIRST`:\n *       4D tensor with shape: `[batchSize, channels, rows, cols]`.\n *\n * Output shape:\n *   2D tensor with shape: `[batchSize, channels]`.\n *\n * @doc {heading: 'Layers', subheading: 'Pooling', namespace: 'layers'}\n */\n\nexport function globalAveragePooling2d(args) {\n  return new GlobalAveragePooling2D(args);\n}\n/**\n * Global max pooling operation for temporal data.\n *\n * Input Shape: 3D tensor with shape: `[batchSize, steps, features]`.\n *\n * Output Shape:2D tensor with shape: `[batchSize, features]`.\n *\n * @doc {heading: 'Layers', subheading: 'Pooling', namespace: 'layers'}\n */\n\nexport function globalMaxPooling1d(args) {\n  return new GlobalMaxPooling1D(args);\n}\n/**\n * Global max pooling operation for spatial data.\n *\n * Input shape:\n *   - If `dataFormat` is `CHANNEL_LAST`:\n *       4D tensor with shape: `[batchSize, rows, cols, channels]`.\n *   - If `dataFormat` is `CHANNEL_FIRST`:\n *       4D tensor with shape: `[batchSize, channels, rows, cols]`.\n *\n * Output shape:\n *   2D tensor with shape: `[batchSize, channels]`.\n *\n * @doc {heading: 'Layers', subheading: 'Pooling', namespace: 'layers'}\n */\n\nexport function globalMaxPooling2d(args) {\n  return new GlobalMaxPooling2D(args);\n}\n/**\n * Max pooling operation for temporal data.\n *\n * Input shape:  `[batchSize, inLength, channels]`\n *\n * Output shape: `[batchSize, pooledLength, channels]`\n *\n * @doc {heading: 'Layers', subheading: 'Pooling', namespace: 'layers'}\n */\n\nexport function maxPooling1d(args) {\n  return new MaxPooling1D(args);\n}\n/**\n * Max pooling operation for spatial data.\n *\n * Input shape\n *   - If `dataFormat === CHANNEL_LAST`:\n *       4D tensor with shape:\n *       `[batchSize, rows, cols, channels]`\n *   - If `dataFormat === CHANNEL_FIRST`:\n *      4D tensor with shape:\n *       `[batchSize, channels, rows, cols]`\n *\n * Output shape\n *   - If `dataFormat=CHANNEL_LAST`:\n *       4D tensor with shape:\n *       `[batchSize, pooleRows, pooledCols, channels]`\n *   - If `dataFormat=CHANNEL_FIRST`:\n *       4D tensor with shape:\n *       `[batchSize, channels, pooleRows, pooledCols]`\n *\n * @doc {heading: 'Layers', subheading: 'Pooling', namespace: 'layers'}\n */\n\nexport function maxPooling2d(args) {\n  return new MaxPooling2D(args);\n}\n/**\n * Max pooling operation for 3D data.\n *\n * Input shape\n *   - If `dataFormat === channelsLast`:\n *       5D tensor with shape:\n *       `[batchSize, depths, rows, cols, channels]`\n *   - If `dataFormat === channelsFirst`:\n *      5D tensor with shape:\n *       `[batchSize, channels, depths, rows, cols]`\n *\n * Output shape\n *   - If `dataFormat=channelsLast`:\n *       5D tensor with shape:\n *       `[batchSize, pooledDepths, pooledRows, pooledCols, channels]`\n *   - If `dataFormat=channelsFirst`:\n *       5D tensor with shape:\n *       `[batchSize, channels, pooledDepths, pooledRows, pooledCols]`\n *\n * @doc {heading: 'Layers', subheading: 'Pooling', namespace: 'layers'}\n */\n\nexport function maxPooling3d(args) {\n  return new MaxPooling3D(args);\n} // Recurrent Layers.\n\n/**\n * Gated Recurrent Unit - Cho et al. 2014.\n *\n * This is an `RNN` layer consisting of one `GRUCell`. However, unlike\n * the underlying `GRUCell`, the `apply` method of `SimpleRNN` operates\n * on a sequence of inputs. The shape of the input (not including the first,\n * batch dimension) needs to be at least 2-D, with the first dimension being\n * time steps. For example:\n *\n * ```js\n * const rnn = tf.layers.gru({units: 8, returnSequences: true});\n *\n * // Create an input with 10 time steps.\n * const input = tf.input({shape: [10, 20]});\n * const output = rnn.apply(input);\n *\n * console.log(JSON.stringify(output.shape));\n * // [null, 10, 8]: 1st dimension is unknown batch size; 2nd dimension is the\n * // same as the sequence length of `input`, due to `returnSequences`: `true`;\n * // 3rd dimension is the `GRUCell`'s number of units.\n *\n * @doc {heading: 'Layers', subheading: 'Recurrent', namespace: 'layers'}\n */\n\nexport function gru(args) {\n  return new GRU(args);\n}\n/**\n * Cell class for `GRU`.\n *\n * `GRUCell` is distinct from the `RNN` subclass `GRU` in that its\n * `apply` method takes the input data of only a single time step and returns\n * the cell's output at the time step, while `GRU` takes the input data\n * over a number of time steps. For example:\n *\n * ```js\n * const cell = tf.layers.gruCell({units: 2});\n * const input = tf.input({shape: [10]});\n * const output = cell.apply(input);\n *\n * console.log(JSON.stringify(output.shape));\n * // [null, 10]: This is the cell's output at a single time step. The 1st\n * // dimension is the unknown batch size.\n * ```\n *\n * Instance(s) of `GRUCell` can be used to construct `RNN` layers. The\n * most typical use of this workflow is to combine a number of cells into a\n * stacked RNN cell (i.e., `StackedRNNCell` internally) and use it to create an\n * RNN. For example:\n *\n * ```js\n * const cells = [\n *   tf.layers.gruCell({units: 4}),\n *   tf.layers.gruCell({units: 8}),\n * ];\n * const rnn = tf.layers.rnn({cell: cells, returnSequences: true});\n *\n * // Create an input with 10 time steps and a length-20 vector at each step.\n * const input = tf.input({shape: [10, 20]});\n * const output = rnn.apply(input);\n *\n * console.log(JSON.stringify(output.shape));\n * // [null, 10, 8]: 1st dimension is unknown batch size; 2nd dimension is the\n * // same as the sequence length of `input`, due to `returnSequences`: `true`;\n * // 3rd dimension is the last `gruCell`'s number of units.\n * ```\n *\n * To create an `RNN` consisting of only *one* `GRUCell`, use the\n * `tf.layers.gru`.\n *\n * @doc {heading: 'Layers', subheading: 'Recurrent', namespace: 'layers'}\n */\n\nexport function gruCell(args) {\n  return new GRUCell(args);\n}\n/**\n * Long-Short Term Memory layer - Hochreiter 1997.\n *\n * This is an `RNN` layer consisting of one `LSTMCell`. However, unlike\n * the underlying `LSTMCell`, the `apply` method of `LSTM` operates\n * on a sequence of inputs. The shape of the input (not including the first,\n * batch dimension) needs to be at least 2-D, with the first dimension being\n * time steps. For example:\n *\n * ```js\n * const lstm = tf.layers.lstm({units: 8, returnSequences: true});\n *\n * // Create an input with 10 time steps.\n * const input = tf.input({shape: [10, 20]});\n * const output = lstm.apply(input);\n *\n * console.log(JSON.stringify(output.shape));\n * // [null, 10, 8]: 1st dimension is unknown batch size; 2nd dimension is the\n * // same as the sequence length of `input`, due to `returnSequences`: `true`;\n * // 3rd dimension is the `LSTMCell`'s number of units.\n *\n * @doc {heading: 'Layers', subheading: 'Recurrent', namespace: 'layers'}\n */\n\nexport function lstm(args) {\n  return new LSTM(args);\n}\n/**\n * Cell class for `LSTM`.\n *\n * `LSTMCell` is distinct from the `RNN` subclass `LSTM` in that its\n * `apply` method takes the input data of only a single time step and returns\n * the cell's output at the time step, while `LSTM` takes the input data\n * over a number of time steps. For example:\n *\n * ```js\n * const cell = tf.layers.lstmCell({units: 2});\n * const input = tf.input({shape: [10]});\n * const output = cell.apply(input);\n *\n * console.log(JSON.stringify(output.shape));\n * // [null, 10]: This is the cell's output at a single time step. The 1st\n * // dimension is the unknown batch size.\n * ```\n *\n * Instance(s) of `LSTMCell` can be used to construct `RNN` layers. The\n * most typical use of this workflow is to combine a number of cells into a\n * stacked RNN cell (i.e., `StackedRNNCell` internally) and use it to create an\n * RNN. For example:\n *\n * ```js\n * const cells = [\n *   tf.layers.lstmCell({units: 4}),\n *   tf.layers.lstmCell({units: 8}),\n * ];\n * const rnn = tf.layers.rnn({cell: cells, returnSequences: true});\n *\n * // Create an input with 10 time steps and a length-20 vector at each step.\n * const input = tf.input({shape: [10, 20]});\n * const output = rnn.apply(input);\n *\n * console.log(JSON.stringify(output.shape));\n * // [null, 10, 8]: 1st dimension is unknown batch size; 2nd dimension is the\n * // same as the sequence length of `input`, due to `returnSequences`: `true`;\n * // 3rd dimension is the last `lstmCell`'s number of units.\n * ```\n *\n * To create an `RNN` consisting of only *one* `LSTMCell`, use the\n * `tf.layers.lstm`.\n *\n * @doc {heading: 'Layers', subheading: 'Recurrent', namespace: 'layers'}\n */\n\nexport function lstmCell(args) {\n  return new LSTMCell(args);\n}\n/**\n * Fully-connected RNN where the output is to be fed back to input.\n *\n * This is an `RNN` layer consisting of one `SimpleRNNCell`. However, unlike\n * the underlying `SimpleRNNCell`, the `apply` method of `SimpleRNN` operates\n * on a sequence of inputs. The shape of the input (not including the first,\n * batch dimension) needs to be at least 2-D, with the first dimension being\n * time steps. For example:\n *\n * ```js\n * const rnn = tf.layers.simpleRNN({units: 8, returnSequences: true});\n *\n * // Create an input with 10 time steps.\n * const input = tf.input({shape: [10, 20]});\n * const output = rnn.apply(input);\n *\n * console.log(JSON.stringify(output.shape));\n * // [null, 10, 8]: 1st dimension is unknown batch size; 2nd dimension is the\n * // same as the sequence length of `input`, due to `returnSequences`: `true`;\n * // 3rd dimension is the `SimpleRNNCell`'s number of units.\n * ```\n *\n * @doc {heading: 'Layers', subheading: 'Recurrent', namespace: 'layers'}\n */\n\nexport function simpleRNN(args) {\n  return new SimpleRNN(args);\n}\n/**\n * Cell class for `SimpleRNN`.\n *\n * `SimpleRNNCell` is distinct from the `RNN` subclass `SimpleRNN` in that its\n * `apply` method takes the input data of only a single time step and returns\n * the cell's output at the time step, while `SimpleRNN` takes the input data\n * over a number of time steps. For example:\n *\n * ```js\n * const cell = tf.layers.simpleRNNCell({units: 2});\n * const input = tf.input({shape: [10]});\n * const output = cell.apply(input);\n *\n * console.log(JSON.stringify(output.shape));\n * // [null, 10]: This is the cell's output at a single time step. The 1st\n * // dimension is the unknown batch size.\n * ```\n *\n * Instance(s) of `SimpleRNNCell` can be used to construct `RNN` layers. The\n * most typical use of this workflow is to combine a number of cells into a\n * stacked RNN cell (i.e., `StackedRNNCell` internally) and use it to create an\n * RNN. For example:\n *\n * ```js\n * const cells = [\n *   tf.layers.simpleRNNCell({units: 4}),\n *   tf.layers.simpleRNNCell({units: 8}),\n * ];\n * const rnn = tf.layers.rnn({cell: cells, returnSequences: true});\n *\n * // Create an input with 10 time steps and a length-20 vector at each step.\n * const input = tf.input({shape: [10, 20]});\n * const output = rnn.apply(input);\n *\n * console.log(JSON.stringify(output.shape));\n * // [null, 10, 8]: 1st dimension is unknown batch size; 2nd dimension is the\n * // same as the sequence length of `input`, due to `returnSequences`: `true`;\n * // 3rd dimension is the last `SimpleRNNCell`'s number of units.\n * ```\n *\n * To create an `RNN` consisting of only *one* `SimpleRNNCell`, use the\n * `tf.layers.simpleRNN`.\n *\n * @doc {heading: 'Layers', subheading: 'Recurrent', namespace: 'layers'}\n */\n\nexport function simpleRNNCell(args) {\n  return new SimpleRNNCell(args);\n}\n/**\n * Convolutional LSTM layer - Xingjian Shi 2015.\n *\n * This is an `ConvRNN2D` layer consisting of one `ConvLSTM2DCell`. However,\n * unlike the underlying `ConvLSTM2DCell`, the `apply` method of `ConvLSTM2D`\n * operates on a sequence of inputs. The shape of the input (not including the\n * first, batch dimension) needs to be 4-D, with the first dimension being time\n * steps. For example:\n *\n * ```js\n * const filters = 3;\n * const kernelSize = 3;\n *\n * const batchSize = 4;\n * const sequenceLength = 2;\n * const size = 5;\n * const channels = 3;\n *\n * const inputShape = [batchSize, sequenceLength, size, size, channels];\n * const input = tf.ones(inputShape);\n *\n * const layer = tf.layers.convLstm2d({filters, kernelSize});\n *\n * const output = layer.apply(input);\n * ```\n */\n\n/** @doc {heading: 'Layers', subheading: 'Recurrent', namespace: 'layers'} */\n\nexport function convLstm2d(args) {\n  return new ConvLSTM2D(args);\n}\n/**\n * Cell class for `ConvLSTM2D`.\n *\n * `ConvLSTM2DCell` is distinct from the `ConvRNN2D` subclass `ConvLSTM2D` in\n * that its `call` method takes the input data of only a single time step and\n * returns the cell's output at the time step, while `ConvLSTM2D` takes the\n * input data over a number of time steps. For example:\n *\n * ```js\n * const filters = 3;\n * const kernelSize = 3;\n *\n * const sequenceLength = 1;\n * const size = 5;\n * const channels = 3;\n *\n * const inputShape = [sequenceLength, size, size, channels];\n * const input = tf.ones(inputShape);\n *\n * const cell = tf.layers.convLstm2dCell({filters, kernelSize});\n *\n * cell.build(input.shape);\n *\n * const outputSize = size - kernelSize + 1;\n * const outShape = [sequenceLength, outputSize, outputSize, filters];\n *\n * const initialH = tf.zeros(outShape);\n * const initialC = tf.zeros(outShape);\n *\n * const [o, h, c] = cell.call([input, initialH, initialC], {});\n * ```\n */\n\n/** @doc {heading: 'Layers', subheading: 'Recurrent', namespace: 'layers'} */\n\nexport function convLstm2dCell(args) {\n  return new ConvLSTM2DCell(args);\n}\n/**\n * Base class for recurrent layers.\n *\n * Input shape:\n *   3D tensor with shape `[batchSize, timeSteps, inputDim]`.\n *\n * Output shape:\n *   - if `returnState`, an Array of tensors (i.e., `tf.Tensor`s). The first\n *     tensor is the output. The remaining tensors are the states at the\n *     last time step, each with shape `[batchSize, units]`.\n *   - if `returnSequences`, the output will have shape\n *     `[batchSize, timeSteps, units]`.\n *   - else, the output will have shape `[batchSize, units]`.\n *\n * Masking:\n *   This layer supports masking for input data with a variable number\n *   of timesteps. To introduce masks to your data,\n *   use an embedding layer with the `mask_zero` parameter\n *   set to `True`.\n *\n * Notes on using statefulness in RNNs:\n *   You can set RNN layers to be 'stateful', which means that the states\n *   computed for the samples in one batch will be reused as initial states\n *   for the samples in the next batch. This assumes a one-to-one mapping\n *   between samples in different successive batches.\n *\n *   To enable statefulness:\n *     - specify `stateful: true` in the layer constructor.\n *     - specify a fixed batch size for your model, by passing\n *       if sequential model:\n *         `batchInputShape=[...]` to the first layer in your model.\n *       else for functional model with 1 or more Input layers:\n *         `batchShape=[...]` to all the first layers in your model.\n *       This is the expected shape of your inputs *including the batch size*.\n *       It should be a tuple of integers, e.g. `(32, 10, 100)`.\n *     - specify `shuffle=False` when calling fit().\n *\n *   To reset the states of your model, call `.resetStates()` on either\n *   a specific layer, or on your entire model.\n *\n * Note on specifying the initial state of RNNs\n *   You can specify the initial state of RNN layers symbolically by\n *   calling them with the option `initialState`. The value of\n *   `initialState` should be a tensor or list of tensors representing\n *   the initial state of the RNN layer.\n *\n *   You can specify the initial state of RNN layers numerically by\n *   calling `resetStates` with the keyword argument `states`. The value of\n *   `states` should be a numpy array or list of numpy arrays representing\n *   the initial state of the RNN layer.\n *\n * Note on passing external constants to RNNs\n *   You can pass \"external\" constants to the cell using the `constants`\n *   keyword argument of `RNN.call` method. This requires that the `cell.call`\n *   method accepts the same keyword argument `constants`. Such constants\n *   can be used to conditon the cell transformation on additional static inputs\n *   (not changing over time), a.k.a an attention mechanism.\n *\n * @doc {heading: 'Layers', subheading: 'Recurrent', namespace: 'layers'}\n */\n\nexport function rnn(args) {\n  return new RNN(args);\n}\n/**\n * Wrapper allowing a stack of RNN cells to behave as a single cell.\n *\n * Used to implement efficient stacked RNNs.\n *\n * @doc {heading: 'Layers', subheading: 'Recurrent', namespace: 'layers'}\n */\n\nexport function stackedRNNCells(args) {\n  return new StackedRNNCells(args);\n} // Wrapper Layers.\n\n/** @doc {heading: 'Layers', subheading: 'Wrapper', namespace: 'layers'} */\n\nexport function bidirectional(args) {\n  return new Bidirectional(args);\n}\n/**\n * This wrapper applies a layer to every temporal slice of an input.\n *\n * The input should be at least 3D,  and the dimension of the index `1` will be\n * considered to be the temporal dimension.\n *\n * Consider a batch of 32 samples, where each sample is a sequence of 10 vectors\n * of 16 dimensions. The batch input shape of the layer is then `[32,  10,\n * 16]`, and the `inputShape`, not including the sample dimension, is\n * `[10, 16]`.\n *\n * You can then use `TimeDistributed` to apply a `Dense` layer to each of the 10\n * timesteps, independently:\n *\n * ```js\n * const model = tf.sequential();\n * model.add(tf.layers.timeDistributed({\n *   layer: tf.layers.dense({units: 8}),\n *   inputShape: [10, 16],\n * }));\n *\n * // Now model.outputShape = [null, 10, 8].\n * // The output will then have shape `[32, 10, 8]`.\n *\n * // In subsequent layers, there is no need for `inputShape`:\n * model.add(tf.layers.timeDistributed({layer: tf.layers.dense({units: 32})}));\n * console.log(JSON.stringify(model.outputs[0].shape));\n * // Now model.outputShape = [null, 10, 32].\n * ```\n *\n * The output will then have shape `[32, 10, 32]`.\n *\n * `TimeDistributed` can be used with arbitrary layers, not just `Dense`, for\n * instance a `Conv2D` layer.\n *\n * ```js\n * const model = tf.sequential();\n * model.add(tf.layers.timeDistributed({\n *   layer: tf.layers.conv2d({filters: 64, kernelSize: [3, 3]}),\n *   inputShape: [10, 299, 299, 3],\n * }));\n * console.log(JSON.stringify(model.outputs[0].shape));\n * ```\n *\n * @doc {heading: 'Layers', subheading: 'Wrapper', namespace: 'layers'}\n */\n\nexport function timeDistributed(args) {\n  return new TimeDistributed(args);\n} // Aliases for pooling.\n\nexport var globalMaxPool1d = globalMaxPooling1d;\nexport var globalMaxPool2d = globalMaxPooling2d;\nexport var maxPool1d = maxPooling1d;\nexport var maxPool2d = maxPooling2d;\nexport { Layer, RNN, RNNCell, input\n/* alias for tf.input */\n};\n/**\n * Apply additive zero-centered Gaussian noise.\n *\n * As it is a regularization layer, it is only active at training time.\n *\n * This is useful to mitigate overfitting\n * (you could see it as a form of random data augmentation).\n * Gaussian Noise (GS) is a natural choice as corruption process\n * for real valued inputs.\n *\n * # Arguments\n *     stddev: float, standard deviation of the noise distribution.\n *\n * # Input shape\n *         Arbitrary. Use the keyword argument `input_shape`\n *         (tuple of integers, does not include the samples axis)\n *         when using this layer as the first layer in a model.\n *\n * # Output shape\n *         Same shape as input.\n *\n * @doc {heading: 'Layers', subheading: 'Noise', namespace: 'layers'}\n */\n\nexport function gaussianNoise(args) {\n  return new GaussianNoise(args);\n}\n/**\n * Apply multiplicative 1-centered Gaussian noise.\n *\n * As it is a regularization layer, it is only active at training time.\n *\n * Arguments:\n *   - `rate`: float, drop probability (as with `Dropout`).\n *     The multiplicative noise will have\n *     standard deviation `sqrt(rate / (1 - rate))`.\n *\n * Input shape:\n *   Arbitrary. Use the keyword argument `inputShape`\n *   (tuple of integers, does not include the samples axis)\n *   when using this layer as the first layer in a model.\n *\n * Output shape:\n *   Same shape as input.\n *\n * References:\n *   - [Dropout: A Simple Way to Prevent Neural Networks from Overfitting](\n *      http://www.cs.toronto.edu/~rsalakhu/papers/srivastava14a.pdf)\n *\n * @doc {heading: 'Layers', subheading: 'Noise', namespace: 'layers'}\n */\n\nexport function gaussianDropout(args) {\n  return new GaussianDropout(args);\n}\n/**\n * Applies Alpha Dropout to the input.\n *\n * As it is a regularization layer, it is only active at training time.\n *\n * Alpha Dropout is a `Dropout` that keeps mean and variance of inputs\n * to their original values, in order to ensure the self-normalizing property\n * even after this dropout.\n * Alpha Dropout fits well to Scaled Exponential Linear Units\n * by randomly setting activations to the negative saturation value.\n *\n * Arguments:\n *   - `rate`: float, drop probability (as with `Dropout`).\n *     The multiplicative noise will have\n *     standard deviation `sqrt(rate / (1 - rate))`.\n *   - `noise_shape`: A 1-D `Tensor` of type `int32`, representing the\n *     shape for randomly generated keep/drop flags.\n *\n * Input shape:\n *   Arbitrary. Use the keyword argument `inputShape`\n *   (tuple of integers, does not include the samples axis)\n *   when using this layer as the first layer in a model.\n *\n * Output shape:\n *   Same shape as input.\n *\n * References:\n *   - [Self-Normalizing Neural Networks](https://arxiv.org/abs/1706.02515)\n *\n * @doc {heading: 'Layers', subheading: 'Noise', namespace: 'layers'}\n */\n\nexport function alphaDropout(args) {\n  return new AlphaDropout(args);\n}\n/**\n * Masks a sequence by using a mask value to skip timesteps.\n *\n * If all features for a given sample timestep are equal to `mask_value`,\n * then the sample timestep will be masked (skipped) in all downstream layers\n * (as long as they support masking).\n *\n * If any downstream layer does not support masking yet receives such\n * an input mask, an exception will be raised.\n *\n * Arguments:\n *   - `maskValue`: Either None or mask value to skip.\n *\n * Input shape:\n *   Arbitrary. Use the keyword argument `inputShape`\n *   (tuple of integers, does not include the samples axis)\n *   when using this layer as the first layer in a model.\n *\n * Output shape:\n *   Same shape as input.\n *\n * @doc {heading: 'Layers', subheading: 'Mask', namespace: 'layers'}\n */\n\nexport function masking(args) {\n  return new Masking(args);\n}","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\nimport * as regularizers from './regularizers'; // tslint:disable-next-line:max-line-length\n\nimport { L1L2 } from './regularizers';\n/**\n * Regularizer for L1 and L2 regularization.\n *\n * Adds a term to the loss to penalize large weights:\n * loss += sum(l1 * abs(x)) + sum(l2 * x^2)\n *\n * @doc {heading: 'Regularizers', namespace: 'regularizers'}\n */\n\nexport function l1l2(config) {\n  return new L1L2(config);\n}\n/**\n * Regularizer for L1 regularization.\n *\n * Adds a term to the loss to penalize large weights:\n * loss += sum(l1 * abs(x))\n * @param args l1 config.\n *\n * @doc {heading: 'Regularizers', namespace: 'regularizers'}\n */\n\nexport function l1(config) {\n  return regularizers.l1(config);\n}\n/**\n * Regularizer for L2 regularization.\n *\n * Adds a term to the loss to penalize large weights:\n * loss += sum(l2 * x^2)\n * @param args l2 config.\n *\n * @doc {heading: 'Regularizers', namespace: 'regularizers'}\n */\n\nexport function l2(config) {\n  return regularizers.l2(config);\n}","import _asyncToGenerator from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _regeneratorRuntime from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/* Original source: keras/callbacks.py */\nimport { BaseCallback } from './base_callbacks';\nimport { LayersModel } from './engine/training';\nimport { NotImplementedError } from './errors';\nimport { resolveScalarsInLogs } from './logs';\nexport var Callback = /*#__PURE__*/function (_BaseCallback) {\n  _inherits(Callback, _BaseCallback);\n\n  var _super = _createSuper(Callback);\n\n  function Callback() {\n    var _this;\n\n    _classCallCheck(this, Callback);\n\n    _this = _super.apply(this, arguments);\n    /** Instance of `keras.models.Model`. Reference of the model being trained. */\n\n    _this.model = null;\n    return _this;\n  }\n\n  _createClass(Callback, [{\n    key: \"setModel\",\n    value: function setModel(model) {\n      if (!(model instanceof LayersModel)) {\n        throw new Error('model must be a LayersModel, not some other Container');\n      }\n\n      this.model = model;\n    }\n  }]);\n\n  return Callback;\n}(BaseCallback);\n\nfunction less(currVal, prevVal) {\n  return currVal < prevVal;\n}\n\nfunction greater(currVal, prevVal) {\n  return currVal > prevVal;\n}\n/**\n * A Callback that stops training when a monitored quantity has stopped\n * improving.\n */\n\n\nexport var EarlyStopping = /*#__PURE__*/function (_Callback) {\n  _inherits(EarlyStopping, _Callback);\n\n  var _super2 = _createSuper(EarlyStopping);\n\n  function EarlyStopping(args) {\n    var _this2;\n\n    _classCallCheck(this, EarlyStopping);\n\n    _this2 = _super2.call(this);\n\n    if (args == null) {\n      args = {};\n    }\n\n    if (args.restoreBestWeights) {\n      throw new NotImplementedError('restoreBestWeights = True is not implemented in EarlyStopping yet.');\n    }\n\n    _this2.monitor = args.monitor || 'val_loss';\n    _this2.minDelta = Math.abs(args.minDelta || 0);\n    _this2.patience = args.patience || 0;\n    _this2.verbose = args.verbose || 0;\n    _this2.mode = args.mode || 'auto';\n    _this2.baseline = args.baseline;\n\n    if (['auto', 'min', 'max'].indexOf(_this2.mode) === -1) {\n      console.warn(\"EarlyStopping mode '\".concat(_this2.mode, \"' is invalid. \") + \"Falling back to mode 'auto'.\");\n      _this2.mode = 'auto';\n    }\n\n    if (_this2.mode === 'min') {\n      _this2.monitorFunc = less;\n    } else if (_this2.mode === 'max') {\n      _this2.monitorFunc = greater;\n    } else {\n      // For mode === 'auto'.\n      if (_this2.monitor.indexOf('acc') !== -1) {\n        _this2.monitorFunc = greater;\n      } else {\n        _this2.monitorFunc = less;\n      }\n    }\n\n    if (_this2.monitorFunc === less) {\n      _this2.minDelta *= -1;\n    }\n\n    return _this2;\n  }\n\n  _createClass(EarlyStopping, [{\n    key: \"onTrainBegin\",\n    value: function () {\n      var _onTrainBegin = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(logs) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.wait = 0;\n                this.stoppedEpoch = 0;\n\n                if (this.baseline != null) {\n                  this.best = this.baseline;\n                } else {\n                  this.best = this.monitorFunc === less ? Infinity : -Infinity;\n                }\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function onTrainBegin(_x) {\n        return _onTrainBegin.apply(this, arguments);\n      }\n\n      return onTrainBegin;\n    }()\n  }, {\n    key: \"onEpochEnd\",\n    value: function () {\n      var _onEpochEnd = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(epoch, logs) {\n        var current;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return resolveScalarsInLogs(logs);\n\n              case 2:\n                current = this.getMonitorValue(logs);\n\n                if (!(current == null)) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 5:\n                if (this.monitorFunc(current - this.minDelta, this.best)) {\n                  this.best = current;\n                  this.wait = 0; // TODO(cais): Logic for restoreBestWeights.\n                } else {\n                  this.wait++;\n\n                  if (this.wait >= this.patience) {\n                    this.stoppedEpoch = epoch;\n                    this.model.stopTraining = true;\n                  } // TODO(cais): Logic for restoreBestWeights.\n\n                }\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function onEpochEnd(_x2, _x3) {\n        return _onEpochEnd.apply(this, arguments);\n      }\n\n      return onEpochEnd;\n    }()\n  }, {\n    key: \"onTrainEnd\",\n    value: function () {\n      var _onTrainEnd = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(logs) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (this.stoppedEpoch > 0 && this.verbose) {\n                  console.log(\"Epoch \".concat(this.stoppedEpoch, \": early stopping.\"));\n                }\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function onTrainEnd(_x4) {\n        return _onTrainEnd.apply(this, arguments);\n      }\n\n      return onTrainEnd;\n    }()\n  }, {\n    key: \"getMonitorValue\",\n    value: function getMonitorValue(logs) {\n      if (logs == null) {\n        logs = {};\n      }\n\n      var monitorValue = logs[this.monitor];\n\n      if (monitorValue == null) {\n        console.warn(\"Metric for EarlyStopping \".concat(this.monitor, \" is not available. \") + \"Available metrics are: \".concat(Object.keys(logs)));\n      }\n\n      return monitorValue;\n    }\n  }]);\n\n  return EarlyStopping;\n}(Callback);\n/**\n * Factory function for a Callback that stops training when a monitored\n * quantity has stopped improving.\n *\n * Early stopping is a type of regularization, and protects model against\n * overfitting.\n *\n * The following example based on fake data illustrates how this callback\n * can be used during `tf.LayersModel.fit()`:\n *\n * ```js\n * const model = tf.sequential();\n * model.add(tf.layers.dense({\n *   units: 3,\n *   activation: 'softmax',\n *   kernelInitializer: 'ones',\n *   inputShape: [2]\n * }));\n * const xs = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n * const ys = tf.tensor2d([[1, 0, 0], [0, 1, 0]], [2, 3]);\n * const xsVal = tf.tensor2d([4, 3, 2, 1], [2, 2]);\n * const ysVal = tf.tensor2d([[0, 0, 1], [0, 1, 0]], [2, 3]);\n * model.compile(\n *     {loss: 'categoricalCrossentropy', optimizer: 'sgd', metrics: ['acc']});\n *\n * // Without the EarlyStopping callback, the val_acc value would be:\n * //   0.5, 0.5, 0.5, 0.5, ...\n * // With val_acc being monitored, training should stop after the 2nd epoch.\n * const history = await model.fit(xs, ys, {\n *   epochs: 10,\n *   validationData: [xsVal, ysVal],\n *   callbacks: tf.callbacks.earlyStopping({monitor: 'val_acc'})\n * });\n *\n * // Expect to see a length-2 array.\n * console.log(history.history.val_acc);\n * ```\n *\n * @doc {\n *   heading: 'Callbacks',\n *   namespace: 'callbacks'\n * }\n */\n\nexport function earlyStopping(args) {\n  return new EarlyStopping(args);\n}\nexport var callbacks = {\n  earlyStopping: earlyStopping\n};","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * =============================================================================\n */\n\n/** DataType enum. */\nexport var DataType;\n\n(function (DataType) {\n  DataType[DataType[\"DT_INVALID\"] = 0] = \"DT_INVALID\";\n  DataType[DataType[\"DT_FLOAT\"] = 1] = \"DT_FLOAT\";\n  DataType[DataType[\"DT_DOUBLE\"] = 2] = \"DT_DOUBLE\";\n  DataType[DataType[\"DT_INT32\"] = 3] = \"DT_INT32\";\n  DataType[DataType[\"DT_UINT8\"] = 4] = \"DT_UINT8\";\n  DataType[DataType[\"DT_INT16\"] = 5] = \"DT_INT16\";\n  DataType[DataType[\"DT_INT8\"] = 6] = \"DT_INT8\";\n  DataType[DataType[\"DT_STRING\"] = 7] = \"DT_STRING\";\n  DataType[DataType[\"DT_COMPLEX64\"] = 8] = \"DT_COMPLEX64\";\n  DataType[DataType[\"DT_INT64\"] = 9] = \"DT_INT64\";\n  DataType[DataType[\"DT_BOOL\"] = 10] = \"DT_BOOL\";\n  DataType[DataType[\"DT_QINT8\"] = 11] = \"DT_QINT8\";\n  DataType[DataType[\"DT_QUINT8\"] = 12] = \"DT_QUINT8\";\n  DataType[DataType[\"DT_QINT32\"] = 13] = \"DT_QINT32\";\n  DataType[DataType[\"DT_BFLOAT16\"] = 14] = \"DT_BFLOAT16\";\n  DataType[DataType[\"DT_FLOAT_REF\"] = 101] = \"DT_FLOAT_REF\";\n  DataType[DataType[\"DT_DOUBLE_REF\"] = 102] = \"DT_DOUBLE_REF\";\n  DataType[DataType[\"DT_INT32_REF\"] = 103] = \"DT_INT32_REF\";\n  DataType[DataType[\"DT_UINT8_REF\"] = 104] = \"DT_UINT8_REF\";\n  DataType[DataType[\"DT_INT16_REF\"] = 105] = \"DT_INT16_REF\";\n  DataType[DataType[\"DT_INT8_REF\"] = 106] = \"DT_INT8_REF\";\n  DataType[DataType[\"DT_STRING_REF\"] = 107] = \"DT_STRING_REF\";\n  DataType[DataType[\"DT_COMPLEX64_REF\"] = 108] = \"DT_COMPLEX64_REF\";\n  DataType[DataType[\"DT_INT64_REF\"] = 109] = \"DT_INT64_REF\";\n  DataType[DataType[\"DT_BOOL_REF\"] = 110] = \"DT_BOOL_REF\";\n  DataType[DataType[\"DT_QINT8_REF\"] = 111] = \"DT_QINT8_REF\";\n  DataType[DataType[\"DT_QUINT8_REF\"] = 112] = \"DT_QUINT8_REF\";\n  DataType[DataType[\"DT_QINT32_REF\"] = 113] = \"DT_QINT32_REF\";\n  DataType[DataType[\"DT_BFLOAT16_REF\"] = 114] = \"DT_BFLOAT16_REF\";\n})(DataType || (DataType = {}));\n\nexport var SaverDef;\n\n(function (SaverDef) {\n  /** CheckpointFormatVersion enum. */\n  var CheckpointFormatVersion;\n\n  (function (CheckpointFormatVersion) {\n    CheckpointFormatVersion[CheckpointFormatVersion[\"LEGACY\"] = 0] = \"LEGACY\";\n    CheckpointFormatVersion[CheckpointFormatVersion[\"V1\"] = 1] = \"V1\";\n    CheckpointFormatVersion[CheckpointFormatVersion[\"V2\"] = 2] = \"V2\";\n  })(CheckpointFormatVersion = SaverDef.CheckpointFormatVersion || (SaverDef.CheckpointFormatVersion = {}));\n})(SaverDef || (SaverDef = {}));","/** @license See the LICENSE file. */\n// This code is auto-generated, do not modify this file!\nvar version = '3.4.0';\nexport { version };","import _asyncToGenerator from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _regeneratorRuntime from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/regenerator\";\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * =============================================================================\n */\nimport * as tf from '@tensorflow/tfjs-core';\n/**\n * Apply a mapping function to a nested structure in a recursive manner.\n *\n * The result of the mapping is an object with the same nested structure (i.e.,\n * of arrays and dicts) as the input, except that some subtrees are replaced,\n * according to the results of the mapping function.\n *\n * Mappings are memoized.  Thus, if the nested structure contains the same\n * object in multiple positions, the output will contain the same mapped object\n * in those positions.  Cycles are not supported, however.\n *\n * @param input: The object to which to apply the mapping function.\n * @param mapFn: A function that expects a single node of the object tree, and\n *   returns a `DeepMapResult`.  The `DeepMapResult` either provides a\n *   replacement value for that node (i.e., replacing the subtree), or indicates\n *   that the node should be processed recursively.\n */\n\nexport function deepMap(input, mapFn) {\n  return deepMapInternal(input, mapFn);\n}\n/**\n * @param seen: A Map of known object mappings (i.e., memoized results of\n *   `mapFn()`)\n * @param containedIn: An set containing objects on the reference path currently\n *   being processed (used to detect cycles).\n */\n\nfunction deepMapInternal(input, mapFn) {\n  var seen = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new Map();\n  var containedIn = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : new Set();\n\n  if (input == null) {\n    return null;\n  }\n\n  if (containedIn.has(input)) {\n    throw new Error('Circular references are not supported.');\n  }\n\n  if (seen.has(input)) {\n    return seen.get(input);\n  }\n\n  var result = mapFn(input);\n\n  if (result.recurse && result.value !== null) {\n    throw new Error('A deep map function may not return both a value and recurse=true.');\n  }\n\n  if (!result.recurse) {\n    seen.set(input, result.value);\n    return result.value;\n  } else if (isIterable(input)) {\n    // tslint:disable-next-line:no-any\n    var mappedIterable = Array.isArray(input) ? [] : {};\n    containedIn.add(input);\n\n    for (var k in input) {\n      var child = input[k];\n      var childResult = deepMapInternal(child, mapFn, seen, containedIn);\n      mappedIterable[k] = childResult;\n    }\n\n    containedIn.delete(input);\n    return mappedIterable;\n  } else {\n    throw new Error(\"Can't recurse into non-iterable type: \".concat(input));\n  }\n} // TODO(soergel, kangyizhang) Reconsider naming of deepZip() to avoid confusion\n// with zip()\n\n/**\n * Zip nested structures together in a recursive manner.\n *\n * This has the effect of transposing or pivoting data, e.g. converting it from\n * a row-major representation to a column-major representation.\n *\n * For example, `deepZip([{a: 1, b: 2}, {a: 3, b: 4}])` returns\n * `{a: [1, 3], b: [2, 4]}`.\n *\n * The inputs should all have the same nested structure (i.e., of arrays and\n * dicts).  The result is a single object with the same nested structure, where\n * the leaves are arrays collecting the values of the inputs at that location\n * (or, optionally, the result of a custom function applied to those arrays).\n *\n * @param inputs: An array of the objects to zip together.\n * @param zipFn: (optional) A function that expects an array of elements at a\n *   single node of the object tree, and returns a `DeepMapResult`.  The\n *   `DeepMapResult` either provides a result value for that node (i.e.,\n *   representing the subtree), or indicates that the node should be processed\n *   recursively.  The default zipFn recurses as far as possible and places\n *   arrays at the leaves.\n */\n\n\nexport function deepZip(inputs) {\n  var zipFn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : zipToList;\n  return deepZipInternal(inputs, zipFn);\n}\n/**\n * @param containedIn: An set containing objects on the reference path currently\n *   being processed (used to detect cycles).\n */\n\nfunction deepZipInternal(inputs, zipFn) {\n  var containedIn = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new Set();\n  // The recursion follows the structure of input 0; it's assumed that all the\n  // other inputs have the same structure.\n  var input = inputs[0];\n\n  if (containedIn.has(input)) {\n    throw new Error('Circular references are not supported.');\n  }\n\n  var result = zipFn(inputs);\n\n  if (result.recurse && result.value !== null) {\n    throw new Error('A deep zip function may not return both a value and recurse=true.');\n  }\n\n  if (!result.recurse) {\n    return result.value;\n  } else if (isIterable(input)) {\n    // tslint:disable-next-line:no-any\n    var mappedIterable = Array.isArray(input) ? [] : {};\n    containedIn.add(input);\n\n    var _loop = function _loop(k) {\n      var children = inputs.map(function (x) {\n        return x[k];\n      });\n      var childResult = deepZipInternal(children, zipFn, containedIn);\n      mappedIterable[k] = childResult;\n    };\n\n    for (var k in input) {\n      _loop(k);\n    }\n\n    containedIn.delete(input);\n    return mappedIterable;\n  } else {\n    throw new Error(\"Can't recurse into non-iterable type: \".concat(input));\n  }\n} // tslint:disable-next-line:no-any\n\n\nexport function zipToList(x) {\n  if (x === null) {\n    return null;\n  } // TODO(soergel): validate array type?\n\n\n  if (isIterable(x[0])) {\n    return {\n      value: null,\n      recurse: true\n    };\n  } else {\n    return {\n      value: x,\n      recurse: false\n    };\n  }\n}\n/**\n * Apply an async mapping function to a nested structure in a recursive manner.\n *\n * This first creates a nested structure of Promises, and then awaits all of\n * those, resulting in a single Promise for a resolved nested structure.\n *\n * The result of the mapping is an object with the same nested structure (i.e.,\n * of arrays and dicts) as the input, except that some subtrees are replaced,\n * according to the results of the mapping function.\n *\n * Mappings are memoized.  Thus, if the nested structure contains the same\n * object in multiple positions, the output will contain the same mapped object\n * in those positions.  Cycles are not supported, however.\n *\n * @param input: The object to which to apply the mapping function.\n * @param mapFn: A function that expects a single node of the object tree, and\n *   returns a `DeepMapAsyncResult`.  The `DeepMapAsyncResult` either provides\n *   a `Promise` for a replacement value for that node (i.e., replacing the\n *   subtree), or indicates that the node should be processed recursively.  Note\n *   that the decision whether or not to recurse must be made immediately; only\n *   the mapped value may be promised.\n */\n\nexport function deepMapAndAwaitAll(_x, _x2) {\n  return _deepMapAndAwaitAll.apply(this, arguments);\n}\n/**\n * Determine whether the argument is iterable.\n *\n * @returns true if the argument is an array or any non-Tensor object.\n */\n// tslint:disable-next-line:no-any\n\nfunction _deepMapAndAwaitAll() {\n  _deepMapAndAwaitAll = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(input, mapFn) {\n    var seen, _i, _Array$from, key, value, mappedValue, result;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            seen = new Map(); // First do a normal deepMap, collecting Promises in 'seen' as a side effect.\n\n            deepMapInternal(input, mapFn, seen); // Replace the Promises in 'seen' in place.\n            // Note TypeScript provides no async map iteration, and regular map iteration\n            // is broken too, so sadly we have to do Array.from() to make it work.\n            // (There's no advantage to Promise.all(), and that would be tricky anyway.)\n\n            _i = 0, _Array$from = Array.from(seen.keys());\n\n          case 3:\n            if (!(_i < _Array$from.length)) {\n              _context.next = 14;\n              break;\n            }\n\n            key = _Array$from[_i];\n            value = seen.get(key);\n\n            if (!tf.util.isPromise(value)) {\n              _context.next = 11;\n              break;\n            }\n\n            _context.next = 9;\n            return value;\n\n          case 9:\n            mappedValue = _context.sent;\n            seen.set(key, mappedValue);\n\n          case 11:\n            _i++;\n            _context.next = 3;\n            break;\n\n          case 14:\n            // Normal deepMap again, this time filling in the resolved values.\n            // It's unfortunate that we have to do two passes.\n            // TODO(soergel): test performance and think harder about a fast solution.\n            result = deepMapInternal(input, mapFn, seen);\n            return _context.abrupt(\"return\", result);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _deepMapAndAwaitAll.apply(this, arguments);\n}\n\nexport function isIterable(obj) {\n  return obj != null && !ArrayBuffer.isView(obj) && (Array.isArray(obj) || typeof obj === 'object' && !(obj instanceof tf.Tensor));\n}\n/**\n * Determine whether the argument can be converted to Tensor.\n *\n * Tensors, primitives, arrays, and TypedArrays all qualify; anything else does\n * not.\n *\n * @returns true if the argument can be converted to Tensor.\n */\n// tslint:disable-next-line:no-any\n\nexport function canTensorify(obj) {\n  return obj == null || isPrimitive(obj) || Array.isArray(obj) || typeof obj === 'object' && obj instanceof tf.Tensor || tf.util.isTypedArray(obj);\n}\n/**\n * Returns true if the given `value` is a primitive type. Otherwise returns\n * false. This is equivalant to node util.isPrimitive\n */\n\nfunction isPrimitive(value) {\n  return value === null || typeof value !== 'object' && typeof value !== 'function';\n}","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * =============================================================================\n */\nimport * as tf from '@tensorflow/tfjs-core';\nimport { deepMap, isIterable } from './deep_map';\nexport function deepClone(container) {\n  return deepMap(container, cloneIfTensor);\n} // tslint:disable-next-line: no-any\n\nfunction cloneIfTensor(item) {\n  if (item instanceof tf.Tensor) {\n    return {\n      value: item.clone(),\n      recurse: false\n    };\n  } else if (isIterable(item)) {\n    return {\n      value: null,\n      recurse: true\n    };\n  } else {\n    return {\n      value: item,\n      recurse: false\n    };\n  }\n}","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * =============================================================================\n */\n\n/**\n * A ring buffer, providing O(1) FIFO, LIFO, and related operations.\n */\nexport var RingBuffer = /*#__PURE__*/function () {\n  /**\n   * Constructs a `RingBuffer`.\n   * @param capacity The number of items that the buffer can accomodate.\n   */\n  function RingBuffer(capacity) {\n    _classCallCheck(this, RingBuffer);\n\n    this.capacity = capacity; // Note we store the indices in the range 0 <= index < 2*capacity.\n    // This allows us to distinguish the full from the empty case.\n    // See https://www.snellman.net/blog/archive/2016-12-13-ring-buffers/\n\n    this.begin = 0; // inclusive\n\n    this.end = 0; // exclusive\n\n    if (capacity == null) {\n      throw new RangeError('Can\\'t create a ring buffer of unknown capacity.');\n    }\n\n    if (capacity < 1) {\n      throw new RangeError('Can\\'t create ring buffer of capacity < 1.');\n    }\n\n    this.data = new Array(capacity);\n    this.doubledCapacity = 2 * capacity;\n  }\n  /**\n   * Map any index into the range 0 <= index < 2*capacity.\n   */\n\n\n  _createClass(RingBuffer, [{\n    key: \"wrap\",\n    value: function wrap(index) {\n      // don't trust % on negative numbers\n      while (index < 0) {\n        index += this.doubledCapacity;\n      }\n\n      return index % this.doubledCapacity;\n    }\n  }, {\n    key: \"get\",\n    value: function get(index) {\n      if (index < 0) {\n        throw new RangeError('Can\\'t get item at a negative index.');\n      }\n\n      return this.data[index % this.capacity];\n    }\n  }, {\n    key: \"set\",\n    value: function set(index, value) {\n      if (index < 0) {\n        throw new RangeError('Can\\'t set item at a negative index.');\n      }\n\n      this.data[index % this.capacity] = value;\n    }\n    /**\n     * Returns the current number of items in the buffer.\n     */\n\n  }, {\n    key: \"length\",\n    value: function length() {\n      var length = this.end - this.begin;\n\n      if (length < 0) {\n        length = this.doubledCapacity + length;\n      }\n\n      return length;\n    }\n    /**\n     * Reports whether the buffer is full.\n     * @returns true if the number of items in the buffer equals its capacity, and\n     *   false otherwise.\n     */\n\n  }, {\n    key: \"isFull\",\n    value: function isFull() {\n      return this.length() === this.capacity;\n    }\n    /**\n     * Reports whether the buffer is empty.\n     * @returns true if the number of items in the buffer equals zero, and\n     *   false otherwise.\n     */\n\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return this.length() === 0;\n    }\n    /**\n     * Adds an item to the end of the buffer.\n     */\n\n  }, {\n    key: \"push\",\n    value: function push(value) {\n      if (this.isFull()) {\n        throw new RangeError('Ring buffer is full.');\n      }\n\n      this.set(this.end, value);\n      this.end = this.wrap(this.end + 1);\n    }\n    /**\n     * Adds many items to the end of the buffer, in order.\n     */\n\n  }, {\n    key: \"pushAll\",\n    value: function pushAll(values) {\n      var _iterator = _createForOfIteratorHelper(values),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var value = _step.value;\n          this.push(value);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n    /**\n     * Removes and returns the last item in the buffer.\n     */\n\n  }, {\n    key: \"pop\",\n    value: function pop() {\n      if (this.isEmpty()) {\n        throw new RangeError('Ring buffer is empty.');\n      }\n\n      this.end = this.wrap(this.end - 1);\n      var result = this.get(this.end);\n      this.set(this.end, undefined);\n      return result;\n    }\n    /**\n     * Adds an item to the beginning of the buffer.\n     */\n\n  }, {\n    key: \"unshift\",\n    value: function unshift(value) {\n      if (this.isFull()) {\n        throw new RangeError('Ring buffer is full.');\n      }\n\n      this.begin = this.wrap(this.begin - 1);\n      this.set(this.begin, value);\n    }\n    /**\n     * Removes and returns the first item in the buffer.\n     */\n\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.isEmpty()) {\n        throw new RangeError('Ring buffer is empty.');\n      }\n\n      var result = this.get(this.begin);\n      this.set(this.begin, undefined);\n      this.begin = this.wrap(this.begin + 1);\n      return result;\n    }\n    /**\n     * Removes and returns a specific item in the buffer, and moves the last item\n     * to the vacated slot.  This is useful for implementing a shuffling stream.\n     * Note that this operation necessarily scrambles the original order.\n     *\n     * @param relativeIndex: the index of the item to remove, relative to the\n     *   first item in the buffer (e.g., hiding the ring nature of the underlying\n     *   storage).\n     */\n\n  }, {\n    key: \"shuffleExcise\",\n    value: function shuffleExcise(relativeIndex) {\n      if (this.isEmpty()) {\n        throw new RangeError('Ring buffer is empty.');\n      }\n\n      var index = this.wrap(this.begin + relativeIndex);\n      var result = this.get(index);\n      this.set(index, this.pop());\n      return result;\n    }\n  }]);\n\n  return RingBuffer;\n}();","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/get\";\nimport _inherits from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * =============================================================================\n */\nimport { RingBuffer } from './ring_buffer';\nexport var GrowingRingBuffer = /*#__PURE__*/function (_RingBuffer) {\n  _inherits(GrowingRingBuffer, _RingBuffer);\n\n  var _super = _createSuper(GrowingRingBuffer);\n\n  /**\n   * Constructs a `GrowingRingBuffer`.\n   */\n  function GrowingRingBuffer() {\n    _classCallCheck(this, GrowingRingBuffer);\n\n    return _super.call(this, GrowingRingBuffer.INITIAL_CAPACITY);\n  }\n\n  _createClass(GrowingRingBuffer, [{\n    key: \"isFull\",\n    value: function isFull() {\n      return false;\n    }\n  }, {\n    key: \"push\",\n    value: function push(value) {\n      if (_get(_getPrototypeOf(GrowingRingBuffer.prototype), \"isFull\", this).call(this)) {\n        this.expand();\n      }\n\n      _get(_getPrototypeOf(GrowingRingBuffer.prototype), \"push\", this).call(this, value);\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(value) {\n      if (_get(_getPrototypeOf(GrowingRingBuffer.prototype), \"isFull\", this).call(this)) {\n        this.expand();\n      }\n\n      _get(_getPrototypeOf(GrowingRingBuffer.prototype), \"unshift\", this).call(this, value);\n    }\n    /**\n     * Doubles the capacity of the buffer.\n     */\n\n  }, {\n    key: \"expand\",\n    value: function expand() {\n      var newCapacity = this.capacity * 2;\n      var newData = new Array(newCapacity);\n      var len = this.length(); // Rotate the buffer to start at index 0 again, since we can't just\n      // allocate more space at the end.\n\n      for (var i = 0; i < len; i++) {\n        newData[i] = this.get(this.wrap(this.begin + i));\n      }\n\n      this.data = newData;\n      this.capacity = newCapacity;\n      this.doubledCapacity = 2 * this.capacity;\n      this.begin = 0;\n      this.end = len;\n    }\n  }]);\n\n  return GrowingRingBuffer;\n}(RingBuffer);\nGrowingRingBuffer.INITIAL_CAPACITY = 32;","import _inherits from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _asyncToGenerator from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _regeneratorRuntime from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/regenerator\";\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * =============================================================================\n */\nimport * as tf from '@tensorflow/tfjs-core';\nimport * as seedrandom from 'seedrandom';\nimport { deepClone } from '../util/deep_clone';\nimport { deepMapAndAwaitAll, deepZip, zipToList } from '../util/deep_map';\nimport { GrowingRingBuffer } from '../util/growing_ring_buffer';\nimport { RingBuffer } from '../util/ring_buffer'; // Here we implement a simple asynchronous iterator.\n// This lets us avoid using either third-party stream libraries or\n// recent TypeScript language support requiring polyfills.\n\n/**\n * Create a `LazyIterator` from an array of items.\n */\n\nexport function iteratorFromItems(items) {\n  return new ArrayIterator(items);\n}\n/**\n * Create a `LazyIterator` of incrementing integers.\n */\n\nexport function iteratorFromIncrementing(start) {\n  var i = start;\n  return iteratorFromFunction(function () {\n    return {\n      value: i++,\n      done: false\n    };\n  });\n}\n/**\n * Create a `LazyIterator` from a function.\n *\n * ```js\n * let i = -1;\n * const func = () =>\n *    ++i < 5 ? {value: i, done: false} : {value: null, done: true};\n * const iter = tf.data.iteratorFromFunction(func);\n * await iter.forEachAsync(e => console.log(e));\n * ```\n *\n * @param func A function that produces data on each call.\n */\n\nexport function iteratorFromFunction(func) {\n  return new FunctionCallIterator(func);\n}\n/**\n * Create a `LazyIterator` by concatenating underlying streams, which are\n * themselves provided as a stream.\n *\n * This can also be thought of as a \"stream flatten\" operation.\n *\n * @param baseIterators A stream of streams to be concatenated.\n * @param baseErrorHandler An optional function that can intercept `Error`s\n *   raised during a `next()` call on the base stream.  This function can decide\n *   whether the error should be propagated, whether the error should be\n *   ignored, or whether the base stream should be terminated.\n */\n\nexport function iteratorFromConcatenated(baseIterators, baseErrorHandler) {\n  return new ChainedIterator(baseIterators, baseErrorHandler);\n}\n/**\n * Create a `LazyIterator` by concatenating streams produced by calling a\n * stream-generating function a given number of times.\n *\n * Since a `LazyIterator` is read-once, it cannot be repeated, but this\n * function can be used to achieve a similar effect:\n *\n *   LazyIterator.ofConcatenatedFunction(() => new MyIterator(), 6);\n *\n * @param iteratorFunc: A function that produces a new stream on each call.\n * @param count: The number of times to call the function.\n * @param baseErrorHandler An optional function that can intercept `Error`s\n *   raised during a `next()` call on the base stream.  This function can decide\n *   whether the error should be propagated, whether the error should be\n *   ignored, or whether the base stream should be terminated.\n */\n\nexport function iteratorFromConcatenatedFunction(iteratorFunc, count, baseErrorHandler) {\n  return iteratorFromConcatenated(iteratorFromFunction(iteratorFunc).take(count), baseErrorHandler);\n}\n/**\n * Create a `LazyIterator` by zipping together an array, dict, or nested\n * structure of `LazyIterator`s (and perhaps additional constants).\n *\n * The underlying streams must provide elements in a consistent order such\n * that they correspond.\n *\n * Typically, the underlying streams should have the same number of\n * elements. If they do not, the behavior is determined by the\n * `mismatchMode` argument.\n *\n * The nested structure of the `iterators` argument determines the\n * structure of elements in the resulting iterator.\n *\n * @param iterators: An array or object containing LazyIterators at the\n * leaves.\n * @param mismatchMode: Determines what to do when one underlying iterator\n * is exhausted before the others.  `ZipMismatchMode.FAIL` (the default)\n * causes an error to be thrown in this case.  `ZipMismatchMode.SHORTEST`\n * causes the zipped iterator to terminate with the furst underlying\n * streams, so elements remaining on the longer streams are ignored.\n * `ZipMismatchMode.LONGEST` causes the zipped stream to continue, filling\n * in nulls for the exhausted streams, until all streams are exhausted.\n */\n\nexport function iteratorFromZipped(iterators) {\n  var mismatchMode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ZipMismatchMode.FAIL;\n  return new ZipIterator(iterators, mismatchMode);\n}\n/**\n * An asynchronous iterator, providing lazy access to a potentially\n * unbounded stream of elements.\n *\n * Iterator can be obtained from a dataset:\n * `const iter = await dataset.iterator();`\n */\n\nexport var LazyIterator = /*#__PURE__*/function () {\n  function LazyIterator() {\n    _classCallCheck(this, LazyIterator);\n  }\n\n  _createClass(LazyIterator, [{\n    key: \"toArray\",\n    value:\n    /**\n     * Collect all remaining elements of a bounded stream into an array.\n     * Obviously this will succeed only for small streams that fit in memory.\n     * Useful for testing.\n     *\n     * @returns A Promise for an array of stream elements, which will resolve\n     *   when the stream is exhausted.\n     */\n    function () {\n      var _toArray = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var result, x;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                result = [];\n                _context.next = 3;\n                return this.next();\n\n              case 3:\n                x = _context.sent;\n\n              case 4:\n                if (x.done) {\n                  _context.next = 11;\n                  break;\n                }\n\n                result.push(x.value);\n                _context.next = 8;\n                return this.next();\n\n              case 8:\n                x = _context.sent;\n                _context.next = 4;\n                break;\n\n              case 11:\n                return _context.abrupt(\"return\", result);\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function toArray() {\n        return _toArray.apply(this, arguments);\n      }\n\n      return toArray;\n    }()\n    /**\n     * Collect all elements of this dataset into an array with prefetching 100\n     * elements. This is useful for testing, because the prefetch changes the\n     * order in which the Promises are resolved along the processing pipeline.\n     * This may help expose bugs where results are dependent on the order of\n     * Promise resolution rather than on the logical order of the stream (i.e.,\n     * due to hidden mutable state).\n     *\n     * @returns A Promise for an array of stream elements, which will resolve\n     *   when the stream is exhausted.\n     */\n\n  }, {\n    key: \"toArrayForTest\",\n    value: function () {\n      var _toArrayForTest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var stream, result, x;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                stream = this.prefetch(100);\n                result = [];\n                _context2.next = 4;\n                return stream.next();\n\n              case 4:\n                x = _context2.sent;\n\n              case 5:\n                if (x.done) {\n                  _context2.next = 12;\n                  break;\n                }\n\n                result.push(x.value);\n                _context2.next = 9;\n                return stream.next();\n\n              case 9:\n                x = _context2.sent;\n                _context2.next = 5;\n                break;\n\n              case 12:\n                return _context2.abrupt(\"return\", result);\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function toArrayForTest() {\n        return _toArrayForTest.apply(this, arguments);\n      }\n\n      return toArrayForTest;\n    }()\n    /**\n     * Draw items from the stream until it is exhausted.\n     *\n     * This can be useful when the stream has side effects but no output.  In\n     * that case, calling this function guarantees that the stream will be\n     * fully processed.\n     */\n\n  }, {\n    key: \"resolveFully\",\n    value: function () {\n      var _resolveFully = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var x;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.next();\n\n              case 2:\n                x = _context3.sent;\n\n              case 3:\n                if (x.done) {\n                  _context3.next = 9;\n                  break;\n                }\n\n                _context3.next = 6;\n                return this.next();\n\n              case 6:\n                x = _context3.sent;\n                _context3.next = 3;\n                break;\n\n              case 9:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function resolveFully() {\n        return _resolveFully.apply(this, arguments);\n      }\n\n      return resolveFully;\n    }()\n    /**\n     * Draw items from the stream until it is exhausted, or a predicate fails.\n     *\n     * This can be useful when the stream has side effects but no output.  In\n     * that case, calling this function guarantees that the stream will be\n     * fully processed.\n     */\n\n  }, {\n    key: \"resolveWhile\",\n    value: function () {\n      var _resolveWhile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(predicate) {\n        var x, shouldContinue;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.next();\n\n              case 2:\n                x = _context4.sent;\n                shouldContinue = predicate(x.value);\n\n              case 4:\n                if (!(!x.done && shouldContinue)) {\n                  _context4.next = 11;\n                  break;\n                }\n\n                _context4.next = 7;\n                return this.next();\n\n              case 7:\n                x = _context4.sent;\n                shouldContinue = predicate(x.value);\n                _context4.next = 4;\n                break;\n\n              case 11:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function resolveWhile(_x) {\n        return _resolveWhile.apply(this, arguments);\n      }\n\n      return resolveWhile;\n    }()\n    /**\n     * Handles errors thrown on this stream using a provided handler function.\n     *\n     * @param handler A function that handles any `Error` thrown during a `next()`\n     *   call and returns true if the stream should continue (dropping the failed\n     *   call) or false if the stream should quietly terminate.  If the handler\n     *   itself throws (or rethrows) an `Error`, that will be propagated.\n     *\n     * @returns A `LazyIterator` of elements passed through from upstream,\n     *   possibly filtering or terminating on upstream `next()` calls that\n     *   throw an `Error`.\n     */\n\n  }, {\n    key: \"handleErrors\",\n    value: function handleErrors(handler) {\n      return new ErrorHandlingLazyIterator(this, handler);\n    } // TODO(soergel): Implement reduce() etc.\n\n    /**\n     * Filters this stream according to `predicate`.\n     *\n     * @param predicate A function mapping a stream element to a boolean or a\n     * `Promise` for one.\n     *\n     * @returns A `LazyIterator` of elements for which the predicate was true.\n     */\n\n  }, {\n    key: \"filter\",\n    value: function filter(predicate) {\n      return new FilterIterator(this, predicate);\n    }\n    /**\n     * Maps this stream through a 1-to-1 transform.\n     *\n     * @param transform A function mapping a stream element to a transformed\n     *   element.\n     *\n     * @returns A `LazyIterator` of transformed elements.\n     */\n\n  }, {\n    key: \"map\",\n    value: function map(transform) {\n      return new MapIterator(this, transform);\n    }\n    /**\n     * Maps this stream through an async 1-to-1 transform.\n     *\n     * @param transform A function mapping a stream element to a `Promise` for a\n     *   transformed stream element.\n     *\n     * @returns A `LazyIterator` of transformed elements.\n     */\n\n  }, {\n    key: \"mapAsync\",\n    value: function mapAsync(transform) {\n      return new AsyncMapIterator(this, transform);\n    }\n    /**\n     * Maps this stream through a 1-to-1 transform, forcing serial execution.\n     *\n     * @param transform A function mapping a stream element to a transformed\n     *   element.\n     *\n     * @returns A `LazyIterator` of transformed elements.\n     */\n\n  }, {\n    key: \"serialMapAsync\",\n    value: function serialMapAsync(transform) {\n      return new AsyncMapIterator(this, transform).serial();\n    }\n    /**\n     * Maps this stream through a 1-to-many transform.\n     *\n     * @param transform A function mapping a stream element to an array of\n     *   transformed elements.\n     *\n     * @returns A `DataStream` of transformed elements.\n     */\n\n  }, {\n    key: \"flatmap\",\n    value: function flatmap(transform) {\n      return new FlatmapIterator(this, transform);\n    }\n    /**\n     * Apply a function to every element of the stream.\n     *\n     * @param f A function to apply to each stream element.\n     */\n\n  }, {\n    key: \"forEachAsync\",\n    value: function () {\n      var _forEachAsync = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(f) {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                return _context5.abrupt(\"return\", this.map(f).resolveFully());\n\n              case 1:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function forEachAsync(_x2) {\n        return _forEachAsync.apply(this, arguments);\n      }\n\n      return forEachAsync;\n    }()\n    /**\n     * Apply a function to every element of the stream, forcing serial execution.\n     *\n     * @param f A function to apply to each stream element.  Should return 'true'\n     *   to indicate that the stream should continue, or 'false' to cause it to\n     *   terminate.\n     */\n\n  }, {\n    key: \"serialForEach\",\n    value: function () {\n      var _serialForEach = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(f) {\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                return _context6.abrupt(\"return\", this.serialMapAsync(f).resolveWhile(function (x) {\n                  return x === true;\n                }));\n\n              case 1:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function serialForEach(_x3) {\n        return _serialForEach.apply(this, arguments);\n      }\n\n      return serialForEach;\n    }()\n    /**\n     * Groups elements into batches, represented as arrays of elements.\n     *\n     * We can think of the elements of this iterator as 'rows' (even if they are\n     * nested structures).  By the same token, consecutive values for a given\n     * key within the elements form a 'column'.  This matches the usual sense of\n     * 'row' and 'column' when processing tabular data (e.g., parsing a CSV).\n     *\n     * Thus, \"Row-major\" means that the resulting batch is simply a collection of\n     * rows: `[row1, row2, row3, ...]`.  This is contrast to the column-major\n     * form, which is needed for vectorized computation.\n     *\n     * @param batchSize The number of elements desired per batch.\n     * @param smallLastBatch Whether to emit the final batch when it has fewer\n     *   than batchSize elements. Default true.\n     * @returns A `LazyIterator` of batches of elements, represented as arrays\n     *   of the original element type.\n     */\n\n  }, {\n    key: \"rowMajorBatch\",\n    value: function rowMajorBatch(batchSize) {\n      var smallLastBatch = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      return new RowMajorBatchIterator(this, batchSize, smallLastBatch);\n    }\n    /**\n     * Groups elements into batches, represented in column-major form.\n     *\n     * We can think of the elements of this iterator as 'rows' (even if they are\n     * nested structures).  By the same token, consecutive values for a given\n     * key within the elements form a 'column'.  This matches the usual sense of\n     * 'row' and 'column' when processing tabular data (e.g., parsing a CSV).\n     *\n     * Thus, \"column-major\" means that the resulting batch is a (potentially\n     * nested) structure representing the columns.  Each column entry, then,\n     * contains a collection of the values found in that column for a range of\n     * input elements.  This representation allows for vectorized computation, in\n     * contrast to the row-major form.\n     *\n     * The inputs should all have the same nested structure (i.e., of arrays and\n     * dicts).  The result is a single object with the same nested structure,\n     * where the leaves are arrays collecting the values of the inputs at that\n     * location (or, optionally, the result of a custom function applied to those\n     * arrays).\n     *\n     * @param batchSize The number of elements desired per batch.\n     * @param smallLastBatch Whether to emit the final batch when it has fewer\n     *   than batchSize elements. Default true.\n     * @param zipFn: (optional) A function that expects an array of elements at a\n     *   single node of the object tree, and returns a `DeepMapResult`.  The\n     *   `DeepMapResult` either provides a result value for that node (i.e.,\n     *   representing the subtree), or indicates that the node should be processed\n     *   recursively.  The default zipFn recurses as far as possible and places\n     *   arrays at the leaves.\n     * @returns A `LazyIterator` of batches of elements, represented as an object\n     *   with collections at the leaves.\n     */\n\n  }, {\n    key: \"columnMajorBatch\",\n    value: function columnMajorBatch(batchSize) {\n      var smallLastBatch = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var zipFn = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : zipToList;\n      // First collect the desired number of input elements as a row-major batch.\n      var rowBatches = this.rowMajorBatch(batchSize, smallLastBatch); // Now 'rotate' or 'pivot' the data, collecting all values from each column\n      // in the batch (i.e., for each key within the elements) into an array.\n\n      return rowBatches.map(function (x) {\n        return deepZip(x, zipFn);\n      });\n    }\n    /**\n     * Concatenate this `LazyIterator` with another.\n     *\n     * @param iterator A `LazyIterator` to be concatenated onto this one.\n     * @param baseErrorHandler An optional function that can intercept `Error`s\n     *   raised during a `next()` call on the base stream.  This function can\n     *   decide whether the error should be propagated, whether the error should\n     *   be ignored, or whether the base stream should be terminated.\n     * @returns A `LazyIterator`.\n     */\n\n  }, {\n    key: \"concatenate\",\n    value: function concatenate(iterator, baseErrorHandler) {\n      return new ChainedIterator(iteratorFromItems([this, iterator]), baseErrorHandler);\n    }\n    /**\n     * Limits this stream to return at most `count` items.\n     *\n     * @param count The maximum number of items to provide from the stream. If\n     * a negative or undefined value is given, the entire stream is returned\n     *   unaltered.\n     */\n\n  }, {\n    key: \"take\",\n    value: function take(count) {\n      if (count < 0 || count == null) {\n        return this;\n      }\n\n      return new TakeIterator(this, count);\n    }\n    /**\n     * Skips the first `count` items in this stream.\n     *\n     * @param count The number of items to skip.  If a negative or undefined\n     * value is given, the entire stream is returned unaltered.\n     */\n\n  }, {\n    key: \"skip\",\n    value: function skip(count) {\n      if (count < 0 || count == null) {\n        return this;\n      }\n\n      return new SkipIterator(this, count);\n    }\n    /**\n     * Prefetch the first `bufferSize` items in this stream.\n     *\n     * Note this prefetches Promises, but makes no guarantees about when those\n     * Promises resolve.\n     *\n     * @param bufferSize: An integer specifying the number of elements to be\n     *   prefetched.\n     */\n\n  }, {\n    key: \"prefetch\",\n    value: function prefetch(bufferSize) {\n      return new PrefetchIterator(this, bufferSize);\n    } // TODO(soergel): deep sharded shuffle, where supported\n\n    /**\n     * Randomly shuffles the elements of this stream.\n     *\n     * @param bufferSize: An integer specifying the number of elements from\n     * this stream from which the new stream will sample.\n     * @param seed: (Optional.) An integer specifying the random seed that\n     * will be used to create the distribution.\n     */\n\n  }, {\n    key: \"shuffle\",\n    value: function shuffle(windowSize, seed) {\n      return new ShuffleIterator(this, windowSize, seed);\n    }\n    /**\n     * Force an iterator to execute serially: each next() call will await the\n     * prior one, so that they cannot execute concurrently.\n     */\n\n  }, {\n    key: \"serial\",\n    value: function serial() {\n      return new SerialIterator(this);\n    }\n  }]);\n\n  return LazyIterator;\n}(); // ============================================================================\n// The following private classes serve to implement the chainable methods\n// on LazyIterator.  Unfortunately they can't be placed in separate files,\n// due to resulting trouble with circular imports.\n// ============================================================================\n// Iterators that just extend LazyIterator directly\n// ============================================================================\n\nvar ArrayIterator = /*#__PURE__*/function (_LazyIterator) {\n  _inherits(ArrayIterator, _LazyIterator);\n\n  var _super = _createSuper(ArrayIterator);\n\n  function ArrayIterator(items) {\n    var _this;\n\n    _classCallCheck(this, ArrayIterator);\n\n    _this = _super.call(this);\n    _this.items = items;\n    _this.trav = 0;\n    return _this;\n  }\n\n  _createClass(ArrayIterator, [{\n    key: \"summary\",\n    value: function summary() {\n      return \"Array of \".concat(this.items.length, \" items\");\n    }\n  }, {\n    key: \"next\",\n    value: function () {\n      var _next = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n        var item;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                if (!(this.trav >= this.items.length)) {\n                  _context7.next = 2;\n                  break;\n                }\n\n                return _context7.abrupt(\"return\", {\n                  value: null,\n                  done: true\n                });\n\n              case 2:\n                item = this.items[this.trav];\n                this.trav++;\n                return _context7.abrupt(\"return\", {\n                  value: deepClone(item),\n                  done: false\n                });\n\n              case 5:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function next() {\n        return _next.apply(this, arguments);\n      }\n\n      return next;\n    }()\n  }]);\n\n  return ArrayIterator;\n}(LazyIterator);\n\nvar FunctionCallIterator = /*#__PURE__*/function (_LazyIterator2) {\n  _inherits(FunctionCallIterator, _LazyIterator2);\n\n  var _super2 = _createSuper(FunctionCallIterator);\n\n  function FunctionCallIterator(nextFn) {\n    var _this2;\n\n    _classCallCheck(this, FunctionCallIterator);\n\n    _this2 = _super2.call(this);\n    _this2.nextFn = nextFn;\n    return _this2;\n  }\n\n  _createClass(FunctionCallIterator, [{\n    key: \"summary\",\n    value: function summary() {\n      return \"Function call\";\n    }\n  }, {\n    key: \"next\",\n    value: function () {\n      var _next2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.prev = 0;\n                return _context8.abrupt(\"return\", this.nextFn());\n\n              case 4:\n                _context8.prev = 4;\n                _context8.t0 = _context8[\"catch\"](0);\n                // Modify the error message but leave the stack trace intact\n                _context8.t0.message = \"Error thrown while iterating through a dataset: \".concat(_context8.t0.message);\n                throw _context8.t0;\n\n              case 8:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this, [[0, 4]]);\n      }));\n\n      function next() {\n        return _next2.apply(this, arguments);\n      }\n\n      return next;\n    }()\n  }]);\n\n  return FunctionCallIterator;\n}(LazyIterator);\n\nvar SerialIterator = /*#__PURE__*/function (_LazyIterator3) {\n  _inherits(SerialIterator, _LazyIterator3);\n\n  var _super3 = _createSuper(SerialIterator);\n\n  function SerialIterator(upstream) {\n    var _this3;\n\n    _classCallCheck(this, SerialIterator);\n\n    _this3 = _super3.call(this);\n    _this3.upstream = upstream;\n    _this3.lastRead = Promise.resolve({\n      value: null,\n      done: false\n    });\n    return _this3;\n  }\n\n  _createClass(SerialIterator, [{\n    key: \"summary\",\n    value: function summary() {\n      return \"\".concat(this.upstream.summary(), \" -> Serial\");\n    }\n  }, {\n    key: \"next\",\n    value: function () {\n      var _next3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n        var _this4 = this;\n\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                // This sets this.lastRead to a new Promise right away, as opposed to\n                // saying `await this.lastRead; this.lastRead = this.serialNext();` which\n                // would not work because this.nextRead would be updated only after the\n                // promise resolves.\n                this.lastRead = this.lastRead.then(function () {\n                  return _this4.serialNext();\n                });\n                return _context9.abrupt(\"return\", this.lastRead);\n\n              case 2:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function next() {\n        return _next3.apply(this, arguments);\n      }\n\n      return next;\n    }()\n  }, {\n    key: \"serialNext\",\n    value: function () {\n      var _serialNext = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10() {\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                return _context10.abrupt(\"return\", this.upstream.next());\n\n              case 1:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function serialNext() {\n        return _serialNext.apply(this, arguments);\n      }\n\n      return serialNext;\n    }()\n  }]);\n\n  return SerialIterator;\n}(LazyIterator);\n\nvar SkipIterator = /*#__PURE__*/function (_LazyIterator4) {\n  _inherits(SkipIterator, _LazyIterator4);\n\n  var _super4 = _createSuper(SkipIterator);\n\n  function SkipIterator(upstream, maxCount) {\n    var _this5;\n\n    _classCallCheck(this, SkipIterator);\n\n    _this5 = _super4.call(this);\n    _this5.upstream = upstream;\n    _this5.maxCount = maxCount; // Local state that should not be clobbered by out-of-order execution.\n\n    _this5.count = 0;\n    _this5.lastRead = Promise.resolve({\n      value: null,\n      done: false\n    });\n    return _this5;\n  }\n\n  _createClass(SkipIterator, [{\n    key: \"summary\",\n    value: function summary() {\n      return \"\".concat(this.upstream.summary(), \" -> Skip\");\n    }\n  }, {\n    key: \"next\",\n    value: function () {\n      var _next4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11() {\n        var _this6 = this;\n\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                // This sets this.lastRead to a new Promise right away, as opposed to\n                // saying `await this.lastRead; this.lastRead = this.serialNext();` which\n                // would not work because this.nextRead would be updated only after the\n                // promise resolves.\n                this.lastRead = this.lastRead.then(function () {\n                  return _this6.serialNext();\n                });\n                return _context11.abrupt(\"return\", this.lastRead);\n\n              case 2:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function next() {\n        return _next4.apply(this, arguments);\n      }\n\n      return next;\n    }()\n  }, {\n    key: \"serialNext\",\n    value: function () {\n      var _serialNext2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12() {\n        var skipped;\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                if (!(this.count++ < this.maxCount)) {\n                  _context12.next = 9;\n                  break;\n                }\n\n                _context12.next = 3;\n                return this.upstream.next();\n\n              case 3:\n                skipped = _context12.sent;\n\n                if (!skipped.done) {\n                  _context12.next = 6;\n                  break;\n                }\n\n                return _context12.abrupt(\"return\", skipped);\n\n              case 6:\n                tf.dispose(skipped.value);\n                _context12.next = 0;\n                break;\n\n              case 9:\n                return _context12.abrupt(\"return\", this.upstream.next());\n\n              case 10:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      function serialNext() {\n        return _serialNext2.apply(this, arguments);\n      }\n\n      return serialNext;\n    }()\n  }]);\n\n  return SkipIterator;\n}(LazyIterator);\n\nvar TakeIterator = /*#__PURE__*/function (_LazyIterator5) {\n  _inherits(TakeIterator, _LazyIterator5);\n\n  var _super5 = _createSuper(TakeIterator);\n\n  function TakeIterator(upstream, maxCount) {\n    var _this7;\n\n    _classCallCheck(this, TakeIterator);\n\n    _this7 = _super5.call(this);\n    _this7.upstream = upstream;\n    _this7.maxCount = maxCount;\n    _this7.count = 0;\n    return _this7;\n  }\n\n  _createClass(TakeIterator, [{\n    key: \"summary\",\n    value: function summary() {\n      return \"\".concat(this.upstream.summary(), \" -> Take\");\n    }\n  }, {\n    key: \"next\",\n    value: function () {\n      var _next5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13() {\n        return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                if (!(this.count++ >= this.maxCount)) {\n                  _context13.next = 2;\n                  break;\n                }\n\n                return _context13.abrupt(\"return\", {\n                  value: null,\n                  done: true\n                });\n\n              case 2:\n                return _context13.abrupt(\"return\", this.upstream.next());\n\n              case 3:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      function next() {\n        return _next5.apply(this, arguments);\n      }\n\n      return next;\n    }()\n  }]);\n\n  return TakeIterator;\n}(LazyIterator); // Note this batch just groups items into row-wise element arrays.\n// Rotating these to a column-wise representation happens only at the dataset\n// level.\n\n\nvar RowMajorBatchIterator = /*#__PURE__*/function (_LazyIterator6) {\n  _inherits(RowMajorBatchIterator, _LazyIterator6);\n\n  var _super6 = _createSuper(RowMajorBatchIterator);\n\n  function RowMajorBatchIterator(upstream, batchSize) {\n    var _this8;\n\n    var enableSmallLastBatch = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n    _classCallCheck(this, RowMajorBatchIterator);\n\n    _this8 = _super6.call(this);\n    _this8.upstream = upstream;\n    _this8.batchSize = batchSize;\n    _this8.enableSmallLastBatch = enableSmallLastBatch;\n    _this8.lastRead = Promise.resolve({\n      value: null,\n      done: false\n    });\n    return _this8;\n  }\n\n  _createClass(RowMajorBatchIterator, [{\n    key: \"summary\",\n    value: function summary() {\n      return \"\".concat(this.upstream.summary(), \" -> RowMajorBatch\");\n    }\n  }, {\n    key: \"next\",\n    value: function () {\n      var _next6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14() {\n        var _this9 = this;\n\n        return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                // This sets this.lastRead to a new Promise right away, as opposed to\n                // saying `await this.lastRead; this.lastRead = this.serialNext();` which\n                // would not work because this.nextRead would be updated only after the\n                // promise resolves.\n                this.lastRead = this.lastRead.then(function () {\n                  return _this9.serialNext();\n                });\n                return _context14.abrupt(\"return\", this.lastRead);\n\n              case 2:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this);\n      }));\n\n      function next() {\n        return _next6.apply(this, arguments);\n      }\n\n      return next;\n    }()\n  }, {\n    key: \"serialNext\",\n    value: function () {\n      var _serialNext3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee15() {\n        var batch, item;\n        return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                batch = [];\n\n              case 1:\n                if (!(batch.length < this.batchSize)) {\n                  _context15.next = 12;\n                  break;\n                }\n\n                _context15.next = 4;\n                return this.upstream.next();\n\n              case 4:\n                item = _context15.sent;\n\n                if (!item.done) {\n                  _context15.next = 9;\n                  break;\n                }\n\n                if (!(this.enableSmallLastBatch && batch.length > 0)) {\n                  _context15.next = 8;\n                  break;\n                }\n\n                return _context15.abrupt(\"return\", {\n                  value: batch,\n                  done: false\n                });\n\n              case 8:\n                return _context15.abrupt(\"return\", {\n                  value: null,\n                  done: true\n                });\n\n              case 9:\n                batch.push(item.value);\n                _context15.next = 1;\n                break;\n\n              case 12:\n                return _context15.abrupt(\"return\", {\n                  value: batch,\n                  done: false\n                });\n\n              case 13:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this);\n      }));\n\n      function serialNext() {\n        return _serialNext3.apply(this, arguments);\n      }\n\n      return serialNext;\n    }()\n  }]);\n\n  return RowMajorBatchIterator;\n}(LazyIterator);\n\nvar FilterIterator = /*#__PURE__*/function (_LazyIterator7) {\n  _inherits(FilterIterator, _LazyIterator7);\n\n  var _super7 = _createSuper(FilterIterator);\n\n  function FilterIterator(upstream, predicate) {\n    var _this10;\n\n    _classCallCheck(this, FilterIterator);\n\n    _this10 = _super7.call(this);\n    _this10.upstream = upstream;\n    _this10.predicate = predicate;\n    _this10.lastRead = Promise.resolve({\n      value: null,\n      done: false\n    });\n    return _this10;\n  }\n\n  _createClass(FilterIterator, [{\n    key: \"summary\",\n    value: function summary() {\n      return \"\".concat(this.upstream.summary(), \" -> Filter\");\n    }\n  }, {\n    key: \"next\",\n    value: function () {\n      var _next7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee16() {\n        var _this11 = this;\n\n        return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                // This sets this.lastRead to a new Promise right away, as opposed to\n                // saying `await this.lastRead; this.lastRead = this.serialNext();` which\n                // would not work because this.nextRead would be updated only after the\n                // promise resolves.\n                this.lastRead = this.lastRead.then(function () {\n                  return _this11.serialNext();\n                });\n                return _context16.abrupt(\"return\", this.lastRead);\n\n              case 2:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16, this);\n      }));\n\n      function next() {\n        return _next7.apply(this, arguments);\n      }\n\n      return next;\n    }()\n  }, {\n    key: \"serialNext\",\n    value: function () {\n      var _serialNext4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee17() {\n        var item;\n        return _regeneratorRuntime.wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                if (!true) {\n                  _context17.next = 9;\n                  break;\n                }\n\n                _context17.next = 3;\n                return this.upstream.next();\n\n              case 3:\n                item = _context17.sent;\n\n                if (!(item.done || this.predicate(item.value))) {\n                  _context17.next = 6;\n                  break;\n                }\n\n                return _context17.abrupt(\"return\", item);\n\n              case 6:\n                tf.dispose(item.value);\n                _context17.next = 0;\n                break;\n\n              case 9:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }, _callee17, this);\n      }));\n\n      function serialNext() {\n        return _serialNext4.apply(this, arguments);\n      }\n\n      return serialNext;\n    }()\n  }]);\n\n  return FilterIterator;\n}(LazyIterator);\n\nvar MapIterator = /*#__PURE__*/function (_LazyIterator8) {\n  _inherits(MapIterator, _LazyIterator8);\n\n  var _super8 = _createSuper(MapIterator);\n\n  function MapIterator(upstream, transform) {\n    var _this12;\n\n    _classCallCheck(this, MapIterator);\n\n    _this12 = _super8.call(this);\n    _this12.upstream = upstream;\n    _this12.transform = transform;\n    return _this12;\n  }\n\n  _createClass(MapIterator, [{\n    key: \"summary\",\n    value: function summary() {\n      return \"\".concat(this.upstream.summary(), \" -> Map\");\n    }\n  }, {\n    key: \"next\",\n    value: function () {\n      var _next8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee18() {\n        var item, inputTensors, mapped, outputTensors, _iterator, _step, t;\n\n        return _regeneratorRuntime.wrap(function _callee18$(_context18) {\n          while (1) {\n            switch (_context18.prev = _context18.next) {\n              case 0:\n                _context18.next = 2;\n                return this.upstream.next();\n\n              case 2:\n                item = _context18.sent;\n\n                if (!item.done) {\n                  _context18.next = 5;\n                  break;\n                }\n\n                return _context18.abrupt(\"return\", {\n                  value: null,\n                  done: true\n                });\n\n              case 5:\n                inputTensors = tf.tensor_util.getTensorsInContainer(item.value); // Careful: the transform may mutate the item in place.\n                // That's why we have to remember the input Tensors above, and then\n                // below dispose only those that were not passed through to the output.\n                // Note too that the transform function is responsible for tidying\n                // any intermediate Tensors.  Here we are concerned only about the\n                // inputs.\n\n                mapped = this.transform(item.value);\n                outputTensors = tf.tensor_util.getTensorsInContainer(mapped); // TODO(soergel) faster intersection\n                // TODO(soergel) move to tf.disposeExcept(in, out)?\n\n                _iterator = _createForOfIteratorHelper(inputTensors);\n\n                try {\n                  for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                    t = _step.value;\n\n                    if (!tf.tensor_util.isTensorInList(t, outputTensors)) {\n                      t.dispose();\n                    }\n                  }\n                } catch (err) {\n                  _iterator.e(err);\n                } finally {\n                  _iterator.f();\n                }\n\n                return _context18.abrupt(\"return\", {\n                  value: mapped,\n                  done: false\n                });\n\n              case 11:\n              case \"end\":\n                return _context18.stop();\n            }\n          }\n        }, _callee18, this);\n      }));\n\n      function next() {\n        return _next8.apply(this, arguments);\n      }\n\n      return next;\n    }()\n  }]);\n\n  return MapIterator;\n}(LazyIterator);\n\nvar ErrorHandlingLazyIterator = /*#__PURE__*/function (_LazyIterator9) {\n  _inherits(ErrorHandlingLazyIterator, _LazyIterator9);\n\n  var _super9 = _createSuper(ErrorHandlingLazyIterator);\n\n  function ErrorHandlingLazyIterator(upstream, handler) {\n    var _this13;\n\n    _classCallCheck(this, ErrorHandlingLazyIterator);\n\n    _this13 = _super9.call(this);\n    _this13.upstream = upstream;\n    _this13.handler = handler;\n    _this13.count = 0;\n    _this13.lastRead = Promise.resolve({\n      value: null,\n      done: false\n    });\n    return _this13;\n  }\n\n  _createClass(ErrorHandlingLazyIterator, [{\n    key: \"summary\",\n    value: function summary() {\n      return \"\".concat(this.upstream.summary(), \" -> handleErrors\");\n    }\n  }, {\n    key: \"next\",\n    value: function () {\n      var _next9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee19() {\n        var _this14 = this;\n\n        return _regeneratorRuntime.wrap(function _callee19$(_context19) {\n          while (1) {\n            switch (_context19.prev = _context19.next) {\n              case 0:\n                // This sets this.lastRead to a new Promise right away, as opposed to\n                // saying `await this.lastRead; this.lastRead = this.serialNext();` which\n                // would not work because this.nextRead would be updated only after the\n                // promise resolves.\n                this.lastRead = this.lastRead.then(function () {\n                  return _this14.serialNext();\n                });\n                return _context19.abrupt(\"return\", this.lastRead);\n\n              case 2:\n              case \"end\":\n                return _context19.stop();\n            }\n          }\n        }, _callee19, this);\n      }));\n\n      function next() {\n        return _next9.apply(this, arguments);\n      }\n\n      return next;\n    }()\n  }, {\n    key: \"serialNext\",\n    value: function () {\n      var _serialNext5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee20() {\n        return _regeneratorRuntime.wrap(function _callee20$(_context20) {\n          while (1) {\n            switch (_context20.prev = _context20.next) {\n              case 0:\n                if (!true) {\n                  _context20.next = 13;\n                  break;\n                }\n\n                _context20.prev = 1;\n                _context20.next = 4;\n                return this.upstream.next();\n\n              case 4:\n                return _context20.abrupt(\"return\", _context20.sent);\n\n              case 7:\n                _context20.prev = 7;\n                _context20.t0 = _context20[\"catch\"](1);\n\n                if (this.handler(_context20.t0)) {\n                  _context20.next = 11;\n                  break;\n                }\n\n                return _context20.abrupt(\"return\", {\n                  value: null,\n                  done: true\n                });\n\n              case 11:\n                _context20.next = 0;\n                break;\n\n              case 13:\n              case \"end\":\n                return _context20.stop();\n            }\n          }\n        }, _callee20, this, [[1, 7]]);\n      }));\n\n      function serialNext() {\n        return _serialNext5.apply(this, arguments);\n      }\n\n      return serialNext;\n    }()\n  }]);\n\n  return ErrorHandlingLazyIterator;\n}(LazyIterator);\n\nvar AsyncMapIterator = /*#__PURE__*/function (_LazyIterator10) {\n  _inherits(AsyncMapIterator, _LazyIterator10);\n\n  var _super10 = _createSuper(AsyncMapIterator);\n\n  function AsyncMapIterator(upstream, transform) {\n    var _this15;\n\n    _classCallCheck(this, AsyncMapIterator);\n\n    _this15 = _super10.call(this);\n    _this15.upstream = upstream;\n    _this15.transform = transform;\n    return _this15;\n  }\n\n  _createClass(AsyncMapIterator, [{\n    key: \"summary\",\n    value: function summary() {\n      return \"\".concat(this.upstream.summary(), \" -> AsyncMap\");\n    }\n  }, {\n    key: \"next\",\n    value: function () {\n      var _next10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee21() {\n        var item, inputTensors, mapped, outputTensors, _iterator2, _step2, t;\n\n        return _regeneratorRuntime.wrap(function _callee21$(_context21) {\n          while (1) {\n            switch (_context21.prev = _context21.next) {\n              case 0:\n                _context21.next = 2;\n                return this.upstream.next();\n\n              case 2:\n                item = _context21.sent;\n\n                if (!item.done) {\n                  _context21.next = 5;\n                  break;\n                }\n\n                return _context21.abrupt(\"return\", {\n                  value: null,\n                  done: true\n                });\n\n              case 5:\n                inputTensors = tf.tensor_util.getTensorsInContainer(item.value); // Careful: the transform may mutate the item in place.\n                // That's why we have to remember the input Tensors above, and then\n                // below dispose only those that were not passed through to the output.\n                // Note too that the transform function is responsible for tidying\n                // any intermediate Tensors.  Here we are concerned only about the\n                // inputs.\n\n                _context21.next = 8;\n                return this.transform(item.value);\n\n              case 8:\n                mapped = _context21.sent;\n                outputTensors = tf.tensor_util.getTensorsInContainer(mapped); // TODO(soergel) faster intersection\n                // TODO(soergel) move to tf.disposeExcept(in, out)?\n\n                _iterator2 = _createForOfIteratorHelper(inputTensors);\n\n                try {\n                  for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                    t = _step2.value;\n\n                    if (!tf.tensor_util.isTensorInList(t, outputTensors)) {\n                      t.dispose();\n                    }\n                  }\n                } catch (err) {\n                  _iterator2.e(err);\n                } finally {\n                  _iterator2.f();\n                }\n\n                return _context21.abrupt(\"return\", {\n                  value: mapped,\n                  done: false\n                });\n\n              case 13:\n              case \"end\":\n                return _context21.stop();\n            }\n          }\n        }, _callee21, this);\n      }));\n\n      function next() {\n        return _next10.apply(this, arguments);\n      }\n\n      return next;\n    }()\n  }]);\n\n  return AsyncMapIterator;\n}(LazyIterator); // Iterators that maintain a queue of pending items\n// ============================================================================\n\n/**\n * A base class for transforming streams that operate by maintaining an\n * output queue of elements that are ready to return via next().  This is\n * commonly required when the transformation is 1-to-many:  A call to next()\n * may trigger a call to the underlying stream, which will produce many\n * mapped elements of this stream-- of which we need to return only one, so\n * we have to queue the rest.\n */\n\n\nexport var OneToManyIterator = /*#__PURE__*/function (_LazyIterator11) {\n  _inherits(OneToManyIterator, _LazyIterator11);\n\n  var _super11 = _createSuper(OneToManyIterator);\n\n  function OneToManyIterator() {\n    var _this16;\n\n    _classCallCheck(this, OneToManyIterator);\n\n    _this16 = _super11.call(this);\n    _this16.outputQueue = new GrowingRingBuffer();\n    _this16.lastRead = Promise.resolve({\n      value: null,\n      done: false\n    });\n    return _this16;\n  }\n\n  _createClass(OneToManyIterator, [{\n    key: \"next\",\n    value: function () {\n      var _next11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee22() {\n        var _this17 = this;\n\n        return _regeneratorRuntime.wrap(function _callee22$(_context22) {\n          while (1) {\n            switch (_context22.prev = _context22.next) {\n              case 0:\n                // This sets this.lastRead to a new Promise right away, as opposed to\n                // saying `await this.lastRead; this.lastRead = this.serialNext();` which\n                // would not work because this.nextRead would be updated only after the\n                // promise resolves.\n                this.lastRead = this.lastRead.then(function () {\n                  return _this17.serialNext();\n                });\n                return _context22.abrupt(\"return\", this.lastRead);\n\n              case 2:\n              case \"end\":\n                return _context22.stop();\n            }\n          }\n        }, _callee22, this);\n      }));\n\n      function next() {\n        return _next11.apply(this, arguments);\n      }\n\n      return next;\n    }()\n  }, {\n    key: \"serialNext\",\n    value: function () {\n      var _serialNext6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee23() {\n        return _regeneratorRuntime.wrap(function _callee23$(_context23) {\n          while (1) {\n            switch (_context23.prev = _context23.next) {\n              case 0:\n                if (!(this.outputQueue.length() === 0)) {\n                  _context23.next = 7;\n                  break;\n                }\n\n                _context23.next = 3;\n                return this.pump();\n\n              case 3:\n                if (_context23.sent) {\n                  _context23.next = 5;\n                  break;\n                }\n\n                return _context23.abrupt(\"return\", {\n                  value: null,\n                  done: true\n                });\n\n              case 5:\n                _context23.next = 0;\n                break;\n\n              case 7:\n                return _context23.abrupt(\"return\", {\n                  value: this.outputQueue.shift(),\n                  done: false\n                });\n\n              case 8:\n              case \"end\":\n                return _context23.stop();\n            }\n          }\n        }, _callee23, this);\n      }));\n\n      function serialNext() {\n        return _serialNext6.apply(this, arguments);\n      }\n\n      return serialNext;\n    }()\n  }]);\n\n  return OneToManyIterator;\n}(LazyIterator);\n\nvar FlatmapIterator = /*#__PURE__*/function (_OneToManyIterator) {\n  _inherits(FlatmapIterator, _OneToManyIterator);\n\n  var _super12 = _createSuper(FlatmapIterator);\n\n  function FlatmapIterator(upstream, transform) {\n    var _this18;\n\n    _classCallCheck(this, FlatmapIterator);\n\n    _this18 = _super12.call(this);\n    _this18.upstream = upstream;\n    _this18.transform = transform;\n    return _this18;\n  }\n\n  _createClass(FlatmapIterator, [{\n    key: \"summary\",\n    value: function summary() {\n      return \"\".concat(this.upstream.summary(), \" -> Flatmap\");\n    }\n  }, {\n    key: \"pump\",\n    value: function () {\n      var _pump = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee24() {\n        var item, inputTensors, mappedArray, outputTensors, _iterator3, _step3, t;\n\n        return _regeneratorRuntime.wrap(function _callee24$(_context24) {\n          while (1) {\n            switch (_context24.prev = _context24.next) {\n              case 0:\n                _context24.next = 2;\n                return this.upstream.next();\n\n              case 2:\n                item = _context24.sent;\n\n                if (!item.done) {\n                  _context24.next = 5;\n                  break;\n                }\n\n                return _context24.abrupt(\"return\", false);\n\n              case 5:\n                inputTensors = tf.tensor_util.getTensorsInContainer(item.value); // Careful: the transform may mutate the item in place.\n                // that's why we have to remember the input Tensors above, and then\n                // below dispose only those that were not passed through to the output.\n                // Note too that the transform function is responsible for tidying any\n                // intermediate Tensors.  Here we are concerned only about the inputs.\n\n                mappedArray = this.transform(item.value);\n                outputTensors = tf.tensor_util.getTensorsInContainer(mappedArray);\n                this.outputQueue.pushAll(mappedArray); // TODO(soergel) faster intersection, and deduplicate outputTensors\n                // TODO(soergel) move to tf.disposeExcept(in, out)?\n\n                _iterator3 = _createForOfIteratorHelper(inputTensors);\n\n                try {\n                  for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                    t = _step3.value;\n\n                    if (!tf.tensor_util.isTensorInList(t, outputTensors)) {\n                      t.dispose();\n                    }\n                  }\n                } catch (err) {\n                  _iterator3.e(err);\n                } finally {\n                  _iterator3.f();\n                }\n\n                return _context24.abrupt(\"return\", true);\n\n              case 12:\n              case \"end\":\n                return _context24.stop();\n            }\n          }\n        }, _callee24, this);\n      }));\n\n      function pump() {\n        return _pump.apply(this, arguments);\n      }\n\n      return pump;\n    }()\n  }]);\n\n  return FlatmapIterator;\n}(OneToManyIterator);\n/**\n * Provides a `LazyIterator` that concatenates a stream of underlying\n * streams.\n *\n * Doing this in a concurrency-safe way requires some trickery.  In\n * particular, we want this stream to return the elements from the\n * underlying streams in the correct order according to when next() was\n * called, even if the resulting Promises resolve in a different order.\n */\n\n\nexport var ChainedIterator = /*#__PURE__*/function (_LazyIterator12) {\n  _inherits(ChainedIterator, _LazyIterator12);\n\n  var _super13 = _createSuper(ChainedIterator);\n\n  function ChainedIterator(iterators, baseErrorHandler) {\n    var _this19;\n\n    _classCallCheck(this, ChainedIterator);\n\n    _this19 = _super13.call(this);\n    _this19.baseErrorHandler = baseErrorHandler; // Strict Promise execution order:\n    // a next() call may not even begin until the previous one completes.\n\n    _this19.lastRead = null; // Local state that should not be clobbered by out-of-order execution.\n\n    _this19.iterator = null;\n    _this19.moreIterators = iterators;\n    return _this19;\n  }\n\n  _createClass(ChainedIterator, [{\n    key: \"summary\",\n    value: function summary() {\n      var upstreamSummaries = 'TODO: fill in upstream of chained summaries';\n      return \"\".concat(upstreamSummaries, \" -> Chained\");\n    }\n  }, {\n    key: \"next\",\n    value: function () {\n      var _next12 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee25() {\n        return _regeneratorRuntime.wrap(function _callee25$(_context25) {\n          while (1) {\n            switch (_context25.prev = _context25.next) {\n              case 0:\n                this.lastRead = this.readFromChain(this.lastRead);\n                return _context25.abrupt(\"return\", this.lastRead);\n\n              case 2:\n              case \"end\":\n                return _context25.stop();\n            }\n          }\n        }, _callee25, this);\n      }));\n\n      function next() {\n        return _next12.apply(this, arguments);\n      }\n\n      return next;\n    }()\n  }, {\n    key: \"readFromChain\",\n    value: function () {\n      var _readFromChain = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee26(lastRead) {\n        var iteratorResult, itemResult;\n        return _regeneratorRuntime.wrap(function _callee26$(_context26) {\n          while (1) {\n            switch (_context26.prev = _context26.next) {\n              case 0:\n                _context26.next = 2;\n                return lastRead;\n\n              case 2:\n                if (!(this.iterator == null)) {\n                  _context26.next = 10;\n                  break;\n                }\n\n                _context26.next = 5;\n                return this.moreIterators.next();\n\n              case 5:\n                iteratorResult = _context26.sent;\n\n                if (!iteratorResult.done) {\n                  _context26.next = 8;\n                  break;\n                }\n\n                return _context26.abrupt(\"return\", {\n                  value: null,\n                  done: true\n                });\n\n              case 8:\n                this.iterator = iteratorResult.value;\n\n                if (this.baseErrorHandler != null) {\n                  this.iterator = this.iterator.handleErrors(this.baseErrorHandler);\n                }\n\n              case 10:\n                _context26.next = 12;\n                return this.iterator.next();\n\n              case 12:\n                itemResult = _context26.sent;\n\n                if (!itemResult.done) {\n                  _context26.next = 16;\n                  break;\n                }\n\n                this.iterator = null;\n                return _context26.abrupt(\"return\", this.readFromChain(lastRead));\n\n              case 16:\n                return _context26.abrupt(\"return\", itemResult);\n\n              case 17:\n              case \"end\":\n                return _context26.stop();\n            }\n          }\n        }, _callee26, this);\n      }));\n\n      function readFromChain(_x4) {\n        return _readFromChain.apply(this, arguments);\n      }\n\n      return readFromChain;\n    }()\n  }]);\n\n  return ChainedIterator;\n}(LazyIterator);\nexport var ZipMismatchMode;\n\n(function (ZipMismatchMode) {\n  ZipMismatchMode[ZipMismatchMode[\"FAIL\"] = 0] = \"FAIL\";\n  ZipMismatchMode[ZipMismatchMode[\"SHORTEST\"] = 1] = \"SHORTEST\";\n  ZipMismatchMode[ZipMismatchMode[\"LONGEST\"] = 2] = \"LONGEST\"; // use nulls for exhausted streams; use up the longest stream.\n})(ZipMismatchMode || (ZipMismatchMode = {}));\n/**\n * Provides a `LazyIterator` that zips together an array, dict, or nested\n * structure of `LazyIterator`s (and perhaps additional constants).\n *\n * The underlying streams must provide elements in a consistent order such\n * that they correspond.\n *\n * Typically, the underlying streams should have the same number of\n * elements. If they do not, the behavior is determined by the\n * `mismatchMode` argument.\n *\n * The nested structure of the `iterators` argument determines the\n * structure of elements in the resulting iterator.\n *\n * Doing this in a concurrency-safe way requires some trickery.  In\n * particular, we want this stream to return the elements from the\n * underlying streams in the correct order according to when next() was\n * called, even if the resulting Promises resolve in a different order.\n *\n * @param iterators: An array or object containing LazyIterators at the\n * leaves.\n * @param mismatchMode: Determines what to do when one underlying iterator\n * is exhausted before the others.  `ZipMismatchMode.FAIL` (the default)\n * causes an error to be thrown in this case.  `ZipMismatchMode.SHORTEST`\n * causes the zipped iterator to terminate with the furst underlying\n * streams, so elements remaining on the longer streams are ignored.\n * `ZipMismatchMode.LONGEST` causes the zipped stream to continue, filling\n * in nulls for the exhausted streams, until all streams are exhausted.\n */\n\n\nvar ZipIterator = /*#__PURE__*/function (_LazyIterator13) {\n  _inherits(ZipIterator, _LazyIterator13);\n\n  var _super14 = _createSuper(ZipIterator);\n\n  function ZipIterator(iterators) {\n    var _this20;\n\n    var mismatchMode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ZipMismatchMode.FAIL;\n\n    _classCallCheck(this, ZipIterator);\n\n    _this20 = _super14.call(this);\n    _this20.iterators = iterators;\n    _this20.mismatchMode = mismatchMode;\n    _this20.count = 0;\n    _this20.currentPromise = null;\n    return _this20;\n  }\n\n  _createClass(ZipIterator, [{\n    key: \"summary\",\n    value: function summary() {\n      var upstreamSummaries = 'TODO: fill in upstream of zip summaries';\n      return \"{\".concat(upstreamSummaries, \"} -> Zip\");\n    }\n  }, {\n    key: \"nextState\",\n    value: function () {\n      var _nextState = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee27(afterState) {\n        var numIterators, iteratorsDone, getNext, mapped;\n        return _regeneratorRuntime.wrap(function _callee27$(_context27) {\n          while (1) {\n            switch (_context27.prev = _context27.next) {\n              case 0:\n                getNext = function _getNext(container) {\n                  if (container instanceof LazyIterator) {\n                    var result = container.next();\n                    return {\n                      value: result.then(function (x) {\n                        numIterators++;\n\n                        if (x.done) {\n                          iteratorsDone++;\n                        }\n\n                        return x.value;\n                      }),\n                      recurse: false\n                    };\n                  } else {\n                    return {\n                      value: null,\n                      recurse: true\n                    };\n                  }\n                };\n\n                _context27.next = 3;\n                return afterState;\n\n              case 3:\n                // Collect underlying iterator \"done\" signals as a side effect in\n                // getNext()\n                numIterators = 0;\n                iteratorsDone = 0;\n                _context27.next = 7;\n                return deepMapAndAwaitAll(this.iterators, getNext);\n\n              case 7:\n                mapped = _context27.sent;\n\n                if (!(numIterators === iteratorsDone)) {\n                  _context27.next = 10;\n                  break;\n                }\n\n                return _context27.abrupt(\"return\", {\n                  value: null,\n                  done: true\n                });\n\n              case 10:\n                if (!(iteratorsDone > 0)) {\n                  _context27.next = 16;\n                  break;\n                }\n\n                _context27.t0 = this.mismatchMode;\n                _context27.next = _context27.t0 === ZipMismatchMode.FAIL ? 14 : _context27.t0 === ZipMismatchMode.SHORTEST ? 15 : _context27.t0 === ZipMismatchMode.LONGEST ? 16 : 16;\n                break;\n\n              case 14:\n                throw new Error('Zipped streams should have the same length. ' + \"Mismatched at element \".concat(this.count, \".\"));\n\n              case 15:\n                return _context27.abrupt(\"return\", {\n                  value: null,\n                  done: true\n                });\n\n              case 16:\n                this.count++;\n                return _context27.abrupt(\"return\", {\n                  value: mapped,\n                  done: false\n                });\n\n              case 18:\n              case \"end\":\n                return _context27.stop();\n            }\n          }\n        }, _callee27, this);\n      }));\n\n      function nextState(_x5) {\n        return _nextState.apply(this, arguments);\n      }\n\n      return nextState;\n    }()\n  }, {\n    key: \"next\",\n    value: function () {\n      var _next13 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee28() {\n        return _regeneratorRuntime.wrap(function _callee28$(_context28) {\n          while (1) {\n            switch (_context28.prev = _context28.next) {\n              case 0:\n                this.currentPromise = this.nextState(this.currentPromise);\n                return _context28.abrupt(\"return\", this.currentPromise);\n\n              case 2:\n              case \"end\":\n                return _context28.stop();\n            }\n          }\n        }, _callee28, this);\n      }));\n\n      function next() {\n        return _next13.apply(this, arguments);\n      }\n\n      return next;\n    }()\n  }]);\n\n  return ZipIterator;\n}(LazyIterator); // Iterators that maintain a ring buffer of pending promises\n// ============================================================================\n\n/**\n * A stream that prefetches a given number of items from an upstream source,\n * returning them in FIFO order.\n *\n * Note this prefetches Promises, but makes no guarantees about when those\n * Promises resolve.\n */\n\n\nexport var PrefetchIterator = /*#__PURE__*/function (_LazyIterator14) {\n  _inherits(PrefetchIterator, _LazyIterator14);\n\n  var _super15 = _createSuper(PrefetchIterator);\n\n  function PrefetchIterator(upstream, bufferSize) {\n    var _this21;\n\n    _classCallCheck(this, PrefetchIterator);\n\n    _this21 = _super15.call(this);\n    _this21.upstream = upstream;\n    _this21.bufferSize = bufferSize;\n    _this21.buffer = new RingBuffer(bufferSize);\n    return _this21;\n  }\n\n  _createClass(PrefetchIterator, [{\n    key: \"summary\",\n    value: function summary() {\n      return \"\".concat(this.upstream.summary(), \" -> Prefetch\");\n    }\n    /**\n     * Refill the prefetch buffer.  Returns only after the buffer is full, or\n     * the upstream source is exhausted.\n     */\n\n  }, {\n    key: \"refill\",\n    value: function refill() {\n      while (!this.buffer.isFull()) {\n        var v = this.upstream.next();\n        this.buffer.push(v);\n      }\n    }\n  }, {\n    key: \"next\",\n    value: function next() {\n      this.refill(); // This shift will never throw an error because the buffer is always\n      // full after a refill. If the stream is exhausted, the buffer will be\n      // full of Promises that will resolve to the end-of-stream signal.\n\n      return this.buffer.shift();\n    }\n  }]);\n\n  return PrefetchIterator;\n}(LazyIterator);\n/**\n * A stream that performs a sliding-window random shuffle on an upstream\n * source. This is like a `PrefetchIterator` except that the items are\n * returned in randomized order.  Mixing naturally improves as the buffer\n * size increases.\n */\n\nexport var ShuffleIterator = /*#__PURE__*/function (_PrefetchIterator) {\n  _inherits(ShuffleIterator, _PrefetchIterator);\n\n  var _super16 = _createSuper(ShuffleIterator);\n\n  function ShuffleIterator(upstream, windowSize, seed) {\n    var _this22;\n\n    _classCallCheck(this, ShuffleIterator);\n\n    _this22 = _super16.call(this, upstream, windowSize);\n    _this22.upstream = upstream;\n    _this22.windowSize = windowSize; // Local state that should not be clobbered by out-of-order execution.\n\n    _this22.upstreamExhausted = false;\n    _this22.random = seedrandom.alea(seed || tf.util.now().toString());\n    _this22.lastRead = Promise.resolve({\n      value: null,\n      done: false\n    });\n    return _this22;\n  }\n\n  _createClass(ShuffleIterator, [{\n    key: \"next\",\n    value: function () {\n      var _next14 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee29() {\n        var _this23 = this;\n\n        return _regeneratorRuntime.wrap(function _callee29$(_context29) {\n          while (1) {\n            switch (_context29.prev = _context29.next) {\n              case 0:\n                // This sets this.lastRead to a new Promise right away, as opposed to\n                // saying `await this.lastRead; this.lastRead = this.serialNext();` which\n                // would not work because this.nextRead would be updated only after the\n                // promise resolves.\n                this.lastRead = this.lastRead.then(function () {\n                  return _this23.serialNext();\n                });\n                return _context29.abrupt(\"return\", this.lastRead);\n\n              case 2:\n              case \"end\":\n                return _context29.stop();\n            }\n          }\n        }, _callee29, this);\n      }));\n\n      function next() {\n        return _next14.apply(this, arguments);\n      }\n\n      return next;\n    }()\n  }, {\n    key: \"randomInt\",\n    value: function randomInt(max) {\n      return Math.floor(this.random() * max);\n    }\n  }, {\n    key: \"chooseIndex\",\n    value: function chooseIndex() {\n      return this.randomInt(this.buffer.length());\n    }\n  }, {\n    key: \"serialNext\",\n    value: function () {\n      var _serialNext7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee30() {\n        var chosenIndex, result;\n        return _regeneratorRuntime.wrap(function _callee30$(_context30) {\n          while (1) {\n            switch (_context30.prev = _context30.next) {\n              case 0:\n                // TODO(soergel): consider performance\n                if (!this.upstreamExhausted) {\n                  this.refill();\n                }\n\n              case 1:\n                if (this.buffer.isEmpty()) {\n                  _context30.next = 14;\n                  break;\n                }\n\n                chosenIndex = this.chooseIndex();\n                _context30.next = 5;\n                return this.buffer.shuffleExcise(chosenIndex);\n\n              case 5:\n                result = _context30.sent;\n\n                if (!result.done) {\n                  _context30.next = 10;\n                  break;\n                }\n\n                this.upstreamExhausted = true;\n                _context30.next = 12;\n                break;\n\n              case 10:\n                this.refill();\n                return _context30.abrupt(\"return\", result);\n\n              case 12:\n                _context30.next = 1;\n                break;\n\n              case 14:\n                return _context30.abrupt(\"return\", {\n                  value: null,\n                  done: true\n                });\n\n              case 15:\n              case \"end\":\n                return _context30.stop();\n            }\n          }\n        }, _callee30, this);\n      }));\n\n      function serialNext() {\n        return _serialNext7.apply(this, arguments);\n      }\n\n      return serialNext;\n    }()\n  }]);\n\n  return ShuffleIterator;\n}(PrefetchIterator);","import _inherits from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _asyncToGenerator from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _regeneratorRuntime from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/regenerator\";\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * =============================================================================\n */\nimport * as tf from '@tensorflow/tfjs-core';\nimport * as seedrandom from 'seedrandom';\nimport { iteratorFromConcatenated, iteratorFromFunction, iteratorFromItems, iteratorFromZipped, ZipMismatchMode } from './iterators/lazy_iterator';\nimport { canTensorify, deepMapAndAwaitAll, isIterable } from './util/deep_map'; // TODO(soergel): consider vectorized operations within the pipeline.\n\n/**\n * Represents a potentially large list of independent data elements (typically\n * 'samples' or 'examples').\n *\n * A 'data example' may be a primitive, an array, a map from string keys to\n * values, or any nested structure of these.\n *\n * A `Dataset` represents an ordered collection of elements, together with a\n * chain of transformations to be performed on those elements. Each\n * transformation is a method of `Dataset` that returns another `Dataset`, so\n * these may be chained, e.g.\n * `const processedDataset = rawDataset.filter(...).map(...).batch(...)`.\n *\n * Data loading and transformation is done in a lazy, streaming fashion.  The\n * dataset may be iterated over multiple times; each iteration starts the data\n * loading anew and recapitulates the transformations.\n *\n * A `Dataset` is typically processed as a stream of unbatched examples --i.e.,\n * its transformations are applied one example at a time. Batching produces a\n * new `Dataset` where each element is a batch. Batching should usually come\n * last in a pipeline, because data transformations are easier to express on a\n * per-example basis than on a per-batch basis.\n *\n * The following code examples are calling `await dataset.forEachAsync(...)` to\n * iterate once over the entire dataset in order to print out the data.\n *\n * @doc {heading: 'Data', subheading: 'Classes', namespace: 'data'}\n */\n\nexport var Dataset = /*#__PURE__*/function () {\n  function Dataset() {\n    _classCallCheck(this, Dataset);\n\n    this.size = null;\n  } // TODO(soergel): Make Datasets report whether repeated iterator() calls\n  // produce the same result (e.g., reading from a file) or different results\n  // (e.g., from the webcam).  Currently we don't make this distinction but it\n  // could be important for the user to know.\n  // abstract isDeterministic(): boolean;\n\n  /**\n   * Groups elements into batches.\n   *\n   * It is assumed that each of the incoming dataset elements has the same\n   * structure-- i.e. the same set of keys at each location in an object\n   * hierarchy.  For each key, the resulting `Dataset` provides a batched\n   * element collecting all of the incoming values for that key.\n   *\n   *  * Incoming primitives are grouped into a 1-D Tensor.\n   *  * Incoming Tensors are grouped into a new Tensor where the 0'th axis is\n   *    the batch dimension.\n   *  * Incoming arrays are converted to Tensor and then batched.\n   *  * A nested array is interpreted as an n-D Tensor, so the batched result\n   *    has n+1 dimensions.\n   *  * An array that cannot be converted to Tensor produces an error.\n   *\n   * If an array should not be batched as a unit, it should first be converted\n   * to an object with integer keys.\n   *\n   * Here are a few examples:\n   *\n   * Batch a dataset of numbers:\n   * ```js\n   * const a = tf.data.array([1, 2, 3, 4, 5, 6, 7, 8]).batch(4);\n   * await a.forEachAsync(e => e.print());\n   * ```\n   *\n   * Batch a dataset of arrays:\n   * ```js\n   * const b = tf.data.array([[1], [2], [3], [4], [5], [6], [7], [8]]).batch(4);\n   * await b.forEachAsync(e => e.print());\n   * ```\n   *\n   * Batch a dataset of objects:\n   * ```js\n   * const c = tf.data.array([{a: 1, b: 11}, {a: 2, b: 12}, {a: 3, b: 13},\n   *   {a: 4, b: 14}, {a: 5, b: 15}, {a: 6, b: 16}, {a: 7, b: 17},\n   *   {a: 8, b: 18}]).batch(4);\n   * await c.forEachAsync(e => {\n   *   console.log('{');\n   *   for(var key in e) {\n   *     console.log(key+':');\n   *     e[key].print();\n   *   }\n   *   console.log('}');\n   * })\n   * ```\n   *\n   * @param batchSize The number of elements desired per batch.\n   * @param smallLastBatch Whether to emit the final batch when it has fewer\n   *   than batchSize elements. Default true.\n   * @returns A `Dataset`, from which a stream of batches can be obtained.\n   *\n   * @doc {heading: 'Data', subheading: 'Classes'}\n   */\n\n\n  _createClass(Dataset, [{\n    key: \"batch\",\n    value: function batch(batchSize) {\n      var smallLastBatch = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var base = this;\n      tf.util.assert(batchSize > 0, function () {\n        return \"batchSize needs to be positive, but it is\\n      \".concat(batchSize);\n      });\n      var size;\n\n      if (this.size === Infinity || this.size == null) {\n        // If the size of this dataset is infinity or null, the new size keeps the\n        // same.\n        size = this.size;\n      } else if (smallLastBatch) {\n        // If the size of this dataset is known and include small last batch, the\n        // new size is full batch count plus last batch.\n        size = Math.ceil(this.size / batchSize);\n      } else {\n        // If the size of this dataset is known and not include small last batch,\n        // the new size is full batch count.\n        size = Math.floor(this.size / batchSize);\n      }\n\n      return datasetFromIteratorFn( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return base.iterator();\n\n              case 2:\n                return _context.abrupt(\"return\", _context.sent.columnMajorBatch(batchSize, smallLastBatch, deepBatchConcat));\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      })), size);\n    }\n    /**\n     * Concatenates this `Dataset` with another.\n     *\n     * ```js\n     * const a = tf.data.array([1, 2, 3]);\n     * const b = tf.data.array([4, 5, 6]);\n     * const c = a.concatenate(b);\n     * await c.forEachAsync(e => console.log(e));\n     * ```\n     *\n     * @param dataset A `Dataset` to be concatenated onto this one.\n     * @returns A `Dataset`.\n     *\n     * @doc {heading: 'Data', subheading: 'Classes'}\n     */\n\n  }, {\n    key: \"concatenate\",\n    value: function concatenate(dataset) {\n      var base = this;\n      var size;\n\n      if (this.size === Infinity || dataset.size === Infinity) {\n        // If the size of any of these two dataset is infinity, new size is\n        // infinity.\n        size = Infinity;\n      } else if (this.size != null && dataset.size != null) {\n        // If the size of both datasets are known and not infinity, new size is\n        // sum the size of these two datasets.\n        size = this.size + dataset.size;\n      } else {\n        // If neither of these two datasets has infinite size and any of these two\n        // datasets' size is null, the new size is null.\n        size = null;\n      }\n\n      return datasetFromIteratorFn( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return base.iterator();\n\n              case 2:\n                _context2.t0 = _context2.sent;\n                _context2.next = 5;\n                return dataset.iterator();\n\n              case 5:\n                _context2.t1 = _context2.sent;\n                return _context2.abrupt(\"return\", _context2.t0.concatenate.call(_context2.t0, _context2.t1));\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      })), size);\n    }\n    /**\n     * Filters this dataset according to `predicate`.\n     *\n     * ```js\n     * const a = tf.data.array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\n     *   .filter(x => x%2 === 0);\n     * await a.forEachAsync(e => console.log(e));\n     * ```\n     *\n     * @param predicate A function mapping a dataset element to a boolean or a\n     * `Promise` for one.\n     *\n     * @returns A `Dataset` of elements for which the predicate was true.\n     *\n     * @doc {heading: 'Data', subheading: 'Classes'}\n     */\n\n  }, {\n    key: \"filter\",\n    value: function filter(predicate) {\n      var base = this;\n      var size;\n\n      if (this.size === Infinity) {\n        // If the size of this dataset is infinity, new size is infinity\n        size = Infinity;\n      } else {\n        // If this dataset has limited elements, new size is null because it might\n        // exhausted randomly.\n        size = null;\n      }\n\n      return datasetFromIteratorFn( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return base.iterator();\n\n              case 2:\n                return _context3.abrupt(\"return\", _context3.sent.filter(function (x) {\n                  return tf.tidy(function () {\n                    return predicate(x);\n                  });\n                }));\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      })), size);\n    }\n    /**\n     * Apply a function to every element of the dataset.\n     *\n     * After the function is applied to a dataset element, any Tensors contained\n     * within that element are disposed.\n     *\n     * ```js\n     * const a = tf.data.array([1, 2, 3]);\n     * await a.forEachAsync(e => console.log(e));\n     * ```\n     *\n     * @param f A function to apply to each dataset element.\n     * @returns A `Promise` that resolves after all elements have been processed.\n     *\n     * @doc {heading: 'Data', subheading: 'Classes'}\n     */\n\n  }, {\n    key: \"forEachAsync\",\n    value: function () {\n      var _forEachAsync = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(f) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.iterator();\n\n              case 2:\n                return _context4.abrupt(\"return\", _context4.sent.forEachAsync(f));\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function forEachAsync(_x) {\n        return _forEachAsync.apply(this, arguments);\n      }\n\n      return forEachAsync;\n    }()\n    /**\n     * Maps this dataset through a 1-to-1 transform.\n     *\n     * ```js\n     * const a = tf.data.array([1, 2, 3]).map(x => x*x);\n     * await a.forEachAsync(e => console.log(e));\n     * ```\n     *\n     * @param transform A function mapping a dataset element to a transformed\n     *   dataset element.\n     *\n     * @returns A `Dataset` of transformed elements.\n     *\n     * @doc {heading: 'Data', subheading: 'Classes'}\n     */\n\n  }, {\n    key: \"map\",\n    value: function map(transform) {\n      var base = this;\n      return datasetFromIteratorFn( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return base.iterator();\n\n              case 2:\n                return _context5.abrupt(\"return\", _context5.sent.map(function (x) {\n                  return tf.tidy(function () {\n                    return transform(x);\n                  });\n                }));\n\n              case 3:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      })), this.size);\n    }\n    /**\n     * Maps this dataset through an async 1-to-1 transform.\n     *\n     * ```js\n     * const a =\n     *  tf.data.array([1, 2, 3]).mapAsync(x => new Promise(function(resolve){\n     *    setTimeout(() => {\n     *      resolve(x * x);\n     *    }, Math.random()*1000 + 500);\n     *  }));\n     * console.log(await a.toArray());\n     * ```\n     *\n     * @param transform A function mapping a dataset element to a `Promise` for a\n     *   transformed dataset element.  This transform is responsible for disposing\n     *   any intermediate `Tensor`s, i.e. by wrapping its computation in\n     *   `tf.tidy()`; that cannot be automated here (as it is in the synchronous\n     *   `map()` case).\n     *\n     * @returns A `Dataset` of transformed elements.\n     *\n     * @doc {heading: 'Data', subheading: 'Classes'}\n     */\n\n  }, {\n    key: \"mapAsync\",\n    value: function mapAsync(transform) {\n      var base = this;\n      return datasetFromIteratorFn( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return base.iterator();\n\n              case 2:\n                return _context6.abrupt(\"return\", _context6.sent.mapAsync(transform));\n\n              case 3:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      })), this.size);\n    }\n    /**\n     *  Creates a `Dataset` that prefetches elements from this dataset.\n     *\n     * @param bufferSize: An integer specifying the number of elements to be\n     *   prefetched.\n     * @returns A `Dataset`.\n     *\n     * @doc {heading: 'Data', subheading: 'Classes'}\n     */\n\n  }, {\n    key: \"prefetch\",\n    value: function prefetch(bufferSize) {\n      if (bufferSize == null) {\n        throw new RangeError('`Dataset.prefetch()` requires bufferSize to be specified.');\n      }\n\n      var base = this;\n      return datasetFromIteratorFn( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return base.iterator();\n\n              case 2:\n                return _context7.abrupt(\"return\", _context7.sent.prefetch(bufferSize));\n\n              case 3:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      })), this.size);\n    }\n    /**\n     * Repeats this dataset `count` times.\n     *\n     * NOTE: If this dataset is a function of global state (e.g. a random number\n     * generator), then different repetitions may produce different elements.\n     *\n     * ```js\n     * const a = tf.data.array([1, 2, 3]).repeat(3);\n     * await a.forEachAsync(e => console.log(e));\n     * ```\n     *\n     * @param count: (Optional) An integer, representing the number of times\n     *   the dataset should be repeated. The default behavior (if `count` is\n     *   `undefined` or negative) is for the dataset be repeated indefinitely.\n     * @returns A `Dataset`.\n     *\n     * @doc {heading: 'Data', subheading: 'Classes'}\n     */\n\n  }, {\n    key: \"repeat\",\n    value: function repeat(count) {\n      var base = this;\n      var size;\n\n      if (this.size != null && count > 0) {\n        // If this dataset has size and count is positive, new size is current\n        // size multiply count. This also covers the case that current size is\n        // infinity.\n        size = this.size * count;\n      } else if (count === 0) {\n        // If count is 0, new size is 0.\n        size = 0;\n      } else if (this.size != null && (count === undefined || count < 0)) {\n        // If this dataset has size and count is undefined or negative, the\n        // dataset will be repeated indefinitely and new size is infinity.\n        size = Infinity;\n      } else {\n        // If the size of this dataset is null, the new dataset's size is null.\n        size = null;\n      }\n\n      return datasetFromIteratorFn( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n        var iteratorIterator;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                iteratorIterator = iteratorFromFunction( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n                  return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n                    while (1) {\n                      switch (_context8.prev = _context8.next) {\n                        case 0:\n                          _context8.next = 2;\n                          return base.iterator();\n\n                        case 2:\n                          _context8.t0 = _context8.sent;\n                          return _context8.abrupt(\"return\", {\n                            value: _context8.t0,\n                            done: false\n                          });\n\n                        case 4:\n                        case \"end\":\n                          return _context8.stop();\n                      }\n                    }\n                  }, _callee8);\n                })));\n                return _context9.abrupt(\"return\", iteratorFromConcatenated(iteratorIterator.take(count)));\n\n              case 2:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9);\n      })), size);\n    }\n    /**\n     * Creates a `Dataset` that skips `count` initial elements from this dataset.\n     *\n     * ```js\n     * const a = tf.data.array([1, 2, 3, 4, 5, 6]).skip(3);\n     * await a.forEachAsync(e => console.log(e));\n     * ```\n     *\n     * @param count: The number of elements of this dataset that should be skipped\n     *   to form the new dataset.  If `count` is greater than the size of this\n     *   dataset, the new dataset will contain no elements.  If `count`\n     *   is `undefined` or negative, skips the entire dataset.\n     *\n     * @returns A `Dataset`.\n     *\n     * @doc {heading: 'Data', subheading: 'Classes'}\n     */\n\n  }, {\n    key: \"skip\",\n    value: function skip(count) {\n      var base = this;\n      var size;\n\n      if (this.size != null && count >= 0 && this.size >= count) {\n        // If the size of this dataset is greater than count, the new dataset's\n        // size is current size minus skipped size.This also covers the case that\n        // current size is infinity.\n        size = this.size - count;\n      } else if (this.size != null && (this.size < count || count === undefined || count < 0)) {\n        // If the size of this dataset is smaller than count, or count is\n        // undefined or negative, skips the entire dataset and the new size is 0.\n        size = 0;\n      } else {\n        // If the size of this dataset is null, the new dataset's size is null.\n        size = null;\n      }\n\n      return datasetFromIteratorFn( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10() {\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.next = 2;\n                return base.iterator();\n\n              case 2:\n                return _context10.abrupt(\"return\", _context10.sent.skip(count));\n\n              case 3:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10);\n      })), size);\n    }\n    /**\n     * Pseudorandomly shuffles the elements of this dataset. This is done in a\n     * streaming manner, by sampling from a given number of prefetched elements.\n     *\n     * ```js\n     * const a = tf.data.array([1, 2, 3, 4, 5, 6]).shuffle(3);\n     * await a.forEachAsync(e => console.log(e));\n     * ```\n     *\n     * @param bufferSize: An integer specifying the number of elements from this\n     *   dataset from which the new dataset will sample.\n     * @param seed: (Optional) An integer specifying the random seed that will\n     *   be used to create the distribution.\n     * @param reshuffleEachIteration: (Optional) A boolean, which if true\n     *   indicates that the dataset should be pseudorandomly reshuffled each time\n     *   it is iterated over. If false, elements will be returned in the same\n     *   shuffled order on each iteration. (Defaults to `true`.)\n     * @returns A `Dataset`.\n     *\n     * @doc {heading: 'Data', subheading: 'Classes'}\n     */\n\n  }, {\n    key: \"shuffle\",\n    value: function shuffle(bufferSize, seed) {\n      var reshuffleEachIteration = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n      if (bufferSize == null || bufferSize < 0) {\n        if (this.size == null) {\n          throw new RangeError('`Dataset.shuffle()` requires bufferSize to be specified.');\n        } else {\n          throw new RangeError('`Dataset.shuffle()` requires bufferSize to be specified.  ' + 'If your data fits in main memory (for regular JS objects), ' + 'and/or GPU memory (for `tf.Tensor`s), consider setting ' + \"bufferSize to the dataset size (\".concat(this.size, \" elements)\"));\n        }\n      }\n\n      var base = this;\n      var random = seedrandom.alea(seed || tf.util.now().toString());\n      return datasetFromIteratorFn( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11() {\n        var seed2;\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                seed2 = random.int32();\n\n                if (reshuffleEachIteration) {\n                  seed2 += random.int32();\n                }\n\n                _context11.next = 4;\n                return base.iterator();\n\n              case 4:\n                return _context11.abrupt(\"return\", _context11.sent.shuffle(bufferSize, seed2.toString()));\n\n              case 5:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11);\n      })), this.size);\n    }\n    /**\n     * Creates a `Dataset` with at most `count` initial elements from this\n     * dataset.\n     *\n     * ```js\n     * const a = tf.data.array([1, 2, 3, 4, 5, 6]).take(3);\n     * await a.forEachAsync(e => console.log(e));\n     * ```\n     *\n     * @param count: The number of elements of this dataset that should be taken\n     *   to form the new dataset.  If `count` is `undefined` or negative, or if\n     *   `count` is greater than the size of this dataset, the new dataset will\n     *   contain all elements of this dataset.\n     * @returns A `Dataset`.\n     *\n     * @doc {heading: 'Data', subheading: 'Classes'}\n     */\n\n  }, {\n    key: \"take\",\n    value: function take(count) {\n      var base = this;\n      var size;\n\n      if (this.size != null && this.size > count) {\n        // If the size of this dataset is greater than count, the new dataset's\n        // size is count.\n        size = count;\n      } else if (this.size != null && this.size <= count) {\n        // If the size of this dataset is equal or smaller than count, the new\n        // dataset's size is the size of this dataset.\n        size = this.size;\n      } else {\n        // If the size of this dataset is null, the new dataset's size is null.\n        size = null;\n      }\n\n      return datasetFromIteratorFn( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12() {\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                _context12.next = 2;\n                return base.iterator();\n\n              case 2:\n                return _context12.abrupt(\"return\", _context12.sent.take(count));\n\n              case 3:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12);\n      })), size);\n    }\n    /**\n     * Collect all elements of this dataset into an array.\n     *\n     * Obviously this will succeed only for small datasets that fit in memory.\n     * Useful for testing and generally should be avoided if possible.\n     *\n     * ```js\n     * const a = tf.data.array([1, 2, 3, 4, 5, 6]);\n     * console.log(await a.toArray());\n     * ```\n     *\n     * @returns A Promise for an array of elements, which will resolve\n     *   when a new stream has been obtained and fully consumed.\n     *\n     * @doc {heading: 'Data', subheading: 'Classes'}\n     */\n\n  }, {\n    key: \"toArray\",\n    value: function () {\n      var _toArray = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13() {\n        return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                if (!(this.size === Infinity)) {\n                  _context13.next = 2;\n                  break;\n                }\n\n                throw new Error('Can not convert infinite data stream to array.');\n\n              case 2:\n                _context13.next = 4;\n                return this.iterator();\n\n              case 4:\n                return _context13.abrupt(\"return\", _context13.sent.toArray());\n\n              case 5:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      function toArray() {\n        return _toArray.apply(this, arguments);\n      }\n\n      return toArray;\n    }()\n    /**\n     * Collect all elements of this dataset into an array with prefetching 100\n     * elements. This is useful for testing, because the prefetch changes the\n     * order in which the Promises are resolved along the processing pipeline.\n     * This may help expose bugs where results are dependent on the order of\n     * Promise resolution rather than on the logical order of the stream (i.e.,\n     * due to hidden mutable state).\n     *\n     * @returns A Promise for an array of elements, which will resolve\n     *   when a new stream has been obtained and fully consumed.\n     */\n\n  }, {\n    key: \"toArrayForTest\",\n    value: function () {\n      var _toArrayForTest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14() {\n        return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                if (!(this.size === Infinity)) {\n                  _context14.next = 2;\n                  break;\n                }\n\n                throw new Error('Can not convert infinite data stream to array.');\n\n              case 2:\n                _context14.next = 4;\n                return this.iterator();\n\n              case 4:\n                return _context14.abrupt(\"return\", _context14.sent.toArrayForTest());\n\n              case 5:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this);\n      }));\n\n      function toArrayForTest() {\n        return _toArrayForTest.apply(this, arguments);\n      }\n\n      return toArrayForTest;\n    }()\n  }]);\n\n  return Dataset;\n}(); // TODO(soergel): deep sharded shuffle, where supported\n\nDataset.MAX_BUFFER_SIZE = 10000;\n/**\n * Create a `Dataset` defined by a provided iterator() function.\n *\n * ```js\n * let i = -1;\n * const func = () =>\n *    ++i < 5 ? {value: i, done: false} : {value: null, done: true};\n * const iter = tf.data.iteratorFromFunction(func);\n * const ds = tf.data.datasetFromIteratorFn(iter);\n * await ds.forEachAsync(e => console.log(e));\n * ```\n */\n\nexport function datasetFromIteratorFn(iteratorFn) {\n  var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  return new ( /*#__PURE__*/function (_Dataset) {\n    _inherits(_class, _Dataset);\n\n    var _super = _createSuper(_class);\n\n    function _class() {\n      var _this;\n\n      _classCallCheck(this, _class);\n\n      _this = _super.apply(this, arguments);\n      _this.size = size;\n      return _this;\n    }\n    /*\n     * Provide a new stream of elements.  Note this will also start new streams\n     * from any underlying `Dataset`s.\n     */\n\n\n    _createClass(_class, [{\n      key: \"iterator\",\n      value: function () {\n        var _iterator = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee15() {\n          return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n            while (1) {\n              switch (_context15.prev = _context15.next) {\n                case 0:\n                  return _context15.abrupt(\"return\", iteratorFn());\n\n                case 1:\n                case \"end\":\n                  return _context15.stop();\n              }\n            }\n          }, _callee15);\n        }));\n\n        function iterator() {\n          return _iterator.apply(this, arguments);\n        }\n\n        return iterator;\n      }()\n    }]);\n\n    return _class;\n  }(Dataset))();\n}\n/**\n * Create a `Dataset` from an array of elements.\n *\n * Create a Dataset from an array of objects:\n * ```js\n * const a = tf.data.array([{'item': 1}, {'item': 2}, {'item': 3}]);\n * await a.forEachAsync(e => console.log(e));\n * ```\n *\n * Create a Dataset from an array of numbers:\n * ```js\n * const a = tf.data.array([4, 5, 6]);\n * await a.forEachAsync(e => console.log(e));\n * ```\n * @param items An array of elements that will be parsed as items in a dataset.\n *\n * @doc {heading: 'Data', subheading: 'Creation', namespace: 'data'}\n */\n\nexport function array(items) {\n  return datasetFromIteratorFn( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee16() {\n    return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n      while (1) {\n        switch (_context16.prev = _context16.next) {\n          case 0:\n            return _context16.abrupt(\"return\", iteratorFromItems(items));\n\n          case 1:\n          case \"end\":\n            return _context16.stop();\n        }\n      }\n    }, _callee16);\n  })), items.length);\n}\n/**\n * Create a `Dataset` by zipping together an array, dict, or nested\n * structure of `Dataset`s (and perhaps additional constants).\n * The underlying datasets must provide elements in a consistent order such that\n * they correspond.\n *\n * The number of elements in the resulting dataset is the same as the size of\n * the smallest dataset in datasets.\n *\n * The nested structure of the `datasets` argument determines the\n * structure of elements in the resulting iterator.\n *\n * Note this means that, given an array of two datasets that produce dict\n * elements, the result is a dataset that produces elements that are arrays\n * of two dicts:\n *\n * Zip an array of datasets:\n * ```js\n * console.log('Zip two datasets of objects:');\n * const ds1 = tf.data.array([{a: 1}, {a: 2}, {a: 3}]);\n * const ds2 = tf.data.array([{b: 4}, {b: 5}, {b: 6}]);\n * const ds3 = tf.data.zip([ds1, ds2]);\n * await ds3.forEachAsync(e => console.log(JSON.stringify(e)));\n *\n * // If the goal is to merge the dicts in order to produce elements like\n * // {a: ..., b: ...}, this requires a second step such as:\n * console.log('Merge the objects:');\n * const ds4 = ds3.map(x => {return {a: x[0].a, b: x[1].b}});\n * await ds4.forEachAsync(e => console.log(e));\n * ```\n *\n * Zip a dict of datasets:\n * ```js\n * const a = tf.data.array([{a: 1}, {a: 2}, {a: 3}]);\n * const b = tf.data.array([{b: 4}, {b: 5}, {b: 6}]);\n * const c = tf.data.zip({c: a, d: b});\n * await c.forEachAsync(e => console.log(JSON.stringify(e)));\n * ```\n *\n * @doc {heading: 'Data', subheading: 'Operations', namespace: 'data'}\n */\n\nexport function zip(datasets) {\n  // manually type-check the argument for JS users\n  if (!isIterable(datasets)) {\n    throw new Error('The argument to zip() must be an object or array.');\n  }\n\n  var size;\n\n  if (Array.isArray(datasets)) {\n    for (var i = 0; i < datasets.length; i++) {\n      size = size == null ? datasets[i].size : Math.min(size, datasets[i].size);\n    }\n  } else if (datasets instanceof Object) {\n    for (var ds in datasets) {\n      size = size == null ? datasets[ds].size : Math.min(size, datasets[ds].size);\n    }\n  }\n\n  return datasetFromIteratorFn( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee17() {\n    var streams;\n    return _regeneratorRuntime.wrap(function _callee17$(_context17) {\n      while (1) {\n        switch (_context17.prev = _context17.next) {\n          case 0:\n            _context17.next = 2;\n            return deepMapAndAwaitAll(datasets, function (d) {\n              if (d instanceof Dataset) {\n                return {\n                  value: d.iterator(),\n                  recurse: false\n                };\n              } else if (isIterable(d)) {\n                return {\n                  value: null,\n                  recurse: true\n                };\n              } else {\n                throw new Error('Leaves of the structure passed to zip() must be Datasets, ' + 'not primitives.');\n              }\n            });\n\n          case 2:\n            streams = _context17.sent;\n            return _context17.abrupt(\"return\", iteratorFromZipped(streams, ZipMismatchMode.SHORTEST));\n\n          case 4:\n          case \"end\":\n            return _context17.stop();\n        }\n      }\n    }, _callee17);\n  })), size);\n}\n/**\n * A zip function for use with deepZip, passed via the columnMajorBatch call.\n *\n * Accepts an array of identically-structured nested elements and either batches\n * them (if they are primitives, numeric arrays, or Tensors) or requests\n * recursion (if not).\n */\n// tslint:disable-next-line:no-any\n\nfunction deepBatchConcat(rows) {\n  if (rows === null) {\n    return null;\n  } // use the first item to decide whether to recurse or batch here.\n\n\n  var exampleRow = rows[0];\n\n  if (canTensorify(exampleRow)) {\n    // rows is an array of primitives, Tensors, or arrays.  Batch them.\n    var value = batchConcat(rows);\n    return {\n      value: value,\n      recurse: false\n    };\n  } // the example row is an object, so recurse into it.\n\n\n  return {\n    value: null,\n    recurse: true\n  };\n}\n/**\n * Assembles a list of same-shaped numbers, number arrays, or Tensors\n * into a single new Tensor where axis 0 is the batch dimension.\n */\n\n\nfunction batchConcat(arrays) {\n  if (arrays.length === 0) {\n    // We can't return an empty Tensor because we don't know the element shape.\n    throw new Error('Can\\'t make a batch of zero elements.');\n  }\n\n  if (arrays[0] instanceof tf.Tensor) {\n    // Input is an array of Tensors\n    return tf.stack(arrays);\n  } else {\n    // Input is a possibly-nested array of numbers.\n    return tf.tensor(arrays);\n  }\n}","import _asyncToGenerator from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _regeneratorRuntime from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * =============================================================================\n */\nimport { Dataset } from '../dataset';\n/**\n * Represents a potentially large collection of text lines.\n *\n * The results are not batched.\n */\n\nexport var TextLineDataset = /*#__PURE__*/function (_Dataset) {\n  _inherits(TextLineDataset, _Dataset);\n\n  var _super = _createSuper(TextLineDataset);\n\n  /**\n   * Create a `TextLineDataset`.\n   *\n   * @param input A `DataSource` providing a chunked, UTF8-encoded byte stream.\n   */\n  function TextLineDataset(input) {\n    var _this;\n\n    _classCallCheck(this, TextLineDataset);\n\n    _this = _super.call(this);\n    _this.input = input;\n    return _this;\n  }\n\n  _createClass(TextLineDataset, [{\n    key: \"iterator\",\n    value: function () {\n      var _iterator = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var inputIterator, utf8Iterator, lineIterator;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.input.iterator();\n\n              case 2:\n                inputIterator = _context.sent;\n                utf8Iterator = inputIterator.decodeUTF8();\n                lineIterator = utf8Iterator.split('\\n').map(function (line) {\n                  // Windows/DOS format text file has extra line breaker at the end of line.\n                  if (line.endsWith('\\r')) {\n                    line = line.slice(0, -1);\n                  }\n\n                  return line;\n                });\n                return _context.abrupt(\"return\", lineIterator);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function iterator() {\n        return _iterator.apply(this, arguments);\n      }\n\n      return iterator;\n    }()\n  }]);\n\n  return TextLineDataset;\n}(Dataset);","import _asyncToGenerator from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _regeneratorRuntime from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\nimport { Dataset } from '../dataset';\nimport { TextLineDataset } from './text_line_dataset';\nvar CODE_QUOTE = '\"';\nvar STATE_OUT = Symbol('out');\nvar STATE_FIELD = Symbol('field');\nvar STATE_QUOTE = Symbol('quote');\nvar STATE_QUOTE_AFTER_QUOTE = Symbol('quoteafterquote');\nvar STATE_WITHIN_QUOTE_IN_QUOTE = Symbol('quoteinquote');\n/**\n * Represents a potentially large collection of delimited text records.\n *\n * The produced `TensorContainer`s each contain one key-value pair for\n * every column of the table.  When a field is empty in the incoming data, the\n * resulting value is `undefined`, or throw error if it is required.  Values\n * that can be parsed as numbers are emitted as type `number`, other values\n * are parsed as `string`.\n *\n * The results are not batched.\n *\n * @doc {heading: 'Data', subheading: 'Classes', namespace: 'data'}\n */\n\nexport var CSVDataset = /*#__PURE__*/function (_Dataset) {\n  _inherits(CSVDataset, _Dataset);\n\n  var _super = _createSuper(CSVDataset);\n\n  /**\n   * Create a `CSVDataset`.\n   *\n   * @param input A `DataSource` providing a chunked, UTF8-encoded byte stream.\n   * @param csvConfig (Optional) A CSVConfig object that contains configurations\n   *     of reading and decoding from CSV file(s).\n   *\n   *     hasHeader: (Optional) A boolean value that indicates whether the first\n   *     row of provided CSV file is a header line with column names, and should\n   *     not be included in the data. Defaults to `true`.\n   *\n   *     columnNames: (Optional) A list of strings that corresponds to\n   *     the CSV column names, in order. If provided, it ignores the column\n   *     names inferred from the header row. If not provided, infers the column\n   *     names from the first row of the records. If hasHeader is false and\n   *     columnNames is not provided, this method throws an error.\n   *\n   *     columnConfigs: (Optional) A dictionary whose key is column names, value\n   *     is an object stating if this column is required, column's data type,\n   *     default value, and if this column is label. If provided, keys must\n   *     correspond to names provided in columnNames or inferred from the file\n   *     header lines. If isLabel is true any column, returns an array of two\n   *     items: the first item is a dict of features key/value pairs, the second\n   *     item is a dict of labels key/value pairs. If no feature is marked as\n   *     label, returns a dict of features only.\n   *\n   *     configuredColumnsOnly (Optional) If true, only columns provided in\n   *     columnConfigs will be parsed and provided during iteration.\n   *\n   *     delimiter (Optional) The string used to parse each line of the input\n   *     file. Defaults to `,`.\n   */\n  function CSVDataset(input, csvConfig) {\n    var _this;\n\n    _classCallCheck(this, CSVDataset);\n\n    _this = _super.call(this);\n    _this.input = input;\n    _this.hasHeader = true;\n    _this.fullColumnNames = null;\n    _this.columnNamesValidated = false;\n    _this.columnConfigs = null;\n    _this.configuredColumnsOnly = false;\n    _this.delimiter = ',';\n    _this.delimWhitespace = false;\n    _this.base = new TextLineDataset(input);\n\n    if (!csvConfig) {\n      csvConfig = {};\n    }\n\n    _this.hasHeader = csvConfig.hasHeader === false ? false : true;\n    _this.fullColumnNames = csvConfig.columnNames;\n    _this.columnConfigs = csvConfig.columnConfigs;\n    _this.configuredColumnsOnly = csvConfig.configuredColumnsOnly;\n\n    if (csvConfig.delimWhitespace) {\n      util.assert(csvConfig.delimiter == null, function () {\n        return 'Delimiter should not be provided when delimWhitespace is true.';\n      });\n      _this.delimWhitespace = true;\n      _this.delimiter = ' ';\n    } else {\n      _this.delimiter = csvConfig.delimiter ? csvConfig.delimiter : ',';\n    }\n\n    return _this;\n  }\n  /**\n   * Returns column names of the csv dataset. If `configuredColumnsOnly` is\n   * true, return column names in `columnConfigs`. If `configuredColumnsOnly` is\n   * false and `columnNames` is provided, `columnNames`. If\n   * `configuredColumnsOnly` is false and `columnNames` is not provided, return\n   * all column names parsed from the csv file. For example usage please go to\n   * `tf.data.csv`.\n   *\n   * @doc {heading: 'Data', subheading: 'Classes'}\n   */\n\n\n  _createClass(CSVDataset, [{\n    key: \"columnNames\",\n    value: function () {\n      var _columnNames = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this.columnNamesValidated) {\n                  _context.next = 3;\n                  break;\n                }\n\n                _context.next = 3;\n                return this.setColumnNames();\n\n              case 3:\n                return _context.abrupt(\"return\", this.configuredColumnsOnly ? Object.keys(this.columnConfigs) : this.fullColumnNames);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function columnNames() {\n        return _columnNames.apply(this, arguments);\n      }\n\n      return columnNames;\n    }()\n    /* 1) If `columnNames` is provided as string[], use this string[] as output\n     * keys in corresponding order. The length must match the number of inferred\n     * columns if `hasHeader` is true .\n     * 2) If `columnNames` is not provided, parse header line as `columnNames` if\n     * hasHeader is true. If `hasHeader` is false, throw an error.\n     * 3) If `columnConfigs` is provided, all the keys in `columnConfigs` must\n     * exist in parsed `columnNames`.\n     */\n\n  }, {\n    key: \"setColumnNames\",\n    value: function () {\n      var _setColumnNames = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _this2 = this;\n\n        var columnNamesFromFile, counts, duplicateNames, _i, _Object$keys, key, index;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.maybeReadHeaderLine();\n\n              case 2:\n                columnNamesFromFile = _context2.sent;\n\n                if (!(!this.fullColumnNames && !columnNamesFromFile)) {\n                  _context2.next = 7;\n                  break;\n                }\n\n                throw new Error('Column names must be provided if there is no header line.');\n\n              case 7:\n                if (this.fullColumnNames && columnNamesFromFile) {\n                  // Check provided columnNames match header line.\n                  util.assert(columnNamesFromFile.length === this.fullColumnNames.length, function () {\n                    return 'The length of provided columnNames (' + _this2.fullColumnNames.length.toString() + ') does not match the length of the header line read from ' + 'file (' + columnNamesFromFile.length.toString() + ').';\n                  });\n                }\n\n              case 8:\n                if (!this.fullColumnNames) {\n                  this.fullColumnNames = columnNamesFromFile;\n                } // Check if there are duplicate column names.\n\n\n                counts = this.fullColumnNames.reduce(function (countAcc, name) {\n                  countAcc[name] = countAcc[name] + 1 || 1;\n                  return countAcc;\n                }, {});\n                duplicateNames = Object.keys(counts).filter(function (name) {\n                  return counts[name] > 1;\n                });\n                util.assert(duplicateNames.length === 0, function () {\n                  return 'Duplicate column names found: ' + duplicateNames.toString();\n                }); // Check if keys in columnConfigs match columnNames.\n\n                if (!this.columnConfigs) {\n                  _context2.next = 22;\n                  break;\n                }\n\n                _i = 0, _Object$keys = Object.keys(this.columnConfigs);\n\n              case 14:\n                if (!(_i < _Object$keys.length)) {\n                  _context2.next = 22;\n                  break;\n                }\n\n                key = _Object$keys[_i];\n                index = this.fullColumnNames.indexOf(key);\n\n                if (!(index === -1)) {\n                  _context2.next = 19;\n                  break;\n                }\n\n                throw new Error('The key \"' + key + '\" provided in columnConfigs does not match any of the column ' + 'names (' + this.fullColumnNames.toString() + ').');\n\n              case 19:\n                _i++;\n                _context2.next = 14;\n                break;\n\n              case 22:\n                this.columnNamesValidated = true;\n\n              case 23:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function setColumnNames() {\n        return _setColumnNames.apply(this, arguments);\n      }\n\n      return setColumnNames;\n    }()\n  }, {\n    key: \"maybeReadHeaderLine\",\n    value: function () {\n      var _maybeReadHeaderLine = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var iter, firstElement, firstLine, headers;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!this.hasHeader) {\n                  _context3.next = 14;\n                  break;\n                }\n\n                _context3.next = 3;\n                return this.base.iterator();\n\n              case 3:\n                iter = _context3.sent;\n                _context3.next = 6;\n                return iter.next();\n\n              case 6:\n                firstElement = _context3.sent;\n\n                if (!firstElement.done) {\n                  _context3.next = 9;\n                  break;\n                }\n\n                throw new Error('No data was found for CSV parsing.');\n\n              case 9:\n                firstLine = firstElement.value;\n                headers = this.parseRow(firstLine, false);\n                return _context3.abrupt(\"return\", headers);\n\n              case 14:\n                return _context3.abrupt(\"return\", null);\n\n              case 15:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function maybeReadHeaderLine() {\n        return _maybeReadHeaderLine.apply(this, arguments);\n      }\n\n      return maybeReadHeaderLine;\n    }()\n  }, {\n    key: \"iterator\",\n    value: function () {\n      var _iterator = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var _this3 = this;\n\n        var lines;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (this.columnNamesValidated) {\n                  _context4.next = 3;\n                  break;\n                }\n\n                _context4.next = 3;\n                return this.setColumnNames();\n\n              case 3:\n                _context4.next = 5;\n                return this.base.iterator();\n\n              case 5:\n                lines = _context4.sent;\n\n                if (this.hasHeader) {\n                  // We previously read the first line to get the columnNames.\n                  // Now that we're providing data, skip it.\n                  lines = lines.skip(1);\n                }\n\n                return _context4.abrupt(\"return\", lines.map(function (x) {\n                  return _this3.makeDataElement(x);\n                }));\n\n              case 8:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function iterator() {\n        return _iterator.apply(this, arguments);\n      }\n\n      return iterator;\n    }()\n  }, {\n    key: \"makeDataElement\",\n    value: function makeDataElement(line) {\n      var values = this.parseRow(line);\n      var features = {};\n      var labels = {};\n\n      for (var i = 0; i < this.fullColumnNames.length; i++) {\n        var key = this.fullColumnNames[i];\n        var config = this.columnConfigs ? this.columnConfigs[key] : null;\n\n        if (this.configuredColumnsOnly && !config) {\n          // This column is not selected.\n          continue;\n        } else {\n          var value = values[i];\n          var parsedValue = null;\n\n          if (value === '') {\n            // If default value is provided, use it. If default value is not\n            // provided, set as undefined.\n            if (config && config.default !== undefined) {\n              parsedValue = config.default;\n            } else if (config && (config.required || config.isLabel)) {\n              throw new Error(\"Required column \".concat(key, \" is empty in this line: \").concat(line));\n            } else {\n              parsedValue = undefined;\n            }\n          } else {\n            // A value is present, so parse it based on type\n            var valueAsNum = Number(value);\n\n            if (isNaN(valueAsNum)) {\n              // The value is a string and this column is declared as boolean\n              // in config, parse it as boolean.\n              if (config && config.dtype === 'bool') {\n                parsedValue = this.getBoolean(value);\n              } else {\n                // Set value as string\n                parsedValue = value;\n              }\n            } else if (!config || !config.dtype) {\n              // If this value is a number and no type config is provided, return\n              // it as number.\n              parsedValue = valueAsNum;\n            } else {\n              // If this value is a number and data type is provided, parse it\n              // according to provided data type.\n              switch (config.dtype) {\n                case 'float32':\n                  parsedValue = valueAsNum;\n                  break;\n\n                case 'int32':\n                  parsedValue = Math.floor(valueAsNum);\n                  break;\n\n                case 'bool':\n                  parsedValue = this.getBoolean(value);\n                  break;\n\n                default:\n                  parsedValue = valueAsNum;\n              }\n            }\n          } // Check if this column is label.\n\n\n          config && config.isLabel ? labels[key] = parsedValue : features[key] = parsedValue;\n        }\n      } // If label exists, return an object of features and labels as {xs:features,\n      // ys:labels}, otherwise return features only.\n\n\n      if (Object.keys(labels).length === 0) {\n        return features;\n      } else {\n        return {\n          xs: features,\n          ys: labels\n        };\n      }\n    }\n  }, {\n    key: \"getBoolean\",\n    value: function getBoolean(value) {\n      if (value === '1' || value.toLowerCase() === 'true') {\n        return 1;\n      } else {\n        return 0;\n      }\n    } // adapted from https://beta.observablehq.com/@mbostock/streaming-csv\n\n  }, {\n    key: \"parseRow\",\n    value: function parseRow(line) {\n      var validateElementCount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var result = [];\n      var readOffset = 0;\n      var readLength = line.length;\n      var currentState = STATE_OUT; // Goes through the line to parse quote.\n\n      for (var i = 0; i < readLength; i++) {\n        switch (currentState) {\n          // Before enter a new field\n          case STATE_OUT:\n            switch (line.charAt(i)) {\n              // Enter a quoted field\n              case CODE_QUOTE:\n                readOffset = i + 1;\n                currentState = STATE_QUOTE;\n                break;\n              // Read an empty field\n\n              case this.delimiter:\n                readOffset = i + 1; // If delimiter is white space and configured to collapse\n                // multiple white spaces, ignore this white space.\n\n                if (this.delimiter === ' ' && this.delimWhitespace) {\n                  break;\n                }\n\n                result.push('');\n                currentState = STATE_OUT;\n                break;\n              // Enter an unquoted field\n\n              default:\n                currentState = STATE_FIELD;\n                readOffset = i;\n                break;\n            }\n\n            break;\n          // In an unquoted field\n\n          case STATE_FIELD:\n            switch (line.charAt(i)) {\n              // Exit an unquoted field, add it to result\n              case this.delimiter:\n                result.push(line.substring(readOffset, i));\n                currentState = STATE_OUT;\n                readOffset = i + 1;\n                break;\n\n              default:\n            }\n\n            break;\n          // In a quoted field\n\n          case STATE_QUOTE:\n            switch (line.charAt(i)) {\n              // Read a quote after a quote\n              case CODE_QUOTE:\n                currentState = STATE_QUOTE_AFTER_QUOTE;\n                break;\n\n              default:\n            }\n\n            break;\n          // This state means it's right after a second quote in a field\n\n          case STATE_QUOTE_AFTER_QUOTE:\n            switch (line.charAt(i)) {\n              // Finished a quoted field\n              case this.delimiter:\n                result.push(line.substring(readOffset, i - 1));\n                currentState = STATE_OUT;\n                readOffset = i + 1;\n                break;\n              // Finished a quoted part in a quoted field\n\n              case CODE_QUOTE:\n                currentState = STATE_QUOTE;\n                break;\n              // In a quoted part in a quoted field\n\n              default:\n                currentState = STATE_WITHIN_QUOTE_IN_QUOTE;\n                break;\n            }\n\n            break;\n\n          case STATE_WITHIN_QUOTE_IN_QUOTE:\n            switch (line.charAt(i)) {\n              // Exit a quoted part in a quoted field\n              case CODE_QUOTE:\n                currentState = STATE_QUOTE;\n                break;\n\n              default:\n            }\n\n            break;\n\n          default:\n        }\n      } // Adds last item based on if it is quoted.\n\n\n      if (currentState === STATE_QUOTE_AFTER_QUOTE) {\n        result.push(line.substring(readOffset, readLength - 1));\n      } else {\n        result.push(line.substring(readOffset));\n      } // Check if each row has the same number of elements as column names.\n\n\n      if (validateElementCount && result.length !== this.fullColumnNames.length) {\n        throw new Error(\"Invalid row in csv file. Should have \".concat(this.fullColumnNames.length, \" elements in a row, but got \").concat(result));\n      }\n\n      return result;\n    }\n  }]);\n\n  return CSVDataset;\n}(Dataset); // TODO(soergel): add more basic datasets for parity with tf.data\n// tf.data.FixedLengthRecordDataset()\n// tf.data.TFRecordDataset()","import _asyncToGenerator from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _regeneratorRuntime from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * =============================================================================\n */\nimport { env, tensor, util } from '@tensorflow/tfjs-core';\nimport { LazyIterator } from './lazy_iterator';\n/**\n * Provide a stream of tensors from microphone audio stream. The tensors are\n * representing audio data as frequency-domain spectrogram generated with\n * browser's native FFT. Tensors representing time-domain waveform is available\n * based on configuration. Only works in browser environment.\n */\n\nexport var MicrophoneIterator = /*#__PURE__*/function (_LazyIterator) {\n  _inherits(MicrophoneIterator, _LazyIterator);\n\n  var _super = _createSuper(MicrophoneIterator);\n\n  function MicrophoneIterator(microphoneConfig) {\n    var _this;\n\n    _classCallCheck(this, MicrophoneIterator);\n\n    _this = _super.call(this);\n    _this.microphoneConfig = microphoneConfig;\n    _this.isClosed = false;\n    _this.fftSize = microphoneConfig.fftSize || 1024;\n    var fftSizeLog2 = Math.log2(_this.fftSize);\n\n    if (_this.fftSize < 0 || fftSizeLog2 < 4 || fftSizeLog2 > 14 || !Number.isInteger(fftSizeLog2)) {\n      throw new Error(\"Invalid fftSize: it must be a power of 2 between \" + \"2 to 4 and 2 to 14, but got \".concat(_this.fftSize));\n    }\n\n    _this.numFrames = microphoneConfig.numFramesPerSpectrogram || 43;\n    _this.sampleRateHz = microphoneConfig.sampleRateHz;\n    _this.columnTruncateLength = microphoneConfig.columnTruncateLength || _this.fftSize;\n    _this.audioTrackConstraints = microphoneConfig.audioTrackConstraints;\n    _this.smoothingTimeConstant = microphoneConfig.smoothingTimeConstant || 0;\n    _this.includeSpectrogram = microphoneConfig.includeSpectrogram === false ? false : true;\n    _this.includeWaveform = microphoneConfig.includeWaveform === true ? true : false;\n\n    if (!_this.includeSpectrogram && !_this.includeWaveform) {\n      throw new Error('Both includeSpectrogram and includeWaveform are false. ' + 'At least one type of data should be returned.');\n    }\n\n    return _this;\n  }\n\n  _createClass(MicrophoneIterator, [{\n    key: \"summary\",\n    value: function summary() {\n      return \"microphone\";\n    } // Construct a MicrophoneIterator and start the audio stream.\n\n  }, {\n    key: \"start\",\n    value: // Start the audio stream and FFT.\n    function () {\n      var _start = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var ctxConstructor, streamSource;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return navigator.mediaDevices.getUserMedia({\n                  audio: this.audioTrackConstraints == null ? true : this.audioTrackConstraints,\n                  video: false\n                });\n\n              case 3:\n                this.stream = _context.sent;\n                _context.next = 9;\n                break;\n\n              case 6:\n                _context.prev = 6;\n                _context.t0 = _context[\"catch\"](0);\n                throw new Error(\"Error thrown while initializing video stream: \".concat(_context.t0.message));\n\n              case 9:\n                if (this.stream) {\n                  _context.next = 11;\n                  break;\n                }\n\n                throw new Error('Could not obtain audio from microphone.');\n\n              case 11:\n                ctxConstructor = // tslint:disable-next-line:no-any\n                window.AudioContext || window.webkitAudioContext;\n                this.audioContext = new ctxConstructor();\n\n                if (this.sampleRateHz) {\n                  _context.next = 17;\n                  break;\n                }\n\n                // If sample rate is not provided, use the available sample rate on\n                // device.\n                this.sampleRateHz = this.audioContext.sampleRate;\n                _context.next = 19;\n                break;\n\n              case 17:\n                if (!(this.audioContext.sampleRate !== this.sampleRateHz)) {\n                  _context.next = 19;\n                  break;\n                }\n\n                throw new Error(\"Mismatch in sampling rate: \" + \"Expected: \".concat(this.sampleRateHz, \"; \") + \"Actual: \".concat(this.audioContext.sampleRate));\n\n              case 19:\n                streamSource = this.audioContext.createMediaStreamSource(this.stream);\n                this.analyser = this.audioContext.createAnalyser();\n                this.analyser.fftSize = this.fftSize * 2;\n                this.analyser.smoothingTimeConstant = this.smoothingTimeConstant;\n                streamSource.connect(this.analyser);\n                this.freqData = new Float32Array(this.fftSize);\n                this.timeData = new Float32Array(this.fftSize);\n                return _context.abrupt(\"return\");\n\n              case 27:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 6]]);\n      }));\n\n      function start() {\n        return _start.apply(this, arguments);\n      }\n\n      return start;\n    }()\n  }, {\n    key: \"next\",\n    value: function () {\n      var _next = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var spectrogramTensor, waveformTensor, audioDataQueue, freqData, timeData;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!this.isClosed) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", {\n                  value: null,\n                  done: true\n                });\n\n              case 2:\n                _context2.next = 4;\n                return this.getAudioData();\n\n              case 4:\n                audioDataQueue = _context2.sent;\n\n                if (this.includeSpectrogram) {\n                  freqData = this.flattenQueue(audioDataQueue.freqDataQueue);\n                  spectrogramTensor = this.getTensorFromAudioDataArray(freqData, [this.numFrames, this.columnTruncateLength, 1]);\n                }\n\n                if (this.includeWaveform) {\n                  timeData = this.flattenQueue(audioDataQueue.timeDataQueue);\n                  waveformTensor = this.getTensorFromAudioDataArray(timeData, [this.numFrames * this.fftSize, 1]);\n                }\n\n                return _context2.abrupt(\"return\", {\n                  value: {\n                    'spectrogram': spectrogramTensor,\n                    'waveform': waveformTensor\n                  },\n                  done: false\n                });\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function next() {\n        return _next.apply(this, arguments);\n      }\n\n      return next;\n    }() // Capture one result from the audio stream, and extract the value from\n    // iterator.next() result.\n\n  }, {\n    key: \"capture\",\n    value: function () {\n      var _capture = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.next();\n\n              case 2:\n                return _context3.abrupt(\"return\", _context3.sent.value);\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function capture() {\n        return _capture.apply(this, arguments);\n      }\n\n      return capture;\n    }()\n  }, {\n    key: \"getAudioData\",\n    value: function () {\n      var _getAudioData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var _this2 = this;\n\n        var freqDataQueue, timeDataQueue, currentFrames;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                freqDataQueue = [];\n                timeDataQueue = [];\n                currentFrames = 0;\n                return _context4.abrupt(\"return\", new Promise(function (resolve) {\n                  var intervalID = setInterval(function () {\n                    if (_this2.includeSpectrogram) {\n                      _this2.analyser.getFloatFrequencyData(_this2.freqData); // If the audio stream is initializing, return empty queue.\n\n\n                      if (_this2.freqData[0] === -Infinity) {\n                        resolve({\n                          freqDataQueue: freqDataQueue,\n                          timeDataQueue: timeDataQueue\n                        });\n                      }\n\n                      freqDataQueue.push(_this2.freqData.slice(0, _this2.columnTruncateLength));\n                    }\n\n                    if (_this2.includeWaveform) {\n                      _this2.analyser.getFloatTimeDomainData(_this2.timeData);\n\n                      timeDataQueue.push(_this2.timeData.slice());\n                    } // Clean interval and return when all frames have been collected\n\n\n                    if (++currentFrames === _this2.numFrames) {\n                      clearInterval(intervalID);\n                      resolve({\n                        freqDataQueue: freqDataQueue,\n                        timeDataQueue: timeDataQueue\n                      });\n                    }\n                  }, _this2.fftSize / _this2.sampleRateHz * 1e3);\n                }));\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function getAudioData() {\n        return _getAudioData.apply(this, arguments);\n      }\n\n      return getAudioData;\n    }() // Stop the audio stream and pause the iterator.\n\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      if (!this.isClosed) {\n        this.isClosed = true;\n        this.analyser.disconnect();\n        this.audioContext.close();\n\n        if (this.stream != null && this.stream.getTracks().length > 0) {\n          this.stream.getTracks()[0].stop();\n        }\n      }\n    } // Override toArray() function to prevent collecting.\n\n  }, {\n    key: \"toArray\",\n    value: function toArray() {\n      throw new Error('Can not convert infinite audio stream to array.');\n    } // Return audio sampling rate in Hz\n\n  }, {\n    key: \"getSampleRate\",\n    value: function getSampleRate() {\n      return this.sampleRateHz;\n    }\n  }, {\n    key: \"flattenQueue\",\n    value: function flattenQueue(queue) {\n      var frameSize = queue[0].length;\n      var freqData = new Float32Array(queue.length * frameSize);\n      queue.forEach(function (data, i) {\n        return freqData.set(data, i * frameSize);\n      });\n      return freqData;\n    }\n  }, {\n    key: \"getTensorFromAudioDataArray\",\n    value: function getTensorFromAudioDataArray(freqData, shape) {\n      var vals = new Float32Array(util.sizeFromShape(shape)); // If the data is less than the output shape, the rest is padded with zeros.\n\n      vals.set(freqData, vals.length - freqData.length);\n      return tensor(vals, shape);\n    }\n  }], [{\n    key: \"create\",\n    value: function () {\n      var _create = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var microphoneConfig,\n            microphoneIterator,\n            _args5 = arguments;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                microphoneConfig = _args5.length > 0 && _args5[0] !== undefined ? _args5[0] : {};\n\n                if (!env().get('IS_NODE')) {\n                  _context5.next = 3;\n                  break;\n                }\n\n                throw new Error('microphone API is only supported in browser environment.');\n\n              case 3:\n                microphoneIterator = new MicrophoneIterator(microphoneConfig); // Call async function start() to initialize the audio stream.\n\n                _context5.next = 6;\n                return microphoneIterator.start();\n\n              case 6:\n                return _context5.abrupt(\"return\", microphoneIterator);\n\n              case 7:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function create() {\n        return _create.apply(this, arguments);\n      }\n\n      return create;\n    }()\n  }]);\n\n  return MicrophoneIterator;\n}(LazyIterator);","import _asyncToGenerator from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _regeneratorRuntime from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * =============================================================================\n */\nimport { browser, cast, env, expandDims, image, reshape, tensor1d, tensor2d, tidy, util } from '@tensorflow/tfjs-core';\nimport { LazyIterator } from './lazy_iterator';\n/**\n * Provide a stream of image tensors from webcam video stream. Only works in\n * browser environment.\n */\n\nexport var WebcamIterator = /*#__PURE__*/function (_LazyIterator) {\n  _inherits(WebcamIterator, _LazyIterator);\n\n  var _super = _createSuper(WebcamIterator);\n\n  function WebcamIterator(webcamVideoElement, webcamConfig) {\n    var _this;\n\n    _classCallCheck(this, WebcamIterator);\n\n    _this = _super.call(this);\n    _this.webcamVideoElement = webcamVideoElement;\n    _this.webcamConfig = webcamConfig;\n    _this.isClosed = true;\n    _this.resize = false;\n\n    if (_this.needToResize()) {\n      _this.resize = true;\n      _this.cropSize = [_this.webcamConfig.resizeHeight, _this.webcamConfig.resizeWidth];\n      _this.cropBoxInd = tensor1d([0], 'int32');\n\n      if (_this.webcamConfig.centerCrop) {\n        // Calculate the box based on resizing shape.\n        var widthCroppingRatio = _this.webcamConfig.resizeWidth * 1.0 / _this.webcamVideoElement.width;\n        var heightCroppingRatio = _this.webcamConfig.resizeHeight * 1.0 / _this.webcamVideoElement.height;\n        var widthCropStart = (1 - widthCroppingRatio) / 2;\n        var heightCropStart = (1 - heightCroppingRatio) / 2;\n        var widthCropEnd = widthCropStart + widthCroppingRatio;\n        var heightCropEnd = heightCroppingRatio + heightCropStart;\n        _this.cropBox = tensor2d([heightCropStart, widthCropStart, heightCropEnd, widthCropEnd], [1, 4]);\n      } else {\n        _this.cropBox = tensor2d([0, 0, 1, 1], [1, 4]);\n      }\n    }\n\n    return _this;\n  }\n\n  _createClass(WebcamIterator, [{\n    key: \"summary\",\n    value: function summary() {\n      return \"webcam\";\n    } // Construct a WebcamIterator and start it's video stream.\n\n  }, {\n    key: \"start\",\n    value: // Async function to start video stream.\n    function () {\n      var _start = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this.webcamConfig.facingMode) {\n                  util.assert(this.webcamConfig.facingMode === 'user' || this.webcamConfig.facingMode === 'environment', function () {\n                    return \"Invalid webcam facing mode: \".concat(_this2.webcamConfig.facingMode, \". \") + \"Please provide 'user' or 'environment'\";\n                  });\n                }\n\n                _context.prev = 1;\n                _context.next = 4;\n                return navigator.mediaDevices.getUserMedia({\n                  video: {\n                    deviceId: this.webcamConfig.deviceId,\n                    facingMode: this.webcamConfig.facingMode ? this.webcamConfig.facingMode : 'user',\n                    width: this.webcamVideoElement.width,\n                    height: this.webcamVideoElement.height\n                  }\n                });\n\n              case 4:\n                this.stream = _context.sent;\n                _context.next = 11;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](1);\n                // Modify the error message but leave the stack trace intact\n                _context.t0.message = \"Error thrown while initializing video stream: \".concat(_context.t0.message);\n                throw _context.t0;\n\n              case 11:\n                if (this.stream) {\n                  _context.next = 13;\n                  break;\n                }\n\n                throw new Error('Could not obtain video from webcam.');\n\n              case 13:\n                // Older browsers may not have srcObject\n                try {\n                  this.webcamVideoElement.srcObject = this.stream;\n                } catch (error) {\n                  console.log(error);\n                  this.webcamVideoElement.src = window.URL.createObjectURL(this.stream);\n                } // Start the webcam video stream\n\n\n                this.webcamVideoElement.play();\n                this.isClosed = false;\n                return _context.abrupt(\"return\", new Promise(function (resolve) {\n                  // Add event listener to make sure the webcam has been fully initialized.\n                  _this2.webcamVideoElement.onloadedmetadata = function () {\n                    resolve();\n                  };\n                }));\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 7]]);\n      }));\n\n      function start() {\n        return _start.apply(this, arguments);\n      }\n\n      return start;\n    }()\n  }, {\n    key: \"next\",\n    value: function () {\n      var _next = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var img;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!this.isClosed) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", {\n                  value: null,\n                  done: true\n                });\n\n              case 2:\n                _context2.prev = 2;\n                img = browser.fromPixels(this.webcamVideoElement);\n                _context2.next = 9;\n                break;\n\n              case 6:\n                _context2.prev = 6;\n                _context2.t0 = _context2[\"catch\"](2);\n                throw new Error(\"Error thrown converting video to pixels: \".concat(JSON.stringify(_context2.t0)));\n\n              case 9:\n                if (!this.resize) {\n                  _context2.next = 22;\n                  break;\n                }\n\n                _context2.prev = 10;\n                return _context2.abrupt(\"return\", {\n                  value: this.cropAndResizeFrame(img),\n                  done: false\n                });\n\n              case 14:\n                _context2.prev = 14;\n                _context2.t1 = _context2[\"catch\"](10);\n                throw new Error(\"Error thrown cropping the video: \".concat(_context2.t1.message));\n\n              case 17:\n                _context2.prev = 17;\n                img.dispose();\n                return _context2.finish(17);\n\n              case 20:\n                _context2.next = 23;\n                break;\n\n              case 22:\n                return _context2.abrupt(\"return\", {\n                  value: img,\n                  done: false\n                });\n\n              case 23:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[2, 6], [10, 14, 17, 20]]);\n      }));\n\n      function next() {\n        return _next.apply(this, arguments);\n      }\n\n      return next;\n    }()\n  }, {\n    key: \"needToResize\",\n    value: function needToResize() {\n      // If resizeWidth and resizeHeight are provided, and different from the\n      // width and height of original HTMLVideoElement, then resizing and cropping\n      // is required.\n      if (this.webcamConfig.resizeWidth && this.webcamConfig.resizeHeight && (this.webcamVideoElement.width !== this.webcamConfig.resizeWidth || this.webcamVideoElement.height !== this.webcamConfig.resizeHeight)) {\n        return true;\n      }\n\n      return false;\n    } // Cropping and resizing each frame based on config\n\n  }, {\n    key: \"cropAndResizeFrame\",\n    value: function cropAndResizeFrame(img) {\n      var _this3 = this;\n\n      return tidy(function () {\n        var expandedImage = expandDims(cast(img, 'float32'), 0);\n        var resizedImage;\n        resizedImage = image.cropAndResize(expandedImage, _this3.cropBox, _this3.cropBoxInd, _this3.cropSize, 'bilinear'); // Extract image from batch cropping.\n\n        var shape = resizedImage.shape;\n        return reshape(resizedImage, shape.slice(1));\n      });\n    } // Capture one frame from the video stream, and extract the value from\n    // iterator.next() result.\n\n  }, {\n    key: \"capture\",\n    value: function () {\n      var _capture = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.next();\n\n              case 2:\n                return _context3.abrupt(\"return\", _context3.sent.value);\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function capture() {\n        return _capture.apply(this, arguments);\n      }\n\n      return capture;\n    }() // Stop the video stream and pause webcam iterator.\n\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      var tracks = this.stream.getTracks();\n      tracks.forEach(function (track) {\n        return track.stop();\n      });\n\n      try {\n        this.webcamVideoElement.srcObject = null;\n      } catch (error) {\n        console.log(error);\n        this.webcamVideoElement.src = null;\n      }\n\n      this.isClosed = true;\n    } // Override toArray() function to prevent collecting.\n\n  }, {\n    key: \"toArray\",\n    value: function toArray() {\n      throw new Error('Can not convert infinite video stream to array.');\n    }\n  }], [{\n    key: \"create\",\n    value: function () {\n      var _create = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(webcamVideoElement) {\n        var webcamConfig,\n            webcamIterator,\n            _args4 = arguments;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                webcamConfig = _args4.length > 1 && _args4[1] !== undefined ? _args4[1] : {};\n\n                if (!env().get('IS_NODE')) {\n                  _context4.next = 3;\n                  break;\n                }\n\n                throw new Error('tf.data.webcam is only supported in browser environment.');\n\n              case 3:\n                if (webcamVideoElement) {\n                  _context4.next = 9;\n                  break;\n                }\n\n                // If webcam video element is not provided, create a hidden video element\n                // with provided width and height.\n                webcamVideoElement = document.createElement('video');\n\n                if (!(!webcamConfig.resizeWidth || !webcamConfig.resizeHeight)) {\n                  _context4.next = 7;\n                  break;\n                }\n\n                throw new Error('Please provide webcam video element, or resizeWidth and ' + 'resizeHeight to create a hidden video element.');\n\n              case 7:\n                webcamVideoElement.width = webcamConfig.resizeWidth;\n                webcamVideoElement.height = webcamConfig.resizeHeight;\n\n              case 9:\n                webcamIterator = new WebcamIterator(webcamVideoElement, webcamConfig); // Call async function to initialize the video stream.\n\n                _context4.next = 12;\n                return webcamIterator.start();\n\n              case 12:\n                return _context4.abrupt(\"return\", webcamIterator);\n\n              case 13:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function create(_x) {\n        return _create.apply(this, arguments);\n      }\n\n      return create;\n    }()\n  }]);\n\n  return WebcamIterator;\n}(LazyIterator);","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * =============================================================================\n */\n\n/**\n * Represents a data source readable as a stream of binary data chunks.\n *\n * Because `Dataset`s can be read repeatedly (via `Dataset.iterator()`), this\n * provides a means to repeatedly create streams from the underlying data\n * sources.\n */\nexport var DataSource = function DataSource() {\n  _classCallCheck(this, DataSource);\n}; // TODO(soergel): consider convenience factory functions here\n// in combination with chainable source->dataset above, e.g.:\n// tf.data.url(...).asCsvDataset().shuffle().batch()","import _asyncToGenerator from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport _regeneratorRuntime from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * =============================================================================\n */\nimport { LazyIterator, OneToManyIterator } from './lazy_iterator';\nexport var StringIterator = /*#__PURE__*/function (_LazyIterator) {\n  _inherits(StringIterator, _LazyIterator);\n\n  var _super = _createSuper(StringIterator);\n\n  function StringIterator() {\n    _classCallCheck(this, StringIterator);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(StringIterator, [{\n    key: \"split\",\n    value:\n    /**\n     * Splits a string stream on a given separator.\n     *\n     * It is assumed that the incoming chunk boundaries have no semantic meaning,\n     * so conceptually the incoming stream is treated simply as the concatenation\n     * of its elements.\n     *\n     * The outgoing stream provides chunks corresponding to the results of the\n     * standard string split() operation (even if such a chunk spanned incoming\n     * chunks).  The separators are not included.\n     *\n     * A typical usage is to split a text file (represented as a stream with\n     * arbitrary chunk boundaries) into lines.\n     *\n     * @param upstream A readable stream of strings that can be treated as\n     *   concatenated.\n     * @param separator A character to split on.\n     */\n    function split(separator) {\n      return new SplitIterator(this, separator);\n    }\n  }]);\n\n  return StringIterator;\n}(LazyIterator); // ============================================================================\n// The following private classes serve to implement the chainable methods\n// on StringIterator.  Unfortunately they can't be placed in separate files, due\n// to resulting trouble with circular imports.\n// ============================================================================\n// We wanted multiple inheritance, e.g.\n//   class SplitIterator extends QueueIterator<string>, StringIterator\n// but the TypeScript mixin approach is a bit hacky, so we take this adapter\n// approach instead.\n\nvar SplitIterator = /*#__PURE__*/function (_StringIterator) {\n  _inherits(SplitIterator, _StringIterator);\n\n  var _super2 = _createSuper(SplitIterator);\n\n  function SplitIterator(upstream, separator) {\n    var _this;\n\n    _classCallCheck(this, SplitIterator);\n\n    _this = _super2.call(this);\n    _this.upstream = upstream;\n    _this.impl = new SplitIteratorImpl(upstream, separator);\n    return _this;\n  }\n\n  _createClass(SplitIterator, [{\n    key: \"summary\",\n    value: function summary() {\n      return this.impl.summary();\n    }\n  }, {\n    key: \"next\",\n    value: function () {\n      var _next = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", this.impl.next());\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function next() {\n        return _next.apply(this, arguments);\n      }\n\n      return next;\n    }()\n  }]);\n\n  return SplitIterator;\n}(StringIterator);\n\nvar SplitIteratorImpl = /*#__PURE__*/function (_OneToManyIterator) {\n  _inherits(SplitIteratorImpl, _OneToManyIterator);\n\n  var _super3 = _createSuper(SplitIteratorImpl);\n\n  function SplitIteratorImpl(upstream, separator) {\n    var _this2;\n\n    _classCallCheck(this, SplitIteratorImpl);\n\n    _this2 = _super3.call(this);\n    _this2.upstream = upstream;\n    _this2.separator = separator; // A partial string at the end of an upstream chunk\n\n    _this2.carryover = '';\n    return _this2;\n  }\n\n  _createClass(SplitIteratorImpl, [{\n    key: \"summary\",\n    value: function summary() {\n      return \"\".concat(this.upstream.summary(), \" -> Split('\").concat(this.separator, \"')\");\n    }\n  }, {\n    key: \"pump\",\n    value: function () {\n      var _pump = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var chunkResult, lines, _iterator, _step, line;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.upstream.next();\n\n              case 2:\n                chunkResult = _context2.sent;\n\n                if (!chunkResult.done) {\n                  _context2.next = 9;\n                  break;\n                }\n\n                if (!(this.carryover === '')) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", false);\n\n              case 6:\n                // Pretend that the pump succeeded in order to emit the small last batch.\n                // The next pump() call will actually fail.\n                this.outputQueue.push(this.carryover);\n                this.carryover = '';\n                return _context2.abrupt(\"return\", true);\n\n              case 9:\n                lines = chunkResult.value.split(this.separator); // Note the behavior: \" ab \".split(' ') === ['', 'ab', '']\n                // Thus the carryover may be '' if the separator falls on a chunk\n                // boundary; this produces the correct result.\n\n                lines[0] = this.carryover + lines[0];\n                _iterator = _createForOfIteratorHelper(lines.slice(0, -1));\n\n                try {\n                  for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                    line = _step.value;\n                    this.outputQueue.push(line);\n                  }\n                } catch (err) {\n                  _iterator.e(err);\n                } finally {\n                  _iterator.f();\n                }\n\n                this.carryover = lines[lines.length - 1];\n                return _context2.abrupt(\"return\", true);\n\n              case 15:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function pump() {\n        return _pump.apply(this, arguments);\n      }\n\n      return pump;\n    }()\n  }]);\n\n  return SplitIteratorImpl;\n}(OneToManyIterator);","import _asyncToGenerator from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _regeneratorRuntime from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * =============================================================================\n */\nimport { env } from '@tensorflow/tfjs-core';\nimport { LazyIterator, OneToManyIterator } from './lazy_iterator';\nimport { StringIterator } from './string_iterator';\nexport var ByteChunkIterator = /*#__PURE__*/function (_LazyIterator) {\n  _inherits(ByteChunkIterator, _LazyIterator);\n\n  var _super = _createSuper(ByteChunkIterator);\n\n  function ByteChunkIterator() {\n    _classCallCheck(this, ByteChunkIterator);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ByteChunkIterator, [{\n    key: \"decodeUTF8\",\n    value:\n    /**\n     * Decode a stream of UTF8-encoded byte arrays to a stream of strings.\n     *\n     * The byte arrays producetd from the ByteChunkIterator on which this is\n     * called will be interpreted as concatenated.  No assumptions are made about\n     * the boundaries of the incoming chunks, so a multi-byte UTF8 encoding of a\n     * character may span the boundary between chunks.  This naturally happens,\n     * for instance, when reading fixed-size byte arrays from a file.\n     */\n    function decodeUTF8() {\n      return new Utf8Iterator(this);\n    }\n  }]);\n\n  return ByteChunkIterator;\n}(LazyIterator); // ============================================================================\n// The following private classes serve to implement the chainable methods\n// on ByteChunkIterator.  Unfortunately they can't be placed in separate files,\n// due to resulting trouble with circular imports.\n// ============================================================================\n// We wanted multiple inheritance, e.g.\n//   class Utf8Iterator extends QueueIterator<string>, StringIterator\n// but the TypeScript mixin approach is a bit hacky, so we take this adapter\n// approach instead.\n\nvar Utf8Iterator = /*#__PURE__*/function (_StringIterator) {\n  _inherits(Utf8Iterator, _StringIterator);\n\n  var _super2 = _createSuper(Utf8Iterator);\n\n  function Utf8Iterator(upstream) {\n    var _this;\n\n    _classCallCheck(this, Utf8Iterator);\n\n    _this = _super2.call(this);\n    _this.upstream = upstream;\n    _this.impl = new Utf8IteratorImpl(upstream);\n    return _this;\n  }\n\n  _createClass(Utf8Iterator, [{\n    key: \"summary\",\n    value: function summary() {\n      return this.impl.summary();\n    }\n  }, {\n    key: \"next\",\n    value: function () {\n      var _next = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", this.impl.next());\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function next() {\n        return _next.apply(this, arguments);\n      }\n\n      return next;\n    }()\n  }]);\n\n  return Utf8Iterator;\n}(StringIterator);\n/**\n * Decode a stream of UTF8-encoded byte arrays to a stream of strings.\n *\n * This is tricky because the incoming byte array boundaries may disrupt a\n * multi-byte UTF8 character. Thus any incomplete character data at the end of\n * a chunk must be carried over and prepended to the next chunk before\n * decoding. Luckily with native decoder, TextDecoder in browser and\n * string_decoder in node, byte array boundaries are handled automatically.\n *\n * In the context of an input pipeline for machine learning, UTF8 decoding is\n * needed to parse text files containing training examples or prediction\n * requests (e.g., formatted as CSV or JSON). We cannot use the built-in\n * decoding provided by FileReader.readAsText() because here we are in a\n * streaming context, which FileReader does not support.\n *\n * @param upstream A `LazyIterator` of `Uint8Arrays` containing UTF8-encoded\n *   text, which should be interpreted as concatenated.  No assumptions are\n *   made about the boundaries of the incoming chunks, so a multi-byte UTF8\n *   encoding of a character may span the boundary between chunks.  This\n *   naturally happens, for instance, when reading fixed-size byte arrays from a\n *   file.\n */\n\n\nvar Utf8IteratorImpl = /*#__PURE__*/function (_OneToManyIterator) {\n  _inherits(Utf8IteratorImpl, _OneToManyIterator);\n\n  var _super3 = _createSuper(Utf8IteratorImpl);\n\n  function Utf8IteratorImpl(upstream) {\n    var _this2;\n\n    _classCallCheck(this, Utf8IteratorImpl);\n\n    _this2 = _super3.call(this);\n    _this2.upstream = upstream;\n\n    if (env().get('IS_BROWSER')) {\n      _this2.decoder = new TextDecoder('utf-8');\n    } else {\n      // tslint:disable-next-line:no-require-imports\n      var _require = require('string_decoder'),\n          StringDecoder = _require.StringDecoder;\n\n      _this2.decoder = new StringDecoder('utf8');\n    }\n\n    return _this2;\n  }\n\n  _createClass(Utf8IteratorImpl, [{\n    key: \"summary\",\n    value: function summary() {\n      return \"\".concat(this.upstream.summary(), \" -> Utf8\");\n    }\n  }, {\n    key: \"pump\",\n    value: function () {\n      var _pump = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var chunkResult, chunk, text;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.upstream.next();\n\n              case 2:\n                chunkResult = _context2.sent;\n\n                if (!chunkResult.done) {\n                  _context2.next = 7;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", false);\n\n              case 7:\n                chunk = chunkResult.value;\n\n              case 8:\n                if (env().get('IS_BROWSER')) {\n                  text = this.decoder.decode(chunk, {\n                    stream: true\n                  });\n                } else {\n                  text = this.decoder.write(Buffer.from(chunk.buffer));\n                }\n\n                this.outputQueue.push(text);\n                return _context2.abrupt(\"return\", true);\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function pump() {\n        return _pump.apply(this, arguments);\n      }\n\n      return pump;\n    }()\n  }]);\n\n  return Utf8IteratorImpl;\n}(OneToManyIterator);","import _asyncToGenerator from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _regeneratorRuntime from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * =============================================================================\n */\n// inspired by https://github.com/maxogden/filereader-stream\nimport { env, util } from '@tensorflow/tfjs-core';\nimport { ByteChunkIterator } from './byte_chunk_iterator';\n/**\n * Provide a stream of chunks from a File, Blob, or Uint8Array.\n * @param file The source File, Blob or Uint8Array.\n * @param options Optional settings controlling file reading.\n * @returns a lazy Iterator of Uint8Arrays containing sequential chunks of the\n *   input File, Blob or Uint8Array.\n */\n\nexport var FileChunkIterator = /*#__PURE__*/function (_ByteChunkIterator) {\n  _inherits(FileChunkIterator, _ByteChunkIterator);\n\n  var _super = _createSuper(FileChunkIterator);\n\n  function FileChunkIterator(file) {\n    var _this;\n\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, FileChunkIterator);\n\n    _this = _super.call(this);\n    _this.file = file;\n    _this.options = options;\n    util.assert(file instanceof Uint8Array || (env().get('IS_BROWSER') ? file instanceof File || file instanceof Blob : false), function () {\n      return 'FileChunkIterator only supports File, Blob and Uint8Array ' + 'right now.';\n    });\n    _this.offset = options.offset || 0; // default 1MB chunk has tolerable perf on large files\n\n    _this.chunkSize = options.chunkSize || 1024 * 1024;\n    return _this;\n  }\n\n  _createClass(FileChunkIterator, [{\n    key: \"summary\",\n    value: function summary() {\n      return \"FileChunks \".concat(this.file);\n    }\n  }, {\n    key: \"next\",\n    value: function () {\n      var _next = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var chunk;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(this.offset >= (this.file instanceof Uint8Array ? this.file.byteLength : this.file.size))) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", {\n                  value: null,\n                  done: true\n                });\n\n              case 2:\n                chunk = new Promise(function (resolve, reject) {\n                  var end = _this2.offset + _this2.chunkSize;\n\n                  if (_this2.file instanceof Uint8Array) {\n                    // Note if end > this.uint8Array.byteLength, we just get a small last\n                    // chunk.\n                    resolve(new Uint8Array(_this2.file.slice(_this2.offset, end)));\n                  } else {\n                    // This branch assumes that this.file type is File or Blob, which\n                    // means it is in the browser environment.\n                    // TODO(soergel): is this a performance issue?\n                    var fileReader = new FileReader();\n\n                    fileReader.onload = function (event) {\n                      var data = fileReader.result; // Not sure we can trust the return type of\n                      // FileReader.readAsArrayBuffer See e.g.\n                      // https://github.com/node-file-api/FileReader/issues/2\n\n                      if (data instanceof ArrayBuffer) {\n                        data = new Uint8Array(data);\n                      }\n\n                      if (!(data instanceof Uint8Array)) {\n                        return reject(new TypeError('FileReader returned unknown type.'));\n                      }\n\n                      resolve(data);\n                    };\n\n                    fileReader.onabort = function (event) {\n                      return reject(new Error('Aborted'));\n                    };\n\n                    fileReader.onerror = function (event) {\n                      return reject(new Error(event.type));\n                    }; // TODO(soergel): better handle onabort, onerror\n                    // Note if end > this.file.size, we just get a small last chunk.\n\n\n                    var slice = _this2.file.slice(_this2.offset, end); // We can't use readAsText here (even if we know the file is text)\n                    // because the slice boundary may fall within a multi-byte character.\n\n\n                    fileReader.readAsArrayBuffer(slice);\n                  }\n\n                  _this2.offset = end;\n                });\n                _context.next = 5;\n                return chunk;\n\n              case 5:\n                _context.t0 = _context.sent;\n                return _context.abrupt(\"return\", {\n                  value: _context.t0,\n                  done: false\n                });\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function next() {\n        return _next.apply(this, arguments);\n      }\n\n      return next;\n    }()\n  }]);\n\n  return FileChunkIterator;\n}(ByteChunkIterator);","import _asyncToGenerator from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _regeneratorRuntime from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/regenerator\";\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\nimport { FileChunkIterator } from './file_chunk_iterator';\n/**\n * Provide a stream of chunks from a URL.\n *\n * Note this class first downloads the entire file into memory before providing\n * the first element from the stream.  This is because the Fetch API does not\n * yet reliably provide a reader stream for the response body.\n */\n\nexport function urlChunkIterator(_x) {\n  return _urlChunkIterator.apply(this, arguments);\n} // Generate RequestInit from Request to match tf.util.fetch signature.\n\nfunction _urlChunkIterator() {\n  _urlChunkIterator = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(url) {\n    var options,\n        urlString,\n        requestInit,\n        response,\n        uint8Array,\n        _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n\n            if (typeof url === 'string') {\n              urlString = url;\n            } else {\n              urlString = url.url;\n              requestInit = getRequestInitFromRequest(url);\n            }\n\n            _context.next = 4;\n            return util.fetch(urlString, requestInit);\n\n          case 4:\n            response = _context.sent;\n\n            if (!response.ok) {\n              _context.next = 14;\n              break;\n            }\n\n            _context.t0 = Uint8Array;\n            _context.next = 9;\n            return response.arrayBuffer();\n\n          case 9:\n            _context.t1 = _context.sent;\n            uint8Array = new _context.t0(_context.t1);\n            return _context.abrupt(\"return\", new FileChunkIterator(uint8Array, options));\n\n          case 14:\n            throw new Error(response.statusText);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _urlChunkIterator.apply(this, arguments);\n}\n\nvar getRequestInitFromRequest = function getRequestInitFromRequest(request) {\n  var init = {\n    method: request.method,\n    headers: request.headers,\n    body: request.body,\n    mode: request.mode,\n    credentials: request.credentials,\n    cache: request.cache,\n    redirect: request.redirect,\n    referrer: request.referrer,\n    integrity: request.integrity\n  };\n  return init;\n};","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * =============================================================================\n */\n// Skip tslint any type check cause this method is aiming to check type of\n// input.\n// tslint:disable-next-line:no-any\nexport function isLocalPath(source) {\n  return typeof source === 'string' && source.substr(0, 7) === 'file://';\n}","import _asyncToGenerator from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _regeneratorRuntime from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * =============================================================================\n */\nimport { env } from '@tensorflow/tfjs-core';\nimport { DataSource } from '../datasource';\nimport { FileChunkIterator } from '../iterators/file_chunk_iterator';\nimport { isLocalPath } from '../util/source_util';\n/**\n * Represents a file, blob, or Uint8Array readable as a stream of binary data\n * chunks.\n */\n\nexport var FileDataSource = /*#__PURE__*/function (_DataSource) {\n  _inherits(FileDataSource, _DataSource);\n\n  var _super = _createSuper(FileDataSource);\n\n  /**\n   * Create a `FileDataSource`.\n   *\n   * @param input Local file path, or `File`/`Blob`/`Uint8Array` object to\n   *     read. Local file only works in node environment.\n   * @param options Options passed to the underlying `FileChunkIterator`s,\n   *   such as {chunksize: 1024}.\n   */\n  function FileDataSource(input) {\n    var _this;\n\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, FileDataSource);\n\n    _this = _super.call(this);\n    _this.input = input;\n    _this.options = options;\n    return _this;\n  }\n\n  _createClass(FileDataSource, [{\n    key: \"iterator\",\n    value: function () {\n      var _iterator = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var fs;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (isLocalPath(this.input) && env().get('IS_NODE')) {\n                  // tslint:disable-next-line:no-require-imports\n                  fs = require('fs');\n                  this.input = fs.readFileSync(this.input.substr(7));\n                } // TODO(kangyizhang): Add LocalFileChunkIterator to split local streaming\n                // with file in browser.\n\n\n                return _context.abrupt(\"return\", new FileChunkIterator(this.input, this.options));\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function iterator() {\n        return _iterator.apply(this, arguments);\n      }\n\n      return iterator;\n    }()\n  }]);\n\n  return FileDataSource;\n}(DataSource);","import _asyncToGenerator from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _regeneratorRuntime from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * =============================================================================\n */\nimport { DataSource } from '../datasource';\nimport { urlChunkIterator } from '../iterators/url_chunk_iterator';\nimport { isLocalPath } from '../util/source_util';\nimport { FileDataSource } from './file_data_source';\n/*\n * Represents a URL readable as a stream of binary data chunks.\n */\n\nexport var URLDataSource = /*#__PURE__*/function (_DataSource) {\n  _inherits(URLDataSource, _DataSource);\n\n  var _super = _createSuper(URLDataSource);\n\n  /**\n   * Create a `URLDataSource`.\n   *\n   * @param url A source URL string, or a `Request` object.\n   * @param options Options passed to the underlying `FileChunkIterator`s,\n   *   such as {chunksize: 1024}.\n   */\n  function URLDataSource(url) {\n    var _this;\n\n    var fileOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, URLDataSource);\n\n    _this = _super.call(this);\n    _this.url = url;\n    _this.fileOptions = fileOptions;\n    return _this;\n  } // TODO(soergel): provide appropriate caching options.  Currently this\n  // will download the URL anew for each call to iterator().  Since we have\n  // to treat the downloaded file as a blob/buffer anyway, we may as well retain\n  // it-- but that raises GC issues.  Also we may want a persistent disk cache.\n\n\n  _createClass(URLDataSource, [{\n    key: \"iterator\",\n    value: function () {\n      var _iterator = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!isLocalPath(this.url)) {\n                  _context.next = 4;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", new FileDataSource(this.url, this.fileOptions).iterator());\n\n              case 4:\n                return _context.abrupt(\"return\", urlChunkIterator(this.url, this.fileOptions));\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function iterator() {\n        return _iterator.apply(this, arguments);\n      }\n\n      return iterator;\n    }()\n  }]);\n\n  return URLDataSource;\n}(DataSource);","import _asyncToGenerator from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _regeneratorRuntime from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/regenerator\";\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * =============================================================================\n */\nimport { datasetFromIteratorFn } from './dataset';\nimport { CSVDataset } from './datasets/csv_dataset';\nimport { iteratorFromFunction } from './iterators/lazy_iterator';\nimport { MicrophoneIterator } from './iterators/microphone_iterator';\nimport { WebcamIterator } from './iterators/webcam_iterator';\nimport { URLDataSource } from './sources/url_data_source';\n/**\n * Create a `CSVDataset` by reading and decoding CSV file(s) from provided URL\n * or local path if it's in Node environment.\n *\n * Note: If isLabel in columnConfigs is `true` for at least one column, the\n * element in returned `CSVDataset` will be an object of\n * `{xs:features, ys:labels}`: xs is a dict of features key/value pairs, ys\n * is a dict of labels key/value pairs. If no column is marked as label,\n * returns a dict of features only.\n *\n * ```js\n * const csvUrl =\n * 'https://storage.googleapis.com/tfjs-examples/multivariate-linear-regression/data/boston-housing-train.csv';\n *\n * async function run() {\n *   // We want to predict the column \"medv\", which represents a median value of\n *   // a home (in $1000s), so we mark it as a label.\n *   const csvDataset = tf.data.csv(\n *     csvUrl, {\n *       columnConfigs: {\n *         medv: {\n *           isLabel: true\n *         }\n *       }\n *     });\n *\n *   // Number of features is the number of column names minus one for the label\n *   // column.\n *   const numOfFeatures = (await csvDataset.columnNames()).length - 1;\n *\n *   // Prepare the Dataset for training.\n *   const flattenedDataset =\n *     csvDataset\n *     .map(({xs, ys}) =>\n *       {\n *         // Convert xs(features) and ys(labels) from object form (keyed by\n *         // column name) to array form.\n *         return {xs:Object.values(xs), ys:Object.values(ys)};\n *       })\n *     .batch(10);\n *\n *   // Define the model.\n *   const model = tf.sequential();\n *   model.add(tf.layers.dense({\n *     inputShape: [numOfFeatures],\n *     units: 1\n *   }));\n *   model.compile({\n *     optimizer: tf.train.sgd(0.000001),\n *     loss: 'meanSquaredError'\n *   });\n *\n *   // Fit the model using the prepared Dataset\n *   return model.fitDataset(flattenedDataset, {\n *     epochs: 10,\n *     callbacks: {\n *       onEpochEnd: async (epoch, logs) => {\n *         console.log(epoch + ':' + logs.loss);\n *       }\n *     }\n *   });\n * }\n *\n * await run();\n * ```\n *\n * @param source URL or local path to get CSV file. If it's a local path, it\n * must have prefix `file://` and it only works in node environment.\n * @param csvConfig (Optional) A CSVConfig object that contains configurations\n *     of reading and decoding from CSV file(s).\n *\n * @doc {\n *   heading: 'Data',\n *   subheading: 'Creation',\n *   namespace: 'data',\n *   configParamIndices: [1]\n *  }\n */\n\nexport function csv(source) {\n  var csvConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return new CSVDataset(new URLDataSource(source), csvConfig);\n}\n/**\n * Create a `Dataset` that produces each element by calling a provided function.\n *\n * Note that repeated iterations over this `Dataset` may produce different\n * results, because the function will be called anew for each element of each\n * iteration.\n *\n * Also, beware that the sequence of calls to this function may be out of order\n * in time with respect to the logical order of the Dataset. This is due to the\n * asynchronous lazy nature of stream processing, and depends on downstream\n * transformations (e.g. .shuffle()). If the provided function is pure, this is\n * no problem, but if it is a closure over a mutable state (e.g., a traversal\n * pointer), then the order of the produced elements may be scrambled.\n *\n * ```js\n * let i = -1;\n * const func = () =>\n *    ++i < 5 ? {value: i, done: false} : {value: null, done: true};\n * const ds = tf.data.func(func);\n * await ds.forEachAsync(e => console.log(e));\n * ```\n *\n * @param f A function that produces one data element on each call.\n */\n\nexport function func(f) {\n  var iter = iteratorFromFunction(f);\n  return datasetFromIteratorFn( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", iter);\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })));\n}\n/**\n * Create a `Dataset` that produces each element from provided JavaScript\n * generator, which is a function*\n * (https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators#Generator_functions),\n * or a function that returns an\n * iterator\n * (https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators#Generator_functions).\n *\n * The returned iterator should have `.next()` function that returns element in\n * format of `{value: TensorContainer, done:boolean}`.\n *\n * Example of creating a dataset from an iterator factory:\n * ```js\n * function makeIterator() {\n *   const numElements = 10;\n *   let index = 0;\n *\n *   const iterator = {\n *     next: () => {\n *       let result;\n *       if (index < numElements) {\n *         result = {value: index, done: false};\n *         index++;\n *         return result;\n *       }\n *       return {value: index, done: true};\n *     }\n *   };\n *   return iterator;\n * }\n * const ds = tf.data.generator(makeIterator);\n * await ds.forEachAsync(e => console.log(e));\n * ```\n *\n * Example of creating a dataset from a generator:\n * ```js\n * function* dataGenerator() {\n *   const numElements = 10;\n *   let index = 0;\n *   while (index < numElements) {\n *     const x = index;\n *     index++;\n *     yield x;\n *   }\n * }\n *\n * const ds = tf.data.generator(dataGenerator);\n * await ds.forEachAsync(e => console.log(e));\n * ```\n *\n * @param generator A Javascript generator function that returns a JavaScript\n *     iterator.\n *\n * @doc {\n *   heading: 'Data',\n *   subheading: 'Creation',\n *   namespace: 'data',\n *   configParamIndices: [1]\n *  }\n */\n\nexport function generator(generator) {\n  return datasetFromIteratorFn( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var gen;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return generator();\n\n          case 2:\n            gen = _context2.sent;\n            return _context2.abrupt(\"return\", iteratorFromFunction(function () {\n              return gen.next();\n            }));\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  })));\n}\n/**\n * Create an iterator that generate `Tensor`s from webcam video stream. This API\n * only works in Browser environment when the device has webcam.\n *\n * Note: this code snippet only works when the device has a webcam. It will\n * request permission to open the webcam when running.\n * ```js\n * const videoElement = document.createElement('video');\n * videoElement.width = 100;\n * videoElement.height = 100;\n * const cam = await tf.data.webcam(videoElement);\n * const img = await cam.capture();\n * img.print();\n * cam.stop();\n * ```\n *\n * @param webcamVideoElement A `HTMLVideoElement` used to play video from\n *     webcam. If this element is not provided, a hidden `HTMLVideoElement` will\n *     be created. In that case, `resizeWidth` and `resizeHeight` must be\n *     provided to set the generated tensor shape.\n * @param webcamConfig A `WebcamConfig` object that contains configurations of\n *     reading and manipulating data from webcam video stream.\n *\n * @doc {\n *   heading: 'Data',\n *   subheading: 'Creation',\n *   namespace: 'data',\n *   ignoreCI: true\n *  }\n */\n\nexport function webcam(_x, _x2) {\n  return _webcam.apply(this, arguments);\n}\n/**\n * Create an iterator that generate frequency-domain spectrogram `Tensor`s from\n * microphone audio stream with browser's native FFT. This API only works in\n * browser environment when the device has microphone.\n *\n * Note: this code snippet only works when the device has a microphone. It will\n * request permission to open the microphone when running.\n * ```js\n * const mic = await tf.data.microphone({\n *   fftSize: 1024,\n *   columnTruncateLength: 232,\n *   numFramesPerSpectrogram: 43,\n *   sampleRateHz:44100,\n *   includeSpectrogram: true,\n *   includeWaveform: true\n * });\n * const audioData = await mic.capture();\n * const spectrogramTensor = audioData.spectrogram;\n * spectrogramTensor.print();\n * const waveformTensor = audioData.waveform;\n * waveformTensor.print();\n * mic.stop();\n * ```\n *\n * @param microphoneConfig A `MicrophoneConfig` object that contains\n *     configurations of reading audio data from microphone.\n *\n * @doc {\n *   heading: 'Data',\n *   subheading: 'Creation',\n *   namespace: 'data',\n *   ignoreCI: true\n *  }\n */\n\nfunction _webcam() {\n  _webcam = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(webcamVideoElement, webcamConfig) {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            return _context3.abrupt(\"return\", WebcamIterator.create(webcamVideoElement, webcamConfig));\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _webcam.apply(this, arguments);\n}\n\nexport function microphone(_x3) {\n  return _microphone.apply(this, arguments);\n}\n\nfunction _microphone() {\n  _microphone = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(microphoneConfig) {\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            return _context4.abrupt(\"return\", MicrophoneIterator.create(microphoneConfig));\n\n          case 1:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _microphone.apply(this, arguments);\n}","/** @license See the LICENSE file. */\n// This code is auto-generated, do not modify this file!\nvar version = '3.4.0';\nexport { version };","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\nexport function assertNotComplex(tensor, opName) {\n  if (!Array.isArray(tensor)) {\n    tensor = [tensor];\n  }\n\n  tensor.forEach(function (t) {\n    if (t != null) {\n      util.assert(t.dtype !== 'complex64', function () {\n        return \"\".concat(opName, \" does not support complex64 tensors in the CPU backend.\");\n      });\n    }\n  });\n}","import _asyncToGenerator from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/get\";\nimport _inherits from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _regeneratorRuntime from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, buffer, DataStorage, engine, env, kernel_impls, KernelBackend, util } from '@tensorflow/tfjs-core';\nvar whereImpl = kernel_impls.whereImpl;\nimport { assertNotComplex } from './cpu_util';\nexport var MathBackendCPU = /*#__PURE__*/function (_KernelBackend) {\n  _inherits(MathBackendCPU, _KernelBackend);\n\n  var _super = _createSuper(MathBackendCPU);\n\n  function MathBackendCPU() {\n    var _this;\n\n    _classCallCheck(this, MathBackendCPU);\n\n    _this = _super.call(this);\n    _this.blockSize = 48;\n    _this.firstUse = true;\n    _this.data = new DataStorage(_assertThisInitialized(_this), engine());\n    return _this;\n  }\n\n  _createClass(MathBackendCPU, [{\n    key: \"nextDataId\",\n    value: function nextDataId() {\n      return MathBackendCPU.nextDataId++;\n    }\n  }, {\n    key: \"write\",\n    value: function write(values, shape, dtype) {\n      if (this.firstUse) {\n        this.firstUse = false;\n\n        if (env().get('IS_NODE')) {\n          backend_util.warn('\\n============================\\n' + 'Hi there 👋. Looks like you are running TensorFlow.js in ' + 'Node.js. To speed things up dramatically, install our node ' + 'backend, which binds to TensorFlow C++, by running ' + 'npm i @tensorflow/tfjs-node, ' + 'or npm i @tensorflow/tfjs-node-gpu if you have CUDA. ' + 'Then call require(\\'@tensorflow/tfjs-node\\'); (-gpu ' + 'suffix for CUDA) at the start of your program. ' + 'Visit https://github.com/tensorflow/tfjs-node for more details.' + '\\n============================');\n        }\n      }\n\n      var dataId = {\n        id: this.nextDataId()\n      };\n      this.data.set(dataId, {\n        values: values,\n        dtype: dtype,\n        refCount: 1\n      });\n      return dataId;\n    }\n    /**\n     * Create a data bucket in cpu backend.\n     * @param shape Shape of the `TensorInfo`.\n     * @param dtype DType of the `TensorInfo`.\n     * @param values The value of the `TensorInfo` stored as a flattened array.\n     */\n\n  }, {\n    key: \"makeTensorInfo\",\n    value: function makeTensorInfo(shape, dtype, values) {\n      var outId;\n\n      if (dtype === 'string' && values != null && values.length > 0 && util.isString(values[0])) {\n        var encodedValues = values.map(function (d) {\n          return util.encodeString(d);\n        });\n        outId = this.write(encodedValues, shape, dtype);\n      } else {\n        outId = this.write(values, shape, dtype);\n      }\n\n      return {\n        dataId: outId,\n        shape: shape,\n        dtype: dtype\n      };\n    }\n    /** Return refCount of a `TensorData`. */\n\n  }, {\n    key: \"refCount\",\n    value: function refCount(dataId) {\n      if (this.data.has(dataId)) {\n        var tensorData = this.data.get(dataId);\n        return tensorData.refCount;\n      }\n\n      return 0;\n    }\n    /** Increase refCount of a `TensorData`. */\n\n  }, {\n    key: \"incRef\",\n    value: function incRef(dataId) {\n      var tensorData = this.data.get(dataId);\n      tensorData.refCount++;\n    }\n    /** Decrease refCount of a `TensorData`. */\n\n  }, {\n    key: \"decRef\",\n    value: function decRef(dataId) {\n      if (this.data.has(dataId)) {\n        var tensorData = this.data.get(dataId);\n        tensorData.refCount--;\n      }\n    }\n  }, {\n    key: \"move\",\n    value: function move(dataId, values, shape, dtype, refCount) {\n      this.data.set(dataId, {\n        values: values,\n        dtype: dtype,\n        refCount: refCount\n      });\n    }\n  }, {\n    key: \"numDataIds\",\n    value: function numDataIds() {\n      return this.data.numDataIds();\n    }\n  }, {\n    key: \"read\",\n    value: function () {\n      var _read = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dataId) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", this.readSync(dataId));\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function read(_x) {\n        return _read.apply(this, arguments);\n      }\n\n      return read;\n    }()\n  }, {\n    key: \"readSync\",\n    value: function readSync(dataId) {\n      var _this$data$get = this.data.get(dataId),\n          dtype = _this$data$get.dtype,\n          complexTensorInfos = _this$data$get.complexTensorInfos;\n\n      if (dtype === 'complex64') {\n        var realValues = this.readSync(complexTensorInfos.real.dataId);\n        var imagValues = this.readSync(complexTensorInfos.imag.dataId);\n        return backend_util.mergeRealAndImagArrays(realValues, imagValues);\n      }\n\n      return this.data.get(dataId).values;\n    }\n  }, {\n    key: \"bufferSync\",\n    value: function bufferSync(t) {\n      var data = this.readSync(t.dataId);\n      var decodedData = data;\n\n      if (t.dtype === 'string') {\n        try {\n          // Decode the bytes into string.\n          decodedData = data.map(function (d) {\n            return util.decodeString(d);\n          });\n        } catch (_a) {\n          throw new Error('Failed to decode encoded string bytes into utf-8');\n        }\n      }\n\n      return buffer(t.shape, t.dtype, decodedData);\n    }\n  }, {\n    key: \"makeOutput\",\n    value: function makeOutput(values, shape, dtype) {\n      var dataId = this.write(values, shape, dtype);\n      return engine().makeTensorFromDataId(dataId, shape, dtype, this);\n    }\n    /**\n     * Dispose the memory if the dataId has 0 refCount. Return true if the memory\n     * is released or memory is not managed in this backend, false if memory is\n     * not cleared.\n     * @param dataId\n     * @oaram force Optional, remove the data regardless of refCount\n     */\n\n  }, {\n    key: \"disposeData\",\n    value: function disposeData(dataId) {\n      var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (this.data.has(dataId)) {\n        this.data.get(dataId).refCount--;\n\n        if (!force && this.data.get(dataId).refCount > 0) {\n          return false;\n        }\n\n        var _this$data$get2 = this.data.get(dataId),\n            complexTensorInfos = _this$data$get2.complexTensorInfos;\n\n        if (complexTensorInfos != null) {\n          this.disposeData(complexTensorInfos.real.dataId, true);\n          this.disposeData(complexTensorInfos.imag.dataId, true);\n        }\n\n        this.data.delete(dataId);\n      }\n\n      return true;\n    }\n  }, {\n    key: \"disposeIntermediateTensorInfo\",\n    value: function disposeIntermediateTensorInfo(tensorInfo) {\n      this.disposeData(tensorInfo.dataId);\n    }\n  }, {\n    key: \"time\",\n    value: function () {\n      var _time = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(f) {\n        var start, kernelMs;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                start = util.now();\n                f();\n                kernelMs = util.now() - start;\n                return _context2.abrupt(\"return\", {\n                  kernelMs: kernelMs\n                });\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function time(_x2) {\n        return _time.apply(this, arguments);\n      }\n\n      return time;\n    }()\n  }, {\n    key: \"memory\",\n    value: function memory() {\n      return {\n        // Unreliable due to automatic gc. The numbers above are cumulative.\n        unreliable: true,\n        reasons: ['The reported memory is an upper bound. Due to automatic garbage ' + 'collection, the true allocated memory may be less.']\n      };\n    }\n  }, {\n    key: \"where\",\n    value: function where(condition) {\n      assertNotComplex([condition], 'where');\n      var condVals = this.readSync(condition.dataId);\n      return whereImpl(condition.shape, condVals);\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {}\n  }, {\n    key: \"floatPrecision\",\n    value: function floatPrecision() {\n      return 32;\n    }\n    /** Returns the smallest representable number.  */\n\n  }, {\n    key: \"epsilon\",\n    value: function epsilon() {\n      return _get(_getPrototypeOf(MathBackendCPU.prototype), \"epsilon\", this).call(this);\n    }\n  }]);\n\n  return MathBackendCPU;\n}(KernelBackend);\nMathBackendCPU.nextDataId = 0;","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\n/**\n * Template that creates a `KernelFunc` for unary ops.\n * @param name Kernel name.\n * @param op A `SimpleUnaryOperation` for the kernel.\n * @param dtype Optional. If set, the result has this dtype. Otherwise, the\n *     result has the same dtype as the input. This is mainly used in certain\n *     kernels that return bool type, such as isFinite, isInf, etc.\n */\n\nexport function unaryKernelFunc(name, op, dtype) {\n  return function (_ref) {\n    var inputs = _ref.inputs,\n        attrs = _ref.attrs,\n        backend = _ref.backend;\n    var x = inputs.x;\n    assertNotComplex(x, name);\n\n    if (x.dtype === 'string' || dtype === 'string') {\n      throw new Error('unaryKernelFunc does not support string input/output');\n    }\n\n    var cpuBackend = backend;\n    var values = cpuBackend.data.get(x.dataId).values;\n    var xSize = util.sizeFromShape(x.shape);\n    var $dtype = dtype || x.dtype;\n    var newValues = util.getArrayFromDType($dtype, xSize);\n\n    for (var i = 0; i < xSize; ++i) {\n      newValues[i] = op(values[i], attrs);\n    }\n\n    return cpuBackend.makeTensorInfo(x.shape, $dtype, newValues);\n  };\n}\n/**\n * Template that creates a `KernelFunc` for unary ops from the given\n * `SimpleUnaryImpl`..\n * @param name Kernel name.\n * @param unaryImpl A `SimpleUnaryImpl` that implements the op.\n * @param dtype Optional. If set, the result has this dtype. Otherwise, the\n *     result has the same dtype as the input. This is mainly used in certain\n *     kernels that return bool type, such as isFinite, isInf, etc.\n */\n\nexport function unaryKernelFuncFromImpl(name, unaryImpl, dtype) {\n  return function (_ref2) {\n    var inputs = _ref2.inputs,\n        attrs = _ref2.attrs,\n        backend = _ref2.backend;\n    var x = inputs.x;\n    assertNotComplex(x, name);\n\n    if (x.dtype === 'string' || dtype === 'string') {\n      throw new Error('unaryKernelFunc does not support string input/output');\n    }\n\n    var cpuBackend = backend;\n    var values = cpuBackend.data.get(x.dataId).values;\n    var $dtype = dtype || x.dtype;\n    var newValues = unaryImpl(values, $dtype, attrs);\n    return cpuBackend.makeTensorInfo(x.shape, $dtype, newValues);\n  };\n}","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/*\n * base.ts contains all the exports from tfjs-backend-cpu\n * without auto-kernel registration\n */\nimport { registerBackend } from '@tensorflow/tfjs-core';\nimport { MathBackendCPU } from './backend_cpu';\nimport * as shared from './shared';\nexport { MathBackendCPU } from './backend_cpu';\nexport { version as version_cpu } from './version';\nexport { shared }; // Side effects for default initialization of MathBackendCPU\n\nregisterBackend('cpu', function () {\n  return new MathBackendCPU();\n}, 1\n/* priority */\n);","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Elu } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../utils/unary_utils';\nexport var elu = unaryKernelFunc(Elu, function (xi) {\n  return xi >= 0 ? xi : Math.exp(xi) - 1;\n});\nexport var eluConfig = {\n  kernelName: Elu,\n  backendName: 'cpu',\n  kernelFunc: elu\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Identity } from '@tensorflow/tfjs-core';\nexport function identity(args) {\n  var inputs = args.inputs,\n      backend = args.backend;\n  var x = inputs.x;\n  backend.incRef(x.dataId);\n  return {\n    dataId: x.dataId,\n    shape: x.shape,\n    dtype: x.dtype\n  };\n}\nexport var identityConfig = {\n  kernelName: Identity,\n  backendName: 'cpu',\n  kernelFunc: identity\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { LeakyRelu, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nexport function leakyRelu(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  var alpha = attrs.alpha;\n  assertNotComplex([x], 'leakyRelu');\n  var xSize = util.sizeFromShape(x.shape);\n  var xVals = backend.data.get(x.dataId).values;\n  var outVals = util.getTypedArrayFromDType('float32', xSize);\n\n  for (var i = 0; i < xVals.length; i++) {\n    outVals[i] = xVals[i] < 0 ? alpha * xVals[i] : xVals[i];\n  }\n\n  return backend.makeTensorInfo(x.shape, 'float32', outVals);\n}\nexport var leakyReluConfig = {\n  kernelName: LeakyRelu,\n  backendName: 'cpu',\n  kernelFunc: leakyRelu\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, util } from '@tensorflow/tfjs-core';\n/**\n * Template that creates implementation for binary ops. Supports broadcast.\n */\n\nexport function createSimpleBinaryKernelImpl(op) {\n  return function (aShape, bShape, aVals, bVals, dtype) {\n    var newShape = backend_util.assertAndGetBroadcastShape(aShape, bShape);\n    var resultRank = newShape.length;\n    var resultStrides = util.computeStrides(newShape);\n    var resultSize = util.sizeFromShape(newShape);\n    var result = util.getTypedArrayFromDType(dtype, resultSize);\n    var aRank = aShape.length;\n    var bRank = bShape.length;\n    var aStrides = util.computeStrides(aShape);\n    var bStrides = util.computeStrides(bShape);\n    var aBroadcastDims = backend_util.getBroadcastDims(aShape, newShape);\n    var bBroadcastDims = backend_util.getBroadcastDims(bShape, newShape);\n\n    if (aBroadcastDims.length + bBroadcastDims.length === 0) {\n      for (var i = 0; i < result.length; ++i) {\n        result[i] = op(aVals[i % aVals.length], bVals[i % bVals.length]);\n      }\n    } else {\n      var _loop = function _loop(_i) {\n        var loc = util.indexToLoc(_i, resultRank, resultStrides);\n        var aLoc = loc.slice(-aRank);\n        aBroadcastDims.forEach(function (d) {\n          return aLoc[d] = 0;\n        });\n        var aIndex = util.locToIndex(aLoc, aRank, aStrides);\n        var bLoc = loc.slice(-bRank);\n        bBroadcastDims.forEach(function (d) {\n          return bLoc[d] = 0;\n        });\n        var bIndex = util.locToIndex(bLoc, bRank, bStrides);\n        result[_i] = op(aVals[aIndex], bVals[bIndex]);\n      };\n\n      for (var _i = 0; _i < result.length; ++_i) {\n        _loop(_i);\n      }\n    }\n\n    return [result, newShape];\n  };\n}","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Prelu } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nimport { createSimpleBinaryKernelImpl } from '../utils/binary_impl';\nvar preluImpl = createSimpleBinaryKernelImpl(function (xValue, aValue) {\n  return xValue < 0 ? aValue * xValue : xValue;\n});\nexport function prelu(args) {\n  var inputs = args.inputs,\n      backend = args.backend;\n  var x = inputs.x,\n      alpha = inputs.alpha;\n  assertNotComplex([x, alpha], 'prelu');\n  var aVals = backend.data.get(x.dataId).values;\n  var bVals = backend.data.get(alpha.dataId).values;\n\n  var _preluImpl = preluImpl(x.shape, alpha.shape, aVals, bVals, x.dtype),\n      _preluImpl2 = _slicedToArray(_preluImpl, 2),\n      resultData = _preluImpl2[0],\n      resultShape = _preluImpl2[1];\n\n  return backend.makeTensorInfo(resultShape, x.dtype, resultData);\n}\nexport var preluConfig = {\n  kernelName: Prelu,\n  backendName: 'cpu',\n  kernelFunc: prelu\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Relu } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../utils/unary_utils';\nexport var relu = unaryKernelFunc(Relu, function (xi) {\n  return Math.max(0, xi);\n});\nexport var reluConfig = {\n  kernelName: Relu,\n  backendName: 'cpu',\n  kernelFunc: relu\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Relu6 } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../utils/unary_utils';\nexport var relu6 = unaryKernelFunc(Relu6, function (xi) {\n  return Math.min(Math.max(0, xi), 6);\n});\nexport var relu6Config = {\n  kernelName: Relu6,\n  backendName: 'cpu',\n  kernelFunc: relu6\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { elu } from '../kernels/Elu';\nimport { identity } from '../kernels/Identity';\nimport { leakyRelu } from '../kernels/LeakyRelu';\nimport { prelu } from '../kernels/Prelu';\nimport { relu } from '../kernels/Relu';\nimport { relu6 } from '../kernels/Relu6';\nexport function applyActivation(backend, x, activation, preluActivationWeights, leakyreluAlpha) {\n  if (activation === 'linear') {\n    return identity({\n      inputs: {\n        x: x\n      },\n      backend: backend\n    });\n  } else if (activation === 'relu') {\n    return relu({\n      inputs: {\n        x: x\n      },\n      backend: backend\n    });\n  } else if (activation === 'elu') {\n    return elu({\n      inputs: {\n        x: x\n      },\n      backend: backend\n    });\n  } else if (activation === 'relu6') {\n    return relu6({\n      inputs: {\n        x: x\n      },\n      backend: backend\n    });\n  } else if (activation === 'prelu') {\n    return prelu({\n      inputs: {\n        x: x,\n        alpha: preluActivationWeights\n      },\n      backend: backend\n    });\n  } else if (activation === 'leakyrelu') {\n    return leakyRelu({\n      inputs: {\n        x: x\n      },\n      backend: backend,\n      attrs: {\n        alpha: leakyreluAlpha\n      }\n    });\n  }\n\n  throw new Error(\"Activation \".concat(activation, \" has not been implemented for the CPU backend.\"));\n}","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Complex } from '@tensorflow/tfjs-core';\nexport function complex(args) {\n  var inputs = args.inputs,\n      backend = args.backend;\n  var real = inputs.real,\n      imag = inputs.imag;\n  var realVals = backend.data.get(real.dataId).values;\n  var imagVals = backend.data.get(imag.dataId).values;\n  var complexInfo = backend.makeTensorInfo(real.shape, 'complex64');\n  var complex = backend.data.get(complexInfo.dataId); // The complex tensor owns the underlying real and imag tensorInfos, only the\n  // complex tensor tracks refCount, when complexData is disposed the\n  // underlying tensorData will be disposed.\n\n  complex.complexTensorInfos = {\n    real: backend.makeTensorInfo(real.shape, 'float32', realVals),\n    imag: backend.makeTensorInfo(imag.shape, 'float32', imagVals)\n  };\n  return complexInfo;\n}\nexport var complexConfig = {\n  kernelName: Complex,\n  backendName: 'cpu',\n  kernelFunc: complex\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\nimport { complex } from '../kernels/Complex';\n/**\n * Generates a tensorInfo with all zeros value.\n * @param backend cpu backend.\n * @param shape Shape for the zeros tensor.\n * @param dtype Optional. If set, the result has this dtype.\n */\n\nexport function zeros(backend, shape) {\n  var dtype = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'float32';\n\n  if (dtype === 'complex64') {\n    var real = zeros(backend, shape, 'float32');\n    var imag = zeros(backend, shape, 'float32');\n    return complex({\n      inputs: {\n        real: real,\n        imag: imag\n      },\n      backend: backend\n    });\n  }\n\n  var values = util.makeZerosTypedArray(util.sizeFromShape(shape), dtype);\n  return backend.makeTensorInfo(shape, dtype, values);\n}","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Real } from '@tensorflow/tfjs-core';\nexport function real(args) {\n  var inputs = args.inputs,\n      backend = args.backend;\n  var input = inputs.input;\n  var real = backend.data.get(input.dataId).complexTensorInfos.real;\n  var realVal = backend.data.get(real.dataId).values; // When complex tensor is disposed, its underlying parts will be disposed too.\n  // Make new tensor out of the real value of the complex. This makes sure the\n  // value is still accessible even if complex tensor is disposed.\n\n  return backend.makeTensorInfo(real.shape, real.dtype, realVal);\n}\nexport var realConfig = {\n  kernelName: Real,\n  backendName: 'cpu',\n  kernelFunc: real\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Cast, util } from '@tensorflow/tfjs-core';\nimport { createSimpleBinaryKernelImpl } from '../utils/binary_impl';\nimport { zeros } from '../utils/zeros_impl';\nimport { complex } from './Complex';\nimport { identity } from './Identity';\nimport { real } from './Real';\nexport function cast(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  var dtype = attrs.dtype; // Casting to complex64.\n\n  if (dtype === 'complex64') {\n    if (x.dtype === 'complex64') {\n      return identity({\n        inputs: {\n          x: x\n        },\n        backend: backend\n      });\n    }\n\n    var zerosTensorInfo = zeros(backend, x.shape, x.dtype);\n    var floatX = cast({\n      inputs: {\n        x: x\n      },\n      backend: backend,\n      attrs: {\n        dtype: 'float32'\n      }\n    });\n    var result = complex({\n      inputs: {\n        real: floatX,\n        imag: zerosTensorInfo\n      },\n      backend: backend\n    });\n    backend.disposeIntermediateTensorInfo(zerosTensorInfo);\n    backend.disposeIntermediateTensorInfo(floatX);\n    return result;\n  } // Casting from complex64\n\n\n  if (x.dtype === 'complex64') {\n    var realPart = real({\n      inputs: {\n        input: x\n      },\n      backend: backend\n    });\n\n    var _result = cast({\n      inputs: {\n        x: realPart\n      },\n      backend: backend,\n      attrs: {\n        dtype: dtype\n      }\n    });\n\n    backend.disposeIntermediateTensorInfo(realPart);\n    return _result;\n  }\n\n  if (!util.hasEncodingLoss(x.dtype, dtype)) {\n    // We don't change the underlying data, since we cast to higher\n    // precision.\n    var _result2 = identity({\n      inputs: {\n        x: x\n      },\n      backend: backend\n    });\n\n    return {\n      dataId: _result2.dataId,\n      shape: _result2.shape,\n      dtype: dtype\n    };\n  }\n\n  if (dtype === 'int32') {\n    var values = backend.data.get(x.dataId).values;\n    var resultValues = Int32Array.from(values);\n    return backend.makeTensorInfo(x.shape, 'int32', resultValues);\n  }\n\n  if (dtype === 'bool') {\n    // This is essentially the result of notEqual(x, 0). We avoid using\n    // kernel notEqual to avoid circular dependency, i.e. binary_utils ->\n    // cast -> notEqual -> binary_utils.\n    var xVals = backend.data.get(x.dataId).values;\n    var zero = util.toTypedArray([0], x.dtype);\n\n    var _createSimpleBinaryKe = createSimpleBinaryKernelImpl(function (a, b) {\n      return a !== b ? 1 : 0;\n    })(x.shape, [], xVals, zero, 'bool'),\n        _createSimpleBinaryKe2 = _slicedToArray(_createSimpleBinaryKe, 2),\n        resultData = _createSimpleBinaryKe2[0],\n        resultShape = _createSimpleBinaryKe2[1];\n\n    return backend.makeTensorInfo(resultShape, 'bool', resultData);\n  }\n\n  throw new Error(\"Error in Cast: failed to cast \".concat(x.dtype, \" to \").concat(dtype));\n}\nexport var castConfig = {\n  kernelName: Cast,\n  backendName: 'cpu',\n  kernelFunc: cast\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nimport { cast } from '../kernels/Cast';\nimport { complex } from '../kernels/Complex';\n/**\n * Template that creates a `KernelFunc` for binary ops.\n * @param name Kernel name.\n * @param binaryKernelImpl A `SimpleBinaryKernelImpl` for the kernel.\n * @param binaryKernelComplexImpl Optional. If exists, represents a\n *     `ComplexBinaryKernelImpl` for the kernel, will be used when input dtype\n *     is `complex64`.\n * @param dtype Optional. If set, the result has this dtype. Otherwise, the\n *     result has the same dtype as the first input. This is mainly used in\n *     comparison kernels, such as Equal, Less, Greater, etc.\n */\n\nexport function binaryKernelFunc(name, simpleImpl, complexImpl, dtype) {\n  if (complexImpl == null) {\n    return function (_ref) {\n      var inputs = _ref.inputs,\n          backend = _ref.backend;\n      var a = inputs.a,\n          b = inputs.b;\n      var cpuBackend = backend;\n      assertNotComplex([a, b], name);\n      var aVals = cpuBackend.data.get(a.dataId).values;\n      var bVals = cpuBackend.data.get(b.dataId).values;\n      var $dtype = dtype || a.dtype;\n\n      var _simpleImpl = simpleImpl(a.shape, b.shape, aVals, bVals, $dtype),\n          _simpleImpl2 = _slicedToArray(_simpleImpl, 2),\n          resultData = _simpleImpl2[0],\n          resultShape = _simpleImpl2[1];\n\n      return cpuBackend.makeTensorInfo(resultShape, $dtype, resultData);\n    };\n  }\n\n  return function (_ref2) {\n    var inputs = _ref2.inputs,\n        backend = _ref2.backend;\n    var a = inputs.a,\n        b = inputs.b;\n    var cpuBackend = backend;\n\n    if (a.dtype === 'complex64' || b.dtype === 'complex64') {\n      var $aComplex = cast({\n        inputs: {\n          x: a\n        },\n        backend: cpuBackend,\n        attrs: {\n          dtype: 'complex64'\n        }\n      });\n      var $aComplexVals = cpuBackend.data.get($aComplex.dataId);\n      var aReal = $aComplexVals.complexTensorInfos.real;\n      var aImag = $aComplexVals.complexTensorInfos.imag;\n      var aRealVals = cpuBackend.data.get(aReal.dataId).values;\n      var aImagVals = cpuBackend.data.get(aImag.dataId).values;\n      var $bComplex = cast({\n        inputs: {\n          x: b\n        },\n        backend: cpuBackend,\n        attrs: {\n          dtype: 'complex64'\n        }\n      });\n      var $bComplexVals = cpuBackend.data.get($bComplex.dataId);\n      var bReal = $bComplexVals.complexTensorInfos.real;\n      var bImag = $bComplexVals.complexTensorInfos.imag;\n      var bRealVals = cpuBackend.data.get(bReal.dataId).values;\n      var bImagVals = cpuBackend.data.get(bImag.dataId).values;\n\n      var _complexImpl = complexImpl(a.shape, b.shape, aRealVals, aImagVals, bRealVals, bImagVals),\n          _complexImpl2 = _slicedToArray(_complexImpl, 3),\n          resultRealData = _complexImpl2[0],\n          resultImagData = _complexImpl2[1],\n          resultShape = _complexImpl2[2];\n\n      var resultReal = cpuBackend.makeTensorInfo(resultShape, 'float32', resultRealData);\n      var resultImag = cpuBackend.makeTensorInfo(resultShape, 'float32', resultImagData);\n      var result = complex({\n        inputs: {\n          real: resultReal,\n          imag: resultImag\n        },\n        backend: cpuBackend\n      });\n      cpuBackend.disposeIntermediateTensorInfo($aComplex);\n      cpuBackend.disposeIntermediateTensorInfo($bComplex);\n      cpuBackend.disposeIntermediateTensorInfo(resultReal);\n      cpuBackend.disposeIntermediateTensorInfo(resultImag);\n      return result;\n    } else {\n      var aVals = cpuBackend.data.get(a.dataId).values;\n      var bVals = cpuBackend.data.get(b.dataId).values;\n      var $dtype = dtype || a.dtype;\n\n      var _simpleImpl3 = simpleImpl(a.shape, b.shape, aVals, bVals, $dtype),\n          _simpleImpl4 = _slicedToArray(_simpleImpl3, 2),\n          resultData = _simpleImpl4[0],\n          _resultShape = _simpleImpl4[1];\n\n      return cpuBackend.makeTensorInfo(_resultShape, $dtype, resultData);\n    }\n  };\n}\n/**\n * Template that creates the complex type implementation for binary ops.\n * Supports broadcast.\n */\n\nexport function createComplexBinaryKernelImpl(op) {\n  return function (aShape, bShape, aRealVals, aImagVals, bRealVals, bImagVals) {\n    var resultShape = backend_util.assertAndGetBroadcastShape(aShape, bShape);\n    var resultSize = util.sizeFromShape(resultShape);\n    var resultRank = resultShape.length;\n    var resultStrides = util.computeStrides(resultShape);\n    var resultRealVals = util.getTypedArrayFromDType('float32', resultSize);\n    var resultImagVals = util.getTypedArrayFromDType('float32', resultSize);\n    var aBroadcastDims = backend_util.getBroadcastDims(aShape, resultShape);\n    var bBroadcastDims = backend_util.getBroadcastDims(bShape, resultShape);\n    var aVals = backend_util.mergeRealAndImagArrays(aRealVals, aImagVals);\n    var bVals = backend_util.mergeRealAndImagArrays(bRealVals, bImagVals);\n    var aRank = aShape.length;\n    var aStrides = util.computeStrides(aShape);\n    var bRank = bShape.length;\n    var bStrides = util.computeStrides(bShape);\n\n    if (aBroadcastDims.length + bBroadcastDims.length === 0) {\n      for (var i = 0; i < resultRealVals.length; i++) {\n        var aIdx = i % aVals.length;\n        var bIdx = i % bVals.length;\n        var result = op(aVals[aIdx * 2], aVals[aIdx * 2 + 1], bVals[bIdx * 2], bVals[bIdx * 2 + 1]);\n        resultRealVals[i] = result.real;\n        resultImagVals[i] = result.imag;\n      }\n    } else {\n      var _loop = function _loop(_i) {\n        var loc = util.indexToLoc(_i, resultRank, resultStrides);\n        var aLoc = loc.slice(-aRank);\n        aBroadcastDims.forEach(function (d) {\n          return aLoc[d] = 0;\n        });\n        var aIndex = util.locToIndex(aLoc, aRank, aStrides);\n        var bLoc = loc.slice(-bRank);\n        bBroadcastDims.forEach(function (d) {\n          return bLoc[d] = 0;\n        });\n        var bIndex = util.locToIndex(bLoc, bRank, bStrides);\n        var opResult = op(aVals[aIndex * 2], aVals[aIndex * 2 + 1], bVals[bIndex * 2], bVals[bIndex * 2 + 1]);\n        resultRealVals[_i] = opResult.real;\n        resultImagVals[_i] = opResult.imag;\n      };\n\n      for (var _i = 0; _i < resultRealVals.length; _i++) {\n        _loop(_i);\n      }\n    }\n\n    return [resultRealVals, resultImagVals, resultShape];\n  };\n}","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Add } from '@tensorflow/tfjs-core';\nimport { createSimpleBinaryKernelImpl } from '../utils/binary_impl';\nimport { binaryKernelFunc, createComplexBinaryKernelImpl } from '../utils/binary_utils';\nexport var addImpl = createSimpleBinaryKernelImpl(function (a, b) {\n  return a + b;\n});\nexport var addComplexImpl = createComplexBinaryKernelImpl(function (aReal, aImag, bReal, bImag) {\n  return {\n    real: aReal + bReal,\n    imag: aImag + bImag\n  };\n});\nexport var add = binaryKernelFunc(Add, addImpl, addComplexImpl);\nexport var addConfig = {\n  kernelName: Add,\n  backendName: 'cpu',\n  kernelFunc: add\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Reshape, util } from '@tensorflow/tfjs-core';\nexport function reshape(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  var shape = attrs.shape;\n  var xSize = util.sizeFromShape(x.shape);\n  var $shape = util.inferFromImplicitShape(shape, xSize);\n  var $xSize = util.sizeFromShape($shape);\n  util.assert(xSize === $xSize, function () {\n    return \"The new shape (\".concat($shape, \") has \").concat($xSize, \" elements and the old \") + \"shape (\".concat(x.shape, \") has \").concat(xSize, \" elements. The new shape and old \") + \"shape must have the same number of elements.\";\n  });\n  backend.incRef(x.dataId);\n  var xData = backend.data.get(x.dataId);\n\n  if (xData.complexTensorInfos != null) {\n    var real = xData.complexTensorInfos.real;\n    var imag = xData.complexTensorInfos.imag;\n    real.shape = $shape;\n    imag.shape = $shape;\n  }\n\n  return {\n    dataId: x.dataId,\n    shape: $shape,\n    dtype: x.dtype\n  };\n}\nexport var reshapeConfig = {\n  kernelName: Reshape,\n  backendName: 'cpu',\n  kernelFunc: reshape\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { BatchMatMul, buffer, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nimport { reshape } from './Reshape';\nexport function batchMatMul(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var a = inputs.a,\n      b = inputs.b;\n  var transposeA = attrs.transposeA,\n      transposeB = attrs.transposeB;\n  assertNotComplex([a, b], 'matMul');\n  var aRank = a.shape.length;\n  var bRank = b.shape.length;\n  var innerShapeA = transposeA ? a.shape[aRank - 2] : a.shape[aRank - 1];\n  var innerShapeB = transposeB ? b.shape[bRank - 1] : b.shape[bRank - 2];\n  var outerShapeA = transposeA ? a.shape[aRank - 1] : a.shape[aRank - 2];\n  var outerShapeB = transposeB ? b.shape[bRank - 2] : b.shape[bRank - 1];\n  var outerDimsA = a.shape.slice(0, -2);\n  var outerDimsB = b.shape.slice(0, -2);\n  var batchDimA = util.sizeFromShape(outerDimsA);\n  var batchDimB = util.sizeFromShape(outerDimsB);\n  var batchDimsCompatible = batchDimA === batchDimB || batchDimA === 1 || batchDimB === 1;\n  util.assert(aRank >= 2 && bRank >= 2 && batchDimsCompatible, function () {\n    return \"Error in matMul: the input batch dimensions must either be the \" + \"same or at least one input batch dimension must be 1. Got input \" + \"batch dimensions of (\".concat(outerDimsA, \") and (\").concat(outerDimsB, \").\");\n  });\n  var outShapeOuterDims = batchDimA > batchDimB ? a.shape.slice(0, -2) : b.shape.slice(0, -2);\n  var outShape = outShapeOuterDims.concat([outerShapeA, outerShapeB]);\n  util.assert(innerShapeA === innerShapeB, function () {\n    return \"Error in matMul: inner shapes (\".concat(innerShapeA, \") and (\") + \"\".concat(innerShapeB, \") of Tensors with shapes \").concat(a.shape, \" and \") + \"\".concat(b.shape, \" and transposeA=\").concat(transposeA) + \" and transposeB=\".concat(transposeB, \" must match.\");\n  });\n  var a3dShape = transposeA ? [batchDimA, innerShapeA, outerShapeA] : [batchDimA, outerShapeA, innerShapeA];\n  var b3dShape = transposeB ? [batchDimB, outerShapeB, innerShapeB] : [batchDimB, innerShapeB, outerShapeB]; // The rest of the implementation is designed to operate on rank-3 tensors\n\n  var a3d = reshape({\n    inputs: {\n      x: a\n    },\n    backend: backend,\n    attrs: {\n      shape: a3dShape\n    }\n  });\n  var b3d = reshape({\n    inputs: {\n      x: b\n    },\n    backend: backend,\n    attrs: {\n      shape: b3dShape\n    }\n  });\n  var sharedDim = transposeA ? a3d.shape[1] : a3d.shape[2];\n  var leftDim = transposeA ? a3d.shape[2] : a3d.shape[1];\n  var rightDim = transposeB ? b3d.shape[1] : b3d.shape[2];\n  var batchDim = Math.max(batchDimA, batchDimB);\n  var a3dValues = backend.data.get(a3d.dataId).values;\n  var b3dValues = backend.data.get(b3d.dataId).values;\n  var a3dStrides = util.computeStrides(a3d.shape);\n  var b3dStrides = util.computeStrides(b3d.shape);\n\n  var _ref = transposeA ? [a3dStrides[0], 1, a3dStrides[1]] : [a3dStrides[0], a3dStrides[1], 1],\n      _ref2 = _slicedToArray(_ref, 3),\n      aBatch = _ref2[0],\n      aOuterStep = _ref2[1],\n      aInnerStep = _ref2[2];\n\n  var _ref3 = transposeB ? [1, b3dStrides[1], b3dStrides[0]] : [b3dStrides[1], 1, b3dStrides[0]],\n      _ref4 = _slicedToArray(_ref3, 3),\n      bInnerStep = _ref4[0],\n      bOuterStep = _ref4[1],\n      bBatch = _ref4[2];\n\n  var size = leftDim * rightDim;\n  var result = buffer([batchDim, leftDim, rightDim], a3d.dtype);\n  var resVals = result.values;\n  var blockSize = backend.blockSize;\n\n  for (var bi = 0; bi < batchDim; bi++) {\n    for (var i0 = 0; i0 < leftDim; i0 += blockSize) {\n      for (var j0 = 0; j0 < rightDim; j0 += blockSize) {\n        for (var k0 = 0; k0 < sharedDim; k0 += blockSize) {\n          // for when blockSize doesn't evenly divide the input\n          var iBlock = Math.min(i0 + blockSize, leftDim);\n          var jBlock = Math.min(j0 + blockSize, rightDim);\n          var kBlock = Math.min(k0 + blockSize, sharedDim);\n\n          for (var i = i0; i < iBlock; i++) {\n            for (var j = j0; j < jBlock; j++) {\n              var sum = 0.0;\n\n              for (var k = k0; k < kBlock; k++) {\n                var batchOffsetA = Math.min(bi, batchDimA - 1) * aBatch;\n                var batchOffsetB = Math.min(bi, batchDimB - 1) * bBatch;\n                var aVal = a3dValues[batchOffsetA + i * aOuterStep + k * aInnerStep];\n                var bVal = b3dValues[k * bInnerStep + j * bOuterStep + batchOffsetB];\n                sum += aVal * bVal;\n              }\n\n              resVals[bi * size + (i * rightDim + j)] += sum;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  backend.disposeIntermediateTensorInfo(a3d);\n  backend.disposeIntermediateTensorInfo(b3d); // set correct shape on output.\n\n  return backend.makeTensorInfo(outShape, result.dtype, result.values);\n}\nexport var batchMatMulConfig = {\n  kernelName: BatchMatMul,\n  backendName: 'cpu',\n  kernelFunc: batchMatMul\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { _FusedMatMul } from '@tensorflow/tfjs-core';\nimport { applyActivation } from '../utils/fused_utils';\nimport { add } from './Add';\nimport { batchMatMul } from './BatchMatMul';\nexport function _fusedMatMul(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var a = inputs.a,\n      b = inputs.b,\n      bias = inputs.bias,\n      preluActivationWeights = inputs.preluActivationWeights;\n  var transposeA = attrs.transposeA,\n      transposeB = attrs.transposeB,\n      activation = attrs.activation,\n      leakyreluAlpha = attrs.leakyreluAlpha;\n  var current;\n  var addRes;\n  var activationRes;\n  var intermediates = [];\n  var matMulRes = batchMatMul({\n    inputs: {\n      a: a,\n      b: b\n    },\n    attrs: {\n      transposeA: transposeA,\n      transposeB: transposeB\n    },\n    backend: backend\n  });\n  current = matMulRes;\n\n  if (bias) {\n    addRes = add({\n      inputs: {\n        a: current,\n        b: bias\n      },\n      backend: backend\n    });\n    intermediates.push(current);\n    current = addRes;\n  }\n\n  if (activation) {\n    activationRes = applyActivation(backend, current, activation, preluActivationWeights, leakyreluAlpha);\n    intermediates.push(current);\n    current = activationRes;\n  }\n\n  for (var _i = 0, _intermediates = intermediates; _i < _intermediates.length; _i++) {\n    var i = _intermediates[_i];\n    backend.disposeIntermediateTensorInfo(i);\n  }\n\n  return current;\n}\nexport var _fusedMatMulConfig = {\n  kernelName: _FusedMatMul,\n  backendName: 'cpu',\n  kernelFunc: _fusedMatMul\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Abs, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nexport function simpleAbsImpl(vals) {\n  var resultValues = new Float32Array(vals.length);\n\n  for (var i = 0; i < vals.length; ++i) {\n    resultValues[i] = Math.abs(vals[i]);\n  }\n\n  return resultValues;\n}\nexport var abs = function abs(args) {\n  var x = args.inputs.x;\n  var cpuBackend = args.backend;\n  assertNotComplex(x, 'abs');\n  var resultValues = new Float32Array(util.sizeFromShape(x.shape));\n  var values = cpuBackend.data.get(x.dataId).values;\n  resultValues = simpleAbsImpl(values);\n  return cpuBackend.makeOutput(resultValues, x.shape, 'float32');\n};\nexport var absConfig = {\n  kernelName: Abs,\n  backendName: 'cpu',\n  kernelFunc: abs\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Acos } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../utils/unary_utils';\nexport var acos = unaryKernelFunc(Acos, function (xi) {\n  return Math.acos(xi);\n});\nexport var acosConfig = {\n  kernelName: Acos,\n  backendName: 'cpu',\n  kernelFunc: acos\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Acosh } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../utils/unary_utils';\nexport var acosh = unaryKernelFunc(Acosh, function (xi) {\n  return Math.acosh(xi);\n});\nexport var acoshConfig = {\n  kernelName: Acosh,\n  backendName: 'cpu',\n  kernelFunc: acosh\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { AddN, buffer } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nexport function addN(args) {\n  var inputs = args.inputs,\n      backend = args.backend;\n  var tensors = inputs;\n  assertNotComplex(inputs, 'addN');\n  var vals = tensors.map(function (t) {\n    return backend.data.get(t.dataId).values;\n  });\n  var outBuf = buffer(tensors[0].shape, tensors[0].dtype);\n  var outVals = outBuf.values;\n\n  for (var i = 0; i < tensors.length; i++) {\n    var currVals = vals[i];\n\n    for (var j = 0; j < outVals.length; j++) {\n      outVals[j] += currVals[j];\n    }\n  }\n\n  return backend.makeTensorInfo(outBuf.shape, outBuf.dtype, outBuf.values);\n}\nexport var addNConfig = {\n  kernelName: AddN,\n  backendName: 'cpu',\n  kernelFunc: addN\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\nexport function transposeImpl(xVals, xShape, dtype, perm, newShape) {\n  var xRank = xShape.length;\n  var xSize = util.sizeFromShape(xShape);\n  var xStrides = util.computeStrides(xShape);\n  var newStrides = util.computeStrides(newShape);\n  var result = util.getTypedArrayFromDType(dtype, util.sizeFromShape(newShape));\n\n  for (var i = 0; i < xSize; ++i) {\n    var loc = util.indexToLoc(i, xRank, xStrides); // Permute location.\n\n    var newLoc = new Array(loc.length);\n\n    for (var _i = 0; _i < newLoc.length; _i++) {\n      newLoc[_i] = loc[perm[_i]];\n    }\n\n    var newIndex = util.locToIndex(newLoc, xRank, newStrides);\n    result[newIndex] = xVals[i];\n  }\n\n  return result;\n}","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Transpose } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nimport { transposeImpl } from './Transpose_impl';\nexport function transpose(args) {\n  var inputs = args.inputs,\n      attrs = args.attrs,\n      backend = args.backend;\n  var x = inputs.x;\n  var perm = attrs.perm;\n  assertNotComplex(x, 'transpose');\n  var xRank = x.shape.length;\n  var newShape = new Array(xRank);\n\n  for (var i = 0; i < newShape.length; i++) {\n    newShape[i] = x.shape[perm[i]];\n  }\n\n  var values = backend.data.get(x.dataId).values;\n  var result = transposeImpl(values, x.shape, x.dtype, perm, newShape);\n  var dataId = backend.write(result, newShape, x.dtype);\n  return {\n    dataId: dataId,\n    shape: newShape,\n    dtype: x.dtype\n  };\n}\nexport var transposeConfig = {\n  kernelName: Transpose,\n  backendName: 'cpu',\n  kernelFunc: transpose\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { All, backend_util, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nimport { reshape } from './Reshape';\nimport { transpose } from './Transpose';\nexport function all(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  var axis = attrs.axis,\n      keepDims = attrs.keepDims;\n  assertNotComplex(x, 'all');\n  var origAxes = util.parseAxisParam(axis, x.shape);\n  var axes = origAxes;\n  var permutedAxes = backend_util.getAxesPermutation(axes, x.shape.length);\n  var $x = x;\n\n  if (permutedAxes != null) {\n    $x = transpose({\n      inputs: {\n        x: x\n      },\n      backend: backend,\n      attrs: {\n        perm: permutedAxes\n      }\n    });\n    axes = backend_util.getInnerMostAxes(axes.length, x.shape.length);\n  }\n\n  backend_util.assertAxesAreInnerMostDims('all', axes, $x.shape.length);\n\n  var _backend_util$compute = backend_util.computeOutAndReduceShapes($x.shape, axes),\n      _backend_util$compute2 = _slicedToArray(_backend_util$compute, 2),\n      outShape = _backend_util$compute2[0],\n      reduceShape = _backend_util$compute2[1];\n\n  var reduceSize = util.sizeFromShape(reduceShape);\n  var vals = util.makeZerosTypedArray(util.sizeFromShape(outShape), $x.dtype);\n  var aVals = backend.data.get($x.dataId).values;\n\n  for (var i = 0; i < vals.length; ++i) {\n    var offset = i * reduceSize;\n    var _all = aVals[offset];\n\n    for (var j = 0; j < reduceSize; ++j) {\n      var value = aVals[offset + j];\n      _all = _all && value;\n    }\n\n    vals[i] = _all;\n  }\n\n  if (permutedAxes != null) {\n    backend.disposeIntermediateTensorInfo($x);\n  }\n\n  var result = backend.makeTensorInfo(outShape, $x.dtype, vals);\n\n  if (keepDims) {\n    var expandedShape = backend_util.expandShapeToKeepDim(outShape, origAxes);\n    var reshapedResult = reshape({\n      inputs: {\n        x: result\n      },\n      backend: backend,\n      attrs: {\n        shape: expandedShape\n      }\n    });\n    backend.disposeIntermediateTensorInfo(result);\n    return reshapedResult;\n  }\n\n  return result;\n}\nexport var allConfig = {\n  kernelName: All,\n  backendName: 'cpu',\n  kernelFunc: all\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Any, backend_util, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nimport { reshape } from './Reshape';\nimport { transpose } from './Transpose';\nexport function any(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  var axis = attrs.axis,\n      keepDims = attrs.keepDims;\n  assertNotComplex(x, 'any');\n  var origAxes = util.parseAxisParam(axis, x.shape);\n  var axes = origAxes;\n  var permutedAxes = backend_util.getAxesPermutation(axes, x.shape.length);\n  var $x = x;\n\n  if (permutedAxes != null) {\n    $x = transpose({\n      inputs: {\n        x: x\n      },\n      backend: backend,\n      attrs: {\n        perm: permutedAxes\n      }\n    });\n    axes = backend_util.getInnerMostAxes(axes.length, x.shape.length);\n  }\n\n  backend_util.assertAxesAreInnerMostDims('any', axes, $x.shape.length);\n\n  var _backend_util$compute = backend_util.computeOutAndReduceShapes($x.shape, axes),\n      _backend_util$compute2 = _slicedToArray(_backend_util$compute, 2),\n      outShape = _backend_util$compute2[0],\n      reduceShape = _backend_util$compute2[1];\n\n  var reduceSize = util.sizeFromShape(reduceShape);\n  var vals = util.makeZerosTypedArray(util.sizeFromShape(outShape), $x.dtype);\n  var aVals = backend.data.get($x.dataId).values;\n\n  for (var i = 0; i < vals.length; ++i) {\n    var offset = i * reduceSize;\n    var anyVal = aVals[offset];\n\n    for (var j = 0; j < reduceSize; ++j) {\n      var value = aVals[offset + j];\n      anyVal = anyVal || value;\n    }\n\n    vals[i] = anyVal;\n  }\n\n  if (permutedAxes != null) {\n    backend.disposeIntermediateTensorInfo($x);\n  }\n\n  var result = backend.makeTensorInfo(outShape, $x.dtype, vals);\n\n  if (keepDims) {\n    var expandedShape = backend_util.expandShapeToKeepDim(outShape, origAxes);\n    var reshapedResult = reshape({\n      inputs: {\n        x: result\n      },\n      backend: backend,\n      attrs: {\n        shape: expandedShape\n      }\n    });\n    backend.disposeIntermediateTensorInfo(result);\n    return reshapedResult;\n  }\n\n  return result;\n}\nexport var anyConfig = {\n  kernelName: Any,\n  backendName: 'cpu',\n  kernelFunc: any\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ArgMax, backend_util, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nimport { transpose } from './Transpose';\nexport function argMax(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  var axis = attrs.axis;\n  assertNotComplex(x, 'argMax');\n  var axes = util.parseAxisParam(axis, x.shape);\n  var permutedAxes = backend_util.getAxesPermutation(axes, x.shape.length);\n  var $x = x;\n  var intermediateTensorInfos = [];\n\n  if (permutedAxes != null) {\n    $x = transpose({\n      inputs: {\n        x: x\n      },\n      backend: backend,\n      attrs: {\n        perm: permutedAxes\n      }\n    });\n    intermediateTensorInfos.push($x);\n    axes = backend_util.getInnerMostAxes(axes.length, $x.shape.length);\n  }\n\n  axes = [axes[0]];\n  backend_util.assertAxesAreInnerMostDims('argMax', axes, $x.shape.length);\n\n  var _backend_util$compute = backend_util.computeOutAndReduceShapes($x.shape, axes),\n      _backend_util$compute2 = _slicedToArray(_backend_util$compute, 2),\n      outShape = _backend_util$compute2[0],\n      reduceShape = _backend_util$compute2[1];\n\n  var outSize = util.sizeFromShape(outShape);\n  var vals = util.makeZerosTypedArray(outSize, 'int32');\n  var reduceSize = util.sizeFromShape(reduceShape);\n  var aVals = backend.data.get($x.dataId).values;\n\n  for (var i = 0; i < vals.length; ++i) {\n    var offset = i * reduceSize;\n    var max = aVals[offset];\n    var maxIndex = 0;\n\n    for (var j = 0; j < reduceSize; ++j) {\n      var value = aVals[offset + j];\n\n      if (value > max) {\n        max = value;\n        maxIndex = j;\n      }\n    }\n\n    vals[i] = maxIndex;\n  }\n\n  intermediateTensorInfos.forEach(function (t) {\n    return backend.disposeIntermediateTensorInfo(t);\n  });\n  return backend.makeTensorInfo(outShape, 'int32', vals);\n}\nexport var argMaxConfig = {\n  kernelName: ArgMax,\n  backendName: 'cpu',\n  kernelFunc: argMax\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ArgMin, backend_util, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nimport { transpose } from './Transpose';\nexport function argMin(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  var axis = attrs.axis;\n  assertNotComplex(x, 'argMin');\n  var axes = util.parseAxisParam(axis, x.shape);\n  var permutedAxes = backend_util.getAxesPermutation(axes, x.shape.length);\n  var $x = x;\n  var intermediateTensorInfos = [];\n\n  if (permutedAxes != null) {\n    $x = transpose({\n      inputs: {\n        x: x\n      },\n      backend: backend,\n      attrs: {\n        perm: permutedAxes\n      }\n    });\n    intermediateTensorInfos.push($x);\n    axes = backend_util.getInnerMostAxes(axes.length, $x.shape.length);\n  }\n\n  axes = [axes[0]];\n  backend_util.assertAxesAreInnerMostDims('argMin', axes, $x.shape.length);\n\n  var _backend_util$compute = backend_util.computeOutAndReduceShapes($x.shape, axes),\n      _backend_util$compute2 = _slicedToArray(_backend_util$compute, 2),\n      outShape = _backend_util$compute2[0],\n      reduceShape = _backend_util$compute2[1];\n\n  var outSize = util.sizeFromShape(outShape);\n  var vals = util.makeZerosTypedArray(outSize, 'int32');\n  var reduceSize = util.sizeFromShape(reduceShape);\n  var aVals = backend.data.get($x.dataId).values;\n\n  for (var i = 0; i < vals.length; ++i) {\n    var offset = i * reduceSize;\n    var min = aVals[offset];\n    var minIndex = 0;\n\n    for (var j = 0; j < reduceSize; ++j) {\n      var value = aVals[offset + j];\n\n      if (value < min) {\n        min = value;\n        minIndex = j;\n      }\n    }\n\n    vals[i] = minIndex;\n  }\n\n  intermediateTensorInfos.forEach(function (t) {\n    return backend.disposeIntermediateTensorInfo(t);\n  });\n  return backend.makeTensorInfo(outShape, 'int32', vals);\n}\nexport var argMinConfig = {\n  kernelName: ArgMin,\n  backendName: 'cpu',\n  kernelFunc: argMin\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Asin } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../utils/unary_utils';\nexport var asin = unaryKernelFunc(Asin, function (xi) {\n  return Math.asin(xi);\n});\nexport var asinConfig = {\n  kernelName: Asin,\n  backendName: 'cpu',\n  kernelFunc: asin\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Asinh } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../utils/unary_utils';\nexport var asinh = unaryKernelFunc(Asinh, function (xi) {\n  return Math.asinh(xi);\n});\nexport var asinhConfig = {\n  kernelName: Asinh,\n  backendName: 'cpu',\n  kernelFunc: asinh\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Atan } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../utils/unary_utils';\nexport var atan = unaryKernelFunc(Atan, function (xi) {\n  return Math.atan(xi);\n});\nexport var atanConfig = {\n  kernelName: Atan,\n  backendName: 'cpu',\n  kernelFunc: atan\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Atan2 } from '@tensorflow/tfjs-core';\nimport { createSimpleBinaryKernelImpl } from '../utils/binary_impl';\nimport { binaryKernelFunc } from '../utils/binary_utils';\nexport var atan2Impl = createSimpleBinaryKernelImpl(function (aValue, bValue) {\n  return Math.atan2(aValue, bValue);\n});\nexport var atan2 = binaryKernelFunc(Atan2, atan2Impl);\nexport var atan2Config = {\n  kernelName: Atan2,\n  backendName: 'cpu',\n  kernelFunc: atan2\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Atanh } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../utils/unary_utils';\nexport var atanh = unaryKernelFunc(Atanh, function (xi) {\n  return Math.atanh(xi);\n});\nexport var atanhConfig = {\n  kernelName: Atanh,\n  backendName: 'cpu',\n  kernelFunc: atanh\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { buffer } from '@tensorflow/tfjs-core';\nexport function pool(xValues, xShape, dtype, strides, convInfo, poolType) {\n  var strideHeight = convInfo.strideHeight;\n  var strideWidth = convInfo.strideWidth;\n  var dilationHeight = convInfo.dilationHeight;\n  var dilationWidth = convInfo.dilationWidth;\n  var effectiveFilterHeight = convInfo.effectiveFilterHeight;\n  var effectiveFilterWidth = convInfo.effectiveFilterWidth;\n  var padTop = convInfo.padInfo.top;\n  var padLeft = convInfo.padInfo.left;\n  var initialValue = poolType === 'max' ? Number.NEGATIVE_INFINITY : Number.POSITIVE_INFINITY;\n  var output = buffer(convInfo.outShape, dtype);\n  var outputVals = output.values;\n  var outputBatchStrides = convInfo.outShape[1] * convInfo.outShape[2] * convInfo.outShape[3];\n  var outputRowStrides = convInfo.outShape[2] * convInfo.outShape[3];\n  var outputColStrides = convInfo.outShape[3];\n\n  for (var b = 0; b < convInfo.batchSize; ++b) {\n    var outputBatchOffset = b * outputBatchStrides;\n    var inputBatchOffset = b * strides[0];\n\n    for (var d = 0; d < convInfo.inChannels; ++d) {\n      for (var yR = 0; yR < convInfo.outHeight; ++yR) {\n        var xRCorner = yR * strideHeight - padTop;\n        var xRMin = Math.max(0, xRCorner);\n        var xRMax = Math.min(convInfo.inHeight, effectiveFilterHeight + xRCorner);\n        var outputRowOffset = outputBatchOffset + yR * outputRowStrides;\n\n        for (var yC = 0; yC < convInfo.outWidth; ++yC) {\n          var xCCorner = yC * strideWidth - padLeft;\n          var xCMin = Math.max(0, xCCorner);\n          var xCMax = Math.min(convInfo.inWidth, effectiveFilterWidth + xCCorner);\n          var minMaxValue = initialValue;\n          var avgValue = 0;\n          var count = 0;\n\n          for (var xR = xRMin; xR < xRMax; xR += dilationHeight) {\n            var xROffset = inputBatchOffset + xR * strides[1];\n\n            for (var xC = xCMin; xC < xCMax; xC += dilationWidth) {\n              var xCOffset = xROffset + xC * strides[2];\n              var pixel = xValues[xCOffset + d];\n\n              if (poolType === 'max' && pixel > minMaxValue) {\n                minMaxValue = pixel;\n              } else if (poolType === 'avg') {\n                avgValue += pixel;\n                count++;\n              }\n            }\n\n            if (isNaN(minMaxValue)) {\n              break;\n            }\n          }\n\n          var outputOffset = outputRowOffset + yC * outputColStrides + d;\n          outputVals[outputOffset] = poolType === 'avg' ? avgValue / count : minMaxValue;\n        }\n      }\n    }\n  }\n\n  return output;\n}\nexport function maxPoolPositions(xValues, xShape, dtype, convInfo) {\n  var flattenPositions = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  var includeBatchInIndex = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n  var maxPositions = buffer(convInfo.outShape, 'int32');\n  var strideHeight = convInfo.strideHeight;\n  var strideWidth = convInfo.strideWidth;\n  var dilationHeight = convInfo.dilationHeight;\n  var dilationWidth = convInfo.dilationWidth;\n  var effectiveFilterHeight = convInfo.effectiveFilterHeight;\n  var effectiveFilterWidth = convInfo.effectiveFilterWidth;\n  var padTop = convInfo.padInfo.top;\n  var padLeft = convInfo.padInfo.left;\n  var xBuf = buffer(xShape, dtype, xValues);\n\n  for (var b = 0; b < convInfo.batchSize; ++b) {\n    for (var d = 0; d < convInfo.inChannels; ++d) {\n      for (var yR = 0; yR < convInfo.outHeight; ++yR) {\n        var xRCorner = yR * strideHeight - padTop;\n        var xRMin = xRCorner;\n\n        while (xRMin < 0) {\n          xRMin += dilationHeight;\n        } // const xRMin = Math.max(0, xRCorner);\n\n\n        var xRMax = Math.min(convInfo.inHeight, effectiveFilterHeight + xRCorner);\n\n        for (var yC = 0; yC < convInfo.outWidth; ++yC) {\n          var xCCorner = yC * strideWidth - padLeft;\n          var xCMin = xCCorner;\n\n          while (xCMin < 0) {\n            xCMin += dilationWidth;\n          }\n\n          var xCMax = Math.min(convInfo.inWidth, effectiveFilterWidth + xCCorner);\n          var maxValue = Number.NEGATIVE_INFINITY;\n          var maxPosition = -1;\n\n          for (var xR = xRMin; xR < xRMax; xR += dilationHeight) {\n            var wR = xR - xRCorner;\n\n            for (var xC = xCMin; xC < xCMax; xC += dilationWidth) {\n              var wC = xC - xCCorner;\n              var pixel = xBuf.get(b, xR, xC, d);\n\n              if (pixel > maxValue) {\n                maxValue = pixel;\n\n                if (flattenPositions) {\n                  maxPosition = includeBatchInIndex ? ((b * convInfo.inHeight + xR) * convInfo.inWidth + xC) * convInfo.inChannels + d : (xR * convInfo.inWidth + xC) * convInfo.inChannels + d;\n                } else {\n                  maxPosition = wR * effectiveFilterWidth + wC;\n                }\n              }\n            }\n          }\n\n          maxPositions.set(maxPosition, b, yR, yC, d);\n        }\n      }\n    }\n  }\n\n  return maxPositions;\n}\nexport function pool3d(xValues, xShape, dtype, strides, convInfo, poolType) {\n  var strideDepth = convInfo.strideDepth;\n  var strideHeight = convInfo.strideHeight;\n  var strideWidth = convInfo.strideWidth;\n  var dilationDepth = convInfo.dilationDepth;\n  var dilationHeight = convInfo.dilationHeight;\n  var dilationWidth = convInfo.dilationWidth;\n  var effectiveFilterDepth = convInfo.effectiveFilterDepth;\n  var effectiveFilterHeight = convInfo.effectiveFilterHeight;\n  var effectiveFilterWidth = convInfo.effectiveFilterWidth;\n  var padFront = convInfo.padInfo.front;\n  var padTop = convInfo.padInfo.top;\n  var padLeft = convInfo.padInfo.left;\n  var initialValue = poolType === 'max' ? Number.NEGATIVE_INFINITY : Number.POSITIVE_INFINITY;\n  var output = buffer(convInfo.outShape, dtype);\n  var outputVals = output.values;\n  var outputBatchStrides = convInfo.outShape[1] * convInfo.outShape[2] * convInfo.outShape[3] * convInfo.outShape[4];\n  var outputDepthStrides = convInfo.outShape[2] * convInfo.outShape[3] * convInfo.outShape[4];\n  var outputRowStrides = convInfo.outShape[3] * convInfo.outShape[4];\n  var outputColStrides = convInfo.outShape[4];\n\n  for (var batch = 0; batch < convInfo.batchSize; ++batch) {\n    var outputBatchOffset = batch * outputBatchStrides;\n    var inputBatchOffset = batch * strides[0];\n\n    for (var channel = 0; channel < convInfo.inChannels; ++channel) {\n      for (var yDepth = 0; yDepth < convInfo.outDepth; ++yDepth) {\n        var xDepthCorner = yDepth * strideDepth - padFront;\n        var xDepthMin = xDepthCorner;\n\n        while (xDepthMin < 0) {\n          xDepthMin += dilationDepth;\n        }\n\n        var xDepthMax = Math.min(convInfo.inDepth, effectiveFilterDepth + xDepthCorner);\n        var outputDepthOffset = outputBatchOffset + yDepth * outputDepthStrides;\n\n        for (var yRow = 0; yRow < convInfo.outHeight; ++yRow) {\n          var xRowCorner = yRow * strideHeight - padTop;\n          var xRowMin = xRowCorner;\n\n          while (xRowMin < 0) {\n            xRowMin += dilationHeight;\n          }\n\n          var xRowMax = Math.min(convInfo.inHeight, effectiveFilterHeight + xRowCorner);\n          var outputRowOffset = outputDepthOffset + yRow * outputRowStrides;\n\n          for (var yCol = 0; yCol < convInfo.outWidth; ++yCol) {\n            var xColCorner = yCol * strideWidth - padLeft;\n            var xColMin = xColCorner;\n\n            while (xColMin < 0) {\n              xColMin += dilationWidth;\n            }\n\n            var xColMax = Math.min(convInfo.inWidth, effectiveFilterWidth + xColCorner); // Shader code begins\n\n            var outputColOffset = outputRowOffset + yCol * outputColStrides;\n            var minMaxValue = initialValue;\n            var avgValue = 0;\n            var count = 0;\n\n            for (var xDepth = xDepthMin; xDepth < xDepthMax; xDepth += dilationDepth) {\n              var xDepthOffset = inputBatchOffset + xDepth * strides[1];\n\n              for (var xRow = xRowMin; xRow < xRowMax; xRow += dilationHeight) {\n                var xRowOffset = xDepthOffset + xRow * strides[2];\n\n                for (var xCol = xColMin; xCol < xColMax; xCol += dilationWidth) {\n                  var xColOffset = xRowOffset + xCol * strides[3];\n                  var pixel = xValues[xColOffset + channel];\n\n                  if (poolType === 'max' && pixel > minMaxValue) {\n                    minMaxValue = pixel;\n                  } else if (poolType === 'avg') {\n                    avgValue += pixel;\n                    count++;\n                  }\n\n                  if (isNaN(minMaxValue)) {\n                    break;\n                  }\n                }\n\n                if (isNaN(minMaxValue)) {\n                  break;\n                }\n              }\n\n              if (isNaN(minMaxValue)) {\n                break;\n              }\n            }\n\n            var outputOffset = outputColOffset + channel;\n            outputVals[outputOffset] = poolType === 'avg' ? avgValue / count : minMaxValue;\n          }\n        }\n      }\n    }\n  }\n\n  return output;\n}\nexport function maxPool3dPositions(xBuf, convInfo) {\n  var maxPositions = buffer(convInfo.outShape, 'int32');\n  var strideDepth = convInfo.strideDepth;\n  var strideHeight = convInfo.strideHeight;\n  var strideWidth = convInfo.strideWidth;\n  var dilationDepth = convInfo.dilationDepth;\n  var dilationHeight = convInfo.dilationHeight;\n  var dilationWidth = convInfo.dilationWidth;\n  var effectiveFilterDepth = convInfo.effectiveFilterDepth;\n  var effectiveFilterHeight = convInfo.effectiveFilterHeight;\n  var effectiveFilterWidth = convInfo.effectiveFilterWidth;\n  var padFront = convInfo.padInfo.front;\n  var padTop = convInfo.padInfo.top;\n  var padLeft = convInfo.padInfo.left;\n\n  for (var batch = 0; batch < convInfo.batchSize; ++batch) {\n    for (var channel = 0; channel < convInfo.inChannels; ++channel) {\n      for (var yDepth = 0; yDepth < convInfo.outDepth; ++yDepth) {\n        var xDepthCorner = yDepth * strideDepth - padFront;\n        var xDepthMin = xDepthCorner;\n\n        while (xDepthMin < 0) {\n          xDepthMin += dilationDepth;\n        }\n\n        var xDepthMax = Math.min(convInfo.inDepth, effectiveFilterDepth + xDepthCorner);\n\n        for (var yRow = 0; yRow < convInfo.outHeight; ++yRow) {\n          var xRowCorner = yRow * strideHeight - padTop;\n          var xRowMin = xRowCorner;\n\n          while (xRowMin < 0) {\n            xRowMin += dilationHeight;\n          }\n\n          var xRowMax = Math.min(convInfo.inHeight, effectiveFilterHeight + xRowCorner);\n\n          for (var yCol = 0; yCol < convInfo.outWidth; ++yCol) {\n            var xColCorner = yCol * strideWidth - padLeft;\n            var xColMin = xColCorner;\n\n            while (xColMin < 0) {\n              xColMin += dilationWidth;\n            }\n\n            var xColMax = Math.min(convInfo.inWidth, effectiveFilterWidth + xColCorner); // Shader code begins\n\n            var maxValue = Number.NEGATIVE_INFINITY;\n            var maxPosition = -1;\n\n            for (var xDepth = xDepthMin; xDepth < xDepthMax; xDepth += dilationDepth) {\n              var wDepth = xDepth - xDepthCorner;\n\n              for (var xRow = xRowMin; xRow < xRowMax; xRow += dilationHeight) {\n                var wRow = xRow - xRowCorner;\n\n                for (var xCol = xColMin; xCol < xColMax; xCol += dilationWidth) {\n                  var wCol = xCol - xColCorner;\n                  var pixel = xBuf.get(batch, xDepth, xRow, xCol, channel);\n\n                  if (pixel >= maxValue) {\n                    maxValue = pixel;\n                    maxPosition = wDepth * effectiveFilterHeight * effectiveFilterWidth + wRow * effectiveFilterHeight + wCol;\n                  }\n                }\n              }\n            }\n\n            maxPositions.set(maxPosition, batch, yDepth, yRow, yCol, channel);\n          }\n        }\n      }\n    }\n  }\n\n  return maxPositions;\n}","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { AvgPool, backend_util, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nimport { pool } from '../utils/pool_utils';\nimport { identity } from './Identity';\nexport function avgPool(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  assertNotComplex(x, 'avgPool');\n  var filterSize = attrs.filterSize,\n      strides = attrs.strides,\n      pad = attrs.pad,\n      dimRoundingMode = attrs.dimRoundingMode;\n  var dilations = 1;\n  util.assert(backend_util.eitherStridesOrDilationsAreOne(strides, dilations), function () {\n    return 'Error in avgPool: Either strides or dilations must be 1. ' + \"Got strides \".concat(strides, \" and dilations '\").concat(dilations, \"'\");\n  });\n  var convInfo = backend_util.computePool2DInfo(x.shape, filterSize, strides, dilations, pad, dimRoundingMode);\n  var res;\n\n  if (convInfo.filterWidth === 1 && convInfo.filterHeight === 1 && util.arraysEqual(convInfo.inShape, convInfo.outShape)) {\n    res = identity({\n      inputs: {\n        x: x\n      },\n      backend: backend\n    });\n  } else {\n    var xValues = backend.data.get(x.dataId).values;\n\n    var _strides = util.computeStrides(x.shape);\n\n    var buffer = pool(xValues, x.shape, x.dtype, _strides, convInfo, 'avg');\n    res = backend.makeTensorInfo(convInfo.outShape, x.dtype, buffer.values);\n  }\n\n  return res;\n}\nexport var avgPoolConfig = {\n  kernelName: AvgPool,\n  backendName: 'cpu',\n  kernelFunc: avgPool\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { AvgPool3D, backend_util, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nimport { pool3d } from '../utils/pool_utils';\nexport function avgPool3D(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  var filterSize = attrs.filterSize,\n      strides = attrs.strides,\n      pad = attrs.pad,\n      dimRoundingMode = attrs.dimRoundingMode,\n      dataFormat = attrs.dataFormat;\n  assertNotComplex(x, 'avgPool3d');\n  var convInfo = backend_util.computePool3DInfo(x.shape, filterSize, strides, 1\n  /* dilations */\n  , pad, dimRoundingMode, dataFormat);\n  var xValues = backend.data.get(x.dataId).values;\n  var outBuf = pool3d(xValues, x.shape, x.dtype, util.computeStrides(x.shape), convInfo, 'avg');\n  return backend.makeTensorInfo(outBuf.shape, 'float32', outBuf.values);\n}\nexport var avgPool3DConfig = {\n  kernelName: AvgPool3D,\n  backendName: 'cpu',\n  kernelFunc: avgPool3D\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { AvgPool3DGrad, backend_util, buffer } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nexport function avgPool3DGrad(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var dy = inputs.dy,\n      input = inputs.input;\n  var filterSize = attrs.filterSize,\n      strides = attrs.strides,\n      pad = attrs.pad,\n      dimRoundingMode = attrs.dimRoundingMode;\n  assertNotComplex([dy, input], 'avgPool3DGrad');\n  var convInfo = backend_util.computePool3DInfo(input.shape, filterSize, strides, 1\n  /* dilations */\n  , pad, dimRoundingMode);\n  var strideDepth = convInfo.strideDepth;\n  var strideHeight = convInfo.strideHeight;\n  var strideWidth = convInfo.strideWidth;\n  var filterDepth = convInfo.filterDepth;\n  var filterHeight = convInfo.filterHeight;\n  var filterWidth = convInfo.filterWidth;\n  var dilationDepth = convInfo.dilationDepth;\n  var dilationHeight = convInfo.dilationHeight;\n  var dilationWidth = convInfo.dilationWidth;\n  var effectiveFilterDepth = convInfo.effectiveFilterDepth;\n  var effectiveFilterHeight = convInfo.effectiveFilterHeight;\n  var effectiveFilterWidth = convInfo.effectiveFilterWidth;\n  var padFront = effectiveFilterDepth - 1 - convInfo.padInfo.front;\n  var padLeft = effectiveFilterWidth - 1 - convInfo.padInfo.left;\n  var padTop = effectiveFilterHeight - 1 - convInfo.padInfo.top;\n  var dx = buffer(input.shape, 'float32');\n  var avgMultiplier = 1 / (filterDepth * filterHeight * filterWidth);\n  var dyBuf = backend.bufferSync(dy);\n\n  for (var batch = 0; batch < convInfo.batchSize; ++batch) {\n    for (var channel = 0; channel < convInfo.inChannels; ++channel) {\n      for (var dxDepth = 0; dxDepth < convInfo.inDepth; ++dxDepth) {\n        for (var dxRow = 0; dxRow < convInfo.inHeight; ++dxRow) {\n          for (var dxCol = 0; dxCol < convInfo.inWidth; ++dxCol) {\n            // Shader code begins.\n            var dyDepthCorner = dxDepth - padFront;\n            var dyRowCorner = dxRow - padTop;\n            var dyColCorner = dxCol - padLeft;\n            var dotProd = 0;\n\n            for (var wDepth = 0; wDepth < effectiveFilterDepth; wDepth += dilationDepth) {\n              var dyDepth = (dyDepthCorner + wDepth) / strideDepth;\n\n              if (dyDepth < 0 || dyDepth >= convInfo.outDepth || Math.floor(dyDepth) !== dyDepth) {\n                continue;\n              }\n\n              for (var wRow = 0; wRow < effectiveFilterHeight; wRow += dilationHeight) {\n                var dyRow = (dyRowCorner + wRow) / strideHeight;\n\n                if (dyRow < 0 || dyRow >= convInfo.outHeight || Math.floor(dyRow) !== dyRow) {\n                  continue;\n                }\n\n                for (var wCol = 0; wCol < effectiveFilterWidth; wCol += dilationWidth) {\n                  var dyCol = (dyColCorner + wCol) / strideWidth;\n\n                  if (dyCol < 0 || dyCol >= convInfo.outWidth || Math.floor(dyCol) !== dyCol) {\n                    continue;\n                  }\n\n                  var pixel = dyBuf.get(batch, dyDepth, dyRow, dyCol, channel);\n                  dotProd += pixel;\n                }\n              }\n            }\n\n            dx.set(dotProd * avgMultiplier, batch, dxDepth, dxRow, dxCol, channel);\n          }\n        }\n      }\n    }\n  }\n\n  return backend.makeTensorInfo(dx.shape, dx.dtype, dx.values);\n}\nexport var avgPool3DGradConfig = {\n  kernelName: AvgPool3DGrad,\n  backendName: 'cpu',\n  kernelFunc: avgPool3DGrad\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { AvgPoolGrad, backend_util, buffer } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nexport function avgPoolGrad(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var dy = inputs.dy,\n      input = inputs.input;\n  var x = input;\n  assertNotComplex([dy, input], 'avgPoolGrad');\n  var filterSize = attrs.filterSize,\n      strides = attrs.strides,\n      pad = attrs.pad;\n  var convInfo = backend_util.computePool2DInfo(x.shape, filterSize, strides, 1\n  /* dilations */\n  , pad);\n  var strideHeight = convInfo.strideHeight;\n  var strideWidth = convInfo.strideWidth;\n  var filterHeight = convInfo.filterHeight;\n  var filterWidth = convInfo.filterWidth;\n  var dilationHeight = convInfo.dilationHeight;\n  var dilationWidth = convInfo.dilationWidth;\n  var effectiveFilterHeight = convInfo.effectiveFilterHeight;\n  var effectiveFilterWidth = convInfo.effectiveFilterWidth;\n  var padLeft = effectiveFilterWidth - 1 - convInfo.padInfo.left;\n  var padTop = effectiveFilterHeight - 1 - convInfo.padInfo.top;\n  var dx = buffer(x.shape, 'float32');\n  var avgMultiplier = 1 / (filterHeight * filterWidth);\n  var dyData = backend.data.get(dy.dataId).values;\n  var dyBuf = buffer(dy.shape, 'float32', dyData);\n\n  for (var b = 0; b < convInfo.batchSize; ++b) {\n    for (var d = 0; d < convInfo.inChannels; ++d) {\n      for (var dxR = 0; dxR < convInfo.inHeight; ++dxR) {\n        for (var dxC = 0; dxC < convInfo.inWidth; ++dxC) {\n          // Shader code begins.\n          var dyRCorner = dxR - padTop;\n          var dyCCorner = dxC - padLeft;\n          var dotProd = 0;\n\n          for (var wR = 0; wR < effectiveFilterHeight; wR += dilationHeight) {\n            var dyR = (dyRCorner + wR) / strideHeight;\n\n            if (dyR < 0 || dyR >= convInfo.outHeight || Math.floor(dyR) !== dyR) {\n              continue;\n            }\n\n            for (var wC = 0; wC < effectiveFilterWidth; wC += dilationWidth) {\n              var dyC = (dyCCorner + wC) / strideWidth;\n\n              if (dyC < 0 || dyC >= convInfo.outWidth || Math.floor(dyC) !== dyC) {\n                continue;\n              }\n\n              var pixel = dyBuf.get(b, dyR, dyC, d);\n              dotProd += pixel;\n            }\n          }\n\n          dx.set(dotProd * avgMultiplier, b, dxR, dxC, d);\n        }\n      }\n    }\n  }\n\n  return backend.makeTensorInfo(dx.shape, dx.dtype, dx.values);\n}\nexport var avgPoolGradConfig = {\n  kernelName: AvgPoolGrad,\n  backendName: 'cpu',\n  kernelFunc: avgPoolGrad\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { FusedBatchNorm, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nexport function batchNorm(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x,\n      scale = inputs.scale,\n      offset = inputs.offset,\n      mean = inputs.mean,\n      variance = inputs.variance;\n  util.assert(mean.shape.length === variance.shape.length, function () {\n    return 'Batch normalization gradient requires mean and variance to have ' + 'equal ranks.';\n  });\n  util.assert(offset == null || mean.shape.length === offset.shape.length, function () {\n    return 'Batch normalization gradient requires mean and offset to have ' + 'equal ranks.';\n  });\n  util.assert(scale == null || mean.shape.length === scale.shape.length, function () {\n    return 'Batch normalization gradient requires mean and scale to have ' + 'equal ranks.';\n  });\n  assertNotComplex([x, mean, variance, scale, offset], 'batchNorm');\n  var varianceEpsilon = attrs.varianceEpsilon;\n\n  if (varianceEpsilon == null) {\n    varianceEpsilon = 0.001;\n  }\n\n  var xVals = backend.data.get(x.dataId).values;\n  var mVals = backend.data.get(mean.dataId).values;\n  var varVals = backend.data.get(variance.dataId).values;\n  var sVals = scale ? backend.data.get(scale.dataId).values : new Float32Array([1]);\n  var offVals = offset ? backend.data.get(offset.dataId).values : new Float32Array([0]);\n  var outVals = new Float32Array(xVals.length);\n  var offValsLength = offVals.length;\n  var sValsLength = sVals.length;\n  var varValsLength = varVals.length;\n  var mValsLength = mVals.length;\n  var offi = 0;\n  var mi = 0;\n  var si = 0;\n  var vi = 0;\n\n  for (var i = 0; i < xVals.length; ++i) {\n    outVals[i] = offVals[offi++] + (xVals[i] - mVals[mi++]) * sVals[si++] / Math.sqrt(varVals[vi++] + varianceEpsilon);\n\n    if (offi >= offValsLength) {\n      offi = 0;\n    }\n\n    if (mi >= mValsLength) {\n      mi = 0;\n    }\n\n    if (si >= sValsLength) {\n      si = 0;\n    }\n\n    if (vi >= varValsLength) {\n      vi = 0;\n    }\n  }\n\n  return backend.makeTensorInfo(x.shape, x.dtype, outVals);\n}\nexport var batchNormConfig = {\n  kernelName: FusedBatchNorm,\n  backendName: 'cpu',\n  kernelFunc: batchNorm\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, buffer, Slice, slice_util, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nexport function sliceImpl(vals, begin, size, shape, dtype) {\n  var isContinous = slice_util.isSliceContinous(shape, begin, size);\n  var length = util.sizeFromShape(size);\n  var xStrides = util.computeStrides(shape);\n\n  if (isContinous) {\n    var flatOffset = slice_util.computeFlatOffset(begin, xStrides);\n\n    if (dtype === 'string') {\n      return vals.slice(flatOffset, flatOffset + length);\n    }\n\n    return vals.subarray(flatOffset, flatOffset + length);\n  }\n\n  var decodedData = dtype === 'string' ? backend_util.fromUint8ToStringArray(vals) : vals;\n  var inBuf = buffer(shape, dtype, decodedData);\n  var outBuf = buffer(size, dtype);\n\n  for (var i = 0; i < outBuf.size; ++i) {\n    var outLoc = outBuf.indexToLoc(i);\n    var inLoc = outLoc.map(function (idx, j) {\n      return idx + begin[j];\n    });\n    outBuf.set.apply(outBuf, [inBuf.get.apply(inBuf, _toConsumableArray(inLoc))].concat(_toConsumableArray(outLoc)));\n  }\n\n  if (dtype === 'string') {\n    return backend_util.fromStringArrayToUint8(outBuf.values);\n  }\n\n  return outBuf.values;\n}\nexport function slice(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  var begin = attrs.begin,\n      size = attrs.size;\n  assertNotComplex(x, 'slice');\n\n  var _slice_util$parseSlic = slice_util.parseSliceParams(x, begin, size),\n      _slice_util$parseSlic2 = _slicedToArray(_slice_util$parseSlic, 2),\n      $begin = _slice_util$parseSlic2[0],\n      $size = _slice_util$parseSlic2[1];\n\n  slice_util.assertParamsValid(x, $begin, $size);\n  var vals = backend.data.get(x.dataId).values;\n  var outVals = sliceImpl(vals, $begin, $size, x.shape, x.dtype);\n  return backend.makeTensorInfo($size, x.dtype, outVals);\n}\nexport var sliceConfig = {\n  kernelName: Slice,\n  backendName: 'cpu',\n  kernelFunc: slice\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, BatchToSpaceND } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nimport { reshape } from './Reshape';\nimport { slice } from './Slice';\nimport { transpose } from './Transpose';\nexport function batchToSpaceND(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  var blockShape = attrs.blockShape,\n      crops = attrs.crops;\n  assertNotComplex([x], 'batchToSpaceND');\n  var prod = blockShape.reduce(function (a, b) {\n    return a * b;\n  });\n  var reshaped = backend_util.getReshaped(x.shape, blockShape, prod);\n  var permuted = backend_util.getPermuted(reshaped.length, blockShape.length);\n  var reshapedPermuted = backend_util.getReshapedPermuted(x.shape, blockShape, prod);\n  var sliceBeginCoords = backend_util.getSliceBeginCoords(crops, blockShape.length);\n  var sliceSize = backend_util.getSliceSize(reshapedPermuted, crops, blockShape.length);\n  var xReshaped = reshape({\n    inputs: {\n      x: x\n    },\n    backend: backend,\n    attrs: {\n      shape: reshaped\n    }\n  });\n  var xTransposed = transpose({\n    inputs: {\n      x: xReshaped\n    },\n    backend: backend,\n    attrs: {\n      perm: permuted\n    }\n  });\n  var xTransposedReshaped = reshape({\n    inputs: {\n      x: xTransposed\n    },\n    backend: backend,\n    attrs: {\n      shape: reshapedPermuted\n    }\n  });\n  var result = slice({\n    inputs: {\n      x: xTransposedReshaped\n    },\n    backend: backend,\n    attrs: {\n      begin: sliceBeginCoords,\n      size: sliceSize\n    }\n  });\n  backend.disposeIntermediateTensorInfo(xReshaped);\n  backend.disposeIntermediateTensorInfo(xTransposed);\n  backend.disposeIntermediateTensorInfo(xTransposedReshaped);\n  return result;\n}\nexport var batchToSpaceNDConfig = {\n  kernelName: BatchToSpaceND,\n  backendName: 'cpu',\n  kernelFunc: batchToSpaceND\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { buffer, util } from '@tensorflow/tfjs-core';\nexport function bincountImpl(xVals, weightsVals, weightsDtype, weightsShape, size) {\n  var weightsSize = util.sizeFromShape(weightsShape);\n  var outVals = util.makeZerosTypedArray(size, weightsDtype);\n\n  for (var i = 0; i < xVals.length; i++) {\n    var value = xVals[i];\n\n    if (value < 0) {\n      throw new Error('Input x must be non-negative!');\n    }\n\n    if (value >= size) {\n      continue;\n    }\n\n    if (weightsSize > 0) {\n      outVals[value] += weightsVals[i];\n    } else {\n      outVals[value] += 1;\n    }\n  }\n\n  return outVals;\n}\nexport function bincountReduceImpl(xBuf, weightsBuf, size) {\n  var binaryOutput = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var numRows = xBuf.shape[0];\n  var numCols = xBuf.shape[1];\n  var outBuf = buffer([numRows, size], weightsBuf.dtype);\n\n  for (var i = 0; i < numRows; i++) {\n    for (var j = 0; j < numCols; j++) {\n      var value = xBuf.get(i, j);\n\n      if (value < 0) {\n        throw new Error('Input x must be non-negative!');\n      }\n\n      if (value >= size) {\n        continue;\n      }\n\n      if (binaryOutput) {\n        outBuf.set(1, i, value);\n      } else {\n        if (weightsBuf.size > 0) {\n          outBuf.set(outBuf.get(i, value) + weightsBuf.get(i, j), i, value);\n        } else {\n          outBuf.set(outBuf.get(i, value) + 1, i, value);\n        }\n      }\n    }\n  }\n\n  return outBuf;\n}","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Bincount } from '@tensorflow/tfjs-core';\nimport { bincountImpl } from './Bincount_impl';\nexport function bincount(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x,\n      weights = inputs.weights;\n  var size = attrs.size;\n  var xVals = backend.data.get(x.dataId).values;\n  var weightsVals = backend.data.get(weights.dataId).values;\n  var outVals = bincountImpl(xVals, weightsVals, weights.dtype, weights.shape, size);\n  return backend.makeTensorInfo([size], weights.dtype, outVals);\n}\nexport var bincountConfig = {\n  kernelName: Bincount,\n  backendName: 'cpu',\n  kernelFunc: bincount\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\n/**\n * Template that creates implementation for unary op.\n */\n\nexport function createSimpleUnaryImpl(op) {\n  return function (values, dtype, attrs) {\n    var newValues = util.getTypedArrayFromDType(dtype, values.length);\n\n    for (var i = 0; i < values.length; ++i) {\n      newValues[i] = op(values[i], attrs);\n    }\n\n    return newValues;\n  };\n}","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Ceil } from '@tensorflow/tfjs-core';\nimport { createSimpleUnaryImpl } from '../utils/unary_impl';\nimport { unaryKernelFuncFromImpl } from '../utils/unary_utils';\nexport var ceilImpl = createSimpleUnaryImpl(function (xi) {\n  return Math.ceil(xi);\n});\nexport var ceil = unaryKernelFuncFromImpl(Ceil, ceilImpl);\nexport var ceilConfig = {\n  kernelName: Ceil,\n  backendName: 'cpu',\n  kernelFunc: ceil\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ClipByValue } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../utils/unary_utils';\nexport var clip = unaryKernelFunc(ClipByValue, function (xi, attrs) {\n  var clipAttrs = attrs;\n\n  if (xi > clipAttrs.clipValueMax) {\n    return clipAttrs.clipValueMax;\n  }\n\n  return xi < clipAttrs.clipValueMin ? clipAttrs.clipValueMin : xi;\n});\nexport var clipConfig = {\n  kernelName: ClipByValue,\n  backendName: 'cpu',\n  kernelFunc: clip\n};","import \"core-js/modules/es.math.hypot.js\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ComplexAbs, util } from '@tensorflow/tfjs-core';\nexport var complexAbs = function complexAbs(args) {\n  var x = args.inputs.x;\n  var cpuBackend = args.backend;\n  var resultValues = new Float32Array(util.sizeFromShape(x.shape));\n  var complexVals = cpuBackend.data.get(x.dataId);\n  var real = complexVals.complexTensorInfos.real;\n  var imag = complexVals.complexTensorInfos.imag;\n  var realVals = cpuBackend.data.get(real.dataId).values;\n  var imagVals = cpuBackend.data.get(imag.dataId).values;\n\n  for (var i = 0; i < realVals.length; i++) {\n    var _real = realVals[i];\n    var _imag = imagVals[i];\n    resultValues[i] = Math.hypot(_real, _imag);\n  }\n\n  return cpuBackend.makeOutput(resultValues, x.shape, 'float32');\n};\nexport var complexAbsConfig = {\n  kernelName: ComplexAbs,\n  backendName: 'cpu',\n  kernelFunc: complexAbs\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, util } from '@tensorflow/tfjs-core';\nexport function concatImpl(inputs, outShape, dtype, simplyConcat) {\n  var outVals = util.getArrayFromDType(dtype, util.sizeFromShape(outShape));\n\n  if (simplyConcat && dtype !== 'string') {\n    // Use built-in TypedArray.set() method for speed.\n    var offset = 0;\n    inputs.forEach(function (input) {\n      var size = util.sizeFromShape(input.shape);\n      outVals.set(input.vals, offset);\n      offset += size;\n    });\n  } else {\n    var colOffset = 0;\n    inputs.forEach(function (input) {\n      var decodedData = dtype === 'string' ? backend_util.fromUint8ToStringArray(input.vals) : input.vals;\n      var tIdx = 0;\n\n      for (var row = 0; row < input.shape[0]; ++row) {\n        var resIdx = row * outShape[1] + colOffset;\n\n        for (var col = 0; col < input.shape[1]; ++col) {\n          outVals[resIdx + col] = decodedData[tIdx++];\n        }\n      }\n\n      colOffset += input.shape[1];\n    });\n  }\n\n  return outVals;\n}","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Imag } from '@tensorflow/tfjs-core';\nexport function imag(args) {\n  var inputs = args.inputs,\n      backend = args.backend;\n  var input = inputs.input;\n  var imag = backend.data.get(input.dataId).complexTensorInfos.imag;\n  var imagVal = backend.data.get(imag.dataId).values; // When complex tensor is disposed, its underlying parts will be disposed too.\n  // Make new tensor out of the imag value of the complex. This makes sure the\n  // value is still accessible even if complex tensor is disposed.\n\n  return backend.makeTensorInfo(imag.shape, imag.dtype, imagVal);\n}\nexport var imagConfig = {\n  kernelName: Imag,\n  backendName: 'cpu',\n  kernelFunc: imag\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Concat, util } from '@tensorflow/tfjs-core';\nimport { complex } from './Complex';\nimport { concatImpl } from './Concat_impl';\nimport { identity } from './Identity';\nimport { imag } from './Imag';\nimport { real } from './Real';\nimport { reshape } from './Reshape';\nexport function concat(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var axis = attrs.axis;\n  var $axis = util.parseAxisParam(axis, inputs[0].shape)[0];\n  var outShape = backend_util.computeOutShape(inputs.map(function (t) {\n    return t.shape;\n  }), $axis);\n\n  if (util.sizeFromShape(outShape) === 0) {\n    return backend.makeTensorInfo(outShape, inputs[0].dtype, []);\n  } // Keep only non-empty tensors (ignore tensors with 0 in their shape).\n\n\n  var $inputs = inputs.filter(function (t) {\n    return util.sizeFromShape(t.shape) > 0;\n  });\n\n  if ($inputs.length === 1) {\n    return identity({\n      inputs: {\n        x: $inputs[0]\n      },\n      backend: backend\n    });\n  }\n\n  var shapes = $inputs.map(function (t) {\n    return t.shape;\n  });\n  backend_util.assertParamsConsistent(shapes, $axis);\n\n  if ($inputs[0].dtype === 'complex64') {\n    var reals = $inputs.map(function (t) {\n      return real({\n        inputs: {\n          input: t\n        },\n        backend: backend\n      });\n    });\n    var imags = $inputs.map(function (t) {\n      return imag({\n        inputs: {\n          input: t\n        },\n        backend: backend\n      });\n    });\n    var realConcated = concat({\n      inputs: reals,\n      backend: backend,\n      attrs: {\n        axis: $axis\n      }\n    });\n    var imagConcated = concat({\n      inputs: imags,\n      backend: backend,\n      attrs: {\n        axis: $axis\n      }\n    });\n    var result = complex({\n      inputs: {\n        real: realConcated,\n        imag: imagConcated\n      },\n      backend: backend\n    });\n    reals.forEach(function (r) {\n      return backend.disposeIntermediateTensorInfo(r);\n    });\n    imags.forEach(function (i) {\n      return backend.disposeIntermediateTensorInfo(i);\n    });\n    backend.disposeIntermediateTensorInfo(realConcated);\n    backend.disposeIntermediateTensorInfo(imagConcated);\n    return result;\n  } // Any concat of n-dimensional tensors across any axis can be reduced to\n  // a concatenation of two-dimensional tensors across the axis 1 by first\n  // partitioning the axes of the original tensors into those less than the\n  // axis to be concatenated and the rest. Then reshape the tensors\n  // into a two-dimensional tensor by collapsing these two sets of axes and\n  // concatenate the resulting matrices across the axis 1, finally reshaping\n  // the result to have the proper shape.\n\n\n  var inputs2D = $inputs.map(function (t) {\n    var innerSize = util.sizeFromShape(t.shape.slice($axis));\n    var shape = [-1, innerSize];\n    return reshape({\n      inputs: {\n        x: t\n      },\n      backend: backend,\n      attrs: {\n        shape: shape\n      }\n    });\n  });\n  var inputsValShapes = inputs2D.map(function (t) {\n    return {\n      vals: backend.data.get(t.dataId).values,\n      shape: t.shape\n    };\n  }); // Concats 2d tensors along axis=1.\n\n  outShape = backend_util.computeOutShape(inputs2D.map(function (t) {\n    return t.shape;\n  }), 1\n  /* axis */\n  );\n  var simplyConcat = inputs2D[0].shape[0] === 1;\n  var outVals = concatImpl(inputsValShapes, outShape, inputs[0].dtype, simplyConcat);\n  var finalOutShape = backend_util.computeOutShape($inputs.map(function (t) {\n    return t.shape;\n  }), $axis);\n  var outInfo = backend.makeTensorInfo(finalOutShape, inputs[0].dtype, outVals);\n  inputs2D.forEach(function (t) {\n    return backend.disposeIntermediateTensorInfo(t);\n  });\n  return outInfo;\n}\nexport var concatConfig = {\n  kernelName: Concat,\n  backendName: 'cpu',\n  kernelFunc: concat\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Conv2D, TensorBuffer, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nexport function conv2D(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x,\n      filter = inputs.filter;\n  var strides = attrs.strides,\n      pad = attrs.pad,\n      dataFormat = attrs.dataFormat,\n      dilations = attrs.dilations,\n      dimRoundingMode = attrs.dimRoundingMode;\n  assertNotComplex([x, filter], 'conv2d');\n  var $dataFormat = backend_util.convertConv2DDataFormat(dataFormat);\n  var convInfo = backend_util.computeConv2DInfo(x.shape, filter.shape, strides, dilations, pad, dimRoundingMode, false\n  /* depthwise */\n  , $dataFormat);\n  var filterHeight = convInfo.filterHeight;\n  var filterWidth = convInfo.filterWidth;\n  var dilationHeight = convInfo.dilationHeight;\n  var dilationWidth = convInfo.dilationWidth;\n  var padLeft = convInfo.padInfo.left;\n  var padTop = convInfo.padInfo.top;\n  var isChannelsLast = convInfo.dataFormat === 'channelsLast';\n  var y = new TensorBuffer(convInfo.outShape, x.dtype);\n  var xStrides = util.computeStrides(x.shape);\n  var filterStrides = util.computeStrides(filter.shape);\n  var xBatchStride = xStrides[0];\n  var xRowStride = isChannelsLast ? xStrides[1] : xStrides[2];\n  var xColStride = isChannelsLast ? xStrides[2] : 1;\n  var xChannelStride = isChannelsLast ? 1 : xStrides[1];\n  var yBatchStride = y.strides[0];\n  var yRowStride = isChannelsLast ? y.strides[1] : y.strides[2];\n  var yColStride = isChannelsLast ? y.strides[2] : 1;\n  var yChannelStride = isChannelsLast ? 1 : y.strides[1];\n  var xVals = backend.data.get(x.dataId).values;\n  var wVals = backend.data.get(filter.dataId).values;\n  var yVals = y.values;\n\n  for (var b = 0; b < convInfo.batchSize; ++b) {\n    var xOffset1 = b * xBatchStride;\n    var yOffset1 = b * yBatchStride;\n\n    for (var yR = 0; yR < convInfo.outHeight; ++yR) {\n      var yOffset2 = yOffset1 + yR * yRowStride;\n      var xRCorner = yR * convInfo.strideHeight - padTop;\n\n      for (var wR = 0; wR < filterHeight; ++wR) {\n        var xR = xRCorner + wR * dilationHeight;\n\n        if (xR < 0 || xR >= convInfo.inHeight) {\n          continue;\n        }\n\n        var wOffset1 = wR * filterStrides[0];\n        var xOffset2 = xOffset1 + xR * xRowStride;\n\n        for (var yC = 0; yC < convInfo.outWidth; ++yC) {\n          var yOffset3 = yOffset2 + yC * yColStride;\n          var xCCorner = yC * convInfo.strideWidth - padLeft;\n\n          for (var wC = 0; wC < filterWidth; ++wC) {\n            var xC = xCCorner + wC * dilationWidth;\n\n            if (xC < 0 || xC >= convInfo.inWidth) {\n              continue;\n            }\n\n            var wOffset2 = wOffset1 + wC * filterStrides[1];\n            var xOffset3 = xOffset2 + xC * xColStride;\n            var wOffset3 = wOffset2;\n\n            for (var d1 = 0; d1 < convInfo.inChannels; ++d1) {\n              var xVal = xVals[xOffset3 + d1 * xChannelStride];\n\n              for (var d2 = 0; d2 < convInfo.outChannels; ++d2) {\n                yVals[yOffset3 + d2 * yChannelStride] += xVal * wVals[wOffset3 + d2];\n              }\n\n              wOffset3 += convInfo.outChannels;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  return backend.makeTensorInfo(y.shape, y.dtype, yVals);\n}\nexport var conv2DConfig = {\n  kernelName: Conv2D,\n  backendName: 'cpu',\n  kernelFunc: conv2D\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Conv2DBackpropFilter, TensorBuffer } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nexport function conv2DBackpropFilter(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x,\n      dy = inputs.dy;\n  var strides = attrs.strides,\n      pad = attrs.pad,\n      dataFormat = attrs.dataFormat,\n      dimRoundingMode = attrs.dimRoundingMode,\n      filterShape = attrs.filterShape;\n  assertNotComplex([x, dy], 'conv2dBackpropFilter');\n  var $dataFormat = backend_util.convertConv2DDataFormat(dataFormat);\n  var convInfo = backend_util.computeConv2DInfo(x.shape, filterShape, strides, 1\n  /* dilations */\n  , pad, dimRoundingMode, false\n  /* depthwise */\n  , $dataFormat);\n  var strideHeight = convInfo.strideHeight,\n      strideWidth = convInfo.strideWidth,\n      filterHeight = convInfo.filterHeight,\n      filterWidth = convInfo.filterWidth;\n  var isChannelsLast = convInfo.dataFormat === 'channelsLast';\n  var dW = new TensorBuffer(convInfo.filterShape, 'float32');\n  var leftPad = convInfo.padInfo.left;\n  var topPad = convInfo.padInfo.top;\n  var xVals = backend.data.get(x.dataId).values;\n  var dyVals = backend.data.get(dy.dataId).values;\n  var xBuf = new TensorBuffer(x.shape, x.dtype, xVals);\n  var dyBuf = new TensorBuffer(dy.shape, dy.dtype, dyVals);\n\n  for (var wR = 0; wR < filterHeight; ++wR) {\n    var yRMin = Math.max(0, Math.ceil((topPad - wR) / strideHeight));\n    var yRMax = Math.min(convInfo.outHeight, (convInfo.inHeight + topPad - wR) / strideHeight);\n\n    for (var wC = 0; wC < filterWidth; ++wC) {\n      var yCMin = Math.max(0, Math.ceil((leftPad - wC) / strideWidth));\n      var yCMax = Math.min(convInfo.outWidth, (convInfo.inWidth + leftPad - wC) / strideWidth);\n\n      for (var d1 = 0; d1 < convInfo.inChannels; ++d1) {\n        for (var d2 = 0; d2 < convInfo.outChannels; ++d2) {\n          var dotProd = 0;\n\n          for (var b = 0; b < convInfo.batchSize; ++b) {\n            for (var yR = yRMin; yR < yRMax; ++yR) {\n              var xR = wR + yR * strideHeight - topPad;\n\n              for (var yC = yCMin; yC < yCMax; ++yC) {\n                var xC = wC + yC * strideWidth - leftPad;\n\n                if (isChannelsLast) {\n                  dotProd += xBuf.get(b, xR, xC, d1) * dyBuf.get(b, yR, yC, d2);\n                } else {\n                  dotProd += xBuf.get(b, d1, xR, xC) * dyBuf.get(b, d2, yR, yC);\n                }\n              }\n            }\n          }\n\n          dW.set(dotProd, wR, wC, d1, d2);\n        }\n      }\n    }\n  }\n\n  return backend.makeTensorInfo(dW.shape, dW.dtype, dW.values);\n}\nexport var conv2DBackpropFilterConfig = {\n  kernelName: Conv2DBackpropFilter,\n  backendName: 'cpu',\n  kernelFunc: conv2DBackpropFilter\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Conv2DBackpropInput, TensorBuffer, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nexport function conv2DBackpropInput(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var dy = inputs.dy,\n      filter = inputs.filter;\n  var inputShape = attrs.inputShape,\n      strides = attrs.strides,\n      pad = attrs.pad,\n      dataFormat = attrs.dataFormat,\n      dimRoundingMode = attrs.dimRoundingMode;\n  assertNotComplex([dy, filter], 'conv2dBackpropInput');\n  var filterStrides = util.computeStrides(filter.shape);\n  var dyStrides = util.computeStrides(dy.shape);\n  var $dataFormat = backend_util.convertConv2DDataFormat(dataFormat);\n  var convInfo = backend_util.computeConv2DInfo(inputShape, filter.shape, strides, 1\n  /* dilations */\n  , pad, dimRoundingMode, false, $dataFormat);\n  var dx = new TensorBuffer(convInfo.inShape, 'float32');\n  var dxValues = dx.values;\n  var dyValues = backend.data.get(dy.dataId).values;\n  var fltValues = backend.data.get(filter.dataId).values;\n\n  var _filterStrides = _slicedToArray(filterStrides, 3),\n      fltS0 = _filterStrides[0],\n      fltS1 = _filterStrides[1],\n      fltS2 = _filterStrides[2];\n\n  var batchSize = convInfo.batchSize,\n      filterHeight = convInfo.filterHeight,\n      filterWidth = convInfo.filterWidth,\n      inChannels = convInfo.inChannels,\n      inHeight = convInfo.inHeight,\n      inWidth = convInfo.inWidth,\n      outChannels = convInfo.outChannels,\n      outHeight = convInfo.outHeight,\n      outWidth = convInfo.outWidth,\n      strideHeight = convInfo.strideHeight,\n      strideWidth = convInfo.strideWidth;\n  $dataFormat = convInfo.dataFormat;\n  var topPad = filterHeight - 1 - convInfo.padInfo.top;\n  var leftPad = filterWidth - 1 - convInfo.padInfo.left;\n  var isChannelsLast = $dataFormat === 'channelsLast';\n  var xBatchStride = dx.strides[0];\n  var xRowStride = isChannelsLast ? dx.strides[1] : dx.strides[2];\n  var xColStride = isChannelsLast ? dx.strides[2] : 1;\n  var xChannelStride = isChannelsLast ? 1 : dx.strides[1];\n  var yBatchStride = dyStrides[0];\n  var yRowStride = isChannelsLast ? dyStrides[1] : dyStrides[2];\n  var yColStride = isChannelsLast ? dyStrides[2] : 1;\n  var yChannelStride = isChannelsLast ? 1 : dyStrides[1];\n\n  for (var b = 0; b < batchSize; ++b) {\n    for (var d1 = 0; d1 < inChannels; ++d1) {\n      for (var xR = 0; xR < inHeight; ++xR) {\n        var xRCorner = xR - topPad;\n        var xRMin = Math.max(0, Math.ceil(xRCorner / strideHeight));\n        var yRMax = Math.min(outHeight, (filterHeight + xRCorner) / strideHeight);\n\n        for (var xC = 0; xC < inWidth; ++xC) {\n          var xCCorner = xC - leftPad;\n          var xCMin = Math.max(0, Math.ceil(xCCorner / strideWidth));\n          var yCMax = Math.min(outWidth, (filterWidth + xCCorner) / strideWidth);\n          var dotProd = 0;\n\n          for (var yR = xRMin; yR < yRMax; ++yR) {\n            var wR = yR * strideHeight - xRCorner;\n\n            for (var yC = xCMin; yC < yCMax; ++yC) {\n              var wC = yC * strideWidth - xCCorner;\n              var dyOffset = yBatchStride * b + yRowStride * yR + yColStride * yC;\n              var fltOffset = fltS0 * (filterHeight - 1 - wR) + fltS1 * (filterWidth - 1 - wC) + fltS2 * d1;\n\n              for (var d2 = 0; d2 < outChannels; ++d2) {\n                var pixel = dyValues[dyOffset + yChannelStride * d2];\n                var weight = fltValues[fltOffset + d2];\n                dotProd += pixel * weight;\n              }\n            }\n          }\n\n          var dxOffset = xBatchStride * b + xRowStride * xR + xColStride * xC + xChannelStride * d1;\n          dxValues[dxOffset] = dotProd;\n        }\n      }\n    }\n  }\n\n  return backend.makeTensorInfo(dx.shape, dx.dtype, dx.values);\n}\nexport var conv2DBackpropInputConfig = {\n  kernelName: Conv2DBackpropInput,\n  backendName: 'cpu',\n  kernelFunc: conv2DBackpropInput\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Conv3D, TensorBuffer, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nexport function conv3D(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x,\n      filter = inputs.filter;\n  var strides = attrs.strides,\n      pad = attrs.pad,\n      dilations = attrs.dilations;\n  assertNotComplex([x, filter], 'conv3d');\n  var convInfo = backend_util.computeConv3DInfo(x.shape, filter.shape, strides, dilations, pad);\n  var filterDepth = convInfo.filterDepth,\n      filterHeight = convInfo.filterHeight,\n      filterWidth = convInfo.filterWidth,\n      dilationDepth = convInfo.dilationDepth,\n      dilationHeight = convInfo.dilationHeight,\n      dilationWidth = convInfo.dilationWidth,\n      padInfo = convInfo.padInfo;\n  var padFront = padInfo.front;\n  var padLeft = padInfo.left;\n  var padTop = padInfo.top;\n  var y = new TensorBuffer(convInfo.outShape, x.dtype);\n  var xVals = backend.data.get(x.dataId).values;\n  var wVals = backend.data.get(filter.dataId).values;\n  var yVals = y.values;\n  var xStrides = util.computeStrides(x.shape);\n  var filterStrides = util.computeStrides(filter.shape);\n\n  for (var b = 0; b < convInfo.batchSize; ++b) {\n    var xOffset1 = b * xStrides[0];\n    var yOffset1 = b * y.strides[0];\n\n    for (var yF = 0; yF < convInfo.outDepth; ++yF) {\n      var yOffset2 = yOffset1 + yF * y.strides[1];\n      var xFCorner = yF * convInfo.strideDepth - padFront;\n\n      for (var wF = 0; wF < filterDepth; ++wF) {\n        var xF = xFCorner + wF * dilationDepth;\n\n        if (xF < 0 || xF >= convInfo.inDepth) {\n          continue;\n        }\n\n        var wOffset1 = wF * filterStrides[0];\n        var xOffset2 = xOffset1 + xF * xStrides[1];\n\n        for (var yR = 0; yR < convInfo.outHeight; ++yR) {\n          var yOffset3 = yOffset2 + yR * y.strides[2];\n          var xRCorner = yR * convInfo.strideHeight - padTop;\n\n          for (var wR = 0; wR < filterHeight; ++wR) {\n            var xR = xRCorner + wR * dilationHeight;\n\n            if (xR < 0 || xR >= convInfo.inHeight) {\n              continue;\n            }\n\n            var wOffset2 = wOffset1 + wR * filterStrides[1];\n            var xOffset3 = xOffset2 + xR * xStrides[2];\n\n            for (var yC = 0; yC < convInfo.outWidth; ++yC) {\n              var yOffset4 = yOffset3 + yC * convInfo.outChannels;\n              var xCCorner = yC * convInfo.strideWidth - padLeft;\n\n              for (var wC = 0; wC < filterWidth; ++wC) {\n                var xC = xCCorner + wC * dilationWidth;\n\n                if (xC < 0 || xC >= convInfo.inWidth) {\n                  continue;\n                }\n\n                var wOffset3 = wOffset2 + wC * filterStrides[2];\n                var xOffset4 = xOffset3 + xC * convInfo.inChannels;\n                var wOffset4 = wOffset3;\n\n                for (var d1 = 0; d1 < convInfo.inChannels; ++d1) {\n                  var xVal = xVals[xOffset4 + d1];\n\n                  for (var d2 = 0; d2 < convInfo.outChannels; ++d2) {\n                    yVals[yOffset4 + d2] += xVal * wVals[wOffset4 + d2];\n                  }\n\n                  wOffset4 += convInfo.outChannels;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  return backend.makeTensorInfo(y.shape, y.dtype, y.values);\n}\nexport var conv3DConfig = {\n  kernelName: Conv3D,\n  backendName: 'cpu',\n  kernelFunc: conv3D\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Conv3DBackpropFilterV2, TensorBuffer, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nexport function conv3DBackpropFilterV2(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x,\n      dy = inputs.dy;\n  var strides = attrs.strides,\n      pad = attrs.pad,\n      filterShape = attrs.filterShape;\n  assertNotComplex([x, dy], 'conv3dBackpropFilterV2');\n  var xStrides = util.computeStrides(x.shape);\n  var dyStrides = util.computeStrides(dy.shape);\n  var convInfo = backend_util.computeConv3DInfo(x.shape, filterShape, strides, 1\n  /* dilations */\n  , pad);\n  var strideDepth = convInfo.strideDepth;\n  var strideHeight = convInfo.strideHeight;\n  var strideWidth = convInfo.strideWidth;\n  var filterDepth = convInfo.filterDepth;\n  var filterHeight = convInfo.filterHeight;\n  var filterWidth = convInfo.filterWidth;\n  var dw = new TensorBuffer(convInfo.filterShape, 'float32');\n  var dwValues = dw.values;\n\n  var _dw$strides = _slicedToArray(dw.strides, 4),\n      dwS0 = _dw$strides[0],\n      dwS1 = _dw$strides[1],\n      dwS2 = _dw$strides[2],\n      dwS3 = _dw$strides[3];\n\n  var dyValues = backend.data.get(dy.dataId).values;\n\n  var _dyStrides = _slicedToArray(dyStrides, 4),\n      dyS0 = _dyStrides[0],\n      dyS1 = _dyStrides[1],\n      dyS2 = _dyStrides[2],\n      dyS3 = _dyStrides[3];\n\n  var xValues = backend.data.get(x.dataId).values;\n\n  var _xStrides = _slicedToArray(xStrides, 4),\n      xS0 = _xStrides[0],\n      xS1 = _xStrides[1],\n      xS2 = _xStrides[2],\n      xS3 = _xStrides[3];\n\n  var frontPad = convInfo.padInfo.front;\n  var leftPad = convInfo.padInfo.left;\n  var topPad = convInfo.padInfo.top;\n\n  for (var wF = 0; wF < filterDepth; ++wF) {\n    var yFMin = Math.max(0, Math.ceil((frontPad - wF) / strideDepth));\n    var yFMax = Math.min(convInfo.outDepth, (convInfo.inDepth + frontPad - wF) / strideDepth);\n    var wOffset1 = wF * dwS0;\n\n    for (var wR = 0; wR < filterHeight; ++wR) {\n      var yRMin = Math.max(0, Math.ceil((topPad - wR) / strideHeight));\n      var yRMax = Math.min(convInfo.outHeight, (convInfo.inHeight + topPad - wR) / strideHeight);\n      var wOffset2 = wR * dwS1 + wOffset1;\n\n      for (var wC = 0; wC < filterWidth; ++wC) {\n        var yCMin = Math.max(0, Math.ceil((leftPad - wC) / strideWidth));\n        var yCMax = Math.min(convInfo.outWidth, (convInfo.inWidth + leftPad - wC) / strideWidth);\n        var wOffset3 = wC * dwS2 + wOffset2;\n\n        for (var d1 = 0; d1 < convInfo.inChannels; ++d1) {\n          var wOffset4 = d1 * dwS3 + wOffset3;\n\n          for (var d2 = 0; d2 < convInfo.outChannels; ++d2) {\n            var dotProd = 0;\n\n            for (var b = 0; b < convInfo.batchSize; ++b) {\n              var xOffset1 = b * xS0;\n              var yOffset1 = b * dyS0;\n\n              for (var yF = yFMin; yF < yFMax; ++yF) {\n                var xF = wF + yF * strideDepth - frontPad;\n                var xOffset2 = xF * xS1 + xOffset1;\n                var yOffset2 = yF * dyS1 + yOffset1;\n\n                for (var yR = yRMin; yR < yRMax; ++yR) {\n                  var xR = wR + yR * strideHeight - topPad;\n                  var xOffset3 = xR * xS2 + xOffset2;\n                  var yOffset3 = yR * dyS2 + yOffset2;\n\n                  for (var yC = yCMin; yC < yCMax; ++yC) {\n                    var xC = wC + yC * strideWidth - leftPad;\n                    var xOffset4 = xC * xS3 + xOffset3;\n                    var yOffset4 = yC * dyS3 + yOffset3;\n                    dotProd += xValues[xOffset4 + d1] * dyValues[yOffset4 + d2];\n                  }\n                }\n              }\n            }\n\n            dwValues[wOffset4 + d2] = dotProd;\n          }\n        }\n      }\n    }\n  }\n\n  return backend.makeTensorInfo(dw.shape, dw.dtype, dw.values);\n}\nexport var conv3DBackpropFilterV2Config = {\n  kernelName: Conv3DBackpropFilterV2,\n  backendName: 'cpu',\n  kernelFunc: conv3DBackpropFilterV2\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Conv3DBackpropInputV2, TensorBuffer, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nexport function conv3DBackpropInputV2(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var dy = inputs.dy,\n      filter = inputs.filter;\n  var pad = attrs.pad,\n      strides = attrs.strides,\n      inputShape = attrs.inputShape;\n  assertNotComplex([dy], 'conv3dBackpropInputV2');\n  var dyStrides = util.computeStrides(dy.shape);\n  var filterStrides = util.computeStrides(filter.shape);\n  var convInfo = backend_util.computeConv3DInfo(inputShape, filter.shape, strides, 1\n  /* dilations */\n  , pad);\n  var dx = new TensorBuffer(convInfo.inShape, 'float32');\n  var dxValues = dx.values;\n\n  var _dx$strides = _slicedToArray(dx.strides, 4),\n      dxS0 = _dx$strides[0],\n      dxS1 = _dx$strides[1],\n      dxS2 = _dx$strides[2],\n      dxS3 = _dx$strides[3];\n\n  var dyValues = backend.data.get(dy.dataId).values;\n\n  var _dyStrides = _slicedToArray(dyStrides, 4),\n      dyS0 = _dyStrides[0],\n      dyS1 = _dyStrides[1],\n      dyS2 = _dyStrides[2],\n      dyS3 = _dyStrides[3];\n\n  var fltValues = backend.data.get(filter.dataId).values;\n\n  var _filterStrides = _slicedToArray(filterStrides, 4),\n      fltS0 = _filterStrides[0],\n      fltS1 = _filterStrides[1],\n      fltS2 = _filterStrides[2],\n      fltS3 = _filterStrides[3];\n\n  var batchSize = convInfo.batchSize,\n      filterDepth = convInfo.filterDepth,\n      filterHeight = convInfo.filterHeight,\n      filterWidth = convInfo.filterWidth,\n      inChannels = convInfo.inChannels,\n      inDepth = convInfo.inDepth,\n      inHeight = convInfo.inHeight,\n      inWidth = convInfo.inWidth,\n      outChannels = convInfo.outChannels,\n      outDepth = convInfo.outDepth,\n      outHeight = convInfo.outHeight,\n      outWidth = convInfo.outWidth,\n      strideDepth = convInfo.strideDepth,\n      strideHeight = convInfo.strideHeight,\n      strideWidth = convInfo.strideWidth;\n  var frontPad = filterDepth - 1 - convInfo.padInfo.front;\n  var topPad = filterHeight - 1 - convInfo.padInfo.top;\n  var leftPad = filterWidth - 1 - convInfo.padInfo.left;\n\n  for (var b = 0; b < batchSize; ++b) {\n    for (var d1 = 0; d1 < inChannels; ++d1) {\n      // Frames of depth\n      for (var xF = 0; xF < inDepth; ++xF) {\n        var xFCorner = xF - frontPad;\n        var xFMin = Math.max(0, Math.ceil(xFCorner / strideDepth));\n        var yFMax = Math.min(outDepth, (filterDepth + xFCorner) / strideDepth); // Rows as per standard 2d matrix notation\n\n        for (var xR = 0; xR < inHeight; ++xR) {\n          var xRCorner = xR - topPad;\n          var xRMin = Math.max(0, Math.ceil(xRCorner / strideHeight));\n          var yRMax = Math.min(outHeight, (filterHeight + xRCorner) / strideHeight); // Columns as per standard 2d matrix notation\n\n          for (var xC = 0; xC < inWidth; ++xC) {\n            var xCCorner = xC - leftPad;\n            var xCMin = Math.max(0, Math.ceil(xCCorner / strideWidth));\n            var yCMax = Math.min(outWidth, (filterWidth + xCCorner) / strideWidth);\n            var dotProd = 0;\n\n            for (var yF = xFMin; yF < yFMax; ++yF) {\n              var wF = yF * strideDepth - xFCorner;\n\n              for (var yR = xRMin; yR < yRMax; ++yR) {\n                var wR = yR * strideHeight - xRCorner;\n\n                for (var yC = xCMin; yC < yCMax; ++yC) {\n                  var wC = yC * strideWidth - xCCorner;\n                  var dyOffset = dyS0 * b + dyS1 * yF + dyS2 * yR + dyS3 * yC;\n                  var fltOffset = fltS0 * (filterDepth - 1 - wF) + fltS1 * (filterHeight - 1 - wR) + fltS2 * (filterWidth - 1 - wC) + fltS3 * d1;\n\n                  for (var d2 = 0; d2 < outChannels; ++d2) {\n                    var pixel = dyValues[dyOffset + d2];\n                    var weight = fltValues[fltOffset + d2];\n                    dotProd += pixel * weight;\n                  }\n                }\n              }\n            }\n\n            dxValues[dxS0 * b + dxS1 * xF + dxS2 * xR + dxS3 * xC + d1] = dotProd;\n          }\n        }\n      }\n    }\n  }\n\n  return backend.makeTensorInfo(dx.shape, dx.dtype, dx.values);\n}\nexport var conv3DBackpropInputV2Config = {\n  kernelName: Conv3DBackpropInputV2,\n  backendName: 'cpu',\n  kernelFunc: conv3DBackpropInputV2\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Cos } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../utils/unary_utils';\nexport var cos = unaryKernelFunc(Cos, function (xi) {\n  return Math.cos(xi);\n});\nexport var cosConfig = {\n  kernelName: Cos,\n  backendName: 'cpu',\n  kernelFunc: cos\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Cosh } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../utils/unary_utils';\nexport var cosh = unaryKernelFunc(Cosh, function (xi) {\n  return Math.cosh(xi);\n});\nexport var coshConfig = {\n  kernelName: Cosh,\n  backendName: 'cpu',\n  kernelFunc: cosh\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { buffer, CropAndResize, util } from '@tensorflow/tfjs-core';\nexport function cropAndResize(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var image = inputs.image,\n      boxes = inputs.boxes,\n      boxInd = inputs.boxInd;\n  var cropSize = attrs.cropSize,\n      method = attrs.method,\n      extrapolationValue = attrs.extrapolationValue;\n\n  var _image$shape = _slicedToArray(image.shape, 4),\n      batch = _image$shape[0],\n      imageHeight = _image$shape[1],\n      imageWidth = _image$shape[2],\n      numChannels = _image$shape[3];\n\n  var numBoxes = boxes.shape[0];\n\n  var _cropSize = _slicedToArray(cropSize, 2),\n      cropHeight = _cropSize[0],\n      cropWidth = _cropSize[1];\n\n  var output = buffer([numBoxes, cropHeight, cropWidth, numChannels], 'float32');\n  var boxVals = backend.data.get(boxes.dataId).values;\n  var boxIndVals = backend.data.get(boxInd.dataId).values;\n  var imageVals = backend.data.get(image.dataId).values;\n  var inStride = util.computeStrides(image.shape); // to calculate flat indexes into image\n\n  var outStride = util.computeStrides(output.shape); // to calculate flat indexes into output\n  // Reference implementation\n  // tslint:disable-next-line:max-line-length\n  // https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/crop_and_resize_op.cc\n\n  for (var b = 0; b < numBoxes; b++) {\n    var startInd = b * 4;\n    var y1 = boxVals[startInd];\n    var x1 = boxVals[startInd + 1];\n    var y2 = boxVals[startInd + 2];\n    var x2 = boxVals[startInd + 3];\n    var bInd = boxIndVals[b];\n\n    if (bInd >= batch) {\n      continue;\n    }\n\n    var heightScale = cropHeight > 1 ? (y2 - y1) * (imageHeight - 1) / (cropHeight - 1) : 0;\n    var widthScale = cropWidth > 1 ? (x2 - x1) * (imageWidth - 1) / (cropWidth - 1) : 0;\n\n    for (var y = 0; y < cropHeight; y++) {\n      var yInd = cropHeight > 1 ? y1 * (imageHeight - 1) + y * heightScale : 0.5 * (y1 + y2) * (imageHeight - 1);\n\n      if (yInd < 0 || yInd > imageHeight - 1) {\n        for (var x = 0; x < cropWidth; x++) {\n          for (var c = 0; c < numChannels; c++) {\n            var ind = c + x * outStride[2] + y * outStride[1] + b * outStride[0];\n            output.values[ind] = extrapolationValue;\n          }\n        }\n\n        continue;\n      }\n\n      if (method === 'bilinear') {\n        var topInd = Math.floor(yInd);\n        var bottomInd = Math.ceil(yInd);\n        var yLerp = yInd - topInd;\n\n        for (var _x = 0; _x < cropWidth; _x++) {\n          var xInd = cropWidth > 1 ? x1 * (imageWidth - 1) + _x * widthScale : 0.5 * (x1 + x2) * (imageWidth - 1);\n\n          if (xInd < 0 || xInd > imageWidth - 1) {\n            for (var _c = 0; _c < numChannels; _c++) {\n              var _ind = _c + _x * outStride[2] + y * outStride[1] + b * outStride[0];\n\n              output.values[_ind] = extrapolationValue;\n            }\n\n            continue;\n          }\n\n          var leftInd = Math.floor(xInd);\n          var rightInd = Math.ceil(xInd);\n          var xLerp = xInd - leftInd;\n\n          for (var _c2 = 0; _c2 < numChannels; _c2++) {\n            var _ind2 = _c2 + leftInd * inStride[2] + topInd * inStride[1] + bInd * inStride[0];\n\n            var topLeft = imageVals[_ind2];\n            _ind2 = _c2 + rightInd * inStride[2] + topInd * inStride[1] + bInd * inStride[0];\n            var topRight = imageVals[_ind2];\n            _ind2 = _c2 + leftInd * inStride[2] + bottomInd * inStride[1] + bInd * inStride[0];\n            var bottomLeft = imageVals[_ind2];\n            _ind2 = _c2 + rightInd * inStride[2] + bottomInd * inStride[1] + bInd * inStride[0];\n            var bottomRight = imageVals[_ind2];\n            var top = topLeft + (topRight - topLeft) * xLerp;\n            var bottom = bottomLeft + (bottomRight - bottomLeft) * xLerp;\n            _ind2 = _c2 + _x * outStride[2] + y * outStride[1] + b * outStride[0];\n            output.values[_ind2] = top + (bottom - top) * yLerp;\n          }\n        }\n      } else {\n        // method == \"nearest\"\n        for (var _x2 = 0; _x2 < cropWidth; ++_x2) {\n          var _xInd = cropWidth > 1 ? x1 * (imageWidth - 1) + _x2 * widthScale : 0.5 * (x1 + x2) * (imageWidth - 1);\n\n          if (_xInd < 0 || _xInd > imageWidth - 1) {\n            for (var _c3 = 0; _c3 < numChannels; _c3++) {\n              var _ind3 = _c3 + _x2 * outStride[2] + y * outStride[1] + b * outStride[0];\n\n              output.values[_ind3] = extrapolationValue;\n            }\n\n            continue;\n          }\n\n          var closestX = Math.round(_xInd);\n          var closestY = Math.round(yInd);\n\n          for (var _c4 = 0; _c4 < numChannels; _c4++) {\n            var inInd = _c4 + closestX * inStride[2] + closestY * inStride[1] + bInd * inStride[0];\n            var outInd = _c4 + _x2 * outStride[2] + y * outStride[1] + b * outStride[0];\n            output.values[outInd] = imageVals[inInd];\n          }\n        }\n      }\n    }\n  }\n\n  return backend.makeTensorInfo(output.shape, output.dtype, output.values);\n}\nexport var cropAndResizeConfig = {\n  kernelName: CropAndResize,\n  backendName: 'cpu',\n  kernelFunc: cropAndResize\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Cumsum, upcastType, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nimport { transpose } from './Transpose';\nexport function cumsum(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  var axis = attrs.axis,\n      exclusive = attrs.exclusive,\n      reverse = attrs.reverse;\n  assertNotComplex(x, 'cumsum');\n  var permutation = backend_util.getAxesPermutation([axis], x.shape.length);\n  var $x = x;\n\n  if (permutation != null) {\n    $x = transpose({\n      inputs: {\n        x: x\n      },\n      backend: backend,\n      attrs: {\n        perm: permutation\n      }\n    });\n  }\n\n  var permutedAxis = backend_util.getInnerMostAxes(1, x.shape.length)[0];\n\n  if (permutedAxis !== $x.shape.length - 1) {\n    throw new Error(\"backend.cumsum in CPU expects an inner-most \" + \"axis=\".concat($x.shape.length - 1, \" but got axis=\").concat(permutedAxis));\n  }\n\n  var resultDtype = upcastType($x.dtype, 'int32');\n  var vals = util.makeZerosTypedArray(util.sizeFromShape($x.shape), resultDtype);\n  var aVals = backend.data.get($x.dataId).values;\n  var finalDim = $x.shape[$x.shape.length - 1];\n  var indexAdjuster = reverse ? function (i, j) {\n    return i + finalDim - j - 1;\n  } : function (i, j) {\n    return i + j;\n  };\n\n  for (var i = 0; i < aVals.length; i += finalDim) {\n    for (var j = 0; j < finalDim; j++) {\n      var idx = indexAdjuster(i, j);\n\n      if (j === 0) {\n        vals[idx] = exclusive ? 0 : aVals[idx];\n      } else {\n        var prevIdx = indexAdjuster(i, j - 1);\n        vals[idx] = exclusive ? aVals[prevIdx] + vals[prevIdx] : aVals[idx] + vals[prevIdx];\n      }\n    }\n  }\n\n  var result = backend.makeTensorInfo($x.shape, resultDtype, vals);\n\n  if (permutation != null) {\n    var reversePermutation = backend_util.getUndoAxesPermutation(permutation);\n    var reverseTransposedResult = transpose({\n      inputs: {\n        x: result\n      },\n      backend: backend,\n      attrs: {\n        perm: reversePermutation\n      }\n    });\n    backend.disposeIntermediateTensorInfo(result);\n    backend.disposeIntermediateTensorInfo($x);\n    return reverseTransposedResult;\n  }\n\n  return result;\n}\nexport var cumsumConfig = {\n  kernelName: Cumsum,\n  backendName: 'cpu',\n  kernelFunc: cumsum\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { DenseBincount } from '@tensorflow/tfjs-core';\nimport { bincountImpl, bincountReduceImpl } from './Bincount_impl';\nexport function denseBincount(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x,\n      weights = inputs.weights;\n  var size = attrs.size,\n      binaryOutput = attrs.binaryOutput;\n\n  if (x.shape.length === 1) {\n    var xVals = backend.data.get(x.dataId).values;\n    var weightsVals = backend.data.get(weights.dataId).values;\n    var outVals = bincountImpl(xVals, weightsVals, weights.dtype, weights.shape, size);\n    return backend.makeTensorInfo([size], weights.dtype, outVals);\n  } else if (x.shape.length === 2) {\n    var xBuf = backend.bufferSync(x);\n    var weightsBuf = backend.bufferSync(weights);\n    var outBuf = bincountReduceImpl(xBuf, weightsBuf, size, binaryOutput);\n    return backend.makeTensorInfo(outBuf.shape, weights.dtype, outBuf.values);\n  }\n\n  throw new Error(\"Error in denseBincount: input must be at most rank 2, but got rank\" + \"\".concat(x.shape.length, \".\"));\n}\nexport var denseBincountConfig = {\n  kernelName: DenseBincount,\n  backendName: 'cpu',\n  kernelFunc: denseBincount\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { DepthToSpace, util } from '@tensorflow/tfjs-core';\nexport function depthToSpace(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  var blockSize = attrs.blockSize,\n      dataFormat = attrs.dataFormat;\n  util.assert(dataFormat === 'NHWC', function () {\n    return \"Only NHWC dataFormat supported on CPU for depthToSpace. Got \".concat(dataFormat);\n  });\n  util.assert(blockSize > 1, function () {\n    return \"blockSize should be > 1 for depthToSpace, but was: \".concat(blockSize);\n  });\n  var batchSize = x.shape[0];\n  var inputHeight = x.shape[1];\n  var inputWidth = x.shape[2];\n  var inputDepth = x.shape[3];\n  var outputHeight = inputHeight * blockSize;\n  var outputWidth = inputWidth * blockSize;\n  var outputDepth = inputDepth / (blockSize * blockSize);\n  var xValues = backend.data.get(x.dataId).values;\n  var result = new Float32Array(batchSize * outputHeight * outputWidth * outputDepth);\n  var outputIdx = 0;\n\n  for (var b = 0; b < batchSize; ++b) {\n    for (var h = 0; h < outputHeight; ++h) {\n      var inH = Math.floor(h / blockSize);\n      var offsetH = h % blockSize;\n\n      for (var w = 0; w < outputWidth; ++w) {\n        var inW = Math.floor(w / blockSize);\n        var offsetW = w % blockSize;\n        var offsetD = (offsetH * blockSize + offsetW) * outputDepth;\n\n        for (var d = 0; d < outputDepth; ++d) {\n          var inD = d + offsetD;\n          var inputIdx = inD + inputDepth * (inW + inputWidth * (inH + inputHeight * b));\n          result[outputIdx++] = xValues[inputIdx];\n        }\n      }\n    }\n  }\n\n  return backend.makeTensorInfo([batchSize, outputHeight, outputWidth, outputDepth], x.dtype, result);\n}\nexport var depthToSpaceConfig = {\n  kernelName: DepthToSpace,\n  backendName: 'cpu',\n  kernelFunc: depthToSpace\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, DepthwiseConv2dNative, TensorBuffer, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nexport function depthwiseConv2dNative(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x,\n      filter = inputs.filter;\n  var strides = attrs.strides,\n      pad = attrs.pad,\n      dilations = attrs.dilations,\n      dimRoundingMode = attrs.dimRoundingMode;\n  assertNotComplex([x, filter], 'depthwiseConv2DNative');\n  var xStrides = util.computeStrides(x.shape);\n  var filterStrides = util.computeStrides(filter.shape);\n  var $dilations = dilations;\n\n  if ($dilations == null) {\n    $dilations = [1, 1];\n  }\n\n  util.assert(backend_util.eitherStridesOrDilationsAreOne(strides, $dilations), function () {\n    return 'Error in depthwiseConv2d: Either strides or dilations must be ' + \"1. Got strides \".concat(strides, \" and dilations '\").concat($dilations, \"'\");\n  });\n  var convInfo = backend_util.computeConv2DInfo(x.shape, filter.shape, strides, $dilations, pad, dimRoundingMode, true\n  /* depthwise */\n  );\n  var filterHeight = convInfo.filterHeight,\n      filterWidth = convInfo.filterWidth,\n      dilationHeight = convInfo.dilationHeight,\n      dilationWidth = convInfo.dilationWidth,\n      padInfo = convInfo.padInfo;\n  var padLeft = padInfo.left;\n  var padTop = padInfo.top;\n  var chMul = convInfo.outChannels / convInfo.inChannels;\n  var y = new TensorBuffer(convInfo.outShape, x.dtype);\n  var xVals = backend.data.get(x.dataId).values;\n  var wVals = backend.data.get(filter.dataId).values;\n  var yVals = y.values;\n\n  for (var b = 0; b < convInfo.batchSize; ++b) {\n    var xOffset1 = b * xStrides[0];\n    var yOffset1 = b * y.strides[0];\n\n    for (var yR = 0; yR < convInfo.outHeight; ++yR) {\n      var yOffset2 = yOffset1 + yR * y.strides[1];\n      var xRCorner = yR * convInfo.strideHeight - padLeft;\n\n      for (var wR = 0; wR < filterHeight; ++wR) {\n        var xR = xRCorner + wR * dilationHeight;\n\n        if (xR < 0 || xR >= convInfo.inHeight) {\n          continue;\n        }\n\n        var wOffset1 = wR * filterStrides[0];\n        var xOffset2 = xOffset1 + xR * xStrides[1];\n\n        for (var yC = 0; yC < convInfo.outWidth; ++yC) {\n          var yOffset3 = yOffset2 + yC * y.strides[2];\n          var xCCorner = yC * convInfo.strideWidth - padTop;\n\n          for (var wC = 0; wC < filterWidth; ++wC) {\n            var xC = xCCorner + wC * dilationWidth;\n\n            if (xC < 0 || xC >= convInfo.inWidth) {\n              continue;\n            }\n\n            var wOffset2 = wOffset1 + wC * filterStrides[1];\n            var xOffset3 = xOffset2 + xC * convInfo.inChannels;\n            var yOffset4 = yOffset3;\n            var wOffset3 = wOffset2;\n\n            for (var d1 = 0; d1 < convInfo.inChannels; ++d1) {\n              var xVal = xVals[xOffset3 + d1];\n\n              for (var q = 0; q < chMul; ++q) {\n                yVals[yOffset4 + q] += xVal * wVals[wOffset3 + q];\n              }\n\n              yOffset4 += chMul;\n              wOffset3 += chMul;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  return backend.makeTensorInfo(y.shape, y.dtype, y.values);\n}\nexport var depthwiseConv2dNativeConfig = {\n  kernelName: DepthwiseConv2dNative,\n  backendName: 'cpu',\n  kernelFunc: depthwiseConv2dNative\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, DepthwiseConv2dNativeBackpropFilter, TensorBuffer } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nexport function depthwiseConv2dNativeBackpropFilter(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x,\n      dy = inputs.dy;\n  var strides = attrs.strides,\n      dilations = attrs.dilations,\n      pad = attrs.pad,\n      dimRoundingMode = attrs.dimRoundingMode,\n      filterShape = attrs.filterShape;\n  assertNotComplex([x, dy], 'depthwiseConv2dNativeBackpropFilter');\n  var convInfo = backend_util.computeConv2DInfo(x.shape, filterShape, strides, dilations, pad, dimRoundingMode, true\n  /* depthwise */\n  );\n  var strideHeight = convInfo.strideHeight,\n      strideWidth = convInfo.strideWidth,\n      filterHeight = convInfo.filterHeight,\n      filterWidth = convInfo.filterWidth;\n  var dW = new TensorBuffer(convInfo.filterShape, 'float32');\n  var leftPad = convInfo.padInfo.left;\n  var topPad = convInfo.padInfo.top;\n  var chMul = convInfo.outChannels / convInfo.inChannels;\n  var xVals = backend.data.get(x.dataId).values;\n  var xBuf = new TensorBuffer(x.shape, x.dtype, xVals);\n  var dyVals = backend.data.get(dy.dataId).values;\n  var dyBuf = new TensorBuffer(dy.shape, dy.dtype, dyVals);\n\n  for (var wR = 0; wR < filterHeight; ++wR) {\n    var yRMin = Math.max(0, Math.ceil((topPad - wR) / strideHeight));\n    var yRMax = Math.min(convInfo.outHeight, (convInfo.inHeight + topPad - wR) / strideHeight);\n\n    for (var wC = 0; wC < filterWidth; ++wC) {\n      var yCMin = Math.max(0, Math.ceil((leftPad - wC) / strideWidth));\n      var yCMax = Math.min(convInfo.outWidth, (convInfo.inWidth + leftPad - wC) / strideWidth);\n\n      for (var d2 = 0; d2 < convInfo.outChannels; ++d2) {\n        var d1 = Math.trunc(d2 / chMul);\n        var dm = d2 % chMul;\n        var dotProd = 0;\n\n        for (var b = 0; b < convInfo.batchSize; ++b) {\n          for (var yR = yRMin; yR < yRMax; ++yR) {\n            var xR = wR + yR * strideHeight - topPad;\n\n            for (var yC = yCMin; yC < yCMax; ++yC) {\n              var xC = wC + yC * strideWidth - leftPad;\n              dotProd += xBuf.get(b, xR, xC, d1) * dyBuf.get(b, yR, yC, d2);\n            }\n          }\n        }\n\n        dW.set(dotProd, wR, wC, d1, dm);\n      }\n    }\n  }\n\n  return backend.makeTensorInfo(dW.shape, dW.dtype, dW.values);\n}\nexport var depthwiseConv2dNativeBackpropFilterConfig = {\n  kernelName: DepthwiseConv2dNativeBackpropFilter,\n  backendName: 'cpu',\n  kernelFunc: depthwiseConv2dNativeBackpropFilter\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, DepthwiseConv2dNativeBackpropInput, TensorBuffer, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nexport function depthwiseConv2dNativeBackpropInput(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var dy = inputs.dy,\n      filter = inputs.filter;\n  var strides = attrs.strides,\n      dilations = attrs.dilations,\n      pad = attrs.pad,\n      dimRoundingMode = attrs.dimRoundingMode,\n      inputShape = attrs.inputShape;\n  assertNotComplex([dy, filter], 'depthwiseConv2DNativeBackpropInput');\n  var dyStrides = util.computeStrides(dy.shape);\n  var filterStrides = util.computeStrides(filter.shape);\n  var convInfo = backend_util.computeConv2DInfo(inputShape, filter.shape, strides, dilations, pad, dimRoundingMode, true\n  /* depthwise */\n  );\n  var dx = new TensorBuffer(convInfo.inShape, 'float32');\n  var dxValues = dx.values;\n\n  var _dx$strides = _slicedToArray(dx.strides, 3),\n      dxS0 = _dx$strides[0],\n      dxS1 = _dx$strides[1],\n      dxS2 = _dx$strides[2];\n\n  var dyValues = backend.data.get(dy.dataId).values;\n\n  var _dyStrides = _slicedToArray(dyStrides, 3),\n      dyS0 = _dyStrides[0],\n      dyS1 = _dyStrides[1],\n      dyS2 = _dyStrides[2];\n\n  var fltValues = backend.data.get(filter.dataId).values;\n\n  var _filterStrides = _slicedToArray(filterStrides, 3),\n      fltS0 = _filterStrides[0],\n      fltS1 = _filterStrides[1],\n      fltS2 = _filterStrides[2];\n\n  var batchSize = convInfo.batchSize,\n      filterHeight = convInfo.filterHeight,\n      filterWidth = convInfo.filterWidth,\n      inChannels = convInfo.inChannels,\n      inHeight = convInfo.inHeight,\n      inWidth = convInfo.inWidth,\n      outChannels = convInfo.outChannels,\n      outHeight = convInfo.outHeight,\n      outWidth = convInfo.outWidth,\n      strideHeight = convInfo.strideHeight,\n      strideWidth = convInfo.strideWidth;\n  var topPad = filterHeight - 1 - convInfo.padInfo.top;\n  var leftPad = filterWidth - 1 - convInfo.padInfo.left;\n  var chMul = outChannels / inChannels;\n\n  for (var b = 0; b < batchSize; ++b) {\n    for (var d1 = 0; d1 < inChannels; ++d1) {\n      for (var xR = 0; xR < inHeight; ++xR) {\n        var xRCorner = xR - topPad;\n        var xRMin = Math.max(0, Math.ceil(xRCorner / strideHeight));\n        var yRMax = Math.min(outHeight, (filterHeight + xRCorner) / strideHeight);\n\n        for (var xC = 0; xC < inWidth; ++xC) {\n          var xCCorner = xC - leftPad;\n          var xCMin = Math.max(0, Math.ceil(xCCorner / strideWidth));\n          var yCMax = Math.min(outWidth, (filterWidth + xCCorner) / strideWidth);\n          var dotProd = 0;\n\n          for (var yR = xRMin; yR < yRMax; ++yR) {\n            var wR = yR * strideHeight - xRCorner;\n\n            for (var yC = xCMin; yC < yCMax; ++yC) {\n              var wC = yC * strideWidth - xCCorner;\n              var dyOffset = dyS0 * b + dyS1 * yR + dyS2 * yC;\n              var fltOffset = fltS0 * (filterHeight - 1 - wR) + fltS1 * (filterWidth - 1 - wC) + fltS2 * d1;\n\n              for (var dm = 0; dm < chMul; ++dm) {\n                var d2 = d1 * chMul + dm;\n                var pixel = dyValues[dyOffset + d2];\n                var weight = fltValues[fltOffset + dm];\n                dotProd += pixel * weight;\n              }\n            }\n          }\n\n          dxValues[dxS0 * b + dxS1 * xR + dxS2 * xC + d1] = dotProd;\n        }\n      }\n    }\n  }\n\n  return backend.makeTensorInfo(dx.shape, dx.dtype, dx.values);\n}\nexport var depthwiseConv2dNativeBackpropInputConfig = {\n  kernelName: DepthwiseConv2dNativeBackpropInput,\n  backendName: 'cpu',\n  kernelFunc: depthwiseConv2dNativeBackpropInput\n};","import _toConsumableArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { buffer, Diag, util } from '@tensorflow/tfjs-core';\nexport function diag(args) {\n  var inputs = args.inputs,\n      backend = args.backend;\n  var x = inputs.x;\n  var xSize = util.sizeFromShape(x.shape);\n  var xVals = backend.data.get(x.dataId).values;\n  var outBuf = buffer([xSize, xSize], x.dtype);\n  var vals = outBuf.values;\n\n  for (var i = 0; i < xVals.length; i++) {\n    vals[i * xSize + i] = xVals[i];\n  }\n\n  var outShape = [].concat(_toConsumableArray(x.shape), _toConsumableArray(x.shape));\n  return backend.makeTensorInfo(outShape, outBuf.dtype, outBuf.values);\n}\nexport var diagConfig = {\n  kernelName: Diag,\n  backendName: 'cpu',\n  kernelFunc: diag\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Dilation2D, util } from '@tensorflow/tfjs-core';\nexport var dilation2dConfig = {\n  kernelName: Dilation2D,\n  backendName: 'cpu',\n  kernelFunc: function kernelFunc(_ref) {\n    var inputs = _ref.inputs,\n        backend = _ref.backend,\n        attrs = _ref.attrs;\n    var x = inputs.x,\n        filter = inputs.filter;\n    var strides = attrs.strides,\n        pad = attrs.pad,\n        dilations = attrs.dilations;\n    var cpuBackend = backend;\n    var xVals = cpuBackend.data.get(x.dataId).values;\n    var xRank = x.shape.length;\n    var filterVals = cpuBackend.data.get(filter.dataId).values;\n    var filterRank = filter.shape.length;\n\n    var _backend_util$compute = backend_util.computeDilation2DInfo(x.shape, filter.shape, strides, pad, 'NHWC'\n    /* dataFormat */\n    , dilations),\n        batchSize = _backend_util$compute.batchSize,\n        inHeight = _backend_util$compute.inHeight,\n        inWidth = _backend_util$compute.inWidth,\n        inChannels = _backend_util$compute.inChannels,\n        outHeight = _backend_util$compute.outHeight,\n        outWidth = _backend_util$compute.outWidth,\n        padInfo = _backend_util$compute.padInfo,\n        strideHeight = _backend_util$compute.strideHeight,\n        strideWidth = _backend_util$compute.strideWidth,\n        filterHeight = _backend_util$compute.filterHeight,\n        filterWidth = _backend_util$compute.filterWidth,\n        dilationHeight = _backend_util$compute.dilationHeight,\n        dilationWidth = _backend_util$compute.dilationWidth,\n        outShape = _backend_util$compute.outShape;\n\n    var outSize = util.sizeFromShape(outShape);\n    var outRank = outShape.length;\n    var outputVals = util.getArrayFromDType(x.dtype, outSize); // Upsampling the input by fill in `dilation size - 1` values between each\n    // input value.\n    // This implementation follows the TF c++ implementation:\n    // https://github.com/tensorflow/tensorflow/blob/d9a3a849edc198e90172bc58eb293de457f9d986/tensorflow/core/kernels/dilation_ops.cc\n\n    for (var b = 0; b < batchSize; ++b) {\n      for (var hOut = 0; hOut < outHeight; ++hOut) {\n        var hBeg = hOut * strideHeight - padInfo.top;\n\n        for (var wOut = 0; wOut < outWidth; ++wOut) {\n          var wBeg = wOut * strideWidth - padInfo.left;\n\n          for (var d = 0; d < inChannels; ++d) {\n            var curVal = Number.MIN_SAFE_INTEGER;\n\n            for (var h = 0; h < filterHeight; ++h) {\n              var hIn = hBeg + h * dilationHeight;\n\n              if (hIn >= 0 && hIn < inHeight) {\n                for (var w = 0; w < filterWidth; ++w) {\n                  var wIn = wBeg + w * dilationWidth;\n\n                  if (wIn >= 0 && wIn < inWidth) {\n                    var xIndex = util.locToIndex([b, hIn, wIn, d], xRank, util.computeStrides(x.shape));\n                    var filterIndex = util.locToIndex([h, w, d], filterRank, util.computeStrides(filter.shape));\n                    var val = xVals[xIndex] + filterVals[filterIndex];\n\n                    if (val > curVal) {\n                      curVal = val;\n                    }\n                  }\n                }\n              }\n            }\n\n            var outputIndex = util.locToIndex([b, hOut, wOut, d], outRank, util.computeStrides(outShape));\n            outputVals[outputIndex] = curVal;\n          }\n        }\n      }\n    }\n\n    var dataId = cpuBackend.write(util.toTypedArray(outputVals, x.dtype), outShape, x.dtype);\n    return {\n      dataId: dataId,\n      shape: outShape,\n      dtype: x.dtype\n    };\n  }\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Dilation2DBackpropFilter, util } from '@tensorflow/tfjs-core';\nexport var dilation2dBackpropFilterConfig = {\n  kernelName: Dilation2DBackpropFilter,\n  backendName: 'cpu',\n  kernelFunc: function kernelFunc(_ref) {\n    var inputs = _ref.inputs,\n        backend = _ref.backend,\n        attrs = _ref.attrs;\n    var x = inputs.x,\n        filter = inputs.filter,\n        dy = inputs.dy;\n    var strides = attrs.strides,\n        pad = attrs.pad,\n        dilations = attrs.dilations;\n    var cpuBackend = backend;\n    var $x = util.toNestedArray(x.shape, cpuBackend.data.get(x.dataId).values);\n    var $filter = util.toNestedArray(filter.shape, cpuBackend.data.get(filter.dataId).values);\n\n    var _backend_util$compute = backend_util.computeDilation2DInfo(x.shape, filter.shape, strides, pad, 'NHWC'\n    /* dataFormat */\n    , dilations),\n        batchSize = _backend_util$compute.batchSize,\n        inHeight = _backend_util$compute.inHeight,\n        inWidth = _backend_util$compute.inWidth,\n        inChannels = _backend_util$compute.inChannels,\n        outHeight = _backend_util$compute.outHeight,\n        outWidth = _backend_util$compute.outWidth,\n        padInfo = _backend_util$compute.padInfo,\n        strideHeight = _backend_util$compute.strideHeight,\n        strideWidth = _backend_util$compute.strideWidth,\n        filterHeight = _backend_util$compute.filterHeight,\n        filterWidth = _backend_util$compute.filterWidth,\n        dilationHeight = _backend_util$compute.dilationHeight,\n        dilationWidth = _backend_util$compute.dilationWidth,\n        outShape = _backend_util$compute.outShape;\n\n    util.assert(dy.rank === outShape.length, function () {\n      return \"Error in \".concat(Dilation2DBackpropFilter, \", dy \") + \"must have the same rank as output \".concat(outShape.length, \", but got \") + \"\".concat(dy.rank);\n    });\n    var $dy = util.toNestedArray(outShape, cpuBackend.data.get(dy.dataId).values); // The computed filter gradients has the same dimensions as the filter:\n    // [filterHeight, filterWidth, depth]\n\n    var gradients = util.makeZerosNestedTypedArray(filter.shape, filter.dtype); // In the case of multiple argmax branches, we only back-propagate along the\n    // last branch, i.e., the one with largest value of `h * filter_cols + w`,\n    // similarly to the max-pooling backward routines.\n    // This implementation follows the TF c++ implementation:\n    // https://github.com/tensorflow/tensorflow/blob/d9a3a849edc198e90172bc58eb293de457f9d986/tensorflow/core/kernels/dilation_ops.cc\n\n    for (var b = 0; b < batchSize; ++b) {\n      for (var hOut = 0; hOut < outHeight; ++hOut) {\n        var hBeg = hOut * strideHeight - padInfo.top;\n\n        for (var wOut = 0; wOut < outWidth; ++wOut) {\n          var wBeg = wOut * strideWidth - padInfo.left;\n\n          for (var d = 0; d < inChannels; ++d) {\n            var curVal = Number.MIN_SAFE_INTEGER;\n            var hMax = 0;\n            var wMax = 0;\n\n            for (var h = 0; h < filterHeight; ++h) {\n              var hIn = hBeg + h * dilationHeight;\n\n              if (hIn >= 0 && hIn < inHeight) {\n                for (var w = 0; w < filterWidth; ++w) {\n                  var wIn = wBeg + w * dilationWidth;\n\n                  if (wIn >= 0 && wIn < inWidth) {\n                    var val = $x[b][hIn][wIn][d] + $filter[h][w][d];\n\n                    if (val > curVal) {\n                      curVal = val;\n                      hMax = h;\n                      wMax = w;\n                    }\n                  }\n                }\n              }\n            }\n\n            gradients[hMax][wMax][d] += $dy[b][hOut][wOut][d];\n          }\n        }\n      }\n    }\n\n    var dataId = cpuBackend.write(util.toTypedArray(gradients, x.dtype), filter.shape, filter.dtype);\n    return {\n      dataId: dataId,\n      shape: filter.shape,\n      dtype: filter.dtype\n    };\n  }\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Dilation2DBackpropInput, util } from '@tensorflow/tfjs-core';\nexport var dilation2dBackpropInputConfig = {\n  kernelName: Dilation2DBackpropInput,\n  backendName: 'cpu',\n  kernelFunc: function kernelFunc(_ref) {\n    var inputs = _ref.inputs,\n        backend = _ref.backend,\n        attrs = _ref.attrs;\n    var x = inputs.x,\n        filter = inputs.filter,\n        dy = inputs.dy;\n    var strides = attrs.strides,\n        pad = attrs.pad,\n        dilations = attrs.dilations;\n    var cpuBackend = backend;\n    var $x = util.toNestedArray(x.shape, cpuBackend.data.get(x.dataId).values);\n    var $filter = util.toNestedArray(filter.shape, cpuBackend.data.get(filter.dataId).values);\n\n    var _backend_util$compute = backend_util.computeDilation2DInfo(x.shape, filter.shape, strides, pad, 'NHWC'\n    /* dataFormat */\n    , dilations),\n        batchSize = _backend_util$compute.batchSize,\n        inHeight = _backend_util$compute.inHeight,\n        inWidth = _backend_util$compute.inWidth,\n        inChannels = _backend_util$compute.inChannels,\n        outHeight = _backend_util$compute.outHeight,\n        outWidth = _backend_util$compute.outWidth,\n        padInfo = _backend_util$compute.padInfo,\n        strideHeight = _backend_util$compute.strideHeight,\n        strideWidth = _backend_util$compute.strideWidth,\n        filterHeight = _backend_util$compute.filterHeight,\n        filterWidth = _backend_util$compute.filterWidth,\n        dilationHeight = _backend_util$compute.dilationHeight,\n        dilationWidth = _backend_util$compute.dilationWidth,\n        outShape = _backend_util$compute.outShape;\n\n    util.assert(dy.rank === outShape.length, function () {\n      return \"Error in \".concat(Dilation2DBackpropInput, \", dy \") + \"must have the same rank as output \".concat(outShape.length, \", but got \") + \"\".concat(dy.rank);\n    });\n    var $dy = util.toNestedArray(outShape, cpuBackend.data.get(dy.dataId).values); // The computed gradients has the same dimensions as the input:\n    // [batch, inputHeight, inputCols, inChannel]\n\n    var gradients = util.makeZerosNestedTypedArray(x.shape, x.dtype); // In the case of multiple argmax branches, we only back-propagate along the\n    // last branch, i.e., the one with largest value of `h * filter_cols + w`,\n    // similarly to the max-pooling backward routines.\n    // This implementation follows the TF c++ implementation:\n    // https://github.com/tensorflow/tensorflow/blob/d9a3a849edc198e90172bc58eb293de457f9d986/tensorflow/core/kernels/dilation_ops.cc\n\n    for (var b = 0; b < batchSize; ++b) {\n      for (var hOut = 0; hOut < outHeight; ++hOut) {\n        var hBeg = hOut * strideHeight - padInfo.top;\n\n        for (var wOut = 0; wOut < outWidth; ++wOut) {\n          var wBeg = wOut * strideWidth - padInfo.left;\n\n          for (var d = 0; d < inChannels; ++d) {\n            var curVal = Number.MIN_SAFE_INTEGER;\n            var hInMax = hBeg < 0 ? 0 : hBeg;\n            var wInMax = wBeg < 0 ? 0 : wBeg;\n\n            for (var h = 0; h < filterHeight; ++h) {\n              var hIn = hBeg + h * dilationHeight;\n\n              if (hIn >= 0 && hIn < inHeight) {\n                for (var w = 0; w < filterWidth; ++w) {\n                  var wIn = wBeg + w * dilationWidth;\n\n                  if (wIn >= 0 && wIn < inWidth) {\n                    var val = $x[b][hIn][wIn][d] + $filter[h][w][d];\n\n                    if (val > curVal) {\n                      curVal = val;\n                      hInMax = hIn;\n                      wInMax = wIn;\n                    }\n                  }\n                }\n              }\n            }\n\n            gradients[b][hInMax][wInMax][d] += $dy[b][hOut][wOut][d];\n          }\n        }\n      }\n    }\n\n    var dataId = cpuBackend.write(util.toTypedArray(gradients, x.dtype), x.shape, x.dtype);\n    return {\n      dataId: dataId,\n      shape: x.shape,\n      dtype: x.dtype\n    };\n  }\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Multiply } from '@tensorflow/tfjs-core';\nimport { createSimpleBinaryKernelImpl } from '../utils/binary_impl';\nimport { binaryKernelFunc, createComplexBinaryKernelImpl } from '../utils/binary_utils';\nexport var multiplyImpl = createSimpleBinaryKernelImpl(function (aValue, bValue) {\n  return aValue * bValue;\n});\nexport var multiplyComplexImpl = createComplexBinaryKernelImpl(function (aReal, aImag, bReal, bImag) {\n  return {\n    real: aReal * bReal - aImag * bImag,\n    imag: aReal * bImag + aImag * bReal\n  };\n});\nexport var multiply = binaryKernelFunc(Multiply, multiplyImpl, multiplyComplexImpl);\nexport var multiplyConfig = {\n  kernelName: Multiply,\n  backendName: 'cpu',\n  kernelFunc: multiply\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Sum, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nimport { zeros } from '../utils/zeros_impl';\nimport { cast } from './Cast';\nimport { identity } from './Identity';\nimport { reshape } from './Reshape';\nimport { transpose } from './Transpose';\nexport function sum(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  var axis = attrs.axis,\n      keepDims = attrs.keepDims;\n  assertNotComplex(x, 'sum');\n  var $x;\n\n  if (x.dtype === 'bool') {\n    $x = cast({\n      inputs: {\n        x: x\n      },\n      backend: backend,\n      attrs: {\n        dtype: 'int32'\n      }\n    });\n  } else {\n    $x = identity({\n      inputs: {\n        x: x\n      },\n      backend: backend\n    });\n  }\n\n  var xRank = $x.shape.length;\n  var axes = util.parseAxisParam(axis, $x.shape);\n  var permutation = backend_util.getAxesPermutation(axes, xRank);\n  var reductionAxes = axes;\n  var permutedX = $x;\n\n  if (permutation != null) {\n    permutedX = transpose({\n      inputs: {\n        x: $x\n      },\n      backend: backend,\n      attrs: {\n        perm: permutation\n      }\n    });\n    reductionAxes = backend_util.getInnerMostAxes(reductionAxes.length, xRank);\n  }\n\n  backend_util.assertAxesAreInnerMostDims('sum', reductionAxes, permutedX.shape.length);\n\n  var _backend_util$compute = backend_util.computeOutAndReduceShapes(permutedX.shape, reductionAxes),\n      _backend_util$compute2 = _slicedToArray(_backend_util$compute, 2),\n      outShape = _backend_util$compute2[0],\n      reduceShape = _backend_util$compute2[1];\n\n  var resultDtype = backend_util.upcastType(permutedX.dtype, 'int32');\n  var result = zeros(backend, outShape, resultDtype);\n  var reduceSize = util.sizeFromShape(reduceShape);\n  var vals = backend.data.get(result.dataId).values;\n  var aVals = backend.data.get(permutedX.dataId).values;\n\n  for (var i = 0; i < vals.length; ++i) {\n    var offset = i * reduceSize;\n    var _sum = 0;\n\n    for (var j = 0; j < reduceSize; ++j) {\n      _sum += aVals[offset + j];\n    }\n\n    vals[i] = _sum;\n  }\n\n  if (keepDims) {\n    var newShape = backend_util.expandShapeToKeepDim(result.shape, axes);\n    var oldResult = result;\n    result = reshape({\n      inputs: {\n        x: result\n      },\n      backend: backend,\n      attrs: {\n        shape: newShape\n      }\n    });\n    backend.disposeIntermediateTensorInfo(oldResult);\n  }\n\n  backend.disposeIntermediateTensorInfo($x);\n\n  if (permutation != null) {\n    backend.disposeIntermediateTensorInfo(permutedX);\n  }\n\n  return result;\n}\nexport var sumConfig = {\n  kernelName: Sum,\n  backendName: 'cpu',\n  kernelFunc: sum\n};","function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Einsum, util } from '@tensorflow/tfjs-core';\nimport { multiply } from './Multiply';\nimport { reshape } from './Reshape';\nimport { sum } from './Sum';\nimport { transpose } from './Transpose';\nexport function einsum(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var equation = attrs.equation;\n  var tensors = inputs;\n\n  var _backend_util$decodeE = backend_util.decodeEinsumEquation(equation, tensors.length),\n      allDims = _backend_util$decodeE.allDims,\n      summedDims = _backend_util$decodeE.summedDims,\n      idDims = _backend_util$decodeE.idDims;\n\n  backend_util.checkEinsumDimSizes(allDims.length, idDims, tensors);\n\n  var _backend_util$getEins = backend_util.getEinsumComputePath(summedDims, idDims),\n      path = _backend_util$getEins.path,\n      steps = _backend_util$getEins.steps;\n\n  var nSteps = steps.length;\n  var out = null;\n  var numDimsRemaining = allDims.length;\n  var tensorsToDispose = [];\n\n  for (var i = 0; i < nSteps; ++i) {\n    var _iterator = _createForOfIteratorHelper(steps[i]),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var idTerm = _step.value;\n\n        var _backend_util$getEins2 = backend_util.getEinsumPermutation(numDimsRemaining, idDims[idTerm]),\n            perm = _backend_util$getEins2.permutationIndices,\n            dimsToExpand = _backend_util$getEins2.expandDims;\n\n        var x = void 0;\n\n        if (backend_util.isIdentityPermutation(perm)) {\n          x = tensors[idTerm];\n        } else {\n          x = transpose({\n            inputs: {\n              x: tensors[idTerm]\n            },\n            backend: backend,\n            attrs: {\n              perm: perm\n            }\n          });\n          tensorsToDispose.push(x);\n        }\n\n        var targetShape = x.shape.slice();\n\n        for (var k = 0; k < dimsToExpand.length; ++k) {\n          targetShape.splice(dimsToExpand[k], 0, 1);\n        }\n\n        if (!util.arraysEqual(x.shape, targetShape)) {\n          x = reshape({\n            inputs: {\n              x: x\n            },\n            backend: backend,\n            attrs: {\n              shape: targetShape\n            }\n          });\n          tensorsToDispose.push(x);\n        }\n\n        if (out === null) {\n          out = x;\n        } else {\n          // tslint:disable-next-line: no-unnecessary-type-assertion\n          out = multiply({\n            inputs: {\n              a: x,\n              b: out\n            },\n            backend: backend\n          });\n          tensorsToDispose.push(out);\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    if (i < nSteps - 1) {\n      if (path[i] >= 0) {\n        out = sum({\n          inputs: {\n            x: out\n          },\n          backend: backend,\n          attrs: {\n            axis: path[i] - (allDims.length - numDimsRemaining),\n            keepDims: false\n          }\n        });\n        tensorsToDispose.push(out);\n      }\n\n      numDimsRemaining--;\n    }\n  } // Clean up intermediate tensors.\n\n\n  for (var _i = 0, _tensorsToDispose = tensorsToDispose; _i < _tensorsToDispose.length; _i++) {\n    var tensorInfo = _tensorsToDispose[_i];\n\n    if (tensorInfo === out) {\n      continue;\n    }\n\n    backend.disposeIntermediateTensorInfo(tensorInfo);\n  }\n\n  return out;\n}\nexport var einsumConfig = {\n  kernelName: Einsum,\n  backendName: 'cpu',\n  kernelFunc: einsum\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { EluGrad, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nexport function eluGrad(args) {\n  var inputs = args.inputs,\n      backend = args.backend;\n  var dy = inputs.dy,\n      y = inputs.y;\n  assertNotComplex([dy, y], 'eluGrad');\n  var resultValues = new Float32Array(util.sizeFromShape(y.shape));\n  var values = backend.data.get(y.dataId).values;\n  var dyValues = backend.data.get(dy.dataId).values;\n\n  for (var i = 0; i < values.length; ++i) {\n    var v = values[i];\n\n    if (v >= 1) {\n      resultValues[i] = dyValues[i];\n    } else {\n      resultValues[i] = dyValues[i] * (v + 1);\n    }\n  }\n\n  return backend.makeTensorInfo(y.shape, 'float32', resultValues);\n}\nexport var eluGradConfig = {\n  kernelName: EluGrad,\n  backendName: 'cpu',\n  kernelFunc: eluGrad\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Equal } from '@tensorflow/tfjs-core';\nimport { createSimpleBinaryKernelImpl } from '../utils/binary_impl';\nimport { binaryKernelFunc } from '../utils/binary_utils';\nexport var equalImpl = createSimpleBinaryKernelImpl(function (a, b) {\n  return a === b ? 1 : 0;\n});\nexport var equal = binaryKernelFunc(Equal, equalImpl, null\n/* complexImpl */\n, 'bool');\nexport var equalConfig = {\n  kernelName: Equal,\n  backendName: 'cpu',\n  kernelFunc: equal\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Erf } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../utils/unary_utils';\nvar p = backend_util.ERF_P;\nvar a1 = backend_util.ERF_A1;\nvar a2 = backend_util.ERF_A2;\nvar a3 = backend_util.ERF_A3;\nvar a4 = backend_util.ERF_A4;\nvar a5 = backend_util.ERF_A5;\nexport var erf = unaryKernelFunc(Erf, function (xi) {\n  var sign = Math.sign(xi);\n  var v = Math.abs(xi);\n  var t = 1.0 / (1.0 + p * v);\n  return sign * (1.0 - ((((a5 * t + a4) * t + a3) * t + a2) * t + a1) * t * Math.exp(-v * v));\n});\nexport var erfConfig = {\n  kernelName: Erf,\n  backendName: 'cpu',\n  kernelFunc: erf\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Exp } from '@tensorflow/tfjs-core';\nimport { createSimpleUnaryImpl } from '../utils/unary_impl';\nimport { unaryKernelFuncFromImpl } from '../utils/unary_utils';\nexport var expImpl = createSimpleUnaryImpl(function (xi) {\n  return Math.exp(xi);\n});\nexport var exp = unaryKernelFuncFromImpl(Exp, expImpl);\nexport var expConfig = {\n  kernelName: Exp,\n  backendName: 'cpu',\n  kernelFunc: exp\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ExpandDims, util } from '@tensorflow/tfjs-core';\nimport { reshape } from './Reshape';\nexport function expandDims(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var input = inputs.input;\n  var dim = attrs.dim;\n  var inputRank = input.shape.length;\n  var newShape = input.shape.slice();\n  var $dim = dim;\n\n  if (dim < 0) {\n    // Negative value is counted from the tail of rank.\n    util.assert(-(inputRank + 1) <= dim, function () {\n      return \"Axis must be in the interval [\".concat(-(inputRank + 1), \", \").concat(inputRank, \"]\");\n    });\n    $dim = inputRank + dim + 1;\n  }\n\n  newShape.splice($dim, 0, 1);\n  return reshape({\n    inputs: {\n      x: input\n    },\n    backend: backend,\n    attrs: {\n      shape: newShape\n    }\n  });\n}\nexport var expandDimsConfig = {\n  kernelName: ExpandDims,\n  backendName: 'cpu',\n  kernelFunc: expandDims\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Expm1 } from '@tensorflow/tfjs-core';\nimport { createSimpleUnaryImpl } from '../utils/unary_impl';\nimport { unaryKernelFuncFromImpl } from '../utils/unary_utils';\nexport var expm1Impl = createSimpleUnaryImpl(function (xi) {\n  return Math.expm1(xi);\n});\nexport var expm1 = unaryKernelFuncFromImpl(Expm1, expm1Impl);\nexport var expm1Config = {\n  kernelName: Expm1,\n  backendName: 'cpu',\n  kernelFunc: expm1\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { RealDiv } from '@tensorflow/tfjs-core';\nimport { createSimpleBinaryKernelImpl } from '../utils/binary_impl';\nimport { binaryKernelFunc } from '../utils/binary_utils';\nexport var realDivImpl = createSimpleBinaryKernelImpl(function (a, b) {\n  return a / b;\n});\nexport var div = binaryKernelFunc(RealDiv, realDivImpl);\nexport var realDivConfig = {\n  kernelName: RealDiv,\n  backendName: 'cpu',\n  kernelFunc: div\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Sub } from '@tensorflow/tfjs-core';\nimport { createSimpleBinaryKernelImpl } from '../utils/binary_impl';\nimport { binaryKernelFunc, createComplexBinaryKernelImpl } from '../utils/binary_utils';\nexport var subImpl = createSimpleBinaryKernelImpl(function (aValue, bValue) {\n  return aValue - bValue;\n});\nexport var subComplexImpl = createComplexBinaryKernelImpl(function (aReal, aImag, bReal, bImag) {\n  return {\n    real: aReal - bReal,\n    imag: aImag - bImag\n  };\n});\nexport var sub = binaryKernelFunc(Sub, subImpl, subComplexImpl);\nexport var subConfig = {\n  kernelName: Sub,\n  backendName: 'cpu',\n  kernelFunc: sub\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, util } from '@tensorflow/tfjs-core';\nimport { add } from '../kernels/Add';\nimport { complex } from '../kernels/Complex';\nimport { concat } from '../kernels/Concat';\nimport { identity } from '../kernels/Identity';\nimport { imag } from '../kernels/Imag';\nimport { multiply } from '../kernels/Multiply';\nimport { real } from '../kernels/Real';\nimport { realDivConfig } from '../kernels/RealDiv';\nimport { slice } from '../kernels/Slice';\nimport { sub } from '../kernels/Sub';\n/**\n * Calculate FFT of inner most elements of batch tensor.\n */\n\nexport function fftBatch(input, inverse, cpuBackend) {\n  var inputShape = input.shape;\n  var batch = inputShape[0];\n  var innerDim = inputShape[1];\n  var inputVals = cpuBackend.data.get(input.dataId);\n  var real2D = inputVals.complexTensorInfos.real;\n  var imag2D = inputVals.complexTensorInfos.imag; // Collects real and imaginary values separately.\n\n  var resultShape = [batch, innerDim];\n  var resultSize = util.sizeFromShape(resultShape);\n  var resultReal = util.getTypedArrayFromDType('float32', resultSize);\n  var resultImag = util.getTypedArrayFromDType('float32', resultSize);\n\n  for (var b = 0; b < batch; b++) {\n    // TODO: Support slice ops for complex type.\n    var r = slice({\n      inputs: {\n        x: real2D\n      },\n      backend: cpuBackend,\n      attrs: {\n        begin: [b, 0],\n        size: [1, innerDim]\n      }\n    });\n    var i = slice({\n      inputs: {\n        x: imag2D\n      },\n      backend: cpuBackend,\n      attrs: {\n        begin: [b, 0],\n        size: [1, innerDim]\n      }\n    });\n\n    var _input = complex({\n      inputs: {\n        real: r,\n        imag: i\n      },\n      backend: cpuBackend\n    }); // Run FFT by batch element.\n\n\n    var _fftImpl = fftImpl(_input, inverse, cpuBackend),\n        _real = _fftImpl.real,\n        _imag = _fftImpl.imag;\n\n    var res = backend_util.mergeRealAndImagArrays(_real, _imag);\n\n    for (var d = 0; d < innerDim; d++) {\n      var c = backend_util.getComplexWithIndex(res, d);\n      resultReal[b * innerDim + d] = c.real;\n      resultImag[b * innerDim + d] = c.imag;\n    }\n\n    cpuBackend.disposeIntermediateTensorInfo(r);\n    cpuBackend.disposeIntermediateTensorInfo(i);\n    cpuBackend.disposeIntermediateTensorInfo(_input);\n  }\n\n  var $realInfo = cpuBackend.makeTensorInfo(resultShape, 'float32', resultReal);\n  var $imagInfo = cpuBackend.makeTensorInfo(resultShape, 'float32', resultImag);\n  var result = complex({\n    inputs: {\n      real: $realInfo,\n      imag: $imagInfo\n    },\n    backend: cpuBackend\n  });\n  cpuBackend.disposeIntermediateTensorInfo($realInfo);\n  cpuBackend.disposeIntermediateTensorInfo($imagInfo);\n  return result;\n}\nexport function fftImpl(input, inverse, cpuBackend) {\n  var inputSize = util.sizeFromShape(input.shape);\n  var inputVals = cpuBackend.data.get(input.dataId);\n  var realVals = cpuBackend.data.get(inputVals.complexTensorInfos.real.dataId).values;\n  var imagVals = cpuBackend.data.get(inputVals.complexTensorInfos.imag.dataId).values;\n\n  if (isExponentOf2(inputSize)) {\n    var result = fftRadix2(realVals, imagVals, inputSize, inverse, cpuBackend);\n    var resultShape = [input.shape[0], input.shape[1]];\n\n    if (inverse) {\n      var realInfo = cpuBackend.makeTensorInfo(resultShape, 'float32', result.real);\n      var imagInfo = cpuBackend.makeTensorInfo(resultShape, 'float32', result.imag);\n      var sizeInfo = cpuBackend.makeTensorInfo([], 'float32', util.createScalarValue(inputSize, 'float32'));\n      var sizeInfoCopy = identity({\n        inputs: {\n          x: sizeInfo\n        },\n        backend: cpuBackend\n      });\n      var divRealInfo = realDivConfig.kernelFunc({\n        inputs: {\n          a: realInfo,\n          b: sizeInfo\n        },\n        backend: cpuBackend\n      });\n      var divImagInfo = realDivConfig.kernelFunc({\n        inputs: {\n          a: imagInfo,\n          b: sizeInfoCopy\n        },\n        backend: cpuBackend\n      });\n      var divRealVals = cpuBackend.data.get(divRealInfo.dataId).values;\n      var divImagVals = cpuBackend.data.get(divImagInfo.dataId).values;\n      cpuBackend.disposeIntermediateTensorInfo(realInfo);\n      cpuBackend.disposeIntermediateTensorInfo(imagInfo);\n      cpuBackend.disposeIntermediateTensorInfo(sizeInfo);\n      cpuBackend.disposeIntermediateTensorInfo(sizeInfoCopy);\n      cpuBackend.disposeIntermediateTensorInfo(divRealInfo);\n      cpuBackend.disposeIntermediateTensorInfo(divImagInfo);\n      return {\n        real: divRealVals,\n        imag: divImagVals\n      };\n    }\n\n    return result;\n  } else {\n    var data = backend_util.mergeRealAndImagArrays(realVals, imagVals);\n    var rawOutput = fourierTransformByMatmul(data, inputSize, inverse);\n    return backend_util.splitRealAndImagArrays(rawOutput);\n  }\n}\n\nfunction isExponentOf2(size) {\n  return (size & size - 1) === 0;\n} // FFT using Cooley-Tukey algorithm on radix 2 dimensional input.\n\n\nfunction fftRadix2(realVals, imagVals, size, inverse, cpuBackend) {\n  if (size === 1) {\n    return {\n      real: realVals,\n      imag: imagVals\n    };\n  }\n\n  var data = backend_util.mergeRealAndImagArrays(realVals, imagVals);\n  var half = size / 2;\n  var evenComplex = backend_util.complexWithEvenIndex(data);\n  var evenRealVals = evenComplex.real;\n  var evenImagVals = evenComplex.imag;\n  var evenShape = [evenRealVals.length];\n  var evenRealInfo = cpuBackend.makeTensorInfo(evenShape, 'float32', evenRealVals);\n  var evenImagInfo = cpuBackend.makeTensorInfo(evenShape, 'float32', evenImagVals);\n  var evenTensorInfo = complex({\n    inputs: {\n      real: evenRealInfo,\n      imag: evenImagInfo\n    },\n    backend: cpuBackend\n  });\n  var oddComplex = backend_util.complexWithOddIndex(data);\n  var oddRealVals = oddComplex.real;\n  var oddImagVals = oddComplex.imag;\n  var oddShape = [oddRealVals.length];\n  var oddRealInfo = cpuBackend.makeTensorInfo(oddShape, 'float32', oddRealVals);\n  var oddImagInfo = cpuBackend.makeTensorInfo(oddShape, 'float32', oddImagVals);\n  var oddTensorInfo = complex({\n    inputs: {\n      real: oddRealInfo,\n      imag: oddImagInfo\n    },\n    backend: cpuBackend\n  }); // Recursive call for half part of original input.\n\n  var $evenComplex = fftRadix2(evenRealVals, evenImagVals, half, inverse, cpuBackend);\n  var $evenRealVals = $evenComplex.real;\n  var $evenImagVals = $evenComplex.imag;\n  var $evenShape = [$evenRealVals.length];\n  var $evenRealInfo = cpuBackend.makeTensorInfo($evenShape, 'float32', $evenRealVals);\n  var $evenImagInfo = cpuBackend.makeTensorInfo($evenShape, 'float32', $evenImagVals);\n  var $evenTensorInfo = complex({\n    inputs: {\n      real: $evenRealInfo,\n      imag: $evenImagInfo\n    },\n    backend: cpuBackend\n  });\n  var $oddComplex = fftRadix2(oddRealVals, oddImagVals, half, inverse, cpuBackend);\n  var $oddRealVals = $oddComplex.real;\n  var $oddImagVals = $oddComplex.imag;\n  var $oddShape = [$oddRealVals.length];\n  var $oddRealInfo = cpuBackend.makeTensorInfo($oddShape, 'float32', $oddRealVals);\n  var $oddImagInfo = cpuBackend.makeTensorInfo($oddShape, 'float32', $oddImagVals);\n  var $oddTensorInfo = complex({\n    inputs: {\n      real: $oddRealInfo,\n      imag: $oddImagInfo\n    },\n    backend: cpuBackend\n  });\n  var e = backend_util.exponents(size, inverse);\n  var eShape = [e.real.length];\n  var eRealInfo = cpuBackend.makeTensorInfo(eShape, 'float32', e.real);\n  var eImagInfo = cpuBackend.makeTensorInfo(eShape, 'float32', e.imag);\n  var complexInfo = complex({\n    inputs: {\n      real: eRealInfo,\n      imag: eImagInfo\n    },\n    backend: cpuBackend\n  });\n  var exponentInfo = multiply({\n    inputs: {\n      a: complexInfo,\n      b: $oddTensorInfo\n    },\n    backend: cpuBackend\n  });\n  var addPart = add({\n    inputs: {\n      a: $evenTensorInfo,\n      b: exponentInfo\n    },\n    backend: cpuBackend\n  });\n  var subPart = sub({\n    inputs: {\n      a: $evenTensorInfo,\n      b: exponentInfo\n    },\n    backend: cpuBackend\n  });\n  var addPartReal = real({\n    inputs: {\n      input: addPart\n    },\n    backend: cpuBackend\n  });\n  var subPartReal = real({\n    inputs: {\n      input: subPart\n    },\n    backend: cpuBackend\n  });\n  var addPartImag = imag({\n    inputs: {\n      input: addPart\n    },\n    backend: cpuBackend\n  });\n  var subPartImag = imag({\n    inputs: {\n      input: subPart\n    },\n    backend: cpuBackend\n  });\n  var $real = concat({\n    inputs: [addPartReal, subPartReal],\n    backend: cpuBackend,\n    attrs: {\n      axis: 0\n    }\n  });\n  var $imag = concat({\n    inputs: [addPartImag, subPartImag],\n    backend: cpuBackend,\n    attrs: {\n      axis: 0\n    }\n  });\n  var $realVals = cpuBackend.data.get($real.dataId).values;\n  var $imagVals = cpuBackend.data.get($imag.dataId).values;\n  cpuBackend.disposeIntermediateTensorInfo(evenRealInfo);\n  cpuBackend.disposeIntermediateTensorInfo(evenImagInfo);\n  cpuBackend.disposeIntermediateTensorInfo(evenTensorInfo);\n  cpuBackend.disposeIntermediateTensorInfo(oddRealInfo);\n  cpuBackend.disposeIntermediateTensorInfo(oddImagInfo);\n  cpuBackend.disposeIntermediateTensorInfo(oddTensorInfo);\n  cpuBackend.disposeIntermediateTensorInfo($evenRealInfo);\n  cpuBackend.disposeIntermediateTensorInfo($evenImagInfo);\n  cpuBackend.disposeIntermediateTensorInfo($evenTensorInfo);\n  cpuBackend.disposeIntermediateTensorInfo($oddRealInfo);\n  cpuBackend.disposeIntermediateTensorInfo($oddImagInfo);\n  cpuBackend.disposeIntermediateTensorInfo($oddTensorInfo);\n  cpuBackend.disposeIntermediateTensorInfo(eRealInfo);\n  cpuBackend.disposeIntermediateTensorInfo(eImagInfo);\n  cpuBackend.disposeIntermediateTensorInfo(complexInfo);\n  cpuBackend.disposeIntermediateTensorInfo(exponentInfo);\n  cpuBackend.disposeIntermediateTensorInfo(addPart);\n  cpuBackend.disposeIntermediateTensorInfo(subPart);\n  cpuBackend.disposeIntermediateTensorInfo(addPartReal);\n  cpuBackend.disposeIntermediateTensorInfo(addPartImag);\n  cpuBackend.disposeIntermediateTensorInfo(subPartReal);\n  cpuBackend.disposeIntermediateTensorInfo(subPartImag);\n  cpuBackend.disposeIntermediateTensorInfo($real);\n  cpuBackend.disposeIntermediateTensorInfo($imag);\n  return {\n    real: $realVals,\n    imag: $imagVals\n  };\n} // Calculate fourier transform by multplying sinusoid matrix.\n\n\nfunction fourierTransformByMatmul(data, size, inverse) {\n  var ret = new Float32Array(size * 2); // TODO: Use matmul instead once it supports complex64 type.\n\n  for (var r = 0; r < size; r++) {\n    var _real2 = 0.0;\n    var _imag2 = 0.0;\n\n    for (var c = 0; c < size; c++) {\n      var e = backend_util.exponent(r * c, size, inverse);\n      var term = backend_util.getComplexWithIndex(data, c);\n      _real2 += term.real * e.real - term.imag * e.imag;\n      _imag2 += term.real * e.imag + term.imag * e.real;\n    }\n\n    if (inverse) {\n      _real2 /= size;\n      _imag2 /= size;\n    }\n\n    backend_util.assignToTypedArray(ret, _real2, _imag2, r);\n  }\n\n  return ret;\n}","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { FFT, util } from '@tensorflow/tfjs-core';\nimport { fftBatch } from '../utils/fft_utils';\nimport { reshape } from './Reshape';\nexport function fft(args) {\n  var inputs = args.inputs,\n      backend = args.backend;\n  var input = inputs.input;\n  var inputSize = util.sizeFromShape(input.shape); // Collapse all outer dimensions to a single batch dimension.\n\n  var innerDimensionSize = input.shape[input.shape.length - 1];\n  var batch = inputSize / innerDimensionSize;\n  var input2D = reshape({\n    inputs: {\n      x: input\n    },\n    backend: backend,\n    attrs: {\n      shape: [batch, innerDimensionSize]\n    }\n  });\n  var result = fftBatch(input2D, false, backend);\n  var resultReshaped = reshape({\n    inputs: {\n      x: result\n    },\n    backend: backend,\n    attrs: {\n      shape: input.shape\n    }\n  });\n  backend.disposeIntermediateTensorInfo(input2D);\n  backend.disposeIntermediateTensorInfo(result);\n  return resultReshaped;\n}\nexport var fftConfig = {\n  kernelName: FFT,\n  backendName: 'cpu',\n  kernelFunc: fft\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Fill, util } from '@tensorflow/tfjs-core';\nexport function fill(args) {\n  var backend = args.backend,\n      attrs = args.attrs;\n  var shape = attrs.shape,\n      value = attrs.value,\n      dtype = attrs.dtype;\n  var $dtype = dtype || util.inferDtype(value);\n  var values = util.getArrayFromDType($dtype, util.sizeFromShape(shape));\n  fillValues(values, value, $dtype);\n  return backend.makeTensorInfo(shape, $dtype, values);\n}\nexport var fillConfig = {\n  kernelName: Fill,\n  backendName: 'cpu',\n  kernelFunc: fill\n};\n\nfunction fillValues(values, value, dtype) {\n  if (dtype === 'string') {\n    values.fill(value);\n  } else {\n    values.fill(value);\n  }\n}","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { FlipLeftRight, util } from '@tensorflow/tfjs-core';\nexport var flipLeftRightConfig = {\n  kernelName: FlipLeftRight,\n  backendName: 'cpu',\n  kernelFunc: function kernelFunc(_ref) {\n    var inputs = _ref.inputs,\n        attrs = _ref.attrs,\n        backend = _ref.backend;\n    var image = inputs.image;\n    var cpuBackend = backend;\n    var output = util.getTypedArrayFromDType(image.dtype, util.sizeFromShape(image.shape));\n\n    var _image$shape = _slicedToArray(image.shape, 4),\n        batch = _image$shape[0],\n        imageHeight = _image$shape[1],\n        imageWidth = _image$shape[2],\n        numChannels = _image$shape[3];\n\n    var imageVals = cpuBackend.data.get(image.dataId).values;\n\n    for (var batchIdx = 0; batchIdx < batch; batchIdx++) {\n      var batchOffset = batchIdx * imageWidth * imageHeight * numChannels;\n\n      for (var row = 0; row < imageHeight; row++) {\n        var rowOffset = row * (imageWidth * numChannels);\n\n        for (var col = 0; col < imageWidth; col++) {\n          var colOffset = col * numChannels;\n\n          for (var channel = 0; channel < numChannels; channel++) {\n            var coords = [batch, row, col, channel];\n            var x = coords[2];\n            var coordX = Math.round(imageWidth - x);\n            var outIdx = batchOffset + rowOffset + colOffset + channel;\n            var outputValue = imageVals[outIdx]; // If the coordinate position falls within the image boundaries...\n\n            if (coordX >= 0 && coordX < imageWidth) {\n              // set the output to the image value at the coordinate position.\n              var rotatedColOffset = coordX * numChannels;\n              var imageIdx = batchOffset + rowOffset + rotatedColOffset + channel;\n              outputValue = imageVals[imageIdx];\n            }\n\n            output[outIdx] = outputValue;\n          }\n        }\n      }\n    }\n\n    var dataId = cpuBackend.write(output, image.shape, image.dtype);\n    return {\n      dataId: dataId,\n      shape: image.shape,\n      dtype: image.dtype\n    };\n  }\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Floor } from '@tensorflow/tfjs-core';\nimport { createSimpleUnaryImpl } from '../utils/unary_impl';\nimport { unaryKernelFuncFromImpl } from '../utils/unary_utils';\nexport var floorImpl = createSimpleUnaryImpl(function (xi) {\n  return Math.floor(xi);\n});\nexport var floor = unaryKernelFuncFromImpl(Floor, floorImpl);\nexport var floorConfig = {\n  kernelName: Floor,\n  backendName: 'cpu',\n  kernelFunc: floor\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { FloorDiv } from '@tensorflow/tfjs-core';\nimport { createSimpleBinaryKernelImpl } from '../utils/binary_impl';\nimport { binaryKernelFunc } from '../utils/binary_utils';\nexport var floorDivImpl = createSimpleBinaryKernelImpl(function (a, b) {\n  return Math.floor(a / b);\n});\nexport var floorDiv = binaryKernelFunc(FloorDiv, floorDivImpl, null\n/* complexImpl */\n, 'int32');\nexport var floorDivConfig = {\n  kernelName: FloorDiv,\n  backendName: 'cpu',\n  kernelFunc: floorDiv\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { FusedConv2D } from '@tensorflow/tfjs-core';\nimport { applyActivation } from '../utils/fused_utils';\nimport { add } from './Add';\nimport { conv2D } from './Conv2D';\nexport function fusedConv2D(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x,\n      filter = inputs.filter,\n      bias = inputs.bias,\n      preluActivationWeights = inputs.preluActivationWeights;\n  var strides = attrs.strides,\n      pad = attrs.pad,\n      dataFormat = attrs.dataFormat,\n      dilations = attrs.dilations,\n      dimRoundingMode = attrs.dimRoundingMode,\n      activation = attrs.activation,\n      leakyreluAlpha = attrs.leakyreluAlpha;\n  var result = conv2D({\n    inputs: {\n      x: x,\n      filter: filter\n    },\n    backend: backend,\n    attrs: {\n      strides: strides,\n      pad: pad,\n      dataFormat: dataFormat,\n      dilations: dilations,\n      dimRoundingMode: dimRoundingMode\n    }\n  });\n\n  if (bias) {\n    var resultOld = result;\n    result = add({\n      inputs: {\n        a: result,\n        b: bias\n      },\n      backend: backend\n    });\n    backend.disposeIntermediateTensorInfo(resultOld);\n  }\n\n  if (activation) {\n    var _resultOld = result;\n    result = applyActivation(backend, result, activation, preluActivationWeights, leakyreluAlpha);\n    backend.disposeIntermediateTensorInfo(_resultOld);\n  }\n\n  return result;\n}\nexport var fusedConv2DConfig = {\n  kernelName: FusedConv2D,\n  backendName: 'cpu',\n  kernelFunc: fusedConv2D\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { FusedDepthwiseConv2D } from '@tensorflow/tfjs-core';\nimport { applyActivation } from '../utils/fused_utils';\nimport { add } from './Add';\nimport { depthwiseConv2dNative } from './DepthwiseConv2dNative';\nexport function fusedDepthwiseConv2D(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x,\n      filter = inputs.filter,\n      bias = inputs.bias,\n      preluActivationWeights = inputs.preluActivationWeights;\n  var strides = attrs.strides,\n      pad = attrs.pad,\n      dataFormat = attrs.dataFormat,\n      dilations = attrs.dilations,\n      dimRoundingMode = attrs.dimRoundingMode,\n      activation = attrs.activation,\n      leakyreluAlpha = attrs.leakyreluAlpha;\n  var result = depthwiseConv2dNative({\n    inputs: {\n      x: x,\n      filter: filter\n    },\n    backend: backend,\n    attrs: {\n      strides: strides,\n      pad: pad,\n      dataFormat: dataFormat,\n      dilations: dilations,\n      dimRoundingMode: dimRoundingMode\n    }\n  });\n\n  if (bias) {\n    var oldResult = result;\n    result = add({\n      inputs: {\n        a: result,\n        b: bias\n      },\n      backend: backend\n    });\n    backend.disposeIntermediateTensorInfo(oldResult);\n  }\n\n  if (activation) {\n    var _oldResult = result;\n    result = applyActivation(backend, result, activation, preluActivationWeights, leakyreluAlpha);\n    backend.disposeIntermediateTensorInfo(_oldResult);\n  }\n\n  return result;\n}\nexport var fusedDepthwiseConv2DConfig = {\n  kernelName: FusedDepthwiseConv2D,\n  backendName: 'cpu',\n  kernelFunc: fusedDepthwiseConv2D\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, buffer, GatherNd, util } from '@tensorflow/tfjs-core';\nexport function gatherNd(args) {\n  var inputs = args.inputs,\n      backend = args.backend;\n  var params = inputs.params,\n      indices = inputs.indices;\n  var paramsSize = util.sizeFromShape(params.shape);\n  var indicesShape = indices.shape;\n  var sliceRank = indicesShape[indicesShape.length - 1];\n\n  var _backend_util$prepare = backend_util.prepareAndValidate(params, indices),\n      _backend_util$prepare2 = _slicedToArray(_backend_util$prepare, 4),\n      resultShape = _backend_util$prepare2[0],\n      numSlices = _backend_util$prepare2[1],\n      sliceSize = _backend_util$prepare2[2],\n      strides = _backend_util$prepare2[3];\n\n  if (numSlices === 0) {\n    return backend.makeTensorInfo(resultShape, params.dtype, []);\n  }\n\n  var outBuf = buffer([numSlices, sliceSize], params.dtype);\n  var indicesData = backend.data.get(indices.dataId).values;\n  var paramsData = backend.data.get(params.dataId).values;\n\n  for (var i = 0; i < numSlices; i++) {\n    var index = [];\n    var flattenIndex = 0;\n\n    for (var j = 0; j < sliceRank; j++) {\n      var dim = indicesData[i * sliceRank + j];\n      flattenIndex += dim * strides[j];\n      index.push(dim);\n    }\n\n    if (flattenIndex < 0 || flattenIndex >= paramsSize / sliceSize) {\n      throw new Error(\"Invalid indices: \".concat(index, \" does not index into \").concat(params.shape));\n    }\n\n    for (var k = 0; k < sliceSize; k++) {\n      outBuf.values[i * sliceSize + k] = paramsData[flattenIndex * sliceSize + k];\n    }\n  }\n\n  return backend.makeTensorInfo(resultShape, outBuf.dtype, outBuf.values);\n}\nexport var gatherNdConfig = {\n  kernelName: GatherNd,\n  backendName: 'cpu',\n  kernelFunc: gatherNd\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { buffer } from '@tensorflow/tfjs-core';\nexport function gatherV2Impl(xBuf, indicesBuf, flattenOutputShape) {\n  var outBuf = buffer(flattenOutputShape, xBuf.dtype);\n\n  for (var i = 0; i < outBuf.size; ++i) {\n    var newLoc = outBuf.indexToLoc(i);\n    var originalLoc = newLoc.slice();\n    var batchIdx = originalLoc[0];\n    var indicesIdx = originalLoc[2];\n    var indicesIndex = indicesBuf.locToIndex([batchIdx, indicesIdx]);\n    originalLoc[2] = indicesBuf.values[indicesIndex];\n    var originalIndex = xBuf.locToIndex(originalLoc);\n    outBuf.values[i] = xBuf.values[originalIndex];\n  }\n\n  return outBuf;\n}","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, GatherV2, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nimport { gatherV2Impl } from './GatherV2_impl';\nimport { reshape } from './Reshape';\nexport function gatherV2(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x,\n      indices = inputs.indices;\n  var axis = attrs.axis,\n      batchDims = attrs.batchDims;\n  assertNotComplex([x, indices], 'gatherV2');\n  var $batchDims = batchDims;\n\n  if (batchDims == null) {\n    $batchDims = 0;\n  }\n\n  var indicesSize = util.sizeFromShape(indices.shape);\n  var parsedAxis = util.parseAxisParam(axis, x.shape)[0];\n  var shapeInfo = backend_util.segment_util.collectGatherOpShapeInfo(x, indices, parsedAxis, $batchDims);\n  var flattenX = reshape({\n    inputs: {\n      x: x\n    },\n    backend: backend,\n    attrs: {\n      shape: [shapeInfo.batchSize, shapeInfo.outerSize, shapeInfo.dimSize, shapeInfo.sliceSize]\n    }\n  });\n  var flattenIndex = reshape({\n    inputs: {\n      x: indices\n    },\n    backend: backend,\n    attrs: {\n      shape: [shapeInfo.batchSize, indicesSize / shapeInfo.batchSize]\n    }\n  });\n  var flattenOutputShape = [shapeInfo.batchSize, shapeInfo.outerSize, indicesSize / shapeInfo.batchSize, shapeInfo.sliceSize];\n  var indicesBuf = backend.bufferSync(flattenIndex);\n  var xBuf = backend.bufferSync(flattenX);\n  var outBuf = gatherV2Impl(xBuf, indicesBuf, flattenOutputShape);\n  backend.disposeIntermediateTensorInfo(flattenX);\n  backend.disposeIntermediateTensorInfo(flattenIndex);\n  return backend.makeTensorInfo(shapeInfo.outputShape, outBuf.dtype, outBuf.values);\n}\nexport var gatherV2Config = {\n  kernelName: GatherV2,\n  backendName: 'cpu',\n  kernelFunc: gatherV2\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Greater } from '@tensorflow/tfjs-core';\nimport { createSimpleBinaryKernelImpl } from '../utils/binary_impl';\nimport { binaryKernelFunc } from '../utils/binary_utils';\nexport var greaterImpl = createSimpleBinaryKernelImpl(function (a, b) {\n  return a > b ? 1 : 0;\n});\nexport var greater = binaryKernelFunc(Greater, greaterImpl, null\n/* complexImpl */\n, 'bool');\nexport var greaterConfig = {\n  kernelName: Greater,\n  backendName: 'cpu',\n  kernelFunc: greater\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { GreaterEqual } from '@tensorflow/tfjs-core';\nimport { createSimpleBinaryKernelImpl } from '../utils/binary_impl';\nimport { binaryKernelFunc } from '../utils/binary_utils';\nexport var greaterEqualImpl = createSimpleBinaryKernelImpl(function (a, b) {\n  return a >= b ? 1 : 0;\n});\nexport var greaterEqual = binaryKernelFunc(GreaterEqual, greaterEqualImpl, null\n/* complexImpl */\n, 'bool');\nexport var greaterEqualConfig = {\n  kernelName: GreaterEqual,\n  backendName: 'cpu',\n  kernelFunc: greaterEqual\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { IFFT, util } from '@tensorflow/tfjs-core';\nimport { fftBatch } from '../utils/fft_utils';\nimport { reshape } from './Reshape';\nexport function ifft(args) {\n  var inputs = args.inputs,\n      backend = args.backend;\n  var input = inputs.input;\n  var inputSize = util.sizeFromShape(input.shape); // Collapse all outer dimensions to a single batch dimension.\n\n  var innerDimensionSize = input.shape[input.shape.length - 1];\n  var batch = inputSize / innerDimensionSize;\n  var input2D = reshape({\n    inputs: {\n      x: input\n    },\n    backend: backend,\n    attrs: {\n      shape: [batch, innerDimensionSize]\n    }\n  });\n  var result = fftBatch(input2D, true, backend);\n  var resultReshaped = reshape({\n    inputs: {\n      x: result\n    },\n    backend: backend,\n    attrs: {\n      shape: input.shape\n    }\n  });\n  backend.disposeIntermediateTensorInfo(input2D);\n  backend.disposeIntermediateTensorInfo(result);\n  return resultReshaped;\n}\nexport var ifftConfig = {\n  kernelName: IFFT,\n  backendName: 'cpu',\n  kernelFunc: ifft\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { IsFinite } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../utils/unary_utils';\nexport var isFinite = unaryKernelFunc(IsFinite, function (xi) {\n  return Number.isFinite(xi) ? 1 : 0;\n}, 'bool');\nexport var isFiniteConfig = {\n  kernelName: IsFinite,\n  backendName: 'cpu',\n  kernelFunc: isFinite\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { IsInf } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../utils/unary_utils';\nexport var isInf = unaryKernelFunc(IsInf, function (xi) {\n  return Math.abs(xi) === Infinity ? 1 : 0;\n}, 'bool');\nexport var isInfConfig = {\n  kernelName: IsInf,\n  backendName: 'cpu',\n  kernelFunc: isInf\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { IsNan } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../utils/unary_utils';\nexport var isNaN = unaryKernelFunc(IsNan, function (xi) {\n  return Number.isNaN(xi) ? 1 : 0;\n}, 'bool');\nexport var isNaNConfig = {\n  kernelName: IsNan,\n  backendName: 'cpu',\n  kernelFunc: isNaN\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Less } from '@tensorflow/tfjs-core';\nimport { createSimpleBinaryKernelImpl } from '../utils/binary_impl';\nimport { binaryKernelFunc } from '../utils/binary_utils';\nexport var lessImpl = createSimpleBinaryKernelImpl(function (a, b) {\n  return a < b ? 1 : 0;\n});\nexport var less = binaryKernelFunc(Less, lessImpl, null\n/* complexImpl */\n, 'bool');\nexport var lessConfig = {\n  kernelName: Less,\n  backendName: 'cpu',\n  kernelFunc: less\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { LessEqual } from '@tensorflow/tfjs-core';\nimport { createSimpleBinaryKernelImpl } from '../utils/binary_impl';\nimport { binaryKernelFunc } from '../utils/binary_utils';\nexport var lessEqualImpl = createSimpleBinaryKernelImpl(function (a, b) {\n  return a <= b ? 1 : 0;\n});\nexport var lessEqual = binaryKernelFunc(LessEqual, lessEqualImpl, null\n/* complexImpl */\n, 'bool');\nexport var lessEqualConfig = {\n  kernelName: LessEqual,\n  backendName: 'cpu',\n  kernelFunc: lessEqual\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\nexport function linSpaceImpl(start, stop, num) {\n  var step = (stop - start) / (num - 1);\n  var values = util.makeZerosTypedArray(num, 'float32');\n  values[0] = start;\n\n  for (var i = 1; i < values.length; i++) {\n    values[i] = values[i - 1] + step;\n  }\n\n  return values;\n}","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { LinSpace } from '@tensorflow/tfjs-core';\nimport { linSpaceImpl } from './LinSpace_impl';\nexport function linSpace(args) {\n  var backend = args.backend,\n      attrs = args.attrs;\n  var start = attrs.start,\n      stop = attrs.stop,\n      num = attrs.num;\n  var outVals = linSpaceImpl(start, stop, num);\n  return backend.makeTensorInfo([outVals.length], 'float32', outVals);\n}\nexport var linSpaceConfig = {\n  kernelName: LinSpace,\n  backendName: 'cpu',\n  kernelFunc: linSpace\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Log } from '@tensorflow/tfjs-core';\nimport { createSimpleUnaryImpl } from '../utils/unary_impl';\nimport { unaryKernelFuncFromImpl } from '../utils/unary_utils';\nexport var logImpl = createSimpleUnaryImpl(function (xi) {\n  return Math.log(xi);\n});\nexport var log = unaryKernelFuncFromImpl(Log, logImpl);\nexport var logConfig = {\n  kernelName: Log,\n  backendName: 'cpu',\n  kernelFunc: log\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Log1p } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../utils/unary_utils';\nexport var log1p = unaryKernelFunc(Log1p, function (xi) {\n  return Math.log1p(xi);\n});\nexport var log1pConfig = {\n  kernelName: Log1p,\n  backendName: 'cpu',\n  kernelFunc: log1p\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { LogicalAnd } from '@tensorflow/tfjs-core';\nimport { createSimpleBinaryKernelImpl } from '../utils/binary_impl';\nimport { binaryKernelFunc } from '../utils/binary_utils';\nexport var logicalAndImpl = createSimpleBinaryKernelImpl(function (a, b) {\n  return a && b;\n});\nexport var logicalAnd = binaryKernelFunc(LogicalAnd, logicalAndImpl, null\n/* complexImpl */\n, 'bool');\nexport var logicalAndConfig = {\n  kernelName: LogicalAnd,\n  backendName: 'cpu',\n  kernelFunc: logicalAnd\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { LogicalNot } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../utils/unary_utils';\nexport var logicalNot = unaryKernelFunc(LogicalNot, function (xi) {\n  return xi ? 0 : 1;\n}, 'bool');\nexport var logicalNotConfig = {\n  kernelName: LogicalNot,\n  backendName: 'cpu',\n  kernelFunc: logicalNot\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { LogicalOr } from '@tensorflow/tfjs-core';\nimport { createSimpleBinaryKernelImpl } from '../utils/binary_impl';\nimport { binaryKernelFunc } from '../utils/binary_utils';\nexport var logicalOrImpl = createSimpleBinaryKernelImpl(function (a, b) {\n  return a || b;\n});\nexport var logicalOr = binaryKernelFunc(LogicalOr, logicalOrImpl, null\n/* complexImpl */\n, 'bool');\nexport var logicalOrConfig = {\n  kernelName: LogicalOr,\n  backendName: 'cpu',\n  kernelFunc: logicalOr\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { LRN, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nexport function lRN(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  var depthRadius = attrs.depthRadius,\n      bias = attrs.bias,\n      alpha = attrs.alpha,\n      beta = attrs.beta;\n  assertNotComplex(x, 'LRN');\n  var channels = x.shape[3];\n  var maxD = channels - 1;\n  var xValues = backend.data.get(x.dataId).values;\n  var size = util.sizeFromShape(x.shape);\n  var result = new Float32Array(size);\n\n  function sumAcrossChannels(offset) {\n    var currentChannel = offset % channels;\n    var beginSumOffset = offset - currentChannel + Math.max(0, currentChannel - depthRadius);\n    var endSumOffset = offset - currentChannel + Math.min(currentChannel + depthRadius, maxD);\n    var sum = 0.0;\n\n    for (; beginSumOffset <= endSumOffset; beginSumOffset++) {\n      var z = xValues[beginSumOffset];\n      sum += z * z;\n    }\n\n    return sum;\n  }\n\n  for (var offset = 0; offset < size; offset++) {\n    var sum = sumAcrossChannels(offset);\n    var val = xValues[offset] * Math.pow(bias + alpha * sum, -beta);\n    result[offset] = val;\n  }\n\n  return backend.makeTensorInfo(x.shape, x.dtype, result);\n}\nexport var lRNConfig = {\n  kernelName: LRN,\n  backendName: 'cpu',\n  kernelFunc: lRN\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { LRNGrad, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nexport function lRNGrad(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x,\n      y = inputs.y,\n      dy = inputs.dy;\n  var depthRadius = attrs.depthRadius,\n      bias = attrs.bias,\n      alpha = attrs.alpha,\n      beta = attrs.beta;\n  assertNotComplex(dy, 'LRNGrad');\n  var dySize = util.sizeFromShape(dy.shape);\n  var channels = dy.shape[3];\n  var dyValues = backend.data.get(dy.dataId).values;\n  var xValues = backend.data.get(x.dataId).values;\n  var yValues = backend.data.get(y.dataId).values;\n  var result = new Float32Array(dySize);\n  var size = dySize;\n\n  for (var offset = 0; offset < size; offset++) {\n    var currentChannel = offset % channels;\n    var depthBegin = offset - currentChannel + Math.max(0, currentChannel - depthRadius);\n    var depthEnd = offset - currentChannel + Math.min(channels, currentChannel + depthRadius + 1);\n    var norm = 0;\n\n    for (var k = depthBegin; k < depthEnd; k++) {\n      norm += Math.pow(xValues[k], 2);\n    }\n\n    norm = alpha * norm + bias;\n\n    for (var _k = depthBegin; _k < depthEnd; _k++) {\n      var dyi = -2 * alpha * beta * xValues[_k] * yValues[offset] / norm;\n\n      if (offset === _k) {\n        dyi += Math.pow(norm, -beta);\n      }\n\n      dyi *= dyValues[offset];\n      result[_k] += dyi;\n    }\n  }\n\n  return backend.makeTensorInfo(dy.shape, x.dtype, result);\n}\nexport var lRNGradConfig = {\n  kernelName: LRNGrad,\n  backendName: 'cpu',\n  kernelFunc: lRNGrad\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\nexport function maxImpl(aVals, reduceSize, outShape, dtype) {\n  var vals = util.getTypedArrayFromDType(dtype, util.sizeFromShape(outShape));\n\n  for (var i = 0; i < vals.length; ++i) {\n    var offset = i * reduceSize;\n    var max = aVals[offset];\n\n    for (var j = 0; j < reduceSize; ++j) {\n      var value = aVals[offset + j];\n\n      if (value > max) {\n        max = value;\n      }\n    }\n\n    vals[i] = max;\n  }\n\n  return vals;\n}","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Max } from '@tensorflow/tfjs-core';\nimport { backend_util } from '@tensorflow/tfjs-core';\nimport { util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nimport { maxImpl } from './Max_impl';\nimport { transposeImpl } from './Transpose_impl';\nexport function max(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  var reductionIndices = attrs.reductionIndices,\n      keepDims = attrs.keepDims;\n  var cpuBackend = backend;\n  var xShape = x.shape;\n  var xRank = xShape.length;\n  var origAxes = util.parseAxisParam(reductionIndices, xShape);\n  var axes = origAxes;\n  var permutedAxes = backend_util.getAxesPermutation(axes, xRank);\n  var xVals = cpuBackend.data.get(x.dataId).values;\n\n  if (permutedAxes != null) {\n    var newShape = new Array(xRank);\n\n    for (var i = 0; i < newShape.length; i++) {\n      newShape[i] = xShape[permutedAxes[i]];\n    }\n\n    xVals = transposeImpl(xVals, xShape, x.dtype, permutedAxes, newShape);\n    axes = backend_util.getInnerMostAxes(axes.length, xRank);\n    xShape = newShape;\n  }\n\n  assertNotComplex(x, 'max');\n  backend_util.assertAxesAreInnerMostDims('max', axes, xRank);\n\n  var _backend_util$compute = backend_util.computeOutAndReduceShapes(xShape, axes),\n      _backend_util$compute2 = _slicedToArray(_backend_util$compute, 2),\n      maxOutShape = _backend_util$compute2[0],\n      reduceShape = _backend_util$compute2[1];\n\n  var reduceSize = util.sizeFromShape(reduceShape);\n  var result = maxImpl(xVals, reduceSize, maxOutShape, x.dtype);\n  var dataId = cpuBackend.write(result, maxOutShape, x.dtype);\n  var outShape = maxOutShape;\n\n  if (keepDims) {\n    // reshape\n    var _newShape = backend_util.expandShapeToKeepDim(maxOutShape, origAxes);\n\n    outShape = _newShape;\n  }\n\n  return {\n    dataId: dataId,\n    shape: outShape,\n    dtype: x.dtype\n  };\n}\nexport var maxConfig = {\n  kernelName: Max,\n  backendName: 'cpu',\n  kernelFunc: max\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Maximum } from '@tensorflow/tfjs-core';\nimport { createSimpleBinaryKernelImpl } from '../utils/binary_impl';\nimport { binaryKernelFunc } from '../utils/binary_utils';\nexport var maximumImpl = createSimpleBinaryKernelImpl(function (aValue, bValue) {\n  return Math.max(aValue, bValue);\n});\nexport var maximum = binaryKernelFunc(Maximum, maximumImpl);\nexport var maximumConfig = {\n  kernelName: Maximum,\n  backendName: 'cpu',\n  kernelFunc: maximum\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, MaxPool, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nimport { pool } from '../utils/pool_utils';\nimport { identity } from './Identity';\nexport function maxPool(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  assertNotComplex(x, 'maxPool');\n  var filterSize = attrs.filterSize,\n      strides = attrs.strides,\n      pad = attrs.pad,\n      dimRoundingMode = attrs.dimRoundingMode;\n  var dilations = 1;\n  util.assert(backend_util.eitherStridesOrDilationsAreOne(strides, dilations), function () {\n    return 'Error in maxPool: Either strides or dilations must be 1. ' + \"Got strides \".concat(strides, \" and dilations '\").concat(dilations, \"'\");\n  });\n  var convInfo = backend_util.computePool2DInfo(x.shape, filterSize, strides, dilations, pad, dimRoundingMode);\n  var res;\n\n  if (convInfo.filterWidth === 1 && convInfo.filterHeight === 1 && util.arraysEqual(convInfo.inShape, convInfo.outShape)) {\n    res = identity({\n      inputs: {\n        x: x\n      },\n      backend: backend\n    });\n  } else {\n    var xValues = backend.data.get(x.dataId).values;\n\n    var _strides = util.computeStrides(x.shape);\n\n    var buffer = pool(xValues, x.shape, x.dtype, _strides, convInfo, 'max');\n    res = backend.makeTensorInfo(convInfo.outShape, x.dtype, buffer.values);\n  }\n\n  return res;\n}\nexport var maxPoolConfig = {\n  kernelName: MaxPool,\n  backendName: 'cpu',\n  kernelFunc: maxPool\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, MaxPool3D, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nimport { pool3d } from '../utils/pool_utils';\nexport function maxPool3D(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  var filterSize = attrs.filterSize,\n      strides = attrs.strides,\n      pad = attrs.pad,\n      dimRoundingMode = attrs.dimRoundingMode,\n      dataFormat = attrs.dataFormat;\n  assertNotComplex(x, 'maxPool3d');\n  var convInfo = backend_util.computePool3DInfo(x.shape, filterSize, strides, 1\n  /* dilations */\n  , pad, dimRoundingMode, dataFormat);\n  var xValues = backend.data.get(x.dataId).values;\n  var outBuf = pool3d(xValues, x.shape, x.dtype, util.computeStrides(x.shape), convInfo, 'max');\n  return backend.makeTensorInfo(outBuf.shape, 'float32', outBuf.values);\n}\nexport var maxPool3DConfig = {\n  kernelName: MaxPool3D,\n  backendName: 'cpu',\n  kernelFunc: maxPool3D\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, buffer, MaxPool3DGrad } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nimport { maxPool3dPositions } from '../utils/pool_utils';\nexport function maxPool3DGrad(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var dy = inputs.dy,\n      input = inputs.input;\n  var filterSize = attrs.filterSize,\n      strides = attrs.strides,\n      pad = attrs.pad,\n      dimRoundingMode = attrs.dimRoundingMode;\n  assertNotComplex([dy, input], 'maxPool3DGrad');\n  var convInfo = backend_util.computePool3DInfo(input.shape, filterSize, strides, 1\n  /* dilations */\n  , pad, dimRoundingMode);\n  var inputBuf = backend.bufferSync(input);\n  var maxPosBuf = maxPool3dPositions(inputBuf, convInfo);\n  var strideDepth = convInfo.strideDepth;\n  var strideHeight = convInfo.strideHeight;\n  var strideWidth = convInfo.strideWidth;\n  var dilationDepth = convInfo.dilationDepth;\n  var dilationHeight = convInfo.dilationHeight;\n  var dilationWidth = convInfo.dilationWidth;\n  var effectiveFilterDepth = convInfo.effectiveFilterDepth;\n  var effectiveFilterHeight = convInfo.effectiveFilterHeight;\n  var effectiveFilterWidth = convInfo.effectiveFilterWidth;\n  var padFront = effectiveFilterDepth - 1 - convInfo.padInfo.front;\n  var padLeft = effectiveFilterWidth - 1 - convInfo.padInfo.left;\n  var padTop = effectiveFilterHeight - 1 - convInfo.padInfo.top;\n  var dx = buffer(input.shape, 'float32');\n  var dyBuf = backend.bufferSync(dy);\n\n  for (var batch = 0; batch < convInfo.batchSize; ++batch) {\n    for (var channel = 0; channel < convInfo.inChannels; ++channel) {\n      for (var dxDepth = 0; dxDepth < convInfo.inDepth; ++dxDepth) {\n        for (var dxRow = 0; dxRow < convInfo.inHeight; ++dxRow) {\n          for (var dxCol = 0; dxCol < convInfo.inWidth; ++dxCol) {\n            // Shader code begins\n            var dyDepthCorner = dxDepth - padFront;\n            var dyRowCorner = dxRow - padTop;\n            var dyColCorner = dxCol - padLeft;\n            var dotProd = 0;\n\n            for (var wDepth = 0; wDepth < effectiveFilterDepth; wDepth += dilationDepth) {\n              var dyDepth = (dyDepthCorner + wDepth) / strideDepth;\n\n              if (dyDepth < 0 || dyDepth >= convInfo.outDepth || Math.floor(dyDepth) !== dyDepth) {\n                continue;\n              }\n\n              for (var wRow = 0; wRow < effectiveFilterHeight; wRow += dilationHeight) {\n                var dyRow = (dyRowCorner + wRow) / strideHeight;\n\n                if (dyRow < 0 || dyRow >= convInfo.outHeight || Math.floor(dyRow) !== dyRow) {\n                  continue;\n                }\n\n                for (var wCol = 0; wCol < effectiveFilterWidth; wCol += dilationWidth) {\n                  var dyCol = (dyColCorner + wCol) / strideWidth;\n\n                  if (dyCol < 0 || dyCol >= convInfo.outWidth || Math.floor(dyCol) !== dyCol) {\n                    continue;\n                  }\n\n                  var maxPos = effectiveFilterDepth * effectiveFilterHeight * effectiveFilterWidth - 1 - maxPosBuf.get(batch, dyDepth, dyRow, dyCol, channel);\n                  var curPos = wDepth * effectiveFilterHeight * effectiveFilterWidth + wRow * effectiveFilterWidth + wCol;\n                  var mask = maxPos === curPos ? 1 : 0;\n\n                  if (mask === 0) {\n                    continue;\n                  }\n\n                  var pixel = dyBuf.get(batch, dyDepth, dyRow, dyCol, channel);\n                  dotProd += pixel * mask;\n                }\n              }\n            }\n\n            dx.set(dotProd, batch, dxDepth, dxRow, dxCol, channel);\n          }\n        }\n      }\n    }\n  }\n\n  return backend.makeTensorInfo(dx.shape, dx.dtype, dx.values);\n}\nexport var maxPool3DGradConfig = {\n  kernelName: MaxPool3DGrad,\n  backendName: 'cpu',\n  kernelFunc: maxPool3DGrad\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, buffer, MaxPoolGrad } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nimport { maxPoolPositions } from '../utils/pool_utils';\nexport function maxPoolGrad(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var dy = inputs.dy,\n      input = inputs.input,\n      output = inputs.output;\n  var x = input;\n  assertNotComplex([input, output], 'maxPoolGrad');\n  var filterSize = attrs.filterSize,\n      strides = attrs.strides,\n      pad = attrs.pad,\n      dimRoundingMode = attrs.dimRoundingMode;\n  var convInfo = backend_util.computePool2DInfo(x.shape, filterSize, strides, 1\n  /* dilations */\n  , pad, dimRoundingMode);\n  var xValues = backend.data.get(x.dataId).values;\n  var maxPosBuf = buffer(convInfo.outShape, x.dtype, maxPoolPositions(xValues, x.shape, x.dtype, convInfo).values);\n  var strideHeight = convInfo.strideHeight;\n  var strideWidth = convInfo.strideWidth;\n  var dilationHeight = convInfo.dilationHeight;\n  var dilationWidth = convInfo.dilationWidth;\n  var effectiveFilterHeight = convInfo.effectiveFilterHeight;\n  var effectiveFilterWidth = convInfo.effectiveFilterWidth;\n  var padLeft = effectiveFilterWidth - 1 - convInfo.padInfo.left;\n  var padTop = effectiveFilterHeight - 1 - convInfo.padInfo.top;\n  var dx = buffer(x.shape, 'float32');\n  var dyData = backend.data.get(dy.dataId).values;\n  var dyBuf = buffer(dy.shape, 'float32', dyData);\n\n  for (var b = 0; b < convInfo.batchSize; ++b) {\n    for (var d = 0; d < convInfo.inChannels; ++d) {\n      for (var dxR = 0; dxR < convInfo.inHeight; ++dxR) {\n        for (var dxC = 0; dxC < convInfo.inWidth; ++dxC) {\n          // Shader code begins.\n          var dyRCorner = dxR - padTop;\n          var dyCCorner = dxC - padLeft;\n          var dotProd = 0;\n\n          for (var wR = 0; wR < effectiveFilterHeight; wR += dilationHeight) {\n            var dyR = (dyRCorner + wR) / strideHeight;\n\n            if (dyR < 0 || dyR >= convInfo.outHeight || Math.floor(dyR) !== dyR) {\n              continue;\n            }\n\n            for (var wC = 0; wC < effectiveFilterWidth; wC += dilationWidth) {\n              var dyC = (dyCCorner + wC) / strideWidth;\n\n              if (dyC < 0 || dyC >= convInfo.outWidth || Math.floor(dyC) !== dyC) {\n                continue;\n              }\n\n              var maxPos = effectiveFilterHeight * effectiveFilterWidth - 1 - maxPosBuf.get(b, dyR, dyC, d);\n              var curPos = wR * effectiveFilterWidth + wC;\n              var mask = maxPos === curPos ? 1 : 0;\n\n              if (mask === 0) {\n                continue;\n              }\n\n              var pixel = dyBuf.get(b, dyR, dyC, d);\n              dotProd += pixel * mask;\n            }\n          }\n\n          dx.set(dotProd, b, dxR, dxC, d);\n        }\n      }\n    }\n  }\n\n  return backend.makeTensorInfo(dx.shape, dx.dtype, dx.values);\n}\nexport var maxPoolGradConfig = {\n  kernelName: MaxPoolGrad,\n  backendName: 'cpu',\n  kernelFunc: maxPoolGrad\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { MaxPoolWithArgmax } from '@tensorflow/tfjs-core';\nimport { backend_util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nimport { maxPoolWithArgmaxImpl } from './MaxPoolWithArgmax_impl';\nexport var maxPoolWithArgmaxConfig = {\n  kernelName: MaxPoolWithArgmax,\n  backendName: 'cpu',\n  kernelFunc: function kernelFunc(_ref) {\n    var inputs = _ref.inputs,\n        attrs = _ref.attrs,\n        backend = _ref.backend;\n    var x = inputs.x;\n    var filterSize = attrs.filterSize,\n        strides = attrs.strides,\n        pad = attrs.pad,\n        includeBatchInIndex = attrs.includeBatchInIndex;\n    var cpuBackend = backend;\n    assertNotComplex(x, 'MaxPoolWithArgmax');\n    var values = cpuBackend.data.get(x.dataId).values;\n    var convInfo = backend_util.computePool2DInfo(x.shape, filterSize, strides, [1, 1], pad);\n\n    var _maxPoolWithArgmaxImp = maxPoolWithArgmaxImpl(values, x.shape, x.dtype, includeBatchInIndex, convInfo),\n        _maxPoolWithArgmaxImp2 = _slicedToArray(_maxPoolWithArgmaxImp, 2),\n        pooled = _maxPoolWithArgmaxImp2[0],\n        indexes = _maxPoolWithArgmaxImp2[1];\n\n    var pooledDataId = cpuBackend.write(pooled, convInfo.outShape, x.dtype);\n    var indexesDataId = cpuBackend.write(indexes, convInfo.outShape, x.dtype);\n    return [{\n      dataId: pooledDataId,\n      shape: convInfo.outShape,\n      dtype: x.dtype\n    }, {\n      dataId: indexesDataId,\n      shape: convInfo.outShape,\n      dtype: 'int32'\n    }];\n  }\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\nimport { maxPoolPositions, pool } from '../utils/pool_utils';\nexport function maxPoolWithArgmaxImpl(xValues, xShape, dtype, includeBatchInIndex, convInfo) {\n  var strides = util.computeStrides(xShape);\n  var maxPools = pool(xValues, xShape, dtype, strides, convInfo, 'max');\n  var maxPositions = maxPoolPositions(xValues, xShape, dtype, convInfo, true, includeBatchInIndex);\n  return [maxPools.values, maxPositions.values];\n}","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Mean, util } from '@tensorflow/tfjs-core';\nimport { cast } from './Cast';\nimport { div } from './RealDiv';\nimport { sum } from './Sum';\nexport function mean(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  var axis = attrs.axis,\n      keepDims = attrs.keepDims;\n  var axes = util.parseAxisParam(axis, x.shape);\n  var shapes = backend_util.computeOutAndReduceShapes(x.shape, axes);\n  var reduceShape = shapes[1];\n  var reduceSize = util.sizeFromShape(reduceShape);\n  var toDispose = [];\n  var reduceSizeScalar = backend.makeTensorInfo([], 'float32', new Float32Array([reduceSize]));\n  toDispose.push(reduceSizeScalar);\n  var $x = cast({\n    inputs: {\n      x: x\n    },\n    backend: backend,\n    attrs: {\n      dtype: 'float32'\n    }\n  });\n  toDispose.push($x);\n  var res = div({\n    inputs: {\n      a: $x,\n      b: reduceSizeScalar\n    },\n    backend: backend\n  });\n  toDispose.push(res);\n  var result = sum({\n    inputs: {\n      x: res\n    },\n    backend: backend,\n    attrs: {\n      axis: axis,\n      keepDims: keepDims\n    }\n  });\n  toDispose.forEach(function (t) {\n    return backend.disposeIntermediateTensorInfo(t);\n  });\n  return result;\n}\nexport var meanConfig = {\n  kernelName: Mean,\n  backendName: 'cpu',\n  kernelFunc: mean\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Min, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nimport { reshape } from './Reshape';\nimport { transpose } from './Transpose';\nexport function min(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  var axis = attrs.axis,\n      keepDims = attrs.keepDims;\n  assertNotComplex(x, 'min');\n  var origAxes = util.parseAxisParam(axis, x.shape);\n  var axes = origAxes;\n  var permutedAxes = backend_util.getAxesPermutation(axes, x.shape.length);\n  var $x = x;\n\n  if (permutedAxes != null) {\n    $x = transpose({\n      inputs: {\n        x: x\n      },\n      backend: backend,\n      attrs: {\n        perm: permutedAxes\n      }\n    });\n    axes = backend_util.getInnerMostAxes(axes.length, x.shape.length);\n  }\n\n  backend_util.assertAxesAreInnerMostDims('min', axes, $x.shape.length);\n\n  var _backend_util$compute = backend_util.computeOutAndReduceShapes($x.shape, axes),\n      _backend_util$compute2 = _slicedToArray(_backend_util$compute, 2),\n      outShape = _backend_util$compute2[0],\n      reduceShape = _backend_util$compute2[1];\n\n  var reduceSize = util.sizeFromShape(reduceShape);\n  var vals = util.makeZerosTypedArray(util.sizeFromShape(outShape), $x.dtype);\n  var aVals = backend.data.get($x.dataId).values;\n\n  for (var i = 0; i < vals.length; ++i) {\n    var offset = i * reduceSize;\n    var _min = aVals[offset];\n\n    for (var j = 0; j < reduceSize; ++j) {\n      var value = aVals[offset + j];\n\n      if (value < _min) {\n        _min = value;\n      }\n    }\n\n    vals[i] = _min;\n  }\n\n  if (permutedAxes != null) {\n    backend.disposeIntermediateTensorInfo($x);\n  }\n\n  var result = backend.makeTensorInfo(outShape, $x.dtype, vals);\n\n  if (keepDims) {\n    var expandedShape = backend_util.expandShapeToKeepDim(outShape, origAxes);\n    var reshapedResult = reshape({\n      inputs: {\n        x: result\n      },\n      backend: backend,\n      attrs: {\n        shape: expandedShape\n      }\n    });\n    backend.disposeIntermediateTensorInfo(result);\n    return reshapedResult;\n  }\n\n  return result;\n}\nexport var minConfig = {\n  kernelName: Min,\n  backendName: 'cpu',\n  kernelFunc: min\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Minimum } from '@tensorflow/tfjs-core';\nimport { createSimpleBinaryKernelImpl } from '../utils/binary_impl';\nimport { binaryKernelFunc } from '../utils/binary_utils';\nexport var minimumImpl = createSimpleBinaryKernelImpl(function (aValue, bValue) {\n  return Math.min(aValue, bValue);\n});\nexport var minimum = binaryKernelFunc(Minimum, minimumImpl);\nexport var minimumConfig = {\n  kernelName: Minimum,\n  backendName: 'cpu',\n  kernelFunc: minimum\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { MirrorPad, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nexport function mirrorPad(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  var paddings = attrs.paddings,\n      mode = attrs.mode;\n  assertNotComplex(x, 'mirrorPad');\n  var outShape = paddings.map(function (p, i) {\n    return p[0]\n    /* beforePad */\n    + x.shape[i] + p[1];\n  }\n  /* afterPad */\n  );\n  var start = paddings.map(function (p) {\n    return p[0];\n  });\n  var end = paddings.map(function (p, i) {\n    return p[0] + x.shape[i];\n  });\n  var offset = mode === 'reflect' ? 0 : 1;\n  var xVals = backend.data.get(x.dataId).values;\n  var xRank = x.shape.length;\n  var xStrides = util.computeStrides(x.shape);\n  var resultSize = util.sizeFromShape(outShape);\n  var resultRank = outShape.length;\n  var resultStrides = util.computeStrides(outShape);\n  var resVals = util.getTypedArrayFromDType(x.dtype, resultSize);\n\n  for (var i = 0; i < resultSize; i++) {\n    var coords = util.indexToLoc(i, resultRank, resultStrides);\n\n    for (var _i = 0; _i < resultRank; _i++) {\n      if (coords[_i] < start[_i]) {\n        coords[_i] = start[_i] * 2 - coords[_i] - offset;\n      } else if (coords[_i] >= end[_i]) {\n        coords[_i] = (end[_i] - 1) * 2 - coords[_i] + offset;\n      }\n    }\n\n    coords = coords.map(function (c, i) {\n      return c - start[i];\n    });\n    var inIndex = util.locToIndex(coords, xRank, xStrides);\n    resVals[i] = xVals[inIndex];\n  }\n\n  var outId = backend.write(resVals, outShape, x.dtype);\n  return {\n    dataId: outId,\n    shape: outShape,\n    dtype: x.dtype\n  };\n}\nexport var mirrorPadConfig = {\n  kernelName: MirrorPad,\n  backendName: 'cpu',\n  kernelFunc: mirrorPad\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Mod } from '@tensorflow/tfjs-core';\nimport { createSimpleBinaryKernelImpl } from '../utils/binary_impl';\nimport { binaryKernelFunc } from '../utils/binary_utils';\nexport var modImpl = createSimpleBinaryKernelImpl(function (aValue, bValue) {\n  var rem = aValue % bValue;\n\n  if (aValue < 0 && bValue < 0 || aValue >= 0 && bValue >= 0) {\n    return rem;\n  } else {\n    return (rem + bValue) % bValue;\n  }\n});\nexport var mod = binaryKernelFunc(Mod, modImpl);\nexport var modConfig = {\n  kernelName: Mod,\n  backendName: 'cpu',\n  kernelFunc: mod\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Softmax, util } from '@tensorflow/tfjs-core';\nimport { exp } from './Exp';\nimport { max } from './Max';\nimport { div } from './RealDiv';\nimport { reshape } from './Reshape';\nimport { sub } from './Sub';\nimport { sum } from './Sum';\nexport function softmax(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var logits = inputs.logits;\n  var dim = attrs.dim;\n  var logitsRank = logits.shape.length;\n  var $dim = dim;\n\n  if ($dim === -1) {\n    $dim = logitsRank - 1;\n  }\n\n  if ($dim !== logitsRank - 1) {\n    throw Error('Softmax along a non-last dimension is not yet supported. ' + \"Logits was rank \".concat(logitsRank, \" and dim was \").concat($dim));\n  }\n\n  var axes = util.parseAxisParam([$dim], logits.shape);\n  var maxLogit = max({\n    inputs: {\n      x: logits\n    },\n    backend: backend,\n    attrs: {\n      reductionIndices: axes,\n      keepDims: false\n    }\n  });\n  var expandedShape = backend_util.expandShapeToKeepDim(maxLogit.shape, axes);\n  var maxLogitReshaped = reshape({\n    inputs: {\n      x: maxLogit\n    },\n    backend: backend,\n    attrs: {\n      shape: expandedShape\n    }\n  });\n  var a = sub({\n    inputs: {\n      a: logits,\n      b: maxLogitReshaped\n    },\n    backend: backend\n  });\n  var b = exp({\n    inputs: {\n      x: a\n    },\n    backend: backend\n  });\n  var sumExp = sum({\n    inputs: {\n      x: b\n    },\n    backend: backend,\n    attrs: {\n      axis: axes,\n      keepDims: false\n    }\n  });\n  var sumReshaped = reshape({\n    inputs: {\n      x: sumExp\n    },\n    backend: backend,\n    attrs: {\n      shape: expandedShape\n    }\n  });\n  var result = div({\n    inputs: {\n      a: b,\n      b: sumReshaped\n    },\n    backend: backend\n  });\n  backend.disposeIntermediateTensorInfo(maxLogit);\n  backend.disposeIntermediateTensorInfo(maxLogitReshaped);\n  backend.disposeIntermediateTensorInfo(a);\n  backend.disposeIntermediateTensorInfo(b);\n  backend.disposeIntermediateTensorInfo(sumExp);\n  backend.disposeIntermediateTensorInfo(sumReshaped);\n  return result;\n}\nexport var softmaxConfig = {\n  kernelName: Softmax,\n  backendName: 'cpu',\n  kernelFunc: softmax\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Multinomial, util } from '@tensorflow/tfjs-core';\nimport * as seedrandom from 'seedrandom';\nimport { assertNotComplex } from '../cpu_util';\nimport { softmax } from './Softmax';\nexport function multinomial(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var logits = inputs.logits;\n  var numSamples = attrs.numSamples,\n      seed = attrs.seed,\n      normalized = attrs.normalized;\n  assertNotComplex(logits, 'multinomial');\n  var probabilities = normalized ? logits : softmax({\n    inputs: {\n      logits: logits\n    },\n    backend: backend,\n    attrs: {\n      dim: -1\n    }\n  });\n  var batchSize = probabilities.shape[0];\n  var numEvents = probabilities.shape[1];\n  var probVals = backend.data.get(probabilities.dataId).values;\n  var resShape = [batchSize, numSamples];\n  var resVals = util.makeZerosTypedArray(util.sizeFromShape(resShape), 'int32');\n\n  for (var b = 0; b < batchSize; ++b) {\n    var offset = b * numEvents; // The cdf won't include the last event. It will be implicit if no other\n    // event happened.\n\n    var cdf = new Float32Array(numEvents - 1);\n    cdf[0] = probVals[offset];\n\n    for (var event = 1; event < cdf.length; ++event) {\n      cdf[event] = cdf[event - 1] + probVals[offset + event];\n    }\n\n    var random = seedrandom.alea(seed.toString());\n    var outOffset = b * numSamples;\n\n    for (var sampleId = 0; sampleId < numSamples; ++sampleId) {\n      var r = random(); // Assume last event happened by default.\n\n      resVals[outOffset + sampleId] = cdf.length;\n\n      for (var _event = 0; _event < cdf.length; _event++) {\n        if (r < cdf[_event]) {\n          resVals[outOffset + sampleId] = _event;\n          break;\n        }\n      }\n    }\n  }\n\n  if (!normalized) {\n    backend.disposeIntermediateTensorInfo(probabilities);\n  }\n\n  return backend.makeTensorInfo(resShape, 'int32', resVals);\n}\nexport var multinomialConfig = {\n  kernelName: Multinomial,\n  backendName: 'cpu',\n  kernelFunc: multinomial\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Neg, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nimport { multiplyImpl } from './Multiply';\nexport function negImpl(xVals, xShape, xDtype) {\n  var minusOne = util.createScalarValue(-1, xDtype);\n  return multiplyImpl([], xShape, minusOne, xVals, xDtype);\n}\nexport function neg(args) {\n  var inputs = args.inputs,\n      backend = args.backend;\n  var x = inputs.x;\n  assertNotComplex(x, 'neg');\n  var xVals = backend.data.get(x.dataId).values;\n\n  var _negImpl = negImpl(xVals, x.shape, x.dtype),\n      _negImpl2 = _slicedToArray(_negImpl, 2),\n      res = _negImpl2[0],\n      newShape = _negImpl2[1];\n\n  return backend.makeTensorInfo(newShape, x.dtype, res);\n}\nexport var negConfig = {\n  kernelName: Neg,\n  backendName: 'cpu',\n  kernelFunc: neg\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { kernel_impls, NonMaxSuppressionV3 } from '@tensorflow/tfjs-core';\nvar nonMaxSuppressionV3Impl = kernel_impls.nonMaxSuppressionV3Impl;\nimport { assertNotComplex } from '../cpu_util';\nexport function nonMaxSuppressionV3(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var boxes = inputs.boxes,\n      scores = inputs.scores;\n  var maxOutputSize = attrs.maxOutputSize,\n      iouThreshold = attrs.iouThreshold,\n      scoreThreshold = attrs.scoreThreshold;\n  assertNotComplex(boxes, 'NonMaxSuppression');\n  var boxesVals = backend.data.get(boxes.dataId).values;\n  var scoresVals = backend.data.get(scores.dataId).values;\n\n  var _nonMaxSuppressionV3I = nonMaxSuppressionV3Impl(boxesVals, scoresVals, maxOutputSize, iouThreshold, scoreThreshold),\n      selectedIndices = _nonMaxSuppressionV3I.selectedIndices;\n\n  return backend.makeTensorInfo([selectedIndices.length], 'int32', new Int32Array(selectedIndices));\n}\nexport var nonMaxSuppressionV3Config = {\n  kernelName: NonMaxSuppressionV3,\n  backendName: 'cpu',\n  kernelFunc: nonMaxSuppressionV3\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { kernel_impls, NonMaxSuppressionV4 } from '@tensorflow/tfjs-core';\nvar nonMaxSuppressionV4Impl = kernel_impls.nonMaxSuppressionV4Impl;\nimport { assertNotComplex } from '../cpu_util';\nexport function nonMaxSuppressionV4(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var boxes = inputs.boxes,\n      scores = inputs.scores;\n  var maxOutputSize = attrs.maxOutputSize,\n      iouThreshold = attrs.iouThreshold,\n      scoreThreshold = attrs.scoreThreshold,\n      padToMaxOutputSize = attrs.padToMaxOutputSize;\n  assertNotComplex(boxes, 'NonMaxSuppressionPadded');\n  var boxesVals = backend.data.get(boxes.dataId).values;\n  var scoresVals = backend.data.get(scores.dataId).values;\n\n  var _nonMaxSuppressionV4I = nonMaxSuppressionV4Impl(boxesVals, scoresVals, maxOutputSize, iouThreshold, scoreThreshold, padToMaxOutputSize),\n      selectedIndices = _nonMaxSuppressionV4I.selectedIndices,\n      validOutputs = _nonMaxSuppressionV4I.validOutputs;\n\n  return [backend.makeTensorInfo([selectedIndices.length], 'int32', new Int32Array(selectedIndices)), backend.makeTensorInfo([], 'int32', new Int32Array([validOutputs]))];\n}\nexport var nonMaxSuppressionV4Config = {\n  kernelName: NonMaxSuppressionV4,\n  backendName: 'cpu',\n  kernelFunc: nonMaxSuppressionV4\n};","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { kernel_impls, NonMaxSuppressionV5 } from '@tensorflow/tfjs-core';\nvar nonMaxSuppressionV5Impl = kernel_impls.nonMaxSuppressionV5Impl;\nimport { assertNotComplex } from '../cpu_util';\nexport function nonMaxSuppressionV5(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var boxes = inputs.boxes,\n      scores = inputs.scores;\n  var maxOutputSize = attrs.maxOutputSize,\n      iouThreshold = attrs.iouThreshold,\n      scoreThreshold = attrs.scoreThreshold,\n      softNmsSigma = attrs.softNmsSigma;\n  assertNotComplex(boxes, 'NonMaxSuppressionWithScore');\n  var boxesVals = backend.data.get(boxes.dataId).values;\n  var scoresVals = backend.data.get(scores.dataId).values;\n  var maxOutputSizeVal = maxOutputSize;\n  var iouThresholdVal = iouThreshold;\n  var scoreThresholdVal = scoreThreshold;\n  var softNmsSigmaVal = softNmsSigma;\n\n  var _nonMaxSuppressionV5I = nonMaxSuppressionV5Impl(boxesVals, scoresVals, maxOutputSizeVal, iouThresholdVal, scoreThresholdVal, softNmsSigmaVal),\n      selectedIndices = _nonMaxSuppressionV5I.selectedIndices,\n      selectedScores = _nonMaxSuppressionV5I.selectedScores;\n\n  return [backend.makeTensorInfo([selectedIndices.length], 'int32', new Int32Array(selectedIndices)), backend.makeTensorInfo([selectedScores.length], 'float32', new Float32Array(selectedScores))];\n}\nexport var nonMaxSuppressionV5Config = {\n  kernelName: NonMaxSuppressionV5,\n  backendName: 'cpu',\n  kernelFunc: nonMaxSuppressionV5\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { NotEqual } from '@tensorflow/tfjs-core';\nimport { createSimpleBinaryKernelImpl } from '../utils/binary_impl';\nimport { binaryKernelFunc } from '../utils/binary_utils';\nexport var notEqualImpl = createSimpleBinaryKernelImpl(function (a, b) {\n  return a !== b ? 1 : 0;\n});\nexport var notEqual = binaryKernelFunc(NotEqual, notEqualImpl, null\n/* complexOp */\n, 'bool');\nexport var notEqualConfig = {\n  kernelName: NotEqual,\n  backendName: 'cpu',\n  kernelFunc: notEqual\n};","import _toConsumableArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { OneHot, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nexport function oneHot(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var indices = inputs.indices;\n  var depth = attrs.depth,\n      onValue = attrs.onValue,\n      offValue = attrs.offValue;\n  assertNotComplex(indices, 'oneHot');\n  var indicesSize = util.sizeFromShape(indices.shape);\n  var res = new Float32Array(indicesSize * depth);\n  res.fill(offValue);\n  var indicesVal = backend.data.get(indices.dataId).values;\n\n  for (var event = 0; event < indicesSize; ++event) {\n    if (indicesVal[event] >= 0 && indicesVal[event] < depth) {\n      res[event * depth + indicesVal[event]] = onValue;\n    }\n  }\n\n  return backend.makeTensorInfo([].concat(_toConsumableArray(indices.shape), [depth]), 'int32', res);\n}\nexport var oneHotConfig = {\n  kernelName: OneHot,\n  backendName: 'cpu',\n  kernelFunc: oneHot\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ZerosLike } from '@tensorflow/tfjs-core';\nimport { complex } from './Complex';\nimport { fill } from './Fill';\nimport { imag } from './Imag';\nimport { real } from './Real';\nexport function zerosLike(args) {\n  var inputs = args.inputs,\n      backend = args.backend;\n  var x = inputs.x;\n\n  if (x.dtype === 'string') {\n    throw new Error('zerosLike is not supported for string tensors');\n  } else if (x.dtype === 'complex64') {\n    var realPart = real({\n      inputs: {\n        input: x\n      },\n      backend: backend\n    });\n    var r = zerosLike({\n      inputs: {\n        x: realPart\n      },\n      backend: backend\n    });\n    var imagPart = imag({\n      inputs: {\n        input: x\n      },\n      backend: backend\n    });\n    var i = zerosLike({\n      inputs: {\n        x: imagPart\n      },\n      backend: backend\n    });\n    var result = complex({\n      inputs: {\n        real: r,\n        imag: i\n      },\n      backend: backend\n    });\n    backend.disposeIntermediateTensorInfo(realPart);\n    backend.disposeIntermediateTensorInfo(r);\n    backend.disposeIntermediateTensorInfo(imagPart);\n    backend.disposeIntermediateTensorInfo(i);\n    return result;\n  } else {\n    return fill({\n      backend: backend,\n      attrs: {\n        shape: x.shape,\n        value: 0,\n        dtype: x.dtype\n      }\n    });\n  }\n}\nexport var zerosLikeConfig = {\n  kernelName: ZerosLike,\n  backendName: 'cpu',\n  kernelFunc: zerosLike\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { OnesLike } from '@tensorflow/tfjs-core';\nimport { complex } from './Complex';\nimport { fill } from './Fill';\nimport { imag } from './Imag';\nimport { real } from './Real';\nimport { zerosLike } from './ZerosLike';\nexport function onesLike(args) {\n  var inputs = args.inputs,\n      backend = args.backend;\n  var x = inputs.x;\n\n  if (x.dtype === 'string') {\n    throw new Error('onesLike is not supported for string tensors');\n  } else if (x.dtype === 'complex64') {\n    var realPart = real({\n      inputs: {\n        input: x\n      },\n      backend: backend\n    });\n    var r = onesLike({\n      inputs: {\n        x: realPart\n      },\n      backend: backend\n    });\n    var imagPart = imag({\n      inputs: {\n        input: x\n      },\n      backend: backend\n    });\n    var i = zerosLike({\n      inputs: {\n        x: imagPart\n      },\n      backend: backend\n    });\n    var result = complex({\n      inputs: {\n        real: r,\n        imag: i\n      },\n      backend: backend\n    });\n    backend.disposeIntermediateTensorInfo(realPart);\n    backend.disposeIntermediateTensorInfo(r);\n    backend.disposeIntermediateTensorInfo(imagPart);\n    backend.disposeIntermediateTensorInfo(i);\n    return result;\n  } else {\n    return fill({\n      backend: backend,\n      attrs: {\n        shape: x.shape,\n        value: 1,\n        dtype: x.dtype\n      }\n    });\n  }\n}\nexport var onesLikeConfig = {\n  kernelName: OnesLike,\n  backendName: 'cpu',\n  kernelFunc: onesLike\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Pack, util } from '@tensorflow/tfjs-core';\nimport { concat } from './Concat';\nimport { expandDims } from './ExpandDims';\nexport function pack(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var axis = attrs.axis;\n\n  if (inputs.length === 1) {\n    return expandDims({\n      inputs: {\n        input: inputs[0]\n      },\n      backend: backend,\n      attrs: {\n        dim: axis\n      }\n    });\n  }\n\n  var shape = inputs[0].shape;\n  var dtype = inputs[0].dtype;\n  inputs.forEach(function (t) {\n    util.assertShapesMatch(shape, t.shape, 'All tensors passed to stack must have matching shapes');\n    util.assert(dtype === t.dtype, function () {\n      return 'All tensors passed to stack must have matching dtypes';\n    });\n  });\n  var intermediateTensorInfos = [];\n  var expandedTensors = inputs.map(function (t) {\n    var expandedT = expandDims({\n      inputs: {\n        input: t\n      },\n      backend: backend,\n      attrs: {\n        dim: axis\n      }\n    });\n    intermediateTensorInfos.push(expandedT);\n    return expandedT;\n  });\n  var result = concat({\n    inputs: expandedTensors,\n    backend: backend,\n    attrs: {\n      axis: axis\n    }\n  });\n  intermediateTensorInfos.forEach(function (t) {\n    return backend.disposeIntermediateTensorInfo(t);\n  });\n  return result;\n}\nexport var packConfig = {\n  kernelName: Pack,\n  backendName: 'cpu',\n  kernelFunc: pack\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { PadV2, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nexport function padV2(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  var paddings = attrs.paddings,\n      constantValue = attrs.constantValue;\n  assertNotComplex(x, 'pad');\n  var outShape = paddings.map(function (p, i) {\n    return p[0]\n    /* beforePad */\n    + x.shape[i] + p[1];\n  }\n  /* afterPad */\n  );\n  var start = paddings.map(function (p) {\n    return p[0];\n  });\n  var xVals = backend.data.get(x.dataId).values;\n  var xSize = util.sizeFromShape(x.shape);\n  var xRank = x.shape.length;\n  var xStrides = util.computeStrides(x.shape);\n  var resultSize = util.sizeFromShape(outShape);\n  var resultRank = outShape.length;\n  var resultStrides = util.computeStrides(outShape);\n  var resVals = util.getTypedArrayFromDType(x.dtype, resultSize);\n\n  if (constantValue !== 0) {\n    resVals.fill(constantValue);\n  }\n\n  for (var i = 0; i < xSize; i++) {\n    var coords = util.indexToLoc(i, xRank, xStrides);\n    var outCoords = coords.map(function (c, i) {\n      return c + start[i];\n    });\n    var outIndex = util.locToIndex(outCoords, resultRank, resultStrides);\n    resVals[outIndex] = xVals[i];\n  }\n\n  var outId = backend.write(resVals, outShape, x.dtype);\n  return {\n    dataId: outId,\n    shape: outShape,\n    dtype: x.dtype\n  };\n}\nexport var padV2Config = {\n  kernelName: PadV2,\n  backendName: 'cpu',\n  kernelFunc: padV2\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Pow } from '@tensorflow/tfjs-core';\nimport { createSimpleBinaryKernelImpl } from '../utils/binary_impl';\nimport { binaryKernelFunc } from '../utils/binary_utils';\nexport var powImpl = createSimpleBinaryKernelImpl(function (a, b) {\n  return Math.pow(a, b);\n});\nexport var pow = binaryKernelFunc(Pow, powImpl);\nexport var powConfig = {\n  kernelName: Pow,\n  backendName: 'cpu',\n  kernelFunc: pow\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Prod, upcastType, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nimport { transpose } from './Transpose';\nexport function prodImpl(xShape, xDtype, xVals, reductionAxes) {\n  var _backend_util$compute = backend_util.computeOutAndReduceShapes(xShape, reductionAxes),\n      _backend_util$compute2 = _slicedToArray(_backend_util$compute, 2),\n      outShape = _backend_util$compute2[0],\n      reduceShape = _backend_util$compute2[1];\n\n  var outDtype = upcastType(xDtype, 'int32');\n  var outVals = util.makeZerosTypedArray(util.sizeFromShape(outShape), outDtype);\n  var reduceSize = util.sizeFromShape(reduceShape);\n\n  for (var i = 0; i < outVals.length; ++i) {\n    var offset = i * reduceSize;\n    var _prod = 1;\n\n    for (var j = 0; j < reduceSize; ++j) {\n      _prod *= xVals[offset + j];\n    }\n\n    outVals[i] = _prod;\n  }\n\n  return {\n    outVals: outVals,\n    outShape: outShape,\n    outDtype: outDtype\n  };\n}\nexport function prod(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  var axis = attrs.axis,\n      keepDims = attrs.keepDims;\n  assertNotComplex(x, 'prod');\n  var xRank = x.shape.length;\n  var axes = util.parseAxisParam(axis, x.shape);\n  var permutation = backend_util.getAxesPermutation(axes, xRank);\n  var reductionAxes = axes;\n  var permutedX = x;\n  var intermediateTensorInfos = [];\n\n  if (permutation != null) {\n    permutedX = transpose({\n      inputs: {\n        x: x\n      },\n      backend: backend,\n      attrs: {\n        perm: permutation\n      }\n    });\n    intermediateTensorInfos.push(permutedX);\n    reductionAxes = backend_util.getInnerMostAxes(reductionAxes.length, xRank);\n  }\n\n  var xVals = backend.data.get(permutedX.dataId).values;\n\n  var _prodImpl = prodImpl(permutedX.shape, permutedX.dtype, xVals, reductionAxes),\n      outVals = _prodImpl.outVals,\n      outShape = _prodImpl.outShape,\n      outDtype = _prodImpl.outDtype;\n\n  var resultShape = outShape;\n\n  if (keepDims) {\n    resultShape = backend_util.expandShapeToKeepDim(outShape, axes);\n  }\n\n  intermediateTensorInfos.forEach(function (t) {\n    return backend.disposeIntermediateTensorInfo(t);\n  });\n  return backend.makeTensorInfo(resultShape, outDtype, outVals);\n}\nexport var prodConfig = {\n  kernelName: Prod,\n  backendName: 'cpu',\n  kernelFunc: prod\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\nexport function rangeImpl(start, stop, step, dtype) {\n  var sameStartStop = start === stop;\n  var increasingRangeNegativeStep = start < stop && step < 0;\n  var decreasingRangePositiveStep = stop < start && step > 1;\n\n  if (sameStartStop || increasingRangeNegativeStep || decreasingRangePositiveStep) {\n    return util.makeZerosTypedArray(0, dtype);\n  }\n\n  var numElements = Math.abs(Math.ceil((stop - start) / step));\n  var values = util.makeZerosTypedArray(numElements, dtype);\n\n  if (stop < start && step === 1) {\n    // Auto adjust the step's sign if it hasn't been set\n    // (or was set to 1)\n    step = -1;\n  }\n\n  values[0] = start;\n\n  for (var i = 1; i < values.length; i++) {\n    values[i] = values[i - 1] + step;\n  }\n\n  return values;\n}","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Range } from '@tensorflow/tfjs-core';\nimport { rangeImpl } from './Range_impl';\nexport function range(args) {\n  var backend = args.backend,\n      attrs = args.attrs;\n  var start = attrs.start,\n      stop = attrs.stop,\n      dtype = attrs.dtype,\n      step = attrs.step;\n  var values = rangeImpl(start, stop, step, dtype);\n  return backend.makeTensorInfo([values.length], dtype, values);\n}\nexport var rangeConfig = {\n  kernelName: Range,\n  backendName: 'cpu',\n  kernelFunc: range\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Reciprocal } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../utils/unary_utils';\nexport var reciprocal = unaryKernelFunc(Reciprocal, function (xi) {\n  return 1 / xi;\n});\nexport var reciprocalConfig = {\n  kernelName: Reciprocal,\n  backendName: 'cpu',\n  kernelFunc: reciprocal\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ResizeBilinear, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nexport function resizeBilinear(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var images = inputs.images;\n  var alignCorners = attrs.alignCorners,\n      halfPixelCenters = attrs.halfPixelCenters,\n      size = attrs.size;\n  assertNotComplex(images, 'resizeBilinear');\n  var imagesStrides = util.computeStrides(images.shape);\n\n  var _size = _slicedToArray(size, 2),\n      newHeight = _size[0],\n      newWidth = _size[1];\n\n  var _images$shape = _slicedToArray(images.shape, 4),\n      batch = _images$shape[0],\n      oldHeight = _images$shape[1],\n      oldWidth = _images$shape[2],\n      numChannels = _images$shape[3];\n\n  var xValues = backend.data.get(images.dataId).values;\n  var result = new Float32Array(util.sizeFromShape([batch, newHeight, newWidth, numChannels]));\n  var effectiveInputSize = [alignCorners && newHeight > 1 ? oldHeight - 1 : oldHeight, alignCorners && newWidth > 1 ? oldWidth - 1 : oldWidth];\n  var effectiveOutputSize = [alignCorners && newHeight > 1 ? newHeight - 1 : newHeight, alignCorners && newWidth > 1 ? newWidth - 1 : newWidth];\n  var outputIdx = 0;\n  var effectiveRowSizeRatio = effectiveInputSize[0] / effectiveOutputSize[0];\n  var effectiveColSizeRatio = effectiveInputSize[1] / effectiveOutputSize[1];\n\n  for (var b = 0; b < batch; b++) {\n    for (var r = 0; r < newHeight; r++) {\n      var sourceFracRow = void 0;\n\n      if (halfPixelCenters) {\n        sourceFracRow = effectiveRowSizeRatio * (r + 0.5) - 0.5;\n      } else {\n        sourceFracRow = effectiveRowSizeRatio * r;\n      }\n\n      var sourceRowFloor = Math.max(0, Math.floor(sourceFracRow));\n      var rowFrac = sourceFracRow - sourceRowFloor;\n      var sourceRowCeil = Math.min(oldHeight - 1, Math.ceil(sourceFracRow));\n      var topRowOffset = b * imagesStrides[0] + sourceRowFloor * imagesStrides[1];\n      var botRowOffset = b * imagesStrides[0] + sourceRowCeil * imagesStrides[1];\n\n      for (var c = 0; c < newWidth; c++) {\n        var sourceFracCol = void 0;\n\n        if (halfPixelCenters) {\n          sourceFracCol = effectiveColSizeRatio * (c + 0.5) - 0.5;\n        } else {\n          sourceFracCol = effectiveColSizeRatio * c;\n        }\n\n        var sourceColFloor = Math.max(0, Math.floor(sourceFracCol));\n        var colFrac = sourceFracCol - sourceColFloor;\n        var sourceColCeil = Math.min(oldWidth - 1, Math.ceil(sourceFracCol));\n        var topLeftOffest = topRowOffset + sourceColFloor * imagesStrides[2];\n        var botLeftOffset = botRowOffset + sourceColFloor * imagesStrides[2];\n        var topRightOffset = topRowOffset + sourceColCeil * imagesStrides[2];\n        var botRightOffest = botRowOffset + sourceColCeil * imagesStrides[2];\n\n        for (var d = 0; d < numChannels; d++) {\n          // Begin shader.\n          // Compute the fractional index of the source.\n          var topLeft = xValues[topLeftOffest + d];\n          var bottomLeft = xValues[botLeftOffset + d];\n          var topRight = xValues[topRightOffset + d];\n          var bottomRight = xValues[botRightOffest + d];\n          var top = topLeft + (topRight - topLeft) * colFrac;\n          var bottom = bottomLeft + (bottomRight - bottomLeft) * colFrac;\n          var newValue = top + (bottom - top) * rowFrac;\n          result[outputIdx++] = newValue;\n        }\n      }\n    }\n  }\n\n  return backend.makeTensorInfo([batch, newHeight, newWidth, numChannels], 'float32', result);\n}\nexport var resizeBilinearConfig = {\n  kernelName: ResizeBilinear,\n  backendName: 'cpu',\n  kernelFunc: resizeBilinear\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ResizeBilinearGrad, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nexport function resizeBilinearGrad(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var images = inputs.images,\n      dy = inputs.dy;\n  var alignCorners = attrs.alignCorners;\n  assertNotComplex([dy, images], 'resizeBilinearGrad');\n  var imagesStrides = util.computeStrides(images.shape);\n\n  var _images$shape = _slicedToArray(images.shape, 4),\n      batch = _images$shape[0],\n      xHeight = _images$shape[1],\n      xWidth = _images$shape[2],\n      depth = _images$shape[3];\n\n  var _dy$shape = _slicedToArray(dy.shape, 3),\n      yHeight = _dy$shape[1],\n      yWidth = _dy$shape[2];\n\n  var output = new Float32Array(batch * xHeight * xWidth * depth); // In the backwards pass, we want to find the pixels that were generated\n  // for each pixel in the input image the forward pass and add the\n  // corresponding coefficient from dy to the gradient (with some\n  // interpolation).\n\n  var effectiveXSize = [alignCorners && yHeight > 1 ? xHeight - 1 : xHeight, alignCorners && yWidth > 1 ? xWidth - 1 : xWidth];\n  var effectiveYSize = [alignCorners && yHeight > 1 ? yHeight - 1 : yHeight, alignCorners && yWidth > 1 ? yWidth - 1 : yWidth];\n  var heightScale = effectiveXSize[0] / effectiveYSize[0];\n  var widthScale = effectiveXSize[1] / effectiveYSize[1]; // Reference implementation\n  // tslint:disable-next-line:max-line-length\n  // https://github.com/tensorflow/tensorflow/blob/3039375c86a5bbc9610c7725dcaa95d635f87ba2/tensorflow/core/kernels/resize_bilinear_op.cc#L275\n\n  var dyValues = backend.data.get(dy.dataId).values;\n  var offset = 0;\n\n  for (var b = 0; b < batch; b++) {\n    var bOffset = b * imagesStrides[0];\n\n    for (var r = 0; r < yHeight; r++) {\n      var dxR = r * heightScale;\n      var topDxRIndex = Math.floor(dxR);\n      var bottomDxRIndex = Math.min(Math.ceil(dxR), xHeight - 1);\n      var topDxROffset = bOffset + topDxRIndex * imagesStrides[1];\n      var bottomDxROffset = bOffset + bottomDxRIndex * imagesStrides[1];\n      var dxRLerp = dxR - topDxRIndex;\n      var inverseDxRLerp = 1.0 - dxRLerp;\n\n      for (var c = 0; c < yWidth; c++) {\n        var dxC = c * widthScale;\n        var leftDxCIndex = Math.floor(dxC);\n        var rightDxCIndex = Math.min(Math.ceil(dxC), xWidth - 1);\n        var dxCLerp = dxC - leftDxCIndex;\n        var inverseDxCLerp = 1.0 - dxCLerp;\n        var topLeftRCOffset = topDxROffset + leftDxCIndex * imagesStrides[2];\n        var topRightRCOffset = topDxROffset + rightDxCIndex * imagesStrides[2];\n        var bottomLeftRCOffset = bottomDxROffset + leftDxCIndex * imagesStrides[2];\n        var bottomRightRCOffset = bottomDxROffset + rightDxCIndex * imagesStrides[2];\n        var inverseDxRLerpTimesInverseDxCLerp = inverseDxRLerp * inverseDxCLerp;\n        var inverseDxRLerpTimesDxCLerp = inverseDxRLerp * dxCLerp;\n        var dxRLerpTimesInverseDxCLerp = dxRLerp * inverseDxCLerp;\n        var dxRLerpTimesDxCLerp = dxRLerp * dxCLerp;\n\n        for (var d = 0; d < depth; d++) {\n          var dyVal = dyValues[offset++];\n          output[topLeftRCOffset + d] += dyVal * inverseDxRLerpTimesInverseDxCLerp;\n          output[topRightRCOffset + d] += dyVal * inverseDxRLerpTimesDxCLerp;\n          output[bottomLeftRCOffset + d] += dyVal * dxRLerpTimesInverseDxCLerp;\n          output[bottomRightRCOffset + d] += dyVal * dxRLerpTimesDxCLerp;\n        }\n      }\n    }\n  }\n\n  return backend.makeTensorInfo([batch, xWidth, xHeight, depth], 'float32', output);\n}\nexport var resizeBilinearGradConfig = {\n  kernelName: ResizeBilinearGrad,\n  backendName: 'cpu',\n  kernelFunc: resizeBilinearGrad\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ResizeNearestNeighbor, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nexport function resizeNearestNeighbor(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var images = inputs.images;\n  var alignCorners = attrs.alignCorners,\n      halfPixelCenters = attrs.halfPixelCenters,\n      size = attrs.size;\n  assertNotComplex(images, 'resizeNearestNeighbor');\n  var imagesStrides = util.computeStrides(images.shape);\n\n  var _size = _slicedToArray(size, 2),\n      newHeight = _size[0],\n      newWidth = _size[1];\n\n  var _images$shape = _slicedToArray(images.shape, 4),\n      batch = _images$shape[0],\n      oldHeight = _images$shape[1],\n      oldWidth = _images$shape[2],\n      numChannels = _images$shape[3];\n\n  var xValues = backend.data.get(images.dataId).values;\n  var output = new Float32Array(batch * newHeight * newWidth * numChannels);\n  var effectiveInputSize = [alignCorners && newHeight > 1 ? oldHeight - 1 : oldHeight, alignCorners && newWidth > 1 ? oldWidth - 1 : oldWidth];\n  var effectiveOutputSize = [alignCorners && newHeight > 1 ? newHeight - 1 : newHeight, alignCorners && newWidth > 1 ? newWidth - 1 : newWidth];\n  var effectiveRowSizeRatio = effectiveInputSize[0] / effectiveOutputSize[0];\n  var effectiveColSizeRatio = effectiveInputSize[1] / effectiveOutputSize[1];\n  var outputOffset = 0;\n\n  for (var b = 0; b < batch; b++) {\n    var batchOffset = b * imagesStrides[0];\n\n    for (var r = 0; r < newHeight; r++) {\n      var sourceFracRow = halfPixelCenters ? effectiveRowSizeRatio * (r + 0.5) : effectiveRowSizeRatio * r;\n      var sourceNearestRow = Math.min(oldHeight - 1, alignCorners ? Math.round(sourceFracRow) : Math.floor(sourceFracRow));\n\n      if (halfPixelCenters) {\n        sourceNearestRow = Math.max(0, sourceNearestRow);\n      }\n\n      var rowOffset = batchOffset + sourceNearestRow * imagesStrides[1];\n\n      for (var c = 0; c < newWidth; c++) {\n        var sourceFracCol = halfPixelCenters ? effectiveColSizeRatio * (c + 0.5) : effectiveColSizeRatio * c;\n        var sourceNearestCol = Math.min(oldWidth - 1, alignCorners ? Math.round(sourceFracCol) : Math.floor(sourceFracCol));\n\n        if (halfPixelCenters) {\n          sourceNearestCol = Math.max(0, sourceNearestCol);\n        }\n\n        var colOffset = rowOffset + sourceNearestCol * imagesStrides[2];\n\n        for (var d = 0; d < numChannels; d++) {\n          // Begin shader.\n          // Compute the fractional index of the source.\n          var newVal = xValues[colOffset + d];\n          output[outputOffset++] = newVal;\n        }\n      }\n    }\n  }\n\n  return backend.makeTensorInfo([batch, newHeight, newWidth, numChannels], images.dtype, output);\n}\nexport var resizeNearestNeighborConfig = {\n  kernelName: ResizeNearestNeighbor,\n  backendName: 'cpu',\n  kernelFunc: resizeNearestNeighbor\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ResizeNearestNeighborGrad, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nexport function resizeNearestNeighborGrad(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var images = inputs.images,\n      dy = inputs.dy;\n  var alignCorners = attrs.alignCorners;\n  assertNotComplex([dy, images], 'resizeNearestNeighborGrad');\n  var imagesStrides = util.computeStrides(images.shape);\n  var dyStrides = util.computeStrides(dy.shape);\n\n  var _images$shape = _slicedToArray(images.shape, 4),\n      batch = _images$shape[0],\n      xHeight = _images$shape[1],\n      xWidth = _images$shape[2],\n      depth = _images$shape[3];\n\n  var _dy$shape = _slicedToArray(dy.shape, 3),\n      yHeight = _dy$shape[1],\n      yWidth = _dy$shape[2];\n\n  var output = new Float32Array(batch * xHeight * xWidth * depth);\n  var dyValues = backend.data.get(dy.dataId).values; // In the backwards pass, we want to find the pixels that were generated\n  // for each pixel in the input image the forward pass\n\n  var effectiveXSize = [alignCorners && yHeight > 1 ? xHeight - 1 : xHeight, alignCorners && yWidth > 1 ? xWidth - 1 : xWidth];\n  var effectiveYSize = [alignCorners && yHeight > 1 ? yHeight - 1 : yHeight, alignCorners && yWidth > 1 ? yWidth - 1 : yWidth];\n  var heightScale = effectiveXSize[0] / effectiveYSize[0];\n  var widthScale = effectiveXSize[1] / effectiveYSize[1];\n  var invHeightScale = 1 / heightScale;\n  var invWidthScale = 1 / widthScale; // This defines the size of the window of values around a particular\n  // index in dy that we want to search for contributions to dx.\n\n  var winHeight = Math.ceil(invHeightScale) * 2 + 2;\n  var winWidth = Math.ceil(invWidthScale) * 2 + 2; // Loop over the output space.\n\n  for (var b = 0; b < batch; b++) {\n    var batchOffset = b * imagesStrides[0];\n\n    for (var r = 0; r < xHeight; r++) {\n      var rowOffset = batchOffset + r * imagesStrides[1]; // Compute bounds for where in dy we will look\n\n      var startRLerp = Math.floor(r * invHeightScale);\n      var startDyR = Math.floor(startRLerp - winHeight / 2);\n\n      for (var c = 0; c < xWidth; c++) {\n        var colOffset = rowOffset + c * imagesStrides[2]; // Compute bounds for where in dy we will look\n\n        var startCLerp = Math.floor(c * invWidthScale);\n        var startDyC = Math.floor(startCLerp - winWidth / 2);\n\n        for (var d = 0; d < depth; d++) {\n          var accum = 0; // loop over dy\n\n          for (var dyRIndex = 0; dyRIndex < winHeight; dyRIndex++) {\n            var dyR = dyRIndex + startDyR; // Guard against the window exceeding the bounds of dy\n\n            if (dyR < 0 || dyR >= yHeight) {\n              continue;\n            }\n\n            var dyROffset = batchOffset + dyR * dyStrides[1];\n            var sourceFracRow = dyR * heightScale;\n            var sourceNearestRow = Math.min(xHeight - 1, alignCorners ? Math.round(sourceFracRow) : Math.floor(sourceFracRow));\n\n            if (r !== sourceNearestRow) {\n              continue;\n            }\n\n            for (var dyCIndex = 0; dyCIndex < winWidth; dyCIndex++) {\n              var dyC = dyCIndex + startDyC; // Guard against the window exceeding the bounds of dy\n\n              if (dyC < 0 || dyC >= yWidth) {\n                continue;\n              }\n\n              var dyCOffset = dyROffset + dyC * dyStrides[2];\n              var sourceFracCol = dyC * widthScale;\n              var sourceNearestCol = Math.min(xWidth - 1, alignCorners ? Math.round(sourceFracCol) : Math.floor(sourceFracCol));\n\n              if (c === sourceNearestCol) {\n                accum += dyValues[dyCOffset + d];\n              }\n            }\n          }\n\n          output[colOffset + d] = accum;\n        }\n      }\n    }\n  }\n\n  return backend.makeTensorInfo(images.shape, images.dtype, output);\n}\nexport var resizeNearestNeighborGradConfig = {\n  kernelName: ResizeNearestNeighborGrad,\n  backendName: 'cpu',\n  kernelFunc: resizeNearestNeighborGrad\n};","import _toConsumableArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Reverse, TensorBuffer, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nimport { identity } from './Identity';\nexport function reverse(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  var dims = attrs.dims;\n  assertNotComplex(x, 'reverse');\n  var xRank = x.shape.length;\n  var $dims = util.parseAxisParam(dims, x.shape);\n\n  if (xRank === 0) {\n    return identity({\n      inputs: {\n        x: x\n      },\n      backend: backend\n    });\n  }\n\n  var outBuf = new TensorBuffer(x.shape, x.dtype);\n  var xBuf = backend.bufferSync(x);\n\n  var _loop = function _loop(i) {\n    var outLoc = outBuf.indexToLoc(i);\n    var inLoc = outLoc.slice();\n    $dims.forEach(function (d) {\n      return inLoc[d] = x.shape[d] - 1 - inLoc[d];\n    });\n    outBuf.set.apply(outBuf, [xBuf.get.apply(xBuf, _toConsumableArray(inLoc))].concat(_toConsumableArray(outLoc)));\n  };\n\n  for (var i = 0; i < outBuf.size; i++) {\n    _loop(i);\n  }\n\n  return backend.makeTensorInfo(outBuf.shape, outBuf.dtype, outBuf.values);\n}\nexport var reverseConfig = {\n  kernelName: Reverse,\n  backendName: 'cpu',\n  kernelFunc: reverse\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, RotateWithOffset, util } from '@tensorflow/tfjs-core';\nexport var rotateWithOffsetConfig = {\n  kernelName: RotateWithOffset,\n  backendName: 'cpu',\n  kernelFunc: function kernelFunc(_ref) {\n    var inputs = _ref.inputs,\n        attrs = _ref.attrs,\n        backend = _ref.backend;\n    var image = inputs.image;\n    var radians = attrs.radians,\n        fillValue = attrs.fillValue,\n        center = attrs.center;\n    var cpuBackend = backend;\n    var output = util.getTypedArrayFromDType(image.dtype, util.sizeFromShape(image.shape));\n\n    var _image$shape = _slicedToArray(image.shape, 4),\n        batch = _image$shape[0],\n        imageHeight = _image$shape[1],\n        imageWidth = _image$shape[2],\n        numChannels = _image$shape[3];\n\n    var _backend_util$getImag = backend_util.getImageCenter(center, imageHeight, imageWidth),\n        _backend_util$getImag2 = _slicedToArray(_backend_util$getImag, 2),\n        centerX = _backend_util$getImag2[0],\n        centerY = _backend_util$getImag2[1];\n\n    var fullOpacityValue = 255;\n    var sinFactor = Math.sin(radians);\n    var cosFactor = Math.cos(radians);\n    var imageVals = cpuBackend.data.get(image.dataId).values;\n\n    for (var batchIdx = 0; batchIdx < batch; batchIdx++) {\n      var batchOffset = batchIdx * imageWidth * imageHeight * numChannels;\n\n      for (var row = 0; row < imageHeight; row++) {\n        var rowOffset = row * (imageWidth * numChannels);\n\n        for (var col = 0; col < imageWidth; col++) {\n          var colOffset = col * numChannels;\n\n          for (var channel = 0; channel < numChannels; channel++) {\n            var coords = [batch, row, col, channel];\n            var x = coords[2];\n            var y = coords[1]; // coordX/coordY are the result of rotating and translating x/y.\n\n            var coordX = (x - centerX) * cosFactor - (y - centerY) * sinFactor;\n            var coordY = (x - centerX) * sinFactor + (y - centerY) * cosFactor;\n            coordX = Math.round(coordX + centerX);\n            coordY = Math.round(coordY + centerY);\n            var outputValue = fillValue;\n\n            if (typeof fillValue !== 'number') {\n              if (channel === 3) {\n                outputValue = fullOpacityValue;\n              } else {\n                outputValue = fillValue[channel];\n              }\n            } // If the coordinate position falls within the image boundaries...\n\n\n            if (coordX >= 0 && coordX < imageWidth && coordY >= 0 && coordY < imageHeight) {\n              // set the output to the image value at the coordinate position.\n              var rotatedRowOffset = coordY * (imageWidth * numChannels);\n              var rotatedColOffset = coordX * numChannels;\n              var imageIdx = batchOffset + rotatedRowOffset + rotatedColOffset + channel;\n              outputValue = imageVals[imageIdx];\n            }\n\n            var outIdx = batchOffset + rowOffset + colOffset + channel;\n            output[outIdx] = outputValue;\n          }\n        }\n      }\n    }\n\n    var dataId = cpuBackend.write(output, image.shape, image.dtype);\n    return {\n      dataId: dataId,\n      shape: image.shape,\n      dtype: image.dtype\n    };\n  }\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Round } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../utils/unary_utils';\nexport var round = unaryKernelFunc(Round, function (xi) {\n  // The algorithm is based on banker's rounding.\n  var base = Math.floor(xi);\n\n  if (xi - base < 0.5) {\n    return Math.floor(xi);\n  } else if (xi - base > 0.5) {\n    return Math.ceil(xi);\n  } else {\n    if (base % 2.0 === 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n});\nexport var roundConfig = {\n  kernelName: Round,\n  backendName: 'cpu',\n  kernelFunc: round\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Rsqrt } from '@tensorflow/tfjs-core';\nimport { createSimpleUnaryImpl } from '../utils/unary_impl';\nimport { unaryKernelFuncFromImpl } from '../utils/unary_utils';\nexport var rsqrtImpl = createSimpleUnaryImpl(function (xi) {\n  return 1 / Math.sqrt(xi);\n});\nexport var rsqrt = unaryKernelFuncFromImpl(Rsqrt, rsqrtImpl);\nexport var rsqrtConfig = {\n  kernelName: Rsqrt,\n  backendName: 'cpu',\n  kernelFunc: rsqrt\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { buffer } from '@tensorflow/tfjs-core';\nexport function scatterImpl(indices, updates, shape, outputSize, sliceSize, numUpdates, sliceRank, strides, defaultValue, sumDupeIndices) {\n  var flattenShape = [outputSize / sliceSize, sliceSize];\n  var indicesData = indices.values;\n  var updatesData = updates.values;\n\n  if (outputSize === 0) {\n    return buffer(shape, updates.dtype);\n  }\n\n  var outBuf = buffer(flattenShape, updates.dtype);\n  outBuf.values.fill(defaultValue);\n\n  for (var i = 0; i < numUpdates; i++) {\n    var index = [];\n    var flattenIndex = 0;\n\n    for (var j = 0; j < sliceRank; j++) {\n      var dim = indicesData[i * sliceRank + j];\n      index.push(dim);\n      flattenIndex += dim * strides[j];\n    }\n\n    if (flattenIndex < 0 || flattenIndex >= outputSize / sliceSize) {\n      throw new Error(\"Invalid indices: \".concat(index, \" does not index into \").concat(shape));\n    }\n\n    for (var k = 0; k < sliceSize; k++) {\n      if (sumDupeIndices) {\n        outBuf.values[flattenIndex * sliceSize + k] += updatesData[i * sliceSize + k];\n      } else {\n        outBuf.values[flattenIndex * sliceSize + k] = updates.rank === 0 ? updatesData[0] : updatesData[i * sliceSize + k];\n      }\n    }\n  }\n\n  return outBuf;\n}","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, ScatterNd } from '@tensorflow/tfjs-core';\nimport { scatterImpl } from './Scatter_impl';\nexport function scatterNd(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var indices = inputs.indices,\n      updates = inputs.updates;\n  var shape = attrs.shape;\n\n  var _backend_util$calcula = backend_util.calculateShapes(updates, indices, shape),\n      sliceRank = _backend_util$calcula.sliceRank,\n      numUpdates = _backend_util$calcula.numUpdates,\n      sliceSize = _backend_util$calcula.sliceSize,\n      strides = _backend_util$calcula.strides,\n      outputSize = _backend_util$calcula.outputSize;\n\n  var sumDupeIndices = true;\n  var indicesBuf = backend.bufferSync(indices);\n  var updatesBuf = backend.bufferSync(updates);\n  var outBuf = scatterImpl(indicesBuf, updatesBuf, shape, outputSize, sliceSize, numUpdates, sliceRank, strides, 0\n  /* defaultValue */\n  , sumDupeIndices);\n  return backend.makeTensorInfo(shape, outBuf.dtype, outBuf.values);\n}\nexport var scatterNdConfig = {\n  kernelName: ScatterNd,\n  backendName: 'cpu',\n  kernelFunc: scatterNd\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Select, upcastType, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nexport function select(args) {\n  var inputs = args.inputs,\n      backend = args.backend;\n  var condition = inputs.condition,\n      t = inputs.t,\n      e = inputs.e;\n  assertNotComplex([condition, t, e], 'select');\n  var conditionRank = condition.shape.length;\n  var values = backend.data.get(condition.dataId).values;\n  var tValues = backend.data.get(t.dataId).values;\n  var eValues = backend.data.get(e.dataId).values;\n  var resultDtype = upcastType(t.dtype, e.dtype);\n  var newValues = util.makeZerosTypedArray(util.sizeFromShape(t.shape), resultDtype);\n  var index = 0;\n  var offset = conditionRank === 0 || conditionRank > 1 || t.shape.length === 1 ? 1 : util.sizeFromShape(t.shape.slice(1));\n\n  for (var i = 0; i < values.length; i++) {\n    for (var j = 0; j < offset; j++) {\n      if (values[i] === 1) {\n        newValues[index++] = tValues[i];\n      } else {\n        newValues[index++] = eValues[i];\n      }\n    }\n  }\n\n  return backend.makeTensorInfo(t.shape, resultDtype, newValues);\n}\nexport var selectConfig = {\n  kernelName: Select,\n  backendName: 'cpu',\n  kernelFunc: select\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Selu } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../utils/unary_utils';\nvar scaleAlpha = backend_util.SELU_SCALEALPHA;\nvar scale = backend_util.SELU_SCALE;\nexport var selu = unaryKernelFunc(Selu, function (xi) {\n  if (xi >= 0) {\n    return scale * xi;\n  } else {\n    return scaleAlpha * (Math.exp(xi) - 1);\n  }\n});\nexport var seluConfig = {\n  kernelName: Selu,\n  backendName: 'cpu',\n  kernelFunc: selu\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Sigmoid } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../utils/unary_utils';\nexport var sigmoid = unaryKernelFunc(Sigmoid, function (xi) {\n  return 1 / (1 + Math.exp(-xi));\n});\nexport var sigmoidConfig = {\n  kernelName: Sigmoid,\n  backendName: 'cpu',\n  kernelFunc: sigmoid\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Sign } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../utils/unary_utils';\nexport var sign = unaryKernelFunc(Sign, function (xi) {\n  if (xi < 0) {\n    return -1;\n  } else if (xi > 0) {\n    return 1;\n  } else {\n    return 0;\n  }\n});\nexport var signConfig = {\n  kernelName: Sign,\n  backendName: 'cpu',\n  kernelFunc: sign\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Sin } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../utils/unary_utils';\nexport var sin = unaryKernelFunc(Sin, function (xi) {\n  return Math.sin(xi);\n});\nexport var sinConfig = {\n  kernelName: Sin,\n  backendName: 'cpu',\n  kernelFunc: sin\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Sinh } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../utils/unary_utils';\nexport var sinh = unaryKernelFunc(Sinh, function (xi) {\n  return Math.sinh(xi);\n});\nexport var sinhConfig = {\n  kernelName: Sinh,\n  backendName: 'cpu',\n  kernelFunc: sinh\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Softplus } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../utils/unary_utils'; // mirrors the implementation of tf.nn.softplus: https://goo.gl/vkcvwX\n// epsilon is the difference between 1.0 and the next representable float.\n// For a single precision 32 bit float this should be 2^-23, see:\n// https://math.byu.edu/~schow/work/IEEEFloatingPoint.htm\n\nvar epsilon = 1.1920928955078125e-7;\nvar threshold = Math.log(epsilon) + 2.0;\nexport var softplus = unaryKernelFunc(Softplus, function (xi) {\n  // Value above which exp(x) may overflow, but softplus(x) == x\n  // is within machine epsilon.\n  var tooLarge = xi > -threshold; // Value below which exp(x) may underflow, but softplus(x) == exp(x)\n  // is within machine epsilon.\n\n  var tooSmall = xi < threshold;\n  var expX = Math.exp(xi);\n  var result;\n\n  if (tooSmall) {\n    result = expX;\n  } else if (tooLarge) {\n    result = xi;\n  } else {\n    result = Math.log(1.0 + expX);\n  }\n\n  return result;\n});\nexport var softplusConfig = {\n  kernelName: Softplus,\n  backendName: 'cpu',\n  kernelFunc: softplus\n};","import _toConsumableArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, SpaceToBatchND, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nimport { padV2Config } from './PadV2';\nimport { reshape } from './Reshape';\nimport { transpose } from './Transpose';\nexport function spaceToBatchND(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  var blockShape = attrs.blockShape,\n      paddings = attrs.paddings;\n  assertNotComplex([x], 'spaceToBatchND');\n  var prod = util.sizeFromShape(blockShape);\n  var completePaddings = [[0, 0]];\n  completePaddings.push.apply(completePaddings, _toConsumableArray(paddings));\n\n  for (var i = 1 + blockShape.length; i < x.shape.length; ++i) {\n    completePaddings.push([0, 0]);\n  }\n\n  var paddedX = padV2Config.kernelFunc({\n    inputs: {\n      x: x\n    },\n    backend: backend,\n    attrs: {\n      paddings: completePaddings,\n      constantValue: 0\n    }\n  });\n  var reshapedPaddedShape = backend_util.getReshaped(paddedX.shape, blockShape, prod, false);\n  var permutedReshapedPaddedPermutation = backend_util.getPermuted(reshapedPaddedShape.length, blockShape.length, false);\n  var flattenShape = backend_util.getReshapedPermuted(paddedX.shape, blockShape, prod, false);\n  var reshapeInputs = {\n    x: paddedX\n  };\n  var reshapeAttrs = {\n    shape: reshapedPaddedShape\n  };\n  var paddedXReshaped = reshape({\n    inputs: reshapeInputs,\n    backend: backend,\n    attrs: reshapeAttrs\n  });\n  var transposeInputs = {\n    x: paddedXReshaped\n  };\n  var transposeAttrs = {\n    perm: permutedReshapedPaddedPermutation\n  };\n  var paddedXT = transpose({\n    inputs: transposeInputs,\n    backend: backend,\n    attrs: transposeAttrs\n  });\n  var resultReshapeInputs = {\n    x: paddedXT\n  };\n  var resultReshapeAttrs = {\n    shape: flattenShape\n  };\n  var result = reshape({\n    inputs: resultReshapeInputs,\n    backend: backend,\n    attrs: resultReshapeAttrs\n  });\n  backend.disposeIntermediateTensorInfo(paddedX);\n  backend.disposeIntermediateTensorInfo(paddedXReshaped);\n  backend.disposeIntermediateTensorInfo(paddedXT);\n  return result;\n}\nexport var spaceToBatchNDConfig = {\n  kernelName: SpaceToBatchND,\n  backendName: 'cpu',\n  kernelFunc: spaceToBatchND\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, SparseToDense } from '@tensorflow/tfjs-core';\nimport { scatterImpl } from './Scatter_impl';\nexport function sparseToDense(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var sparseIndices = inputs.sparseIndices,\n      sparseValues = inputs.sparseValues,\n      defaultValue = inputs.defaultValue;\n  var outputShape = attrs.outputShape;\n\n  var _backend_util$calcula = backend_util.calculateShapes(sparseValues, sparseIndices, outputShape),\n      sliceRank = _backend_util$calcula.sliceRank,\n      numUpdates = _backend_util$calcula.numUpdates,\n      sliceSize = _backend_util$calcula.sliceSize,\n      strides = _backend_util$calcula.strides,\n      outputSize = _backend_util$calcula.outputSize;\n\n  var sumDupeIndices = false;\n  var indicesBuf = backend.bufferSync(sparseIndices);\n  var updatesBuf = backend.bufferSync(sparseValues);\n  var $defaultValue = backend.data.get(defaultValue.dataId).values[0];\n  var outBuf = scatterImpl(indicesBuf, updatesBuf, outputShape, outputSize, sliceSize, numUpdates, sliceRank, strides, $defaultValue, sumDupeIndices);\n  return backend.makeTensorInfo(outputShape, outBuf.dtype, outBuf.values);\n}\nexport var sparseToDenseConfig = {\n  kernelName: SparseToDense,\n  backendName: 'cpu',\n  kernelFunc: sparseToDense\n};","import _toConsumableArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util } from '@tensorflow/tfjs-core';\nimport { SplitV, util } from '@tensorflow/tfjs-core';\nimport { slice } from './Slice';\nexport function splitV(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  var numOrSizeSplits = attrs.numOrSizeSplits,\n      axis = attrs.axis;\n  var $axis = util.parseAxisParam(axis, x.shape)[0];\n  var splitSizes = backend_util.prepareSplitSize(x, numOrSizeSplits, $axis);\n  var begin = new Array(x.shape.length).fill(0);\n  var size = x.shape.slice();\n  return splitSizes.map(function (s) {\n    var sliceSize = _toConsumableArray(size);\n\n    sliceSize[$axis] = s;\n    var sliceT = slice({\n      inputs: {\n        x: x\n      },\n      backend: backend,\n      attrs: {\n        begin: begin,\n        size: sliceSize\n      }\n    });\n    begin[$axis] += s;\n    return sliceT;\n  });\n}\nexport var splitVConfig = {\n  kernelName: SplitV,\n  backendName: 'cpu',\n  kernelFunc: splitV\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Sqrt } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../utils/unary_utils';\nexport var sqrt = unaryKernelFunc(Sqrt, function (xi) {\n  return Math.sqrt(xi);\n});\nexport var sqrtConfig = {\n  kernelName: Sqrt,\n  backendName: 'cpu',\n  kernelFunc: sqrt\n};","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Square } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nexport var squareConfig = {\n  kernelName: Square,\n  backendName: 'cpu',\n  kernelFunc: function kernelFunc(_ref) {\n    var inputs = _ref.inputs,\n        backend = _ref.backend;\n    var x = inputs.x;\n    var cpuBackend = backend;\n    assertNotComplex(x, 'square');\n    var values = cpuBackend.data.get(x.dataId).values;\n    var newValues = new Float32Array(values.length);\n\n    for (var i = 0; i < values.length; ++i) {\n      var value = values[i];\n      newValues[i] = value * value;\n    }\n\n    var dataId = cpuBackend.write(newValues, x.shape, x.dtype);\n    return {\n      dataId: dataId,\n      shape: x.shape,\n      dtype: x.dtype\n    };\n  }\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { SquaredDifference } from '@tensorflow/tfjs-core';\nimport { createSimpleBinaryKernelImpl } from '../utils/binary_impl';\nimport { binaryKernelFunc } from '../utils/binary_utils';\nexport var squaredDifferenceImpl = createSimpleBinaryKernelImpl(function (a, b) {\n  var diff = a - b;\n  return diff * diff;\n});\nexport var squaredDifference = binaryKernelFunc(SquaredDifference, squaredDifferenceImpl);\nexport var squaredDifferenceConfig = {\n  kernelName: SquaredDifference,\n  backendName: 'cpu',\n  kernelFunc: squaredDifference\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Step } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../utils/unary_utils';\nexport var step = unaryKernelFunc(Step, function (xi, attrs) {\n  var stepAttrs = attrs;\n\n  if (isNaN(xi)) {\n    return NaN;\n  } else {\n    return xi > 0 ? 1 : stepAttrs.alpha;\n  }\n});\nexport var stepConfig = {\n  kernelName: Step,\n  backendName: 'cpu',\n  kernelFunc: step\n};","import _toConsumableArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { buffer } from '@tensorflow/tfjs-core';\nexport function stridedSliceImpl(outShape, xBuf, strides, begin) {\n  var outBuf = buffer(outShape, xBuf.dtype);\n\n  for (var i = 0; i < outBuf.size; i++) {\n    var loc = outBuf.indexToLoc(i);\n    var newLoc = new Array(loc.length);\n\n    for (var j = 0; j < newLoc.length; j++) {\n      newLoc[j] = loc[j] * strides[j] + begin[j];\n    }\n\n    outBuf.set.apply(outBuf, [xBuf.get.apply(xBuf, newLoc)].concat(_toConsumableArray(loc)));\n  }\n\n  return outBuf;\n}","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { slice_util, StridedSlice } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nimport { reshape } from './Reshape';\nimport { slice } from './Slice';\nimport { stridedSliceImpl } from './StridedSlice_impl';\nexport function stridedSlice(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  var begin = attrs.begin,\n      end = attrs.end,\n      strides = attrs.strides,\n      beginMask = attrs.beginMask,\n      endMask = attrs.endMask,\n      ellipsisMask = attrs.ellipsisMask,\n      newAxisMask = attrs.newAxisMask,\n      shrinkAxisMask = attrs.shrinkAxisMask;\n  assertNotComplex(x, 'stridedSlice');\n\n  var _slice_util$sliceInfo = slice_util.sliceInfo(x.shape, begin, end, strides, beginMask, endMask, ellipsisMask, newAxisMask, shrinkAxisMask),\n      nonStrided = _slice_util$sliceInfo.nonStrided,\n      $begin = _slice_util$sliceInfo.$begin,\n      $strides = _slice_util$sliceInfo.$strides,\n      size = _slice_util$sliceInfo.size,\n      newShape = _slice_util$sliceInfo.newShape,\n      outShape = _slice_util$sliceInfo.outShape;\n\n  var $x = reshape({\n    inputs: {\n      x: x\n    },\n    backend: backend,\n    attrs: {\n      shape: newShape\n    }\n  });\n  var result;\n\n  if (nonStrided) {\n    var sliced = slice({\n      inputs: {\n        x: $x\n      },\n      backend: backend,\n      attrs: {\n        begin: $begin,\n        size: size\n      }\n    });\n    result = reshape({\n      inputs: {\n        x: sliced\n      },\n      backend: backend,\n      attrs: {\n        shape: outShape\n      }\n    });\n    backend.disposeIntermediateTensorInfo(sliced);\n  } else if (outShape.some(function (axis) {\n    return axis === 0;\n  })) {\n    result = backend.makeTensorInfo(outShape, x.dtype, []);\n  } else {\n    var xBuf = backend.bufferSync($x);\n    var outBuf = stridedSliceImpl(outShape, xBuf, $strides, $begin);\n    result = backend.makeTensorInfo(outBuf.shape, outBuf.dtype, outBuf.values);\n  }\n\n  var resultReshaped = reshape({\n    inputs: {\n      x: result\n    },\n    backend: backend,\n    attrs: {\n      shape: outShape\n    }\n  });\n  backend.disposeIntermediateTensorInfo($x);\n  backend.disposeIntermediateTensorInfo(result);\n  return resultReshaped;\n}\nexport var stridedSliceConfig = {\n  kernelName: StridedSlice,\n  backendName: 'cpu',\n  kernelFunc: stridedSlice\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Tan } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../utils/unary_utils';\nexport var tan = unaryKernelFunc(Tan, function (xi) {\n  return Math.tan(xi);\n});\nexport var tanConfig = {\n  kernelName: Tan,\n  backendName: 'cpu',\n  kernelFunc: tan\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Tanh } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../utils/unary_utils';\nexport var tanh = unaryKernelFunc(Tanh, function (xi) {\n  return Math.tanh(xi);\n});\nexport var tanhConfig = {\n  kernelName: Tanh,\n  backendName: 'cpu',\n  kernelFunc: tanh\n};","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { buffer } from '@tensorflow/tfjs-core';\n/**\n * An implementation of the tile kernel shared between webgl and cpu for string\n * tensors only.\n */\n\nexport function tileImpl(xBuf, reps) {\n  var newShape = new Array(xBuf.rank);\n\n  for (var i = 0; i < newShape.length; i++) {\n    newShape[i] = xBuf.shape[i] * reps[i];\n  }\n\n  var result = buffer(newShape, xBuf.dtype);\n\n  for (var _i = 0; _i < result.values.length; ++_i) {\n    var newLoc = result.indexToLoc(_i);\n    var originalLoc = new Array(xBuf.rank);\n\n    for (var j = 0; j < originalLoc.length; j++) {\n      originalLoc[j] = newLoc[j] % xBuf.shape[j];\n    }\n\n    var originalIndex = xBuf.locToIndex(originalLoc);\n    result.values[_i] = xBuf.values[originalIndex];\n  }\n\n  return result;\n}","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Tile } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nimport { tileImpl } from './Tile_impl';\nexport function tile(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  var reps = attrs.reps;\n  assertNotComplex(x, 'tile');\n  var outBuf = tileImpl(backend.bufferSync(x), reps);\n  return backend.makeTensorInfo(outBuf.shape, outBuf.dtype, outBuf.values);\n}\nexport var tileConfig = {\n  kernelName: Tile,\n  backendName: 'cpu',\n  kernelFunc: tile\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/** An implementation of the TopK kernel shared between webgl and cpu. */\nimport { buffer, util } from '@tensorflow/tfjs-core';\nexport function topKImpl(x, xShape, xDtype, k, sorted) {\n  // Reshape into a 2d tensor [batch, lastDim] and compute topk along lastDim.\n  var lastDim = xShape[xShape.length - 1];\n  var batch = x.length / lastDim,\n      size = lastDim;\n  var allTopKVals = util.getTypedArrayFromDType(xDtype, batch * k);\n  var allTopKIndices = util.getTypedArrayFromDType('int32', batch * k);\n\n  for (var b = 0; b < batch; b++) {\n    var offset = b * size;\n    var vals = x.subarray(offset, offset + size);\n    var valAndInd = [];\n\n    for (var i = 0; i < vals.length; i++) {\n      valAndInd.push({\n        value: vals[i],\n        index: i\n      });\n    }\n\n    valAndInd.sort(function (a, b) {\n      return b.value - a.value;\n    });\n    var outOffset = b * k;\n    var topKVals = allTopKVals.subarray(outOffset, outOffset + k);\n    var topKIndices = allTopKIndices.subarray(outOffset, outOffset + k);\n\n    for (var _i = 0; _i < k; _i++) {\n      topKVals[_i] = valAndInd[_i].value;\n      topKIndices[_i] = valAndInd[_i].index;\n    }\n  } // Reshape back to the original input shape, except that the last\n  // dimension is k.\n\n\n  var outputShape = xShape.slice();\n  outputShape[outputShape.length - 1] = k;\n  return [buffer(outputShape, xDtype, allTopKVals), buffer(outputShape, 'int32', allTopKIndices)];\n}","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { TopK } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nimport { topKImpl } from './TopK_impl';\nexport function topK(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  var k = attrs.k,\n      sorted = attrs.sorted;\n  assertNotComplex(x, 'topk');\n  var xVals = backend.data.get(x.dataId).values;\n\n  var _topKImpl = topKImpl(xVals, x.shape, x.dtype, k, sorted),\n      _topKImpl2 = _slicedToArray(_topKImpl, 2),\n      allTopKVals = _topKImpl2[0],\n      allTopKIndices = _topKImpl2[1];\n\n  return [backend.makeTensorInfo(allTopKVals.shape, allTopKVals.dtype, allTopKVals.values), backend.makeTensorInfo(allTopKIndices.shape, allTopKIndices.dtype, allTopKIndices.values)];\n}\nexport var topKConfig = {\n  kernelName: TopK,\n  backendName: 'cpu',\n  kernelFunc: topK\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Transform, util } from '@tensorflow/tfjs-core';\nexport function transform(args) {\n  var inputs = args.inputs,\n      attrs = args.attrs,\n      backend = args.backend;\n  var image = inputs.image,\n      transforms = inputs.transforms;\n  var interpolation = attrs.interpolation,\n      fillMode = attrs.fillMode,\n      fillValue = attrs.fillValue,\n      outputShape = attrs.outputShape;\n\n  var _image$shape = _slicedToArray(image.shape, 4),\n      batch = _image$shape[0],\n      imageHeight = _image$shape[1],\n      imageWidth = _image$shape[2],\n      numChannels = _image$shape[3];\n\n  var _ref = outputShape != null ? outputShape : [imageHeight, imageWidth],\n      _ref2 = _slicedToArray(_ref, 2),\n      outHeight = _ref2[0],\n      outWidth = _ref2[1];\n\n  var outShape = [batch, outHeight, outWidth, numChannels];\n  var strides = util.computeStrides(image.shape);\n  var batchStride = strides[0];\n  var rowStride = strides[1];\n  var colStride = strides[2];\n  var outVals = util.getTypedArrayFromDType(image.dtype, util.sizeFromShape(outShape));\n  outVals.fill(fillValue);\n  var imageVals = backend.data.get(image.dataId).values;\n  var transformVals = backend.data.get(transforms.dataId).values; // Ref TF implementation:\n  // https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/image/image_ops.h\n\n  for (var b = 0; b < batch; ++b) {\n    var _transform = transforms.shape[0] === 1 ? transformVals : transformVals.subarray(b * 8, b * 8 + 8);\n\n    for (var outY = 0; outY < outHeight; ++outY) {\n      for (var outX = 0; outX < outWidth; ++outX) {\n        for (var channel = 0; channel < numChannels; ++channel) {\n          var val = void 0;\n          var projection = _transform[6] * outX + _transform[7] * outY + 1;\n\n          if (projection === 0) {\n            // Return the fill value for infinite coordinates,\n            // which are outside the input image\n            continue;\n          }\n\n          var inX = (_transform[0] * outX + _transform[1] * outY + _transform[2]) / projection;\n          var inY = (_transform[3] * outX + _transform[4] * outY + _transform[5]) / projection;\n          var x = mapCoord(inX, imageWidth, fillMode);\n          var y = mapCoord(inY, imageHeight, fillMode);\n\n          switch (interpolation) {\n            case 'nearest':\n              val = nearestInterpolation(imageVals, imageHeight, imageWidth, batchStride, rowStride, colStride, b, y, x, channel, fillValue);\n              break;\n\n            case 'bilinear':\n              val = bilinearInterpolation(imageVals, imageHeight, imageWidth, batchStride, rowStride, colStride, b, y, x, channel, fillValue);\n              break;\n\n            default:\n              throw new Error(\"Error in Transform: Expect 'nearest' or \" + \"'bilinear', but got \".concat(interpolation));\n          }\n\n          var ind = b * batchStride + outY * rowStride + outX * colStride + channel;\n          outVals[ind] = val;\n        }\n      }\n    }\n\n    return backend.makeTensorInfo(outShape, image.dtype, outVals);\n  }\n\n  var dataId = backend.write(outVals, outShape, image.dtype);\n  return {\n    dataId: dataId,\n    shape: image.shape,\n    dtype: image.dtype\n  };\n}\nexport var transformConfig = {\n  kernelName: Transform,\n  backendName: 'cpu',\n  kernelFunc: transform\n};\n\nfunction mapCoord(outCoord, len, mode) {\n  switch (mode) {\n    case 'reflect':\n      return mapCoordReflect(outCoord, len);\n\n    case 'wrap':\n      return mapCoordWrap(outCoord, len);\n\n    case 'nearest':\n      return mapCoordNearest(outCoord, len);\n\n    case 'constant':\n    default:\n      return mapCoordConstant(outCoord, len);\n  }\n}\n\nfunction mapCoordReflect(outCoord, len) {\n  // Reflect [abcd] to [dcba|abcd|dcba].\n  var inCoord = outCoord;\n\n  if (inCoord < 0) {\n    if (len <= 1) {\n      inCoord = 0;\n    } else {\n      var sz2 = 2 * len;\n\n      if (inCoord < sz2) {\n        inCoord = sz2 * Math.trunc(-inCoord / sz2) + inCoord;\n      }\n\n      inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1;\n    }\n  } else if (inCoord > len - 1) {\n    if (len <= 1) {\n      inCoord = 0;\n    } else {\n      var _sz = 2 * len;\n\n      inCoord -= _sz * Math.trunc(inCoord / _sz);\n\n      if (inCoord >= len) {\n        inCoord = _sz - inCoord - 1;\n      }\n    }\n  } // clamp is necessary because when outCoord = 3.5 and len = 4,\n  // inCoord = 3.5 and will be rounded to 4 in nearest interpolation.\n\n\n  return util.clamp(0, inCoord, len - 1);\n}\n\nfunction mapCoordWrap(outCoord, len) {\n  // Wrap [abcd] to [abcd|abcd|abcd].\n  var inCoord = outCoord;\n\n  if (inCoord < 0) {\n    if (len <= 1) {\n      inCoord = 0;\n    } else {\n      var sz = len - 1;\n      inCoord += len * (Math.trunc(-inCoord / sz) + 1);\n    }\n  } else if (inCoord > len - 1) {\n    if (len <= 1) {\n      inCoord = 0;\n    } else {\n      var _sz2 = len - 1;\n\n      inCoord -= len * Math.trunc(inCoord / _sz2);\n    }\n  } // clamp is necessary because when outCoord = -0.5 and len = 4,\n  // inCoord = 3.5 and will be rounded to 4 in nearest interpolation.\n\n\n  return util.clamp(0, inCoord, len - 1);\n}\n\nfunction mapCoordConstant(outCoord, len) {\n  return outCoord;\n}\n\nfunction mapCoordNearest(outCoord, len) {\n  return util.clamp(0, outCoord, len - 1);\n}\n\nfunction readWithFillValue(imageVals, imageHeight, imageWidth, batchStride, rowStride, colStride, batch, y, x, channel, fillValue) {\n  var ind = batch * batchStride + y * rowStride + x * colStride + channel;\n\n  if (0 <= y && y < imageHeight && 0 <= x && x < imageWidth) {\n    return imageVals[ind];\n  } else {\n    return fillValue;\n  }\n}\n\nfunction nearestInterpolation(imageVals, imageHeight, imageWidth, batchStride, rowStride, colStride, batch, y, x, channel, fillValue) {\n  var $y = Math.round(y);\n  var $x = Math.round(x);\n  return readWithFillValue(imageVals, imageHeight, imageWidth, batchStride, rowStride, colStride, batch, $y, $x, channel, fillValue);\n}\n\nfunction bilinearInterpolation(imageVals, imageHeight, imageWidth, batchStride, rowStride, colStride, batch, y, x, channel, fillValue) {\n  var yFloor = Math.floor(y);\n  var xFloor = Math.floor(x);\n  var yCeil = yFloor + 1;\n  var xCeil = xFloor + 1; // f(x, yFloor) = (xCeil - x) / (xCeil - xFloor) * f(xFloor, yFloor)\n  //               + (x - xFloor) / (xCeil - xFloor) * f(xCeil, yFloor)\n\n  var valueYFloor = (xCeil - x) * readWithFillValue(imageVals, imageHeight, imageWidth, batchStride, rowStride, colStride, batch, yFloor, xFloor, channel, fillValue) + (x - xFloor) * readWithFillValue(imageVals, imageHeight, imageWidth, batchStride, rowStride, colStride, batch, yFloor, xCeil, channel, fillValue); // f(x, yCeil) = (xCeil - x) / (xCeil - xFloor) * f(xFloor, yCeil)\n  //             + (x - xFloor) / (xCeil - xFloor) * f(xCeil, yCeil)\n\n  var valueYCeil = (xCeil - x) * readWithFillValue(imageVals, imageHeight, imageWidth, batchStride, rowStride, colStride, batch, yCeil, xFloor, channel, fillValue) + (x - xFloor) * readWithFillValue(imageVals, imageHeight, imageWidth, batchStride, rowStride, colStride, batch, yCeil, xCeil, channel, fillValue); // f(x, y) = (yCeil - y) / (yCeil - yFloor) * f(x, yFloor)\n  //         + (y - yFloor) / (yCeil - yFloor) * f(x, yCeil)\n\n  return (yCeil - y) * valueYFloor + (y - yFloor) * valueYCeil;\n}","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { TensorBuffer, util } from '@tensorflow/tfjs-core';\nexport function uniqueImpl(values, axis, shape, dtype) {\n  // Normalize and validate axis.\n  var $axis = util.parseAxisParam(axis, shape)[0]; // Calculate the new shape that is suitable for extracting data along the\n  // given axis.\n  //\n  // The rank is 3.\n  // The size of the 1st dimension is the size of all the axes < the given axis.\n  // The size of the 2nd dimension is the same as the size of the given axis.\n  // The size of the 3rd dimension is the size of all the axes > the given axis.\n  //\n  // For example, for a 4D tensor with shape=[2, 3, 5, 4] and axis=2, the\n  // newShape would be: [2*3, 5, 4].\n  //\n  // Note that this is not the final output shape. This will be the shape for an\n  // intermediate TensorBuffer (see inputBuffer below) to allow us to extract\n  // values along the given axis. To demonstrate how it works, consider the\n  // following example:\n  //\n  // Input: a 3D tensor, with shape [1, 2, 3]\n  // [\n  //   [\n  //      [1,2,3],\n  //      [4,5,6]\n  //   ]\n  // ]\n  // Axis: 2 (the last axis).\n  // Along axis 2, we expect to extract 3 tensors: [1,4], [2,5], [3,6].\n  //\n  // For this example, newShape would be: [2, 3, 1], where 2 is calculated from\n  // 1*2. The re-shaped data would look like:\n  //\n  // [\n  //   [\n  //     [1], [2], [3]\n  //   ],\n  //   [\n  //     [4], [5], [6]\n  //   ]\n  // ]\n  //\n  // Then, we can construct a 3-level nested loop by the following dimension\n  // order to extract the values along the axis (dimension1):\n  // i: dimension1       // 0,1,2 (newShape[1])\n  //   m: dimension0     // 0,1   (newShape[0])\n  //     n: dimension2   // 0     (newShape[2])\n  //\n  //                       m, i, n\n  //                      ---------\n  // Iteration 0: data at [0, 0, 0] => \"1\"\n  // Iteration 1: data at [1, 0, 0] => \"4\"\n  // We got [1,4].\n  // Iteration 2: data at [0, 1, 0] => \"2\"\n  // Iteration 3: data at [1, 1, 0] => \"5\"\n  // We got [2,5].\n  // Iteration 4: data at [0, 2, 0] => \"3\"\n  // Iteration 5: data at [1, 2, 0] => \"6\"\n  // We got [3,6].\n\n  var newShape = [1, shape[0], 1];\n\n  for (var i = 0; i < $axis; i++) {\n    newShape[0] *= shape[i];\n  }\n\n  newShape[1] = shape[$axis];\n\n  for (var _i = $axis + 1; _i < shape.length; _i++) {\n    newShape[2] *= shape[_i];\n  } // A map from unique elements (their string representations) to their values\n  // in \"indices\" (below).\n\n\n  var uniqueElements = {}; // The indices of each unique element in the original tensor along the given\n  // axis. It is 1D and has the same size as the given axis.\n\n  var indices = new Int32Array(shape[$axis]); // Create a buffer so we can easily extract value at a given location.\n\n  var inputBuffer = new TensorBuffer(newShape, dtype, values); // The indices along the given axis that have unique elements. This is a\n  // de-duped version of \"indices\" above.\n\n  var uniqueIndices = [];\n  var is1DTensor = newShape[0] === 1 && newShape[2] === 1;\n\n  for (var _i2 = 0; _i2 < shape[$axis]; _i2++) {\n    // Extract values along the axis.\n    var element = void 0;\n\n    if (is1DTensor) {\n      // Fast path for 1D tensor input.\n      element = values[_i2].toString();\n    } else {\n      var axisValues = [];\n\n      for (var m = 0; m < newShape[0]; m++) {\n        for (var n = 0; n < newShape[2]; n++) {\n          axisValues.push(inputBuffer.get(m, _i2, n));\n        }\n      }\n\n      element = axisValues.join(',');\n    } // Dedup and update various indices.\n\n\n    if (uniqueElements[element] !== undefined) {\n      indices[_i2] = uniqueElements[element];\n    } else {\n      var uniqueIndex = Object.keys(uniqueElements).length;\n      uniqueElements[element] = uniqueIndex;\n      indices[_i2] = uniqueIndex;\n      uniqueIndices.push(_i2);\n    }\n  } // Now we know where each of the unique elements are located along the axis\n  // (uniqueIndices). Extract them from input buffer and store them in the\n  // output buffer.\n\n\n  var outputTmpShape = newShape.slice();\n  outputTmpShape[1] = Object.keys(uniqueElements).length;\n  var outputBuffer = new TensorBuffer(outputTmpShape, dtype);\n  uniqueIndices.forEach(function (uniqueElementIndex, i) {\n    for (var _m = 0; _m < newShape[0]; _m++) {\n      for (var _n = 0; _n < newShape[2]; _n++) {\n        outputBuffer.set(inputBuffer.get(_m, uniqueElementIndex, _n), _m, i, _n);\n      }\n    }\n  }); // The output shape can be calculated from the input shape with the size of\n  // the given axis replaced by the number of unique elements along that axis.\n\n  var outputShape = shape.slice();\n  outputShape[$axis] = outputTmpShape[1];\n  return {\n    outputValues: outputBuffer.values,\n    outputShape: outputShape,\n    indices: indices\n  };\n}","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Unique } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nimport { uniqueImpl } from './Unique_impl';\nexport function unique(args) {\n  var inputs = args.inputs,\n      attrs = args.attrs,\n      backend = args.backend;\n  var axis = attrs.axis;\n  var x = inputs.x;\n  assertNotComplex(x, 'unique');\n  var values = backend.data.get(x.dataId).values;\n\n  var _uniqueImpl = uniqueImpl(values, axis, x.shape, x.dtype),\n      outputValues = _uniqueImpl.outputValues,\n      outputShape = _uniqueImpl.outputShape,\n      indices = _uniqueImpl.indices;\n\n  return [backend.makeTensorInfo(outputShape, x.dtype, outputValues), backend.makeTensorInfo([indices.length], 'int32', indices)];\n}\nexport var uniqueConfig = {\n  kernelName: Unique,\n  backendName: 'cpu',\n  kernelFunc: unique\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Unpack } from '@tensorflow/tfjs-core';\nimport { reshape } from './Reshape';\nimport { slice } from './Slice';\nexport function unpack(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var value = inputs.value;\n  var axis = attrs.axis;\n\n  if (axis < 0) {\n    axis += value.shape.length;\n  }\n\n  var valueRank = value.shape.length;\n  var num = value.shape[axis];\n  var outShape = new Array(valueRank - 1);\n  var outIndex = 0;\n\n  for (var i = 0; i < valueRank; i++) {\n    if (i !== axis) {\n      outShape[outIndex++] = value.shape[i];\n    }\n  }\n\n  var begin = new Array(valueRank).fill(0);\n  var size = value.shape.slice();\n  size[axis] = 1;\n  var res = new Array(num);\n\n  for (var _i = 0; _i < res.length; _i++) {\n    begin[axis] = _i;\n    var tempRes = slice({\n      inputs: {\n        x: value\n      },\n      backend: backend,\n      attrs: {\n        begin: begin,\n        size: size\n      }\n    });\n    res[_i] = reshape({\n      inputs: {\n        x: tempRes\n      },\n      backend: backend,\n      attrs: {\n        shape: outShape\n      }\n    });\n    backend.disposeIntermediateTensorInfo(tempRes);\n  }\n\n  return res;\n}\nexport var unpackConfig = {\n  kernelName: Unpack,\n  backendName: 'cpu',\n  kernelFunc: unpack\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// We explicitly import the modular kernels so they get registered in the\n// global registry when we compile the library. A modular build would replace\n// the contents of this file and import only the kernels that are needed.\nimport { registerKernel } from '@tensorflow/tfjs-core';\nimport { _fusedMatMulConfig } from './kernels/_FusedMatMul';\nimport { absConfig } from './kernels/Abs';\nimport { acosConfig } from './kernels/Acos';\nimport { acoshConfig } from './kernels/Acosh';\nimport { addConfig } from './kernels/Add';\nimport { addNConfig } from './kernels/AddN';\nimport { allConfig } from './kernels/All';\nimport { anyConfig } from './kernels/Any';\nimport { argMaxConfig } from './kernels/ArgMax';\nimport { argMinConfig } from './kernels/ArgMin';\nimport { asinConfig } from './kernels/Asin';\nimport { asinhConfig } from './kernels/Asinh';\nimport { atanConfig } from './kernels/Atan';\nimport { atan2Config } from './kernels/Atan2';\nimport { atanhConfig } from './kernels/Atanh';\nimport { avgPoolConfig } from './kernels/AvgPool';\nimport { avgPool3DConfig } from './kernels/AvgPool3D';\nimport { avgPool3DGradConfig } from './kernels/AvgPool3DGrad';\nimport { avgPoolGradConfig } from './kernels/AvgPoolGrad';\nimport { batchMatMulConfig } from './kernels/BatchMatMul';\nimport { batchNormConfig } from './kernels/BatchNorm';\nimport { batchToSpaceNDConfig } from './kernels/BatchToSpaceND';\nimport { bincountConfig } from './kernels/Bincount';\nimport { castConfig } from './kernels/Cast';\nimport { ceilConfig } from './kernels/Ceil';\nimport { clipConfig } from './kernels/Clip';\nimport { complexConfig } from './kernels/Complex';\nimport { complexAbsConfig } from './kernels/ComplexAbs';\nimport { concatConfig } from './kernels/Concat';\nimport { conv2DConfig } from './kernels/Conv2D';\nimport { conv2DBackpropFilterConfig } from './kernels/Conv2DBackpropFilter';\nimport { conv2DBackpropInputConfig } from './kernels/Conv2DBackpropInput';\nimport { conv3DConfig } from './kernels/Conv3D';\nimport { conv3DBackpropFilterV2Config } from './kernels/Conv3DBackpropFilterV2';\nimport { conv3DBackpropInputV2Config } from './kernels/Conv3DBackpropInputV2';\nimport { cosConfig } from './kernels/Cos';\nimport { coshConfig } from './kernels/Cosh';\nimport { cropAndResizeConfig } from './kernels/CropAndResize';\nimport { cumsumConfig } from './kernels/Cumsum';\nimport { denseBincountConfig } from './kernels/DenseBincount';\nimport { depthToSpaceConfig } from './kernels/DepthToSpace';\nimport { depthwiseConv2dNativeConfig } from './kernels/DepthwiseConv2dNative';\nimport { depthwiseConv2dNativeBackpropFilterConfig } from './kernels/DepthwiseConv2dNativeBackpropFilter';\nimport { depthwiseConv2dNativeBackpropInputConfig } from './kernels/DepthwiseConv2dNativeBackpropInput';\nimport { diagConfig } from './kernels/Diag';\nimport { dilation2dConfig } from './kernels/Dilation2D';\nimport { dilation2dBackpropFilterConfig } from './kernels/Dilation2DBackpropFilter';\nimport { dilation2dBackpropInputConfig } from './kernels/Dilation2DBackpropInput';\nimport { einsumConfig } from './kernels/Einsum';\nimport { eluConfig } from './kernels/Elu';\nimport { eluGradConfig } from './kernels/EluGrad';\nimport { equalConfig } from './kernels/Equal';\nimport { erfConfig } from './kernels/Erf';\nimport { expConfig } from './kernels/Exp';\nimport { expandDimsConfig } from './kernels/ExpandDims';\nimport { expm1Config } from './kernels/Expm1';\nimport { fftConfig } from './kernels/FFT';\nimport { fillConfig } from './kernels/Fill';\nimport { flipLeftRightConfig } from './kernels/FlipLeftRight';\nimport { floorConfig } from './kernels/Floor';\nimport { floorDivConfig } from './kernels/FloorDiv';\nimport { fusedConv2DConfig } from './kernels/FusedConv2D';\nimport { fusedDepthwiseConv2DConfig } from './kernels/FusedDepthwiseConv2D';\nimport { gatherNdConfig } from './kernels/GatherNd';\nimport { gatherV2Config } from './kernels/GatherV2';\nimport { greaterConfig } from './kernels/Greater';\nimport { greaterEqualConfig } from './kernels/GreaterEqual';\nimport { identityConfig } from './kernels/Identity';\nimport { ifftConfig } from './kernels/IFFT';\nimport { imagConfig } from './kernels/Imag';\nimport { isFiniteConfig } from './kernels/IsFinite';\nimport { isInfConfig } from './kernels/IsInf';\nimport { isNaNConfig } from './kernels/IsNaN';\nimport { leakyReluConfig } from './kernels/LeakyRelu';\nimport { lessConfig } from './kernels/Less';\nimport { lessEqualConfig } from './kernels/LessEqual';\nimport { linSpaceConfig } from './kernels/LinSpace';\nimport { logConfig } from './kernels/Log';\nimport { log1pConfig } from './kernels/Log1p';\nimport { logicalAndConfig } from './kernels/LogicalAnd';\nimport { logicalNotConfig } from './kernels/LogicalNot';\nimport { logicalOrConfig } from './kernels/LogicalOr';\nimport { lRNConfig } from './kernels/LRN';\nimport { lRNGradConfig } from './kernels/LRNGrad';\nimport { maxConfig } from './kernels/Max';\nimport { maximumConfig } from './kernels/Maximum';\nimport { maxPoolConfig } from './kernels/MaxPool';\nimport { maxPool3DConfig } from './kernels/MaxPool3D';\nimport { maxPool3DGradConfig } from './kernels/MaxPool3DGrad';\nimport { maxPoolGradConfig } from './kernels/MaxPoolGrad';\nimport { maxPoolWithArgmaxConfig } from './kernels/MaxPoolWithArgmax';\nimport { meanConfig } from './kernels/Mean';\nimport { minConfig } from './kernels/Min';\nimport { minimumConfig } from './kernels/Minimum';\nimport { mirrorPadConfig } from './kernels/MirrorPad';\nimport { modConfig } from './kernels/Mod';\nimport { multinomialConfig } from './kernels/Multinomial';\nimport { multiplyConfig } from './kernels/Multiply';\nimport { negConfig } from './kernels/Neg';\nimport { nonMaxSuppressionV3Config } from './kernels/NonMaxSuppressionV3';\nimport { nonMaxSuppressionV4Config } from './kernels/NonMaxSuppressionV4';\nimport { nonMaxSuppressionV5Config } from './kernels/NonMaxSuppressionV5';\nimport { notEqualConfig } from './kernels/NotEqual';\nimport { oneHotConfig } from './kernels/OneHot';\nimport { onesLikeConfig } from './kernels/OnesLike';\nimport { packConfig } from './kernels/Pack';\nimport { padV2Config } from './kernels/PadV2';\nimport { powConfig } from './kernels/Pow';\nimport { preluConfig } from './kernels/Prelu';\nimport { prodConfig } from './kernels/Prod';\nimport { rangeConfig } from './kernels/Range';\nimport { realConfig } from './kernels/Real';\nimport { realDivConfig } from './kernels/RealDiv';\nimport { reciprocalConfig } from './kernels/Reciprocal';\nimport { reluConfig } from './kernels/Relu';\nimport { relu6Config } from './kernels/Relu6';\nimport { reshapeConfig } from './kernels/Reshape';\nimport { resizeBilinearConfig } from './kernels/ResizeBilinear';\nimport { resizeBilinearGradConfig } from './kernels/ResizeBilinearGrad';\nimport { resizeNearestNeighborConfig } from './kernels/ResizeNearestNeighbor';\nimport { resizeNearestNeighborGradConfig } from './kernels/ResizeNearestNeighborGrad';\nimport { reverseConfig } from './kernels/Reverse';\nimport { rotateWithOffsetConfig } from './kernels/RotateWithOffset';\nimport { roundConfig } from './kernels/Round';\nimport { rsqrtConfig } from './kernels/Rsqrt';\nimport { scatterNdConfig } from './kernels/ScatterNd';\nimport { selectConfig } from './kernels/Select';\nimport { seluConfig } from './kernels/Selu';\nimport { sigmoidConfig } from './kernels/Sigmoid';\nimport { signConfig } from './kernels/Sign';\nimport { sinConfig } from './kernels/Sin';\nimport { sinhConfig } from './kernels/Sinh';\nimport { sliceConfig } from './kernels/Slice';\nimport { softmaxConfig } from './kernels/Softmax';\nimport { softplusConfig } from './kernels/Softplus';\nimport { spaceToBatchNDConfig } from './kernels/SpaceToBatchND';\nimport { sparseToDenseConfig } from './kernels/SparseToDense';\nimport { splitVConfig } from './kernels/SplitV';\nimport { sqrtConfig } from './kernels/Sqrt';\nimport { squareConfig } from './kernels/Square';\nimport { squaredDifferenceConfig } from './kernels/SquaredDifference';\nimport { stepConfig } from './kernels/Step';\nimport { stridedSliceConfig } from './kernels/StridedSlice';\nimport { subConfig } from './kernels/Sub';\nimport { sumConfig } from './kernels/Sum';\nimport { tanConfig } from './kernels/Tan';\nimport { tanhConfig } from './kernels/Tanh';\nimport { tileConfig } from './kernels/Tile';\nimport { topKConfig } from './kernels/TopK';\nimport { transformConfig } from './kernels/Transform';\nimport { transposeConfig } from './kernels/Transpose';\nimport { uniqueConfig } from './kernels/Unique';\nimport { unpackConfig } from './kernels/Unpack';\nimport { unsortedSegmentSumConfig } from './kernels/UnsortedSegmentSum';\nimport { zerosLikeConfig } from './kernels/ZerosLike'; // List all kernel configs here\n\nvar kernelConfigs = [_fusedMatMulConfig, absConfig, acosConfig, acoshConfig, addConfig, addNConfig, allConfig, anyConfig, argMaxConfig, argMinConfig, asinConfig, asinhConfig, atanConfig, atan2Config, atanhConfig, avgPoolConfig, avgPool3DConfig, avgPool3DGradConfig, avgPoolGradConfig, batchMatMulConfig, batchNormConfig, batchToSpaceNDConfig, bincountConfig, castConfig, ceilConfig, clipConfig, complexConfig, complexAbsConfig, concatConfig, conv2DBackpropFilterConfig, conv2DBackpropInputConfig, conv2DConfig, conv3DBackpropFilterV2Config, conv3DBackpropInputV2Config, conv3DConfig, cosConfig, coshConfig, cropAndResizeConfig, cumsumConfig, denseBincountConfig, depthToSpaceConfig, depthwiseConv2dNativeConfig, depthwiseConv2dNativeBackpropFilterConfig, depthwiseConv2dNativeBackpropInputConfig, diagConfig, dilation2dConfig, dilation2dBackpropInputConfig, dilation2dBackpropFilterConfig, realDivConfig, einsumConfig, eluConfig, eluGradConfig, equalConfig, erfConfig, expConfig, expandDimsConfig, expm1Config, fftConfig, fillConfig, flipLeftRightConfig, floorConfig, floorDivConfig, fusedConv2DConfig, fusedDepthwiseConv2DConfig, gatherNdConfig, gatherV2Config, greaterConfig, greaterEqualConfig, identityConfig, ifftConfig, imagConfig, isFiniteConfig, isInfConfig, isNaNConfig, leakyReluConfig, lessConfig, lessEqualConfig, linSpaceConfig, logConfig, log1pConfig, logicalAndConfig, logicalNotConfig, logicalOrConfig, lRNConfig, lRNGradConfig, maximumConfig, maxPoolConfig, maxPool3DConfig, maxPool3DGradConfig, maxPoolGradConfig, maxPoolWithArgmaxConfig, maxConfig, meanConfig, minConfig, minimumConfig, mirrorPadConfig, modConfig, multinomialConfig, multiplyConfig, negConfig, nonMaxSuppressionV3Config, nonMaxSuppressionV4Config, nonMaxSuppressionV5Config, notEqualConfig, oneHotConfig, onesLikeConfig, packConfig, padV2Config, powConfig, preluConfig, prodConfig, rangeConfig, realConfig, reciprocalConfig, reluConfig, relu6Config, reshapeConfig, resizeBilinearConfig, resizeBilinearGradConfig, resizeNearestNeighborConfig, resizeNearestNeighborGradConfig, reverseConfig, rotateWithOffsetConfig, roundConfig, rsqrtConfig, scatterNdConfig, selectConfig, seluConfig, sigmoidConfig, signConfig, sinConfig, sinhConfig, sliceConfig, softmaxConfig, softplusConfig, spaceToBatchNDConfig, sparseToDenseConfig, splitVConfig, sqrtConfig, squareConfig, squaredDifferenceConfig, stepConfig, stridedSliceConfig, subConfig, sumConfig, tanConfig, tanhConfig, tileConfig, topKConfig, transposeConfig, transformConfig, uniqueConfig, unpackConfig, unsortedSegmentSumConfig, zerosLikeConfig];\n\nfor (var _i = 0, _kernelConfigs = kernelConfigs; _i < _kernelConfigs.length; _i++) {\n  var kernelConfig = _kernelConfigs[_i];\n  registerKernel(kernelConfig);\n}","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { UnsortedSegmentSum, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nimport { cast } from './Cast';\nimport { equal } from './Equal';\nimport { expandDims } from './ExpandDims';\nimport { multiply } from './Multiply';\nimport { pack } from './Pack';\nimport { sum } from './Sum';\nexport function unsortedSegmentSum(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x,\n      segmentIds = inputs.segmentIds;\n  var numSegments = attrs.numSegments;\n  assertNotComplex(x, 'unsortedSegmentSum');\n  var xRank = x.shape.length;\n  var segmentIdsRank = segmentIds.shape.length;\n  var res = [];\n  var intermediates = []; // Reshape the segment id's so that they can be broadcast with\n  // x. The new shape should be [segmentIds.shape, 1, ..., 1]\n\n  var numIters = xRank - segmentIdsRank;\n  var $segmentIds = segmentIds;\n\n  for (var i = 0; i < numIters; ++i) {\n    var expanded = expandDims({\n      inputs: {\n        input: $segmentIds\n      },\n      backend: backend,\n      attrs: {\n        dim: i + 1\n      }\n    });\n    $segmentIds = expanded;\n    intermediates.push(expanded);\n  }\n\n  for (var _i = 0; _i < numSegments; ++_i) {\n    var scalarValue = util.createScalarValue(_i, 'int32');\n    var segmentId = backend.makeTensorInfo([], 'int32', scalarValue);\n    var mask = equal({\n      inputs: {\n        a: segmentId,\n        b: $segmentIds\n      },\n      backend: backend\n    });\n    var maskCasted = cast({\n      inputs: {\n        x: mask\n      },\n      backend: backend,\n      attrs: {\n        dtype: 'float32'\n      }\n    });\n    var mul = multiply({\n      inputs: {\n        a: maskCasted,\n        b: x\n      },\n      backend: backend\n    });\n    var sumTensorInfo = sum({\n      inputs: {\n        x: mul\n      },\n      backend: backend,\n      attrs: {\n        axis: 0,\n        keepDims: false\n      }\n    });\n    res.push(sumTensorInfo);\n    intermediates.push(segmentId);\n    intermediates.push(mask);\n    intermediates.push(maskCasted);\n    intermediates.push(mul);\n    intermediates.push(sumTensorInfo);\n  }\n\n  var result = pack({\n    inputs: res,\n    backend: backend,\n    attrs: {\n      axis: 0\n    }\n  });\n  intermediates.forEach(function (t) {\n    return backend.disposeIntermediateTensorInfo(t);\n  });\n  return result;\n}\nexport var unsortedSegmentSumConfig = {\n  kernelName: UnsortedSegmentSum,\n  backendName: 'cpu',\n  kernelFunc: unsortedSegmentSum\n};","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar contexts = {};\nvar WEBGL_ATTRIBUTES = {\n  alpha: false,\n  antialias: false,\n  premultipliedAlpha: false,\n  preserveDrawingBuffer: false,\n  depth: false,\n  stencil: false,\n  failIfMajorPerformanceCaveat: true\n};\nexport function clearWebGLContext(webGLVersion) {\n  delete contexts[webGLVersion];\n}\nexport function setWebGLContext(webGLVersion, gl) {\n  contexts[webGLVersion] = gl;\n}\nexport function getWebGLContext(webGLVersion) {\n  if (!(webGLVersion in contexts)) {\n    var newCtx = getWebGLRenderingContext(webGLVersion);\n\n    if (newCtx !== null) {\n      contexts[webGLVersion] = newCtx;\n    } else {\n      console.log('Could not get context for WebGL version', webGLVersion);\n      return null;\n    }\n  }\n\n  var gl = contexts[webGLVersion];\n\n  if (gl.isContextLost()) {\n    delete contexts[webGLVersion];\n    return getWebGLContext(webGLVersion);\n  }\n\n  gl.disable(gl.DEPTH_TEST);\n  gl.disable(gl.STENCIL_TEST);\n  gl.disable(gl.BLEND);\n  gl.disable(gl.DITHER);\n  gl.disable(gl.POLYGON_OFFSET_FILL);\n  gl.disable(gl.SAMPLE_COVERAGE);\n  gl.enable(gl.SCISSOR_TEST);\n  gl.enable(gl.CULL_FACE);\n  gl.cullFace(gl.BACK);\n  return contexts[webGLVersion];\n}\n\nfunction createCanvas(webGLVersion) {\n  if (typeof OffscreenCanvas !== 'undefined' && webGLVersion === 2) {\n    return new OffscreenCanvas(300, 150);\n  } else if (typeof document !== 'undefined') {\n    return document.createElement('canvas');\n  } else {\n    throw new Error('Cannot create a canvas in this context');\n  }\n}\n\nfunction getWebGLRenderingContext(webGLVersion) {\n  if (webGLVersion !== 1 && webGLVersion !== 2) {\n    throw new Error('Cannot get WebGL rendering context, WebGL is disabled.');\n  }\n\n  var canvas = createCanvas(webGLVersion);\n  canvas.addEventListener('webglcontextlost', function (ev) {\n    ev.preventDefault();\n    delete contexts[webGLVersion];\n  }, false);\n\n  if (webGLVersion === 1) {\n    return canvas.getContext('webgl', WEBGL_ATTRIBUTES) || canvas.getContext('experimental-webgl', WEBGL_ATTRIBUTES);\n  }\n\n  return canvas.getContext('webgl2', WEBGL_ATTRIBUTES);\n}","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env, util } from '@tensorflow/tfjs-core';\nexport var PackingScheme;\n\n(function (PackingScheme) {\n  /**\n   * All values in a single texel are densely packed without any constraints.\n   *\n   * This is how the shader encodes a tensor with shape = [2, 3, 4]\n   * (indices are [batch, row, col]).\n   *\n   * 000|001   010|011   020|021\n   * -------   -------   -------\n   * 002|003   012|013   022|023\n   *\n   * 100|101   110|111   120|121\n   * -------   -------   -------\n   * 102|103   112|113   122|123\n   *\n   */\n  PackingScheme[PackingScheme[\"DENSE\"] = 0] = \"DENSE\";\n  /**\n   * Single texels contain only values from the same batch, and from adjacent\n   * rows and columns.\n   *\n   * This is how the shader encodes a tensor with shape = [2, 3, 5]\n   * (indices are [batch, row, col]).\n   *\n   * 000|001   002|003   004|xxx   020|021   022|023   024|xxx\n   * -------   -------   -------   -------   -------   -------\n   * 010|011   012|013   014|xxx   xxx|xxx   xxx|xxx   xxx|xxx\n   *\n   * 100|101   102|103   104|xxx   120|121   122|123   124|xxx\n   * -------   -------   -------   -------   -------   -------\n   * 110|111   112|113   114|xxx   xxx|xxx   xxx|xxx   xxx|xxx\n   *\n   */\n\n  PackingScheme[PackingScheme[\"SHARED_BATCH\"] = 1] = \"SHARED_BATCH\";\n})(PackingScheme || (PackingScheme = {}));\n\nexport var TextureUsage;\n\n(function (TextureUsage) {\n  TextureUsage[TextureUsage[\"RENDER\"] = 0] = \"RENDER\";\n  TextureUsage[TextureUsage[\"UPLOAD\"] = 1] = \"UPLOAD\";\n  TextureUsage[TextureUsage[\"PIXELS\"] = 2] = \"PIXELS\";\n  TextureUsage[TextureUsage[\"DOWNLOAD\"] = 3] = \"DOWNLOAD\";\n})(TextureUsage || (TextureUsage = {}));\n\nexport var PhysicalTextureType;\n\n(function (PhysicalTextureType) {\n  PhysicalTextureType[PhysicalTextureType[\"UNPACKED_FLOAT16\"] = 0] = \"UNPACKED_FLOAT16\";\n  PhysicalTextureType[PhysicalTextureType[\"UNPACKED_FLOAT32\"] = 1] = \"UNPACKED_FLOAT32\";\n  PhysicalTextureType[PhysicalTextureType[\"PACKED_4X1_UNSIGNED_BYTE\"] = 2] = \"PACKED_4X1_UNSIGNED_BYTE\";\n  PhysicalTextureType[PhysicalTextureType[\"PACKED_2X2_FLOAT32\"] = 3] = \"PACKED_2X2_FLOAT32\";\n  PhysicalTextureType[PhysicalTextureType[\"PACKED_2X2_FLOAT16\"] = 4] = \"PACKED_2X2_FLOAT16\";\n})(PhysicalTextureType || (PhysicalTextureType = {}));\n\nexport function getUnpackedMatrixTextureShapeWidthHeight(rows, columns) {\n  return [columns, rows];\n}\nexport function getUnpackedArraySizeFromMatrixSize(matrixSize, channelsPerTexture) {\n  return matrixSize * channelsPerTexture;\n}\nexport function getColorMatrixTextureShapeWidthHeight(rows, columns) {\n  return [columns * 4, rows];\n}\n/**\n * Get shape for densely packed RGBA texture.\n */\n\nexport function getDenseTexShape(shape) {\n  var size = util.sizeFromShape(shape);\n  var texelsNeeded = Math.ceil(size / 4);\n  return util.sizeToSquarishShape(texelsNeeded);\n}\nexport function getMatrixSizeFromUnpackedArraySize(unpackedSize, channelsPerTexture) {\n  if (unpackedSize % channelsPerTexture !== 0) {\n    throw new Error(\"unpackedSize (\".concat(unpackedSize, \") must be a multiple of \") + \"\".concat(channelsPerTexture));\n  }\n\n  return unpackedSize / channelsPerTexture;\n}\nexport function decodeMatrixFromUnpackedColorRGBAArray(unpackedArray, matrix, channels) {\n  var requiredSize = unpackedArray.length * channels / 4;\n\n  if (matrix.length < requiredSize) {\n    throw new Error(\"matrix length (\".concat(matrix.length, \") must be >= \").concat(requiredSize));\n  }\n\n  var dst = 0;\n\n  for (var src = 0; src < unpackedArray.length; src += 4) {\n    for (var c = 0; c < channels; c++) {\n      matrix[dst++] = unpackedArray[src + c];\n    }\n  }\n}\nexport function getPackedMatrixTextureShapeWidthHeight(rows, columns) {\n  return [Math.max(1, Math.ceil(columns / 2)), Math.max(1, Math.ceil(rows / 2))];\n}\nexport function getPackedRGBAArraySizeFromMatrixShape(rows, columns) {\n  var _getPackedMatrixTextu = getPackedMatrixTextureShapeWidthHeight(rows, columns),\n      _getPackedMatrixTextu2 = _slicedToArray(_getPackedMatrixTextu, 2),\n      w = _getPackedMatrixTextu2[0],\n      h = _getPackedMatrixTextu2[1];\n\n  return w * h * 4;\n}\nexport function getTextureConfig( // tslint:disable-next-line:no-any\ngl, textureHalfFloatExtension) {\n  // tslint:disable-next-line:no-any\n  var glany = gl;\n  var internalFormatFloat;\n  var internalFormatHalfFloat;\n  var internalFormatPackedHalfFloat;\n  var internalFormatPackedFloat;\n  var textureFormatFloat;\n  var downloadTextureFormat;\n  var downloadUnpackNumChannels;\n  var defaultNumChannels;\n  var textureTypeHalfFloat;\n  var textureTypeFloat;\n\n  if (env().getNumber('WEBGL_VERSION') === 2) {\n    internalFormatFloat = glany.R32F;\n    internalFormatHalfFloat = glany.R16F;\n    internalFormatPackedHalfFloat = glany.RGBA16F;\n    internalFormatPackedFloat = glany.RGBA32F;\n    textureFormatFloat = glany.RED;\n    downloadUnpackNumChannels = 4;\n    defaultNumChannels = 1;\n    textureTypeHalfFloat = glany.HALF_FLOAT;\n    textureTypeFloat = glany.FLOAT;\n  } else {\n    internalFormatFloat = gl.RGBA;\n    internalFormatHalfFloat = gl.RGBA;\n    internalFormatPackedHalfFloat = gl.RGBA;\n    internalFormatPackedFloat = glany.RGBA;\n    textureFormatFloat = gl.RGBA;\n    downloadUnpackNumChannels = 4;\n    defaultNumChannels = 4;\n    textureTypeHalfFloat = textureHalfFloatExtension != null ? textureHalfFloatExtension.HALF_FLOAT_OES : null;\n    textureTypeFloat = gl.FLOAT;\n  }\n\n  downloadTextureFormat = gl.RGBA;\n  return {\n    internalFormatFloat: internalFormatFloat,\n    internalFormatHalfFloat: internalFormatHalfFloat,\n    internalFormatPackedHalfFloat: internalFormatPackedHalfFloat,\n    internalFormatPackedFloat: internalFormatPackedFloat,\n    textureFormatFloat: textureFormatFloat,\n    downloadTextureFormat: downloadTextureFormat,\n    downloadUnpackNumChannels: downloadUnpackNumChannels,\n    defaultNumChannels: defaultNumChannels,\n    textureTypeHalfFloat: textureTypeHalfFloat,\n    textureTypeFloat: textureTypeFloat\n  };\n}","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env, util } from '@tensorflow/tfjs-core';\nimport { getWebGLContext } from './canvas_util';\nimport { getTextureConfig } from './tex_util';\nexport function callAndCheck(gl, func) {\n  var returnValue = func();\n\n  if (env().getBool('DEBUG')) {\n    checkWebGLError(gl);\n  }\n\n  return returnValue;\n}\n\nfunction checkWebGLError(gl) {\n  var error = gl.getError();\n\n  if (error !== gl.NO_ERROR) {\n    throw new Error('WebGL Error: ' + getWebGLErrorMessage(gl, error));\n  }\n} // https://en.wikipedia.org/wiki/Half-precision_floating-point_format\n\n\nvar MIN_FLOAT16 = 5.96e-8;\nvar MAX_FLOAT16 = 65504;\nexport function canBeRepresented(num) {\n  if (env().getBool('WEBGL_RENDER_FLOAT32_ENABLED') || num === 0 || MIN_FLOAT16 < Math.abs(num) && Math.abs(num) < MAX_FLOAT16) {\n    return true;\n  }\n\n  return false;\n}\nexport function getWebGLErrorMessage(gl, status) {\n  switch (status) {\n    case gl.NO_ERROR:\n      return 'NO_ERROR';\n\n    case gl.INVALID_ENUM:\n      return 'INVALID_ENUM';\n\n    case gl.INVALID_VALUE:\n      return 'INVALID_VALUE';\n\n    case gl.INVALID_OPERATION:\n      return 'INVALID_OPERATION';\n\n    case gl.INVALID_FRAMEBUFFER_OPERATION:\n      return 'INVALID_FRAMEBUFFER_OPERATION';\n\n    case gl.OUT_OF_MEMORY:\n      return 'OUT_OF_MEMORY';\n\n    case gl.CONTEXT_LOST_WEBGL:\n      return 'CONTEXT_LOST_WEBGL';\n\n    default:\n      return \"Unknown error code \".concat(status);\n  }\n}\nexport function getExtensionOrThrow(gl, extensionName) {\n  return throwIfNull(gl, function () {\n    return gl.getExtension(extensionName);\n  }, 'Extension \"' + extensionName + '\" not supported on this browser.');\n}\nexport function createVertexShader(gl, vertexShaderSource) {\n  var vertexShader = throwIfNull(gl, function () {\n    return gl.createShader(gl.VERTEX_SHADER);\n  }, 'Unable to create vertex WebGLShader.');\n  callAndCheck(gl, function () {\n    return gl.shaderSource(vertexShader, vertexShaderSource);\n  });\n  callAndCheck(gl, function () {\n    return gl.compileShader(vertexShader);\n  });\n\n  if (gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS) === false) {\n    console.log(gl.getShaderInfoLog(vertexShader));\n    throw new Error('Failed to compile vertex shader.');\n  }\n\n  return vertexShader;\n}\nexport function createFragmentShader(gl, fragmentShaderSource) {\n  var fragmentShader = throwIfNull(gl, function () {\n    return gl.createShader(gl.FRAGMENT_SHADER);\n  }, 'Unable to create fragment WebGLShader.');\n  callAndCheck(gl, function () {\n    return gl.shaderSource(fragmentShader, fragmentShaderSource);\n  });\n  callAndCheck(gl, function () {\n    return gl.compileShader(fragmentShader);\n  });\n\n  if (gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS) === false) {\n    logShaderSourceAndInfoLog(fragmentShaderSource, gl.getShaderInfoLog(fragmentShader));\n    throw new Error('Failed to compile fragment shader.');\n  }\n\n  return fragmentShader;\n}\nvar lineNumberRegex = /ERROR: [0-9]+:([0-9]+):/g;\n\nfunction logShaderSourceAndInfoLog(shaderSource, shaderInfoLog) {\n  var lineNumberRegexResult = lineNumberRegex.exec(shaderInfoLog);\n\n  if (lineNumberRegexResult == null) {\n    console.log(\"Couldn't parse line number in error: \".concat(shaderInfoLog));\n    console.log(shaderSource);\n    return;\n  }\n\n  var lineNumber = +lineNumberRegexResult[1];\n  var shaderLines = shaderSource.split('\\n');\n  var pad = shaderLines.length.toString().length + 2;\n  var linesWithLineNumbers = shaderLines.map(function (line, lineNumber) {\n    return util.rightPad((lineNumber + 1).toString(), pad) + line;\n  });\n  var maxLineLength = 0;\n\n  for (var i = 0; i < linesWithLineNumbers.length; i++) {\n    maxLineLength = Math.max(linesWithLineNumbers[i].length, maxLineLength);\n  }\n\n  var beforeErrorLines = linesWithLineNumbers.slice(0, lineNumber - 1);\n  var errorLine = linesWithLineNumbers.slice(lineNumber - 1, lineNumber);\n  var afterErrorLines = linesWithLineNumbers.slice(lineNumber);\n  console.log(beforeErrorLines.join('\\n'));\n  console.log(shaderInfoLog.split('\\n')[0]);\n  console.log(\"%c \".concat(util.rightPad(errorLine[0], maxLineLength)), 'border:1px solid red; background-color:#e3d2d2; color:#a61717');\n  console.log(afterErrorLines.join('\\n'));\n}\n\nexport function createProgram(gl) {\n  return throwIfNull(gl, function () {\n    return gl.createProgram();\n  }, 'Unable to create WebGLProgram.');\n}\nexport function linkProgram(gl, program) {\n  callAndCheck(gl, function () {\n    return gl.linkProgram(program);\n  });\n\n  if (gl.getProgramParameter(program, gl.LINK_STATUS) === false) {\n    console.log(gl.getProgramInfoLog(program));\n    throw new Error('Failed to link vertex and fragment shaders.');\n  }\n}\nexport function validateProgram(gl, program) {\n  callAndCheck(gl, function () {\n    return gl.validateProgram(program);\n  });\n\n  if (gl.getProgramParameter(program, gl.VALIDATE_STATUS) === false) {\n    console.log(gl.getProgramInfoLog(program));\n    throw new Error('Shader program validation failed.');\n  }\n}\nexport function createStaticVertexBuffer(gl, data) {\n  var buffer = throwIfNull(gl, function () {\n    return gl.createBuffer();\n  }, 'Unable to create WebGLBuffer');\n  callAndCheck(gl, function () {\n    return gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n  });\n  callAndCheck(gl, function () {\n    return gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW);\n  });\n  return buffer;\n}\nexport function createStaticIndexBuffer(gl, data) {\n  var buffer = throwIfNull(gl, function () {\n    return gl.createBuffer();\n  }, 'Unable to create WebGLBuffer');\n  callAndCheck(gl, function () {\n    return gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\n  });\n  callAndCheck(gl, function () {\n    return gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, data, gl.STATIC_DRAW);\n  });\n  return buffer;\n}\nexport function getNumChannels() {\n  if (env().getNumber('WEBGL_VERSION') === 2) {\n    return 1;\n  }\n\n  return 4;\n}\nexport function createTexture(gl) {\n  return throwIfNull(gl, function () {\n    return gl.createTexture();\n  }, 'Unable to create WebGLTexture.');\n}\nexport function validateTextureSize(width, height) {\n  var maxTextureSize = env().getNumber('WEBGL_MAX_TEXTURE_SIZE');\n\n  if (width <= 0 || height <= 0) {\n    var requested = \"[\".concat(width, \"x\").concat(height, \"]\");\n    throw new Error('Requested texture size ' + requested + ' is invalid.');\n  }\n\n  if (width > maxTextureSize || height > maxTextureSize) {\n    var _requested = \"[\".concat(width, \"x\").concat(height, \"]\");\n\n    var max = \"[\".concat(maxTextureSize, \"x\").concat(maxTextureSize, \"]\");\n    throw new Error('Requested texture size ' + _requested + ' greater than WebGL maximum on this browser / GPU ' + max + '.');\n  }\n}\nexport function createFramebuffer(gl) {\n  return throwIfNull(gl, function () {\n    return gl.createFramebuffer();\n  }, 'Unable to create WebGLFramebuffer.');\n}\nexport function bindVertexBufferToProgramAttribute(gl, program, attribute, buffer, arrayEntriesPerItem, itemStrideInBytes, itemOffsetInBytes) {\n  var loc = gl.getAttribLocation(program, attribute);\n\n  if (loc === -1) {\n    // The GPU compiler decided to strip out this attribute because it's unused,\n    // thus no need to bind.\n    return false;\n  }\n\n  callAndCheck(gl, function () {\n    return gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n  });\n  callAndCheck(gl, function () {\n    return gl.vertexAttribPointer(loc, arrayEntriesPerItem, gl.FLOAT, false, itemStrideInBytes, itemOffsetInBytes);\n  });\n  callAndCheck(gl, function () {\n    return gl.enableVertexAttribArray(loc);\n  });\n  return true;\n}\nexport function bindTextureUnit(gl, texture, textureUnit) {\n  validateTextureUnit(gl, textureUnit);\n  callAndCheck(gl, function () {\n    return gl.activeTexture(gl.TEXTURE0 + textureUnit);\n  });\n  callAndCheck(gl, function () {\n    return gl.bindTexture(gl.TEXTURE_2D, texture);\n  });\n}\nexport function unbindTextureUnit(gl, textureUnit) {\n  validateTextureUnit(gl, textureUnit);\n  callAndCheck(gl, function () {\n    return gl.activeTexture(gl.TEXTURE0 + textureUnit);\n  });\n  callAndCheck(gl, function () {\n    return gl.bindTexture(gl.TEXTURE_2D, null);\n  });\n}\nexport function getProgramUniformLocationOrThrow(gl, program, uniformName) {\n  return throwIfNull(gl, function () {\n    return gl.getUniformLocation(program, uniformName);\n  }, 'uniform \"' + uniformName + '\" not present in program.');\n}\nexport function getProgramUniformLocation(gl, program, uniformName) {\n  return gl.getUniformLocation(program, uniformName);\n}\nexport function bindTextureToProgramUniformSampler(gl, texture, uniformSamplerLocation, textureUnit) {\n  callAndCheck(gl, function () {\n    return bindTextureUnit(gl, texture, textureUnit);\n  });\n  callAndCheck(gl, function () {\n    return gl.uniform1i(uniformSamplerLocation, textureUnit);\n  });\n}\nexport function bindCanvasToFramebuffer(gl) {\n  callAndCheck(gl, function () {\n    return gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n  });\n  callAndCheck(gl, function () {\n    return gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n  });\n  callAndCheck(gl, function () {\n    return gl.scissor(0, 0, gl.canvas.width, gl.canvas.height);\n  });\n}\nexport function bindColorTextureToFramebuffer(gl, texture, framebuffer) {\n  callAndCheck(gl, function () {\n    return gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n  });\n  callAndCheck(gl, function () {\n    return gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n  });\n}\nexport function unbindColorTextureFromFramebuffer(gl, framebuffer) {\n  callAndCheck(gl, function () {\n    return gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n  });\n  callAndCheck(gl, function () {\n    return gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, null, 0);\n  });\n}\nexport function validateFramebuffer(gl) {\n  var status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n\n  if (status !== gl.FRAMEBUFFER_COMPLETE) {\n    throw new Error('Error binding framebuffer: ' + getFramebufferErrorMessage(gl, status));\n  }\n}\nexport function getFramebufferErrorMessage(gl, status) {\n  switch (status) {\n    case gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:\n      return 'FRAMEBUFFER_INCOMPLETE_ATTACHMENT';\n\n    case gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:\n      return 'FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT';\n\n    case gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:\n      return 'FRAMEBUFFER_INCOMPLETE_DIMENSIONS';\n\n    case gl.FRAMEBUFFER_UNSUPPORTED:\n      return 'FRAMEBUFFER_UNSUPPORTED';\n\n    default:\n      return \"unknown error \".concat(status);\n  }\n}\n\nfunction throwIfNull(gl, returnTOrNull, failureMessage) {\n  var tOrNull = callAndCheck(gl, function () {\n    return returnTOrNull();\n  });\n\n  if (tOrNull == null) {\n    throw new Error(failureMessage);\n  }\n\n  return tOrNull;\n}\n\nfunction validateTextureUnit(gl, textureUnit) {\n  var maxTextureUnit = gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS - 1;\n  var glTextureUnit = textureUnit + gl.TEXTURE0;\n\n  if (glTextureUnit < gl.TEXTURE0 || glTextureUnit > maxTextureUnit) {\n    var textureUnitRange = \"[gl.TEXTURE0, gl.TEXTURE\".concat(maxTextureUnit, \"]\");\n    throw new Error(\"textureUnit must be in \".concat(textureUnitRange, \".\"));\n  }\n}\n\nexport function getBatchDim(shape) {\n  var dimsToSkip = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n  return util.sizeFromShape(shape.slice(0, shape.length - dimsToSkip));\n}\nexport function getRowsCols(shape) {\n  if (shape.length === 0) {\n    throw Error('Cannot get rows and columns of an empty shape array.');\n  }\n\n  return [shape.length > 1 ? shape[shape.length - 2] : 1, shape[shape.length - 1]];\n}\nexport function getShapeAs3D(shape) {\n  var shapeAs3D = [1, 1, 1];\n  var isScalar = shape.length === 0 || shape.length === 1 && shape[0] === 1;\n\n  if (!isScalar) {\n    shapeAs3D = [getBatchDim(shape)].concat(_toConsumableArray(getRowsCols(shape)));\n  }\n\n  return shapeAs3D;\n}\nexport function getTextureShapeFromLogicalShape(logShape) {\n  var isPacked = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var maxTexSize = env().getNumber('WEBGL_MAX_TEXTURE_SIZE');\n\n  if (isPacked) {\n    maxTexSize = maxTexSize * 2; // This logic ensures we accurately count the number of packed texels needed\n    // to accommodate the tensor. We can only pack values in the same texel if\n    // they are from adjacent pairs of rows/cols within the same batch. So if a\n    // tensor has 3 rows, we pretend it has 4 rows in order to account for the\n    // fact that the texels containing the third row are half empty.\n\n    logShape = logShape.map(function (d, i) {\n      return i >= logShape.length - 2 ? util.nearestLargerEven(logShape[i]) : logShape[i];\n    }); // Packed texture height is at least 2 (the channel height of a single\n    // texel).\n\n    if (logShape.length === 1) {\n      logShape = [2, logShape[0]];\n    }\n  } // If logical shape is 2, we don't squeeze, since we want to match physical.\n\n\n  if (logShape.length !== 2) {\n    var squeezeResult = util.squeezeShape(logShape);\n    logShape = squeezeResult.newShape;\n  }\n\n  var size = util.sizeFromShape(logShape);\n\n  if (logShape.length <= 1 && size <= maxTexSize) {\n    return [1, size];\n  } else if (logShape.length === 2 && logShape[0] <= maxTexSize && logShape[1] <= maxTexSize) {\n    return logShape;\n  } else if (logShape.length === 3 && logShape[0] * logShape[1] <= maxTexSize && logShape[2] <= maxTexSize) {\n    return [logShape[0] * logShape[1], logShape[2]];\n  } else if (logShape.length === 3 && logShape[0] <= maxTexSize && logShape[1] * logShape[2] <= maxTexSize) {\n    return [logShape[0], logShape[1] * logShape[2]];\n  } else if (logShape.length === 4 && logShape[0] * logShape[1] * logShape[2] <= maxTexSize && logShape[3] <= maxTexSize) {\n    return [logShape[0] * logShape[1] * logShape[2], logShape[3]];\n  } else if (logShape.length === 4 && logShape[0] <= maxTexSize && logShape[1] * logShape[2] * logShape[3] <= maxTexSize) {\n    return [logShape[0], logShape[1] * logShape[2] * logShape[3]];\n  } else {\n    if (isPacked) {\n      // For packed textures size equals the number of channels required to\n      // accommodate the texture data. However in order to squarify such that\n      // inner dimensions stay even, we rewrite size to equal the number of\n      // texels. Then in the return statement we rehydrate the squarified\n      // dimensions to channel units.\n      var batchDim = getBatchDim(logShape);\n      var rows = 2,\n          cols = 2;\n\n      if (logShape.length) {\n        var _getRowsCols = getRowsCols(logShape);\n\n        var _getRowsCols2 = _slicedToArray(_getRowsCols, 2);\n\n        rows = _getRowsCols2[0];\n        cols = _getRowsCols2[1];\n      }\n\n      size = batchDim * (rows / 2) * (cols / 2);\n      return util.sizeToSquarishShape(size).map(function (d) {\n        return d * 2;\n      });\n    }\n\n    return util.sizeToSquarishShape(size);\n  }\n}\n\nfunction isEven(n) {\n  return n % 2 === 0;\n}\n/**\n * This determines whether reshaping a packed texture requires rearranging\n * the data within the texture, assuming 2x2 packing.\n */\n\n\nexport function isReshapeFree(shape1, shape2) {\n  shape1 = shape1.slice(-2);\n  shape2 = shape2.slice(-2);\n\n  if (util.arraysEqual(shape1, shape2)) {\n    return true;\n  }\n\n  if (!shape1.length || !shape2.length) {\n    // One of the shapes is a scalar.\n    return true;\n  }\n\n  if (shape1[0] === 0 || shape1[1] === 0 || shape2[0] === 0 || shape2[1] === 0) {\n    return true;\n  }\n\n  if (shape1.length !== shape2.length) {\n    // One of the shapes is a vector.\n    var shape1Cols = shape1.slice(-1)[0];\n    var shape2Cols = shape2.slice(-1)[0];\n\n    if (shape1Cols === shape2Cols) {\n      return true;\n    }\n\n    if (isEven(shape1Cols) && isEven(shape2Cols) && (shape1[0] === 1 || shape2[0] === 1)) {\n      return true;\n    }\n  }\n\n  return shape1[1] === shape2[1] && isEven(shape1[0]) && isEven(shape2[0]);\n} // We cache webgl params because the environment gets reset between\n// unit tests and we don't want to constantly query the WebGLContext for\n// MAX_TEXTURE_SIZE.\n\nvar MAX_TEXTURE_SIZE;\nvar MAX_TEXTURES_IN_SHADER;\nexport function getWebGLMaxTextureSize(webGLVersion) {\n  if (MAX_TEXTURE_SIZE == null) {\n    var gl = getWebGLContext(webGLVersion);\n    MAX_TEXTURE_SIZE = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n  }\n\n  return MAX_TEXTURE_SIZE;\n}\nexport function resetMaxTextureSize() {\n  MAX_TEXTURE_SIZE = null;\n}\nexport function resetMaxTexturesInShader() {\n  MAX_TEXTURES_IN_SHADER = null;\n}\nexport function getMaxTexturesInShader(webGLVersion) {\n  if (MAX_TEXTURES_IN_SHADER == null) {\n    var gl = getWebGLContext(webGLVersion);\n    MAX_TEXTURES_IN_SHADER = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n  } // We cap at 16 to avoid spurious runtime \"memory exhausted\" error.\n\n\n  return Math.min(16, MAX_TEXTURES_IN_SHADER);\n}\nexport function getWebGLDisjointQueryTimerVersion(webGLVersion) {\n  if (webGLVersion === 0) {\n    return 0;\n  }\n\n  var queryTimerVersion;\n  var gl = getWebGLContext(webGLVersion);\n\n  if (hasExtension(gl, 'EXT_disjoint_timer_query_webgl2') && webGLVersion === 2) {\n    queryTimerVersion = 2;\n  } else if (hasExtension(gl, 'EXT_disjoint_timer_query')) {\n    queryTimerVersion = 1;\n  } else {\n    queryTimerVersion = 0;\n  }\n\n  return queryTimerVersion;\n}\nexport function hasExtension(gl, extensionName) {\n  var ext = gl.getExtension(extensionName);\n  return ext != null;\n}\nexport function isWebGLVersionEnabled(webGLVersion) {\n  try {\n    var gl = getWebGLContext(webGLVersion);\n\n    if (gl != null) {\n      return true;\n    }\n  } catch (e) {\n    console.log('Error when getting WebGL context: ', e);\n    return false;\n  }\n\n  return false;\n}\nexport function isCapableOfRenderingToFloatTexture(webGLVersion) {\n  if (webGLVersion === 0) {\n    return false;\n  }\n\n  var gl = getWebGLContext(webGLVersion);\n\n  if (webGLVersion === 1) {\n    if (!hasExtension(gl, 'OES_texture_float')) {\n      return false;\n    }\n  } else {\n    if (!hasExtension(gl, 'EXT_color_buffer_float')) {\n      return false;\n    }\n  }\n\n  var isFrameBufferComplete = createFloatTextureAndBindToFramebuffer(gl);\n  return isFrameBufferComplete;\n}\n/**\n * Check if we can download values from a float/half-float texture.\n *\n * Note that for performance reasons we use binding a texture to a framebuffer\n * as a proxy for ability to download float values later using readPixels. The\n * texture params of this texture will not match those in readPixels exactly\n * but if we are unable to bind some kind of float texture to the frameBuffer\n * then we definitely will not be able to read float values from it.\n */\n\nexport function isDownloadFloatTextureEnabled(webGLVersion) {\n  if (webGLVersion === 0) {\n    return false;\n  }\n\n  var gl = getWebGLContext(webGLVersion);\n\n  if (webGLVersion === 1) {\n    if (!hasExtension(gl, 'OES_texture_float')) {\n      return false;\n    }\n\n    if (!hasExtension(gl, 'WEBGL_color_buffer_float')) {\n      return false;\n    }\n  } else {\n    if (hasExtension(gl, 'EXT_color_buffer_float')) {\n      return createFloatTextureAndBindToFramebuffer(gl);\n    }\n\n    var COLOR_BUFFER_HALF_FLOAT = 'EXT_color_buffer_half_float';\n\n    if (hasExtension(gl, COLOR_BUFFER_HALF_FLOAT)) {\n      var textureHalfFloatExtension = gl.getExtension(COLOR_BUFFER_HALF_FLOAT);\n      return createHalfFloatTextureAndBindToFramebuffer(gl, textureHalfFloatExtension);\n    }\n\n    return false;\n  }\n\n  var isFrameBufferComplete = createFloatTextureAndBindToFramebuffer(gl);\n  return isFrameBufferComplete;\n}\n\nfunction createFloatTextureAndBindToFramebuffer(gl) {\n  var texConfig = getTextureConfig(gl);\n  var texture = gl.createTexture();\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  var width = 1;\n  var height = 1;\n  gl.texImage2D(gl.TEXTURE_2D, 0, texConfig.internalFormatFloat, width, height, 0, texConfig.textureFormatFloat, texConfig.textureTypeFloat, null);\n  var frameBuffer = gl.createFramebuffer();\n  gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n  gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n  var isFrameBufferComplete = gl.checkFramebufferStatus(gl.FRAMEBUFFER) === gl.FRAMEBUFFER_COMPLETE;\n  gl.bindTexture(gl.TEXTURE_2D, null);\n  gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n  gl.deleteTexture(texture);\n  gl.deleteFramebuffer(frameBuffer);\n  return isFrameBufferComplete;\n}\n\nfunction createHalfFloatTextureAndBindToFramebuffer( // tslint:disable-next-line:no-any\ngl, textureHalfFloatExtension) {\n  var texConfig = getTextureConfig(gl, textureHalfFloatExtension);\n  var texture = gl.createTexture();\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  var width = 1;\n  var height = 1;\n  gl.texImage2D(gl.TEXTURE_2D, 0, texConfig.internalFormatHalfFloat, width, height, 0, texConfig.textureFormatFloat, texConfig.textureTypeHalfFloat, null);\n  var frameBuffer = gl.createFramebuffer();\n  gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n  gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n  var isFrameBufferComplete = gl.checkFramebufferStatus(gl.FRAMEBUFFER) === gl.FRAMEBUFFER_COMPLETE;\n  gl.bindTexture(gl.TEXTURE_2D, null);\n  gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n  gl.deleteTexture(texture);\n  gl.deleteFramebuffer(frameBuffer);\n  return isFrameBufferComplete;\n}\n\nexport function isWebGLFenceEnabled(webGLVersion) {\n  if (webGLVersion !== 2) {\n    return false;\n  }\n\n  var gl = getWebGLContext(webGLVersion); // tslint:disable-next-line:no-any\n\n  var isEnabled = gl.fenceSync != null;\n  return isEnabled;\n}\nexport function assertNotComplex(tensor, opName) {\n  if (!Array.isArray(tensor)) {\n    tensor = [tensor];\n  }\n\n  tensor.forEach(function (t) {\n    if (t != null) {\n      util.assert(t.dtype !== 'complex64', function () {\n        return \"\".concat(opName, \" does not support complex64 tensors \") + 'in the WebGL backend.';\n      });\n    }\n  });\n}","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { device_util, env } from '@tensorflow/tfjs-core';\nimport { getMaxTexturesInShader, getWebGLDisjointQueryTimerVersion, getWebGLMaxTextureSize, isCapableOfRenderingToFloatTexture, isDownloadFloatTextureEnabled, isWebGLFenceEnabled, isWebGLVersionEnabled } from './webgl_util';\nvar ENV = env();\n/**\n * This file contains WebGL-specific flag registrations.\n */\n\n/**\n * True if WebGL is supported.\n */\n\nENV.registerFlag('HAS_WEBGL', function () {\n  return ENV.getNumber('WEBGL_VERSION') > 0;\n});\n/** 0: No WebGL, 1: WebGL 1.0, 2: WebGL 2.0. */\n\nENV.registerFlag('WEBGL_VERSION', function () {\n  if (isWebGLVersionEnabled(2)) {\n    return 2;\n  } else if (isWebGLVersionEnabled(1)) {\n    return 1;\n  }\n\n  return 0;\n});\n/** Whether to check for numerical representation problems. */\n\nENV.registerFlag('WEBGL_CHECK_NUMERICAL_PROBLEMS', function () {\n  return false;\n});\nENV.registerFlag('WEBGL_BUFFER_SUPPORTED', function () {\n  return ENV.get('WEBGL_VERSION') === 2;\n});\n/** Whether the WebGL backend will sometimes forward ops to the CPU. */\n\nENV.registerFlag('WEBGL_CPU_FORWARD', function () {\n  return true;\n});\n/** Whether the WebGL backend will always use f16 textures for rendering. */\n\nENV.registerFlag('WEBGL_FORCE_F16_TEXTURES', function () {\n  return false;\n});\n/** Whether to turn all packing related flags on. */\n\nENV.registerFlag('WEBGL_PACK', function () {\n  return ENV.getBool('HAS_WEBGL');\n});\n/** Whether we will pack the batchnormalization op. */\n\nENV.registerFlag('WEBGL_PACK_NORMALIZATION', function () {\n  return ENV.getBool('WEBGL_PACK');\n});\n/** Whether we will pack the clip op. */\n\nENV.registerFlag('WEBGL_PACK_CLIP', function () {\n  return ENV.getBool('WEBGL_PACK');\n});\n/** Whether we will pack the depthwise conv op. */\n// TODO: https://github.com/tensorflow/tfjs/issues/1679\n\nENV.registerFlag('WEBGL_PACK_DEPTHWISECONV', function () {\n  return true;\n});\n/** Whether we will pack binary ops. */\n\nENV.registerFlag('WEBGL_PACK_BINARY_OPERATIONS', function () {\n  return ENV.getBool('WEBGL_PACK');\n});\n/** Whether we will pack unary ops. */\n\nENV.registerFlag('WEBGL_PACK_UNARY_OPERATIONS', function () {\n  return ENV.getBool('WEBGL_PACK');\n});\n/** Whether we will pack array ops. */\n\nENV.registerFlag('WEBGL_PACK_ARRAY_OPERATIONS', function () {\n  return ENV.getBool('WEBGL_PACK');\n});\n/** Whether we will pack image ops. */\n\nENV.registerFlag('WEBGL_PACK_IMAGE_OPERATIONS', function () {\n  return ENV.getBool('WEBGL_PACK');\n});\n/** Whether we will pack reduce ops. */\n\nENV.registerFlag('WEBGL_PACK_REDUCE', function () {\n  return ENV.getBool('WEBGL_PACK');\n});\n/** Whether packed WebGL kernels lazily unpack their outputs. */\n\nENV.registerFlag('WEBGL_LAZILY_UNPACK', function () {\n  return ENV.getBool('WEBGL_PACK');\n});\n/** Whether we will use the im2col algorithm to speed up convolutions. */\n\nENV.registerFlag('WEBGL_CONV_IM2COL', function () {\n  return ENV.getBool('WEBGL_PACK');\n});\n/** The maximum texture dimension. */\n\nENV.registerFlag('WEBGL_MAX_TEXTURE_SIZE', function () {\n  return getWebGLMaxTextureSize(ENV.getNumber('WEBGL_VERSION'));\n});\n/** The maximum texture dimension. */\n\nENV.registerFlag('WEBGL_MAX_TEXTURES_IN_SHADER', function () {\n  return getMaxTexturesInShader(ENV.getNumber('WEBGL_VERSION'));\n});\n/**\n * The disjoint_query_timer extension version.\n * 0: disabled, 1: EXT_disjoint_timer_query, 2:\n * EXT_disjoint_timer_query_webgl2.\n * In Firefox with WebGL 2.0,\n * EXT_disjoint_timer_query_webgl2 is not available, so we must use the\n * WebGL 1.0 extension.\n */\n\nENV.registerFlag('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION', function () {\n  var webGLVersion = ENV.getNumber('WEBGL_VERSION');\n\n  if (webGLVersion === 0) {\n    return 0;\n  }\n\n  return getWebGLDisjointQueryTimerVersion(webGLVersion);\n});\n/**\n * Whether the timer object from the disjoint_query_timer extension gives\n * timing information that is reliable.\n */\n\nENV.registerFlag('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE', function () {\n  return ENV.getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION') > 0 && !device_util.isMobile();\n});\n/**\n * Whether the device is physically capable of rendering to float32 textures.\n */\n\nENV.registerFlag('WEBGL_RENDER_FLOAT32_CAPABLE', function () {\n  return isCapableOfRenderingToFloatTexture(ENV.getNumber('WEBGL_VERSION'));\n});\n/**\n * Whether rendering to float32 textures is enabled. If disabled, renders to\n * float16 textures.\n */\n\nENV.registerFlag('WEBGL_RENDER_FLOAT32_ENABLED', function () {\n  return ENV.getBool('WEBGL_FORCE_F16_TEXTURES') ? false : ENV.getBool('WEBGL_RENDER_FLOAT32_CAPABLE');\n});\n/**\n * Whether downloading float textures is enabled (16 or 32 bit). If disabled,\n * uses IEEE 754 encoding of the float32 values to 4 uint8 when downloading.\n */\n\nENV.registerFlag('WEBGL_DOWNLOAD_FLOAT_ENABLED', function () {\n  return isDownloadFloatTextureEnabled(ENV.getNumber('WEBGL_VERSION'));\n});\n/** Whether the fence API is available. */\n\nENV.registerFlag('WEBGL_FENCE_API_ENABLED', function () {\n  return isWebGLFenceEnabled(ENV.getNumber('WEBGL_VERSION'));\n});\n/**\n * Tensors with size <= than this will be uploaded as uniforms, not textures.\n */\n\nENV.registerFlag('WEBGL_SIZE_UPLOAD_UNIFORM', function () {\n  // Use uniform uploads only when 32bit floats are supported. In\n  // 16bit\n  // environments there are problems with comparing a 16bit texture value\n  // with a 32bit uniform value.\n  var useUniforms = ENV.getBool('WEBGL_RENDER_FLOAT32_ENABLED');\n  return useUniforms ? 4 : 0;\n});\n/**\n * If the total number of bytes allocated on the GPU is greater than this\n * number, we will aggressively delete textures upon disposal with\n * gl.deleteMatrixTexture, rather than making them available for reuse.\n *\n * Default value -1 indicates that we will never aggressively delete textures.\n */\n\nENV.registerFlag('WEBGL_DELETE_TEXTURE_THRESHOLD', function () {\n  return -1;\n}, function (threshold) {\n  if (threshold < 0 && threshold !== -1) {\n    throw new Error(\"WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never \" + \"delete) or at least 0, but got \".concat(threshold, \".\"));\n  }\n});\n/**\n * Trigger a manual GL command flush if the threshold of time has passed since\n * previous Kernel execution. This can be useful for Andorid device where GL\n * command flush are delayed un til the end of javascript task. This value is\n * measured in millisecond. Typically you want to set this value to close to 1.\n *\n * Default value 1 for mobile chrome, and -1 for rest cases. -1 indicates that\n * we will not enforce manual flush and depend on system default flush schedule.\n */\n\nENV.registerFlag('WEBGL_FLUSH_THRESHOLD', function () {\n  return device_util.isMobile() && ENV.getBool('IS_CHROME') ? 1 : -1;\n}, function (threshold) {\n  if (threshold < 0 && threshold !== -1) {\n    throw new Error(\"WEBGL_FLUSH_THRESHOLD must be -1 (indicating never \" + \"manual flush) or at least 0, but got \".concat(threshold, \".\"));\n  }\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env } from '@tensorflow/tfjs-core';\nexport function getGlslDifferences() {\n  var version;\n  var attribute;\n  var varyingVs;\n  var varyingFs;\n  var texture2D;\n  var output;\n  var defineOutput;\n  var defineSpecialNaN;\n  var defineSpecialInf;\n  var defineRound;\n\n  if (env().getNumber('WEBGL_VERSION') === 2) {\n    version = '#version 300 es';\n    attribute = 'in';\n    varyingVs = 'out';\n    varyingFs = 'in';\n    texture2D = 'texture';\n    output = 'outputColor';\n    defineOutput = 'out vec4 outputColor;'; // Use custom isnan definition to work across differences between\n    // implementations on various platforms. While this should happen in ANGLE\n    // we still see differences between android and windows (on chrome) when\n    // using isnan directly.\n\n    defineSpecialNaN = \"\\n      bool isnan_custom(float val) {\\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\\n      }\\n\\n      bvec4 isnan_custom(vec4 val) {\\n        return bvec4(isnan_custom(val.x),\\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\\n      }\\n\\n      #define isnan(value) isnan_custom(value)\\n    \"; // In webgl 2 we do not need to specify a custom isinf so there is no\n    // need for a special INFINITY constant.\n\n    defineSpecialInf = \"\";\n    defineRound = \"\\n      #define round(value) newRound(value)\\n      int newRound(float value) {\\n        return int(floor(value + 0.5));\\n      }\\n\\n      ivec4 newRound(vec4 value) {\\n        return ivec4(floor(value + vec4(0.5)));\\n      }\\n    \";\n  } else {\n    version = '';\n    attribute = 'attribute';\n    varyingVs = 'varying';\n    varyingFs = 'varying';\n    texture2D = 'texture2D';\n    output = 'gl_FragColor';\n    defineOutput = ''; // WebGL1 has no built in isnan so we define one here.\n\n    defineSpecialNaN = \"\\n      #define isnan(value) isnan_custom(value)\\n      bool isnan_custom(float val) {\\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\\n      }\\n      bvec4 isnan_custom(vec4 val) {\\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\\n      }\\n    \";\n    defineSpecialInf = \"\\n      uniform float INFINITY;\\n\\n      bool isinf(float val) {\\n        return abs(val) == INFINITY;\\n      }\\n      bvec4 isinf(vec4 val) {\\n        return equal(abs(val), vec4(INFINITY));\\n      }\\n    \";\n    defineRound = \"\\n      int round(float value) {\\n        return int(floor(value + 0.5));\\n      }\\n\\n      ivec4 round(vec4 value) {\\n        return ivec4(floor(value + vec4(0.5)));\\n      }\\n    \";\n  }\n\n  return {\n    version: version,\n    attribute: attribute,\n    varyingVs: varyingVs,\n    varyingFs: varyingFs,\n    texture2D: texture2D,\n    output: output,\n    defineOutput: defineOutput,\n    defineSpecialNaN: defineSpecialNaN,\n    defineSpecialInf: defineSpecialInf,\n    defineRound: defineRound\n  };\n}","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\n/**\n * Produces GLSL code that derives logical coordinates from a flat\n * index. The code performs integer division with each stride and decrements\n * the index until the index equals the final dimension coordinate.\n */\n\nexport function getLogicalCoordinatesFromFlatIndex(coords, shape) {\n  var index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'index';\n  var strides = util.computeStrides(shape);\n  return strides.map(function (stride, i) {\n    var line1 = \"int \".concat(coords[i], \" = \").concat(index, \" / \").concat(stride);\n    var line2 = i === strides.length - 1 ? \"int \".concat(coords[i + 1], \" = \").concat(index, \" - \").concat(coords[i], \" * \").concat(stride) : \"index -= \".concat(coords[i], \" * \").concat(stride);\n    return \"\".concat(line1, \"; \").concat(line2, \";\");\n  }).join('');\n}\n\nfunction buildVec(x) {\n  if (x.length === 1) {\n    return \"\".concat(x[0]);\n  }\n\n  return \"vec\".concat(x.length, \"(\").concat(x.join(','), \")\");\n}\n/**\n * Produces GLSL code that computes the dot product of the input x and y\n * vectors. Handles splitting inputs into increments of vec4s when necessary.\n */\n\n\nexport function dotify(x, y) {\n  if (x.length !== y.length) {\n    throw new Error(\"Vectors to be dotted must be of the same length -\" + \"got \".concat(x.length, \" and \").concat(y.length));\n  }\n\n  var slices = [];\n  var nearestVec4 = Math.floor(x.length / 4);\n  var nearestVec4Remainder = x.length % 4;\n\n  for (var i = 0; i < nearestVec4; i++) {\n    var xSlice = x.slice(i * 4, i * 4 + 4);\n    var ySlice = y.slice(i * 4, i * 4 + 4);\n    slices.push(\"\".concat(buildVec(xSlice), \", \").concat(buildVec(ySlice)));\n  }\n\n  if (nearestVec4Remainder !== 0) {\n    var _xSlice = x.slice(nearestVec4 * 4);\n\n    var _ySlice = y.slice(nearestVec4 * 4);\n\n    if (_xSlice.length === 1) {\n      _xSlice = _xSlice.map(function (d) {\n        return \"float(\".concat(d, \")\");\n      });\n      _ySlice = _ySlice.map(function (d) {\n        return \"float(\".concat(d, \")\");\n      });\n    }\n\n    slices.push(\"\".concat(buildVec(_xSlice), \", \").concat(buildVec(_ySlice)));\n  }\n\n  return slices.map(function (d, i) {\n    return \"dot(\".concat(d, \")\");\n  }).join('+');\n}\n/**\n * Produces GLSL that computes the flat index from 3D coordinates.\n */\n\nexport function getFlatIndexFrom3D(shape) {\n  var strides = util.computeStrides(shape).map(function (d) {\n    return d.toString();\n  });\n  return \"\\n  int getFlatIndex(ivec3 coords) {\\n    return coords.x * \".concat(strides[0], \" + coords.y * \").concat(strides[1], \" + coords.z;\\n  }\\n\");\n}\nexport var ENCODE_FLOAT_SNIPPET = \"\\n  const float FLOAT_MAX = 1.70141184e38;\\n  const float FLOAT_MIN = 1.17549435e-38;\\n\\n  lowp vec4 encode_float(highp float v) {\\n    if (isnan(v)) {\\n      return vec4(255, 255, 255, 255);\\n    }\\n\\n    highp float av = abs(v);\\n\\n    if(av < FLOAT_MIN) {\\n      return vec4(0.0, 0.0, 0.0, 0.0);\\n    } else if(v > FLOAT_MAX) {\\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\\n    } else if(v < -FLOAT_MAX) {\\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\\n    }\\n\\n    highp vec4 c = vec4(0,0,0,0);\\n\\n    highp float e = floor(log2(av));\\n    highp float m = exp2(fract(log2(av))) - 1.0;\\n\\n    c[2] = floor(128.0 * m);\\n    m -= c[2] / 128.0;\\n    c[1] = floor(32768.0 * m);\\n    m -= c[1] / 32768.0;\\n    c[0] = floor(8388608.0 * m);\\n\\n    highp float ebias = e + 127.0;\\n    c[3] = floor(ebias / 2.0);\\n    ebias -= c[3] * 2.0;\\n    c[2] += floor(ebias) * 128.0;\\n\\n    c[3] += 128.0 * step(0.0, -v);\\n\\n    return c / 255.0;\\n  }\\n\";","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getGlslDifferences } from './glsl_version';\nimport * as shader_util from './shader_compiler_util';\nimport { getDenseTexShape, PackingScheme } from './tex_util';\nexport var DecodeMatrixProgram = function DecodeMatrixProgram(outputShape) {\n  _classCallCheck(this, DecodeMatrixProgram);\n\n  this.variableNames = ['A'];\n  this.packedInputs = false;\n  this.packedOutput = true;\n  this.outPackingScheme = PackingScheme.DENSE;\n  var texShape = getDenseTexShape(outputShape);\n  var glsl = getGlslDifferences();\n  this.outputShape = outputShape;\n  this.userCode = \"\\n      ivec3 outCoordsFromFlatIndex(int index) {\\n        \".concat(shader_util.getLogicalCoordinatesFromFlatIndex(['r', 'c', 'd'], outputShape), \"\\n        return ivec3(r, c, d);\\n      }\\n\\n      void main() {\\n        ivec2 resTexRC = ivec2(resultUV.yx *\\n          vec2(\").concat(texShape[0], \", \").concat(texShape[1], \"));\\n        int index = 4 * (resTexRC.x * \").concat(texShape[1], \" + resTexRC.y);\\n\\n        vec4 result = vec4(0.);\\n\\n        for (int i=0; i<4; i++) {\\n          int flatIndex = index + i;\\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\\n          result[i] = getA(rc.x, rc.y, rc.z);\\n        }\\n\\n        \").concat(glsl.output, \" = result;\\n      }\\n    \");\n};","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getGlslDifferences } from './glsl_version';\nimport * as shader_util from './shader_compiler_util';\nimport { getDenseTexShape, PackingScheme } from './tex_util';\nexport var DecodeMatrixPackedProgram = function DecodeMatrixPackedProgram(outputShape) {\n  _classCallCheck(this, DecodeMatrixPackedProgram);\n\n  this.variableNames = ['A'];\n  this.packedInputs = true;\n  this.packedOutput = true;\n  this.outPackingScheme = PackingScheme.DENSE;\n  var texShape = getDenseTexShape(outputShape);\n  var glsl = getGlslDifferences();\n  this.outputShape = outputShape;\n  this.userCode = \"\\n      ivec3 outCoordsFromFlatIndex(int index) {\\n        \".concat(shader_util.getLogicalCoordinatesFromFlatIndex(['r', 'c', 'd'], outputShape), \"\\n        return ivec3(r, c, d);\\n      }\\n\\n      void main() {\\n        ivec2 resTexRC = ivec2(resultUV.yx *\\n          vec2(\").concat(texShape[0], \", \").concat(texShape[1], \"));\\n        int index = 4 * (resTexRC.x * \").concat(texShape[1], \" + resTexRC.y);\\n\\n        vec4 result = vec4(0.);\\n\\n        for (int i=0; i<4; i++) {\\n          int flatIndex = index + i;\\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\\n        }\\n\\n        \").concat(glsl.output, \" = result;\\n      }\\n    \");\n};","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getGlslDifferences } from './glsl_version';\nimport { ENCODE_FLOAT_SNIPPET } from './shader_compiler_util';\nimport { TextureUsage } from './tex_util';\nexport var EncodeFloatProgram = function EncodeFloatProgram(outputShape) {\n  _classCallCheck(this, EncodeFloatProgram);\n\n  this.variableNames = ['A'];\n  this.outTexUsage = TextureUsage.DOWNLOAD;\n  var glsl = getGlslDifferences();\n  this.outputShape = outputShape;\n  this.userCode = \"\\n      \".concat(ENCODE_FLOAT_SNIPPET, \"\\n\\n      void main() {\\n        float x = getAAtOutCoords();\\n        \").concat(glsl.output, \" = encode_float(x);\\n      }\\n    \");\n};","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getGlslDifferences } from './glsl_version';\nimport { ENCODE_FLOAT_SNIPPET } from './shader_compiler_util';\nimport { TextureUsage } from './tex_util';\nexport var EncodeFloatPackedProgram = function EncodeFloatPackedProgram(outputShape) {\n  _classCallCheck(this, EncodeFloatPackedProgram);\n\n  this.variableNames = ['A'];\n  this.packedInputs = true;\n  this.packedOutput = false;\n  this.outTexUsage = TextureUsage.DOWNLOAD;\n  var glsl = getGlslDifferences();\n  this.outputShape = outputShape;\n  this.userCode = \"\\n      \".concat(ENCODE_FLOAT_SNIPPET, \"\\n\\n      void main() {\\n        ivec3 coords = getOutputCoords();\\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\\n        \").concat(glsl.output, \" = encode_float(x);\\n      }\\n    \");\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getGlslDifferences } from './glsl_version';\nimport * as shader_util from './shader_compiler_util';\nexport var EncodeMatrixProgram = function EncodeMatrixProgram(outputShape, texShape) {\n  var inputIsUnsignedByte = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  _classCallCheck(this, EncodeMatrixProgram);\n\n  this.variableNames = ['A'];\n  var glsl = getGlslDifferences();\n\n  var _texShape = _slicedToArray(texShape, 2),\n      height = _texShape[0],\n      width = _texShape[1];\n\n  this.outputShape = outputShape;\n  var output = \"result\";\n\n  if (inputIsUnsignedByte) {\n    output = \"floor(result * 255. + 0.5)\";\n  }\n\n  this.userCode = \"\\n      \".concat(shader_util.getFlatIndexFrom3D(outputShape), \"\\n\\n      void main() {\\n        ivec3 coords = getOutputCoords();\\n\\n        int flatIndex = getFlatIndex(coords);\\n        int offset = imod(flatIndex, 4);\\n\\n        flatIndex = idiv(flatIndex, 4, 1.);\\n\\n        int r = flatIndex / \").concat(width, \";\\n        int c = imod(flatIndex, \").concat(width, \");\\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(\").concat(width, \".0, \").concat(height, \".0);\\n        vec4 values = \").concat(glsl.texture2D, \"(A, uv);\\n\\n        float result;\\n\\n        if(offset == 0) {\\n          result = values[0];\\n        } else if(offset == 1) {\\n          result = values[1];\\n        } else if(offset == 2) {\\n          result = values[2];\\n        } else {\\n          result = values[3];\\n        }\\n\\n        \").concat(glsl.output, \" = vec4(\").concat(output, \", 0., 0., 0.);\\n      }\\n    \");\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getGlslDifferences } from './glsl_version';\nimport * as shader_util from './shader_compiler_util';\n/*\nThis is how the shader encodes a tensor with shape = [2, 3, 5]\n(indices are [batch, row, col]).\n\n000|001   002|003   004|xxx   020|021   022|023   024|xxx\n-------   -------   -------   -------   -------   -------\n010|011   012|013   014|xxx   xxx|xxx   xxx|xxx   xxx|xxx\n\n100|101   102|103   104|xxx   120|121   122|123   124|xxx\n-------   -------   -------   -------   -------   -------\n110|111   112|113   114|xxx   xxx|xxx   xxx|xxx   xxx|xxx\n\nSingle texels contain only values from the same batch, and from adjacent rows\nand columns.\n */\n\nexport var EncodeMatrixPackedProgram = function EncodeMatrixPackedProgram(outputShape, texShape) {\n  var inputIsUnsignedByte = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  _classCallCheck(this, EncodeMatrixPackedProgram);\n\n  this.variableNames = ['A'];\n  this.packedInputs = false;\n  this.packedOutput = true;\n  var glsl = getGlslDifferences();\n\n  var _texShape = _slicedToArray(texShape, 2),\n      height = _texShape[0],\n      width = _texShape[1];\n\n  this.outputShape = outputShape;\n  var mainLoop = '';\n  var output = 'result';\n\n  if (inputIsUnsignedByte) {\n    output = 'floor(result * 255. + 0.5)';\n  }\n\n  for (var row = 0; row <= 1; row++) {\n    for (var col = 0; col <= 1; col++) {\n      var channel = row * 2 + col;\n      mainLoop += \"\\n          localCoords = coords;\\n          if(localCoords[2] + \".concat(col, \" < \").concat(outputShape[2], \") {\\n            localCoords[2] += \").concat(col, \";\\n            if(localCoords[1] + \").concat(row, \" < \").concat(outputShape[1], \") {\\n              localCoords[1] += \").concat(row, \";\\n\\n              flatIndex = getFlatIndex(localCoords);\\n              offset = imod(flatIndex, 4);\\n\\n              flatIndex = idiv(flatIndex, 4, 1.);\\n\\n              r = flatIndex / \").concat(width, \";\\n              c = imod(flatIndex, \").concat(width, \");\\n              uv = (vec2(c, r) + halfCR) / vec2(\").concat(width, \".0, \").concat(height, \".0);\\n              values = \").concat(glsl.texture2D, \"(A, uv);\\n\\n              if(offset == 0) {\\n                result[\").concat(channel, \"] = values[0];\\n              } else if(offset == 1) {\\n                result[\").concat(channel, \"] = values[1];\\n              } else if(offset == 2) {\\n                result[\").concat(channel, \"] = values[2];\\n              } else {\\n                result[\").concat(channel, \"] = values[3];\\n              }\\n            }\\n          }\\n        \");\n    }\n  }\n\n  this.userCode = \"\\n      \".concat(shader_util.getFlatIndexFrom3D(outputShape), \"\\n\\n      void main() {\\n        ivec3 coords = getOutputCoords();\\n\\n        vec4 result = vec4(0.);\\n        int flatIndex, r, c, offset;\\n        ivec3 localCoords;\\n        vec2 uv;\\n        vec4 values;\\n\\n        \").concat(mainLoop, \"\\n\\n        \").concat(glsl.output, \" = \").concat(output, \";\\n      }\\n    \");\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getGlslDifferences } from './glsl_version';\nimport * as tex_util from './tex_util';\nimport * as webgl_util from './webgl_util';\nexport function createVertexShader(gl) {\n  var glsl = getGlslDifferences();\n  var vertexShaderSource = \"\".concat(glsl.version, \"\\n    precision highp float;\\n    \").concat(glsl.attribute, \" vec3 clipSpacePos;\\n    \").concat(glsl.attribute, \" vec2 uv;\\n    \").concat(glsl.varyingVs, \" vec2 resultUV;\\n\\n    void main() {\\n      gl_Position = vec4(clipSpacePos, 1);\\n      resultUV = uv;\\n    }\");\n  return webgl_util.createVertexShader(gl, vertexShaderSource);\n}\nexport function createVertexBuffer(gl) {\n  // [x y z u v] * [upper-left, lower-left, upper-right, lower-right]\n  var vertexArray = new Float32Array([-1, 1, 0, 0, 1, -1, -1, 0, 0, 0, 1, 1, 0, 1, 1, 1, -1, 0, 1, 0]);\n  return webgl_util.createStaticVertexBuffer(gl, vertexArray);\n}\nexport function createIndexBuffer(gl) {\n  // OpenGL (and WebGL) have \"CCW == front\" winding\n  var triangleVertexIndices = new Uint16Array([0, 1, 2, 2, 1, 3]);\n  return webgl_util.createStaticIndexBuffer(gl, triangleVertexIndices);\n}\n\nfunction createAndConfigureTexture(gl, width, height, internalFormat, textureFormat, textureType) {\n  webgl_util.validateTextureSize(width, height);\n  var texture = webgl_util.createTexture(gl);\n  var tex2d = gl.TEXTURE_2D;\n  webgl_util.callAndCheck(gl, function () {\n    return gl.bindTexture(tex2d, texture);\n  });\n  webgl_util.callAndCheck(gl, function () {\n    return gl.texParameteri(tex2d, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  });\n  webgl_util.callAndCheck(gl, function () {\n    return gl.texParameteri(tex2d, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  });\n  webgl_util.callAndCheck(gl, function () {\n    return gl.texParameteri(tex2d, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n  });\n  webgl_util.callAndCheck(gl, function () {\n    return gl.texParameteri(tex2d, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n  });\n  webgl_util.callAndCheck(gl, function () {\n    return gl.texImage2D(tex2d, 0, internalFormat, width, height, 0, textureFormat, textureType, null);\n  });\n  webgl_util.callAndCheck(gl, function () {\n    return gl.bindTexture(gl.TEXTURE_2D, null);\n  });\n  return texture;\n}\n\nexport function getInternalFormatForFloat32MatrixTexture(textureConfig) {\n  return textureConfig.internalFormatFloat;\n}\nexport function createFloat32MatrixTexture(gl, rows, columns, textureConfig) {\n  var _tex_util$getUnpacked = tex_util.getUnpackedMatrixTextureShapeWidthHeight(rows, columns),\n      _tex_util$getUnpacked2 = _slicedToArray(_tex_util$getUnpacked, 2),\n      width = _tex_util$getUnpacked2[0],\n      height = _tex_util$getUnpacked2[1];\n\n  return createAndConfigureTexture(gl, width, height, getInternalFormatForFloat32MatrixTexture(textureConfig), textureConfig.textureFormatFloat, gl.FLOAT);\n}\nexport function getInternalFormatForFloat16MatrixTexture(textureConfig) {\n  return textureConfig.internalFormatHalfFloat;\n}\nexport function createFloat16MatrixTexture(gl, rows, columns, textureConfig) {\n  var _tex_util$getUnpacked3 = tex_util.getUnpackedMatrixTextureShapeWidthHeight(rows, columns),\n      _tex_util$getUnpacked4 = _slicedToArray(_tex_util$getUnpacked3, 2),\n      width = _tex_util$getUnpacked4[0],\n      height = _tex_util$getUnpacked4[1];\n\n  return createAndConfigureTexture(gl, width, height, getInternalFormatForFloat16MatrixTexture(textureConfig), textureConfig.textureFormatFloat, textureConfig.textureTypeHalfFloat);\n}\nexport function getInternalFormatForUnsignedBytesMatrixTexture(textureConfig) {\n  return textureConfig.downloadTextureFormat;\n}\nexport function createUnsignedBytesMatrixTexture(gl, rows, columns, textureConfig) {\n  var _tex_util$getUnpacked5 = tex_util.getUnpackedMatrixTextureShapeWidthHeight(rows, columns),\n      _tex_util$getUnpacked6 = _slicedToArray(_tex_util$getUnpacked5, 2),\n      width = _tex_util$getUnpacked6[0],\n      height = _tex_util$getUnpacked6[1];\n\n  return createAndConfigureTexture(gl, width, height, getInternalFormatForUnsignedBytesMatrixTexture(textureConfig), gl.RGBA, gl.UNSIGNED_BYTE);\n}\nexport function getInternalFormatForPackedMatrixTexture(textureConfig) {\n  return textureConfig.internalFormatPackedFloat;\n}\nexport function createPackedMatrixTexture(gl, rows, columns, textureConfig) {\n  var _tex_util$getPackedMa = tex_util.getPackedMatrixTextureShapeWidthHeight(rows, columns),\n      _tex_util$getPackedMa2 = _slicedToArray(_tex_util$getPackedMa, 2),\n      width = _tex_util$getPackedMa2[0],\n      height = _tex_util$getPackedMa2[1];\n\n  return createAndConfigureTexture(gl, width, height, getInternalFormatForPackedMatrixTexture(textureConfig), gl.RGBA, gl.FLOAT);\n}\nexport function getInternalFormatForFloat16PackedMatrixTexture(textureConfig) {\n  return textureConfig.internalFormatPackedHalfFloat;\n}\nexport function createFloat16PackedMatrixTexture(gl, rows, columns, textureConfig) {\n  var _tex_util$getPackedMa3 = tex_util.getPackedMatrixTextureShapeWidthHeight(rows, columns),\n      _tex_util$getPackedMa4 = _slicedToArray(_tex_util$getPackedMa3, 2),\n      width = _tex_util$getPackedMa4[0],\n      height = _tex_util$getPackedMa4[1];\n\n  return createAndConfigureTexture(gl, width, height, getInternalFormatForFloat16PackedMatrixTexture(textureConfig), gl.RGBA, textureConfig.textureTypeHalfFloat);\n}\nexport function bindVertexProgramAttributeStreams(gl, program, vertexBuffer) {\n  var posOffset = 0; // x is the first buffer element\n\n  var uvOffset = 3 * 4; // uv comes after [x y z]\n\n  var stride = 3 * 4 + 2 * 4; // xyz + uv, each entry is 4-byte float.\n\n  webgl_util.callAndCheck(gl, function () {\n    return gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n  });\n  var success = webgl_util.bindVertexBufferToProgramAttribute(gl, program, 'clipSpacePos', vertexBuffer, 3, stride, posOffset);\n  return success && webgl_util.bindVertexBufferToProgramAttribute(gl, program, 'uv', vertexBuffer, 2, stride, uvOffset);\n}\nexport function uploadDenseMatrixToTexture(gl, texture, width, height, data, textureConfig) {\n  webgl_util.callAndCheck(gl, function () {\n    return gl.bindTexture(gl.TEXTURE_2D, texture);\n  });\n  var dataForUpload, texelDataType, internalFormat;\n\n  if (data instanceof Uint8Array) {\n    dataForUpload = new Uint8Array(width * height * 4);\n    texelDataType = gl.UNSIGNED_BYTE;\n    internalFormat = gl.RGBA;\n  } else {\n    dataForUpload = new Float32Array(width * height * 4);\n    texelDataType = gl.FLOAT;\n    internalFormat = textureConfig.internalFormatPackedFloat;\n  }\n\n  dataForUpload.set(data);\n  webgl_util.callAndCheck(gl, function () {\n    return gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, width, height, 0, gl.RGBA, texelDataType, dataForUpload);\n  });\n  webgl_util.callAndCheck(gl, function () {\n    return gl.bindTexture(gl.TEXTURE_2D, null);\n  });\n}\nexport function uploadPixelDataToTexture(gl, texture, pixels) {\n  webgl_util.callAndCheck(gl, function () {\n    return gl.bindTexture(gl.TEXTURE_2D, texture);\n  });\n\n  if (pixels.data instanceof Uint8Array) {\n    webgl_util.callAndCheck(gl, function () {\n      return gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, pixels.width, pixels.height, 0, gl.RGBA, gl.UNSIGNED_BYTE, pixels.data);\n    });\n  } else {\n    webgl_util.callAndCheck(gl, function () {\n      return gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n    });\n  }\n\n  webgl_util.callAndCheck(gl, function () {\n    return gl.bindTexture(gl.TEXTURE_2D, null);\n  });\n}\nexport function createBufferFromOutputTexture(gl2, rows, columns, textureConfig) {\n  // Create and bind the buffer.\n  var buffer = gl2.createBuffer();\n  webgl_util.callAndCheck(gl2, function () {\n    return gl2.bindBuffer(gl2.PIXEL_PACK_BUFFER, buffer);\n  }); // Initialize the buffer to the size of the texture in bytes.\n\n  var bytesPerFloat = 4;\n  var valuesPerTexel = 4;\n  var bufferSizeBytes = bytesPerFloat * valuesPerTexel * rows * columns;\n  webgl_util.callAndCheck(gl2, function () {\n    return gl2.bufferData(gl2.PIXEL_PACK_BUFFER, bufferSizeBytes, gl2.STREAM_READ);\n  }); // Enqueue a command on the GPU command queue to copy of texture into the\n  // buffer.\n\n  webgl_util.callAndCheck(gl2, function () {\n    return gl2.readPixels(0, 0, columns, rows, gl2.RGBA, gl2.FLOAT, 0);\n  });\n  webgl_util.callAndCheck(gl2, function () {\n    return gl2.bindBuffer(gl2.PIXEL_PACK_BUFFER, null);\n  });\n  return buffer;\n}\nexport function downloadFloat32MatrixFromBuffer(gl, buffer, size) {\n  var gl2 = gl;\n  var downloadTarget = new Float32Array(size);\n  gl2.bindBuffer(gl2.PIXEL_PACK_BUFFER, buffer);\n  gl2.getBufferSubData(gl2.PIXEL_PACK_BUFFER, 0, downloadTarget);\n  gl2.bindBuffer(gl2.PIXEL_PACK_BUFFER, null);\n  return downloadTarget;\n}\nexport function downloadByteEncodedFloatMatrixFromOutputTexture(gl, rows, columns, textureConfig) {\n  var _tex_util$getUnpacked7 = tex_util.getUnpackedMatrixTextureShapeWidthHeight(rows, columns),\n      _tex_util$getUnpacked8 = _slicedToArray(_tex_util$getUnpacked7, 2),\n      w = _tex_util$getUnpacked8[0],\n      h = _tex_util$getUnpacked8[1];\n\n  var numChannels = 4;\n  var downloadTarget = new Uint8Array(tex_util.getUnpackedArraySizeFromMatrixSize(rows * columns, numChannels));\n  webgl_util.callAndCheck(gl, function () {\n    return gl.readPixels(0, 0, w, h, textureConfig.downloadTextureFormat, gl.UNSIGNED_BYTE, downloadTarget);\n  }); // By wrapping the buffer in a Float32Array, we use native browser IEEE 754\n  // decoding of the 4 bytes that back each 32 bit float.\n\n  return new Float32Array(downloadTarget.buffer);\n}\nexport function downloadPackedMatrixFromBuffer(gl, buffer, batch, rows, cols, physicalRows, physicalCols, textureConfig) {\n  var gl2 = gl;\n  var downloadTarget = new Float32Array(tex_util.getPackedRGBAArraySizeFromMatrixShape(physicalRows, physicalCols));\n  gl2.bindBuffer(gl2.PIXEL_PACK_BUFFER, buffer);\n  gl2.getBufferSubData(gl2.PIXEL_PACK_BUFFER, 0, downloadTarget);\n  gl2.bindBuffer(gl2.PIXEL_PACK_BUFFER, null);\n  return downloadTarget;\n}\nexport function downloadMatrixFromPackedOutputTexture(gl, physicalRows, physicalCols) {\n  var packedRGBA = new Float32Array(physicalRows * physicalCols * 4);\n  webgl_util.callAndCheck(gl, function () {\n    return gl.readPixels(0, 0, physicalCols, physicalRows, gl.RGBA, gl.FLOAT, packedRGBA);\n  });\n  return packedRGBA;\n}","import _asyncToGenerator from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _regeneratorRuntime from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/regenerator\";\n\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env, util } from '@tensorflow/tfjs-core';\nimport { getWebGLContext, setWebGLContext } from './canvas_util';\nimport * as gpgpu_util from './gpgpu_util';\nimport * as tex_util from './tex_util';\nimport * as webgl_util from './webgl_util';\nexport var GPGPUContext = /*#__PURE__*/function () {\n  function GPGPUContext(gl) {\n    _classCallCheck(this, GPGPUContext);\n\n    this.outputTexture = null;\n    this.program = null;\n    this.disposed = false;\n    this.vertexAttrsAreBound = false;\n    this.itemsToPoll = [];\n    var glVersion = env().getNumber('WEBGL_VERSION');\n\n    if (gl != null) {\n      this.gl = gl;\n      setWebGLContext(glVersion, gl);\n    } else {\n      this.gl = getWebGLContext(glVersion);\n    } // WebGL 2.0 enables texture floats without an extension.\n\n\n    var COLOR_BUFFER_FLOAT = 'WEBGL_color_buffer_float';\n    var COLOR_BUFFER_HALF_FLOAT = 'EXT_color_buffer_half_float';\n\n    if (env().getNumber('WEBGL_VERSION') === 1) {\n      var TEXTURE_FLOAT = 'OES_texture_float';\n      var TEXTURE_HALF_FLOAT = 'OES_texture_half_float';\n      this.textureFloatExtension = webgl_util.getExtensionOrThrow(this.gl, TEXTURE_FLOAT);\n\n      if (webgl_util.hasExtension(this.gl, TEXTURE_HALF_FLOAT)) {\n        this.textureHalfFloatExtension = webgl_util.getExtensionOrThrow(this.gl, TEXTURE_HALF_FLOAT);\n      } else if (env().get('WEBGL_FORCE_F16_TEXTURES')) {\n        throw new Error('GL context does not support half float textures, yet the ' + 'environment flag WEBGL_FORCE_F16_TEXTURES is set to true.');\n      }\n\n      this.colorBufferFloatExtension = this.gl.getExtension(COLOR_BUFFER_FLOAT);\n\n      if (webgl_util.hasExtension(this.gl, COLOR_BUFFER_HALF_FLOAT)) {\n        this.colorBufferHalfFloatExtension = webgl_util.getExtensionOrThrow(this.gl, COLOR_BUFFER_HALF_FLOAT);\n      } else if (env().get('WEBGL_FORCE_F16_TEXTURES')) {\n        throw new Error('GL context does not support color renderable half floats, yet ' + 'the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.');\n      }\n    } else {\n      COLOR_BUFFER_FLOAT = 'EXT_color_buffer_float';\n\n      if (webgl_util.hasExtension(this.gl, COLOR_BUFFER_FLOAT)) {\n        this.colorBufferFloatExtension = this.gl.getExtension(COLOR_BUFFER_FLOAT);\n      } else if (webgl_util.hasExtension(this.gl, COLOR_BUFFER_HALF_FLOAT)) {\n        this.colorBufferHalfFloatExtension = this.gl.getExtension(COLOR_BUFFER_HALF_FLOAT);\n      } else {\n        throw new Error('GL context does not support color renderable floats');\n      }\n    }\n\n    this.vertexBuffer = gpgpu_util.createVertexBuffer(this.gl);\n    this.indexBuffer = gpgpu_util.createIndexBuffer(this.gl);\n    this.framebuffer = webgl_util.createFramebuffer(this.gl);\n    this.textureConfig = tex_util.getTextureConfig(this.gl, this.textureHalfFloatExtension);\n  }\n\n  _createClass(GPGPUContext, [{\n    key: \"debug\",\n    get: function get() {\n      return env().getBool('DEBUG');\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      var _this = this;\n\n      if (this.disposed) {\n        return;\n      }\n\n      if (this.program != null) {\n        console.warn('Disposing a GPGPUContext that still has a bound WebGLProgram.' + ' This is probably a resource leak, delete the program with ' + 'GPGPUContext.deleteProgram before disposing.');\n      }\n\n      if (this.outputTexture != null) {\n        console.warn('Disposing a GPGPUContext that still has a bound output matrix ' + 'texture.  This is probably a resource leak, delete the output ' + 'matrix texture with GPGPUContext.deleteMatrixTexture before ' + 'disposing.');\n      }\n\n      var gl = this.gl;\n      webgl_util.callAndCheck(gl, function () {\n        return gl.finish();\n      });\n      webgl_util.callAndCheck(gl, function () {\n        return gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n      });\n      webgl_util.callAndCheck(gl, function () {\n        return gl.deleteFramebuffer(_this.framebuffer);\n      });\n      webgl_util.callAndCheck(gl, function () {\n        return gl.bindBuffer(gl.ARRAY_BUFFER, null);\n      });\n      webgl_util.callAndCheck(gl, function () {\n        return gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n      });\n      webgl_util.callAndCheck(gl, function () {\n        return gl.deleteBuffer(_this.indexBuffer);\n      });\n      this.disposed = true;\n    }\n  }, {\n    key: \"createFloat32MatrixTexture\",\n    value: function createFloat32MatrixTexture(rows, columns) {\n      this.throwIfDisposed();\n      return gpgpu_util.createFloat32MatrixTexture(this.gl, rows, columns, this.textureConfig);\n    }\n  }, {\n    key: \"createFloat16MatrixTexture\",\n    value: function createFloat16MatrixTexture(rows, columns) {\n      this.throwIfDisposed();\n      return gpgpu_util.createFloat16MatrixTexture(this.gl, rows, columns, this.textureConfig);\n    }\n  }, {\n    key: \"createUnsignedBytesMatrixTexture\",\n    value: function createUnsignedBytesMatrixTexture(rows, columns) {\n      this.throwIfDisposed();\n      return gpgpu_util.createUnsignedBytesMatrixTexture(this.gl, rows, columns, this.textureConfig);\n    }\n  }, {\n    key: \"uploadPixelDataToTexture\",\n    value: function uploadPixelDataToTexture(texture, pixels) {\n      this.throwIfDisposed();\n      gpgpu_util.uploadPixelDataToTexture(this.gl, texture, pixels);\n    }\n  }, {\n    key: \"uploadDenseMatrixToTexture\",\n    value: function uploadDenseMatrixToTexture(texture, width, height, data) {\n      this.throwIfDisposed();\n      gpgpu_util.uploadDenseMatrixToTexture(this.gl, texture, width, height, data, this.textureConfig);\n    }\n  }, {\n    key: \"createFloat16PackedMatrixTexture\",\n    value: function createFloat16PackedMatrixTexture(rows, columns) {\n      this.throwIfDisposed();\n      return gpgpu_util.createFloat16PackedMatrixTexture(this.gl, rows, columns, this.textureConfig);\n    }\n  }, {\n    key: \"createPackedMatrixTexture\",\n    value: function createPackedMatrixTexture(rows, columns) {\n      this.throwIfDisposed();\n      return gpgpu_util.createPackedMatrixTexture(this.gl, rows, columns, this.textureConfig);\n    }\n  }, {\n    key: \"deleteMatrixTexture\",\n    value: function deleteMatrixTexture(texture) {\n      var _this2 = this;\n\n      this.throwIfDisposed();\n\n      if (this.outputTexture === texture) {\n        webgl_util.unbindColorTextureFromFramebuffer(this.gl, this.framebuffer);\n        this.outputTexture = null;\n      }\n\n      webgl_util.callAndCheck(this.gl, function () {\n        return _this2.gl.deleteTexture(texture);\n      });\n    }\n  }, {\n    key: \"downloadByteEncodedFloatMatrixFromOutputTexture\",\n    value: function downloadByteEncodedFloatMatrixFromOutputTexture(texture, rows, columns) {\n      var _this3 = this;\n\n      return this.downloadMatrixDriver(texture, function () {\n        return gpgpu_util.downloadByteEncodedFloatMatrixFromOutputTexture(_this3.gl, rows, columns, _this3.textureConfig);\n      });\n    }\n  }, {\n    key: \"downloadPackedMatrixFromBuffer\",\n    value: function downloadPackedMatrixFromBuffer(buffer, batch, rows, columns, physicalRows, physicalCols) {\n      return gpgpu_util.downloadPackedMatrixFromBuffer(this.gl, buffer, batch, rows, columns, physicalRows, physicalCols, this.textureConfig);\n    }\n  }, {\n    key: \"downloadFloat32MatrixFromBuffer\",\n    value: function downloadFloat32MatrixFromBuffer(buffer, size) {\n      return gpgpu_util.downloadFloat32MatrixFromBuffer(this.gl, buffer, size);\n    }\n  }, {\n    key: \"createBufferFromTexture\",\n    value: function createBufferFromTexture(texture, rows, columns) {\n      this.bindTextureToFrameBuffer(texture);\n      var result = gpgpu_util.createBufferFromOutputTexture(this.gl, rows, columns, this.textureConfig);\n      this.unbindTextureToFrameBuffer();\n      return result;\n    }\n  }, {\n    key: \"createAndWaitForFence\",\n    value: function createAndWaitForFence() {\n      var fenceContext = this.createFence(this.gl);\n      return this.pollFence(fenceContext);\n    }\n  }, {\n    key: \"createFence\",\n    value: function createFence(gl) {\n      var _this4 = this;\n\n      var query;\n      var isFencePassed;\n\n      if (env().getBool('WEBGL_FENCE_API_ENABLED')) {\n        var gl2 = gl;\n        var sync = gl2.fenceSync(gl2.SYNC_GPU_COMMANDS_COMPLETE, 0);\n        gl.flush();\n\n        isFencePassed = function isFencePassed() {\n          var status = gl2.clientWaitSync(sync, 0, 0);\n          return status === gl2.ALREADY_SIGNALED || status === gl2.CONDITION_SATISFIED;\n        };\n\n        query = sync;\n      } else if (env().getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION') > 0) {\n        query = this.beginQuery();\n        this.endQuery();\n\n        isFencePassed = function isFencePassed() {\n          return _this4.isQueryAvailable(query, env().getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION'));\n        };\n      } else {\n        // If we have no way to fence, return true immediately. This will fire in\n        // WebGL 1.0 when there is no disjoint query timer. In this case, because\n        // the fence passes immediately, we'll immediately ask for a download of\n        // the texture, which will cause the UI thread to hang.\n        isFencePassed = function isFencePassed() {\n          return true;\n        };\n      }\n\n      return {\n        query: query,\n        isFencePassed: isFencePassed\n      };\n    }\n  }, {\n    key: \"downloadMatrixFromPackedTexture\",\n    value: function downloadMatrixFromPackedTexture(texture, physicalRows, physicalCols) {\n      var _this5 = this;\n\n      return this.downloadMatrixDriver(texture, function () {\n        return gpgpu_util.downloadMatrixFromPackedOutputTexture(_this5.gl, physicalRows, physicalCols);\n      });\n    }\n  }, {\n    key: \"createProgram\",\n    value: function createProgram(fragmentShaderSource) {\n      this.throwIfDisposed();\n      var gl = this.gl;\n      var fragmentShader = webgl_util.createFragmentShader(gl, fragmentShaderSource);\n      var vertexShader = gpgpu_util.createVertexShader(gl);\n      var program = webgl_util.createProgram(gl);\n      webgl_util.callAndCheck(gl, function () {\n        return gl.attachShader(program, vertexShader);\n      });\n      webgl_util.callAndCheck(gl, function () {\n        return gl.attachShader(program, fragmentShader);\n      });\n      webgl_util.linkProgram(gl, program);\n\n      if (this.debug) {\n        webgl_util.validateProgram(gl, program);\n      }\n\n      if (!this.vertexAttrsAreBound) {\n        this.setProgram(program);\n        this.vertexAttrsAreBound = gpgpu_util.bindVertexProgramAttributeStreams(gl, this.program, this.vertexBuffer);\n      }\n\n      return program;\n    }\n  }, {\n    key: \"deleteProgram\",\n    value: function deleteProgram(program) {\n      var _this6 = this;\n\n      this.throwIfDisposed();\n\n      if (program === this.program) {\n        this.program = null;\n      }\n\n      if (program != null) {\n        webgl_util.callAndCheck(this.gl, function () {\n          return _this6.gl.deleteProgram(program);\n        });\n      }\n    }\n  }, {\n    key: \"setProgram\",\n    value: function setProgram(program) {\n      var _this7 = this;\n\n      this.throwIfDisposed();\n      this.program = program;\n\n      if (this.program != null && this.debug) {\n        webgl_util.validateProgram(this.gl, this.program);\n      }\n\n      webgl_util.callAndCheck(this.gl, function () {\n        return _this7.gl.useProgram(program);\n      });\n    }\n  }, {\n    key: \"getUniformLocation\",\n    value: function getUniformLocation(program, uniformName) {\n      var shouldThrow = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      this.throwIfDisposed();\n\n      if (shouldThrow) {\n        return webgl_util.getProgramUniformLocationOrThrow(this.gl, program, uniformName);\n      } else {\n        return webgl_util.getProgramUniformLocation(this.gl, program, uniformName);\n      }\n    }\n  }, {\n    key: \"getAttributeLocation\",\n    value: function getAttributeLocation(program, attribute) {\n      var _this8 = this;\n\n      this.throwIfDisposed();\n      return webgl_util.callAndCheck(this.gl, function () {\n        return _this8.gl.getAttribLocation(program, attribute);\n      });\n    }\n  }, {\n    key: \"getUniformLocationNoThrow\",\n    value: function getUniformLocationNoThrow(program, uniformName) {\n      this.throwIfDisposed();\n      return this.gl.getUniformLocation(program, uniformName);\n    }\n  }, {\n    key: \"setInputMatrixTexture\",\n    value: function setInputMatrixTexture(inputMatrixTexture, uniformLocation, textureUnit) {\n      this.throwIfDisposed();\n      this.throwIfNoProgram();\n      webgl_util.bindTextureToProgramUniformSampler(this.gl, inputMatrixTexture, uniformLocation, textureUnit);\n    }\n  }, {\n    key: \"setOutputMatrixTexture\",\n    value: function setOutputMatrixTexture(outputMatrixTexture, rows, columns) {\n      this.setOutputMatrixTextureDriver(outputMatrixTexture, columns, rows);\n    }\n  }, {\n    key: \"setOutputPackedMatrixTexture\",\n    value: function setOutputPackedMatrixTexture(outputPackedMatrixTexture, rows, columns) {\n      this.throwIfDisposed();\n\n      var _tex_util$getPackedMa = tex_util.getPackedMatrixTextureShapeWidthHeight(rows, columns),\n          _tex_util$getPackedMa2 = _slicedToArray(_tex_util$getPackedMa, 2),\n          width = _tex_util$getPackedMa2[0],\n          height = _tex_util$getPackedMa2[1];\n\n      this.setOutputMatrixTextureDriver(outputPackedMatrixTexture, width, height);\n    }\n  }, {\n    key: \"setOutputMatrixWriteRegion\",\n    value: function setOutputMatrixWriteRegion(startRow, numRows, startColumn, numColumns) {\n      this.setOutputMatrixWriteRegionDriver(startColumn, startRow, numColumns, numRows);\n    }\n  }, {\n    key: \"setOutputPackedMatrixWriteRegion\",\n    value: function setOutputPackedMatrixWriteRegion(startRow, numRows, startColumn, numColumns) {\n      throw new Error('setOutputPackedMatrixWriteRegion not implemented.');\n    }\n  }, {\n    key: \"debugValidate\",\n    value: function debugValidate() {\n      if (this.program != null) {\n        webgl_util.validateProgram(this.gl, this.program);\n      }\n\n      webgl_util.validateFramebuffer(this.gl);\n    }\n  }, {\n    key: \"executeProgram\",\n    value: function executeProgram() {\n      this.throwIfDisposed();\n      this.throwIfNoProgram();\n      var gl = this.gl;\n\n      if (this.debug) {\n        this.debugValidate();\n      }\n\n      webgl_util.callAndCheck(gl, function () {\n        return gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0);\n      });\n    }\n  }, {\n    key: \"blockUntilAllProgramsCompleted\",\n    value: function blockUntilAllProgramsCompleted() {\n      var _this9 = this;\n\n      this.throwIfDisposed();\n      webgl_util.callAndCheck(this.gl, function () {\n        return _this9.gl.finish();\n      });\n    }\n  }, {\n    key: \"getQueryTimerExtension\",\n    value: function getQueryTimerExtension() {\n      if (this.disjointQueryTimerExtension == null) {\n        this.disjointQueryTimerExtension = webgl_util.getExtensionOrThrow(this.gl, env().getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION') === 2 ? 'EXT_disjoint_timer_query_webgl2' : 'EXT_disjoint_timer_query');\n      }\n\n      return this.disjointQueryTimerExtension;\n    }\n  }, {\n    key: \"getQueryTimerExtensionWebGL2\",\n    value: function getQueryTimerExtensionWebGL2() {\n      return this.getQueryTimerExtension();\n    }\n  }, {\n    key: \"getQueryTimerExtensionWebGL1\",\n    value: function getQueryTimerExtensionWebGL1() {\n      return this.getQueryTimerExtension();\n    }\n  }, {\n    key: \"beginQuery\",\n    value: function beginQuery() {\n      if (env().getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION') === 2) {\n        var gl2 = this.gl;\n\n        var _ext = this.getQueryTimerExtensionWebGL2();\n\n        var _query = gl2.createQuery();\n\n        gl2.beginQuery(_ext.TIME_ELAPSED_EXT, _query);\n        return _query;\n      }\n\n      var ext = this.getQueryTimerExtensionWebGL1();\n      var query = ext.createQueryEXT();\n      ext.beginQueryEXT(ext.TIME_ELAPSED_EXT, query);\n      return query;\n    }\n  }, {\n    key: \"endQuery\",\n    value: function endQuery() {\n      if (env().getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION') === 2) {\n        var gl2 = this.gl;\n\n        var _ext2 = this.getQueryTimerExtensionWebGL2();\n\n        gl2.endQuery(_ext2.TIME_ELAPSED_EXT);\n        return;\n      }\n\n      var ext = this.getQueryTimerExtensionWebGL1();\n      ext.endQueryEXT(ext.TIME_ELAPSED_EXT);\n    }\n  }, {\n    key: \"waitForQueryAndGetTime\",\n    value: function () {\n      var _waitForQueryAndGetTime = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(query) {\n        var _this10 = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return util.repeatedTry(function () {\n                  return _this10.disposed || // while testing contexts are created / disposed\n                  // in rapid succession, so without this check we\n                  // may poll for the query timer indefinitely\n                  _this10.isQueryAvailable(query, env().getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION'));\n                });\n\n              case 2:\n                return _context.abrupt(\"return\", this.getQueryTime(query, env().getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION')));\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function waitForQueryAndGetTime(_x) {\n        return _waitForQueryAndGetTime.apply(this, arguments);\n      }\n\n      return waitForQueryAndGetTime;\n    }()\n  }, {\n    key: \"getQueryTime\",\n    value: function getQueryTime(query, queryTimerVersion) {\n      if (queryTimerVersion === 0) {\n        return null;\n      }\n\n      if (queryTimerVersion === 2) {\n        var gl2 = this.gl;\n        var timeElapsedNanos = gl2.getQueryParameter(query, gl2.QUERY_RESULT); // Return milliseconds.\n\n        return timeElapsedNanos / 1000000;\n      } else {\n        var ext = this.getQueryTimerExtensionWebGL1();\n\n        var _timeElapsedNanos = ext.getQueryObjectEXT(query, ext.QUERY_RESULT_EXT); // Return milliseconds.\n\n\n        return _timeElapsedNanos / 1000000;\n      }\n    }\n  }, {\n    key: \"isQueryAvailable\",\n    value: function isQueryAvailable(query, queryTimerVersion) {\n      if (queryTimerVersion === 0) {\n        return true;\n      }\n\n      if (queryTimerVersion === 2) {\n        var gl2 = this.gl;\n        var ext = this.getQueryTimerExtensionWebGL2();\n        var available = gl2.getQueryParameter(query, gl2.QUERY_RESULT_AVAILABLE);\n\n        if (this.disjoint == null) {\n          this.disjoint = this.gl.getParameter(ext.GPU_DISJOINT_EXT);\n        }\n\n        return available && !this.disjoint;\n      } else {\n        var _ext3 = this.getQueryTimerExtensionWebGL1();\n\n        var _available = _ext3.getQueryObjectEXT(query, _ext3.QUERY_RESULT_AVAILABLE_EXT);\n\n        if (this.disjoint == null) {\n          this.disjoint = this.gl.getParameter(_ext3.GPU_DISJOINT_EXT);\n        }\n\n        return _available && !this.disjoint;\n      }\n    }\n  }, {\n    key: \"pollFence\",\n    value: function pollFence(fenceContext) {\n      var _this11 = this;\n\n      return new Promise(function (resolve) {\n        _this11.addItemToPoll(function () {\n          return fenceContext.isFencePassed();\n        }, function () {\n          return resolve();\n        });\n      });\n    }\n  }, {\n    key: \"pollItems\",\n    value: function pollItems() {\n      // Find the last query that has finished.\n      var index = linearSearchLastTrue(this.itemsToPoll.map(function (x) {\n        return x.isDoneFn;\n      }));\n\n      for (var i = 0; i <= index; ++i) {\n        var resolveFn = this.itemsToPoll[i].resolveFn;\n        resolveFn();\n      }\n\n      this.itemsToPoll = this.itemsToPoll.slice(index + 1);\n    }\n  }, {\n    key: \"addItemToPoll\",\n    value: function addItemToPoll(isDoneFn, resolveFn) {\n      var _this12 = this;\n\n      this.itemsToPoll.push({\n        isDoneFn: isDoneFn,\n        resolveFn: resolveFn\n      });\n\n      if (this.itemsToPoll.length > 1) {\n        // We already have a running loop that polls.\n        return;\n      } // Start a new loop that polls.\n\n\n      util.repeatedTry(function () {\n        _this12.pollItems(); // End the loop if no more items to poll.\n\n\n        return _this12.itemsToPoll.length === 0;\n      });\n    }\n  }, {\n    key: \"bindTextureToFrameBuffer\",\n    value: function bindTextureToFrameBuffer(texture) {\n      this.throwIfDisposed();\n      webgl_util.bindColorTextureToFramebuffer(this.gl, texture, this.framebuffer);\n\n      if (this.debug) {\n        webgl_util.validateFramebuffer(this.gl);\n      }\n    }\n  }, {\n    key: \"unbindTextureToFrameBuffer\",\n    value: function unbindTextureToFrameBuffer() {\n      if (this.outputTexture != null) {\n        webgl_util.bindColorTextureToFramebuffer(this.gl, this.outputTexture, this.framebuffer);\n\n        if (this.debug) {\n          webgl_util.validateFramebuffer(this.gl);\n        }\n      } else {\n        webgl_util.unbindColorTextureFromFramebuffer(this.gl, this.framebuffer);\n      }\n    }\n  }, {\n    key: \"downloadMatrixDriver\",\n    value: function downloadMatrixDriver(texture, downloadAndDecode) {\n      this.bindTextureToFrameBuffer(texture);\n      var result = downloadAndDecode();\n      this.unbindTextureToFrameBuffer();\n      return result;\n    }\n  }, {\n    key: \"setOutputMatrixTextureDriver\",\n    value: function setOutputMatrixTextureDriver(outputMatrixTextureMaybePacked, width, height) {\n      this.throwIfDisposed();\n      var gl = this.gl;\n      webgl_util.bindColorTextureToFramebuffer(gl, outputMatrixTextureMaybePacked, this.framebuffer);\n\n      if (this.debug) {\n        webgl_util.validateFramebuffer(gl);\n      }\n\n      this.outputTexture = outputMatrixTextureMaybePacked;\n      webgl_util.callAndCheck(gl, function () {\n        return gl.viewport(0, 0, width, height);\n      });\n      webgl_util.callAndCheck(gl, function () {\n        return gl.scissor(0, 0, width, height);\n      });\n    }\n  }, {\n    key: \"setOutputMatrixWriteRegionDriver\",\n    value: function setOutputMatrixWriteRegionDriver(x, y, width, height) {\n      var _this13 = this;\n\n      this.throwIfDisposed();\n      webgl_util.callAndCheck(this.gl, function () {\n        return _this13.gl.scissor(x, y, width, height);\n      });\n    }\n  }, {\n    key: \"throwIfDisposed\",\n    value: function throwIfDisposed() {\n      if (this.disposed) {\n        throw new Error('Attempted to use disposed GPGPUContext.');\n      }\n    }\n  }, {\n    key: \"throwIfNoProgram\",\n    value: function throwIfNoProgram() {\n      if (this.program == null) {\n        throw new Error('No GPU program is currently set.');\n      }\n    }\n  }]);\n\n  return GPGPUContext;\n}();\n/**\n * Finds the index of the last true element using linear search.\n * Note: We can't do binary search because Chrome expects us to explicitly\n * test all fences before download:\n * https://github.com/tensorflow/tfjs/issues/1145\n */\n\nexport function linearSearchLastTrue(arr) {\n  var i = 0;\n\n  for (; i < arr.length; ++i) {\n    var isDone = arr[i]();\n\n    if (!isDone) {\n      break;\n    }\n  }\n\n  return i - 1;\n}","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, util } from '@tensorflow/tfjs-core';\nvar getBroadcastDims = backend_util.getBroadcastDims;\nimport { getGlslDifferences } from './glsl_version';\nimport * as shader_util from './shader_compiler_util';\nexport function makeShader(inputsInfo, outputShape, userCode, usesPackedTextures) {\n  var prefixSnippets = [];\n  inputsInfo.forEach(function (x) {\n    var size = util.sizeFromShape(x.shapeInfo.logicalShape); // Snippet when we decided to upload the values as uniform.\n\n    if (x.shapeInfo.isUniform) {\n      prefixSnippets.push(\"uniform float \".concat(x.name).concat(size > 1 ? \"[\".concat(size, \"]\") : '', \";\"));\n    } else {\n      prefixSnippets.push(\"uniform sampler2D \".concat(x.name, \";\"));\n      prefixSnippets.push(\"uniform int offset\".concat(x.name, \";\"));\n    }\n  });\n  var inputPrefixSnippet = prefixSnippets.join('\\n');\n  var inputSamplingSnippet = inputsInfo.map(function (x) {\n    return getInputSamplingSnippet(x, outputShape, usesPackedTextures);\n  }).join('\\n');\n  var outTexShape = outputShape.texShape;\n  var glsl = getGlslDifferences();\n  var floatTextureSampleSnippet = getFloatTextureSampleSnippet(glsl);\n  var outputSamplingSnippet;\n  var floatTextureSetOutputSnippet;\n  var shaderPrefix = getShaderPrefix(glsl);\n\n  if (outputShape.isPacked) {\n    outputSamplingSnippet = getPackedOutputSamplingSnippet(outputShape.logicalShape, outTexShape);\n    floatTextureSetOutputSnippet = getFloatTextureSetRGBASnippet(glsl);\n  } else {\n    outputSamplingSnippet = getOutputSamplingSnippet(outputShape.logicalShape, outTexShape);\n    floatTextureSetOutputSnippet = getFloatTextureSetRSnippet(glsl);\n  }\n\n  if (usesPackedTextures) {\n    shaderPrefix += SHADER_PACKED_PREFIX;\n  }\n\n  var source = [shaderPrefix, floatTextureSampleSnippet, floatTextureSetOutputSnippet, inputPrefixSnippet, outputSamplingSnippet, inputSamplingSnippet, userCode].join('\\n');\n  return source;\n}\n\nfunction getSamplerFromInInfo(inInfo) {\n  var shape = inInfo.shapeInfo.logicalShape;\n\n  switch (shape.length) {\n    case 0:\n      return getSamplerScalar(inInfo);\n\n    case 1:\n      return getSampler1D(inInfo);\n\n    case 2:\n      return getSampler2D(inInfo);\n\n    case 3:\n      return getSampler3D(inInfo);\n\n    case 4:\n      return getSampler4D(inInfo);\n\n    case 5:\n      return getSampler5D(inInfo);\n\n    case 6:\n      return getSampler6D(inInfo);\n\n    default:\n      throw new Error(\"\".concat(shape.length, \"-D input sampling\") + \" is not yet supported\");\n  }\n}\n\nfunction getPackedSamplerFromInInfo(inInfo) {\n  var shape = inInfo.shapeInfo.logicalShape;\n\n  switch (shape.length) {\n    case 0:\n      return getPackedSamplerScalar(inInfo);\n\n    case 1:\n      return getPackedSampler1D(inInfo);\n\n    case 2:\n      return getPackedSampler2D(inInfo);\n\n    case 3:\n      return getPackedSampler3D(inInfo);\n\n    default:\n      return getPackedSamplerND(inInfo);\n  }\n}\n\nfunction getInputSamplingSnippet(inInfo, outShapeInfo) {\n  var usesPackedTextures = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var res = '';\n\n  if (usesPackedTextures) {\n    res += getPackedSamplerFromInInfo(inInfo);\n  } else {\n    res += getSamplerFromInInfo(inInfo);\n  }\n\n  var inShape = inInfo.shapeInfo.logicalShape;\n  var outShape = outShapeInfo.logicalShape;\n\n  if (inShape.length <= outShape.length) {\n    if (usesPackedTextures) {\n      res += getPackedSamplerAtOutputCoords(inInfo, outShapeInfo);\n    } else {\n      res += getSamplerAtOutputCoords(inInfo, outShapeInfo);\n    }\n  }\n\n  return res;\n}\n\nfunction getPackedOutputSamplingSnippet(outShape, outTexShape) {\n  switch (outShape.length) {\n    case 0:\n      return getOutputScalarCoords();\n\n    case 1:\n      return getOutputPacked1DCoords(outShape, outTexShape);\n\n    case 2:\n      return getOutputPacked2DCoords(outShape, outTexShape);\n\n    case 3:\n      return getOutputPacked3DCoords(outShape, outTexShape);\n\n    default:\n      return getOutputPackedNDCoords(outShape, outTexShape);\n  }\n}\n\nfunction getOutputSamplingSnippet(outShape, outTexShape) {\n  switch (outShape.length) {\n    case 0:\n      return getOutputScalarCoords();\n\n    case 1:\n      return getOutput1DCoords(outShape, outTexShape);\n\n    case 2:\n      return getOutput2DCoords(outShape, outTexShape);\n\n    case 3:\n      return getOutput3DCoords(outShape, outTexShape);\n\n    case 4:\n      return getOutput4DCoords(outShape, outTexShape);\n\n    case 5:\n      return getOutput5DCoords(outShape, outTexShape);\n\n    case 6:\n      return getOutput6DCoords(outShape, outTexShape);\n\n    default:\n      throw new Error(\"\".concat(outShape.length, \"-D output sampling is not yet supported\"));\n  }\n}\n\nfunction getFloatTextureSampleSnippet(glsl) {\n  return \"\\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\\n      return \".concat(glsl.texture2D, \"(textureSampler, uv).r;\\n    }\\n  \");\n}\n\nfunction getFloatTextureSetRSnippet(glsl) {\n  return \"\\n    void setOutput(float val) {\\n      \".concat(glsl.output, \" = vec4(val, 0, 0, 0);\\n    }\\n  \");\n}\n\nfunction getFloatTextureSetRGBASnippet(glsl) {\n  return \"\\n    void setOutput(vec4 val) {\\n      \".concat(glsl.output, \" = val;\\n    }\\n  \");\n}\n\nfunction getShaderPrefix(glsl) {\n  var SHADER_PREFIX = \"\".concat(glsl.version, \"\\n    precision highp float;\\n    precision highp int;\\n    precision highp sampler2D;\\n    \").concat(glsl.varyingFs, \" vec2 resultUV;\\n    \").concat(glsl.defineOutput, \"\\n    const vec2 halfCR = vec2(0.5, 0.5);\\n\\n    struct ivec5\\n    {\\n      int x;\\n      int y;\\n      int z;\\n      int w;\\n      int u;\\n    };\\n\\n    struct ivec6\\n    {\\n      int x;\\n      int y;\\n      int z;\\n      int w;\\n      int u;\\n      int v;\\n    };\\n\\n    uniform float NAN;\\n    \").concat(glsl.defineSpecialNaN, \"\\n    \").concat(glsl.defineSpecialInf, \"\\n    \").concat(glsl.defineRound, \"\\n\\n    int imod(int x, int y) {\\n      return x - y * (x / y);\\n    }\\n\\n    int idiv(int a, int b, float sign) {\\n      int res = a / b;\\n      int mod = imod(a, b);\\n      if (sign < 0. && mod != 0) {\\n        res -= 1;\\n      }\\n      return res;\\n    }\\n\\n    //Based on the work of Dave Hoskins\\n    //https://www.shadertoy.com/view/4djSRW\\n    #define HASHSCALE1 443.8975\\n    float random(float seed){\\n      vec2 p = resultUV * seed;\\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\\n      p3 += dot(p3, p3.yzx + 19.19);\\n      return fract((p3.x + p3.y) * p3.z);\\n    }\\n\\n    \").concat(SAMPLE_1D_SNIPPET, \"\\n    \").concat(SAMPLE_2D_SNIPPET, \"\\n    \").concat(SAMPLE_3D_SNIPPET, \"\\n  \");\n  return SHADER_PREFIX;\n}\n\nvar SAMPLE_1D_SNIPPET = \"\\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\\n  int texR = index / texNumC;\\n  int texC = index - texR * texNumC;\\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\\n}\\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\\n  int texelIndex = index / 2;\\n  int texR = texelIndex / texNumC;\\n  int texC = texelIndex - texR * texNumC;\\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\\n}\\n\";\nvar SAMPLE_2D_SNIPPET = \"\\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\\n  int texNumC, int row, int col) {\\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\\n  int texR = texelIndex / texNumC;\\n  int texC = texelIndex - texR * texNumC;\\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\\n}\\n\";\nvar SAMPLE_3D_SNIPPET = \"\\nvec2 packedUVfrom3D(int texNumR, int texNumC,\\n    int texelsInBatch, int texelsInLogicalRow, int b,\\n    int row, int col) {\\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\\n  int texR = index / texNumC;\\n  int texC = index - texR * texNumC;\\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\\n}\\n\";\nvar SHADER_PACKED_PREFIX = \"\\n  float getChannel(vec4 frag, vec2 innerDims) {\\n    vec2 modCoord = mod(innerDims, 2.);\\n    return modCoord.x == 0. ?\\n      (modCoord.y == 0. ? frag.r : frag.g) :\\n      (modCoord.y == 0. ? frag.b : frag.a);\\n  }\\n  float getChannel(vec4 frag, int dim) {\\n    float modCoord = mod(float(dim), 2.);\\n    return modCoord == 0. ? frag.r : frag.g;\\n  }\\n\";\n\nfunction getOutputScalarCoords() {\n  return \"\\n    int getOutputCoords() {\\n      return 0;\\n    }\\n  \";\n}\n\nfunction getOutputPacked1DCoords(shape, texShape) {\n  var packedTexShape = [Math.ceil(texShape[0] / 2), Math.ceil(texShape[1] / 2)];\n\n  if (packedTexShape[0] === 1) {\n    return \"\\n      int getOutputCoords() {\\n        return 2 * int(resultUV.x * \".concat(packedTexShape[1], \".0);\\n      }\\n    \");\n  }\n\n  if (packedTexShape[1] === 1) {\n    return \"\\n      int getOutputCoords() {\\n        return 2 * int(resultUV.y * \".concat(packedTexShape[0], \".0);\\n      }\\n    \");\n  }\n\n  return \"\\n    int getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(\".concat(packedTexShape[0], \", \").concat(packedTexShape[1], \"));\\n      return 2 * (resTexRC.x * \").concat(packedTexShape[1], \" + resTexRC.y);\\n    }\\n  \");\n}\n\nfunction getOutput1DCoords(shape, texShape) {\n  if (texShape[0] === 1) {\n    return \"\\n      int getOutputCoords() {\\n        return int(resultUV.x * \".concat(texShape[1], \".0);\\n      }\\n    \");\n  }\n\n  if (texShape[1] === 1) {\n    return \"\\n      int getOutputCoords() {\\n        return int(resultUV.y * \".concat(texShape[0], \".0);\\n      }\\n    \");\n  }\n\n  return \"\\n    int getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(\".concat(texShape[0], \", \").concat(texShape[1], \"));\\n      return resTexRC.x * \").concat(texShape[1], \" + resTexRC.y;\\n    }\\n  \");\n}\n\nfunction getOutputPacked3DCoords(shape, texShape) {\n  var packedTexShape = [Math.ceil(texShape[0] / 2), Math.ceil(texShape[1] / 2)];\n  var texelsInLogicalRow = Math.ceil(shape[2] / 2);\n  var texelsInBatch = texelsInLogicalRow * Math.ceil(shape[1] / 2);\n  return \"\\n    ivec3 getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(\".concat(packedTexShape[0], \", \").concat(packedTexShape[1], \"));\\n      int index = resTexRC.x * \").concat(packedTexShape[1], \" + resTexRC.y;\\n\\n      int b = index / \").concat(texelsInBatch, \";\\n      index -= b * \").concat(texelsInBatch, \";\\n\\n      int r = 2 * (index / \").concat(texelsInLogicalRow, \");\\n      int c = imod(index, \").concat(texelsInLogicalRow, \") * 2;\\n\\n      return ivec3(b, r, c);\\n    }\\n  \");\n}\n\nfunction getOutput3DCoords(shape, texShape) {\n  var coordsFromIndexSnippet = shader_util.getLogicalCoordinatesFromFlatIndex(['r', 'c', 'd'], shape);\n  return \"\\n    ivec3 getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(\".concat(texShape[0], \", \").concat(texShape[1], \"));\\n      int index = resTexRC.x * \").concat(texShape[1], \" + resTexRC.y;\\n      \").concat(coordsFromIndexSnippet, \"\\n      return ivec3(r, c, d);\\n    }\\n  \");\n}\n\nfunction getOutputPackedNDCoords(shape, texShape) {\n  var packedTexShape = [Math.ceil(texShape[0] / 2), Math.ceil(texShape[1] / 2)];\n  var texelsInLogicalRow = Math.ceil(shape[shape.length - 1] / 2);\n  var texelsInBatch = texelsInLogicalRow * Math.ceil(shape[shape.length - 2] / 2);\n  var texelsInBatchN = texelsInBatch;\n  var batches = \"\";\n  var coords = 'b, r, c';\n\n  for (var b = 2; b < shape.length - 1; b++) {\n    texelsInBatchN *= shape[shape.length - b - 1];\n    batches = \"\\n      int b\".concat(b, \" = index / \").concat(texelsInBatchN, \";\\n      index -= b\").concat(b, \" * \").concat(texelsInBatchN, \";\\n    \") + batches;\n    coords = \"b\".concat(b, \", \") + coords;\n  }\n\n  return \"\\n    ivec\".concat(shape.length, \" getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(\").concat(packedTexShape[0], \", \").concat(packedTexShape[1], \"));\\n      int index = resTexRC.x * \").concat(packedTexShape[1], \" + resTexRC.y;\\n\\n      \").concat(batches, \"\\n\\n      int b = index / \").concat(texelsInBatch, \";\\n      index -= b * \").concat(texelsInBatch, \";\\n\\n      int r = 2 * (index / \").concat(texelsInLogicalRow, \");\\n      int c = imod(index, \").concat(texelsInLogicalRow, \") * 2;\\n\\n      return ivec\").concat(shape.length, \"(\").concat(coords, \");\\n    }\\n  \");\n}\n\nfunction getOutput4DCoords(shape, texShape) {\n  var coordsFromIndexSnippet = shader_util.getLogicalCoordinatesFromFlatIndex(['r', 'c', 'd', 'd2'], shape);\n  return \"\\n    ivec4 getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n        vec2(\".concat(texShape[0], \", \").concat(texShape[1], \"));\\n      int index = resTexRC.x * \").concat(texShape[1], \" + resTexRC.y;\\n      \").concat(coordsFromIndexSnippet, \"\\n      return ivec4(r, c, d, d2);\\n    }\\n  \");\n}\n\nfunction getOutput5DCoords(shape, texShape) {\n  var coordsFromIndexSnippet = shader_util.getLogicalCoordinatesFromFlatIndex(['r', 'c', 'd', 'd2', 'd3'], shape);\n  return \"\\n    ivec5 getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(\".concat(texShape[0], \",\\n                             \").concat(texShape[1], \"));\\n\\n      int index = resTexRC.x * \").concat(texShape[1], \" + resTexRC.y;\\n\\n      \").concat(coordsFromIndexSnippet, \"\\n\\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\\n      return outShape;\\n    }\\n  \");\n}\n\nfunction getOutput6DCoords(shape, texShape) {\n  var coordsFromIndexSnippet = shader_util.getLogicalCoordinatesFromFlatIndex(['r', 'c', 'd', 'd2', 'd3', 'd4'], shape);\n  return \"\\n    ivec6 getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n        vec2(\".concat(texShape[0], \", \").concat(texShape[1], \"));\\n      int index = resTexRC.x * \").concat(texShape[1], \" + resTexRC.y;\\n\\n      \").concat(coordsFromIndexSnippet, \"\\n\\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\\n      return result;\\n    }\\n  \");\n}\n\nfunction getOutputPacked2DCoords(shape, texShape) {\n  var packedTexShape = [Math.ceil(texShape[0] / 2), Math.ceil(texShape[1] / 2)];\n\n  if (util.arraysEqual(shape, texShape)) {\n    return \"\\n      ivec2 getOutputCoords() {\\n        return 2 * ivec2(resultUV.yx * vec2(\".concat(packedTexShape[0], \", \").concat(packedTexShape[1], \"));\\n      }\\n    \");\n  } // texels needed to accommodate a logical row\n\n\n  var texelsInLogicalRow = Math.ceil(shape[1] / 2);\n  /**\n   * getOutputCoords\n   *\n   * resTexRC: The rows and columns of the texels. If you move over one\n   * texel to the right in the packed texture, you are moving over one column\n   * (not two).\n   *\n   * index: The texel index\n   */\n\n  return \"\\n    ivec2 getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(\".concat(packedTexShape[0], \", \").concat(packedTexShape[1], \"));\\n\\n      int index = resTexRC.x * \").concat(packedTexShape[1], \" + resTexRC.y;\\n      int r = 2 * (index / \").concat(texelsInLogicalRow, \");\\n      int c = imod(index, \").concat(texelsInLogicalRow, \") * 2;\\n\\n      return ivec2(r, c);\\n    }\\n  \");\n}\n\nfunction getOutput2DCoords(shape, texShape) {\n  if (util.arraysEqual(shape, texShape)) {\n    return \"\\n      ivec2 getOutputCoords() {\\n        return ivec2(resultUV.yx * vec2(\".concat(texShape[0], \", \").concat(texShape[1], \"));\\n      }\\n    \");\n  }\n\n  if (shape[1] === 1) {\n    return \"\\n      ivec2 getOutputCoords() {\\n        ivec2 resTexRC = ivec2(resultUV.yx *\\n                               vec2(\".concat(texShape[0], \", \").concat(texShape[1], \"));\\n        int index = resTexRC.x * \").concat(texShape[1], \" + resTexRC.y;\\n        return ivec2(index, 0);\\n      }\\n    \");\n  }\n\n  if (shape[0] === 1) {\n    return \"\\n      ivec2 getOutputCoords() {\\n        ivec2 resTexRC = ivec2(resultUV.yx *\\n                               vec2(\".concat(texShape[0], \", \").concat(texShape[1], \"));\\n        int index = resTexRC.x * \").concat(texShape[1], \" + resTexRC.y;\\n        return ivec2(0, index);\\n      }\\n    \");\n  }\n\n  return \"\\n    ivec2 getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(\".concat(texShape[0], \", \").concat(texShape[1], \"));\\n      int index = resTexRC.x * \").concat(texShape[1], \" + resTexRC.y;\\n      int r = index / \").concat(shape[1], \";\\n      int c = index - r * \").concat(shape[1], \";\\n      return ivec2(r, c);\\n    }\\n  \");\n}\n\nfunction getFlatOffsetUniformName(texName) {\n  return \"offset\".concat(texName);\n}\n\nfunction getPackedSamplerScalar(inputInfo) {\n  var texName = inputInfo.name;\n  var funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n  var glsl = getGlslDifferences();\n  return \"\\n    vec4 \".concat(funcName, \"() {\\n      return \").concat(glsl.texture2D, \"(\").concat(texName, \", halfCR);\\n    }\\n  \");\n}\n\nfunction getSamplerScalar(inputInfo) {\n  var texName = inputInfo.name;\n  var funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n\n  if (inputInfo.shapeInfo.isUniform) {\n    return \"float \".concat(funcName, \"() {return \").concat(texName, \";}\");\n  }\n\n  var _inputInfo$shapeInfo$ = _slicedToArray(inputInfo.shapeInfo.texShape, 2),\n      texNumR = _inputInfo$shapeInfo$[0],\n      texNumC = _inputInfo$shapeInfo$[1];\n\n  if (texNumR === 1 && texNumC === 1) {\n    return \"\\n      float \".concat(funcName, \"() {\\n        return sampleTexture(\").concat(texName, \", halfCR);\\n      }\\n    \");\n  }\n\n  var _inputInfo$shapeInfo$2 = _slicedToArray(inputInfo.shapeInfo.texShape, 2),\n      tNumR = _inputInfo$shapeInfo$2[0],\n      tNumC = _inputInfo$shapeInfo$2[1];\n\n  var offset = getFlatOffsetUniformName(texName);\n  return \"\\n    float \".concat(funcName, \"() {\\n      vec2 uv = uvFromFlat(\").concat(tNumR, \", \").concat(tNumC, \", \").concat(offset, \");\\n      return sampleTexture(\").concat(texName, \", uv);\\n    }\\n  \");\n}\n\nfunction getPackedSampler1D(inputInfo) {\n  var texName = inputInfo.name;\n  var funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n  var texShape = inputInfo.shapeInfo.texShape;\n  var packedTexShape = [Math.ceil(texShape[0] / 2), Math.ceil(texShape[1] / 2)];\n  var glsl = getGlslDifferences();\n  return \"\\n    vec4 \".concat(funcName, \"(int index) {\\n      vec2 uv = packedUVfrom1D(\\n        \").concat(packedTexShape[0], \", \").concat(packedTexShape[1], \", index);\\n      return \").concat(glsl.texture2D, \"(\").concat(texName, \", uv);\\n    }\\n  \");\n}\n\nfunction getSampler1D(inputInfo) {\n  var texName = inputInfo.name;\n  var funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n\n  if (inputInfo.shapeInfo.isUniform) {\n    // Uniform arrays will be less than 65505 (no risk of float16 overflow).\n    return \"\\n      float \".concat(funcName, \"(int index) {\\n        \").concat(getUniformSampler(inputInfo), \"\\n      }\\n    \");\n  }\n\n  var texShape = inputInfo.shapeInfo.texShape;\n  var tNumR = texShape[0];\n  var tNumC = texShape[1];\n\n  if (tNumC === 1 && tNumR === 1) {\n    return \"\\n      float \".concat(funcName, \"(int index) {\\n        return sampleTexture(\").concat(texName, \", halfCR);\\n      }\\n    \");\n  }\n\n  var offset = getFlatOffsetUniformName(texName);\n\n  if (tNumC === 1) {\n    return \"\\n      float \".concat(funcName, \"(int index) {\\n        vec2 uv = vec2(0.5, (float(index + \").concat(offset, \") + 0.5) / \").concat(tNumR, \".0);\\n        return sampleTexture(\").concat(texName, \", uv);\\n      }\\n    \");\n  }\n\n  if (tNumR === 1) {\n    return \"\\n      float \".concat(funcName, \"(int index) {\\n        vec2 uv = vec2((float(index + \").concat(offset, \") + 0.5) / \").concat(tNumC, \".0, 0.5);\\n        return sampleTexture(\").concat(texName, \", uv);\\n      }\\n    \");\n  }\n\n  return \"\\n    float \".concat(funcName, \"(int index) {\\n      vec2 uv = uvFromFlat(\").concat(tNumR, \", \").concat(tNumC, \", index + \").concat(offset, \");\\n      return sampleTexture(\").concat(texName, \", uv);\\n    }\\n  \");\n}\n\nfunction getPackedSampler2D(inputInfo) {\n  var shape = inputInfo.shapeInfo.logicalShape;\n  var texName = inputInfo.name;\n  var funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n  var texShape = inputInfo.shapeInfo.texShape;\n  var texNumR = texShape[0];\n  var texNumC = texShape[1];\n  var glsl = getGlslDifferences();\n\n  if (texShape != null && util.arraysEqual(shape, texShape)) {\n    return \"\\n      vec4 \".concat(funcName, \"(int row, int col) {\\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(\").concat(texNumC, \".0, \").concat(texNumR, \".0);\\n\\n        return \").concat(glsl.texture2D, \"(\").concat(texName, \", uv);\\n      }\\n    \");\n  }\n\n  var packedTexShape = [Math.ceil(texShape[0] / 2), Math.ceil(texShape[1] / 2)];\n  var valuesPerRow = Math.ceil(shape[1] / 2);\n  return \"\\n    vec4 \".concat(funcName, \"(int row, int col) {\\n      vec2 uv = packedUVfrom2D(\").concat(valuesPerRow, \", \").concat(packedTexShape[0], \", \").concat(packedTexShape[1], \", row, col);\\n      return \").concat(glsl.texture2D, \"(\").concat(texName, \", uv);\\n    }\\n  \");\n}\n\nfunction getSampler2D(inputInfo) {\n  var shape = inputInfo.shapeInfo.logicalShape;\n  var texName = inputInfo.name;\n  var funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n  var texShape = inputInfo.shapeInfo.texShape;\n\n  if (texShape != null && util.arraysEqual(shape, texShape)) {\n    var _texNumR = texShape[0];\n    var _texNumC = texShape[1];\n    return \"\\n    float \".concat(funcName, \"(int row, int col) {\\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(\").concat(_texNumC, \".0, \").concat(_texNumR, \".0);\\n      return sampleTexture(\").concat(texName, \", uv);\\n    }\\n  \");\n  }\n\n  var _util$squeezeShape = util.squeezeShape(shape),\n      newShape = _util$squeezeShape.newShape,\n      keptDims = _util$squeezeShape.keptDims;\n\n  var squeezedShape = newShape;\n\n  if (squeezedShape.length < shape.length) {\n    var newInputInfo = squeezeInputInfo(inputInfo, squeezedShape);\n    var params = ['row', 'col'];\n    return \"\\n      \".concat(getSamplerFromInInfo(newInputInfo), \"\\n      float \").concat(funcName, \"(int row, int col) {\\n        return \").concat(funcName, \"(\").concat(getSqueezedParams(params, keptDims), \");\\n      }\\n    \");\n  }\n\n  if (inputInfo.shapeInfo.isUniform) {\n    // Uniform arrays will be less than 65505 (no risk of float16 overflow).\n    return \"\\n      float \".concat(funcName, \"(int row, int col) {\\n        int index = round(dot(vec2(row, col), vec2(\").concat(shape[1], \", 1)));\\n        \").concat(getUniformSampler(inputInfo), \"\\n      }\\n    \");\n  }\n\n  var texNumR = texShape[0];\n  var texNumC = texShape[1];\n  var offset = getFlatOffsetUniformName(texName);\n\n  if (texNumC === 1) {\n    // index is used directly as physical (no risk of float16 overflow).\n    return \"\\n    float \".concat(funcName, \"(int row, int col) {\\n      float index = dot(vec3(row, col, \").concat(offset, \"), vec3(\").concat(shape[1], \", 1, 1));\\n      vec2 uv = vec2(0.5, (index + 0.5) / \").concat(texNumR, \".0);\\n      return sampleTexture(\").concat(texName, \", uv);\\n    }\\n  \");\n  }\n\n  if (texNumR === 1) {\n    // index is used directly as physical (no risk of float16 overflow).\n    return \"\\n    float \".concat(funcName, \"(int row, int col) {\\n      float index = dot(vec3(row, col, \").concat(offset, \"), vec3(\").concat(shape[1], \", 1, 1));\\n      vec2 uv = vec2((index + 0.5) / \").concat(texNumC, \".0, 0.5);\\n      return sampleTexture(\").concat(texName, \", uv);\\n    }\\n  \");\n  }\n\n  return \"\\n  float \".concat(funcName, \"(int row, int col) {\\n    // Explicitly use integer operations as dot() only works on floats.\\n    int index = row * \").concat(shape[1], \" + col + \").concat(offset, \";\\n    vec2 uv = uvFromFlat(\").concat(texNumR, \", \").concat(texNumC, \", index);\\n    return sampleTexture(\").concat(texName, \", uv);\\n  }\\n\");\n}\n\nfunction getPackedSampler3D(inputInfo) {\n  var shape = inputInfo.shapeInfo.logicalShape;\n  var texName = inputInfo.name;\n  var funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n  var texShape = inputInfo.shapeInfo.texShape;\n  var packedTexShape = [Math.ceil(texShape[0] / 2), Math.ceil(texShape[1] / 2)];\n\n  if (shape[0] === 1) {\n    var squeezedShape = shape.slice(1);\n    var keptDims = [1, 2];\n    var newInputInfo = squeezeInputInfo(inputInfo, squeezedShape);\n    var params = ['b', 'row', 'col'];\n    return \"\\n        \".concat(getPackedSamplerFromInInfo(newInputInfo), \"\\n        vec4 \").concat(funcName, \"(int b, int row, int col) {\\n          return \").concat(funcName, \"(\").concat(getSqueezedParams(params, keptDims), \");\\n        }\\n      \");\n  }\n\n  var texNumR = packedTexShape[0];\n  var texNumC = packedTexShape[1];\n  var valuesPerRow = Math.ceil(shape[2] / 2);\n  var texelsInBatch = valuesPerRow * Math.ceil(shape[1] / 2);\n  var glsl = getGlslDifferences();\n  return \"\\n    vec4 \".concat(funcName, \"(int b, int row, int col) {\\n      vec2 uv = packedUVfrom3D(\\n        \").concat(texNumR, \", \").concat(texNumC, \", \").concat(texelsInBatch, \", \").concat(valuesPerRow, \", b, row, col);\\n      return \").concat(glsl.texture2D, \"(\").concat(texName, \", uv);\\n    }\\n  \");\n}\n\nfunction getSampler3D(inputInfo) {\n  var shape = inputInfo.shapeInfo.logicalShape;\n  var texName = inputInfo.name;\n  var funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n  var stride0 = shape[1] * shape[2];\n  var stride1 = shape[2];\n\n  var _util$squeezeShape2 = util.squeezeShape(shape),\n      newShape = _util$squeezeShape2.newShape,\n      keptDims = _util$squeezeShape2.keptDims;\n\n  var squeezedShape = newShape;\n\n  if (squeezedShape.length < shape.length) {\n    var newInputInfo = squeezeInputInfo(inputInfo, squeezedShape);\n    var params = ['row', 'col', 'depth'];\n    return \"\\n        \".concat(getSamplerFromInInfo(newInputInfo), \"\\n        float \").concat(funcName, \"(int row, int col, int depth) {\\n          return \").concat(funcName, \"(\").concat(getSqueezedParams(params, keptDims), \");\\n        }\\n      \");\n  }\n\n  if (inputInfo.shapeInfo.isUniform) {\n    // Uniform arrays will be less than 65505 (no risk of float16 overflow).\n    return \"\\n      float \".concat(funcName, \"(int row, int col, int depth) {\\n        int index = round(dot(vec3(row, col, depth),\\n                          vec3(\").concat(stride0, \", \").concat(stride1, \", 1)));\\n        \").concat(getUniformSampler(inputInfo), \"\\n      }\\n    \");\n  }\n\n  var texShape = inputInfo.shapeInfo.texShape;\n  var texNumR = texShape[0];\n  var texNumC = texShape[1];\n  var flatOffset = inputInfo.shapeInfo.flatOffset;\n\n  if (texNumC === stride0 && flatOffset == null) {\n    // texC is used directly as physical (no risk of float16 overflow).\n    return \"\\n        float \".concat(funcName, \"(int row, int col, int depth) {\\n          float texR = float(row);\\n          float texC = dot(vec2(col, depth), vec2(\").concat(stride1, \", 1));\\n          vec2 uv = (vec2(texC, texR) + halfCR) /\\n                     vec2(\").concat(texNumC, \".0, \").concat(texNumR, \".0);\\n          return sampleTexture(\").concat(texName, \", uv);\\n        }\\n      \");\n  }\n\n  if (texNumC === stride1 && flatOffset == null) {\n    // texR is used directly as physical (no risk of float16 overflow).\n    return \"\\n    float \".concat(funcName, \"(int row, int col, int depth) {\\n      float texR = dot(vec2(row, col), vec2(\").concat(shape[1], \", 1));\\n      float texC = float(depth);\\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(\").concat(texNumC, \".0, \").concat(texNumR, \".0);\\n      return sampleTexture(\").concat(texName, \", uv);\\n    }\\n  \");\n  }\n\n  var offset = getFlatOffsetUniformName(texName);\n  return \"\\n      float \".concat(funcName, \"(int row, int col, int depth) {\\n        // Explicitly use integer operations as dot() only works on floats.\\n        int index = row * \").concat(stride0, \" + col * \").concat(stride1, \" + depth + \").concat(offset, \";\\n        vec2 uv = uvFromFlat(\").concat(texNumR, \", \").concat(texNumC, \", index);\\n        return sampleTexture(\").concat(texName, \", uv);\\n      }\\n  \");\n}\n\nfunction getPackedSamplerND(inputInfo) {\n  var shape = inputInfo.shapeInfo.logicalShape;\n  var rank = shape.length;\n  var texName = inputInfo.name;\n  var funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n  var texShape = inputInfo.shapeInfo.texShape;\n  var packedTexShape = [Math.ceil(texShape[0] / 2), Math.ceil(texShape[1] / 2)];\n  var texNumR = packedTexShape[0];\n  var texNumC = packedTexShape[1];\n  var valuesPerRow = Math.ceil(shape[rank - 1] / 2);\n  var texelsInBatch = valuesPerRow * Math.ceil(shape[rank - 2] / 2);\n  var params = \"int b, int row, int col\";\n  var index = \"b * \".concat(texelsInBatch, \" + (row / 2) * \").concat(valuesPerRow, \" + (col / 2)\");\n\n  for (var b = 2; b < rank - 1; b++) {\n    params = \"int b\".concat(b, \", \") + params;\n    texelsInBatch *= shape[rank - b - 1];\n    index = \"b\".concat(b, \" * \").concat(texelsInBatch, \" + \") + index;\n  }\n\n  var glsl = getGlslDifferences();\n  return \"\\n    vec4 \".concat(funcName, \"(\").concat(params, \") {\\n      int index = \").concat(index, \";\\n      int texR = index / \").concat(texNumC, \";\\n      int texC = index - texR * \").concat(texNumC, \";\\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(\").concat(texNumC, \", \").concat(texNumR, \");\\n      return \").concat(glsl.texture2D, \"(\").concat(texName, \", uv);\\n    }\\n  \");\n}\n\nfunction getSampler4D(inputInfo) {\n  var shape = inputInfo.shapeInfo.logicalShape;\n  var texName = inputInfo.name;\n  var funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n  var stride2 = shape[3];\n  var stride1 = shape[2] * stride2;\n  var stride0 = shape[1] * stride1;\n\n  var _util$squeezeShape3 = util.squeezeShape(shape),\n      newShape = _util$squeezeShape3.newShape,\n      keptDims = _util$squeezeShape3.keptDims;\n\n  if (newShape.length < shape.length) {\n    var newInputInfo = squeezeInputInfo(inputInfo, newShape);\n    var params = ['row', 'col', 'depth', 'depth2'];\n    return \"\\n      \".concat(getSamplerFromInInfo(newInputInfo), \"\\n      float \").concat(funcName, \"(int row, int col, int depth, int depth2) {\\n        return \").concat(funcName, \"(\").concat(getSqueezedParams(params, keptDims), \");\\n      }\\n    \");\n  }\n\n  if (inputInfo.shapeInfo.isUniform) {\n    // Uniform arrays will be less than 65505 (no risk of float16 overflow).\n    return \"\\n      float \".concat(funcName, \"(int row, int col, int depth, int depth2) {\\n        int index = round(dot(vec4(row, col, depth, depth2),\\n                          vec4(\").concat(stride0, \", \").concat(stride1, \", \").concat(stride2, \", 1)));\\n        \").concat(getUniformSampler(inputInfo), \"\\n      }\\n    \");\n  }\n\n  var flatOffset = inputInfo.shapeInfo.flatOffset;\n  var texShape = inputInfo.shapeInfo.texShape;\n  var texNumR = texShape[0];\n  var texNumC = texShape[1];\n\n  if (texNumC === stride0 && flatOffset == null) {\n    // texC is used directly as physical (no risk of float16 overflow).\n    return \"\\n      float \".concat(funcName, \"(int row, int col, int depth, int depth2) {\\n        float texR = float(row);\\n        float texC =\\n            dot(vec3(col, depth, depth2),\\n                vec3(\").concat(stride1, \", \").concat(stride2, \", 1));\\n        vec2 uv = (vec2(texC, texR) + halfCR) /\\n                   vec2(\").concat(texNumC, \".0, \").concat(texNumR, \".0);\\n        return sampleTexture(\").concat(texName, \", uv);\\n      }\\n    \");\n  }\n\n  if (texNumC === stride2 && flatOffset == null) {\n    // texR is used directly as physical (no risk of float16 overflow).\n    return \"\\n      float \".concat(funcName, \"(int row, int col, int depth, int depth2) {\\n        float texR = dot(vec3(row, col, depth),\\n                         vec3(\").concat(shape[1] * shape[2], \", \").concat(shape[2], \", 1));\\n        float texC = float(depth2);\\n        vec2 uv = (vec2(texC, texR) + halfCR) /\\n                  vec2(\").concat(texNumC, \".0, \").concat(texNumR, \".0);\\n        return sampleTexture(\").concat(texName, \", uv);\\n      }\\n    \");\n  }\n\n  var offset = getFlatOffsetUniformName(texName);\n  return \"\\n    float \".concat(funcName, \"(int row, int col, int depth, int depth2) {\\n      // Explicitly use integer operations as dot() only works on floats.\\n      int index = row * \").concat(stride0, \" + col * \").concat(stride1, \" +\\n          depth * \").concat(stride2, \" + depth2;\\n      vec2 uv = uvFromFlat(\").concat(texNumR, \", \").concat(texNumC, \", index + \").concat(offset, \");\\n      return sampleTexture(\").concat(texName, \", uv);\\n    }\\n  \");\n}\n\nfunction getSampler5D(inputInfo) {\n  var shape = inputInfo.shapeInfo.logicalShape;\n  var texName = inputInfo.name;\n  var funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n  var stride3 = shape[4];\n  var stride2 = shape[3] * stride3;\n  var stride1 = shape[2] * stride2;\n  var stride0 = shape[1] * stride1;\n\n  var _util$squeezeShape4 = util.squeezeShape(shape),\n      newShape = _util$squeezeShape4.newShape,\n      keptDims = _util$squeezeShape4.keptDims;\n\n  if (newShape.length < shape.length) {\n    var newInputInfo = squeezeInputInfo(inputInfo, newShape);\n    var params = ['row', 'col', 'depth', 'depth2', 'depth3'];\n    return \"\\n      \".concat(getSamplerFromInInfo(newInputInfo), \"\\n      float \").concat(funcName, \"(int row, int col, int depth, int depth2, int depth3) {\\n        return \").concat(funcName, \"(\").concat(getSqueezedParams(params, keptDims), \");\\n      }\\n    \");\n  }\n\n  if (inputInfo.shapeInfo.isUniform) {\n    // Uniform arrays will be less than 65505 (no risk of float16 overflow).\n    return \"\\n      float \".concat(funcName, \"(int row, int col, int depth, int depth2, int depth3) {\\n        float index = dot(\\n          vec4(row, col, depth, depth2),\\n          vec4(\").concat(stride0, \", \").concat(stride1, \", \").concat(stride2, \", \").concat(stride3, \")) +\\n          depth3;\\n        \").concat(getUniformSampler(inputInfo), \"\\n      }\\n    \");\n  }\n\n  var flatOffset = inputInfo.shapeInfo.flatOffset;\n  var texShape = inputInfo.shapeInfo.texShape;\n  var texNumR = texShape[0];\n  var texNumC = texShape[1];\n\n  if (texNumC === stride0 && flatOffset == null) {\n    // texC is used directly as physical (no risk of float16 overflow).\n    return \"\\n      float \".concat(funcName, \"(int row, int col, int depth, int depth2, int depth3) {\\n        int texR = row;\\n        float texC = dot(vec4(col, depth, depth2, depth3),\\n                         vec4(\").concat(stride1, \", \").concat(stride2, \", \").concat(stride3, \", 1));\\n        vec2 uv = (vec2(texC, texR) + halfCR) /\\n                   vec2(\").concat(texNumC, \".0, \").concat(texNumR, \".0);\\n        return sampleTexture(\").concat(texName, \", uv);\\n      }\\n    \");\n  }\n\n  if (texNumC === stride3 && flatOffset == null) {\n    // texR is used directly as physical (no risk of float16 overflow).\n    return \"\\n      float \".concat(funcName, \"(int row, int col, int depth, int depth2, int depth3) {\\n        float texR = dot(\\n          vec4(row, col, depth, depth2),\\n          vec4(\").concat(shape[1] * shape[2] * shape[3], \",\\n               \").concat(shape[2] * shape[3], \", \").concat(shape[3], \", 1));\\n        int texC = depth3;\\n        vec2 uv = (vec2(texC, texR) + halfCR) /\\n                  vec2(\").concat(texNumC, \".0, \").concat(texNumR, \".0);\\n        return sampleTexture(\").concat(texName, \", uv);\\n      }\\n    \");\n  }\n\n  var offset = getFlatOffsetUniformName(texName);\n  return \"\\n    float \".concat(funcName, \"(int row, int col, int depth, int depth2, int depth3) {\\n      // Explicitly use integer operations as dot() only works on floats.\\n      int index = row * \").concat(stride0, \" + col * \").concat(stride1, \" + depth * \").concat(stride2, \" +\\n          depth2 * \").concat(stride3, \" + depth3 + \").concat(offset, \";\\n      vec2 uv = uvFromFlat(\").concat(texNumR, \", \").concat(texNumC, \", index);\\n      return sampleTexture(\").concat(texName, \", uv);\\n    }\\n  \");\n}\n\nfunction getSampler6D(inputInfo) {\n  var shape = inputInfo.shapeInfo.logicalShape;\n  var texName = inputInfo.name;\n  var funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n\n  var _util$squeezeShape5 = util.squeezeShape(shape),\n      newShape = _util$squeezeShape5.newShape,\n      keptDims = _util$squeezeShape5.keptDims;\n\n  if (newShape.length < shape.length) {\n    var newInputInfo = squeezeInputInfo(inputInfo, newShape);\n    var params = ['row', 'col', 'depth', 'depth2', 'depth3', 'depth4'];\n    return \"\\n      \".concat(getSamplerFromInInfo(newInputInfo), \"\\n      float \").concat(funcName, \"(int row, int col, int depth,\\n                    int depth2, int depth3, int depth4) {\\n        return \").concat(funcName, \"(\").concat(getSqueezedParams(params, keptDims), \");\\n      }\\n    \");\n  }\n\n  var stride4 = shape[5];\n  var stride3 = shape[4] * stride4;\n  var stride2 = shape[3] * stride3;\n  var stride1 = shape[2] * stride2;\n  var stride0 = shape[1] * stride1;\n\n  if (inputInfo.shapeInfo.isUniform) {\n    // Uniform arrays will be less than 65505 (no risk of float16 overflow).\n    return \"\\n      float \".concat(funcName, \"(int row, int col, int depth,\\n                  int depth2, int depth3, int depth4) {\\n        int index = round(dot(\\n          vec4(row, col, depth, depth2),\\n          vec4(\").concat(stride0, \", \").concat(stride1, \", \").concat(stride2, \", \").concat(stride3, \")) +\\n          dot(\\n            vec2(depth3, depth4),\\n            vec2(\").concat(stride4, \", 1)));\\n        \").concat(getUniformSampler(inputInfo), \"\\n      }\\n    \");\n  }\n\n  var flatOffset = inputInfo.shapeInfo.flatOffset;\n  var texShape = inputInfo.shapeInfo.texShape;\n  var texNumR = texShape[0];\n  var texNumC = texShape[1];\n\n  if (texNumC === stride0 && flatOffset == null) {\n    // texC is used directly as physical (no risk of float16 overflow).\n    return \"\\n      float \".concat(funcName, \"(int row, int col, int depth,\\n                    int depth2, int depth3, int depth4) {\\n        int texR = row;\\n        float texC = dot(vec4(col, depth, depth2, depth3),\\n          vec4(\").concat(stride1, \", \").concat(stride2, \", \").concat(stride3, \", \").concat(stride4, \")) +\\n               float(depth4);\\n        vec2 uv = (vec2(texC, texR) + halfCR) /\\n                   vec2(\").concat(texNumC, \".0, \").concat(texNumR, \".0);\\n        return sampleTexture(\").concat(texName, \", uv);\\n      }\\n    \");\n  }\n\n  if (texNumC === stride4 && flatOffset == null) {\n    // texR is used directly as physical (no risk of float16 overflow).\n    return \"\\n      float \".concat(funcName, \"(int row, int col, int depth,\\n                    int depth2, int depth3, int depth4) {\\n        float texR = dot(vec4(row, col, depth, depth2),\\n          vec4(\").concat(shape[1] * shape[2] * shape[3] * shape[4], \",\\n               \").concat(shape[2] * shape[3] * shape[4], \",\\n               \").concat(shape[3] * shape[4], \",\\n               \").concat(shape[4], \")) + float(depth3);\\n        int texC = depth4;\\n        vec2 uv = (vec2(texC, texR) + halfCR) /\\n                  vec2(\").concat(texNumC, \".0, \").concat(texNumR, \".0);\\n        return sampleTexture(\").concat(texName, \", uv);\\n      }\\n    \");\n  }\n\n  var offset = getFlatOffsetUniformName(texName);\n  return \"\\n    float \".concat(funcName, \"(int row, int col, int depth,\\n                  int depth2, int depth3, int depth4) {\\n      // Explicitly use integer operations as dot() only works on floats.\\n      int index = row * \").concat(stride0, \" + col * \").concat(stride1, \" + depth * \").concat(stride2, \" +\\n          depth2 * \").concat(stride3, \" + depth3 * \").concat(stride4, \" + depth4 + \").concat(offset, \";\\n      vec2 uv = uvFromFlat(\").concat(texNumR, \", \").concat(texNumC, \", index);\\n      return sampleTexture(\").concat(texName, \", uv);\\n    }\\n  \");\n}\n\nfunction getUniformSampler(inputInfo) {\n  var texName = inputInfo.name;\n  var inSize = util.sizeFromShape(inputInfo.shapeInfo.logicalShape);\n\n  if (inSize < 2) {\n    return \"return \".concat(texName, \";\");\n  }\n\n  return \"\\n    for (int i = 0; i < \".concat(inSize, \"; i++) {\\n      if (i == index) {\\n        return \").concat(texName, \"[i];\\n      }\\n    }\\n  \");\n}\n\nfunction getPackedSamplerAtOutputCoords(inputInfo, outShapeInfo) {\n  var texName = inputInfo.name;\n  var texFuncSnippet = texName.charAt(0).toUpperCase() + texName.slice(1);\n  var funcName = 'get' + texFuncSnippet + 'AtOutCoords';\n  var inRank = inputInfo.shapeInfo.logicalShape.length;\n  var outRank = outShapeInfo.logicalShape.length;\n  var broadcastDims = getBroadcastDims(inputInfo.shapeInfo.logicalShape, outShapeInfo.logicalShape);\n  var type = getCoordsDataType(outRank);\n  var rankDiff = outRank - inRank;\n  var coordsSnippet;\n  var fields = ['x', 'y', 'z', 'w', 'u', 'v'];\n\n  if (inRank === 0) {\n    coordsSnippet = '';\n  } else if (outRank < 2 && broadcastDims.length >= 1) {\n    coordsSnippet = 'coords = 0;';\n  } else {\n    coordsSnippet = broadcastDims.map(function (d) {\n      return \"coords.\".concat(fields[d + rankDiff], \" = 0;\");\n    }).join('\\n');\n  }\n\n  var unpackedCoordsSnippet = '';\n\n  if (outRank < 2 && inRank > 0) {\n    unpackedCoordsSnippet = 'coords';\n  } else {\n    unpackedCoordsSnippet = inputInfo.shapeInfo.logicalShape.map(function (s, i) {\n      return \"coords.\".concat(fields[i + rankDiff]);\n    }).join(', ');\n  }\n\n  var output = \"return outputValue;\";\n  var inSize = util.sizeFromShape(inputInfo.shapeInfo.logicalShape);\n  var isInputScalar = inSize === 1;\n  var outSize = util.sizeFromShape(outShapeInfo.logicalShape);\n  var isOutputScalar = outSize === 1;\n\n  if (inRank === 1 && !isInputScalar && !isOutputScalar) {\n    output = \"\\n      return vec4(outputValue.xy, outputValue.xy);\\n    \";\n  } else if (isInputScalar && !isOutputScalar) {\n    if (outRank === 1) {\n      output = \"\\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\\n      \";\n    } else {\n      output = \"\\n        return vec4(outputValue.x);\\n      \";\n    }\n  } else if (broadcastDims.length) {\n    var rows = inRank - 2;\n    var cols = inRank - 1;\n\n    if (broadcastDims.indexOf(rows) > -1 && broadcastDims.indexOf(cols) > -1) {\n      output = \"return vec4(outputValue.x);\";\n    } else if (broadcastDims.indexOf(rows) > -1) {\n      output = \"return vec4(outputValue.x, outputValue.y, \" + \"outputValue.x, outputValue.y);\";\n    } else if (broadcastDims.indexOf(cols) > -1) {\n      output = \"return vec4(outputValue.xx, outputValue.zz);\";\n    }\n  }\n\n  return \"\\n    vec4 \".concat(funcName, \"() {\\n      \").concat(type, \" coords = getOutputCoords();\\n      \").concat(coordsSnippet, \"\\n      vec4 outputValue = get\").concat(texFuncSnippet, \"(\").concat(unpackedCoordsSnippet, \");\\n      \").concat(output, \"\\n    }\\n  \");\n}\n\nfunction getSamplerAtOutputCoords(inputInfo, outShapeInfo) {\n  var texName = inputInfo.name;\n  var texFuncSnippet = texName.charAt(0).toUpperCase() + texName.slice(1);\n  var funcName = 'get' + texFuncSnippet + 'AtOutCoords';\n  var outTexShape = outShapeInfo.texShape;\n  var inTexShape = inputInfo.shapeInfo.texShape;\n  var inRank = inputInfo.shapeInfo.logicalShape.length;\n  var outRank = outShapeInfo.logicalShape.length;\n\n  if (!inputInfo.shapeInfo.isUniform && inRank === outRank && inputInfo.shapeInfo.flatOffset == null && util.arraysEqual(inTexShape, outTexShape)) {\n    return \"\\n      float \".concat(funcName, \"() {\\n        return sampleTexture(\").concat(texName, \", resultUV);\\n      }\\n    \");\n  }\n\n  var type = getCoordsDataType(outRank);\n  var broadcastDims = getBroadcastDims(inputInfo.shapeInfo.logicalShape, outShapeInfo.logicalShape);\n  var rankDiff = outRank - inRank;\n  var coordsSnippet;\n  var fields = ['x', 'y', 'z', 'w', 'u', 'v'];\n\n  if (inRank === 0) {\n    coordsSnippet = '';\n  } else if (outRank < 2 && broadcastDims.length >= 1) {\n    coordsSnippet = 'coords = 0;';\n  } else {\n    coordsSnippet = broadcastDims.map(function (d) {\n      return \"coords.\".concat(fields[d + rankDiff], \" = 0;\");\n    }).join('\\n');\n  }\n\n  var unpackedCoordsSnippet = '';\n\n  if (outRank < 2 && inRank > 0) {\n    unpackedCoordsSnippet = 'coords';\n  } else {\n    unpackedCoordsSnippet = inputInfo.shapeInfo.logicalShape.map(function (s, i) {\n      return \"coords.\".concat(fields[i + rankDiff]);\n    }).join(', ');\n  }\n\n  return \"\\n    float \".concat(funcName, \"() {\\n      \").concat(type, \" coords = getOutputCoords();\\n      \").concat(coordsSnippet, \"\\n      return get\").concat(texFuncSnippet, \"(\").concat(unpackedCoordsSnippet, \");\\n    }\\n  \");\n}\n\nexport function getCoordsDataType(rank) {\n  if (rank <= 1) {\n    return 'int';\n  } else if (rank === 2) {\n    return 'ivec2';\n  } else if (rank === 3) {\n    return 'ivec3';\n  } else if (rank === 4) {\n    return 'ivec4';\n  } else if (rank === 5) {\n    return 'ivec5';\n  } else if (rank === 6) {\n    return 'ivec6';\n  } else {\n    throw Error(\"GPU for rank \".concat(rank, \" is not yet supported\"));\n  }\n}\n/** Returns a new input info (a copy) that has a squeezed logical shape. */\n\nfunction squeezeInputInfo(inInfo, squeezedShape) {\n  // Deep copy.\n  var newInputInfo = JSON.parse(JSON.stringify(inInfo));\n  newInputInfo.shapeInfo.logicalShape = squeezedShape;\n  return newInputInfo;\n}\n\nfunction getSqueezedParams(params, keptDims) {\n  return keptDims.map(function (d) {\n    return params[d];\n  }).join(', ');\n}","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env, util } from '@tensorflow/tfjs-core';\nimport * as shader_compiler from './shader_compiler';\nexport function compileProgram(gpgpu, program, inputs, output) {\n  var userCode = program.userCode;\n  var inputInfos = inputs.map(function (input, i) {\n    var shapeInfo = {\n      logicalShape: input.shape,\n      texShape: input.isUniform ? null : input.texData.texShape,\n      isUniform: input.isUniform,\n      isPacked: input.isUniform ? false : input.texData.isPacked,\n      flatOffset: null\n    };\n\n    if (input.texData != null && input.texData.slice != null && input.texData.slice.flatOffset > 0) {\n      shapeInfo.flatOffset = input.texData.slice.flatOffset;\n    }\n\n    return {\n      name: program.variableNames[i],\n      shapeInfo: shapeInfo\n    };\n  });\n  var inShapeInfos = inputInfos.map(function (x) {\n    return x.shapeInfo;\n  });\n  var outShapeInfo = {\n    logicalShape: output.shape,\n    texShape: output.texData.texShape,\n    isUniform: false,\n    isPacked: output.texData.isPacked,\n    flatOffset: null\n  };\n  var source = shader_compiler.makeShader(inputInfos, outShapeInfo, userCode, program.packedInputs);\n  var webGLProgram = gpgpu.createProgram(source); // Add special uniforms (NAN, INFINITY)\n\n  var infLoc = null;\n  var nanLoc = gpgpu.getUniformLocation(webGLProgram, 'NAN', false);\n\n  if (env().getNumber('WEBGL_VERSION') === 1) {\n    infLoc = gpgpu.getUniformLocation(webGLProgram, 'INFINITY', false);\n  } // Add user-defined uniforms\n\n\n  var uniformLocations = {};\n\n  for (var i = 0; i < program.variableNames.length; i++) {\n    var varName = program.variableNames[i];\n    var shouldThrow = false;\n    uniformLocations[varName] = gpgpu.getUniformLocation(webGLProgram, varName, shouldThrow);\n    uniformLocations[\"offset\".concat(varName)] = gpgpu.getUniformLocation(webGLProgram, \"offset\".concat(varName), shouldThrow);\n  }\n\n  return {\n    program: program,\n    source: source,\n    webGLProgram: webGLProgram,\n    uniformLocations: uniformLocations,\n    inShapeInfos: inShapeInfos,\n    outShapeInfo: outShapeInfo,\n    infLoc: infLoc,\n    nanLoc: nanLoc\n  };\n}\n\nfunction validateBinaryAndProgram(shapeInfos, inputs) {\n  if (shapeInfos.length !== inputs.length) {\n    throw Error(\"Binary was compiled with \".concat(shapeInfos.length, \" inputs, but \") + \"was executed with \".concat(inputs.length, \" inputs\"));\n  }\n\n  shapeInfos.forEach(function (s, i) {\n    var shapeA = s.logicalShape;\n    var input = inputs[i];\n    var shapeB = input.shape;\n\n    if (!util.arraysEqual(shapeA, shapeB)) {\n      throw Error(\"Binary was compiled with different shapes than \" + \"the current args. Shapes \".concat(shapeA, \" and \").concat(shapeB, \" must match\"));\n    } // The input is uploaded as uniform.\n\n\n    if (s.isUniform && input.isUniform) {\n      return;\n    }\n\n    var texShapeA = s.texShape;\n    var texShapeB = input.isUniform ? null : input.texData.texShape;\n\n    if (!util.arraysEqual(texShapeA, texShapeB)) {\n      throw Error(\"Binary was compiled with different texture shapes than the\" + \" current args. Shape \".concat(texShapeA, \" and \").concat(texShapeB, \" must match\"));\n    }\n  });\n}\n\nexport function runProgram(gpgpu, binary, inputs, output, customSetup) {\n  validateBinaryAndProgram(binary.inShapeInfos, inputs);\n  validateBinaryAndProgram([binary.outShapeInfo], [output]);\n  var outTex = output.texData.texture;\n  var outTexShape = output.texData.texShape;\n\n  if (output.texData.isPacked) {\n    gpgpu.setOutputPackedMatrixTexture(outTex, outTexShape[0], outTexShape[1]);\n  } else {\n    gpgpu.setOutputMatrixTexture(outTex, outTexShape[0], outTexShape[1]);\n  }\n\n  gpgpu.setProgram(binary.webGLProgram); // Set special uniforms (NAN, INFINITY)\n\n  if (env().getNumber('WEBGL_VERSION') === 1) {\n    if (binary.infLoc !== null) {\n      gpgpu.gl.uniform1f(binary.infLoc, Infinity);\n    }\n  }\n\n  if (binary.nanLoc !== null) {\n    gpgpu.gl.uniform1f(binary.nanLoc, NaN);\n  } // Set user-defined inputs\n\n\n  inputs.forEach(function (input, i) {\n    var varName = binary.program.variableNames[i];\n    var varLoc = binary.uniformLocations[varName];\n    var varOffsetLoc = binary.uniformLocations[\"offset\".concat(varName)];\n\n    if (varLoc == null) {\n      // The compiler inferred that this variable is not used in this shader.\n      return;\n    }\n\n    if (input.isUniform) {\n      // Upload the values of the tensor as uniform.\n      if (util.sizeFromShape(input.shape) < 2) {\n        gpgpu.gl.uniform1f(varLoc, input.uniformValues[0]);\n      } else {\n        var vals = input.uniformValues;\n\n        if (!(vals instanceof Float32Array)) {\n          vals = new Float32Array(vals);\n        }\n\n        gpgpu.gl.uniform1fv(varLoc, vals);\n      }\n\n      return;\n    } // If the input was sliced, upload the flat offset index.\n\n\n    if (input.texData.slice != null && varOffsetLoc != null) {\n      gpgpu.gl.uniform1i(varOffsetLoc, input.texData.slice.flatOffset);\n    }\n\n    gpgpu.setInputMatrixTexture(input.texData.texture, varLoc, i);\n  });\n\n  if (customSetup != null) {\n    customSetup(gpgpu, binary.webGLProgram);\n  }\n\n  gpgpu.executeProgram();\n}\nexport function makeShaderKey(program, inputs, output) {\n  var keyInputs = '';\n  inputs.concat(output).forEach(function (x) {\n    var hasOffset = x.texData != null && x.texData.slice != null && x.texData.slice.flatOffset > 0;\n    var texShape = x.isUniform ? 'uniform' : x.texData.texShape;\n    keyInputs += \"\".concat(x.shape, \"_\").concat(texShape, \"_\").concat(hasOffset);\n  });\n  var keyUserCode = program.userCode;\n  var key = program.constructor.name; // Fast string concat. See https://jsperf.com/string-concatenation/14.\n\n  key += '_' + keyInputs + '_' + keyUserCode;\n  return key;\n}","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// Import shared functionality from tfjs-backend-cpu without triggering\n// side effects.\n// tslint:disable-next-line: no-imports-from-dist\nimport * as shared from '@tensorflow/tfjs-backend-cpu/dist/shared';\nvar addImplCPU = shared.addImpl,\n    bincountImplCPU = shared.bincountImpl,\n    bincountReduceImplCPU = shared.bincountReduceImpl,\n    ceilImplCPU = shared.ceilImpl,\n    concatImplCPU = shared.concatImpl,\n    expImplCPU = shared.expImpl,\n    expm1ImplCPU = shared.expm1Impl,\n    floorImplCPU = shared.floorImpl,\n    gatherV2ImplCPU = shared.gatherV2Impl,\n    greaterImplCPU = shared.greaterImpl,\n    lessImplCPU = shared.lessImpl,\n    linSpaceImplCPU = shared.linSpaceImpl,\n    logImplCPU = shared.logImpl,\n    maxImplCPU = shared.maxImpl,\n    maximumImplCPU = shared.maximumImpl,\n    minimumImplCPU = shared.minimumImpl,\n    multiplyImplCPU = shared.multiplyImpl,\n    negImplCPU = shared.negImpl,\n    prodImplCPU = shared.prodImpl,\n    rangeImplCPU = shared.rangeImpl,\n    rsqrtImplCPU = shared.rsqrtImpl,\n    simpleAbsImplCPU = shared.simpleAbsImpl,\n    sliceImplCPU = shared.sliceImpl,\n    stridedSliceImplCPU = shared.stridedSliceImpl,\n    subImplCPU = shared.subImpl,\n    tileImplCPU = shared.tileImpl,\n    topKImplCPU = shared.topKImpl,\n    transposeImplCPU = shared.transposeImpl,\n    uniqueImplCPU = shared.uniqueImpl;\nexport { addImplCPU, bincountImplCPU, bincountReduceImplCPU, ceilImplCPU, concatImplCPU, expImplCPU, expm1ImplCPU, floorImplCPU, gatherV2ImplCPU, greaterImplCPU, lessImplCPU, linSpaceImplCPU, logImplCPU, maxImplCPU, maximumImplCPU, minimumImplCPU, multiplyImplCPU, negImplCPU, prodImplCPU, simpleAbsImplCPU, sliceImplCPU, stridedSliceImplCPU, subImplCPU, rangeImplCPU, rsqrtImplCPU, tileImplCPU, topKImplCPU, transposeImplCPU, uniqueImplCPU };","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport function getVecChannels(name, rank) {\n  return ['x', 'y', 'z', 'w', 'u', 'v'].slice(0, rank).map(function (d) {\n    return \"\".concat(name, \".\").concat(d);\n  });\n}\nexport function getChannels(name, rank) {\n  if (rank === 1) {\n    return [name];\n  }\n\n  return getVecChannels(name, rank);\n}\nexport function getSourceCoords(rank, dims) {\n  if (rank === 1) {\n    return 'rc';\n  }\n\n  var coords = '';\n\n  for (var i = 0; i < rank; i++) {\n    coords += dims[i];\n\n    if (i < rank - 1) {\n      coords += ',';\n    }\n  }\n\n  return coords;\n}","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getChannels } from './packing_util';\nimport { getCoordsDataType } from './shader_compiler';\nexport var PackProgram = function PackProgram(outputShape) {\n  _classCallCheck(this, PackProgram);\n\n  this.variableNames = ['A'];\n  this.packedInputs = false;\n  this.packedOutput = true; // Only input / output 3D tensors.\n\n  this.outputShape = outputShape;\n  var rank = outputShape.length;\n\n  if (rank === 0) {\n    this.userCode = \"\\n        void main() {\\n          setOutput(vec4(getA(), 0., 0., 0.));\\n        }\\n      \";\n  } else {\n    var channels = getChannels('rc', rank);\n    var dtype = getCoordsDataType(rank);\n    var outOfBoundsCondition = getOutOfBoundsCondition(rank, outputShape, channels);\n    var setup = getSetup(rank, outputShape[outputShape.length - 1], outputShape[outputShape.length - 2], channels);\n    var output = getOutput(outputShape, channels);\n    this.userCode = \"\\n        void main() {\\n          \".concat(dtype, \" rc = getOutputCoords();\\n\\n          if(\").concat(outOfBoundsCondition, \") {\\n            setOutput(vec4(0));\\n          } else {\\n            \").concat(setup, \"\\n\\n            setOutput(vec4(\").concat(output, \"));\\n          }\\n        }\\n      \");\n  }\n};\n\nfunction getSourceCoordsArr(rank, dims) {\n  var coords = [];\n\n  for (var row = 0; row <= 1; row++) {\n    for (var col = 0; col <= 1; col++) {\n      var coord = \"\".concat(row === 0 ? 'r' : 'rp1', \", \").concat(col === 0 ? 'c' : 'cp1');\n\n      for (var d = 2; d < rank; d++) {\n        coord = \"\".concat(dims[dims.length - 1 - d], \",\") + coord;\n      }\n\n      coords.push(coord);\n    }\n  }\n\n  return coords;\n}\n\nfunction getOutOfBoundsCondition(rank, shape, dims) {\n  if (rank === 1) {\n    return \"rc > \".concat(shape[0]);\n  }\n\n  var cond = '';\n\n  for (var i = rank - 2; i < rank; i++) {\n    cond += \"\".concat(dims[i], \" >= \").concat(shape[i]);\n\n    if (i < rank - 1) {\n      cond += '||';\n    }\n  }\n\n  return cond;\n}\n\nfunction getSetup(rank, cols, rows, dims) {\n  if (rank === 1) {\n    return '';\n  }\n\n  var innerDims = dims.slice(-2);\n  return \"\\n    int r = \".concat(innerDims[0], \";\\n    int c = \").concat(innerDims[1], \";\\n    int rp1 = r + 1;\\n    int cp1 = c + 1;\\n\\n    bool cEdge = cp1 >= \").concat(cols, \";\\n    bool rEdge = rp1 >= \").concat(rows, \";\\n  \");\n}\n\nfunction getOutput(shape, dims) {\n  var rank = shape.length;\n  var sourceCoords = getSourceCoordsArr(rank, dims);\n\n  if (rank === 1) {\n    return \"getA(rc),\\n            rc + 1 >= \".concat(shape[0], \" ? 0. : getA(rc + 1),\\n            0, 0\");\n  }\n\n  return \"getA(\".concat(sourceCoords[0], \"),\\n          cEdge ? 0. : getA(\").concat(sourceCoords[1], \"),\\n          rEdge ? 0. : getA(\").concat(sourceCoords[2], \"),\\n          rEdge || cEdge ? 0. : getA(\").concat(sourceCoords[3], \")\");\n}","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport * as shader_util from './shader_compiler_util';\nexport var ReshapePackedProgram = function ReshapePackedProgram(outputShape, inputShape) {\n  _classCallCheck(this, ReshapePackedProgram);\n\n  this.variableNames = ['A'];\n  this.packedInputs = true;\n  this.packedOutput = true;\n  this.outputShape = outputShape;\n  var mainLoop = \"\";\n\n  for (var i = 0; i < 4; i++) {\n    var thisRC = \"thisRC = rc;\";\n\n    if (i % 2 === 1) {\n      thisRC += \"thisRC.z += 1;\";\n    }\n\n    if (i > 1) {\n      thisRC += \"thisRC.y += 1;\";\n    }\n\n    mainLoop += \"\\n        \".concat(thisRC, \"\\n        \").concat(i > 0 ? \"if(thisRC.y < rows && thisRC.z < cols){\" : '', \"\\n          int flatIndex = getFlatIndex(thisRC);\\n\\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\\n\\n          result[\").concat(i, \"] =\\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\\n        \").concat(i > 0 ? '}' : '', \"\\n      \");\n  }\n\n  this.userCode = \"\\n      \".concat(getReshapedInputCoords(inputShape), \"\\n      \").concat(shader_util.getFlatIndexFrom3D(outputShape), \"\\n\\n      void main() {\\n        ivec3 rc = getOutputCoords();\\n\\n        vec4 result = vec4(0.);\\n\\n        ivec3 thisRC;\\n        int rows = \").concat(outputShape[1], \";\\n        int cols = \").concat(outputShape[2], \";\\n\\n        \").concat(mainLoop, \"\\n\\n        setOutput(result);\\n      }\\n    \");\n};\n\nfunction getReshapedInputCoords(shape) {\n  var coordsFromIndexSnippet = shader_util.getLogicalCoordinatesFromFlatIndex(['r', 'c', 'd'], shape);\n  return \"\\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\\n      \".concat(coordsFromIndexSnippet, \"\\n      return ivec3(r, c, d);\\n    }\\n  \");\n}","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env } from '@tensorflow/tfjs-core';\nimport { getInternalFormatForFloat16MatrixTexture, getInternalFormatForFloat16PackedMatrixTexture, getInternalFormatForFloat32MatrixTexture, getInternalFormatForPackedMatrixTexture, getInternalFormatForUnsignedBytesMatrixTexture } from './gpgpu_util';\nimport { getPackedMatrixTextureShapeWidthHeight, getUnpackedMatrixTextureShapeWidthHeight, PhysicalTextureType, TextureUsage } from './tex_util';\nexport var TextureManager = /*#__PURE__*/function () {\n  function TextureManager(gpgpu) {\n    _classCallCheck(this, TextureManager);\n\n    this.gpgpu = gpgpu;\n    this.numUsedTextures = 0;\n    this.numFreeTextures = 0;\n    this._numBytesAllocated = 0;\n    this._numBytesFree = 0; // How many bytes that have been allocated\n    // are available for reuse.\n\n    this.freeTextures = {};\n    this.logEnabled = false;\n    this.usedTextures = {};\n  }\n\n  _createClass(TextureManager, [{\n    key: \"acquireTexture\",\n    value: function acquireTexture(shapeRC, usage, isPacked) {\n      var physicalTexType = getPhysicalFromLogicalTextureType(usage, isPacked);\n      var shapeKey = getKeyFromTextureShape(shapeRC, physicalTexType, isPacked);\n\n      if (!(shapeKey in this.freeTextures)) {\n        this.freeTextures[shapeKey] = [];\n      }\n\n      if (!(shapeKey in this.usedTextures)) {\n        this.usedTextures[shapeKey] = [];\n      }\n\n      var texBytes = computeBytes(shapeRC, physicalTexType, this.gpgpu.gl, this.gpgpu.textureConfig, isPacked);\n\n      if (this.freeTextures[shapeKey].length > 0) {\n        this.numFreeTextures--;\n        this.numUsedTextures++;\n        this._numBytesFree -= texBytes;\n        this.log();\n\n        var _newTexture = this.freeTextures[shapeKey].shift();\n\n        this.usedTextures[shapeKey].push(_newTexture);\n        return _newTexture;\n      }\n\n      var newTexture;\n\n      if (physicalTexType === PhysicalTextureType.PACKED_2X2_FLOAT32) {\n        newTexture = this.gpgpu.createPackedMatrixTexture(shapeRC[0], shapeRC[1]);\n      } else if (physicalTexType === PhysicalTextureType.PACKED_2X2_FLOAT16) {\n        newTexture = this.gpgpu.createFloat16PackedMatrixTexture(shapeRC[0], shapeRC[1]);\n      } else if (physicalTexType === PhysicalTextureType.UNPACKED_FLOAT32) {\n        newTexture = this.gpgpu.createFloat32MatrixTexture(shapeRC[0], shapeRC[1]);\n      } else if (physicalTexType === PhysicalTextureType.UNPACKED_FLOAT16) {\n        newTexture = this.gpgpu.createFloat16MatrixTexture(shapeRC[0], shapeRC[1]);\n      } else if (physicalTexType === PhysicalTextureType.PACKED_4X1_UNSIGNED_BYTE) {\n        newTexture = this.gpgpu.createUnsignedBytesMatrixTexture(shapeRC[0], shapeRC[1]);\n      }\n\n      this.usedTextures[shapeKey].push(newTexture);\n      this.numUsedTextures++;\n      this._numBytesAllocated += texBytes;\n      this.log();\n      return newTexture;\n    }\n  }, {\n    key: \"releaseTexture\",\n    value: function releaseTexture(texture, shape, logicalTexType, isPacked) {\n      if (this.freeTextures == null) {\n        // Already disposed.\n        return;\n      }\n\n      var physicalTexType = getPhysicalFromLogicalTextureType(logicalTexType, isPacked);\n      var shapeKey = getKeyFromTextureShape(shape, physicalTexType, isPacked);\n\n      if (!(shapeKey in this.freeTextures)) {\n        this.freeTextures[shapeKey] = [];\n      }\n\n      var texBytes = computeBytes(shape, physicalTexType, this.gpgpu.gl, this.gpgpu.textureConfig, isPacked);\n      var deleteTexThreshold = env().get('WEBGL_DELETE_TEXTURE_THRESHOLD');\n\n      if (deleteTexThreshold !== -1 && this._numBytesAllocated > deleteTexThreshold) {\n        this.gpgpu.deleteMatrixTexture(texture);\n        this._numBytesAllocated -= texBytes;\n      } else {\n        this.freeTextures[shapeKey].push(texture);\n        this.numFreeTextures++;\n        this._numBytesFree += texBytes;\n      }\n\n      this.numUsedTextures--;\n      var texList = this.usedTextures[shapeKey];\n      var texIndex = texList.indexOf(texture);\n\n      if (texIndex < 0) {\n        throw new Error('Cannot release a texture that was never provided by this ' + 'texture manager');\n      }\n\n      texList.splice(texIndex, 1);\n      this.log();\n    }\n  }, {\n    key: \"log\",\n    value: function log() {\n      if (!this.logEnabled) {\n        return;\n      }\n\n      var total = this.numFreeTextures + this.numUsedTextures;\n      console.log('Free/Used', \"\".concat(this.numFreeTextures, \" / \").concat(this.numUsedTextures), \"(\".concat(total, \")\"));\n      var freeRatio = this._numBytesFree / this._numBytesAllocated;\n      console.log(\"Bytes allocated: \".concat(this._numBytesAllocated));\n      console.log(\"Bytes unused: \".concat(this._numBytesFree, \" (\").concat(Math.round(100 * freeRatio), \"%)\"));\n    }\n  }, {\n    key: \"numBytesAllocated\",\n    get: function get() {\n      return this._numBytesAllocated;\n    }\n  }, {\n    key: \"numBytesFree\",\n    get: function get() {\n      return this._numBytesFree;\n    }\n  }, {\n    key: \"getNumUsedTextures\",\n    value: function getNumUsedTextures() {\n      return this.numUsedTextures;\n    }\n  }, {\n    key: \"getNumFreeTextures\",\n    value: function getNumFreeTextures() {\n      return this.numFreeTextures;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      var _this = this;\n\n      if (this.freeTextures == null) {\n        // Already disposed.\n        return;\n      }\n\n      for (var texShape in this.freeTextures) {\n        this.freeTextures[texShape].forEach(function (tex) {\n          _this.gpgpu.deleteMatrixTexture(tex);\n        });\n      }\n\n      for (var _texShape in this.usedTextures) {\n        this.usedTextures[_texShape].forEach(function (tex) {\n          _this.gpgpu.deleteMatrixTexture(tex);\n        });\n      }\n\n      this.freeTextures = null;\n      this.usedTextures = null;\n      this.numUsedTextures = 0;\n      this.numFreeTextures = 0;\n      this._numBytesAllocated = 0;\n      this._numBytesFree = 0;\n    }\n  }]);\n\n  return TextureManager;\n}();\n\nfunction numBytesForInternalFormat(gl, internalFormat) {\n  // tslint:disable-next-line:no-any\n  var glany = gl;\n\n  if (internalFormat === glany.R32F) {\n    return 4;\n  } else if (internalFormat === glany.R16F) {\n    return 2;\n  } else if (internalFormat === glany.RGBA32F) {\n    return 16;\n  } else if (internalFormat === gl.RGBA) {\n    return 16;\n  } else if (internalFormat === glany.RGBA16F) {\n    return 8;\n  }\n\n  throw new Error(\"Unknown internal format \".concat(internalFormat));\n}\n\nexport function computeBytes(shape, physicalTexType, gl, textureConfig, isPacked) {\n  // It is not possible to infer packed status from the texture type because\n  // depending on the textureConfig, different  texture types may resolve to the\n  // same internal format (e.g. in WebGL1, the internal format for\n  // UNPACKED_FLOAT16 textures is gl.RGBA). Therefore we pass in `isPacked`\n  // explicitly.\n  var internalFormat = internalFormatForPhysicalTexType(physicalTexType, textureConfig);\n  var numElements;\n\n  if (isPacked) {\n    var _getPackedMatrixTextu = getPackedMatrixTextureShapeWidthHeight(shape[0], shape[1]),\n        _getPackedMatrixTextu2 = _slicedToArray(_getPackedMatrixTextu, 2),\n        packedWidth = _getPackedMatrixTextu2[0],\n        packedHeight = _getPackedMatrixTextu2[1];\n\n    numElements = packedWidth * packedHeight;\n  } else {\n    var _getUnpackedMatrixTex = getUnpackedMatrixTextureShapeWidthHeight(shape[0], shape[1]),\n        _getUnpackedMatrixTex2 = _slicedToArray(_getUnpackedMatrixTex, 2),\n        width = _getUnpackedMatrixTex2[0],\n        height = _getUnpackedMatrixTex2[1];\n\n    numElements = width * height;\n  }\n\n  var bytesPerElement = numBytesForInternalFormat(gl, internalFormat);\n  return numElements * bytesPerElement;\n}\n\nfunction internalFormatForPhysicalTexType(physicalTexType, textureConfig) {\n  switch (physicalTexType) {\n    case PhysicalTextureType.PACKED_2X2_FLOAT32:\n      return getInternalFormatForPackedMatrixTexture(textureConfig);\n\n    case PhysicalTextureType.PACKED_2X2_FLOAT16:\n      return getInternalFormatForFloat16PackedMatrixTexture(textureConfig);\n\n    case PhysicalTextureType.UNPACKED_FLOAT32:\n      return getInternalFormatForFloat32MatrixTexture(textureConfig);\n\n    case PhysicalTextureType.UNPACKED_FLOAT16:\n      return getInternalFormatForFloat16MatrixTexture(textureConfig);\n\n    case PhysicalTextureType.PACKED_4X1_UNSIGNED_BYTE:\n      return getInternalFormatForUnsignedBytesMatrixTexture(textureConfig);\n\n    default:\n      throw new Error(\"Unknown physical texture type \".concat(physicalTexType));\n  }\n}\n\nfunction getPhysicalTextureForRendering(isPacked) {\n  if (env().getBool('WEBGL_RENDER_FLOAT32_ENABLED')) {\n    if (isPacked) {\n      return PhysicalTextureType.PACKED_2X2_FLOAT32;\n    }\n\n    return PhysicalTextureType.UNPACKED_FLOAT32;\n  }\n\n  if (isPacked) {\n    return PhysicalTextureType.PACKED_2X2_FLOAT16;\n  }\n\n  return PhysicalTextureType.UNPACKED_FLOAT16;\n}\n\nfunction getPhysicalFromLogicalTextureType(logicalTexType, isPacked) {\n  if (logicalTexType === TextureUsage.UPLOAD) {\n    return PhysicalTextureType.PACKED_2X2_FLOAT32;\n  } else if (logicalTexType === TextureUsage.RENDER || logicalTexType == null) {\n    return getPhysicalTextureForRendering(isPacked);\n  } else if (logicalTexType === TextureUsage.DOWNLOAD || logicalTexType === TextureUsage.PIXELS) {\n    return PhysicalTextureType.PACKED_4X1_UNSIGNED_BYTE;\n  }\n\n  throw new Error(\"Unknown logical texture type \".concat(logicalTexType));\n}\n\nfunction getKeyFromTextureShape(shapeRowsCol, physicalTexType, isPacked) {\n  return \"\".concat(shapeRowsCol[0], \"_\").concat(shapeRowsCol[1], \"_\").concat(physicalTexType, \"_\").concat(isPacked);\n}","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var UnaryOpProgram = function UnaryOpProgram(aShape, opSnippet) {\n  _classCallCheck(this, UnaryOpProgram);\n\n  this.variableNames = ['A'];\n  this.outputShape = aShape;\n  this.userCode = \"\\n      float unaryOperation(float x) {\\n        \".concat(opSnippet, \"\\n      }\\n\\n      void main() {\\n        float x = getAAtOutCoords();\\n        float y = unaryOperation(x);\\n\\n        setOutput(y);\\n      }\\n    \");\n};\nexport var CHECK_NAN_SNIPPET = \"if (isnan(x)) return x;\";\nexport var LINEAR = \"return x;\";\nexport var ABS = \"return abs(x);\";\nexport function STEP() {\n  var alpha = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0.0;\n  return CHECK_NAN_SNIPPET + \"\\n    return x > 0.0 ? 1.0 : float(\".concat(alpha, \");\\n  \");\n}\nexport var ELU = \"return (x >= 0.0) ? x : (exp(x) - 1.0);\";\nexport var RELU = CHECK_NAN_SNIPPET + \"\\n  return (x < 0.0) ? 0.0 : x;\\n\";\nexport var RELU6 = CHECK_NAN_SNIPPET + \"\\n  return (x < 0.0) ? 0.0 : min(6.0, x);\\n\";\nexport var CLONE = 'return x;';","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var LINEAR = \"return x;\";\nexport var ELU = \"\\n  vec4 result;\\n\\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\\n\\n  return result;\\n\";\nexport var RELU = \"\\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\\n  bvec4 isNaN = isnan(x);\\n\\n  result.r = isNaN.r ? x.r : result.r;\\n  result.g = isNaN.g ? x.g : result.g;\\n  result.b = isNaN.b ? x.b : result.b;\\n  result.a = isNaN.a ? x.a : result.a;\\n\\n  return result;\\n\";\nexport var RELU6 = \"\\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\\n  bvec4 isNaN = isnan(x);\\n\\n  result.r = isNaN.r ? x.r : result.r;\\n  result.g = isNaN.g ? x.g : result.g;\\n  result.b = isNaN.b ? x.b : result.b;\\n  result.a = isNaN.a ? x.a : result.a;\\n\\n  return result;\\n\";\nexport var UnaryOpPackedProgram = function UnaryOpPackedProgram(aShape, opSnippet) {\n  _classCallCheck(this, UnaryOpPackedProgram);\n\n  this.variableNames = ['A'];\n  this.packedInputs = true;\n  this.packedOutput = true;\n  this.outputShape = aShape;\n  this.userCode = \"\\n      vec4 unaryOperation(vec4 x) {\\n        \".concat(opSnippet, \"\\n      }\\n\\n      void main() {\\n        vec4 x = getAAtOutCoords();\\n        vec4 y = unaryOperation(x);\\n\\n        setOutput(y);\\n      }\\n    \");\n};","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getChannels, getSourceCoords } from './packing_util';\nimport { getCoordsDataType } from './shader_compiler';\nexport var UnpackProgram = function UnpackProgram(outputShape) {\n  _classCallCheck(this, UnpackProgram);\n\n  this.variableNames = ['A'];\n  this.packedInputs = true;\n  this.packedOutput = false;\n  this.outputShape = outputShape;\n  var rank = outputShape.length;\n  var channels = getChannels('rc', rank);\n  var dtype = getCoordsDataType(rank);\n  var sourceCoords = getSourceCoords(rank, channels);\n  var innerDims = channels.slice(-2);\n  var coords = rank <= 1 ? 'rc' : \"vec2(\".concat(innerDims.join(','), \")\");\n  this.userCode = \"\\n      void main() {\\n        \".concat(dtype, \" rc = getOutputCoords();\\n        vec4 packedInput = getA(\").concat(sourceCoords, \");\\n\\n        setOutput(getChannel(packedInput, \").concat(coords, \"));\\n      }\\n    \");\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _regeneratorRuntime from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// Import webgl flags.\nimport './flags_webgl';\nimport { backend_util, buffer, DataStorage, engine, env, kernel_impls, KernelBackend, scalar, tidy, util } from '@tensorflow/tfjs-core';\nimport { getWebGLContext } from './canvas_util';\nimport { DecodeMatrixProgram } from './decode_matrix_gpu';\nimport { DecodeMatrixPackedProgram } from './decode_matrix_packed_gpu';\nimport { EncodeFloatProgram } from './encode_float_gpu';\nimport { EncodeFloatPackedProgram } from './encode_float_packed_gpu';\nimport { EncodeMatrixProgram } from './encode_matrix_gpu';\nimport { EncodeMatrixPackedProgram } from './encode_matrix_packed_gpu';\nimport { GPGPUContext } from './gpgpu_context';\nimport * as gpgpu_math from './gpgpu_math';\nimport { simpleAbsImplCPU } from './kernel_utils/shared';\nimport { PackProgram } from './pack_gpu';\nimport { ReshapePackedProgram } from './reshape_packed_gpu';\nimport * as tex_util from './tex_util';\nimport { TextureUsage } from './tex_util';\nimport { TextureManager } from './texture_manager';\nimport * as unary_op from './unaryop_gpu';\nimport { UnaryOpProgram } from './unaryop_gpu';\nimport { UnaryOpPackedProgram } from './unaryop_packed_gpu';\nimport { UnpackProgram } from './unpack_gpu';\nimport * as webgl_util from './webgl_util';\nvar whereImpl = kernel_impls.whereImpl;\nexport var EPSILON_FLOAT32 = 1e-7;\nexport var EPSILON_FLOAT16 = 1e-4;\nvar binaryCaches = {};\nexport function getBinaryCache(webGLVersion) {\n  if (webGLVersion in binaryCaches) {\n    return binaryCaches[webGLVersion];\n  }\n\n  binaryCaches[webGLVersion] = {};\n  return binaryCaches[webGLVersion];\n} // Empirically determined constant used to determine size threshold for handing\n// off execution to the CPU.\n\nvar CPU_HANDOFF_SIZE_THRESHOLD = 128; // Empirically determined constant used to decide the number of MB on GPU\n// before we warn about high memory use. The MB are this constant * screen area\n// * dpi / 1024 / 1024.\n\nvar BEFORE_PAGING_CONSTANT = 600;\n\nfunction numMBBeforeWarning() {\n  if (env().global.screen == null) {\n    return 1024; // 1 GB.\n  }\n\n  return env().global.screen.height * env().global.screen.width * window.devicePixelRatio * BEFORE_PAGING_CONSTANT / 1024 / 1024;\n}\n\nexport var MathBackendWebGL = /*#__PURE__*/function (_KernelBackend) {\n  _inherits(MathBackendWebGL, _KernelBackend);\n\n  var _super = _createSuper(MathBackendWebGL);\n\n  function MathBackendWebGL(gpgpu) {\n    var _this;\n\n    _classCallCheck(this, MathBackendWebGL);\n\n    _this = _super.call(this); // Maps data ids that have a pending read operation, to list of subscribers.\n\n    _this.pendingRead = new WeakMap(); // List of data ids that are scheduled for disposal, but are waiting on a\n    // pending read operation.\n\n    _this.pendingDisposal = new WeakSet(); // Used to count the number of 'shallow' sliced tensors that point to the\n    // same data id.\n\n    _this.dataRefCount = new WeakMap();\n    _this.numBytesInGPU = 0; // Accumulated time spent (including blocking) in uploading data to webgl.\n\n    _this.uploadWaitMs = 0; // Accumulated time spent (including blocking in downloading data from webgl.\n\n    _this.downloadWaitMs = 0; // record the last manual GL Flush time.\n\n    _this.lastGlFlushTime = 0;\n    _this.warnedAboutMemory = false;\n    _this.pendingDeletes = 0;\n    _this.disposed = false;\n\n    if (!env().getBool('HAS_WEBGL')) {\n      throw new Error('WebGL is not supported on this device');\n    }\n\n    if (gpgpu == null) {\n      var gl = getWebGLContext(env().getNumber('WEBGL_VERSION'));\n      _this.binaryCache = getBinaryCache(env().getNumber('WEBGL_VERSION'));\n      _this.gpgpu = new GPGPUContext(gl);\n      _this.canvas = gl.canvas;\n      _this.gpgpuCreatedLocally = true;\n    } else {\n      _this.gpgpu = gpgpu;\n      _this.binaryCache = {};\n      _this.gpgpuCreatedLocally = false;\n      _this.canvas = gpgpu.gl.canvas;\n    }\n\n    _this.textureManager = new TextureManager(_this.gpgpu);\n    _this.numMBBeforeWarning = numMBBeforeWarning();\n    _this.texData = new DataStorage(_assertThisInitialized(_this), engine());\n    return _this;\n  }\n\n  _createClass(MathBackendWebGL, [{\n    key: \"nextDataId\",\n    value: function nextDataId() {\n      return MathBackendWebGL.nextDataId++;\n    }\n  }, {\n    key: \"numDataIds\",\n    value: function numDataIds() {\n      return this.texData.numDataIds() + (this.cpuBackend ? this.cpuBackend.numDataIds() : 0) - this.pendingDeletes;\n    }\n  }, {\n    key: \"write\",\n    value: function write(values, shape, dtype) {\n      if (env().getBool('WEBGL_CHECK_NUMERICAL_PROBLEMS') || env().getBool('DEBUG')) {\n        this.checkNumericalProblems(values);\n      }\n\n      if (dtype === 'complex64' && values != null) {\n        throw new Error(\"Cannot write to a complex64 dtype. \" + \"Please use tf.complex(real, imag).\");\n      }\n\n      var dataId = {\n        id: this.nextDataId()\n      };\n      this.texData.set(dataId, {\n        shape: shape,\n        dtype: dtype,\n        values: values,\n        usage: TextureUsage.UPLOAD,\n        refCount: 1\n      });\n      return dataId;\n    }\n    /** Return refCount of a `TensorData`. */\n\n  }, {\n    key: \"refCount\",\n    value: function refCount(dataId) {\n      if (this.texData.has(dataId)) {\n        var tensorData = this.texData.get(dataId);\n        return tensorData.refCount;\n      }\n\n      return 0;\n    }\n    /** Increase refCount of a `TextureData`. */\n\n  }, {\n    key: \"incRef\",\n    value: function incRef(dataId) {\n      var texData = this.texData.get(dataId);\n      texData.refCount++;\n    }\n    /** Decrease refCount of a `TextureData`. */\n\n  }, {\n    key: \"decRef\",\n    value: function decRef(dataId) {\n      if (this.texData.has(dataId)) {\n        var texData = this.texData.get(dataId);\n        texData.refCount--;\n      }\n    }\n  }, {\n    key: \"move\",\n    value: function move(dataId, values, shape, dtype, refCount) {\n      if (env().getBool('DEBUG')) {\n        this.checkNumericalProblems(values);\n      }\n\n      if (dtype === 'complex64') {\n        throw new Error(\"Cannot write to a complex64 dtype. \" + \"Please use tf.complex(real, imag).\");\n      }\n\n      this.texData.set(dataId, {\n        shape: shape,\n        dtype: dtype,\n        values: values,\n        usage: TextureUsage.UPLOAD,\n        refCount: refCount\n      });\n    }\n  }, {\n    key: \"disposeIntermediateTensorInfo\",\n    value: function disposeIntermediateTensorInfo(tensorInfo) {\n      this.disposeData(tensorInfo.dataId);\n    }\n  }, {\n    key: \"readSync\",\n    value: function readSync(dataId) {\n      var texData = this.texData.get(dataId);\n      var values = texData.values,\n          dtype = texData.dtype,\n          complexTensorInfos = texData.complexTensorInfos,\n          slice = texData.slice,\n          shape = texData.shape,\n          isPacked = texData.isPacked; // The presence of `slice` indicates this tensor is a shallow slice of a\n      // different tensor, and is using that original tensor's texture. Run\n      // `clone` in order to copy that texture and read from it.\n\n      if (slice != null) {\n        var program;\n\n        if (isPacked) {\n          program = new UnaryOpPackedProgram(shape, unary_op.CLONE);\n        } else {\n          program = new UnaryOpProgram(shape, unary_op.CLONE);\n        }\n\n        var res = this.runWebGLProgram(program, [{\n          dataId: dataId,\n          shape: shape,\n          dtype: dtype\n        }], dtype);\n        var data = this.readSync(res.dataId);\n        this.disposeIntermediateTensorInfo(res);\n        return data;\n      }\n\n      if (values != null) {\n        return this.convertAndCacheOnCPU(dataId);\n      }\n\n      if (dtype === 'string') {\n        return values;\n      }\n\n      var shouldTimeProgram = this.activeTimers != null;\n      var start;\n\n      if (shouldTimeProgram) {\n        start = util.now();\n      }\n\n      var result;\n\n      if (dtype === 'complex64') {\n        var realValues = this.readSync(complexTensorInfos.real.dataId);\n        var imagValues = this.readSync(complexTensorInfos.imag.dataId);\n        result = backend_util.mergeRealAndImagArrays(realValues, imagValues);\n      } else {\n        result = this.getValuesFromTexture(dataId);\n      }\n\n      if (shouldTimeProgram) {\n        this.downloadWaitMs += util.now() - start;\n      }\n\n      return this.convertAndCacheOnCPU(dataId, result);\n    }\n  }, {\n    key: \"read\",\n    value: function () {\n      var _read = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dataId) {\n        var _subscribers, texData, values, shape, slice, dtype, complexTensorInfos, isPacked, program, res, data, buffer, tmpDownloadTarget, _this$gpgpu, tmpData, vals, ps, realValues, imagValues, size, dTypeVals, subscribers;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!this.pendingRead.has(dataId)) {\n                  _context.next = 3;\n                  break;\n                }\n\n                _subscribers = this.pendingRead.get(dataId);\n                return _context.abrupt(\"return\", new Promise(function (resolve) {\n                  return _subscribers.push(resolve);\n                }));\n\n              case 3:\n                texData = this.texData.get(dataId);\n                values = texData.values, shape = texData.shape, slice = texData.slice, dtype = texData.dtype, complexTensorInfos = texData.complexTensorInfos, isPacked = texData.isPacked; // The presence of `slice` indicates this tensor is a shallow slice of a\n                // different tensor, and is using that original tensor's texture. Run\n                // `clone` in order to copy that texture and read from it.\n\n                if (!(slice != null)) {\n                  _context.next = 11;\n                  break;\n                }\n\n                if (isPacked) {\n                  program = new UnaryOpPackedProgram(shape, unary_op.CLONE);\n                } else {\n                  program = new UnaryOpProgram(shape, unary_op.CLONE);\n                }\n\n                res = this.runWebGLProgram(program, [{\n                  dataId: dataId,\n                  shape: shape,\n                  dtype: dtype\n                }], dtype);\n                data = this.read(res.dataId);\n                this.disposeIntermediateTensorInfo(res);\n                return _context.abrupt(\"return\", data);\n\n              case 11:\n                if (!(values != null)) {\n                  _context.next = 13;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this.convertAndCacheOnCPU(dataId));\n\n              case 13:\n                if (!(!env().getBool('WEBGL_DOWNLOAD_FLOAT_ENABLED') && env().getNumber('WEBGL_VERSION') === 2)) {\n                  _context.next = 15;\n                  break;\n                }\n\n                throw new Error(\"tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and \" + \"WEBGL_VERSION=2 not yet supported.\");\n\n              case 15:\n                buffer = null;\n\n                if (dtype !== 'complex64' && env().get('WEBGL_BUFFER_SUPPORTED')) {\n                  // Possibly copy the texture into a buffer before inserting a fence.\n                  tmpDownloadTarget = this.decode(dataId);\n                  tmpData = this.texData.get(tmpDownloadTarget.dataId);\n                  buffer = (_this$gpgpu = this.gpgpu).createBufferFromTexture.apply(_this$gpgpu, [tmpData.texture].concat(_toConsumableArray(tex_util.getDenseTexShape(shape))));\n                }\n\n                this.pendingRead.set(dataId, []);\n\n                if (!(dtype !== 'complex64')) {\n                  _context.next = 21;\n                  break;\n                }\n\n                _context.next = 21;\n                return this.gpgpu.createAndWaitForFence();\n\n              case 21:\n                if (!(dtype === 'complex64')) {\n                  _context.next = 30;\n                  break;\n                }\n\n                _context.next = 24;\n                return Promise.all([this.read(complexTensorInfos.real.dataId), this.read(complexTensorInfos.imag.dataId)]);\n\n              case 24:\n                ps = _context.sent;\n                realValues = ps[0];\n                imagValues = ps[1];\n                vals = backend_util.mergeRealAndImagArrays(realValues, imagValues);\n                _context.next = 31;\n                break;\n\n              case 30:\n                if (buffer == null) {\n                  vals = this.getValuesFromTexture(dataId);\n                } else {\n                  size = util.sizeFromShape(shape);\n                  vals = this.gpgpu.downloadFloat32MatrixFromBuffer(buffer, size);\n                }\n\n              case 31:\n                if (tmpDownloadTarget != null) {\n                  this.disposeIntermediateTensorInfo(tmpDownloadTarget);\n                }\n\n                dTypeVals = this.convertAndCacheOnCPU(dataId, vals);\n                subscribers = this.pendingRead.get(dataId);\n                this.pendingRead.delete(dataId); // Notify all pending reads.\n\n                subscribers.forEach(function (resolve) {\n                  return resolve(dTypeVals);\n                });\n\n                if (this.pendingDisposal.has(dataId)) {\n                  this.pendingDisposal.delete(dataId);\n\n                  if (this.disposeData(dataId)) {\n                    engine().removeDataId(dataId, this);\n                  }\n\n                  this.pendingDeletes--;\n                }\n\n                return _context.abrupt(\"return\", dTypeVals);\n\n              case 38:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function read(_x) {\n        return _read.apply(this, arguments);\n      }\n\n      return read;\n    }()\n  }, {\n    key: \"bufferSync\",\n    value: function bufferSync(t) {\n      var data = this.readSync(t.dataId);\n      var decodedData = data;\n\n      if (t.dtype === 'string') {\n        try {\n          // Decode the bytes into string.\n          decodedData = data.map(function (d) {\n            return util.decodeString(d);\n          });\n        } catch (_a) {\n          throw new Error('Failed to decode encoded string bytes into utf-8');\n        }\n      }\n\n      return buffer(t.shape, t.dtype, decodedData);\n    }\n  }, {\n    key: \"checkNumericalProblems\",\n    value: function checkNumericalProblems(values) {\n      if (values == null) {\n        return;\n      }\n\n      for (var i = 0; i < values.length; i++) {\n        var num = values[i];\n\n        if (!webgl_util.canBeRepresented(num)) {\n          if (env().getBool('WEBGL_RENDER_FLOAT32_CAPABLE')) {\n            throw Error(\"The value \".concat(num, \" cannot be represented with your \") + \"current settings. Consider enabling float32 rendering: \" + \"'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'\");\n          }\n\n          throw Error(\"The value \".concat(num, \" cannot be represented on this device.\"));\n        }\n      }\n    }\n  }, {\n    key: \"getValuesFromTexture\",\n    value: function getValuesFromTexture(dataId) {\n      var _this$texData$get = this.texData.get(dataId),\n          shape = _this$texData$get.shape,\n          dtype = _this$texData$get.dtype,\n          isPacked = _this$texData$get.isPacked;\n\n      var size = util.sizeFromShape(shape);\n\n      if (env().getBool('WEBGL_DOWNLOAD_FLOAT_ENABLED')) {\n        var _this$gpgpu2;\n\n        var tmpTarget = this.decode(dataId);\n\n        var _tmpData = this.texData.get(tmpTarget.dataId);\n\n        var _vals = (_this$gpgpu2 = this.gpgpu).downloadMatrixFromPackedTexture.apply(_this$gpgpu2, [_tmpData.texture].concat(_toConsumableArray(tex_util.getDenseTexShape(shape)))).subarray(0, size);\n\n        this.disposeIntermediateTensorInfo(tmpTarget);\n        return _vals;\n      }\n\n      var shouldUsePackedProgram = env().getBool('WEBGL_PACK') && isPacked === true;\n      var outputShape = shouldUsePackedProgram ? webgl_util.getShapeAs3D(shape) : shape;\n      var program = shouldUsePackedProgram ? new EncodeFloatPackedProgram(outputShape) : new EncodeFloatProgram(outputShape);\n      var output = this.runWebGLProgram(program, [{\n        shape: outputShape,\n        dtype: dtype,\n        dataId: dataId\n      }], 'float32');\n      var tmpData = this.texData.get(output.dataId);\n      var vals = this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(tmpData.texture, tmpData.texShape[0], tmpData.texShape[1]).subarray(0, size);\n      this.disposeIntermediateTensorInfo(output);\n      return vals;\n    }\n  }, {\n    key: \"timerAvailable\",\n    value: function timerAvailable() {\n      return env().getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE') > 0;\n    }\n  }, {\n    key: \"time\",\n    value: function () {\n      var _time = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(f) {\n        var oldActiveTimers, newActiveTimers, outerMostTime, flattenedActiveTimerQueries, flattenedActiveTimerNames, res, kernelMs;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                oldActiveTimers = this.activeTimers;\n                newActiveTimers = [];\n                outerMostTime = false;\n\n                if (this.programTimersStack == null) {\n                  this.programTimersStack = newActiveTimers;\n                  outerMostTime = true;\n                } else {\n                  this.activeTimers.push(newActiveTimers);\n                }\n\n                this.activeTimers = newActiveTimers;\n                f(); // needing to split these up because util.flatten only accepts certain types\n\n                flattenedActiveTimerQueries = util.flatten(this.activeTimers.map(function (d) {\n                  return d.query;\n                })).filter(function (d) {\n                  return d != null;\n                });\n                flattenedActiveTimerNames = util.flatten(this.activeTimers.map(function (d) {\n                  return d.name;\n                })).filter(function (d) {\n                  return d != null;\n                });\n                this.activeTimers = oldActiveTimers;\n\n                if (outerMostTime) {\n                  this.programTimersStack = null;\n                }\n\n                res = {\n                  uploadWaitMs: this.uploadWaitMs,\n                  downloadWaitMs: this.downloadWaitMs,\n                  kernelMs: null,\n                  wallMs: null // will be filled by the engine\n\n                };\n\n                if (!(env().getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE') > 0)) {\n                  _context2.next = 19;\n                  break;\n                }\n\n                _context2.next = 14;\n                return Promise.all(flattenedActiveTimerQueries);\n\n              case 14:\n                kernelMs = _context2.sent;\n                res['kernelMs'] = util.sum(kernelMs);\n\n                res['getExtraProfileInfo'] = function () {\n                  return kernelMs.map(function (d, i) {\n                    return {\n                      name: flattenedActiveTimerNames[i],\n                      ms: d\n                    };\n                  }).map(function (d) {\n                    return \"\".concat(d.name, \": \").concat(d.ms);\n                  }).join(', ');\n                };\n\n                _context2.next = 20;\n                break;\n\n              case 19:\n                res['kernelMs'] = {\n                  error: 'WebGL query timers are not supported in this environment.'\n                };\n\n              case 20:\n                this.uploadWaitMs = 0;\n                this.downloadWaitMs = 0;\n                return _context2.abrupt(\"return\", res);\n\n              case 23:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function time(_x2) {\n        return _time.apply(this, arguments);\n      }\n\n      return time;\n    }()\n  }, {\n    key: \"memory\",\n    value: function memory() {\n      return {\n        unreliable: false,\n        numBytesInGPU: this.numBytesInGPU,\n        numBytesInGPUAllocated: this.textureManager.numBytesAllocated,\n        numBytesInGPUFree: this.textureManager.numBytesFree\n      };\n    }\n  }, {\n    key: \"startTimer\",\n    value: function startTimer() {\n      if (env().getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE') > 0) {\n        return this.gpgpu.beginQuery();\n      }\n\n      return {\n        startMs: util.now(),\n        endMs: null\n      };\n    }\n  }, {\n    key: \"endTimer\",\n    value: function endTimer(query) {\n      if (env().getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE') > 0) {\n        this.gpgpu.endQuery();\n        return query;\n      }\n\n      query.endMs = util.now();\n      return query;\n    }\n  }, {\n    key: \"getQueryTime\",\n    value: function () {\n      var _getQueryTime = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(query) {\n        var timerQuery;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!(env().getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE') > 0)) {\n                  _context3.next = 2;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", this.gpgpu.waitForQueryAndGetTime(query));\n\n              case 2:\n                timerQuery = query;\n                return _context3.abrupt(\"return\", timerQuery.endMs - timerQuery.startMs);\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getQueryTime(_x3) {\n        return _getQueryTime.apply(this, arguments);\n      }\n\n      return getQueryTime;\n    }()\n    /**\n     * Decrease the RefCount on the dataId and dispose the memory if the dataId\n     * has 0 refCount. If there are pending read on the data, the disposal would\n     * added to the pending delete queue. Return true if the dataId is removed\n     * from backend or the backend does not contain the dataId, false if the\n     * dataId is not removed. Memory may or may not be released even when dataId\n     * is removed, which also depends on dataRefCount, see `releaseGPU`.\n     * @param dataId\n     * @oaram force Optional, remove the data regardless of refCount\n     */\n\n  }, {\n    key: \"disposeData\",\n    value: function disposeData(dataId) {\n      var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (this.pendingDisposal.has(dataId)) {\n        return false;\n      } // No-op if already disposed.\n\n\n      if (!this.texData.has(dataId)) {\n        return true;\n      } // if force flag is set, change refCount to 0, this would ensure disposal\n      // when added to the pendingDisposal queue. Memory may or may not be\n      // released, which also depends on dataRefCount, see `releaseGPU`.\n\n\n      if (force) {\n        this.texData.get(dataId).refCount = 0;\n      } else {\n        this.texData.get(dataId).refCount--;\n      }\n\n      if (!force && this.texData.get(dataId).refCount > 0) {\n        return false;\n      }\n\n      if (this.pendingRead.has(dataId)) {\n        this.pendingDisposal.add(dataId);\n        this.pendingDeletes++;\n        return false;\n      }\n\n      this.releaseGPUData(dataId);\n\n      var _this$texData$get2 = this.texData.get(dataId),\n          complexTensorInfos = _this$texData$get2.complexTensorInfos;\n\n      if (complexTensorInfos != null) {\n        this.disposeData(complexTensorInfos.real.dataId, force);\n        this.disposeData(complexTensorInfos.imag.dataId, force);\n      }\n\n      this.texData.delete(dataId);\n      return true;\n    }\n  }, {\n    key: \"releaseGPUData\",\n    value: function releaseGPUData(dataId) {\n      var _this$texData$get3 = this.texData.get(dataId),\n          texture = _this$texData$get3.texture,\n          dtype = _this$texData$get3.dtype,\n          texShape = _this$texData$get3.texShape,\n          usage = _this$texData$get3.usage,\n          isPacked = _this$texData$get3.isPacked,\n          slice = _this$texData$get3.slice;\n\n      var key = slice && slice.origDataId || dataId;\n      var refCount = this.dataRefCount.get(key);\n\n      if (refCount > 1) {\n        this.dataRefCount.set(key, refCount - 1);\n      } else {\n        this.dataRefCount.delete(key);\n\n        if (texture != null) {\n          this.numBytesInGPU -= this.computeBytes(texShape, dtype);\n          this.textureManager.releaseTexture(texture, texShape, usage, isPacked);\n        }\n      }\n\n      var texData = this.texData.get(dataId);\n      texData.texture = null;\n      texData.texShape = null;\n      texData.isPacked = false;\n      texData.slice = null;\n    }\n  }, {\n    key: \"getTexture\",\n    value: function getTexture(dataId) {\n      this.uploadToGPU(dataId);\n      return this.texData.get(dataId).texture;\n    }\n    /**\n     * Returns internal information for the specific data bucket. Used in unit\n     * tests.\n     */\n\n  }, {\n    key: \"getDataInfo\",\n    value: function getDataInfo(dataId) {\n      return this.texData.get(dataId);\n    }\n    /*\n    Tests whether all the inputs to an op are small and on the CPU. This heuristic\n    determines when it would be faster to execute a kernel on the CPU. WebGL\n    kernels opt into running this check and forwarding when appropriate.\n    TODO(https://github.com/tensorflow/tfjs/issues/872): Develop a more\n    sustainable strategy for optimizing backend execution of ops.\n     */\n\n  }, {\n    key: \"shouldExecuteOnCPU\",\n    value: function shouldExecuteOnCPU(inputs) {\n      var _this2 = this;\n\n      var sizeThreshold = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : CPU_HANDOFF_SIZE_THRESHOLD;\n      return env().getBool('WEBGL_CPU_FORWARD') && inputs.every(function (input) {\n        return _this2.texData.get(input.dataId).texture == null && util.sizeFromShape(input.shape) < sizeThreshold;\n      });\n    }\n  }, {\n    key: \"getGPGPUContext\",\n    value: function getGPGPUContext() {\n      return this.gpgpu;\n    }\n  }, {\n    key: \"where\",\n    value: function where(condition) {\n      backend_util.warn('tf.where() in webgl locks the UI thread. ' + 'Call tf.whereAsync() instead');\n      var condVals = condition.dataSync();\n      return whereImpl(condition.shape, condVals);\n    }\n  }, {\n    key: \"packedUnaryOp\",\n    value: function packedUnaryOp(x, op, dtype) {\n      var program = new UnaryOpPackedProgram(x.shape, op);\n      var outInfo = this.compileAndRun(program, [x], dtype);\n      return engine().makeTensorFromDataId(outInfo.dataId, outInfo.shape, outInfo.dtype);\n    } // TODO(msoulanille) remove this once the backend has been modularized\n    // a copy is needed here to break a circular dependency.\n    // Also remove the op from unary_op.\n\n  }, {\n    key: \"abs\",\n    value: function abs(x) {\n      // TODO: handle cases when x is complex.\n      if (this.shouldExecuteOnCPU([x]) && x.dtype !== 'complex64') {\n        var outValues = simpleAbsImplCPU(this.texData.get(x.dataId).values);\n        return this.makeOutput(x.shape, x.dtype, outValues);\n      }\n\n      if (env().getBool('WEBGL_PACK_UNARY_OPERATIONS')) {\n        return this.packedUnaryOp(x, unary_op.ABS, x.dtype);\n      }\n\n      var program = new UnaryOpProgram(x.shape, unary_op.ABS);\n      var outInfo = this.compileAndRun(program, [x]);\n      return engine().makeTensorFromDataId(outInfo.dataId, outInfo.shape, outInfo.dtype);\n    }\n  }, {\n    key: \"makeTensorInfo\",\n    value: function makeTensorInfo(shape, dtype, values) {\n      var dataId;\n\n      if (dtype === 'string' && values != null && values.length > 0 && util.isString(values[0])) {\n        var encodedValues = values.map(function (d) {\n          return util.encodeString(d);\n        });\n        dataId = this.write(encodedValues, shape, dtype);\n      } else {\n        dataId = this.write(values, shape, dtype);\n      }\n\n      this.texData.get(dataId).usage = null;\n      return {\n        dataId: dataId,\n        shape: shape,\n        dtype: dtype\n      };\n    }\n  }, {\n    key: \"makeOutput\",\n    value: function makeOutput(shape, dtype, values) {\n      var _this$makeTensorInfo = this.makeTensorInfo(shape, dtype, values),\n          dataId = _this$makeTensorInfo.dataId;\n\n      return engine().makeTensorFromDataId(dataId, shape, dtype, this);\n    }\n  }, {\n    key: \"unpackTensor\",\n    value: function unpackTensor(input) {\n      var program = new UnpackProgram(input.shape);\n      return this.runWebGLProgram(program, [input], input.dtype);\n    }\n  }, {\n    key: \"packTensor\",\n    value: function packTensor(input) {\n      var program = new PackProgram(input.shape);\n      var preventEagerUnpackingOutput = true;\n      return this.runWebGLProgram(program, [input], input.dtype, null\n      /* customSetup */\n      , preventEagerUnpackingOutput);\n    }\n  }, {\n    key: \"packedReshape\",\n    value: function packedReshape(input, afterShape) {\n      var input3DShape = [webgl_util.getBatchDim(input.shape)].concat(_toConsumableArray(webgl_util.getRowsCols(input.shape)));\n      var input3D = {\n        dtype: input.dtype,\n        shape: input3DShape,\n        dataId: input.dataId\n      };\n      var afterShapeAs3D = [webgl_util.getBatchDim(afterShape)].concat(_toConsumableArray(webgl_util.getRowsCols(afterShape)));\n      var program = new ReshapePackedProgram(afterShapeAs3D, input3DShape);\n      var preventEagerUnpackingOfOutput = true;\n      var output = this.runWebGLProgram(program, [input3D], input.dtype, null\n      /* customSetup */\n      , preventEagerUnpackingOfOutput);\n      return {\n        dataId: output.dataId,\n        shape: afterShape,\n        dtype: output.dtype\n      };\n    }\n  }, {\n    key: \"decode\",\n    value: function decode(dataId) {\n      var texData = this.texData.get(dataId);\n      var isPacked = texData.isPacked,\n          shape = texData.shape,\n          dtype = texData.dtype;\n      var shapeAs3D = webgl_util.getShapeAs3D(shape);\n      var program;\n\n      if (isPacked) {\n        program = new DecodeMatrixPackedProgram(shapeAs3D);\n      } else {\n        program = new DecodeMatrixProgram(shapeAs3D);\n      }\n\n      var preventEagerUnpackingOfOutput = true;\n      var out = this.runWebGLProgram(program, [{\n        shape: shapeAs3D,\n        dtype: dtype,\n        dataId: dataId\n      }], dtype, null\n      /* customSetup */\n      , preventEagerUnpackingOfOutput);\n      return {\n        dtype: dtype,\n        shape: shape,\n        dataId: out.dataId\n      };\n    }\n  }, {\n    key: \"runWebGLProgram\",\n    value: function runWebGLProgram(program, inputs, outputDtype, customSetup) {\n      var _this3 = this;\n\n      var preventEagerUnpackingOfOutput = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n      var output = this.makeTensorInfo(program.outputShape, outputDtype);\n      var outData = this.texData.get(output.dataId);\n\n      if (program.packedOutput) {\n        outData.isPacked = true;\n      }\n\n      if (program.outPackingScheme === tex_util.PackingScheme.DENSE) {\n        var texelShape = tex_util.getDenseTexShape(program.outputShape); // For a densely packed output, we explicitly set texShape\n        // so it doesn't get assigned later according to our typical packing\n        // scheme wherein a single texel can only contain values from adjacent\n        // rows/cols.\n\n        outData.texShape = texelShape.map(function (d) {\n          return d * 2;\n        });\n      }\n\n      if (program.outTexUsage != null) {\n        outData.usage = program.outTexUsage;\n      }\n\n      if (util.sizeFromShape(output.shape) === 0) {\n        // Short-circuit the computation since the result is empty (has 0 in its\n        // shape).\n        outData.values = util.getTypedArrayFromDType(output.dtype, 0);\n        return output;\n      }\n\n      var dataToDispose = [];\n      var inputsData = inputs.map(function (input) {\n        if (input.dtype === 'complex64') {\n          throw new Error(\"GPGPUProgram does not support complex64 input. For complex64 \" + \"dtypes, please separate the program into real and imaginary \" + \"parts.\");\n        }\n\n        var texData = _this3.texData.get(input.dataId);\n\n        if (texData.texture == null) {\n          if (!program.packedInputs && util.sizeFromShape(input.shape) <= env().getNumber('WEBGL_SIZE_UPLOAD_UNIFORM')) {\n            // Upload small tensors that live on the CPU as uniforms, not as\n            // textures. Do this only when the environment supports 32bit floats\n            // due to problems when comparing 16bit floats with 32bit floats.\n            // TODO(https://github.com/tensorflow/tfjs/issues/821): Make it\n            // possible for packed shaders to sample from uniforms.\n            return {\n              shape: input.shape,\n              texData: null,\n              isUniform: true,\n              uniformValues: texData.values\n            };\n          } // This ensures that if a packed program's inputs have not yet been\n          // uploaded to the GPU, they get uploaded as packed right off the bat.\n\n\n          if (program.packedInputs) {\n            texData.isPacked = true;\n            texData.shape = input.shape;\n          }\n        } else if (!!texData.isPacked !== !!program.packedInputs) {\n          input = texData.isPacked ? _this3.unpackTensor(input) : _this3.packTensor(input);\n          dataToDispose.push(input);\n          texData = _this3.texData.get(input.dataId);\n        } else if (texData.isPacked && !webgl_util.isReshapeFree(texData.shape, input.shape)) {\n          // This is a special case where a texture exists for a tensor\n          // but the shapes are incompatible (due to packing constraints) because\n          // the tensor did not have a chance to go through the packed reshape\n          // shader. This only happens when we reshape the *same* tensor to form\n          // *distinct* inputs to an op, e.g. dotting a vector with itself. This\n          // case will disappear once packed uploading is the default.\n          var savedInput = input;\n          var targetShape = input.shape;\n          input.shape = texData.shape;\n          input = _this3.packedReshape(input, targetShape);\n          dataToDispose.push(input);\n          texData = _this3.texData.get(input.dataId);\n          savedInput.shape = targetShape;\n        }\n\n        _this3.uploadToGPU(input.dataId);\n\n        return {\n          shape: input.shape,\n          texData: texData,\n          isUniform: false\n        };\n      });\n      this.uploadToGPU(output.dataId);\n      var outputData = {\n        shape: output.shape,\n        texData: outData,\n        isUniform: false\n      };\n      var key = gpgpu_math.makeShaderKey(program, inputsData, outputData);\n      var binary = this.getAndSaveBinary(key, function () {\n        return gpgpu_math.compileProgram(_this3.gpgpu, program, inputsData, outputData);\n      });\n      var shouldTimeProgram = this.activeTimers != null;\n      var query;\n\n      if (shouldTimeProgram) {\n        query = this.startTimer();\n      }\n\n      gpgpu_math.runProgram(this.gpgpu, binary, inputsData, outputData, customSetup);\n      dataToDispose.forEach(function (info) {\n        return _this3.disposeIntermediateTensorInfo(info);\n      });\n\n      if (shouldTimeProgram) {\n        query = this.endTimer(query);\n        this.activeTimers.push({\n          name: program.constructor.name,\n          query: this.getQueryTime(query)\n        });\n      }\n\n      var glFlushThreshold = env().get('WEBGL_FLUSH_THRESHOLD'); // Manually GL flush requested\n\n      if (glFlushThreshold > 0) {\n        var time = util.now();\n\n        if (time - this.lastGlFlushTime > glFlushThreshold) {\n          this.gpgpu.gl.flush();\n          this.lastGlFlushTime = time;\n        }\n      }\n\n      if (!env().getBool('WEBGL_LAZILY_UNPACK') && outData.isPacked && preventEagerUnpackingOfOutput === false) {\n        var unpacked = this.unpackTensor(output);\n        this.disposeIntermediateTensorInfo(output);\n        return unpacked;\n      }\n\n      return output;\n    }\n  }, {\n    key: \"compileAndRun\",\n    value: function compileAndRun(program, inputs, outputDtype, customSetup) {\n      var preventEagerUnpackingOfOutput = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n      outputDtype = outputDtype || inputs[0].dtype;\n      var outInfo = this.runWebGLProgram(program, inputs, outputDtype, customSetup, preventEagerUnpackingOfOutput);\n      return outInfo;\n    }\n  }, {\n    key: \"getAndSaveBinary\",\n    value: function getAndSaveBinary(key, getBinary) {\n      if (!(key in this.binaryCache)) {\n        this.binaryCache[key] = getBinary();\n      }\n\n      return this.binaryCache[key];\n    }\n  }, {\n    key: \"getTextureManager\",\n    value: function getTextureManager() {\n      return this.textureManager;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      var _this4 = this;\n\n      if (this.disposed) {\n        return;\n      } // Avoid disposing the compiled webgl programs during unit testing because\n      // it slows down test execution.\n\n\n      if (!env().getBool('IS_TEST')) {\n        var allKeys = Object.keys(this.binaryCache);\n        allKeys.forEach(function (key) {\n          _this4.gpgpu.deleteProgram(_this4.binaryCache[key].webGLProgram);\n\n          delete _this4.binaryCache[key];\n        });\n      }\n\n      this.textureManager.dispose();\n\n      if (this.canvas != null && typeof HTMLCanvasElement !== 'undefined' && this.canvas instanceof HTMLCanvasElement) {\n        this.canvas.remove();\n      } else {\n        this.canvas = null;\n      }\n\n      if (this.gpgpuCreatedLocally) {\n        this.gpgpu.program = null;\n        this.gpgpu.dispose();\n      }\n\n      this.disposed = true;\n    }\n  }, {\n    key: \"floatPrecision\",\n    value: function floatPrecision() {\n      var _this5 = this;\n\n      if (this.floatPrecisionValue == null) {\n        this.floatPrecisionValue = tidy(function () {\n          if (!env().get('WEBGL_RENDER_FLOAT32_ENABLED')) {\n            // Momentarily switching DEBUG flag to false so we don't throw an\n            // error trying to upload a small value.\n            var debugFlag = env().getBool('DEBUG');\n            env().set('DEBUG', false);\n\n            var underflowCheckValue = _this5.abs(scalar(1e-8)).dataSync()[0];\n\n            env().set('DEBUG', debugFlag);\n\n            if (underflowCheckValue > 0) {\n              return 32;\n            }\n          }\n\n          return 16;\n        });\n      }\n\n      return this.floatPrecisionValue;\n    }\n    /** Returns the smallest representable number.  */\n\n  }, {\n    key: \"epsilon\",\n    value: function epsilon() {\n      return this.floatPrecision() === 32 ? EPSILON_FLOAT32 : EPSILON_FLOAT16;\n    }\n  }, {\n    key: \"uploadToGPU\",\n    value: function uploadToGPU(dataId) {\n      var texData = this.texData.get(dataId);\n      var shape = texData.shape,\n          dtype = texData.dtype,\n          values = texData.values,\n          texture = texData.texture,\n          usage = texData.usage,\n          isPacked = texData.isPacked;\n\n      if (texture != null) {\n        // Array is already on GPU. No-op.\n        return;\n      }\n\n      var shouldTimeProgram = this.activeTimers != null;\n      var start;\n\n      if (shouldTimeProgram) {\n        start = util.now();\n      }\n\n      var texShape = texData.texShape;\n\n      if (texShape == null) {\n        texShape = webgl_util.getTextureShapeFromLogicalShape(shape, isPacked);\n        texData.texShape = texShape;\n      }\n\n      if (values != null) {\n        var shapeAs3D = webgl_util.getShapeAs3D(shape);\n        var program;\n        var width = texShape[1],\n            height = texShape[0];\n        var isByteArray = values instanceof Uint8Array;\n\n        if (isPacked) {\n          var _tex_util$getPackedMa = tex_util.getPackedMatrixTextureShapeWidthHeight(texShape[0], texShape[1]);\n\n          var _tex_util$getPackedMa2 = _slicedToArray(_tex_util$getPackedMa, 2);\n\n          width = _tex_util$getPackedMa2[0];\n          height = _tex_util$getPackedMa2[1];\n          program = new EncodeMatrixPackedProgram(shapeAs3D, [height, width], isByteArray);\n        } else {\n          program = new EncodeMatrixProgram(shapeAs3D, [height, width], isByteArray);\n        }\n\n        var tempDenseInputHandle = this.makeTensorInfo([height, width], dtype);\n\n        if (isByteArray) {\n          this.texData.get(tempDenseInputHandle.dataId).usage = TextureUsage.PIXELS;\n        } else {\n          this.texData.get(tempDenseInputHandle.dataId).usage = TextureUsage.UPLOAD;\n        }\n\n        this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(tempDenseInputHandle.dataId), width, height, values); // We want the output to remain packed regardless of the value of\n        // WEBGL_PACK.\n\n        var preventEagerUnpacking = true;\n        var encodedOutputTarget = this.runWebGLProgram(program, [tempDenseInputHandle], dtype, null, preventEagerUnpacking); // Have the original texture assume the identity of the encoded output.\n\n        var outputTexData = this.texData.get(encodedOutputTarget.dataId);\n        texData.texture = outputTexData.texture;\n        texData.texShape = outputTexData.texShape;\n        texData.isPacked = outputTexData.isPacked;\n        texData.usage = outputTexData.usage;\n        this.disposeIntermediateTensorInfo(tempDenseInputHandle);\n        this.texData.delete(encodedOutputTarget.dataId); // Once uploaded, don't store the values on cpu.\n\n        texData.values = null;\n\n        if (shouldTimeProgram) {\n          this.uploadWaitMs += util.now() - start;\n        }\n      } else {\n        var newTexture = this.acquireTexture(texShape, usage, dtype, isPacked);\n        texData.texture = newTexture;\n      }\n    }\n  }, {\n    key: \"convertAndCacheOnCPU\",\n    value: function convertAndCacheOnCPU(dataId, float32Values) {\n      var texData = this.texData.get(dataId);\n      var dtype = texData.dtype;\n      this.releaseGPUData(dataId);\n\n      if (float32Values != null) {\n        texData.values = float32ToTypedArray(float32Values, dtype);\n      }\n\n      return texData.values;\n    }\n  }, {\n    key: \"acquireTexture\",\n    value: function acquireTexture(texShape, texType, dtype, isPacked) {\n      this.numBytesInGPU += this.computeBytes(texShape, dtype);\n\n      if (!this.warnedAboutMemory && this.numBytesInGPU > this.numMBBeforeWarning * 1024 * 1024) {\n        var mb = (this.numBytesInGPU / 1024 / 1024).toFixed(2);\n        this.warnedAboutMemory = true;\n        console.warn(\"High memory usage in GPU: \".concat(mb, \" MB, \") + \"most likely due to a memory leak\");\n      }\n\n      return this.textureManager.acquireTexture(texShape, texType, isPacked);\n    }\n  }, {\n    key: \"computeBytes\",\n    value: function computeBytes(shape, dtype) {\n      return shape[0] * shape[1] * util.bytesPerElement(dtype);\n    }\n  }]);\n\n  return MathBackendWebGL;\n}(KernelBackend);\nMathBackendWebGL.nextDataId = 0;\n\nfunction float32ToTypedArray(a, dtype) {\n  if (dtype === 'float32' || dtype === 'complex64') {\n    return a;\n  } else if (dtype === 'int32' || dtype === 'bool') {\n    var result = dtype === 'int32' ? new Int32Array(a.length) : new Uint8Array(a.length);\n\n    for (var i = 0; i < result.length; ++i) {\n      result[i] = Math.round(a[i]);\n    }\n\n    return result;\n  } else {\n    throw new Error(\"Unknown dtype \".concat(dtype));\n  }\n}","/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// base.ts is the webgl backend without auto kernel registration.\nimport { device_util, registerBackend } from '@tensorflow/tfjs-core';\nimport { MathBackendWebGL } from './backend_webgl';\nexport { version as version_webgl } from './version';\n\nif (device_util.isBrowser()) {\n  registerBackend('webgl', function () {\n    return new MathBackendWebGL();\n  }, 2\n  /* priority */\n  );\n} // Export webgl utilities\n\n\nexport * from './webgl'; // Export forceHalfFlost under webgl namespace for the union bundle.\n\nimport { forceHalfFloat } from './webgl';\nexport var webgl = {\n  forceHalfFloat: forceHalfFloat\n};","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util } from '@tensorflow/tfjs-core';\nexport var CHECK_NAN_SNIPPET = \"\\n  if (isnan(a)) return a;\\n  if (isnan(b)) return b;\\n\";\nexport var SQUARED_DIFFERENCE = 'return (a - b) * (a - b);';\nexport var BinaryOpProgram = function BinaryOpProgram(op, aShape, bShape) {\n  _classCallCheck(this, BinaryOpProgram);\n\n  this.variableNames = ['A', 'B'];\n  this.outputShape = backend_util.assertAndGetBroadcastShape(aShape, bShape);\n  this.userCode = \"\\n      float binaryOperation(float a, float b) {\\n        \".concat(op, \"\\n      }\\n\\n      void main() {\\n        float a = getAAtOutCoords();\\n        float b = getBAtOutCoords();\\n        setOutput(binaryOperation(a, b));\\n      }\\n    \");\n};","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, util } from '@tensorflow/tfjs-core';\nimport { getChannels } from './packing_util';\nimport { getCoordsDataType } from './shader_compiler';\nexport var CHECK_NAN_SNIPPET = \"\\n  result.r = isNaN.r > 0. ? NAN : result.r;\\n  result.g = isNaN.g > 0. ? NAN : result.g;\\n  result.b = isNaN.b > 0. ? NAN : result.b;\\n  result.a = isNaN.a > 0. ? NAN : result.a;\\n\";\nexport var ELU_DER = \"\\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\\n\";\nexport var NOT_EQUAL = \"\\n  return vec4(notEqual(a, b));\\n\";\nexport var BinaryOpPackedProgram = function BinaryOpPackedProgram(op, aShape, bShape) {\n  var checkOutOfBounds = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n  _classCallCheck(this, BinaryOpPackedProgram);\n\n  this.variableNames = ['A', 'B'];\n  this.supportsBroadcasting = true;\n  this.packedInputs = true;\n  this.packedOutput = true;\n  this.outputShape = backend_util.assertAndGetBroadcastShape(aShape, bShape);\n  var rank = this.outputShape.length;\n  var checkOutOfBoundsString = '';\n\n  if (checkOutOfBounds) {\n    if (rank === 0 || util.sizeFromShape(this.outputShape) === 1) {\n      checkOutOfBoundsString = \"\\n          result.y = 0.;\\n          result.z = 0.;\\n          result.w = 0.;\\n        \";\n    } else {\n      var dtype = getCoordsDataType(rank);\n      checkOutOfBoundsString = \"\\n          \".concat(dtype, \" coords = getOutputCoords();\\n        \");\n\n      if (rank === 1) {\n        checkOutOfBoundsString += \"\\n            result.y = (coords + 1) >= \".concat(this.outputShape[0], \" ? 0. : result.y;\\n            result.z = 0.;\\n            result.w = 0.;\\n          \");\n      } else {\n        var channels = getChannels('coords', rank);\n        checkOutOfBoundsString += \"\\n            bool nextRowOutOfBounds =\\n              (\".concat(channels[rank - 2], \" + 1) >= \").concat(this.outputShape[rank - 2], \";\\n            bool nextColOutOfBounds =\\n              (\").concat(channels[rank - 1], \" + 1) >= \").concat(this.outputShape[rank - 1], \";\\n            result.y = nextColOutOfBounds ? 0. : result.y;\\n            result.z = nextRowOutOfBounds ? 0. : result.z;\\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\\n          \");\n      }\n    }\n  }\n\n  this.userCode = \"\\n      vec4 binaryOperation(vec4 a, vec4 b) {\\n        \".concat(op, \"\\n      }\\n\\n      void main() {\\n        vec4 a = getAAtOutCoords();\\n        vec4 b = getBAtOutCoords();\\n\\n        vec4 result = binaryOperation(a, b);\\n        \").concat(checkOutOfBoundsString, \"\\n\\n        setOutput(result);\\n      }\\n    \");\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Identity } from '@tensorflow/tfjs-core';\nexport function identity(args) {\n  var inputs = args.inputs,\n      backend = args.backend;\n  var x = inputs.x;\n  backend.incRef(x.dataId);\n  return {\n    dataId: x.dataId,\n    shape: x.shape,\n    dtype: x.dtype\n  };\n}\nexport var identityConfig = {\n  kernelName: Identity,\n  backendName: 'webgl',\n  kernelFunc: identity\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Complex } from '@tensorflow/tfjs-core';\nimport { identity } from './Identity';\n/**\n * In WebGL data is stored in GPU textures which can't be efficiently copied, so\n * complex tensors share data with their real and imaginary components. Complex\n * tensors' reference to the components is tracked by refCount on the individual\n * component. The refCounts are increased by the identity call.\n *\n * When a complex tensor is disposed, it will reduce the refCount on the\n * components by calling disposeData on each.\n */\n\nexport function complex(args) {\n  var inputs = args.inputs,\n      backend = args.backend;\n  var real = inputs.real,\n      imag = inputs.imag;\n  var complexInfo = backend.makeTensorInfo(real.shape, 'complex64');\n  var complex = backend.texData.get(complexInfo.dataId);\n  var realTensorInfo = identity({\n    inputs: {\n      x: real\n    },\n    backend: backend\n  });\n  var imagTensorInfo = identity({\n    inputs: {\n      x: imag\n    },\n    backend: backend\n  });\n  complex.complexTensorInfos = {\n    real: realTensorInfo,\n    imag: imagTensorInfo\n  };\n  return complexInfo;\n}\nexport var complexConfig = {\n  kernelName: Complex,\n  backendName: 'webgl',\n  kernelFunc: complex\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env, LeakyRelu, util } from '@tensorflow/tfjs-core';\nimport { BinaryOpProgram } from '../binaryop_gpu';\nimport { BinaryOpPackedProgram } from '../binaryop_packed_gpu';\nexport var LEAKYRELU = \"return (a < 0.) ? b * a : a;\";\nexport var LEAKYRELU_PACKED = \"\\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\\n\";\nexport function leakyRelu(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  var alpha = attrs.alpha;\n  var $alpha = backend.makeTensorInfo([], 'float32', util.createScalarValue(alpha, 'float32'));\n  var program = env().getBool('WEBGL_PACK_BINARY_OPERATIONS') ? new BinaryOpPackedProgram(LEAKYRELU_PACKED, x.shape, $alpha.shape) : new BinaryOpProgram(LEAKYRELU, x.shape, $alpha.shape);\n  var result = backend.runWebGLProgram(program, [x, $alpha], x.dtype);\n  backend.disposeIntermediateTensorInfo($alpha);\n  return result;\n}\nexport var leakyReluConfig = {\n  kernelName: LeakyRelu,\n  backendName: 'webgl',\n  kernelFunc: leakyRelu\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env, Prelu } from '@tensorflow/tfjs-core';\nimport { BinaryOpProgram } from '../binaryop_gpu';\nimport { BinaryOpPackedProgram } from '../binaryop_packed_gpu';\nexport var PRELU = \"return (a < 0.) ? b * a : a;\";\nexport var PRELU_PACKED = \"\\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\\n\";\nexport function prelu(args) {\n  var inputs = args.inputs,\n      backend = args.backend;\n  var x = inputs.x,\n      alpha = inputs.alpha;\n  var program = env().getBool('WEBGL_PACK_BINARY_OPERATIONS') ? new BinaryOpPackedProgram(PRELU_PACKED, x.shape, alpha.shape) : new BinaryOpProgram(PRELU, x.shape, alpha.shape);\n  return backend.runWebGLProgram(program, [x, alpha], x.dtype);\n}\nexport var preluConfig = {\n  kernelName: Prelu,\n  backendName: 'webgl',\n  kernelFunc: prelu\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env, upcastType } from '@tensorflow/tfjs-core';\nimport { BinaryOpProgram } from '../binaryop_gpu';\nimport { BinaryOpPackedProgram } from '../binaryop_packed_gpu';\nimport { complex } from '../kernels/Complex';\nimport { LEAKYRELU, LEAKYRELU_PACKED } from '../kernels/LeakyRelu';\nimport { PRELU, PRELU_PACKED } from '../kernels/Prelu';\nimport * as unary_op from '../unaryop_gpu';\nimport { UnaryOpProgram } from '../unaryop_gpu';\nimport * as unary_packed_op from '../unaryop_packed_gpu';\nimport { UnaryOpPackedProgram } from '../unaryop_packed_gpu';\nexport var CHECK_NAN_SNIPPET_UNARY = \"if (isnan(x)) return x;\";\nexport var CHECK_NAN_SNIPPET_BINARY = \"\\n  if (isnan(a)) return a;\\n  if (isnan(b)) return b;\\n\";\nexport var CHECK_NAN_SNIPPET_BINARY_PACKED = \"\\n  result.r = isNaN.r > 0. ? NAN : result.r;\\n  result.g = isNaN.g > 0. ? NAN : result.g;\\n  result.b = isNaN.b > 0. ? NAN : result.b;\\n  result.a = isNaN.a > 0. ? NAN : result.a;\\n\";\n/**\n * Template that creates a `KernelFunc` for unary ops.\n * @param opSnippet Op snippet to create `UnaryOpProgram`.\n * @param packedOpSnippet Op snippet to create `UnaryOpPackedProgram`.\n * @param dtype Optional. If set, the result has this dtype. Otherwise, the\n *     result has the same dtype as the first input. This is mainly used in\n *     comparison kernels, such as Equal, Less, Greater, etc.\n */\n\nexport function unaryKernelFunc(_ref) {\n  var opSnippet = _ref.opSnippet,\n      packedOpSnippet = _ref.packedOpSnippet,\n      cpuKernelImpl = _ref.cpuKernelImpl,\n      dtype = _ref.dtype;\n  return function (_ref2) {\n    var inputs = _ref2.inputs,\n        backend = _ref2.backend;\n    var x = inputs.x;\n    var webglBackend = backend;\n    var $dtype = dtype || x.dtype;\n\n    if (webglBackend.shouldExecuteOnCPU([x]) && cpuKernelImpl != null) {\n      var xData = webglBackend.texData.get(x.dataId);\n      var outValues = cpuKernelImpl(xData.values, $dtype);\n      return webglBackend.makeTensorInfo(x.shape, $dtype, outValues);\n    }\n\n    var shouldUsePackedProgram = env().getBool('WEBGL_PACK_UNARY_OPERATIONS') && packedOpSnippet != null;\n    var program;\n\n    if (shouldUsePackedProgram) {\n      program = new UnaryOpPackedProgram(x.shape, packedOpSnippet);\n    } else {\n      program = new UnaryOpProgram(x.shape, opSnippet);\n    }\n\n    return webglBackend.runWebGLProgram(program, [x], $dtype);\n  };\n}\n/**\n * Template that creates a `KernelFunc` for binary ops.\n * @param opSnippet Op snippet to create `BinaryOpProgram`.\n * @param packedOpSnippet Op snippet to create `BinaryOpPackedProgram`.\n * @param checkOutOfBoundsForPackedProgram Whether to set checkOutOfBounds=true\n *     when creating BinaryOpPackedProgram.\n * @param dtype Optional. If set, the result has this dtype. Otherwise, the\n *     result has the same dtype as the first input. This is mainly used in\n *     comparison kernels, such as Equal, Less, Greater, etc.\n */\n\nexport function binaryKernelFunc(_ref3) {\n  var opSnippet = _ref3.opSnippet,\n      packedOpSnippet = _ref3.packedOpSnippet,\n      _ref3$checkOutOfBound = _ref3.checkOutOfBounds,\n      checkOutOfBounds = _ref3$checkOutOfBound === void 0 ? false : _ref3$checkOutOfBound,\n      _ref3$supportsComplex = _ref3.supportsComplex,\n      supportsComplex = _ref3$supportsComplex === void 0 ? false : _ref3$supportsComplex,\n      cpuKernelImpl = _ref3.cpuKernelImpl,\n      dtype = _ref3.dtype;\n  return function (_ref4) {\n    var inputs = _ref4.inputs,\n        backend = _ref4.backend;\n    var a = inputs.a,\n        b = inputs.b;\n    var webglBackend = backend;\n\n    if (supportsComplex && a.dtype === 'complex64') {\n      var aData = webglBackend.texData.get(a.dataId);\n      var bData = webglBackend.texData.get(b.dataId);\n\n      var _map = [[aData.complexTensorInfos.real, bData.complexTensorInfos.real], [aData.complexTensorInfos.imag, bData.complexTensorInfos.imag]].map(function (complexParts) {\n        var _complexParts = _slicedToArray(complexParts, 2),\n            aPart = _complexParts[0],\n            bPart = _complexParts[1];\n\n        var aHandle = {\n          dataId: aPart.dataId,\n          dtype: aPart.dtype,\n          shape: a.shape\n        };\n        var bHandle = {\n          dataId: bPart.dataId,\n          dtype: bPart.dtype,\n          shape: b.shape\n        };\n        var program = new BinaryOpProgram(opSnippet, a.shape, b.shape);\n        return webglBackend.runWebGLProgram(program, [aHandle, bHandle], upcastType(aPart.dtype, bPart.dtype));\n      }),\n          _map2 = _slicedToArray(_map, 2),\n          real = _map2[0],\n          imag = _map2[1];\n\n      var complexOutput = complex({\n        inputs: {\n          real: real,\n          imag: imag\n        },\n        backend: webglBackend\n      });\n      webglBackend.disposeIntermediateTensorInfo(real);\n      webglBackend.disposeIntermediateTensorInfo(imag); // TODO(annxingyuan): Implement CPU forwarding for complex inputs.\n\n      return complexOutput;\n    }\n\n    var $dtype = dtype || upcastType(a.dtype, b.dtype);\n\n    if (webglBackend.shouldExecuteOnCPU([a, b]) && cpuKernelImpl != null) {\n      var _aData = webglBackend.texData.get(a.dataId);\n\n      var _bData = webglBackend.texData.get(b.dataId);\n\n      var _cpuKernelImpl = cpuKernelImpl(a.shape, b.shape, _aData.values, _bData.values, $dtype),\n          _cpuKernelImpl2 = _slicedToArray(_cpuKernelImpl, 2),\n          outValues = _cpuKernelImpl2[0],\n          outShape = _cpuKernelImpl2[1];\n\n      var out = webglBackend.makeTensorInfo(outShape, $dtype);\n      var outData = webglBackend.texData.get(out.dataId);\n      outData.values = outValues;\n      return out;\n    }\n\n    var shouldUsePackedProgram = env().getBool('WEBGL_PACK_BINARY_OPERATIONS') && packedOpSnippet != null;\n    var program;\n\n    if (shouldUsePackedProgram) {\n      program = new BinaryOpPackedProgram(packedOpSnippet, a.shape, b.shape, checkOutOfBounds);\n    } else {\n      program = new BinaryOpProgram(opSnippet, a.shape, b.shape);\n    }\n\n    return webglBackend.runWebGLProgram(program, [a, b], $dtype);\n  };\n}\nexport function mapActivationToShaderProgram(activation) {\n  var packed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  if (activation === 'linear') {\n    if (packed) {\n      return unary_packed_op.LINEAR;\n    }\n\n    return unary_op.LINEAR;\n  } else if (activation === 'relu') {\n    if (packed) {\n      return unary_packed_op.RELU;\n    }\n\n    return unary_op.RELU;\n  } else if (activation === 'elu') {\n    if (packed) {\n      return unary_packed_op.ELU;\n    }\n\n    return unary_op.ELU;\n  } else if (activation === 'relu6') {\n    if (packed) {\n      return unary_packed_op.RELU6;\n    }\n\n    return unary_op.RELU6;\n  } else if (activation === 'prelu') {\n    if (packed) {\n      return PRELU_PACKED;\n    }\n\n    return PRELU;\n  } else if (activation === 'leakyrelu') {\n    if (packed) {\n      return LEAKYRELU_PACKED;\n    }\n\n    return LEAKYRELU;\n  }\n\n  throw new Error(\"Activation \".concat(activation, \" has not been implemented for the WebGL backend.\"));\n}","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var MatMulPackedProgram = function MatMulPackedProgram(aShape, bShape, outputShape) {\n  var transposeA = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var transposeB = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  var addBias = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n  var activation = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n  var hasPreluActivation = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : false;\n  var hasLeakyreluActivation = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : false;\n\n  _classCallCheck(this, MatMulPackedProgram);\n\n  this.variableNames = ['matrixA', 'matrixB'];\n  this.packedInputs = true;\n  this.packedOutput = true;\n  this.outputShape = outputShape;\n  var sharedDim = transposeA ? aShape[1] : aShape[2];\n  var sharedDimensionPacked = Math.ceil(sharedDim / 2);\n  var aSample = transposeA ? 'i * 2, rc.y' : 'rc.y, i * 2';\n  var bSample = transposeB ? 'rc.z, i * 2' : 'i * 2, rc.z';\n  var aSwizzle = transposeA ? ['a.xxyy', 'a.zzww'] : ['a.xxzz', 'a.yyww'];\n  var bSwizzle = transposeB ? ['b.xzxz', 'b.ywyw'] : ['b.xyxy', 'b.zwzw'];\n  var activationSnippet = '',\n      applyActivationSnippet = '';\n\n  if (activation) {\n    if (hasPreluActivation) {\n      activationSnippet = \"vec4 activation(vec4 a) {\\n          vec4 b = getPreluActivationWeightsAtOutCoords();\\n          \".concat(activation, \"\\n        }\");\n    } else if (hasLeakyreluActivation) {\n      activationSnippet = \"vec4 activation(vec4 a) {\\n          vec4 b = getLeakyreluAlphaAtOutCoords();\\n          \".concat(activation, \"\\n        }\");\n    } else {\n      activationSnippet = \"vec4 activation(vec4 x) {\\n          \".concat(activation, \"\\n        }\");\n    }\n\n    applyActivationSnippet = \"result = activation(result);\";\n  }\n\n  var addBiasSnippet = addBias ? 'result += getBiasAtOutCoords();' : '';\n\n  if (addBias) {\n    this.variableNames.push('bias');\n  }\n\n  if (hasPreluActivation) {\n    this.variableNames.push('preluActivationWeights');\n  }\n\n  if (hasLeakyreluActivation) {\n    this.variableNames.push('leakyreluAlpha');\n  }\n\n  var batchASnippet = 'rc.x';\n  var batchBSnippet = 'rc.x';\n\n  if (aShape[0] < bShape[0]) {\n    batchASnippet = \"int(min(float(rc.x), \".concat(aShape[0] - 1, \".))\");\n  } else if (bShape[0] < aShape[0]) {\n    batchBSnippet = \"int(min(float(rc.x), \".concat(bShape[0] - 1, \".))\");\n  }\n\n  this.userCode = \"\\n      \".concat(activationSnippet, \"\\n\\n      const float sharedDimension = \").concat(sharedDimensionPacked, \".0;\\n\\n      vec4 dot2x2ARowBCol(ivec3 rc) {\\n        vec4 result = vec4(0);\\n        for (int i = 0; i < \").concat(sharedDimensionPacked, \"; i++) {\\n          int batchA = \").concat(batchASnippet, \";\\n          int batchB = \").concat(batchBSnippet, \";\\n          vec4 a = getMatrixA(batchA, \").concat(aSample, \");\\n          vec4 b = getMatrixB(batchB, \").concat(bSample, \");\\n\\n          // These swizzled products need to be separately added.\\n          // See: https://github.com/tensorflow/tfjs/issues/1735\\n          result += (\").concat(aSwizzle[0], \" * \").concat(bSwizzle[0], \");\\n          result += (\").concat(aSwizzle[1], \" * \").concat(bSwizzle[1], \");\\n        }\\n        return result;\\n      }\\n\\n      void main() {\\n        ivec3 rc = getOutputCoords();\\n        vec4 result = dot2x2ARowBCol(rc);\\n\\n        \").concat(addBiasSnippet, \"\\n\\n        \").concat(applyActivationSnippet, \"\\n\\n        setOutput(result);\\n      }\\n    \");\n};","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util } from '@tensorflow/tfjs-core'; // (Ar + Ai)(Br + Bi) =\n// ArBr + ArBi + AiBr + AiBi = ArBr - AB + ArBi + AiBr\n// Yr = ArBr - AB\n// Yi = ArBi + AiBr\n\nexport var COMPLEX_MULTIPLY = {\n  REAL: 'return areal * breal - aimag * bimag;',\n  IMAG: 'return areal * bimag + aimag * breal;'\n};\nexport var BinaryOpComplexProgram = function BinaryOpComplexProgram(op, aShape, bShape) {\n  _classCallCheck(this, BinaryOpComplexProgram);\n\n  this.variableNames = ['AReal', 'AImag', 'BReal', 'BImag'];\n  this.outputShape = backend_util.assertAndGetBroadcastShape(aShape, bShape);\n  this.userCode = \"\\n      float binaryOpComplex(\\n          float areal, float aimag, float breal, float bimag) {\\n        \".concat(op, \"\\n      }\\n\\n      void main() {\\n        float areal = getARealAtOutCoords();\\n        float aimag = getAImagAtOutCoords();\\n        float breal = getBRealAtOutCoords();\\n        float bimag = getBImagAtOutCoords();\\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\\n      }\\n    \");\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, env, Multiply } from '@tensorflow/tfjs-core';\nimport * as binaryop_complex_gpu from '../binaryop_complex_gpu';\nimport { BinaryOpComplexProgram } from '../binaryop_complex_gpu';\nimport { BinaryOpProgram } from '../binaryop_gpu';\nimport { BinaryOpPackedProgram } from '../binaryop_packed_gpu';\nimport { multiplyImplCPU as cpuMultiply } from '../kernel_utils/shared';\nimport { complex } from './Complex';\nvar MUL = 'return a * b;';\nexport function multiply(args) {\n  var inputs = args.inputs,\n      backend = args.backend;\n  var a = inputs.a,\n      b = inputs.b;\n  var dtype = backend_util.upcastType(a.dtype, b.dtype);\n\n  if (a.dtype === 'complex64') {\n    var aData = backend.texData.get(a.dataId);\n    var bData = backend.texData.get(b.dataId);\n    var realProgram = new BinaryOpComplexProgram(binaryop_complex_gpu.COMPLEX_MULTIPLY.REAL, a.shape, b.shape);\n    var imagProgram = new BinaryOpComplexProgram(binaryop_complex_gpu.COMPLEX_MULTIPLY.IMAG, a.shape, b.shape);\n    var _inputs = [{\n      dataId: aData.complexTensorInfos.real.dataId,\n      dtype: aData.complexTensorInfos.real.dtype,\n      shape: a.shape\n    }, {\n      dataId: aData.complexTensorInfos.imag.dataId,\n      dtype: aData.complexTensorInfos.imag.dtype,\n      shape: a.shape\n    }, {\n      dataId: bData.complexTensorInfos.real.dataId,\n      dtype: bData.complexTensorInfos.real.dtype,\n      shape: b.shape\n    }, {\n      dataId: bData.complexTensorInfos.imag.dataId,\n      dtype: bData.complexTensorInfos.imag.dtype,\n      shape: b.shape\n    }];\n    var realPart = backend.runWebGLProgram(realProgram, _inputs, 'float32');\n    var imagPart = backend.runWebGLProgram(imagProgram, _inputs, 'float32');\n    var complexOutput = complex({\n      inputs: {\n        real: realPart,\n        imag: imagPart\n      },\n      backend: backend\n    });\n    backend.disposeIntermediateTensorInfo(realPart);\n    backend.disposeIntermediateTensorInfo(imagPart); // TODO(annxingyuan): CPU forwarding for complex inputs.\n\n    return complexOutput;\n  }\n\n  if (backend.shouldExecuteOnCPU([a, b])) {\n    var _aData = backend.texData.get(a.dataId);\n\n    var _bData = backend.texData.get(b.dataId);\n\n    var _cpuMultiply = cpuMultiply(a.shape, b.shape, _aData.values, _bData.values, dtype),\n        _cpuMultiply2 = _slicedToArray(_cpuMultiply, 2),\n        outValues = _cpuMultiply2[0],\n        outShape = _cpuMultiply2[1];\n\n    var out = backend.makeTensorInfo(outShape, dtype);\n    var outData = backend.texData.get(out.dataId);\n    outData.values = outValues;\n    return out;\n  }\n\n  var program;\n\n  if (env().getBool('WEBGL_PACK_BINARY_OPERATIONS')) {\n    program = new BinaryOpPackedProgram(MUL, a.shape, b.shape);\n  } else {\n    program = new BinaryOpProgram(MUL, a.shape, b.shape);\n  }\n\n  return backend.runWebGLProgram(program, [a, b], dtype);\n}\nexport var multiplyConfig = {\n  kernelName: Multiply,\n  backendName: 'webgl',\n  kernelFunc: multiply\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Reshape, util } from '@tensorflow/tfjs-core';\nimport { packedReshape } from '../kernel_utils/reshape';\nimport { isReshapeFree } from '../webgl_util';\nexport function reshape(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  var shape = attrs.shape;\n  var webglBackend = backend;\n  var xSize = util.sizeFromShape(x.shape);\n  var $shape = util.inferFromImplicitShape(shape, xSize);\n  var $xSize = util.sizeFromShape($shape);\n  util.assert(xSize === $xSize, function () {\n    return \"The new shape (\".concat($shape, \") has \").concat($xSize, \" elements and the old \") + \"shape (\".concat(x.shape, \") has \").concat(xSize, \" elements. The new shape and old \") + \"shape must have the same number of elements.\";\n  });\n  var xTexData = webglBackend.texData.get(x.dataId);\n\n  if (xTexData.isPacked && !isReshapeFree(x.shape, $shape) && !(xTexData.texture !== null && isReshapeFree(xTexData.shape, $shape))) {\n    return packedReshape(x, $shape, webglBackend);\n  }\n\n  webglBackend.incRef(x.dataId);\n  return {\n    dataId: x.dataId,\n    shape: $shape,\n    dtype: x.dtype\n  };\n}\nexport var reshapeConfig = {\n  kernelName: Reshape,\n  backendName: 'webgl',\n  kernelFunc: reshape\n};","import _toConsumableArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ReshapePackedProgram } from '../reshape_packed_gpu';\nimport { getBatchDim, getRowsCols } from '../webgl_util';\nexport function packedReshape(input, afterShape, backend) {\n  var input3DShape = [getBatchDim(input.shape)].concat(_toConsumableArray(getRowsCols(input.shape)));\n  var input3D = {\n    dtype: input.dtype,\n    shape: input3DShape,\n    dataId: input.dataId\n  };\n  var afterShapeAs3D = [getBatchDim(afterShape)].concat(_toConsumableArray(getRowsCols(afterShape)));\n  var program = new ReshapePackedProgram(afterShapeAs3D, input3DShape);\n  var preventEagerUnpackingOfOutput = true;\n  var output = backend.runWebGLProgram(program, [input3D], input.dtype, null\n  /* customSetup */\n  , preventEagerUnpackingOfOutput);\n  return {\n    dataId: output.dataId,\n    shape: afterShape,\n    dtype: output.dtype\n  };\n}","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\nexport var MeanProgram = function MeanProgram(reduceInfo, divisor) {\n  _classCallCheck(this, MeanProgram);\n\n  this.variableNames = ['x'];\n  var windowSize = reduceInfo.windowSize,\n      batchSize = reduceInfo.batchSize,\n      inSize = reduceInfo.inSize,\n      outSize = reduceInfo.outSize;\n  this.outputShape = [batchSize, outSize];\n  var windowSizeNearestVec4 = Math.floor(windowSize / 4) * 4;\n  var windowSizeVec4Remainder = windowSize % 4;\n  var updateSnippet = \"sumValue += dot(values, ones);\";\n\n  if (divisor != null) {\n    var denominator = 1 / divisor;\n    updateSnippet = \"sumValue += dot(values * \".concat(util.isInt(denominator) ? denominator.toPrecision(2) : denominator, \", ones);\");\n  }\n\n  var checkOutOfBounds = '';\n\n  if (inSize % windowSize > 0) {\n    checkOutOfBounds = \"\\n        if (inIdx < 0 || inIdx >= \".concat(inSize, \") {\\n          return 0.0;\\n        }\\n      \");\n  }\n\n  this.userCode = \"\\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\\n\\n      float getValue(int batch, int inIdx) {\\n        \".concat(checkOutOfBounds, \"\\n        return getX(batch, inIdx);\\n      }\\n\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int outIdx = coords[1];\\n        int inOffset = outIdx * \").concat(windowSize, \";\\n\\n        float sumValue = 0.0;\\n\\n        for (int i = 0; i < \").concat(windowSizeNearestVec4, \"; i += 4) {\\n          int inIdx = inOffset + i;\\n          vec4 values = vec4(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            getValue(batch, inIdx + 2),\\n            getValue(batch, inIdx + 3)\\n          );\\n\\n          \").concat(updateSnippet, \"\\n        }\\n\\n        int inIdx = inOffset + \").concat(windowSizeNearestVec4, \";\\n        if (\").concat(windowSizeVec4Remainder === 1, \") {\\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\\n\\n          \").concat(updateSnippet, \"\\n        } else if (\").concat(windowSizeVec4Remainder === 2, \") {\\n          vec4 values = vec4(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1), 0.0, 0.0);\\n\\n          \").concat(updateSnippet, \"\\n        } else if (\").concat(windowSizeVec4Remainder === 3, \") {\\n          vec4 values = vec4(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            getValue(batch, inIdx + 2), 0.0);\\n\\n          \").concat(updateSnippet, \"\\n        }\\n        setOutput(sumValue);\\n      }\\n    \");\n};","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var ReduceProgram = function ReduceProgram(reduceInfo, reduceType) {\n  _classCallCheck(this, ReduceProgram);\n\n  this.variableNames = ['x'];\n  var windowSize = reduceInfo.windowSize,\n      batchSize = reduceInfo.batchSize,\n      inSize = reduceInfo.inSize,\n      outSize = reduceInfo.outSize;\n  this.outputShape = [batchSize, outSize];\n  var initializationValue = '0.0';\n  var compareOp = \"\";\n\n  if (reduceType === 'prod') {\n    initializationValue = '1.0';\n  } else if (reduceType === 'min') {\n    // WebGL on Firefox Linux can't compile 1/0 so we do 1/eps.\n    initializationValue = '1.0 / 1e-20';\n    compareOp = \"min\";\n  } else if (reduceType === 'max') {\n    // WebGL on Firefox Linux can't compile 1/0 so we do 1/eps.\n    initializationValue = '-1.0 / 1e-20';\n    compareOp = \"max\";\n  }\n\n  var returnValue = \"\".concat(reduceType, \"(\").concat(reduceType, \"(\").concat(reduceType, \"(\") + 'minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])';\n\n  if (reduceType === 'sum') {\n    returnValue = \"sumValue\";\n  } else if (reduceType === 'prod') {\n    returnValue = \"prodValue\";\n  } else if (reduceType === 'all') {\n    returnValue = \"allValue\";\n  } else if (reduceType === 'any') {\n    returnValue = \"anyValue\";\n  }\n\n  var windowSizeNearestVec4 = Math.floor(windowSize / 4) * 4;\n  var windowSizeVec4Remainder = windowSize % 4;\n  var updateSnippet = \"\\n      if (\".concat(reduceType === 'sum', \") {\\n        sumValue += dot(values, ones);\\n      } else if (\").concat(reduceType === 'prod', \") {\\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\\n        prodValue *= tmp[0] * tmp[1];\\n      } else {\\n        minMaxValue = \").concat(compareOp, \"(values, minMaxValue);\\n      }\\n    \");\n  var vecType = \"vec4\";\n\n  if (reduceType === 'all') {\n    initializationValue = '1.0';\n    updateSnippet = \"\\n        bool reducedAllValue = all(values);\\n        float floatedReducedAllValue = float(reducedAllValue);\\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\\n      \";\n    vecType = \"bvec4\";\n  } else if (reduceType === 'any') {\n    initializationValue = '0.0';\n    updateSnippet = \"\\n        bool reducedAnyValue = any(values);\\n        float floatedReducedAnyValue = float(reducedAnyValue);\\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\\n      \";\n    vecType = \"bvec4\";\n  }\n\n  var checkOutOfBounds = '';\n\n  if (inSize % windowSize > 0) {\n    checkOutOfBounds = \"\\n        if (inIdx < 0 || inIdx >= \".concat(inSize, \") {\\n          return initializationValue;\\n        }\\n      \");\n  }\n\n  this.userCode = \"\\n      const float initializationValue = \".concat(initializationValue, \";\\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\\n\\n      float getValue(int batch, int inIdx) {\\n        \").concat(checkOutOfBounds, \"\\n        return getX(batch, inIdx);\\n      }\\n\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int outIdx = coords[1];\\n        int inOffset = outIdx * \").concat(windowSize, \";\\n\\n        vec4 minMaxValue = vec4(\").concat(initializationValue, \");\\n        float prodValue = 1.0;\\n        float sumValue = 0.0;\\n        float allValue = 1.0;\\n        float anyValue = 0.0;\\n\\n        for (int i = 0; i < \").concat(windowSizeNearestVec4, \"; i += 4) {\\n          int inIdx = inOffset + i;\\n          \").concat(vecType, \" values = \").concat(vecType, \"(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            getValue(batch, inIdx + 2),\\n            getValue(batch, inIdx + 3)\\n          );\\n\\n          \").concat(updateSnippet, \"\\n        }\\n\\n        int inIdx = inOffset + \").concat(windowSizeNearestVec4, \";\\n        if (\").concat(windowSizeVec4Remainder === 1, \") {\\n          \").concat(vecType, \" values = \").concat(vecType, \"(\\n            getValue(batch, inIdx),\\n            initializationValue,\\n            initializationValue,\\n            initializationValue\\n          );\\n\\n          \").concat(updateSnippet, \"\\n        } else if (\").concat(windowSizeVec4Remainder === 2, \") {\\n          \").concat(vecType, \" values = \").concat(vecType, \"(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            initializationValue,\\n            initializationValue\\n          );\\n\\n          \").concat(updateSnippet, \"\\n        } else if (\").concat(windowSizeVec4Remainder === 3, \") {\\n          \").concat(vecType, \" values = \").concat(vecType, \"(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            getValue(batch, inIdx + 2),\\n            initializationValue\\n          );\\n\\n          \").concat(updateSnippet, \"\\n        }\\n        setOutput(\").concat(returnValue, \");\\n      }\\n    \");\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util } from '@tensorflow/tfjs-core';\nimport { MeanProgram } from '../mean_gpu';\nimport { ReduceProgram } from '../reduce_gpu'; // Returns an array of configuration objects that describe each stage of the\n// reduction.\n\nfunction getReductionStages(inShape) {\n  var stages = [];\n\n  while (stages.length === 0 || stages[stages.length - 1].outSize !== 1) {\n    var outSize = stages.length ? stages[stages.length - 1].outSize : inShape[1];\n    var windowSize = backend_util.computeOptimalWindowSize(outSize);\n    stages.push({\n      inSize: outSize,\n      windowSize: windowSize,\n      outSize: Math.ceil(outSize / windowSize)\n    });\n  }\n\n  return stages;\n}\n\nexport function reduce(x, dtype, reductionType, backend) {\n  var reductionStages = getReductionStages(x.shape);\n  var result = x;\n\n  for (var i = 0; i < reductionStages.length; i++) {\n    var _reductionStages$i = reductionStages[i],\n        inSize = _reductionStages$i.inSize,\n        windowSize = _reductionStages$i.windowSize,\n        outSize = _reductionStages$i.outSize;\n    var program = void 0;\n    var previousResult = void 0;\n\n    if (reductionType === 'mean') {\n      program = i === 0 ? new MeanProgram({\n        windowSize: windowSize,\n        inSize: inSize,\n        batchSize: x.shape[0],\n        outSize: outSize\n      }, inSize) : new MeanProgram({\n        windowSize: windowSize,\n        inSize: inSize,\n        batchSize: x.shape[0],\n        outSize: outSize\n      });\n    } else {\n      program = new ReduceProgram({\n        windowSize: windowSize,\n        inSize: inSize,\n        batchSize: x.shape[0],\n        outSize: outSize\n      }, reductionType);\n    }\n\n    previousResult = result;\n    result = backend.runWebGLProgram(program, [result], dtype);\n\n    if (previousResult.dataId !== x.dataId) {\n      backend.disposeIntermediateTensorInfo(previousResult);\n    }\n  }\n\n  return result;\n}","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getCoordsDataType } from './shader_compiler';\nexport var TransposeProgram = function TransposeProgram(aShape, newDim) {\n  _classCallCheck(this, TransposeProgram);\n\n  this.variableNames = ['A'];\n  var outputShape = new Array(aShape.length);\n\n  for (var i = 0; i < outputShape.length; i++) {\n    outputShape[i] = aShape[newDim[i]];\n  }\n\n  this.outputShape = outputShape;\n  this.rank = outputShape.length;\n  var dtype = getCoordsDataType(this.rank);\n  var switched = getSwitchedCoords(newDim);\n  this.userCode = \"\\n    void main() {\\n      \".concat(dtype, \" resRC = getOutputCoords();\\n      setOutput(getA(\").concat(switched, \"));\\n    }\\n    \");\n};\n\nfunction getSwitchedCoords(newDim) {\n  var rank = newDim.length;\n\n  if (rank > 6) {\n    throw Error(\"Transpose for rank \".concat(rank, \" is not yet supported\"));\n  }\n\n  var originalOrder = ['resRC.x', 'resRC.y', 'resRC.z', 'resRC.w', 'resRC.u', 'resRC.v'];\n  var switchedCoords = new Array(rank);\n\n  for (var i = 0; i < newDim.length; i++) {\n    switchedCoords[newDim[i]] = originalOrder[i];\n  }\n\n  return switchedCoords.join();\n}","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getVecChannels } from './packing_util';\nimport { getCoordsDataType } from './shader_compiler';\nexport var TransposePackedProgram = function TransposePackedProgram(aShape, newDim) {\n  _classCallCheck(this, TransposePackedProgram);\n\n  this.variableNames = ['A'];\n  this.packedInputs = true;\n  this.packedOutput = true;\n  var outputShape = new Array(aShape.length);\n\n  for (var i = 0; i < outputShape.length; i++) {\n    outputShape[i] = aShape[newDim[i]];\n  }\n\n  this.outputShape = outputShape;\n  this.rank = outputShape.length;\n\n  if (this.rank > 6) {\n    throw Error(\"Packed transpose for rank \".concat(this.rank, \" is not yet supported.\"));\n  }\n\n  var dtype = getCoordsDataType(this.rank);\n  var outputOrder = getVecChannels('rc', this.rank);\n  var switchedOrder = new Array(this.rank);\n\n  for (var _i = 0; _i < newDim.length; _i++) {\n    switchedOrder[newDim[_i]] = outputOrder[_i];\n  }\n\n  var innerDims = \"vec2(\".concat(switchedOrder.slice(-2).join(), \")\");\n  var nextColumn = \"++\".concat(outputOrder[this.rank - 1], \" < \").concat(outputShape[this.rank - 1]);\n  var getc = \"getChannel(getA(\".concat(switchedOrder.join(), \"), \").concat(innerDims, \")\");\n  this.userCode = \"\\n    void main() {\\n      \".concat(dtype, \" rc = getOutputCoords();\\n      vec4 result = vec4(0.);\\n      result[0] = \").concat(getc, \";\\n      if(\").concat(nextColumn, \") {\\n        result[1] = \").concat(getc, \";\\n      }\\n      --\").concat(outputOrder[this.rank - 1], \";\\n      if(++\").concat(outputOrder[this.rank - 2], \" < \").concat(outputShape[this.rank - 2], \") {\\n        result[2] = \").concat(getc, \";\\n        if(\").concat(nextColumn, \") {\\n          result[3] = \").concat(getc, \";\\n        }\\n      }\\n      setOutput(result);\\n    }\\n    \");\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env } from '@tensorflow/tfjs-core';\nimport { transposeImplCPU } from '../kernel_utils/shared';\nimport { TransposeProgram } from '../transpose_gpu';\nimport { TransposePackedProgram } from '../transpose_packed_gpu';\nexport function transposeImpl(x, perm, backend) {\n  var program = env().getBool('WEBGL_PACK_ARRAY_OPERATIONS') ? new TransposePackedProgram(x.shape, perm) : new TransposeProgram(x.shape, perm);\n  return backend.runWebGLProgram(program, [x], x.dtype);\n}\nexport { transposeImplCPU };","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Sum } from '@tensorflow/tfjs-core';\nimport { sumImpl } from './Sum_impl';\nexport function sum(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  var axis = attrs.axis,\n      keepDims = attrs.keepDims;\n  return sumImpl(x, axis, keepDims, backend);\n}\nexport var sumConfig = {\n  kernelName: Sum,\n  backendName: 'webgl',\n  kernelFunc: sum\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, sumOutType, util } from '@tensorflow/tfjs-core';\nimport { reduce } from '../kernel_utils/reduce';\nimport { reshape } from './Reshape';\nimport { transposeImpl } from './Transpose_impl';\nexport function sumImpl(x, axis, keepDims, backend) {\n  var reductionIndices = axis;\n  var xRank = x.shape.length;\n  var origAxes = util.parseAxisParam(reductionIndices, x.shape);\n  var axes = origAxes;\n  var permutedAxes = backend_util.getAxesPermutation(axes, xRank);\n  var sumInputIsTransposed = permutedAxes != null;\n  var sumInput = x;\n\n  if (sumInputIsTransposed) {\n    sumInput = transposeImpl(x, permutedAxes, backend);\n    axes = backend_util.getInnerMostAxes(axes.length, xRank);\n  }\n\n  backend_util.assertAxesAreInnerMostDims('sum', axes, xRank);\n\n  var _backend_util$compute = backend_util.computeOutAndReduceShapes(sumInput.shape, axes),\n      _backend_util$compute2 = _slicedToArray(_backend_util$compute, 2),\n      sumOutShape = _backend_util$compute2[0],\n      reduceShape = _backend_util$compute2[1];\n\n  var outShape = sumOutShape;\n\n  if (keepDims) {\n    // rather than reshape at the end, set the target shape here.\n    outShape = backend_util.expandShapeToKeepDim(sumOutShape, origAxes);\n  }\n\n  var inSize = util.sizeFromShape(reduceShape);\n  var xSize = util.sizeFromShape(x.shape);\n  var batchSize = xSize / inSize;\n  var reshapedInput = reshape({\n    inputs: {\n      x: sumInput\n    },\n    attrs: {\n      shape: [batchSize, inSize]\n    },\n    backend: backend\n  });\n  var outType = sumOutType(x.dtype);\n  var reduced = reduce(reshapedInput, outType, 'sum', backend);\n  var out = reshape({\n    inputs: {\n      x: reduced\n    },\n    attrs: {\n      shape: outShape\n    },\n    backend: backend\n  });\n  backend.disposeIntermediateTensorInfo(reshapedInput);\n  backend.disposeIntermediateTensorInfo(reduced);\n\n  if (sumInputIsTransposed) {\n    backend.disposeIntermediateTensorInfo(sumInput);\n  }\n\n  return out;\n}","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Transpose } from '@tensorflow/tfjs-core';\nimport { transposeImpl } from './Transpose_impl';\nimport { transposeImplCPU as cpuTranspose } from './Transpose_impl';\nexport function transpose(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  var perm = attrs.perm;\n  var webglBackend = backend;\n  var xRank = x.shape.length;\n  var newShape = new Array(xRank);\n\n  for (var i = 0; i < newShape.length; i++) {\n    newShape[i] = x.shape[perm[i]];\n  }\n\n  var out;\n\n  if (webglBackend.shouldExecuteOnCPU([x])) {\n    var xTexData = webglBackend.texData.get(x.dataId);\n    var values = xTexData.values;\n    var outValues = cpuTranspose(values, x.shape, x.dtype, perm, newShape);\n    out = webglBackend.makeTensorInfo(newShape, x.dtype);\n    var outData = webglBackend.texData.get(out.dataId);\n    outData.values = outValues;\n  } else {\n    out = transposeImpl(x, perm, webglBackend);\n  }\n\n  return out;\n}\nexport var transposeConfig = {\n  kernelName: Transpose,\n  backendName: 'webgl',\n  kernelFunc: transpose\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { upcastType, util } from '@tensorflow/tfjs-core';\nimport { mapActivationToShaderProgram } from '../kernel_utils/kernel_funcs_utils';\nimport { MatMulPackedProgram } from '../mulmat_packed_gpu';\nimport { multiply } from './Multiply';\nimport { reshape } from './Reshape';\nimport { sum } from './Sum';\nimport { transpose } from './Transpose'; // Empirically determined minimal shared dimension in matmul before we forward\n// to a.mul(b).sum() in order to take advantage of GPU parallelism. See\n// https://github.com/tensorflow/tfjs-core/pull/1379 for benchmarks.\n\nexport var MATMUL_SHARED_DIM_THRESHOLD = 1000;\nexport function batchMatMulImpl(_ref) {\n  var a = _ref.a,\n      b = _ref.b,\n      transposeA = _ref.transposeA,\n      transposeB = _ref.transposeB,\n      backend = _ref.backend,\n      _ref$bias = _ref.bias,\n      bias = _ref$bias === void 0 ? null : _ref$bias,\n      _ref$preluActivationW = _ref.preluActivationWeights,\n      preluActivationWeights = _ref$preluActivationW === void 0 ? null : _ref$preluActivationW,\n      _ref$leakyreluAlpha = _ref.leakyreluAlpha,\n      leakyreluAlpha = _ref$leakyreluAlpha === void 0 ? 0 : _ref$leakyreluAlpha,\n      _ref$activation = _ref.activation,\n      activation = _ref$activation === void 0 ? null : _ref$activation;\n  var aRank = a.shape.length;\n  var bRank = b.shape.length;\n  var innerShapeA = transposeA ? a.shape[aRank - 2] : a.shape[aRank - 1];\n  var innerShapeB = transposeB ? b.shape[bRank - 1] : b.shape[bRank - 2];\n  var outerShapeA = transposeA ? a.shape[aRank - 1] : a.shape[aRank - 2];\n  var outerShapeB = transposeB ? b.shape[bRank - 2] : b.shape[bRank - 1];\n  var outerDimsA = a.shape.slice(0, -2);\n  var outerDimsB = b.shape.slice(0, -2);\n  var batchDimA = util.sizeFromShape(outerDimsA);\n  var batchDimB = util.sizeFromShape(outerDimsB);\n  var batchDimsCompatible = batchDimA === batchDimB || batchDimA === 1 || batchDimB === 1;\n  util.assert(aRank >= 2 && bRank >= 2 && batchDimsCompatible, function () {\n    return \"Error in matMul: the input batch dimensions must either be the \" + \"same or at least one input batch dimension must be 1. Got input \" + \"batch dimensions of (\".concat(outerDimsA, \") and (\").concat(outerDimsB, \").\");\n  });\n  var outShapeOuterDims = batchDimA > batchDimB ? a.shape.slice(0, -2) : b.shape.slice(0, -2);\n  var outShape = outShapeOuterDims.concat([outerShapeA, outerShapeB]);\n  util.assert(innerShapeA === innerShapeB, function () {\n    return \"Error in matMul: inner shapes (\".concat(innerShapeA, \") and (\") + \"\".concat(innerShapeB, \") of Tensors with shapes \").concat(a.shape, \" and \") + \"\".concat(b.shape, \" and transposeA=\").concat(transposeA) + \" and transposeB=\".concat(transposeB, \" must match.\");\n  });\n  var a3dShape = transposeA ? [batchDimA, innerShapeA, outerShapeA] : [batchDimA, outerShapeA, innerShapeA];\n  var b3dShape = transposeB ? [batchDimB, outerShapeB, innerShapeB] : [batchDimB, innerShapeB, outerShapeB]; // The rest of the implementation is designed to operate on rank-3 tensors\n\n  var a3d = reshape({\n    inputs: {\n      x: a\n    },\n    backend: backend,\n    attrs: {\n      shape: a3dShape\n    }\n  });\n  var b3d = reshape({\n    inputs: {\n      x: b\n    },\n    backend: backend,\n    attrs: {\n      shape: b3dShape\n    }\n  });\n  var intermediates = [a3d, b3d];\n  var batchDim = Math.max(batchDimA, batchDimB);\n  var sharedDim = transposeA ? a3d.shape[1] : a3d.shape[2];\n  var hasBias = bias != null;\n  var hasPreluActivationWeights = preluActivationWeights != null;\n  var hasLeakyreluAlpha = activation === 'leakyrelu';\n  var fusedActivation = activation != null ? mapActivationToShaderProgram(activation, true) : null;\n  var containsFusedOps = hasBias || hasPreluActivationWeights || hasLeakyreluAlpha || fusedActivation != null;\n  var out; // Since the matrices are vectors, it is faster to call mul().sum()\n  // because sum() is O(sqrt(N)) due to divide-and-conquer.\n\n  if ((outerShapeA === 1 || outerShapeB === 1) && sharedDim > MATMUL_SHARED_DIM_THRESHOLD && containsFusedOps === false) {\n    var aVec = a3d;\n    var bVec = b3d;\n\n    if (transposeA) {\n      aVec = transpose({\n        inputs: {\n          x: a3d\n        },\n        backend: backend,\n        attrs: {\n          perm: [0, 2, 1]\n        }\n      });\n      intermediates.push(aVec);\n    }\n\n    if (transposeB) {\n      bVec = transpose({\n        inputs: {\n          x: b3d\n        },\n        backend: backend,\n        attrs: {\n          perm: [0, 2, 1]\n        }\n      });\n      intermediates.push(bVec);\n    }\n\n    var shouldReshapeA = outerShapeB !== 1;\n    var shouldReshapeB = outerShapeB === 1;\n    var aVec3d = aVec;\n\n    if (shouldReshapeA) {\n      aVec3d = reshape({\n        inputs: {\n          x: aVec\n        },\n        backend: backend,\n        attrs: {\n          shape: [batchDim, sharedDim, 1]\n        }\n      });\n      intermediates.push(aVec3d);\n    }\n\n    var axis = outerShapeB === 1 ? 2 : 1;\n    var bVec3d = bVec;\n\n    if (shouldReshapeB) {\n      bVec3d = reshape({\n        inputs: {\n          x: bVec\n        },\n        backend: backend,\n        attrs: {\n          shape: [batchDim, 1, sharedDim]\n        }\n      });\n      intermediates.push(bVec3d);\n    }\n\n    var product = multiply({\n      inputs: {\n        a: aVec3d,\n        b: bVec3d\n      },\n      backend: backend\n    });\n    out = sum({\n      inputs: {\n        x: product\n      },\n      backend: backend,\n      attrs: {\n        axis: axis,\n        keepDims: true\n      }\n    });\n    intermediates.push(product);\n  } else {\n    var dtype = upcastType(a.dtype, b.dtype);\n    var program = new MatMulPackedProgram(a3dShape, b3dShape, [batchDim, outerShapeA, outerShapeB], transposeA, transposeB, hasBias, fusedActivation, hasPreluActivationWeights, hasLeakyreluAlpha);\n    var inputs = [a3d, b3d];\n\n    if (bias != null) {\n      inputs.push(bias);\n    }\n\n    if (hasPreluActivationWeights) {\n      inputs.push(preluActivationWeights);\n    }\n\n    if (hasLeakyreluAlpha) {\n      var $leakyreluAlpha = backend.makeTensorInfo([], 'float32', util.createScalarValue(leakyreluAlpha, 'float32'));\n      inputs.push($leakyreluAlpha);\n      intermediates.push($leakyreluAlpha);\n    }\n\n    out = backend.runWebGLProgram(program, inputs, dtype);\n  }\n\n  var outReshaped = reshape({\n    inputs: {\n      x: out\n    },\n    backend: backend,\n    attrs: {\n      shape: outShape\n    }\n  });\n  intermediates.push(out);\n\n  for (var _i = 0, _intermediates = intermediates; _i < _intermediates.length; _i++) {\n    var i = _intermediates[_i];\n    backend.disposeIntermediateTensorInfo(i);\n  }\n\n  return outReshaped;\n}","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { _FusedMatMul } from '@tensorflow/tfjs-core';\nimport { batchMatMulImpl } from './BatchMatMul_impl';\nexport function _fusedMatMul(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var a = inputs.a,\n      b = inputs.b,\n      bias = inputs.bias,\n      preluActivationWeights = inputs.preluActivationWeights;\n  var transposeA = attrs.transposeA,\n      transposeB = attrs.transposeB,\n      activation = attrs.activation,\n      leakyreluAlpha = attrs.leakyreluAlpha;\n  return batchMatMulImpl({\n    a: a,\n    b: b,\n    transposeA: transposeA,\n    transposeB: transposeB,\n    backend: backend,\n    bias: bias,\n    preluActivationWeights: preluActivationWeights,\n    leakyreluAlpha: leakyreluAlpha,\n    activation: activation\n  });\n}\nexport var _fusedMatMulConfig = {\n  kernelName: _FusedMatMul,\n  backendName: 'webgl',\n  kernelFunc: _fusedMatMul\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Abs, env } from '@tensorflow/tfjs-core';\nimport { simpleAbsImplCPU } from '../kernel_utils/shared';\nimport { UnaryOpProgram } from '../unaryop_gpu';\nimport { UnaryOpPackedProgram } from '../unaryop_packed_gpu';\nvar ABS = \"return abs(x);\";\nexport function abs(args) {\n  var inputs = args.inputs,\n      backend = args.backend;\n  var x = inputs.x; // TODO: handle cases when x is complex. Once the cpu implementation\n  // can handle complex values, refactor to use unaryKernelFunc.\n\n  if (backend.shouldExecuteOnCPU([x]) && x.dtype !== 'complex64') {\n    var xData = backend.texData.get(x.dataId);\n    var outValues = simpleAbsImplCPU(xData.values);\n    return backend.makeTensorInfo(x.shape, x.dtype, outValues);\n  }\n\n  var program;\n\n  if (env().getBool('WEBGL_PACK_UNARY_OPERATIONS')) {\n    program = new UnaryOpPackedProgram(x.shape, ABS);\n  } else {\n    program = new UnaryOpProgram(x.shape, ABS);\n  }\n\n  return backend.runWebGLProgram(program, [x], x.dtype);\n}\nexport var absConfig = {\n  kernelName: Abs,\n  backendName: 'webgl',\n  kernelFunc: abs\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Acos } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { CHECK_NAN_SNIPPET } from '../unaryop_gpu';\nvar ACOS = CHECK_NAN_SNIPPET + \"\\n  if (abs(x) > 1.) {\\n    return NAN;\\n  }\\n  return acos(x);\\n\";\nexport var acos = unaryKernelFunc({\n  opSnippet: ACOS\n});\nexport var acosConfig = {\n  kernelName: Acos,\n  backendName: 'webgl',\n  kernelFunc: acos\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Acosh } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { CHECK_NAN_SNIPPET } from '../unaryop_gpu';\nvar ACOSH = CHECK_NAN_SNIPPET + \"\\n  if (x < 1.0) return NAN;\\nreturn log(x + sqrt(x * x - 1.0));\";\nexport var acosh = unaryKernelFunc({\n  opSnippet: ACOSH\n});\nexport var acoshConfig = {\n  kernelName: Acosh,\n  backendName: 'webgl',\n  kernelFunc: acosh\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Add } from '@tensorflow/tfjs-core';\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { addImplCPU as cpuAdd } from '../kernel_utils/shared';\nvar ADD = 'return a + b;';\nexport var addKernelFunc = binaryKernelFunc({\n  opSnippet: ADD,\n  packedOpSnippet: ADD,\n  supportsComplex: true,\n  cpuKernelImpl: cpuAdd\n});\nexport var addConfig = {\n  kernelName: Add,\n  backendName: 'webgl',\n  kernelFunc: addKernelFunc\n};","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var AddNProgram = function AddNProgram(outputShape, shapes) {\n  _classCallCheck(this, AddNProgram);\n\n  this.outputShape = [];\n  this.outputShape = outputShape;\n  this.variableNames = shapes.map(function (_, i) {\n    return \"T\".concat(i);\n  });\n  var snippets = []; // Get target elements from every input tensor.\n\n  this.variableNames.forEach(function (variable) {\n    snippets.push(\"float v\".concat(variable, \" = get\").concat(variable, \"AtOutCoords();\"));\n  }); // Calculate the sum of all elements.\n\n  var operation = this.variableNames.map(function (variable) {\n    return \"v\".concat(variable);\n  }).join(' + ');\n  this.userCode = \"\\n      void main() {\\n        \".concat(snippets.join('\\n        '), \"\\n\\n        float result = \").concat(operation, \";\\n        setOutput(result);\\n      }\\n    \");\n};","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var AddNPackedProgram = function AddNPackedProgram(outputShape, shapes) {\n  _classCallCheck(this, AddNPackedProgram);\n\n  this.outputShape = [];\n  this.packedInputs = true;\n  this.packedOutput = true;\n  this.outputShape = outputShape;\n  this.variableNames = shapes.map(function (_, i) {\n    return \"T\".concat(i);\n  });\n  var snippets = []; // Get target elements from every input tensor.\n\n  this.variableNames.forEach(function (variable) {\n    snippets.push(\"vec4 v\".concat(variable, \" = get\").concat(variable, \"AtOutCoords();\"));\n  }); // Calculate the sum of all elements.\n\n  var operation = this.variableNames.map(function (variable) {\n    return \"v\".concat(variable);\n  }).join(' + ');\n  this.userCode = \"\\n      void main() {\\n        \".concat(snippets.join('\\n        '), \"\\n\\n        vec4 result = \").concat(operation, \";\\n        setOutput(result);\\n      }\\n    \");\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { AddN, env, upcastType } from '@tensorflow/tfjs-core';\nimport { AddNProgram } from '../addn_gpu';\nimport { AddNPackedProgram } from '../addn_packed_gpu';\nimport { identity } from './Identity';\nexport function addN(args) {\n  var inputs = args.inputs,\n      backend = args.backend;\n  var tensors = inputs;\n\n  if (tensors.length === 1) {\n    return identity({\n      inputs: {\n        x: tensors[0]\n      },\n      backend: backend\n    });\n  } // Limit the number of uploaded textures for optimization.\n\n\n  if (tensors.length > env().get('WEBGL_MAX_TEXTURES_IN_SHADER')) {\n    var midIndex = Math.floor(tensors.length / 2);\n    var leftSide = addN({\n      inputs: tensors.slice(0, midIndex),\n      backend: backend\n    });\n    var rightSide = addN({\n      inputs: tensors.slice(midIndex),\n      backend: backend\n    });\n    return addN({\n      inputs: [leftSide, rightSide],\n      backend: backend\n    });\n  }\n\n  var dtype = tensors.map(function (t) {\n    return t.dtype;\n  }).reduce(function (d1, d2) {\n    return upcastType(d1, d2);\n  });\n  var shapes = tensors.map(function (t) {\n    return t.shape;\n  }); // We can make sure shapes are identical in op level.\n\n  var usePackedOp = env().getBool('WEBGL_PACK');\n  var program = usePackedOp ? new AddNPackedProgram(tensors[0].shape, shapes) : new AddNProgram(tensors[0].shape, shapes);\n  return backend.runWebGLProgram(program, tensors, dtype);\n}\nexport var addNConfig = {\n  kernelName: AddN,\n  backendName: 'webgl',\n  kernelFunc: addN\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { All, backend_util, util } from '@tensorflow/tfjs-core';\nimport { reduce } from '../kernel_utils/reduce';\nimport { reshape } from './Reshape';\nimport { transpose } from './Transpose';\nexport function all(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  var axis = attrs.axis,\n      keepDims = attrs.keepDims;\n  var xRank = x.shape.length;\n  var origAxes = util.parseAxisParam(axis, x.shape);\n  var axes = origAxes;\n  var permutedAxes = backend_util.getAxesPermutation(axes, xRank);\n  var permutedX = x;\n\n  if (permutedAxes != null) {\n    permutedX = transpose({\n      inputs: {\n        x: x\n      },\n      backend: backend,\n      attrs: {\n        perm: permutedAxes\n      }\n    });\n    axes = backend_util.getInnerMostAxes(axes.length, xRank);\n  }\n\n  backend_util.assertAxesAreInnerMostDims('all', axes, xRank);\n\n  var _backend_util$compute = backend_util.computeOutAndReduceShapes(permutedX.shape, axes),\n      _backend_util$compute2 = _slicedToArray(_backend_util$compute, 2),\n      outShape = _backend_util$compute2[0],\n      reduceShape = _backend_util$compute2[1];\n\n  var inSize = util.sizeFromShape(reduceShape);\n  var a2D = reshape({\n    inputs: {\n      x: permutedX\n    },\n    backend: backend,\n    attrs: {\n      shape: [-1, inSize]\n    }\n  });\n  var reduced = reduce(a2D, a2D.dtype, 'all', backend);\n  var res;\n\n  if (keepDims) {\n    var newShape = backend_util.expandShapeToKeepDim(outShape, origAxes);\n    res = reshape({\n      inputs: {\n        x: reduced\n      },\n      backend: backend,\n      attrs: {\n        shape: newShape\n      }\n    });\n  } else {\n    res = reshape({\n      inputs: {\n        x: reduced\n      },\n      backend: backend,\n      attrs: {\n        shape: outShape\n      }\n    });\n  }\n\n  backend.disposeIntermediateTensorInfo(a2D);\n  backend.disposeIntermediateTensorInfo(reduced);\n\n  if (permutedAxes != null) {\n    backend.disposeIntermediateTensorInfo(permutedX);\n  }\n\n  return res;\n}\nexport var allConfig = {\n  kernelName: All,\n  backendName: 'webgl',\n  kernelFunc: all\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Any, backend_util, util } from '@tensorflow/tfjs-core';\nimport { reduce } from '../kernel_utils/reduce';\nimport { reshape } from './Reshape';\nimport { transpose } from './Transpose';\nexport function any(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  var axis = attrs.axis,\n      keepDims = attrs.keepDims;\n  var xRank = x.shape.length;\n  var origAxes = util.parseAxisParam(axis, x.shape);\n  var axes = origAxes;\n  var permutedAxes = backend_util.getAxesPermutation(axes, xRank);\n  var permutedX = x;\n\n  if (permutedAxes != null) {\n    permutedX = transpose({\n      inputs: {\n        x: x\n      },\n      backend: backend,\n      attrs: {\n        perm: permutedAxes\n      }\n    });\n    axes = backend_util.getInnerMostAxes(axes.length, xRank);\n  }\n\n  backend_util.assertAxesAreInnerMostDims('any', axes, xRank);\n\n  var _backend_util$compute = backend_util.computeOutAndReduceShapes(permutedX.shape, axes),\n      _backend_util$compute2 = _slicedToArray(_backend_util$compute, 2),\n      outShape = _backend_util$compute2[0],\n      reduceShape = _backend_util$compute2[1];\n\n  var inSize = util.sizeFromShape(reduceShape);\n  var a2D = reshape({\n    inputs: {\n      x: permutedX\n    },\n    backend: backend,\n    attrs: {\n      shape: [-1, inSize]\n    }\n  });\n  var reduced = reduce(a2D, a2D.dtype, 'any', backend);\n  var res;\n\n  if (keepDims) {\n    var newShape = backend_util.expandShapeToKeepDim(outShape, origAxes);\n    res = reshape({\n      inputs: {\n        x: reduced\n      },\n      backend: backend,\n      attrs: {\n        shape: newShape\n      }\n    });\n  } else {\n    res = reshape({\n      inputs: {\n        x: reduced\n      },\n      backend: backend,\n      attrs: {\n        shape: outShape\n      }\n    });\n  }\n\n  backend.disposeIntermediateTensorInfo(a2D);\n  backend.disposeIntermediateTensorInfo(reduced);\n\n  if (permutedAxes != null) {\n    backend.disposeIntermediateTensorInfo(permutedX);\n  }\n\n  return res;\n}\nexport var anyConfig = {\n  kernelName: Any,\n  backendName: 'webgl',\n  kernelFunc: any\n};","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var ArgMinMaxProgram = function ArgMinMaxProgram(reduceInfo, op, firstPass) {\n  _classCallCheck(this, ArgMinMaxProgram);\n\n  this.variableNames = ['A'];\n  var windowSize = reduceInfo.windowSize,\n      batchSize = reduceInfo.batchSize,\n      outSize = reduceInfo.outSize;\n\n  if (!firstPass) {\n    this.variableNames.push('bestIndicesA');\n  }\n\n  this.outputShape = [batchSize, outSize];\n  var compOp = op === 'max' ? '>' : '<';\n  var indexSnippet = firstPass ? 'inOffset + i;' : 'round(getBestIndicesA(batch, inOffset + i));';\n  this.userCode = \"\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int outIdx = coords[1];\\n        int inOffset = outIdx * \".concat(windowSize, \";\\n\\n        int bestIndex = inOffset;\\n        float bestValue = getA(batch, bestIndex);\\n\\n        for (int i = 0; i < \").concat(windowSize, \"; i++) {\\n          int inIdx = \").concat(indexSnippet, \";\\n          float candidate = getA(batch, inIdx);\\n          if (candidate \").concat(compOp, \" bestValue) {\\n            bestValue = candidate;\\n            bestIndex = inIdx;\\n          }\\n        }\\n        setOutput(float(bestIndex));\\n      }\\n    \");\n};","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\nimport { getChannels } from './packing_util';\nimport { getCoordsDataType } from './shader_compiler';\nexport var ArgMinMaxPackedProgram = function ArgMinMaxPackedProgram(shape, windowSize, op, firstPass) {\n  _classCallCheck(this, ArgMinMaxPackedProgram);\n\n  this.variableNames = ['A'];\n  this.packedInputs = true;\n  this.packedOutput = true;\n  util.assert(shape.length > 2, function () {\n    return \"Packed arg\".concat(op.charAt(0).toUpperCase() + op.slice(1), \" supports only inputs with rank above 2.\");\n  });\n  var inSize = shape[shape.length - 1];\n  var outSize = Math.ceil(inSize / windowSize);\n  this.outputShape = shape.slice(0, -1);\n\n  if (outSize > 1) {\n    this.outputShape.push(outSize);\n  }\n\n  if (!firstPass) {\n    this.variableNames.push('bestIndicesA');\n  }\n\n  var outShape = this.outputShape;\n  var rank = outShape.length;\n  var dtype = getCoordsDataType(rank);\n  var coords = getChannels('coords', rank);\n  var sourceLocSetup;\n  var sourceRank;\n\n  if (outSize === 1) {\n    sourceRank = rank + 1;\n    var sourceLocDType = getCoordsDataType(sourceRank);\n    sourceLocSetup = \"\\n        \".concat(sourceLocDType, \" sourceLocR = \").concat(sourceLocDType, \"(\").concat(coords.join(), \", 0);\\n        ++\").concat(coords[rank - 1], \";\\n        \").concat(sourceLocDType, \" sourceLocG = \").concat(sourceLocDType, \"(\").concat(coords.join(), \", 0);\\n        ++\").concat(coords[rank - 2], \";\\n        \").concat(sourceLocDType, \" sourceLocA = \").concat(sourceLocDType, \"(\").concat(coords.join(), \", 0);\\n        --\").concat(coords[rank - 1], \";\\n        \").concat(sourceLocDType, \" sourceLocB = \").concat(sourceLocDType, \"(\").concat(coords.join(), \", 0);\\n        --\").concat(coords[rank - 2], \";\");\n  } else {\n    sourceRank = rank;\n    sourceLocSetup = \"\\n        \".concat(dtype, \" sourceLocR = coords;\\n        ++\").concat(coords[rank - 1], \";\\n        \").concat(dtype, \" sourceLocG = coords;\\n        ++\").concat(coords[rank - 2], \";\\n        \").concat(dtype, \" sourceLocA = coords;\\n        --\").concat(coords[rank - 1], \";\\n        \").concat(dtype, \" sourceLocB = coords;\\n        --\").concat(coords[rank - 2], \";\");\n  }\n\n  var channels = ['x', 'y', 'z', 'w', 'u', 'v'].slice(0, sourceRank);\n  var inChannel = '.' + channels[sourceRank - 1]; // e.g. \".b\" for rank 3.\n\n  var intChannels = channels.map(function (x) {\n    return 'int ' + x;\n  });\n  var srcRCoords = getChannels('sourceLocR', sourceRank - 1).concat('inIdx.r');\n  var srcGCoords = getChannels('sourceLocG', sourceRank - 1).concat('inIdx.g');\n  var srcBCoords = getChannels('sourceLocB', sourceRank - 1).concat('inIdx.b');\n  var srcACoords = getChannels('sourceLocA', sourceRank - 1).concat('inIdx.a');\n  var compOp = op === 'max' ? 'greaterThan' : 'lessThan';\n  var fetchCandidateIdx = firstPass ? '' : \"\\n          inIdx = round(vec4(getBestIndicesAChannel(\".concat(srcRCoords.join(), \"),\\n                             getBestIndicesAChannel(\").concat(srcGCoords.join(), \"),\\n                             getBestIndicesAChannel(\").concat(srcBCoords.join(), \"),\\n                             getBestIndicesAChannel(\").concat(srcACoords.join(), \")));\");\n  var fetchValue = \"vec4(\\n            getAChannel(\".concat(srcRCoords.join(), \"),\\n            hasNextCol ? getAChannel(\").concat(srcGCoords.join(), \") : 0.,\\n            hasNextRow ? getAChannel(\").concat(srcBCoords.join(), \") : 0.,\\n            hasNextRow && hasNextCol ? getAChannel(\").concat(srcACoords.join(), \") : 0.)\");\n  var getBestIndicesAChannelSnippet = firstPass ? '' : \"\\n      float getBestIndicesAChannel(\".concat(intChannels.join(), \") {\\n        return getChannel(getBestIndicesA(\").concat(channels.join(), \"),\\n                                          vec2(\").concat(channels.slice(-2).join(), \"));\\n      }\");\n  this.userCode = \"\\n      float getAChannel(\".concat(intChannels.join(), \") {\\n        return getChannel(getA(\").concat(channels.join(), \"),\\n                               vec2(\").concat(channels.slice(-2).join(), \"));\\n      }\\n      \").concat(getBestIndicesAChannelSnippet, \"\\n      void main() {\\n        \").concat(dtype, \" coords = getOutputCoords();\\n        bool hasNextCol = \").concat(coords[rank - 1], \" < \").concat(outShape[rank - 1] - 1, \";\\n        bool hasNextRow = \").concat(coords[rank - 2], \" < \").concat(outShape[rank - 2] - 1, \";\\n        \").concat(sourceLocSetup, \"\\n        ivec4 srcIdx = ivec4(sourceLocR\").concat(inChannel, \", sourceLocG\").concat(inChannel, \",\\n          sourceLocB\").concat(inChannel, \", sourceLocA\").concat(inChannel, \") * \").concat(windowSize, \";\\n        ivec4 inIdx = srcIdx;\\n        vec4 bestIndex = vec4(inIdx);\\n        vec4 bestValue = \").concat(fetchValue, \";\\n\\n        for (int i = 0; i < \").concat(windowSize, \"; i++) {\\n          inIdx = srcIdx;\\n          \").concat(fetchCandidateIdx, \"\\n          vec4 candidate = \").concat(fetchValue, \";\\n          bvec4 nan = isnan(candidate);\\n          bvec4 replace = bvec4(\\n            vec4(\").concat(compOp, \"(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\\n\\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\\n                           replace.y  ? candidate.y : bestValue.y,\\n                           replace.z  ? candidate.z : bestValue.z,\\n                           replace.w  ? candidate.w : bestValue.w);\\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\\n          srcIdx++;\\n        }\\n        setOutput(bestIndex);\\n      }\\n    \");\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, env, util } from '@tensorflow/tfjs-core';\nimport { ArgMinMaxProgram } from '../argminmax_gpu';\nimport { ArgMinMaxPackedProgram } from '../argminmax_packed_gpu';\nimport { reshape } from '../kernels/Reshape';\n\nfunction argReduce(backend, x, reduceType) {\n  var bestIndicesA = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  var batchSize = x.shape[0];\n  var inSize = x.shape[1];\n\n  if (bestIndicesA != null) {\n    batchSize = bestIndicesA.shape[0];\n    inSize = bestIndicesA.shape[1];\n  }\n\n  var windowSize = backend_util.computeOptimalWindowSize(inSize);\n  var reduceInfo = {\n    windowSize: windowSize,\n    inSize: inSize,\n    batchSize: batchSize,\n    outSize: Math.ceil(inSize / windowSize)\n  };\n  var program = new ArgMinMaxProgram(reduceInfo, reduceType, bestIndicesA == null);\n  var inputs = [x];\n\n  if (bestIndicesA != null) {\n    inputs.push(bestIndicesA);\n  }\n\n  var output = backend.runWebGLProgram(program, inputs, 'int32'); // No need to run another GPGPU program.\n\n  if (output.shape[1] === 1) {\n    return output;\n  }\n\n  var result = argReduce(backend, x, reduceType, output);\n  backend.disposeIntermediateTensorInfo(output);\n  return result;\n}\n\nfunction argReducePacked(backend, x, reduceType) {\n  var bestIndicesA = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  var inShape = bestIndicesA != null ? bestIndicesA.shape : x.shape;\n  var inSize = inShape[inShape.length - 1];\n  var windowSize = backend_util.computeOptimalWindowSize(inSize);\n  var program = new ArgMinMaxPackedProgram(inShape, windowSize, reduceType, bestIndicesA == null);\n  var inputs = bestIndicesA == null ? [x] : [x, bestIndicesA];\n  var output = backend.runWebGLProgram(program, inputs, 'int32');\n\n  if (output.shape.length === x.shape.length) {\n    var result = argReducePacked(backend, x, reduceType, output);\n    backend.disposeIntermediateTensorInfo(output);\n    return result;\n  }\n\n  return output;\n}\n\nexport function argMinMaxReduce(backend, x, axis, reduceType) {\n  var axes = [axis];\n  backend_util.assertAxesAreInnerMostDims('arg' + reduceType.charAt(0).toUpperCase() + reduceType.slice(1), axes, x.shape.length);\n\n  if (!env().getBool('WEBGL_PACK_REDUCE') || x.shape.length <= 2) {\n    var intermediateTensorInfos = [];\n\n    var _backend_util$compute = backend_util.computeOutAndReduceShapes(x.shape, axes),\n        _backend_util$compute2 = _slicedToArray(_backend_util$compute, 2),\n        outShape = _backend_util$compute2[0],\n        reduceShape = _backend_util$compute2[1];\n\n    var inSize = util.sizeFromShape(reduceShape);\n    var a2D = reshape({\n      inputs: {\n        x: x\n      },\n      backend: backend,\n      attrs: {\n        shape: [-1, inSize]\n      }\n    });\n    intermediateTensorInfos.push(a2D);\n    var reduced = argReduce(backend, a2D, reduceType);\n    intermediateTensorInfos.push(reduced);\n    var reshaped = reshape({\n      inputs: {\n        x: reduced\n      },\n      backend: backend,\n      attrs: {\n        shape: outShape\n      }\n    });\n    intermediateTensorInfos.forEach(function (t) {\n      return backend.disposeIntermediateTensorInfo(t);\n    });\n    return reshaped;\n  }\n\n  return argReducePacked(backend, x, reduceType);\n}","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ArgMax, backend_util, util } from '@tensorflow/tfjs-core';\nimport { argMinMaxReduce } from '../kernel_utils/arg_min_max';\nimport { transpose } from './Transpose';\nexport function argMax(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  var axis = attrs.axis;\n  var axes = util.parseAxisParam(axis, x.shape);\n  var permutedAxes = backend_util.getAxesPermutation(axes, x.shape.length);\n  var $x = x;\n  var intermediateTensorInfos = [];\n\n  if (permutedAxes != null) {\n    $x = transpose({\n      inputs: {\n        x: x\n      },\n      backend: backend,\n      attrs: {\n        perm: permutedAxes\n      }\n    });\n    intermediateTensorInfos.push($x);\n    axes = backend_util.getInnerMostAxes(axes.length, $x.shape.length);\n  }\n\n  backend_util.assertAxesAreInnerMostDims('argMax', [axes[0]], $x.shape.length);\n  var out = argMinMaxReduce(backend, $x, axes[0], 'max');\n  intermediateTensorInfos.forEach(function (t) {\n    return backend.disposeIntermediateTensorInfo(t);\n  });\n  return out;\n}\nexport var argMaxConfig = {\n  kernelName: ArgMax,\n  backendName: 'webgl',\n  kernelFunc: argMax\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ArgMin, backend_util, util } from '@tensorflow/tfjs-core';\nimport { argMinMaxReduce } from '../kernel_utils/arg_min_max';\nimport { transpose } from './Transpose';\nexport function argMin(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  var axis = attrs.axis;\n  var axes = util.parseAxisParam(axis, x.shape);\n  var permutedAxes = backend_util.getAxesPermutation(axes, x.shape.length);\n  var $x = x;\n  var intermediateTensorInfos = [];\n\n  if (permutedAxes != null) {\n    $x = transpose({\n      inputs: {\n        x: x\n      },\n      backend: backend,\n      attrs: {\n        perm: permutedAxes\n      }\n    });\n    intermediateTensorInfos.push($x);\n    axes = backend_util.getInnerMostAxes(axes.length, $x.shape.length);\n  }\n\n  backend_util.assertAxesAreInnerMostDims('argMin', [axes[0]], $x.shape.length);\n  var out = argMinMaxReduce(backend, $x, axes[0], 'min');\n  intermediateTensorInfos.forEach(function (t) {\n    return backend.disposeIntermediateTensorInfo(t);\n  });\n  return out;\n}\nexport var argMinConfig = {\n  kernelName: ArgMin,\n  backendName: 'webgl',\n  kernelFunc: argMin\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Asin } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { CHECK_NAN_SNIPPET } from '../unaryop_gpu';\nvar ASIN = CHECK_NAN_SNIPPET + \"\\n  if (abs(x) > 1.) {\\n    return NAN;\\n  }\\n  return asin(x);\\n\";\nexport var asin = unaryKernelFunc({\n  opSnippet: ASIN\n});\nexport var asinConfig = {\n  kernelName: Asin,\n  backendName: 'webgl',\n  kernelFunc: asin\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Asinh } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { CHECK_NAN_SNIPPET } from '../unaryop_gpu';\nvar ASINH = CHECK_NAN_SNIPPET + \"return log(x + sqrt(x * x + 1.0));\";\nexport var asinh = unaryKernelFunc({\n  opSnippet: ASINH\n});\nexport var asinhConfig = {\n  kernelName: Asinh,\n  backendName: 'webgl',\n  kernelFunc: asinh\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Atan } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { CHECK_NAN_SNIPPET } from '../unaryop_gpu';\nvar ATAN = CHECK_NAN_SNIPPET + \"\\n  return atan(x);\\n\";\nexport var atan = unaryKernelFunc({\n  opSnippet: ATAN\n});\nexport var atanConfig = {\n  kernelName: Atan,\n  backendName: 'webgl',\n  kernelFunc: atan\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Atan2 } from '@tensorflow/tfjs-core';\nimport { binaryKernelFunc, CHECK_NAN_SNIPPET_BINARY, CHECK_NAN_SNIPPET_BINARY_PACKED } from '../kernel_utils/kernel_funcs_utils';\nvar ATAN2 = CHECK_NAN_SNIPPET_BINARY + \"\\n  return atan(a, b);\\n\";\nvar ATAN2_PACKED = \"\\n  vec4 result = atan(a, b);\\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\\n  \" + CHECK_NAN_SNIPPET_BINARY_PACKED + \"\\n  return result;\\n\";\nexport var atan2 = binaryKernelFunc({\n  opSnippet: ATAN2,\n  packedOpSnippet: ATAN2_PACKED\n});\nexport var atan2Config = {\n  kernelName: Atan2,\n  backendName: 'webgl',\n  kernelFunc: atan2\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Atanh } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { CHECK_NAN_SNIPPET } from '../unaryop_gpu';\nvar ATANH = CHECK_NAN_SNIPPET + \"\\n  if ((x < -1.0) || (x > 1.0)) return NAN;\\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;\";\nexport var atanh = unaryKernelFunc({\n  opSnippet: ATANH\n});\nexport var atanhConfig = {\n  kernelName: Atanh,\n  backendName: 'webgl',\n  kernelFunc: atanh\n};","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var Pool2DProgram = function Pool2DProgram(convInfo, poolType, computePositions) {\n  var flattenPositions = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var includeBatchInIndex = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n  _classCallCheck(this, Pool2DProgram);\n\n  this.variableNames = ['x'];\n\n  if (poolType === 'avg' && computePositions) {\n    throw new Error('Cannot compute positions for average pool.');\n  }\n\n  var filterWidth = convInfo.filterWidth;\n  var strideHeight = convInfo.strideHeight;\n  var strideWidth = convInfo.strideWidth;\n  var dilationHeight = convInfo.dilationHeight;\n  var dilationWidth = convInfo.dilationWidth;\n  var effectiveFilterHeight = convInfo.effectiveFilterHeight;\n  var effectiveFilterWidth = convInfo.effectiveFilterWidth;\n  var padTop = convInfo.padInfo.top;\n  var padLeft = convInfo.padInfo.left;\n  this.outputShape = convInfo.outShape;\n  var isAvgPool = poolType === 'avg';\n  var batchFlattenPositionStr = \"((batch  * \".concat(convInfo.inHeight, \" + xR) * \").concat(convInfo.inWidth, \" + xC) * \").concat(convInfo.inChannels, \" + d\");\n  var flattenPositionStr = \"(xR * \".concat(convInfo.inWidth, \" + xC) * \").concat(convInfo.inChannels, \" + d\");\n  var initializationValue = '0.0';\n\n  if (!isAvgPool) {\n    // WebGL on Firefox Linux can't compile 1/0 so we do 1/eps.\n    initializationValue = '-1.0 / 1e-20';\n  }\n\n  if (computePositions) {\n    var _compareOp = '>=';\n    this.userCode = \"\\n        const ivec2 strides = ivec2(\".concat(strideHeight, \", \").concat(strideWidth, \");\\n        const ivec2 pads = ivec2(\").concat(padTop, \", \").concat(padLeft, \");\\n\\n        void main() {\\n          ivec4 coords = getOutputCoords();\\n          int batch = coords[0];\\n          int d = coords[3];\\n\\n          ivec2 xRCCorner = coords.yz * strides - pads;\\n          int xRCorner = xRCCorner.x;\\n          int xCCorner = xRCCorner.y;\\n\\n          // max/min x(?, ?, d) to get y(yR, yC, d).\\n          // ? = to be determined\\n          float minMaxValue = 0.0;\\n          float minMaxValueFound = 0.0;\\n          int minMaxPosition = 0;\\n          float avgValue = 0.0;\\n\\n          for (int wR = 0; wR < \").concat(effectiveFilterHeight, \";\\n              wR += \").concat(dilationHeight, \") {\\n            int xR = xRCorner + wR;\\n\\n            if (xR < 0 || xR >= \").concat(convInfo.inHeight, \") {\\n              continue;\\n            }\\n\\n            for (int wC = 0; wC < \").concat(effectiveFilterWidth, \";\\n                wC += \").concat(dilationWidth, \") {\\n              int xC = xCCorner + wC;\\n\\n              if (xC < 0 || xC >= \").concat(convInfo.inWidth, \") {\\n                continue;\\n              }\\n\\n              float value = getX(batch, xR, xC, d);\\n\\n              // If a min / max value has already been found, use it. If not,\\n              // use the current value.\\n              float currMinMaxValue = mix(\\n                  value, minMaxValue, minMaxValueFound);\\n              if (value \").concat(_compareOp, \" currMinMaxValue) {\\n                minMaxValue = value;\\n                minMaxValueFound = 1.0;\\n                minMaxPosition = \").concat(flattenPositions ? includeBatchInIndex ? batchFlattenPositionStr : flattenPositionStr : \"wR * \".concat(effectiveFilterWidth, \" + wC\"), \";\\n              }\\n            }\\n          }\\n          setOutput(float(minMaxPosition));\\n        }\\n      \");\n    return;\n  }\n\n  var compareOp = 'max';\n  var returnValue = \"\".concat(poolType, \"(\").concat(poolType, \"(\").concat(poolType, \"(\") + 'minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])';\n\n  if (poolType === 'avg') {\n    returnValue = \"avgValue / count\";\n  }\n\n  var filterWidthNearestVec4 = Math.floor(filterWidth / 4) * 4;\n  var filterWidthVec4Remainder = filterWidth % 4;\n  var updateSnippet = \"\\n      if (\".concat(isAvgPool, \") {\\n        avgValue += dot(values, ones);\\n      } else {\\n        minMaxValue = \").concat(compareOp, \"(values, minMaxValue);\\n      }\\n    \");\n  this.userCode = \"\\n      const ivec2 strides = ivec2(\".concat(strideHeight, \", \").concat(strideWidth, \");\\n      const ivec2 pads = ivec2(\").concat(padTop, \", \").concat(padLeft, \");\\n      const float initializationValue = \").concat(initializationValue, \";\\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\\n\\n      float count = 0.0;\\n\\n      float getValue(int batch, int xR, int xC, int d) {\\n        if (xC < 0 || xC >= \").concat(convInfo.inWidth, \") {\\n          return initializationValue;\\n        }\\n        count += 1.0;\\n        return getX(batch, xR, xC, d);\\n      }\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int d = coords[3];\\n\\n        ivec2 xRCCorner = coords.yz * strides - pads;\\n        int xRCorner = xRCCorner.x;\\n        int xCCorner = xRCCorner.y;\\n\\n        // max/min x(?, ?, d) to get y(yR, yC, d).\\n        // ? = to be determined\\n        vec4 minMaxValue = vec4(\").concat(initializationValue, \");\\n        float avgValue = 0.0;\\n        count = 0.0;\\n\\n        for (int wR = 0; wR < \").concat(effectiveFilterHeight, \";\\n            wR += \").concat(dilationHeight, \") {\\n          int xR = xRCorner + wR;\\n\\n          if (xR < 0 || xR >= \").concat(convInfo.inHeight, \") {\\n            continue;\\n          }\\n\\n          for (int wC = 0; wC < \").concat(filterWidthNearestVec4, \"; wC += 4) {\\n            int xC = xCCorner + wC * \").concat(dilationWidth, \";\\n\\n            vec4 values = vec4(\\n              getValue(batch, xR, xC, d),\\n              getValue(batch, xR, xC + \").concat(dilationWidth, \", d),\\n              getValue(batch, xR, xC + 2 * \").concat(dilationWidth, \", d),\\n              getValue(batch, xR, xC + 3 * \").concat(dilationWidth, \", d)\\n            );\\n\\n            \").concat(updateSnippet, \"\\n          }\\n\\n          int xC = xCCorner + \").concat(filterWidthNearestVec4, \";\\n          if (\").concat(filterWidthVec4Remainder === 1, \") {\\n            vec4 values = vec4(\\n              getValue(batch, xR, xC, d),\\n              initializationValue,\\n              initializationValue,\\n              initializationValue\\n            );\\n\\n            \").concat(updateSnippet, \"\\n          } else if (\").concat(filterWidthVec4Remainder === 2, \") {\\n            vec4 values = vec4(\\n              getValue(batch, xR, xC, d),\\n              getValue(batch, xR, xC + \").concat(dilationWidth, \", d),\\n              initializationValue,\\n              initializationValue\\n            );\\n\\n            \").concat(updateSnippet, \"\\n          } else if (\").concat(filterWidthVec4Remainder === 3, \") {\\n            vec4 values = vec4(\\n              getValue(batch, xR, xC, d),\\n              getValue(batch, xR, xC + \").concat(dilationWidth, \", d),\\n              getValue(batch, xR, xC + 2 * \").concat(dilationWidth, \", d),\\n              initializationValue\\n            );\\n\\n            \").concat(updateSnippet, \"\\n          }\\n        }\\n        setOutput(\").concat(returnValue, \");\\n      }\\n    \");\n};\nexport var Pool3DProgram = function Pool3DProgram(convInfo, poolType, computePositions) {\n  var flattenPositions = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var includeBatchInIndex = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n  _classCallCheck(this, Pool3DProgram);\n\n  this.variableNames = ['x'];\n\n  if (poolType === 'avg' && computePositions) {\n    throw new Error('Cannot compute positions for average pool.');\n  }\n\n  var filterWidth = convInfo.filterWidth;\n  var strideDepth = convInfo.strideDepth;\n  var strideHeight = convInfo.strideHeight;\n  var strideWidth = convInfo.strideWidth;\n  var dilationDepth = convInfo.dilationDepth;\n  var dilationHeight = convInfo.dilationHeight;\n  var dilationWidth = convInfo.dilationWidth;\n  var effectiveFilterDepth = convInfo.effectiveFilterDepth;\n  var effectiveFilterHeight = convInfo.effectiveFilterHeight;\n  var effectiveFilterWidth = convInfo.effectiveFilterWidth;\n  var padFront = convInfo.padInfo.front;\n  var padTop = convInfo.padInfo.top;\n  var padLeft = convInfo.padInfo.left;\n  this.outputShape = convInfo.outShape;\n  var isAvgPool = poolType === 'avg';\n  var initializationValue = '0.0';\n\n  if (!isAvgPool) {\n    // WebGL on Firefox Linux can't compile 1/0 so we do 1/eps.\n    initializationValue = '-1.0 / 1e-20';\n  }\n\n  if (computePositions) {\n    var _compareOp2 = '>=';\n    this.userCode = \"\\n        const ivec3 strides =\\n            ivec3(\".concat(strideDepth, \", \").concat(strideHeight, \", \").concat(strideWidth, \");\\n        const ivec3 pads = ivec3(\").concat(padFront, \", \").concat(padTop, \", \").concat(padLeft, \");\\n\\n        void main() {\\n          ivec5 coords = getOutputCoords();\\n          int batch = coords.x;\\n          int ch = coords.u;\\n\\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\\n          int xDCorner = xCorner.x;\\n          int xRCorner = xCorner.y;\\n          int xCCorner = xCorner.z;\\n\\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\\n          // ? = to be determined\\n          float minMaxValue = 0.0;\\n          float minMaxValueFound = 0.0;\\n          int minMaxPosition = 0;\\n\\n          for (int wD = 0; wD < \").concat(effectiveFilterDepth, \";\\n              wD += \").concat(dilationDepth, \") {\\n            int xD = xDCorner + wD;\\n\\n            if (xD < 0 || xD >= \").concat(convInfo.inDepth, \") {\\n              continue;\\n            }\\n\\n            for (int wR = 0; wR < \").concat(effectiveFilterHeight, \";\\n                wR += \").concat(dilationHeight, \") {\\n              int xR = xRCorner + wR;\\n\\n              if (xR < 0 || xR >= \").concat(convInfo.inHeight, \") {\\n                continue;\\n              }\\n\\n              for (int wC = 0; wC < \").concat(effectiveFilterWidth, \";\\n                  wC += \").concat(dilationWidth, \") {\\n                int xC = xCCorner + wC;\\n\\n                if (xC < 0 || xC >= \").concat(convInfo.inWidth, \") {\\n                  continue;\\n                }\\n\\n                float value = getX(batch, xD, xR, xC, ch);\\n\\n                // If a min / max value has already been found, use it. If not,\\n                // use the current value.\\n                float currMinMaxValue = mix(\\n                    value, minMaxValue, minMaxValueFound);\\n                if (value \").concat(_compareOp2, \" currMinMaxValue) {\\n                  minMaxValue = value;\\n                  minMaxValueFound = 1.0;\\n                  minMaxPosition = \").concat(flattenPositions ? includeBatchInIndex ? \"(((batch * \".concat(convInfo.inDepth, \" + xD) * \").concat(convInfo.inHeight, \" + xR) * \").concat(convInfo.inWidth, \" + xC) * \").concat(convInfo.inChannels, \" + ch\") : \"((xD * \".concat(convInfo.inHeight, \" + xR) * \").concat(convInfo.inWidth, \" + xC) * \").concat(convInfo.inChannels, \" + ch\") : \"wD * \".concat(effectiveFilterHeight, \" * \").concat(effectiveFilterWidth, \" +\\n                      wR * \").concat(effectiveFilterWidth, \" + wC\"), \";\\n                }\\n              }\\n            }\\n          }\\n          setOutput(float(minMaxPosition));\\n        }\\n      \");\n    return;\n  }\n\n  var compareOp = 'max';\n  var returnValue = \"\".concat(poolType, \"(\").concat(poolType, \"(\").concat(poolType, \"(\") + 'minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])';\n\n  if (poolType === 'avg') {\n    returnValue = \"avgValue / count\";\n  }\n\n  var filterWidthNearestVec4 = Math.floor(filterWidth / 4) * 4;\n  var filterWidthVec4Remainder = filterWidth % 4;\n  var updateSnippet = \"\\n      if (\".concat(isAvgPool, \") {\\n        avgValue += dot(values, ones);\\n      } else {\\n        minMaxValue = \").concat(compareOp, \"(values, minMaxValue);\\n      }\\n    \");\n  this.userCode = \"\\n      const ivec3 strides =\\n        ivec3(\".concat(strideDepth, \", \").concat(strideHeight, \", \").concat(strideWidth, \");\\n      const ivec3 pads = ivec3(\").concat(padFront, \", \").concat(padTop, \", \").concat(padLeft, \");\\n      const float initializationValue = \").concat(initializationValue, \";\\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\\n\\n      float count = 0.0;\\n\\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\\n        if (xC < 0 || xC >= \").concat(convInfo.inWidth, \") {\\n          return initializationValue;\\n        }\\n        count += 1.0;\\n        return getX(batch, xD, xR, xC, ch);\\n      }\\n\\n      void main() {\\n        ivec5 coords = getOutputCoords();\\n        int batch = coords.x;\\n        int ch = coords.u;\\n\\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\\n        int xDCorner = xCorner.x;\\n        int xRCorner = xCorner.y;\\n        int xCCorner = xCorner.z;\\n\\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\\n        // ? = to be determined\\n        vec4 minMaxValue = vec4(\").concat(initializationValue, \");\\n        float avgValue = 0.0;\\n        count = 0.0;\\n\\n        for (int wD = 0; wD < \").concat(effectiveFilterDepth, \";\\n            wD += \").concat(dilationDepth, \") {\\n          int xD = xDCorner + wD;\\n\\n          if (xD < 0 || xD >= \").concat(convInfo.inDepth, \") {\\n            continue;\\n          }\\n\\n          for (int wR = 0; wR < \").concat(effectiveFilterHeight, \";\\n            wR += \").concat(dilationHeight, \") {\\n            int xR = xRCorner + wR;\\n\\n            if (xR < 0 || xR >= \").concat(convInfo.inHeight, \") {\\n              continue;\\n            }\\n\\n            for (int wC = 0; wC < \").concat(filterWidthNearestVec4, \"; wC += 4) {\\n              int xC = xCCorner + wC * \").concat(dilationWidth, \";\\n\\n              vec4 values = vec4(\\n                getValue(batch, xD, xR, xC, ch),\\n                getValue(batch, xD, xR, xC + \").concat(dilationWidth, \", ch),\\n                getValue(batch, xD, xR, xC + 2 * \").concat(dilationWidth, \", ch),\\n                getValue(batch, xD, xR, xC + 3 * \").concat(dilationWidth, \", ch)\\n              );\\n\\n              \").concat(updateSnippet, \"\\n            }\\n\\n            int xC = xCCorner + \").concat(filterWidthNearestVec4, \";\\n            if (\").concat(filterWidthVec4Remainder === 1, \") {\\n              vec4 values = vec4(\\n                getValue(batch, xD, xR, xC, ch),\\n                initializationValue,\\n                initializationValue,\\n                initializationValue\\n              );\\n\\n              \").concat(updateSnippet, \"\\n            } else if (\").concat(filterWidthVec4Remainder === 2, \") {\\n              vec4 values = vec4(\\n                getValue(batch, xD, xR, xC, ch),\\n                getValue(batch, xD, xR, xC + \").concat(dilationWidth, \", ch),\\n                initializationValue,\\n                initializationValue\\n              );\\n\\n              \").concat(updateSnippet, \"\\n            } else if (\").concat(filterWidthVec4Remainder === 3, \") {\\n              vec4 values = vec4(\\n                getValue(batch, xD, xR, xC, ch),\\n                getValue(batch, xD, xR, xC + \").concat(dilationWidth, \", ch),\\n                getValue(batch, xD, xR, xC + 2 * \").concat(dilationWidth, \", ch),\\n                initializationValue\\n              );\\n\\n              \").concat(updateSnippet, \"\\n            }\\n          }\\n          setOutput(\").concat(returnValue, \");\\n        }\\n      }\\n    \");\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { AvgPool, backend_util, util } from '@tensorflow/tfjs-core';\nimport { Pool2DProgram } from '../pool_gpu';\nimport { assertNotComplex } from '../webgl_util';\nimport { identity } from './Identity';\nexport function avgPool(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  assertNotComplex(x, 'avgPool');\n  var filterSize = attrs.filterSize,\n      strides = attrs.strides,\n      pad = attrs.pad,\n      dimRoundingMode = attrs.dimRoundingMode;\n  var dilations = 1;\n  util.assert(backend_util.eitherStridesOrDilationsAreOne(strides, dilations), function () {\n    return 'Error in avgPool: Either strides or dilations must be 1. ' + \"Got strides \".concat(strides, \" and dilations '\").concat(dilations, \"'\");\n  });\n  var convInfo = backend_util.computePool2DInfo(x.shape, filterSize, strides, dilations, pad, dimRoundingMode);\n\n  if (convInfo.filterWidth === 1 && convInfo.filterHeight === 1 && util.arraysEqual(convInfo.inShape, convInfo.outShape)) {\n    return identity({\n      inputs: {\n        x: x\n      },\n      backend: backend\n    });\n  }\n\n  var avgPoolProgram = new Pool2DProgram(convInfo, 'avg', false);\n  return backend.runWebGLProgram(avgPoolProgram, [x], 'float32');\n}\nexport var avgPoolConfig = {\n  kernelName: AvgPool,\n  backendName: 'webgl',\n  kernelFunc: avgPool\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { AvgPool3D, backend_util } from '@tensorflow/tfjs-core';\nimport { Pool3DProgram } from '../pool_gpu';\nexport function avgPool3D(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  var filterSize = attrs.filterSize,\n      strides = attrs.strides,\n      pad = attrs.pad,\n      dimRoundingMode = attrs.dimRoundingMode,\n      dataFormat = attrs.dataFormat;\n  var dilations = [1, 1, 1];\n  var convInfo = backend_util.computePool3DInfo(x.shape, filterSize, strides, dilations, pad, dimRoundingMode, dataFormat);\n  var avgPoolProgram = new Pool3DProgram(convInfo, 'avg', false);\n  return backend.runWebGLProgram(avgPoolProgram, [x], 'float32');\n}\nexport var avgPool3DConfig = {\n  kernelName: AvgPool3D,\n  backendName: 'webgl',\n  kernelFunc: avgPool3D\n};","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var AvgPool2DBackpropProgram = function AvgPool2DBackpropProgram(convInfo) {\n  _classCallCheck(this, AvgPool2DBackpropProgram);\n\n  this.variableNames = ['dy'];\n  this.outputShape = convInfo.inShape;\n  var filterHeight = convInfo.filterHeight;\n  var filterWidth = convInfo.filterWidth;\n  var strideHeight = convInfo.strideHeight;\n  var strideWidth = convInfo.strideWidth;\n  var dilationHeight = convInfo.dilationHeight;\n  var dilationWidth = convInfo.dilationWidth;\n  var effectiveFilterHeight = convInfo.effectiveFilterHeight;\n  var effectiveFilterWidth = convInfo.effectiveFilterWidth;\n  var padTop = effectiveFilterHeight - 1 - convInfo.padInfo.top;\n  var padLeft = effectiveFilterWidth - 1 - convInfo.padInfo.left;\n  var avgMultiplier = 1 / (filterHeight * filterWidth);\n  this.userCode = \"\\n      const ivec2 pads = ivec2(\".concat(padTop, \", \").concat(padLeft, \");\\n      const float avgMultiplier = float(\").concat(avgMultiplier, \");\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int d = coords[3];\\n\\n        ivec2 dyRCCorner = coords.yz - pads;\\n        int dyRCorner = dyRCCorner.x;\\n        int dyCCorner = dyRCCorner.y;\\n\\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n        for (int wR = 0; wR < \").concat(effectiveFilterHeight, \";\\n            wR += \").concat(dilationHeight, \") {\\n          float dyR = float(dyRCorner + wR) / \").concat(strideHeight, \".0;\\n\\n          if (dyR < 0.0 || dyR >= \").concat(convInfo.outHeight, \".0 || fract(dyR) > 0.0) {\\n            continue;\\n          }\\n          int idyR = int(dyR);\\n\\n          for (int wC = 0; wC < \").concat(effectiveFilterWidth, \";\\n            wC+= \").concat(dilationWidth, \") {\\n            float dyC = float(dyCCorner + wC) / \").concat(strideWidth, \".0;\\n\\n            if (dyC < 0.0 || dyC >= \").concat(convInfo.outWidth, \".0 ||\\n                fract(dyC) > 0.0) {\\n              continue;\\n            }\\n            int idyC = int(dyC);\\n\\n            float dyValue = getDy(b, idyR, idyC, d);\\n\\n            dotProd += dyValue * avgMultiplier;\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \");\n};\nexport var AvgPool3DBackpropProgram = function AvgPool3DBackpropProgram(convInfo) {\n  _classCallCheck(this, AvgPool3DBackpropProgram);\n\n  this.variableNames = ['dy'];\n  this.outputShape = convInfo.inShape;\n  var filterDepth = convInfo.filterDepth;\n  var filterHeight = convInfo.filterHeight;\n  var filterWidth = convInfo.filterWidth;\n  var strideDepth = convInfo.strideDepth;\n  var strideHeight = convInfo.strideHeight;\n  var strideWidth = convInfo.strideWidth;\n  var dilationDepth = convInfo.dilationDepth;\n  var dilationHeight = convInfo.dilationHeight;\n  var dilationWidth = convInfo.dilationWidth;\n  var effectiveFilterDepth = convInfo.effectiveFilterDepth;\n  var effectiveFilterHeight = convInfo.effectiveFilterHeight;\n  var effectiveFilterWidth = convInfo.effectiveFilterWidth;\n  var padFront = effectiveFilterDepth - 1 - convInfo.padInfo.front;\n  var padTop = effectiveFilterHeight - 1 - convInfo.padInfo.top;\n  var padLeft = effectiveFilterWidth - 1 - convInfo.padInfo.left;\n  var avgMultiplier = 1 / (filterDepth * filterHeight * filterWidth);\n  this.userCode = \"\\n      const ivec3 pads = ivec3(\".concat(padFront, \", \").concat(padTop, \", \").concat(padLeft, \");\\n      const float avgMultiplier = float(\").concat(avgMultiplier, \");\\n\\n      void main() {\\n        ivec5 coords = getOutputCoords();\\n        int batch = coords.x;\\n        int ch = coords.u;\\n\\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\\n        int dyDCorner = dyCorner.x;\\n        int dyRCorner = dyCorner.y;\\n        int dyCCorner = dyCorner.z;\\n\\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\\n        // dx(xD, xR, xC, ch).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n\\n        for (int wD = 0; wD < \").concat(effectiveFilterDepth, \";\\n            wD += \").concat(dilationDepth, \") {\\n          float dyD = float(dyDCorner + wD) / \").concat(strideDepth, \".0;\\n\\n          if (dyD < 0.0 || dyD >= \").concat(convInfo.outDepth, \".0 || fract(dyD) > 0.0) {\\n            continue;\\n          }\\n          int idyD = int(dyD);\\n\\n          for (int wR = 0; wR < \").concat(effectiveFilterHeight, \";\\n              wR += \").concat(dilationHeight, \") {\\n            float dyR = float(dyRCorner + wR) / \").concat(strideHeight, \".0;\\n\\n            if (dyR < 0.0 || dyR >= \").concat(convInfo.outHeight, \".0 ||\\n                fract(dyR) > 0.0) {\\n              continue;\\n            }\\n            int idyR = int(dyR);\\n\\n            for (int wC = 0; wC < \").concat(effectiveFilterWidth, \";\\n                wC += \").concat(dilationWidth, \") {\\n              float dyC = float(dyCCorner + wC) / \").concat(strideWidth, \".0;\\n\\n              if (dyC < 0.0 || dyC >= \").concat(convInfo.outWidth, \".0 ||\\n                  fract(dyC) > 0.0) {\\n                continue;\\n              }\\n              int idyC = int(dyC);\\n\\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\\n\\n              dotProd += dyValue * avgMultiplier;\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \");\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { AvgPool3DGrad, backend_util } from '@tensorflow/tfjs-core';\nimport { AvgPool3DBackpropProgram } from '../avg_pool_backprop_gpu';\nexport function avgPool3DGrad(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var dy = inputs.dy,\n      input = inputs.input;\n  var x = input;\n  var filterSize = attrs.filterSize,\n      strides = attrs.strides,\n      pad = attrs.pad,\n      dimRoundingMode = attrs.dimRoundingMode;\n  var dilations = [1, 1, 1];\n  var convInfo = backend_util.computePool3DInfo(x.shape, filterSize, strides, dilations, pad, dimRoundingMode);\n  var avgPoolBackpropProgram = new AvgPool3DBackpropProgram(convInfo);\n  return backend.runWebGLProgram(avgPoolBackpropProgram, [dy], x.dtype);\n}\nexport var avgPoolGrad3DConfig = {\n  kernelName: AvgPool3DGrad,\n  backendName: 'webgl',\n  kernelFunc: avgPool3DGrad\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { AvgPoolGrad, backend_util } from '@tensorflow/tfjs-core';\nimport { AvgPool2DBackpropProgram } from '../avg_pool_backprop_gpu';\nimport { assertNotComplex } from '../webgl_util';\nexport function avgPoolGrad(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var dy = inputs.dy,\n      input = inputs.input;\n  var x = input;\n  assertNotComplex([dy, input], 'avgPoolGrad');\n  var filterSize = attrs.filterSize,\n      strides = attrs.strides,\n      pad = attrs.pad;\n  var convInfo = backend_util.computePool2DInfo(x.shape, filterSize, strides, 1\n  /* dilations */\n  , pad);\n  var avgPoolBackpropProgram = new AvgPool2DBackpropProgram(convInfo);\n  return backend.runWebGLProgram(avgPoolBackpropProgram, [dy], x.dtype);\n}\nexport var avgPoolGradConfig = {\n  kernelName: AvgPoolGrad,\n  backendName: 'webgl',\n  kernelFunc: avgPoolGrad\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { BatchMatMul } from '@tensorflow/tfjs-core';\nimport { batchMatMulImpl } from './BatchMatMul_impl';\nexport function batchMatMul(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var a = inputs.a,\n      b = inputs.b;\n  var transposeA = attrs.transposeA,\n      transposeB = attrs.transposeB;\n  return batchMatMulImpl({\n    a: a,\n    b: b,\n    transposeA: transposeA,\n    transposeB: transposeB,\n    backend: backend\n  });\n}\nexport var batchMatMulConfig = {\n  kernelName: BatchMatMul,\n  backendName: 'webgl',\n  kernelFunc: batchMatMul\n};","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util } from '@tensorflow/tfjs-core';\nexport var BatchNormProgram = function BatchNormProgram(xShape, meanShape, varianceShape, offsetShape, scaleShape, varianceEpsilon) {\n  _classCallCheck(this, BatchNormProgram);\n\n  this.outputShape = [];\n  this.variableNames = ['x', 'mean', 'variance'];\n  backend_util.assertAndGetBroadcastShape(xShape, meanShape);\n  backend_util.assertAndGetBroadcastShape(xShape, varianceShape);\n  var offsetSnippet = '0.0';\n\n  if (offsetShape != null) {\n    backend_util.assertAndGetBroadcastShape(xShape, offsetShape);\n    this.variableNames.push('offset');\n    offsetSnippet = 'getOffsetAtOutCoords()';\n  }\n\n  var scaleSnippet = '1.0';\n\n  if (scaleShape != null) {\n    backend_util.assertAndGetBroadcastShape(xShape, scaleShape);\n    this.variableNames.push('scale');\n    scaleSnippet = 'getScaleAtOutCoords()';\n  }\n\n  this.outputShape = xShape;\n  this.userCode = \"\\n      void main() {\\n        float x = getXAtOutCoords();\\n        float mean = getMeanAtOutCoords();\\n        float variance = getVarianceAtOutCoords();\\n        float offset = \".concat(offsetSnippet, \";\\n        float scale = \").concat(scaleSnippet, \";\\n        float inv = scale * inversesqrt(variance + float(\").concat(varianceEpsilon, \"));\\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\\n      }\\n    \");\n};","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util } from '@tensorflow/tfjs-core';\nexport var BatchNormPackedProgram = function BatchNormPackedProgram(xShape, meanShape, varianceShape, offsetShape, scaleShape, varianceEpsilon) {\n  _classCallCheck(this, BatchNormPackedProgram);\n\n  this.packedInputs = true;\n  this.packedOutput = true;\n  this.variableNames = ['x', 'mean', 'variance'];\n  backend_util.assertAndGetBroadcastShape(xShape, meanShape);\n  backend_util.assertAndGetBroadcastShape(xShape, varianceShape);\n  var offsetSnippet = 'vec4(0.0)';\n\n  if (offsetShape != null) {\n    backend_util.assertAndGetBroadcastShape(xShape, offsetShape);\n    this.variableNames.push('offset');\n    offsetSnippet = 'getOffsetAtOutCoords()';\n  }\n\n  var scaleSnippet = 'vec4(1.0)';\n\n  if (scaleShape != null) {\n    backend_util.assertAndGetBroadcastShape(xShape, scaleShape);\n    this.variableNames.push('scale');\n    scaleSnippet = 'getScaleAtOutCoords()';\n  }\n\n  this.outputShape = xShape;\n  this.userCode = \"\\n      void main() {\\n        vec4 offset = \".concat(offsetSnippet, \";\\n        vec4 scale = \").concat(scaleSnippet, \";\\n\\n        vec4 x = getXAtOutCoords();\\n        vec4 mean = getMeanAtOutCoords();\\n        vec4 variance = getVarianceAtOutCoords();\\n\\n        vec4 inv = scale * inversesqrt(variance + vec4(\").concat(varianceEpsilon, \"));\\n\\n        setOutput((x - mean) * inv + offset);\\n      }\\n    \");\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env, FusedBatchNorm, util } from '@tensorflow/tfjs-core';\nimport { BatchNormProgram } from '../batchnorm_gpu';\nimport { BatchNormPackedProgram } from '../batchnorm_packed_gpu';\nexport var batchNorm = function batchNorm(_ref) {\n  var inputs = _ref.inputs,\n      backend = _ref.backend,\n      attrs = _ref.attrs;\n  var x = inputs.x,\n      mean = inputs.mean,\n      variance = inputs.variance,\n      offset = inputs.offset,\n      scale = inputs.scale;\n  util.assert(mean.shape.length === variance.shape.length, function () {\n    return 'Batch normalization gradient requires mean and variance to have ' + 'equal ranks.';\n  });\n  util.assert(offset == null || mean.shape.length === offset.shape.length, function () {\n    return 'Batch normalization gradient requires mean and offset to have ' + 'equal ranks.';\n  });\n  util.assert(scale == null || mean.shape.length === scale.shape.length, function () {\n    return 'Batch normalization gradient requires mean and scale to have ' + 'equal ranks.';\n  });\n  var varianceEpsilon = attrs.varianceEpsilon;\n\n  if (varianceEpsilon == null) {\n    varianceEpsilon = 0.001;\n  }\n\n  var finalInputs = [x, mean, variance];\n  var offsetShape = null;\n\n  if (offset != null) {\n    offsetShape = offset.shape;\n    finalInputs.push(offset);\n  }\n\n  var scaleShape = null;\n\n  if (scale != null) {\n    scaleShape = scale.shape;\n    finalInputs.push(scale);\n  }\n\n  var program = env().getBool('WEBGL_PACK_NORMALIZATION') ? new BatchNormPackedProgram(x.shape, mean.shape, variance.shape, offsetShape, scaleShape, varianceEpsilon) : new BatchNormProgram(x.shape, mean.shape, variance.shape, offsetShape, scaleShape, varianceEpsilon);\n  var output = backend.runWebGLProgram(program, finalInputs, finalInputs[0].dtype);\n  return output;\n};\nexport var batchNormConfig = {\n  kernelName: FusedBatchNorm,\n  backendName: 'webgl',\n  kernelFunc: batchNorm\n};","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getCoordsDataType } from './shader_compiler';\nexport var SliceProgram = /*#__PURE__*/function () {\n  function SliceProgram(destSize) {\n    _classCallCheck(this, SliceProgram);\n\n    this.variableNames = ['source'];\n    this.outputShape = destSize;\n    this.rank = destSize.length;\n    var dtype = getCoordsDataType(this.rank);\n    var uniformPart = \"uniform int start[\".concat(this.rank, \"];\");\n    var sourceCoords = getCoords(this.rank);\n    var body;\n    var coordSum = destSize.map(function (_, i) {\n      return \"sourceLoc.\".concat(coords[i], \" = start[\").concat(i, \"] + coords.\").concat(coords[i], \";\");\n    });\n    body = \"\\n        \".concat(dtype, \" sourceLoc;\\n        \").concat(dtype, \" coords = getOutputCoords();\\n        \").concat(coordSum.join('\\n'), \"\\n      \");\n    this.userCode = \"\\n      \".concat(uniformPart, \"\\n      void main() {\\n        \").concat(body, \"\\n        setOutput(getSource(\").concat(sourceCoords, \"));\\n      }\\n    \");\n  }\n\n  _createClass(SliceProgram, [{\n    key: \"getCustomSetupFunc\",\n    value: function getCustomSetupFunc(start) {\n      var _this = this;\n\n      if (start.length !== this.rank) {\n        throw Error(\"The rank (\".concat(this.rank, \") of the program must match the \") + \"length of start (\".concat(start.length, \")\"));\n      }\n\n      return function (gpgpu, webGLProgram) {\n        if (_this.startLoc == null) {\n          _this.startLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'start');\n\n          if (_this.startLoc == null) {\n            // This means the compiler has optimized and realized it doesn't need\n            // the uniform.\n            return;\n          }\n        }\n\n        gpgpu.gl.uniform1iv(_this.startLoc, start);\n      };\n    }\n  }]);\n\n  return SliceProgram;\n}();\nvar coords = ['x', 'y', 'z', 'w', 'u', 'v'];\n\nfunction getCoords(rank) {\n  if (rank === 1) {\n    return 'sourceLoc';\n  } else if (rank <= 6) {\n    return coords.slice(0, rank).map(function (x) {\n      return 'sourceLoc.' + x;\n    }).join(',');\n  } else {\n    throw Error(\"Slicing for rank \".concat(rank, \" is not yet supported\"));\n  }\n}","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getChannels } from './packing_util';\nimport { getCoordsDataType } from './shader_compiler';\nexport var SlicePackedProgram = /*#__PURE__*/function () {\n  function SlicePackedProgram(destSize) {\n    _classCallCheck(this, SlicePackedProgram);\n\n    this.variableNames = ['source'];\n    this.packedInputs = true;\n    this.packedOutput = true;\n    this.outputShape = destSize;\n    this.rank = destSize.length;\n    var dtype = getCoordsDataType(this.rank);\n    var coords = getChannels('coords', this.rank);\n    var sourceLoc = getChannels('sourceLoc', this.rank);\n    var innerDims = this.rank === 1 ? 'sourceLoc' : \"vec2(\".concat(sourceLoc.slice(-2).join(), \")\");\n    var getChannel = \"getChannel(getSource(\".concat(sourceLoc.join(), \"), \").concat(innerDims, \")\");\n    var upperRow = \"\\n      result.x = \".concat(getChannel, \";\\n      if (++\").concat(coords[this.rank - 1], \" < \").concat(destSize[this.rank - 1], \") {\\n        ++\").concat(sourceLoc[this.rank - 1], \";\\n        result.y = \").concat(getChannel, \";\\n        --\").concat(sourceLoc[this.rank - 1], \";\\n      }\\n    \");\n    var lowerRow = this.rank === 1 ? '' : \"\\n      --\".concat(coords[this.rank - 1], \";\\n      if (++\").concat(coords[this.rank - 2], \" < \").concat(destSize[this.rank - 2], \") {\\n        ++\").concat(sourceLoc[this.rank - 2], \";\\n        result.z = \").concat(getChannel, \";\\n        if (++\").concat(coords[this.rank - 1], \" < \").concat(destSize[this.rank - 1], \") {\\n          ++\").concat(sourceLoc[this.rank - 1], \";\\n          result.w = \").concat(getChannel, \";\\n        }\\n      }\\n    \");\n    var sourceLocSetup = this.rank <= 4 ? \"sourceLoc = coords +\\n            \".concat(dtype, \"(\").concat(destSize.map(function (_, i) {\n      return \"start[\".concat(i, \"]\");\n    }).join(), \");\") : destSize.map(function (_, i) {\n      return \"\".concat(sourceLoc[i], \" = \").concat(coords[i], \" + start[\").concat(i, \"];\");\n    }).join('\\n');\n    this.userCode = \"\\n      uniform int start[\".concat(this.rank, \"];\\n      void main() {\\n        \").concat(dtype, \" coords = getOutputCoords();\\n        \").concat(dtype, \" sourceLoc;\\n        \").concat(sourceLocSetup, \"\\n        vec4 result = vec4(0.);\\n        \").concat(upperRow, \"\\n        \").concat(lowerRow, \"\\n        setOutput(result);\\n      }\\n    \");\n  }\n\n  _createClass(SlicePackedProgram, [{\n    key: \"getCustomSetupFunc\",\n    value: function getCustomSetupFunc(start) {\n      var _this = this;\n\n      if (start.length !== this.rank) {\n        throw Error(\"The rank (\".concat(this.rank, \") of the program must match the \") + \"length of start (\".concat(start.length, \")\"));\n      }\n\n      return function (gpgpu, webGLProgram) {\n        if (_this.startLoc == null) {\n          _this.startLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'start');\n\n          if (_this.startLoc == null) {\n            // This means the compiler has optimized and realized it doesn't need\n            // the uniform.\n            return;\n          }\n        }\n\n        gpgpu.gl.uniform1iv(_this.startLoc, start);\n      };\n    }\n  }]);\n\n  return SlicePackedProgram;\n}();","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env, Slice, slice_util, util } from '@tensorflow/tfjs-core';\nimport { sliceImplCPU } from '../kernel_utils/shared';\nimport { SliceProgram } from '../slice_gpu';\nimport { SlicePackedProgram } from '../slice_packed_gpu';\n\nfunction shallowSlice(x, begin, size, backend) {\n  var xTexData = backend.texData.get(x.dataId);\n  var t = backend.makeTensorInfo(size, x.dtype);\n  var newTexData = backend.texData.get(t.dataId); // Copy texture data from the original tensor.\n\n  Object.assign(newTexData, xTexData);\n  newTexData.refCount = 1;\n  newTexData.shape = size;\n  newTexData.dtype = x.dtype;\n  var flatOffset = slice_util.computeFlatOffset(begin, util.computeStrides(x.shape));\n\n  if (xTexData.slice) {\n    // We are slicing an already sliced tensor, so we have to accumulate\n    // the offset.\n    flatOffset += xTexData.slice.flatOffset;\n  }\n\n  newTexData.slice = {\n    flatOffset: flatOffset,\n    // Point to the original dataId, which is used to do ref counting.\n    origDataId: xTexData.slice && xTexData.slice.origDataId || x.dataId\n  }; // Increase the ref count for that data bucket.\n\n  var refCount = backend.dataRefCount.get(newTexData.slice.origDataId) || 1;\n  backend.dataRefCount.set(newTexData.slice.origDataId, refCount + 1);\n  return t;\n}\n\nexport function slice(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  var begin = attrs.begin,\n      size = attrs.size;\n\n  var _slice_util$parseSlic = slice_util.parseSliceParams(x, begin, size),\n      _slice_util$parseSlic2 = _slicedToArray(_slice_util$parseSlic, 2),\n      $begin = _slice_util$parseSlic2[0],\n      $size = _slice_util$parseSlic2[1];\n\n  slice_util.assertParamsValid(x, $begin, $size);\n\n  if (util.sizeFromShape($size) === 0) {\n    return backend.makeTensorInfo($size, x.dtype, []);\n  } // Run on cpu if dtype is string. For string, the backend represents it\n  // as Uint8Array[], where each Uint8Array is a character. Given that the\n  // computation is only on the outer array, uploading the whole data onto\n  // gpu is wasteful. Also, currently webgl doesn't have a design to\n  // upload and retrieve Uint8Array[] between cpu and gpu. Therefore, we\n  // just run the kernel on cpu if dtype is string.\n\n\n  if (backend.shouldExecuteOnCPU([x]) || x.dtype === 'string') {\n    var xTexData = backend.texData.get(x.dataId);\n    var outValues = sliceImplCPU(xTexData.values, $begin, $size, x.shape, x.dtype);\n    return backend.makeTensorInfo($size, x.dtype, outValues);\n  }\n\n  var _backend$texData$get = backend.texData.get(x.dataId),\n      isPacked = _backend$texData$get.isPacked;\n\n  var isContinous = slice_util.isSliceContinous(x.shape, $begin, $size);\n\n  if (isPacked || !isContinous) {\n    var program = env().getBool('WEBGL_PACK_ARRAY_OPERATIONS') ? new SlicePackedProgram($size) : new SliceProgram($size);\n    var customSetup = program.getCustomSetupFunc($begin);\n    return backend.runWebGLProgram(program, [x], x.dtype, customSetup);\n  }\n\n  backend.uploadToGPU(x.dataId);\n  return shallowSlice(x, $begin, $size, backend);\n}\nexport var sliceConfig = {\n  kernelName: Slice,\n  backendName: 'webgl',\n  kernelFunc: slice\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, BatchToSpaceND, util } from '@tensorflow/tfjs-core';\nimport { reshape } from './Reshape';\nimport { slice } from './Slice';\nimport { transpose } from './Transpose';\nexport var batchToSpaceND = function batchToSpaceND(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  var blockShape = attrs.blockShape,\n      crops = attrs.crops;\n  util.assert(x.shape.length <= 4, function () {\n    return 'batchToSpaceND for rank > 4 with a WebGL backend not ' + 'implemented yet';\n  });\n  var prod = blockShape.reduce(function (a, b) {\n    return a * b;\n  });\n  var reshaped = backend_util.getReshaped(x.shape, blockShape, prod);\n  var permuted = backend_util.getPermuted(reshaped.length, blockShape.length);\n  var reshapedPermuted = backend_util.getReshapedPermuted(x.shape, blockShape, prod);\n  var sliceBeginCoords = backend_util.getSliceBeginCoords(crops, blockShape.length);\n  var sliceSize = backend_util.getSliceSize(reshapedPermuted, crops, blockShape.length);\n  var toDispose = [];\n  var reshapedIntermediate = reshape({\n    inputs: {\n      x: x\n    },\n    backend: backend,\n    attrs: {\n      shape: reshaped\n    }\n  });\n  var transposedIntermediate = transpose({\n    inputs: {\n      x: reshapedIntermediate\n    },\n    backend: backend,\n    attrs: {\n      perm: permuted\n    }\n  });\n  var reshapedIntermediate2 = reshape({\n    inputs: {\n      x: transposedIntermediate\n    },\n    backend: backend,\n    attrs: {\n      shape: reshapedPermuted\n    }\n  });\n  var sliced = slice({\n    inputs: {\n      x: reshapedIntermediate2\n    },\n    backend: backend,\n    attrs: {\n      begin: sliceBeginCoords,\n      size: sliceSize\n    }\n  });\n  toDispose.push(reshapedIntermediate);\n  toDispose.push(transposedIntermediate);\n  toDispose.push(reshapedIntermediate2);\n  toDispose.forEach(function (t) {\n    return backend.disposeIntermediateTensorInfo(t);\n  });\n  return sliced;\n};\nexport var batchToSpaceNDConfig = {\n  kernelName: BatchToSpaceND,\n  backendName: 'webgl',\n  kernelFunc: batchToSpaceND\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Bincount } from '@tensorflow/tfjs-core';\nimport { bincountImplCPU } from '../kernel_utils/shared';\nexport function bincount(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x,\n      weights = inputs.weights;\n  var size = attrs.size;\n  var xVals = backend.readSync(x.dataId);\n  var weightsVals = backend.readSync(weights.dataId);\n  var outVals = bincountImplCPU(xVals, weightsVals, weights.dtype, weights.shape, size);\n  return backend.makeTensorInfo([size], weights.dtype, outVals);\n}\nexport var bincountConfig = {\n  kernelName: Bincount,\n  backendName: 'webgl',\n  kernelFunc: bincount\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { NotEqual } from '@tensorflow/tfjs-core';\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nvar NOT_EQUAL = \"return float(a != b);\";\nexport var notEqual = binaryKernelFunc({\n  opSnippet: NOT_EQUAL,\n  dtype: 'bool'\n});\nexport var notEqualConfig = {\n  kernelName: NotEqual,\n  backendName: 'webgl',\n  kernelFunc: notEqual\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Real } from '@tensorflow/tfjs-core';\nimport { identity } from './Identity';\nexport function real(args) {\n  var inputs = args.inputs,\n      backend = args.backend;\n  var input = inputs.input;\n  var inputData = backend.texData.get(input.dataId);\n  return identity({\n    inputs: {\n      x: inputData.complexTensorInfos.real\n    },\n    backend: backend\n  });\n}\nexport var realConfig = {\n  kernelName: Real,\n  backendName: 'webgl',\n  kernelFunc: real\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport * as tf from '@tensorflow/tfjs-core';\nimport { Cast, util } from '@tensorflow/tfjs-core';\nimport { complex } from './Complex';\nimport { identity } from './Identity';\nimport { notEqual } from './NotEqual';\nimport { real } from './Real';\nimport { int } from '../kernel_utils/int';\nexport function cast(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  var dtype = attrs.dtype; // Casting to complex64.\n\n  if (dtype === 'complex64') {\n    if (x.dtype === 'complex64') {\n      return identity({\n        inputs: {\n          x: x\n        },\n        backend: backend\n      });\n    } // TODO(annxingyuan): Import kernel function once zeros is modularized.\n\n\n    var zerosTensor = tf.zeros(x.shape);\n    var floatX = cast({\n      inputs: {\n        x: x\n      },\n      backend: backend,\n      attrs: {\n        dtype: 'float32'\n      }\n    });\n    var result = complex({\n      inputs: {\n        real: floatX,\n        imag: zerosTensor\n      },\n      backend: backend\n    });\n    zerosTensor.dispose();\n    backend.disposeIntermediateTensorInfo(floatX);\n    return result;\n  } // Casting from complex64\n\n\n  if (x.dtype === 'complex64') {\n    var realPart = real({\n      inputs: {\n        input: x\n      },\n      backend: backend\n    });\n\n    var _result = cast({\n      inputs: {\n        x: realPart\n      },\n      backend: backend,\n      attrs: {\n        dtype: dtype\n      }\n    });\n\n    backend.disposeIntermediateTensorInfo(realPart);\n    return _result;\n  }\n\n  if (!util.hasEncodingLoss(x.dtype, dtype)) {\n    // We don't change the underlying data, since we cast to higher\n    // precision.\n    var _result2 = identity({\n      inputs: {\n        x: x\n      },\n      backend: backend\n    });\n\n    return {\n      dataId: _result2.dataId,\n      shape: _result2.shape,\n      dtype: dtype\n    };\n  }\n\n  if (dtype === 'int32') {\n    return int(x, backend);\n  }\n\n  if (dtype === 'bool') {\n    var zerosTensorInfo = backend.makeTensorInfo([], 'bool', util.getTypedArrayFromDType('bool', 1));\n    var binaryInputs = {\n      a: x,\n      b: zerosTensorInfo\n    };\n\n    var _result3 = notEqual({\n      inputs: binaryInputs,\n      backend: backend\n    });\n\n    backend.disposeIntermediateTensorInfo(zerosTensorInfo);\n    return _result3;\n  }\n\n  throw new Error(\"Error in Cast: failed to cast \".concat(x.dtype, \" to \").concat(dtype));\n}\nexport var castConfig = {\n  kernelName: Cast,\n  backendName: 'webgl',\n  kernelFunc: cast\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { UnaryOpProgram } from '../unaryop_gpu';\nvar TO_INT = \"return float(int(x));\";\nexport function int(input, backend) {\n  var program = new UnaryOpProgram(input.shape, TO_INT);\n  var output = backend.runWebGLProgram(program, [input], 'int32');\n  return {\n    dataId: output.dataId,\n    shape: output.shape,\n    dtype: output.dtype\n  };\n}","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Ceil } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { ceilImplCPU } from '../kernel_utils/shared';\nvar CEIL = \"return ceil(x);\";\nexport var ceil = unaryKernelFunc({\n  opSnippet: CEIL,\n  packedOpSnippet: CEIL,\n  cpuKernelImpl: ceilImplCPU\n});\nexport var ceilConfig = {\n  kernelName: Ceil,\n  backendName: 'webgl',\n  kernelFunc: ceil\n};","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var ClipProgram = /*#__PURE__*/function () {\n  function ClipProgram(aShape) {\n    _classCallCheck(this, ClipProgram);\n\n    this.variableNames = ['A'];\n    this.outputShape = aShape;\n    this.userCode = \"\\n      uniform float minVal;\\n      uniform float maxVal;\\n\\n      void main() {\\n        float value = getAAtOutCoords();\\n        if (isnan(value)) {\\n          setOutput(value);\\n          return;\\n        }\\n\\n        setOutput(clamp(value, minVal, maxVal));\\n      }\\n    \";\n  }\n\n  _createClass(ClipProgram, [{\n    key: \"getCustomSetupFunc\",\n    value: function getCustomSetupFunc(min, max) {\n      var _this = this;\n\n      return function (gpgpu, webGLProgram) {\n        if (_this.minLoc == null) {\n          _this.minLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'minVal');\n          _this.maxLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'maxVal');\n        }\n\n        gpgpu.gl.uniform1f(_this.minLoc, min);\n        gpgpu.gl.uniform1f(_this.maxLoc, max);\n      };\n    }\n  }]);\n\n  return ClipProgram;\n}();","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var ClipPackedProgram = /*#__PURE__*/function () {\n  function ClipPackedProgram(aShape) {\n    _classCallCheck(this, ClipPackedProgram);\n\n    this.variableNames = ['A'];\n    this.packedInputs = true;\n    this.packedOutput = true;\n    this.outputShape = aShape;\n    this.userCode = \"\\n      uniform float minVal;\\n      uniform float maxVal;\\n\\n      void main() {\\n        vec4 value = getAAtOutCoords();\\n\\n        if (any(isnan(value))) {\\n          setOutput(value);\\n          return;\\n        }\\n\\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\\n      }\\n    \";\n  }\n\n  _createClass(ClipPackedProgram, [{\n    key: \"getCustomSetupFunc\",\n    value: function getCustomSetupFunc(min, max) {\n      var _this = this;\n\n      return function (gpgpu, webGLProgram) {\n        if (_this.minLoc == null) {\n          _this.minLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'minVal');\n          _this.maxLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'maxVal');\n        }\n\n        gpgpu.gl.uniform1f(_this.minLoc, min);\n        gpgpu.gl.uniform1f(_this.maxLoc, max);\n      };\n    }\n  }]);\n\n  return ClipPackedProgram;\n}();","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ClipByValue, env } from '@tensorflow/tfjs-core';\nimport { ClipProgram } from '../clip_gpu';\nimport { ClipPackedProgram } from '../clip_packed_gpu';\nexport function clipByValue(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  var clipValueMin = attrs.clipValueMin,\n      clipValueMax = attrs.clipValueMax;\n  var program;\n\n  if (env().getBool('WEBGL_PACK_CLIP')) {\n    program = new ClipPackedProgram(x.shape);\n  } else {\n    program = new ClipProgram(x.shape);\n  }\n\n  var customSetup = program.getCustomSetupFunc(clipValueMin, clipValueMax);\n  return backend.runWebGLProgram(program, [x], x.dtype, customSetup);\n}\nexport var clipByValueConfig = {\n  kernelName: ClipByValue,\n  backendName: 'webgl',\n  kernelFunc: clipByValue\n};","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var ComplexAbsProgram = function ComplexAbsProgram(shape) {\n  _classCallCheck(this, ComplexAbsProgram);\n\n  this.variableNames = ['real', 'imag'];\n  this.outputShape = shape;\n  this.userCode = \"\\n      void main() {\\n        float re = abs(getRealAtOutCoords());\\n        float im = abs(getImagAtOutCoords());\\n        float mx = max(re, im);\\n\\n        // sadly the length function in glsl is not underflow-safe\\n        // (at least not on Intel GPUs). So the safe solution is\\n        // to ensure underflow-safety in all cases.\\n        setOutput(\\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\\n        );\\n      }\\n    \";\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ComplexAbs } from '@tensorflow/tfjs-core';\nimport { ComplexAbsProgram } from '../complex_abs_gpu'; // Returns a TensorInfo with the complex shape and the dataId of the\n// underlying part. We need to do this because a reshaped complex tensor is\n// not reflected in its parts.\n\nfunction makeComplexComponentTensorInfo(complexTensor, complexPart) {\n  return {\n    dataId: complexPart.dataId,\n    dtype: complexPart.dtype,\n    shape: complexTensor.shape\n  };\n}\n\nexport function complexAbs(args) {\n  var inputs = args.inputs,\n      backend = args.backend;\n  var x = inputs.x;\n  var xData = backend.texData.get(x.dataId);\n  var program = new ComplexAbsProgram(x.shape);\n  var programInputs = [makeComplexComponentTensorInfo(x, xData.complexTensorInfos.real), makeComplexComponentTensorInfo(x, xData.complexTensorInfos.imag)];\n  return backend.runWebGLProgram(program, programInputs, programInputs[0].dtype);\n}\nexport var complexAbsConfig = {\n  kernelName: ComplexAbs,\n  backendName: 'webgl',\n  kernelFunc: complexAbs\n};","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util } from '@tensorflow/tfjs-core';\nexport var ConcatProgram = // Concats 2d tensors along axis=1. See comments in MathBackendWebGL.concat().\nfunction ConcatProgram(shapes) {\n  _classCallCheck(this, ConcatProgram);\n\n  this.outputShape = [];\n  this.outputShape = backend_util.computeOutShape(shapes, 1\n  /* axis */\n  );\n  this.variableNames = shapes.map(function (_, i) {\n    return \"T\".concat(i);\n  });\n  var offsets = new Array(shapes.length - 1);\n  offsets[0] = shapes[0][1];\n\n  for (var i = 1; i < offsets.length; i++) {\n    offsets[i] = offsets[i - 1] + shapes[i][1];\n  }\n\n  var snippets = [\"if (yC < \".concat(offsets[0], \") setOutput(getT0(yR, yC));\")];\n\n  for (var _i = 1; _i < offsets.length; _i++) {\n    var shift = offsets[_i - 1];\n    snippets.push(\"else if (yC < \".concat(offsets[_i], \") \") + \"setOutput(getT\".concat(_i, \"(yR, yC-\").concat(shift, \"));\"));\n  }\n\n  var lastIndex = offsets.length;\n  var lastShift = offsets[offsets.length - 1];\n  snippets.push(\"else setOutput(getT\".concat(lastIndex, \"(yR, yC-\").concat(lastShift, \"));\"));\n  this.userCode = \"\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int yR = coords.x;\\n        int yC = coords.y;\\n\\n        \".concat(snippets.join('\\n        '), \"\\n      }\\n    \");\n};","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util } from '@tensorflow/tfjs-core';\nimport { getChannels } from './packing_util';\nimport { getCoordsDataType } from './shader_compiler';\nexport var ConcatPackedProgram = function ConcatPackedProgram(shapes, axis) {\n  _classCallCheck(this, ConcatPackedProgram);\n\n  this.packedInputs = true;\n  this.packedOutput = true;\n  this.outputShape = [];\n  this.outputShape = backend_util.computeOutShape(shapes, axis);\n  var shape = this.outputShape;\n  var rank = shape.length;\n  var dtype = getCoordsDataType(rank);\n  var coords = getChannels('coords', rank);\n  var channels = ['x', 'y', 'z', 'w', 'u', 'v'].slice(0, rank);\n  this.variableNames = shapes.map(function (_, i) {\n    return \"T\".concat(i);\n  });\n  var offsets = new Array(shapes.length - 1);\n  offsets[0] = shapes[0][axis];\n\n  for (var i = 1; i < offsets.length; i++) {\n    offsets[i] = offsets[i - 1] + shapes[i][axis];\n  }\n\n  var channel = channels[axis];\n  var lastChannels = channels.slice(-2);\n  var allChannels = channels.join();\n  var getValueSnippet = \"if (\".concat(channel, \" < \").concat(offsets[0], \") {\\n        return getChannel(\\n            getT0(\").concat(allChannels, \"), vec2(\").concat(lastChannels.join(), \"));\\n        }\");\n\n  for (var _i = 1; _i < offsets.length; _i++) {\n    var _shift = offsets[_i - 1]; // Note: the >= comparison below may seem unnecessary given the check\n    // above but is needed to workaround branch execution issues on some\n    // devices. It makes all the conditions exclusive without relying on\n    // execution order.\n\n    getValueSnippet += \"\\n        if (\".concat(channel, \" < \").concat(offsets[_i], \"  && \").concat(channel, \" >= \").concat(offsets[_i - 1], \") {\\n          return getChannel(\\n            getT\").concat(_i, \"(\").concat(shiftedChannels(channels, channel, _shift), \"),\\n            vec2(\").concat(shiftedChannels(lastChannels, channel, _shift), \"));\\n        }\");\n  }\n\n  var lastIndex = offsets.length;\n  var shift = offsets[offsets.length - 1];\n  getValueSnippet += \"\\n        return getChannel(\\n          getT\".concat(lastIndex, \"(\").concat(shiftedChannels(channels, channel, shift), \"),\\n          vec2(\").concat(shiftedChannels(lastChannels, channel, shift), \"));\");\n  this.userCode = \"\\n      float getValue(\".concat(channels.map(function (x) {\n    return 'int ' + x;\n  }), \") {\\n        \").concat(getValueSnippet, \"\\n      }\\n\\n      void main() {\\n        \").concat(dtype, \" coords = getOutputCoords();\\n        vec4 result = vec4(getValue(\").concat(coords, \"), 0., 0., 0.);\\n\\n        \").concat(coords[rank - 1], \" = \").concat(coords[rank - 1], \" + 1;\\n        if (\").concat(coords[rank - 1], \" < \").concat(shape[rank - 1], \") {\\n          result.g = getValue(\").concat(coords, \");\\n        }\\n\\n        \").concat(coords[rank - 2], \" = \").concat(coords[rank - 2], \" + 1;\\n        if (\").concat(coords[rank - 2], \" < \").concat(shape[rank - 2], \") {\\n          result.a = getValue(\").concat(coords, \");\\n        }\\n\\n        \").concat(coords[rank - 1], \" = \").concat(coords[rank - 1], \" - 1;\\n        if (\").concat(coords[rank - 2], \" < \").concat(shape[rank - 2], \" &&\\n            \").concat(coords[rank - 1], \" < \").concat(shape[rank - 1], \") {\\n          result.b = getValue(\").concat(coords, \");\\n        }\\n        setOutput(result);\\n      }\\n    \");\n};\n/**\n * Return an expression for coordinates into a vector where a given channel\n * will be offset by [shift].\n *\n * @param channels the channels to consider\n * @param channel the channel we want shifted\n * @param shift  the amount to subtract from the channel.\n *\n * @returns a string of the form 'x, y-[shift], z' where any one channel can\n * have the shift applied.\n */\n\nfunction shiftedChannels(channels, channel, shift) {\n  var channelIdx = channels.indexOf(channel);\n  var res = channels.map(function (c, idx) {\n    if (idx === channelIdx) {\n      return \"\".concat(c, \" - \").concat(shift);\n    } else {\n      return c;\n    }\n  });\n  return res.join();\n}","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Imag } from '@tensorflow/tfjs-core';\nimport { identity } from './Identity';\nexport function imag(args) {\n  var inputs = args.inputs,\n      backend = args.backend;\n  var input = inputs.input;\n  var inputData = backend.texData.get(input.dataId);\n  return identity({\n    inputs: {\n      x: inputData.complexTensorInfos.imag\n    },\n    backend: backend\n  });\n}\nexport var imagConfig = {\n  kernelName: Imag,\n  backendName: 'webgl',\n  kernelFunc: imag\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, env, util } from '@tensorflow/tfjs-core';\nimport { ConcatProgram } from '../concat_gpu';\nimport { ConcatPackedProgram } from '../concat_packed_gpu';\nimport { concatImplCPU } from '../kernel_utils/shared';\nimport { complex } from './Complex';\nimport { imag } from './Imag';\nimport { real } from './Real';\nimport { reshape } from './Reshape';\nexport function concatImpl(inputs, axis, backend) {\n  var dtype = inputs[0].dtype;\n\n  if (dtype === 'complex64') {\n    var reals = inputs.map(function (t) {\n      return real({\n        inputs: {\n          input: t\n        },\n        backend: backend\n      });\n    });\n    var imags = inputs.map(function (t) {\n      return imag({\n        inputs: {\n          input: t\n        },\n        backend: backend\n      });\n    });\n    var realConcated = concatImpl(reals, axis, backend);\n    var imagConcated = concatImpl(imags, axis, backend);\n\n    var _result = complex({\n      inputs: {\n        real: realConcated,\n        imag: imagConcated\n      },\n      backend: backend\n    });\n\n    reals.forEach(function (r) {\n      return backend.disposeIntermediateTensorInfo(r);\n    });\n    imags.forEach(function (i) {\n      return backend.disposeIntermediateTensorInfo(i);\n    });\n    backend.disposeIntermediateTensorInfo(realConcated);\n    backend.disposeIntermediateTensorInfo(imagConcated);\n    return _result;\n  } // Run on cpu if dtype is string. For string, the backend represents it\n  // as Uint8Array[], where each Uint8Array is a character. Given that the\n  // computation is only on the outer array, uploading the whole data onto\n  // gpu is wasteful. Also, currently webgl doesn't have a design to\n  // upload and retrieve Uint8Array[] between cpu and gpu. Therefore, we\n  // just run the kernel on cpu if dtype is string.\n\n\n  if (dtype === 'string') {\n    var _computeTensors2D = computeTensors2D(inputs, axis, backend),\n        _tensors2D = _computeTensors2D.tensors2D,\n        _outShape = _computeTensors2D.outShape;\n\n    var inputsValShapes = _tensors2D.map(function (t) {\n      return {\n        vals: backend.readSync(t.dataId),\n        shape: t.shape\n      };\n    });\n\n    var simplyConcat = _tensors2D[0].shape[0] === 1;\n    var outVals = concatImplCPU(inputsValShapes, _outShape, dtype, simplyConcat);\n    var finalOutShape = backend_util.computeOutShape(inputs.map(function (t) {\n      return t.shape;\n    }), axis);\n    var outInfo = backend.makeTensorInfo(finalOutShape, dtype, outVals);\n\n    _tensors2D.forEach(function (t) {\n      return backend.disposeIntermediateTensorInfo(t);\n    });\n\n    return outInfo;\n  }\n\n  if (inputs.length > env().getNumber('WEBGL_MAX_TEXTURES_IN_SHADER')) {\n    var midIndex = Math.floor(inputs.length / 2);\n    var leftSide = concatImpl(inputs.slice(0, midIndex), axis, backend);\n    var rightSide = concatImpl(inputs.slice(midIndex), axis, backend);\n\n    var _result2 = concatImpl([leftSide, rightSide], axis, backend);\n\n    backend.disposeIntermediateTensorInfo(leftSide);\n    backend.disposeIntermediateTensorInfo(rightSide);\n    return _result2;\n  }\n\n  if (env().getBool('WEBGL_PACK_ARRAY_OPERATIONS') && inputs[0].shape.length > 1) {\n    var _program = new ConcatPackedProgram(inputs.map(function (t) {\n      return t.shape;\n    }), axis);\n\n    return backend.runWebGLProgram(_program, inputs, dtype);\n  }\n\n  var _computeTensors2D2 = computeTensors2D(inputs, axis, backend),\n      tensors2D = _computeTensors2D2.tensors2D,\n      outShape = _computeTensors2D2.outShape;\n\n  var program = new ConcatProgram(tensors2D.map(function (t) {\n    return t.shape;\n  }));\n  var result = backend.runWebGLProgram(program, tensors2D, dtype);\n  tensors2D.forEach(function (r) {\n    return backend.disposeIntermediateTensorInfo(r);\n  });\n  var reshapedResult = reshape({\n    inputs: {\n      x: result\n    },\n    attrs: {\n      shape: outShape\n    },\n    backend: backend\n  });\n  backend.disposeIntermediateTensorInfo(result);\n  return reshapedResult;\n}\n\nfunction computeTensors2D(inputs, axis, backend) {\n  // Any concat of n-dimensional tensors across any axis can be reduced to\n  // a concatenation of two-dimensional tensors across the axis 1 by first\n  // partitioning the axes of the original tensors into those less than the\n  // axis to be concatenated and the rest. Then reshape the tensors\n  // into a two-dimensional tensor by collapsing these two sets of axes and\n  // concatenate the resulting matrices across the axis 1, finally reshaping\n  // the result to have the proper shape.\n  var outShape = backend_util.computeOutShape(inputs.map(function (t) {\n    return t.shape;\n  }), axis);\n  var tensors2D = inputs.map(function (x) {\n    return reshape({\n      inputs: {\n        x: x\n      },\n      attrs: {\n        shape: [-1, util.sizeFromShape(x.shape.slice(axis))]\n      },\n      backend: backend\n    });\n  });\n  return {\n    tensors2D: tensors2D,\n    outShape: outShape\n  };\n}","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Concat, util } from '@tensorflow/tfjs-core';\nimport { concatImpl } from './Concat_impl';\nimport { identity } from './Identity';\nexport function concat(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var axis = attrs.axis;\n  var $axis = util.parseAxisParam(axis, inputs[0].shape)[0];\n  var outShape = backend_util.computeOutShape(inputs.map(function (t) {\n    return t.shape;\n  }), $axis);\n\n  if (util.sizeFromShape(outShape) === 0) {\n    return backend.makeTensorInfo(outShape, inputs[0].dtype, []);\n  } // Keep only non-empty tensors (ignore tensors with 0 in their shape).\n\n\n  var $inputs = inputs.filter(function (t) {\n    return util.sizeFromShape(t.shape) > 0;\n  });\n\n  if ($inputs.length === 1) {\n    return identity({\n      inputs: {\n        x: $inputs[0]\n      },\n      backend: backend\n    });\n  }\n\n  var shapes = $inputs.map(function (t) {\n    return t.shape;\n  });\n  backend_util.assertParamsConsistent(shapes, $axis);\n  return concatImpl($inputs, $axis, backend);\n}\nexport var concatConfig = {\n  kernelName: Concat,\n  backendName: 'webgl',\n  kernelFunc: concat\n};","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var Conv2DProgram = function Conv2DProgram(convInfo) {\n  var addBias = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var activation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  var hasPreluActivationWeights = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var hasLeakyreluAlpha = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n  _classCallCheck(this, Conv2DProgram);\n\n  this.variableNames = ['x', 'W'];\n  this.outputShape = convInfo.outShape;\n  var padTop = convInfo.padInfo.top;\n  var padLeft = convInfo.padInfo.left;\n  var strideHeight = convInfo.strideHeight;\n  var strideWidth = convInfo.strideWidth;\n  var dilationHeight = convInfo.dilationHeight;\n  var dilationWidth = convInfo.dilationWidth;\n  var filterHeight = convInfo.filterHeight;\n  var filterWidth = convInfo.filterWidth;\n  var inputDepthNearestVec4 = Math.floor(convInfo.inChannels / 4) * 4;\n  var inputDepthVec4Remainder = convInfo.inChannels % 4;\n  var isChannelsLast = convInfo.dataFormat === 'channelsLast';\n  var rowDim = isChannelsLast ? 1 : 2;\n  var colDim = isChannelsLast ? 2 : 3;\n  var channelDim = isChannelsLast ? 3 : 1;\n  var activationSnippet = '',\n      applyActivationSnippet = '';\n\n  if (activation) {\n    if (hasPreluActivationWeights) {\n      activationSnippet = \"float activation(float a) {\\n          float b = getPreluActivationWeightsAtOutCoords();\\n          \".concat(activation, \"\\n        }\");\n    } else if (hasLeakyreluAlpha) {\n      activationSnippet = \"float activation(float a) {\\n          float b = getLeakyreluAlphaAtOutCoords();\\n          \".concat(activation, \"\\n        }\");\n    } else {\n      activationSnippet = \"\\n          float activation(float x) {\\n            \".concat(activation, \"\\n          }\\n        \");\n    }\n\n    applyActivationSnippet = \"result = activation(result);\";\n  }\n\n  var addBiasSnippet = addBias ? 'result += getBiasAtOutCoords();' : '';\n\n  if (addBias) {\n    this.variableNames.push('bias');\n  }\n\n  if (hasPreluActivationWeights) {\n    this.variableNames.push('preluActivationWeights');\n  }\n\n  if (hasLeakyreluAlpha) {\n    this.variableNames.push('leakyreluAlpha');\n  }\n\n  this.userCode = \"\\n      \".concat(activationSnippet, \"\\n\\n      const ivec2 strides = ivec2(\").concat(strideHeight, \", \").concat(strideWidth, \");\\n      const ivec2 pads = ivec2(\").concat(padTop, \", \").concat(padLeft, \");\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int d2 = coords[\").concat(channelDim, \"];\\n\\n        ivec2 xRCCorner =\\n            ivec2(coords[\").concat(rowDim, \"], coords[\").concat(colDim, \"]) * strides - pads;\\n        int xRCorner = xRCCorner.x;\\n        int xCCorner = xRCCorner.y;\\n\\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n        for (int wR = 0; wR < \").concat(filterHeight, \"; wR++) {\\n          int xR = xRCorner + wR * \").concat(dilationHeight, \";\\n\\n          if (xR < 0 || xR >= \").concat(convInfo.inHeight, \") {\\n            continue;\\n          }\\n\\n          for (int wC = 0; wC < \").concat(filterWidth, \"; wC++) {\\n            int xC = xCCorner + wC * \").concat(dilationWidth, \";\\n\\n            if (xC < 0 || xC >= \").concat(convInfo.inWidth, \") {\\n              continue;\\n            }\\n\\n            for (int d1 = 0; d1 < \").concat(inputDepthNearestVec4, \"; d1 += 4) {\\n              vec4 wValues = vec4(\\n                getW(wR, wC, d1, d2),\\n                getW(wR, wC, d1 + 1, d2),\\n                getW(wR, wC, d1 + 2, d2),\\n                getW(wR, wC, d1 + 3, d2)\\n              );\\n\\n              if (\").concat(isChannelsLast, \") {\\n                vec4 xValues = vec4(\\n                  getX(batch, xR, xC, d1),\\n                  getX(batch, xR, xC, d1 + 1),\\n                  getX(batch, xR, xC, d1 + 2),\\n                  getX(batch, xR, xC, d1 + 3)\\n                );\\n                dotProd += dot(xValues, wValues);\\n              } else {\\n                vec4 xValues = vec4(\\n                  getX(batch, d1, xR, xC),\\n                  getX(batch, d1 + 1, xR, xC),\\n                  getX(batch, d1 + 2, xR, xC),\\n                  getX(batch, d1 + 3, xR, xC)\\n                );\\n                dotProd += dot(xValues, wValues);\\n              }\\n            }\\n\\n            if (\").concat(inputDepthVec4Remainder === 1, \") {\\n\\n              if (\").concat(isChannelsLast, \") {\\n                dotProd +=\\n                    getX(batch, xR, xC, \").concat(inputDepthNearestVec4, \") *\\n                    getW(wR, wC, \").concat(inputDepthNearestVec4, \", d2);\\n              } else {\\n                dotProd +=\\n                    getX(batch, \").concat(inputDepthNearestVec4, \", xR, xC) *\\n                    getW(wR, wC, \").concat(inputDepthNearestVec4, \", d2);\\n              }\\n\\n            } else if (\").concat(inputDepthVec4Remainder === 2, \") {\\n              vec2 wValues = vec2(\\n                getW(wR, wC, \").concat(inputDepthNearestVec4, \", d2),\\n                getW(wR, wC, \").concat(inputDepthNearestVec4, \" + 1, d2)\\n              );\\n\\n              if (\").concat(isChannelsLast, \") {\\n                vec2 xValues = vec2(\\n                  getX(batch, xR, xC, \").concat(inputDepthNearestVec4, \"),\\n                  getX(batch, xR, xC, \").concat(inputDepthNearestVec4, \" + 1)\\n                );\\n                dotProd += dot(xValues, wValues);\\n              } else {\\n                vec2 xValues = vec2(\\n                  getX(batch, \").concat(inputDepthNearestVec4, \", xR, xC),\\n                  getX(batch, \").concat(inputDepthNearestVec4, \" + 1, xR, xC)\\n                );\\n                dotProd += dot(xValues, wValues);\\n              }\\n\\n            } else if (\").concat(inputDepthVec4Remainder === 3, \") {\\n              vec3 wValues = vec3(\\n                getW(wR, wC, \").concat(inputDepthNearestVec4, \", d2),\\n                getW(wR, wC, \").concat(inputDepthNearestVec4, \" + 1, d2),\\n                getW(wR, wC, \").concat(inputDepthNearestVec4, \" + 2, d2)\\n              );\\n\\n              if (\").concat(isChannelsLast, \") {\\n                vec3 xValues = vec3(\\n                  getX(batch, xR, xC, \").concat(inputDepthNearestVec4, \"),\\n                  getX(batch, xR, xC, \").concat(inputDepthNearestVec4, \" + 1),\\n                  getX(batch, xR, xC, \").concat(inputDepthNearestVec4, \" + 2)\\n                );\\n                dotProd += dot(xValues, wValues);\\n              } else {\\n                vec3 xValues = vec3(\\n                  getX(batch, \").concat(inputDepthNearestVec4, \", xR, xC),\\n                  getX(batch, \").concat(inputDepthNearestVec4, \" + 1, xR, xC),\\n                  getX(batch, \").concat(inputDepthNearestVec4, \" + 2, xR, xC)\\n                );\\n                dotProd += dot(xValues, wValues);\\n              }\\n\\n            }\\n          }\\n        }\\n\\n        float result = dotProd;\\n        \").concat(addBiasSnippet, \"\\n        \").concat(applyActivationSnippet, \"\\n        setOutput(result);\\n      }\\n    \");\n};\nexport var Conv3DProgram = function Conv3DProgram(convInfo) {\n  _classCallCheck(this, Conv3DProgram);\n\n  this.variableNames = ['x', 'W'];\n  this.outputShape = convInfo.outShape;\n  var padFront = convInfo.padInfo.front;\n  var padTop = convInfo.padInfo.top;\n  var padLeft = convInfo.padInfo.left;\n  var strideDepth = convInfo.strideDepth;\n  var strideHeight = convInfo.strideHeight;\n  var strideWidth = convInfo.strideWidth;\n  var dilationDepth = convInfo.dilationDepth;\n  var dilationHeight = convInfo.dilationHeight;\n  var dilationWidth = convInfo.dilationWidth;\n  var filterDepth = convInfo.filterDepth;\n  var filterHeight = convInfo.filterHeight;\n  var filterWidth = convInfo.filterWidth;\n  var inputDepthNearestVec4 = Math.floor(convInfo.inChannels / 4) * 4;\n  var inputDepthVec4Remainder = convInfo.inChannels % 4;\n  this.userCode = \"\\n      const ivec3 strides = ivec3(\".concat(strideDepth, \", \").concat(strideHeight, \", \").concat(strideWidth, \");\\n      const ivec3 pads = ivec3(\").concat(padFront, \", \").concat(padTop, \", \").concat(padLeft, \");\\n\\n      void main() {\\n        ivec5 coords = getOutputCoords();\\n        int batch = coords.x;\\n        int d2 = coords.u;\\n\\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\\n        int xFCorner = xFRCCorner.x;\\n        int xRCorner = xFRCCorner.y;\\n        int xCCorner = xFRCCorner.z;\\n\\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\\n        // values in that axis.\\n        float dotProd = 0.0;\\n        for (int wF = 0; wF < \").concat(filterDepth, \"; wF++) {\\n          int xF = xFCorner + wF * \").concat(dilationDepth, \";\\n\\n          if (xF < 0 || xF >= \").concat(convInfo.inDepth, \") {\\n            continue;\\n          }\\n\\n          for (int wR = 0; wR < \").concat(filterHeight, \"; wR++) {\\n            int xR = xRCorner + wR * \").concat(dilationHeight, \";\\n\\n            if (xR < 0 || xR >= \").concat(convInfo.inHeight, \") {\\n              continue;\\n            }\\n\\n            for (int wC = 0; wC < \").concat(filterWidth, \"; wC++) {\\n              int xC = xCCorner + wC * \").concat(dilationWidth, \";\\n\\n              if (xC < 0 || xC >= \").concat(convInfo.inWidth, \") {\\n                continue;\\n              }\\n\\n              for (int d1 = 0; d1 < \").concat(inputDepthNearestVec4, \"; d1 += 4) {\\n                vec4 xValues = vec4(\\n                  getX(batch, xF, xR, xC, d1),\\n                  getX(batch, xF, xR, xC, d1 + 1),\\n                  getX(batch, xF, xR, xC, d1 + 2),\\n                  getX(batch, xF, xR, xC, d1 + 3)\\n                );\\n                vec4 wValues = vec4(\\n                  getW(wF, wR, wC, d1, d2),\\n                  getW(wF, wR, wC, d1 + 1, d2),\\n                  getW(wF, wR, wC, d1 + 2, d2),\\n                  getW(wF, wR, wC, d1 + 3, d2)\\n                );\\n\\n                dotProd += dot(xValues, wValues);\\n              }\\n\\n              if (\").concat(inputDepthVec4Remainder === 1, \") {\\n                dotProd +=\\n                  getX(batch, xF, xR, xC, \").concat(inputDepthNearestVec4, \") *\\n                  getW(wF, wR, wC, \").concat(inputDepthNearestVec4, \", d2);\\n              } else if (\").concat(inputDepthVec4Remainder === 2, \") {\\n                vec2 xValues = vec2(\\n                  getX(batch, xF, xR, xC, \").concat(inputDepthNearestVec4, \"),\\n                  getX(batch, xF, xR, xC, \").concat(inputDepthNearestVec4, \" + 1)\\n                );\\n                vec2 wValues = vec2(\\n                  getW(wF, wR, wC, \").concat(inputDepthNearestVec4, \", d2),\\n                  getW(wF, wR, wC, \").concat(inputDepthNearestVec4, \" + 1, d2)\\n                );\\n                dotProd += dot(xValues, wValues);\\n              } else if (\").concat(inputDepthVec4Remainder === 3, \") {\\n                vec3 xValues = vec3(\\n                  getX(batch, xF, xR, xC, \").concat(inputDepthNearestVec4, \"),\\n                  getX(batch, xF, xR, xC, \").concat(inputDepthNearestVec4, \" + 1),\\n                  getX(batch, xF, xR, xC, \").concat(inputDepthNearestVec4, \" + 2)\\n                );\\n                vec3 wValues = vec3(\\n                  getW(wF, wR, wC, \").concat(inputDepthNearestVec4, \", d2),\\n                  getW(wF, wR, wC, \").concat(inputDepthNearestVec4, \" + 1, d2),\\n                  getW(wF, wR, wC, \").concat(inputDepthNearestVec4, \" + 2, d2)\\n                );\\n                dotProd += dot(xValues, wValues);\\n              }\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \");\n};","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getGlslDifferences } from './glsl_version';\nexport var Im2ColPackedProgram = function Im2ColPackedProgram(outputShape, inputShape, convInfo) {\n  _classCallCheck(this, Im2ColPackedProgram);\n\n  this.variableNames = ['A'];\n  this.packedInputs = true;\n  this.packedOutput = true;\n  this.outputShape = outputShape;\n  var filterWidth = convInfo.filterWidth,\n      inChannels = convInfo.inChannels,\n      strideWidth = convInfo.strideWidth,\n      strideHeight = convInfo.strideHeight,\n      padInfo = convInfo.padInfo,\n      outWidth = convInfo.outWidth,\n      dilationWidth = convInfo.dilationWidth,\n      dilationHeight = convInfo.dilationHeight,\n      dataFormat = convInfo.dataFormat;\n  var left = padInfo.left,\n      top = padInfo.top;\n  var itemsPerBlockRow = inChannels * filterWidth;\n  var glsl = getGlslDifferences();\n  var isChannelsLast = dataFormat === 'channelsLast';\n  var rowDim = isChannelsLast ? 0 : 1;\n  var colDim = isChannelsLast ? 1 : 2;\n  var unrolled = \"\";\n\n  for (var row = 0; row <= 1; row++) {\n    for (var col = 0; col <= 1; col++) {\n      unrolled += \"\\n          blockIndex = rc.y + \".concat(col, \";\\n          pos = rc.x + \").concat(row, \";\\n\\n          if(blockIndex < \").concat(outputShape[1], \" && pos < \").concat(outputShape[0], \") {\\n            offsetY = int(blockIndex / (\").concat(outWidth, \")) * \").concat(strideHeight, \" - \").concat(top, \";\\n            d0 = offsetY + \").concat(dilationHeight, \" * (pos / \").concat(itemsPerBlockRow, \");\\n\\n            if(d0 < \").concat(inputShape[rowDim], \" && d0 >= 0) {\\n\\n              offsetX = int(mod(float(blockIndex), \").concat(outWidth, \".) * \").concat(strideWidth, \". - \").concat(left, \".);\\n              d1 = offsetX + \").concat(dilationWidth, \" * (int(mod(float(pos), \").concat(itemsPerBlockRow, \".) / \").concat(inChannels, \".));\\n\\n              if(d1 < \").concat(inputShape[colDim], \" && d1 >= 0) {\\n\\n                ch = int(mod(float(pos), \").concat(inChannels, \".));\\n\\n                if (\").concat(isChannelsLast, \") {\\n                  innerDims = vec2(d1, ch);\\n                  result[\").concat(row * 2 + col, \"] = getChannel(\\n                    getA(d0, int(innerDims.x),\\n                    int(innerDims.y)), innerDims);\\n                } else {\\n                  innerDims = vec2(d0, d1);\\n                  result[\").concat(row * 2 + col, \"] = getChannel(\\n                    getA(ch, int(innerDims.x),\\n                    int(innerDims.y)), innerDims);\\n                }\\n              }\\n            }\\n          }\\n        \");\n    }\n  }\n\n  this.userCode = \"\\n      void main() {\\n        ivec2 rc = getOutputCoords();\\n\\n        vec4 result = vec4(0);\\n\\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\\n        vec2 innerDims;\\n\\n        \".concat(unrolled, \"\\n\\n        \").concat(glsl.output, \" = result;\\n      }\\n    \");\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env, util } from '@tensorflow/tfjs-core';\nimport { Im2ColPackedProgram } from '../im2col_packed_gpu';\nimport { mapActivationToShaderProgram } from '../kernel_utils/kernel_funcs_utils';\nimport { MatMulPackedProgram } from '../mulmat_packed_gpu';\nimport * as webgl_util from '../webgl_util';\nimport { batchMatMulImpl, MATMUL_SHARED_DIM_THRESHOLD } from './BatchMatMul_impl';\nimport { identity } from './Identity';\nimport { reshape } from './Reshape'; // For 1x1 kernels that iterate through every point in the input, convolution\n// can be expressed as matrix multiplication (without need for memory\n// remapping).\n\nexport function conv2dByMatMul(_ref) {\n  var x = _ref.x,\n      filter = _ref.filter,\n      convInfo = _ref.convInfo,\n      backend = _ref.backend,\n      _ref$bias = _ref.bias,\n      bias = _ref$bias === void 0 ? null : _ref$bias,\n      _ref$preluActivationW = _ref.preluActivationWeights,\n      preluActivationWeights = _ref$preluActivationW === void 0 ? null : _ref$preluActivationW,\n      _ref$leakyreluAlpha = _ref.leakyreluAlpha,\n      leakyreluAlpha = _ref$leakyreluAlpha === void 0 ? 0 : _ref$leakyreluAlpha,\n      _ref$activation = _ref.activation,\n      activation = _ref$activation === void 0 ? null : _ref$activation;\n  // Reshapes conv2D input to 2D tensors, uses matMul and then reshape the\n  // result from 2D to 4D.\n  var xShape = x.shape;\n  var xTexData = backend.texData.get(x.dataId);\n  var sharedMatMulDim = convInfo.inChannels;\n  var outerShapeX = xShape[0] * xShape[1] * xShape[2];\n  var outerShapeFilter = convInfo.outChannels;\n  var isChannelsLast = convInfo.dataFormat === 'channelsLast';\n  var transposeA = false;\n  var transposeB = false;\n  var out;\n  var intermediates = []; // TODO: Once reduction ops are packed, batchMatMul will always be packed\n  // and we can remove this condition.\n\n  var batchMatMulWillBeUnpacked = (outerShapeX === 1 || outerShapeFilter === 1) && sharedMatMulDim > MATMUL_SHARED_DIM_THRESHOLD;\n  var reshapeWillBeExpensive = xShape[2] % 2 !== 0 && !!xTexData.isPacked;\n\n  if (batchMatMulWillBeUnpacked || !env().getBool('WEBGL_LAZILY_UNPACK') || !env().getBool('WEBGL_PACK_BINARY_OPERATIONS') || !reshapeWillBeExpensive) {\n    var targetShape = isChannelsLast ? xShape[0] * xShape[1] * xShape[2] : xShape[0] * xShape[2] * xShape[3];\n    var xReshaped = reshape({\n      inputs: {\n        x: x\n      },\n      backend: backend,\n      attrs: {\n        shape: [1, targetShape, convInfo.inChannels]\n      }\n    });\n    var filterReshaped = reshape({\n      inputs: {\n        x: filter\n      },\n      backend: backend,\n      attrs: {\n        shape: [1, convInfo.inChannels, convInfo.outChannels]\n      }\n    });\n    var result = batchMatMulImpl({\n      a: xReshaped,\n      b: filterReshaped,\n      transposeA: transposeA,\n      transposeB: transposeB,\n      backend: backend,\n      bias: bias,\n      activation: activation,\n      preluActivationWeights: preluActivationWeights,\n      leakyreluAlpha: leakyreluAlpha\n    });\n    out = reshape({\n      inputs: {\n        x: result\n      },\n      backend: backend,\n      attrs: {\n        shape: convInfo.outShape\n      }\n    });\n    intermediates.push(xReshaped);\n    intermediates.push(filterReshaped);\n    intermediates.push(result);\n  } else {\n    // Following optimization is specific to packed |x| with odd row count\n    // (For example, in channelLast mode, 'row count' refers to x.shape[2]):\n    // we avoid expensive packed 2x2 reshape by padding row count to next,\n    // even number. When x.shape[2] is odd, the result of packed batchMatMul is\n    // the same (has the same texture layout and and values in the texture) as\n    // it is for even x.shape[2] + 1. We make the odd-rows tensor to look like\n    // even-rows tensor before the operation and, after the batchMatMul,\n    // fix the even-rows result to have odd number of rows.\n    var _targetShape = isChannelsLast ? xShape[0] * xShape[1] * (xShape[2] + 1) : xShape[0] * xShape[2] * (xShape[3] + 1);\n\n    var _xReshaped = {\n      dataId: x.dataId,\n      shape: [1, _targetShape, convInfo.inChannels],\n      dtype: x.dtype\n    }; // xTexData.shape gets referenced from GPGPUBinary.inShapeInfos.\n    // Decrementing row count, after batchMatMul->...->compileProgram leads to\n    // invalid row count within the reference in GPGPUBinary.inShapeInfos.\n    // Alternative fix would be to provide a copy to GPGPUBinary.inShapeInfos\n    // in compileProgram method, but that would affect compilation of all\n    // programs - instead, provide a copy here, with even row count, before\n    // calling batchMatMul->...->compileProgram and after that, the original\n    // xTexData.shape is restored.\n\n    var originalXTexDataShape = xTexData.shape;\n    xTexData.shape = xTexData.shape.slice();\n    xTexData.shape[xTexData.shape.length - 2]++;\n    util.assert(webgl_util.isReshapeFree(xTexData.shape, _xReshaped.shape), function () {\n      return \"packed reshape \".concat(xTexData.shape, \" to \").concat(_xReshaped.shape, \" isn't free\");\n    });\n\n    var _filterReshaped = reshape({\n      inputs: {\n        x: filter\n      },\n      backend: backend,\n      attrs: {\n        shape: [1, convInfo.inChannels, convInfo.outChannels]\n      }\n    });\n\n    intermediates.push(_filterReshaped);\n    var pointwiseConv = batchMatMulImpl({\n      a: _xReshaped,\n      b: _filterReshaped,\n      backend: backend,\n      transposeA: transposeA,\n      transposeB: transposeB,\n      bias: bias,\n      activation: activation,\n      preluActivationWeights: preluActivationWeights,\n      leakyreluAlpha: leakyreluAlpha\n    });\n    var pointwiseConvTexData = backend.texData.get(pointwiseConv.dataId);\n    util.assert(pointwiseConvTexData.isPacked, function () {\n      return 'batchMatMul result is expected to be packed';\n    }); // Restore the input shape to original.\n\n    xTexData.shape = originalXTexDataShape; // Set the output shape - there is no need for expensive reshape as data\n    // layout is already correct.\n\n    pointwiseConvTexData.shape = convInfo.outShape;\n    out = identity({\n      inputs: {\n        x: pointwiseConv\n      },\n      backend: backend\n    });\n    out.shape = convInfo.outShape;\n    intermediates.push(pointwiseConv);\n  }\n\n  for (var _i = 0, _intermediates = intermediates; _i < _intermediates.length; _i++) {\n    var i = _intermediates[_i];\n    backend.disposeIntermediateTensorInfo(i);\n  }\n\n  return out;\n} // Implements the im2row algorithm as outlined in \"High Performance\n// Convolutional Neural Networks for Document Processing\" (Suvisoft, 2006)\n\nexport function conv2dWithIm2Row(_ref2) {\n  var x = _ref2.x,\n      filter = _ref2.filter,\n      convInfo = _ref2.convInfo,\n      backend = _ref2.backend,\n      _ref2$bias = _ref2.bias,\n      bias = _ref2$bias === void 0 ? null : _ref2$bias,\n      _ref2$preluActivation = _ref2.preluActivationWeights,\n      preluActivationWeights = _ref2$preluActivation === void 0 ? null : _ref2$preluActivation,\n      _ref2$leakyreluAlpha = _ref2.leakyreluAlpha,\n      leakyreluAlpha = _ref2$leakyreluAlpha === void 0 ? 0 : _ref2$leakyreluAlpha,\n      _ref2$activation = _ref2.activation,\n      activation = _ref2$activation === void 0 ? null : _ref2$activation;\n  // Rearranges conv2d input so each block to be convolved over forms the\n  // column of a new matrix with shape [filterWidth * filterHeight *\n  // inChannels, outHeight * outWidth]. The filter is also rearranged so each\n  // output channel forms a row of a new matrix with shape [outChannels,\n  // filterWidth * filterHeight * inChannels]. The convolution is then\n  // computed by multiplying these matrices and reshaping the result.\n  var filterWidth = convInfo.filterWidth,\n      filterHeight = convInfo.filterHeight,\n      inChannels = convInfo.inChannels,\n      outWidth = convInfo.outWidth,\n      outHeight = convInfo.outHeight,\n      dataFormat = convInfo.dataFormat;\n  var isChannelsLast = dataFormat === 'channelsLast';\n  var sharedDim = filterWidth * filterHeight * inChannels;\n  var numCols = outHeight * outWidth;\n  var x2ColShape = [sharedDim, numCols];\n  var transposeA = true;\n  var transposeB = false;\n  var intermediates = [];\n  var xSqueezed = reshape({\n    inputs: {\n      x: x\n    },\n    backend: backend,\n    attrs: {\n      shape: x.shape.slice(1)\n    }\n  });\n  var w2Row = reshape({\n    inputs: {\n      x: filter\n    },\n    backend: backend,\n    attrs: {\n      shape: [1, sharedDim, util.sizeFromShape(filter.shape) / sharedDim]\n    }\n  });\n  intermediates.push(xSqueezed);\n  intermediates.push(w2Row);\n  var im2ColProgram = new Im2ColPackedProgram(x2ColShape, xSqueezed.shape, convInfo);\n  var im2Col = backend.runWebGLProgram(im2ColProgram, [xSqueezed], 'float32');\n  var im2ColReshaped = reshape({\n    inputs: {\n      x: im2Col\n    },\n    backend: backend,\n    attrs: {\n      shape: [1, x2ColShape[0], x2ColShape[1]]\n    }\n  });\n  intermediates.push(im2Col);\n  intermediates.push(im2ColReshaped);\n  var hasBias = bias != null;\n  var hasPreluActivationWeights = preluActivationWeights != null;\n  var hasLeakyreluAlpha = activation === 'leakyrelu';\n  var fusedActivation = activation ? mapActivationToShaderProgram(activation, true) : null;\n  var matmulProgram = new MatMulPackedProgram(im2ColReshaped.shape, w2Row.shape, [1, numCols, convInfo.outChannels], transposeA, transposeB, hasBias, fusedActivation, hasPreluActivationWeights, hasLeakyreluAlpha);\n  var inputs = [im2ColReshaped, w2Row];\n\n  if (bias) {\n    inputs.push(bias);\n  }\n\n  if (hasPreluActivationWeights) {\n    inputs.push(preluActivationWeights);\n  }\n\n  if (hasLeakyreluAlpha) {\n    var $leakyreluAlpha = backend.makeTensorInfo([], 'float32', util.createScalarValue(leakyreluAlpha, 'float32'));\n    inputs.push($leakyreluAlpha);\n    intermediates.push($leakyreluAlpha);\n  }\n\n  var product = backend.runWebGLProgram(matmulProgram, inputs, 'float32');\n  var outShape = isChannelsLast ? [1, outHeight, outWidth, convInfo.outChannels] : [1, convInfo.outChannels, outHeight, outWidth];\n  var out = reshape({\n    inputs: {\n      x: product\n    },\n    backend: backend,\n    attrs: {\n      shape: outShape\n    }\n  });\n  intermediates.push(product);\n\n  for (var _i2 = 0, _intermediates2 = intermediates; _i2 < _intermediates2.length; _i2++) {\n    var i = _intermediates2[_i2];\n    backend.disposeIntermediateTensorInfo(i);\n  }\n\n  return out;\n}","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Conv2D, env } from '@tensorflow/tfjs-core';\nimport { Conv2DProgram } from '../conv_gpu';\nimport { conv2dByMatMul, conv2dWithIm2Row } from './Conv2D_impl';\nimport { reshape } from './Reshape';\nexport function conv2d(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x,\n      filter = inputs.filter;\n  var strides = attrs.strides,\n      pad = attrs.pad,\n      dataFormat = attrs.dataFormat,\n      dilations = attrs.dilations,\n      dimRoundingMode = attrs.dimRoundingMode;\n  var $dataFormat = backend_util.convertConv2DDataFormat(dataFormat);\n  var convInfo = backend_util.computeConv2DInfo(x.shape, filter.shape, strides, dilations, pad, dimRoundingMode, false\n  /* depthwise */\n  , $dataFormat);\n  var out;\n\n  if (convInfo.filterHeight === 1 && convInfo.filterWidth === 1 && convInfo.dilationHeight === 1 && convInfo.dilationWidth === 1 && convInfo.strideHeight === 1 && convInfo.strideWidth === 1 && (convInfo.padInfo.type === 'SAME' || convInfo.padInfo.type === 'VALID')) {\n    out = conv2dByMatMul({\n      x: x,\n      filter: filter,\n      convInfo: convInfo,\n      backend: backend\n    });\n  } else if (env().getBool('WEBGL_CONV_IM2COL') && x.shape[0] === 1) {\n    out = conv2dWithIm2Row({\n      x: x,\n      filter: filter,\n      convInfo: convInfo,\n      backend: backend\n    });\n  } else {\n    var program = new Conv2DProgram(convInfo);\n    out = backend.runWebGLProgram(program, [x, filter], 'float32');\n  }\n\n  var outReshaped = reshape({\n    inputs: {\n      x: out\n    },\n    backend: backend,\n    attrs: {\n      shape: convInfo.outShape\n    }\n  });\n  backend.disposeIntermediateTensorInfo(out);\n  return outReshaped;\n}\nexport var conv2DConfig = {\n  kernelName: Conv2D,\n  backendName: 'webgl',\n  kernelFunc: conv2d\n};","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var Conv2DDerFilterProgram = function Conv2DDerFilterProgram(convInfo) {\n  _classCallCheck(this, Conv2DDerFilterProgram);\n\n  this.variableNames = ['x', 'dy'];\n  this.outputShape = convInfo.filterShape;\n  var strideHeight = convInfo.strideHeight;\n  var strideWidth = convInfo.strideWidth;\n  var padTop = convInfo.padInfo.top;\n  var padLeft = convInfo.padInfo.left;\n  var isChannelsLast = convInfo.dataFormat === 'channelsLast';\n  this.userCode = \"\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int wR = coords.x;\\n        int wC = coords.y;\\n        int d1 = coords.z;\\n        int d2 = coords.w;\\n\\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n\\n        for (int b = 0; b < \".concat(convInfo.batchSize, \"; b++) {\\n          for (int yR = 0; yR < \").concat(convInfo.outHeight, \"; yR++) {\\n            int xR = wR + yR * \").concat(strideHeight, \" - \").concat(padTop, \";\\n\\n            if (xR < 0 || xR >= \").concat(convInfo.inHeight, \") {\\n              continue;\\n            }\\n\\n            for (int yC = 0; yC < \").concat(convInfo.outWidth, \"; yC++) {\\n              int xC = wC + yC * \").concat(strideWidth, \" - \").concat(padLeft, \";\\n\\n              if (xC < 0 || xC >= \").concat(convInfo.inWidth, \") {\\n                continue;\\n              }\\n\\n              if (\").concat(isChannelsLast, \") {\\n                float dyValue = getDy(b, yR, yC, d2);\\n                float xValue = getX(b, xR, xC, d1);\\n                dotProd += (xValue * dyValue);\\n              } else {\\n                float dyValue = getDy(b, d2, yR, yC);\\n                float xValue = getX(b, d1, xR, xC);\\n                dotProd += (xValue * dyValue);\\n              }\\n\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \");\n};\nexport var Conv2DDerInputProgram = function Conv2DDerInputProgram(convInfo) {\n  _classCallCheck(this, Conv2DDerInputProgram);\n\n  this.variableNames = ['dy', 'W'];\n  this.outputShape = convInfo.inShape;\n  var filterHeight = convInfo.filterHeight;\n  var filterWidth = convInfo.filterWidth;\n  var strideHeight = convInfo.strideHeight;\n  var strideWidth = convInfo.strideWidth;\n  var isChannelsLast = convInfo.dataFormat === 'channelsLast';\n  var padTop = filterHeight - 1 - convInfo.padInfo.top;\n  var padLeft = filterWidth - 1 - convInfo.padInfo.left;\n  var rowDim = isChannelsLast ? 1 : 2;\n  var colDim = isChannelsLast ? 2 : 3;\n  var channelDim = isChannelsLast ? 3 : 1;\n  this.userCode = \"\\n      const ivec2 pads = ivec2(\".concat(padTop, \", \").concat(padLeft, \");\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int d1 = coords[\").concat(channelDim, \"];\\n\\n        ivec2 dyCorner = ivec2(coords[\").concat(rowDim, \"], coords[\").concat(colDim, \"]) - pads;\\n        int dyRCorner = dyCorner.x;\\n        int dyCCorner = dyCorner.y;\\n\\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n        for (int wR = 0; wR < \").concat(filterHeight, \"; wR++) {\\n          float dyR = float(dyRCorner + wR) / \").concat(strideHeight, \".0;\\n\\n          if (dyR < 0.0 || dyR >= \").concat(convInfo.outHeight, \".0 || fract(dyR) > 0.0) {\\n            continue;\\n          }\\n          int idyR = int(dyR);\\n\\n          int wRPerm = \").concat(filterHeight, \" - 1 - wR;\\n\\n          for (int wC = 0; wC < \").concat(filterWidth, \"; wC++) {\\n            float dyC = float(dyCCorner + wC) / \").concat(strideWidth, \".0;\\n\\n            if (dyC < 0.0 || dyC >= \").concat(convInfo.outWidth, \".0 ||\\n                fract(dyC) > 0.0) {\\n              continue;\\n            }\\n            int idyC = int(dyC);\\n\\n            int wCPerm = \").concat(filterWidth, \" - 1 - wC;\\n\\n            for (int d2 = 0; d2 < \").concat(convInfo.outChannels, \"; d2++) {\\n\\n              if (\").concat(isChannelsLast, \") {\\n                float xValue = getDy(batch, idyR, idyC, d2);\\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\\n                dotProd += xValue * wValue;\\n              } else {\\n                float xValue = getDy(batch, d2, idyR, idyC);\\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\\n                dotProd += xValue * wValue;\\n              }\\n\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \");\n};\nexport var Conv3DDerFilterProgram = function Conv3DDerFilterProgram(convInfo) {\n  _classCallCheck(this, Conv3DDerFilterProgram);\n\n  this.variableNames = ['x', 'dy'];\n  this.outputShape = convInfo.filterShape;\n  var strideDepth = convInfo.strideDepth;\n  var strideHeight = convInfo.strideHeight;\n  var strideWidth = convInfo.strideWidth;\n  var padFront = convInfo.padInfo.front;\n  var padTop = convInfo.padInfo.top;\n  var padLeft = convInfo.padInfo.left;\n  this.userCode = \"\\n      void main() {\\n        ivec5 coords = getOutputCoords();\\n        int wF = coords.x;\\n        int wR = coords.y;\\n        int wC = coords.z;\\n        int d1 = coords.w;\\n        int d2 = coords.u;\\n\\n        float dotProd = 0.0;\\n\\n        for (int b = 0; b < \".concat(convInfo.batchSize, \"; b++) {\\n          for (int yF = 0; yF < \").concat(convInfo.outDepth, \"; yF++) {\\n            int xF = wF + yF * \").concat(strideDepth, \" - \").concat(padFront, \";\\n\\n            if (xF < 0 || xF >= \").concat(convInfo.inDepth, \") {\\n              continue;\\n            }\\n\\n            for (int yR = 0; yR < \").concat(convInfo.outHeight, \"; yR++) {\\n              int xR = wR + yR * \").concat(strideHeight, \" - \").concat(padTop, \";\\n\\n              if (xR < 0 || xR >= \").concat(convInfo.inHeight, \") {\\n                continue;\\n              }\\n\\n              for (int yC = 0; yC < \").concat(convInfo.outWidth, \"; yC++) {\\n                int xC = wC + yC * \").concat(strideWidth, \" - \").concat(padLeft, \";\\n\\n                if (xC < 0 || xC >= \").concat(convInfo.inWidth, \") {\\n                  continue;\\n                }\\n\\n                float dyValue = getDy(b, yF, yR, yC, d2);\\n                float xValue = getX(b, xF, xR, xC, d1);\\n                dotProd += (xValue * dyValue);\\n              }\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \");\n};\nexport var Conv3DDerInputProgram = function Conv3DDerInputProgram(convInfo) {\n  _classCallCheck(this, Conv3DDerInputProgram);\n\n  this.variableNames = ['dy', 'W'];\n  this.outputShape = convInfo.inShape;\n  var filterDepth = convInfo.filterDepth;\n  var filterHeight = convInfo.filterHeight;\n  var filterWidth = convInfo.filterWidth;\n  var strideDepth = convInfo.strideDepth;\n  var strideHeight = convInfo.strideHeight;\n  var strideWidth = convInfo.strideWidth;\n  var padFront = filterDepth - 1 - convInfo.padInfo.front;\n  var padTop = filterHeight - 1 - convInfo.padInfo.top;\n  var padLeft = filterWidth - 1 - convInfo.padInfo.left;\n  this.userCode = \"\\n      const ivec3 pads = ivec3(\".concat(padFront, \", \").concat(padTop, \", \").concat(padLeft, \");\\n\\n      void main() {\\n        ivec5 coords = getOutputCoords();\\n        int batch = coords.x;\\n        int d1 = coords.u;\\n\\n\\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\\n        int dyFCorner = dyCorner.x;\\n        int dyRCorner = dyCorner.y;\\n        int dyCCorner = dyCorner.z;\\n\\n        float dotProd = 0.0;\\n        for (int wF = 0; wF < \").concat(filterDepth, \"; wF++) {\\n          float dyF = float(dyFCorner + wF) / \").concat(strideDepth, \".0;\\n\\n          if (dyF < 0.0 || dyF >= \").concat(convInfo.outDepth, \".0 || fract(dyF) > 0.0) {\\n            continue;\\n          }\\n          int idyF = int(dyF);\\n\\n          int wFPerm = \").concat(filterDepth, \" - 1 - wF;\\n\\n          for (int wR = 0; wR < \").concat(filterHeight, \"; wR++) {\\n            float dyR = float(dyRCorner + wR) / \").concat(strideHeight, \".0;\\n\\n            if (dyR < 0.0 || dyR >= \").concat(convInfo.outHeight, \".0 ||\\n              fract(dyR) > 0.0) {\\n              continue;\\n            }\\n            int idyR = int(dyR);\\n\\n            int wRPerm = \").concat(filterHeight, \" - 1 - wR;\\n\\n            for (int wC = 0; wC < \").concat(filterWidth, \"; wC++) {\\n              float dyC = float(dyCCorner + wC) / \").concat(strideWidth, \".0;\\n\\n              if (dyC < 0.0 || dyC >= \").concat(convInfo.outWidth, \".0 ||\\n                  fract(dyC) > 0.0) {\\n                continue;\\n              }\\n              int idyC = int(dyC);\\n\\n              int wCPerm = \").concat(filterWidth, \" - 1 - wC;\\n\\n              for (int d2 = 0; d2 < \").concat(convInfo.outChannels, \"; d2++) {\\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\\n                dotProd += xValue * wValue;\\n              }\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \");\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Conv2DBackpropFilter } from '@tensorflow/tfjs-core';\nimport { Conv2DDerFilterProgram } from '../conv_backprop_gpu';\nexport function conv2DBackpropFilter(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x,\n      dy = inputs.dy;\n  var strides = attrs.strides,\n      pad = attrs.pad,\n      dataFormat = attrs.dataFormat,\n      dimRoundingMode = attrs.dimRoundingMode,\n      filterShape = attrs.filterShape;\n  var $dataFormat = backend_util.convertConv2DDataFormat(dataFormat);\n  var convInfo = backend_util.computeConv2DInfo(x.shape, filterShape, strides, 1\n  /* dilations */\n  , pad, dimRoundingMode, false\n  /* depthwise */\n  , $dataFormat);\n  var program = new Conv2DDerFilterProgram(convInfo);\n  return backend.runWebGLProgram(program, [x, dy], 'float32');\n}\nexport var conv2DBackpropFilterConfig = {\n  kernelName: Conv2DBackpropFilter,\n  backendName: 'webgl',\n  kernelFunc: conv2DBackpropFilter\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Conv2DBackpropInput } from '@tensorflow/tfjs-core';\nimport { Conv2DDerInputProgram } from '../conv_backprop_gpu';\nexport function conv2DBackpropInput(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var dy = inputs.dy,\n      filter = inputs.filter;\n  var inputShape = attrs.inputShape,\n      strides = attrs.strides,\n      pad = attrs.pad,\n      dataFormat = attrs.dataFormat,\n      dimRoundingMode = attrs.dimRoundingMode;\n  var $dataFormat = backend_util.convertConv2DDataFormat(dataFormat);\n  var convInfo = backend_util.computeConv2DInfo(inputShape, filter.shape, strides, 1\n  /* dilations */\n  , pad, dimRoundingMode, false, $dataFormat);\n  var program = new Conv2DDerInputProgram(convInfo);\n  return backend.runWebGLProgram(program, [dy, filter], 'float32');\n}\nexport var conv2DBackpropInputConfig = {\n  kernelName: Conv2DBackpropInput,\n  backendName: 'webgl',\n  kernelFunc: conv2DBackpropInput\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Conv3D } from '@tensorflow/tfjs-core';\nimport { Conv3DProgram } from '../conv_gpu';\nexport function conv3D(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x,\n      filter = inputs.filter;\n  var strides = attrs.strides,\n      pad = attrs.pad,\n      dilations = attrs.dilations;\n  var convInfo = backend_util.computeConv3DInfo(x.shape, filter.shape, strides, dilations, pad);\n  var program = new Conv3DProgram(convInfo);\n  return backend.runWebGLProgram(program, [x, filter], 'float32');\n}\nexport var conv3DConfig = {\n  kernelName: Conv3D,\n  backendName: 'webgl',\n  kernelFunc: conv3D\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Conv3DBackpropFilterV2 } from '@tensorflow/tfjs-core';\nimport { Conv3DDerFilterProgram } from '../conv_backprop_gpu';\nexport function conv3DBackpropFilterV2(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x,\n      dy = inputs.dy;\n  var strides = attrs.strides,\n      pad = attrs.pad,\n      filterShape = attrs.filterShape;\n  var convInfo = backend_util.computeConv3DInfo(x.shape, filterShape, strides, 1\n  /* dilations */\n  , pad);\n  var program = new Conv3DDerFilterProgram(convInfo);\n  return backend.runWebGLProgram(program, [x, dy], 'float32');\n}\nexport var conv3DBackpropFilterV2Config = {\n  kernelName: Conv3DBackpropFilterV2,\n  backendName: 'webgl',\n  kernelFunc: conv3DBackpropFilterV2\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Conv3DBackpropInputV2 } from '@tensorflow/tfjs-core';\nimport { Conv3DDerInputProgram } from '../conv_backprop_gpu';\nexport function conv3DBackpropInput(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var dy = inputs.dy,\n      filter = inputs.filter;\n  var pad = attrs.pad,\n      strides = attrs.strides,\n      inputShape = attrs.inputShape;\n  var convInfo = backend_util.computeConv3DInfo(inputShape, filter.shape, strides, 1\n  /* dilations */\n  , pad);\n  var program = new Conv3DDerInputProgram(convInfo);\n  return backend.runWebGLProgram(program, [dy, filter], 'float32');\n}\nexport var conv3DBackpropInputConfig = {\n  kernelName: Conv3DBackpropInputV2,\n  backendName: 'webgl',\n  kernelFunc: conv3DBackpropInput\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Cos } from '@tensorflow/tfjs-core';\nimport { CHECK_NAN_SNIPPET_UNARY, unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nvar COS = CHECK_NAN_SNIPPET_UNARY + \"\\n  return cos(x);\\n\";\nexport var cos = unaryKernelFunc({\n  opSnippet: COS\n});\nexport var cosConfig = {\n  kernelName: Cos,\n  backendName: 'webgl',\n  kernelFunc: cos\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Cosh } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nvar COSH = \"\\n  float e2x = exp(-x);\\n  return (e2x + 1.0 / e2x) / 2.0;\\n\";\nexport var cosh = unaryKernelFunc({\n  opSnippet: COSH\n});\nexport var coshConfig = {\n  kernelName: Cosh,\n  backendName: 'webgl',\n  kernelFunc: cosh\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var CropAndResizeProgram = function CropAndResizeProgram(imageShape, boxShape, cropSize, method, extrapolationValue) {\n  _classCallCheck(this, CropAndResizeProgram);\n\n  this.variableNames = ['Image', 'Boxes', 'BoxInd'];\n  this.outputShape = [];\n\n  var _imageShape = _slicedToArray(imageShape, 4),\n      batch = _imageShape[0],\n      imageHeight = _imageShape[1],\n      imageWidth = _imageShape[2],\n      depth = _imageShape[3];\n\n  var _boxShape = _slicedToArray(boxShape, 1),\n      numBoxes = _boxShape[0];\n\n  var _cropSize = _slicedToArray(cropSize, 2),\n      cropHeight = _cropSize[0],\n      cropWidth = _cropSize[1];\n\n  this.outputShape = [numBoxes, cropHeight, cropWidth, depth];\n  var methodId = method === 'bilinear' ? 1 : 0;\n  var inputHeightFloat = \"\".concat(imageHeight - 1, \".0\"),\n      inputWidthFloat = \"\".concat(imageWidth - 1, \".0\");\n\n  var _ref = cropHeight > 1 ? [\"\".concat((imageHeight - 1) / (cropHeight - 1)), '(y2-y1) * height_ratio', \"y1*\".concat(inputHeightFloat, \" + float(y)*(height_scale)\")] : ['0.0', '0.0', \"0.5 * (y1+y2) * \".concat(inputHeightFloat)],\n      _ref2 = _slicedToArray(_ref, 3),\n      heightRatio = _ref2[0],\n      heightScale = _ref2[1],\n      inY = _ref2[2];\n\n  var _ref3 = cropWidth > 1 ? [\"\".concat((imageWidth - 1) / (cropWidth - 1)), '(x2-x1) * width_ratio', \"x1*\".concat(inputWidthFloat, \" + float(x)*(width_scale)\")] : ['0.0', '0.0', \"0.5 * (x1+x2) * \".concat(inputWidthFloat)],\n      _ref4 = _slicedToArray(_ref3, 3),\n      widthRatio = _ref4[0],\n      widthScale = _ref4[1],\n      inX = _ref4[2]; // Reference implementation\n  // tslint:disable-next-line:max-line-length\n  // https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/crop_and_resize_op_gpu.cu.cc\n\n\n  this.userCode = \"\\n      const float height_ratio = float(\".concat(heightRatio, \");\\n      const float width_ratio = float(\").concat(widthRatio, \");\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int y = coords[1];\\n        int x = coords[2];\\n        int d = coords[3];\\n\\n        // get box vals\\n        float y1 = getBoxes(b,0);\\n        float x1 = getBoxes(b,1);\\n        float y2 = getBoxes(b,2);\\n        float x2 = getBoxes(b,3);\\n\\n        // get image in batch index\\n        int bInd = round(getBoxInd(b));\\n        if(bInd < 0 || bInd >= \").concat(batch, \") {\\n          return;\\n        }\\n\\n        float height_scale = \").concat(heightScale, \";\\n        float width_scale = \").concat(widthScale, \";\\n\\n        float in_y = \").concat(inY, \";\\n        if( in_y < 0.0 || in_y > \").concat(inputHeightFloat, \" ) {\\n          setOutput(float(\").concat(extrapolationValue, \"));\\n          return;\\n        }\\n        float in_x = \").concat(inX, \";\\n        if( in_x < 0.0 || in_x > \").concat(inputWidthFloat, \" ) {\\n          setOutput(float(\").concat(extrapolationValue, \"));\\n          return;\\n        }\\n\\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\\n        if(\").concat(methodId, \" == 1) {\\n          // Compute the four integer indices.\\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\\n\\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\\n\\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\\n\\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\\n          float newValue = top + (bottom - top) * fracCR.y;\\n          setOutput(newValue);\\n        } else {\\n          // Compute the coordinators of nearest neighbor point.\\n          ivec2 sourceNearestCR = ivec2(floor(\\n            sourceFracIndexCR + vec2(0.5,0.5)));\\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\\n          setOutput(newValue);\\n        }\\n      }\\n    \");\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { CropAndResize } from '@tensorflow/tfjs-core';\nimport { CropAndResizeProgram } from '../crop_and_resize_gpu';\nexport var cropAndResize = function cropAndResize(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var image = inputs.image,\n      boxes = inputs.boxes,\n      boxInd = inputs.boxInd;\n  var cropSize = attrs.cropSize,\n      method = attrs.method,\n      extrapolationValue = attrs.extrapolationValue;\n  var program = new CropAndResizeProgram(image.shape, boxes.shape, cropSize, method, extrapolationValue);\n  return backend.runWebGLProgram(program, [image, boxes, boxInd], 'float32');\n};\nexport var cropAndResizeConfig = {\n  kernelName: CropAndResize,\n  backendName: 'webgl',\n  kernelFunc: cropAndResize\n};","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { getCoordsDataType } from './shader_compiler';\nexport var CumSumProgram = /*#__PURE__*/function () {\n  function CumSumProgram(shape, exclusive, reverse) {\n    _classCallCheck(this, CumSumProgram);\n\n    this.variableNames = ['x'];\n    this.outputShape = shape;\n    var rank = shape.length;\n    var val = exclusive ? '0.0' : \"getX(\".concat(getCoords(rank, 'coords'), \")\");\n    var length = shape[shape.length - 1];\n    var condition = '';\n    var idxString = ''; // When exclusive is set, the cumsum op becomes roll op that copies the\n    // value from the previous index based on the direction specified by the\n    // reverse flag.\n\n    if (exclusive) {\n      condition = reverse ? \"end != \".concat(length - 1) : 'end != 0';\n      idxString = reverse ? 'end + 1' : 'end - 1';\n    } else {\n      condition = reverse ? \"end + pow2 < \".concat(length) : 'end >= pow2';\n      idxString = reverse ? 'end + pow2' : 'end - pow2';\n    }\n\n    this.userCode = \"\\n      uniform float index;\\n      void main() {\\n        \".concat(getCoordsDataType(rank), \" coords = getOutputCoords();\\n        int end = \").concat(getFinalCoord(rank, 'coords'), \";\\n        float val = \").concat(val, \";\\n        int pow2 = int(pow(2.0, index));\\n        if (\").concat(condition, \") {\\n          int idx = \").concat(idxString, \";\\n          \").concat(getFinalCoord(rank, 'coords'), \" = idx;\\n          val += getX(\").concat(getCoords(rank, 'coords'), \");\\n        }\\n        setOutput(val);\\n      }\\n    \");\n  }\n\n  _createClass(CumSumProgram, [{\n    key: \"getCustomSetupFunc\",\n    value: function getCustomSetupFunc(index) {\n      var _this = this;\n\n      return function (gpgpu, webGLProgram) {\n        if (_this.index == null) {\n          _this.index = gpgpu.getUniformLocation(webGLProgram, 'index');\n        }\n\n        gpgpu.gl.uniform1f(_this.index, index);\n      };\n    }\n  }]);\n\n  return CumSumProgram;\n}();\n\nfunction getCoords(rank, name) {\n  if (rank === 1) {\n    return \"\".concat(name);\n  } else if (rank === 2) {\n    return \"\".concat(name, \".x, \").concat(name, \".y\");\n  } else if (rank === 3) {\n    return \"\".concat(name, \".x, \").concat(name, \".y, \").concat(name, \".z\");\n  } else if (rank === 4) {\n    return \"\".concat(name, \".x, \").concat(name, \".y, \").concat(name, \".z, \").concat(name, \".w\");\n  } else {\n    throw Error(\"Cumulative sum for rank \".concat(rank, \" is not yet supported\"));\n  }\n}\n\nfunction getFinalCoord(rank, name) {\n  if (rank === 1) {\n    return \"\".concat(name);\n  } else if (rank === 2) {\n    return \"\".concat(name, \".y\");\n  } else if (rank === 3) {\n    return \"\".concat(name, \".z\");\n  } else if (rank === 4) {\n    return \"\".concat(name, \".w\");\n  } else {\n    throw Error(\"Cumulative sum for rank \".concat(rank, \" is not yet supported\"));\n  }\n}","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Cumsum } from '@tensorflow/tfjs-core';\nimport { CumSumProgram } from '../cumsum_gpu';\nimport { identity } from './Identity';\nimport { transpose } from './Transpose';\nexport function cumsum(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  var axis = attrs.axis,\n      exclusive = attrs.exclusive,\n      reverse = attrs.reverse;\n  var xRank = x.shape.length;\n  var permutation = backend_util.getAxesPermutation([axis], xRank);\n  var permutedX = x;\n\n  if (permutation != null) {\n    permutedX = transpose({\n      inputs: {\n        x: x\n      },\n      backend: backend,\n      attrs: {\n        perm: permutation\n      }\n    });\n  }\n\n  var permutedAxis = backend_util.getInnerMostAxes(1, xRank)[0];\n\n  if (permutedAxis !== xRank - 1) {\n    throw new Error(\"WebGL cumsum shader expects an inner-most axis=\".concat(x.shape.length - 1, \" \") + \"but got axis=\".concat(axis));\n  }\n\n  var size = permutedX.shape[permutedAxis];\n  var result = identity({\n    inputs: {\n      x: permutedX\n    },\n    backend: backend\n  }); // Use cumsum parallel algorithm, ref:\n  // https://developer.nvidia.com/gpugems/gpugems3/part-vi-gpu-computing/chapter-39-parallel-prefix-sum-scan-cuda\n\n  for (var i = 0; i <= Math.ceil(Math.log2(size)) - 1; i++) {\n    var program = new CumSumProgram(permutedX.shape, false, reverse);\n    var customSetup = program.getCustomSetupFunc(i);\n    var prevResult = result;\n    result = backend.runWebGLProgram(program, [result], result.dtype, customSetup);\n    backend.disposeIntermediateTensorInfo(prevResult);\n  } // For exclusive cumsum, shift the end result in the direction of sum\n  // and add 0 to the front index.\n\n\n  if (exclusive) {\n    var _program = new CumSumProgram(permutedX.shape, exclusive, reverse);\n\n    var _prevResult = result;\n    result = backend.runWebGLProgram(_program, [result], result.dtype);\n    backend.disposeIntermediateTensorInfo(_prevResult);\n  }\n\n  if (permutation != null) {\n    var reversePermutation = backend_util.getUndoAxesPermutation(permutation);\n    var reverseTransposedResult = transpose({\n      inputs: {\n        x: result\n      },\n      backend: backend,\n      attrs: {\n        perm: reversePermutation\n      }\n    });\n    backend.disposeIntermediateTensorInfo(result);\n    backend.disposeIntermediateTensorInfo(permutedX);\n    return reverseTransposedResult;\n  }\n\n  return result;\n}\nexport var cumsumConfig = {\n  kernelName: Cumsum,\n  backendName: 'webgl',\n  kernelFunc: cumsum\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { DenseBincount } from '@tensorflow/tfjs-core';\nimport { bincountImplCPU, bincountReduceImplCPU } from '../kernel_utils/shared';\nexport function denseBincount(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x,\n      weights = inputs.weights;\n  var size = attrs.size,\n      binaryOutput = attrs.binaryOutput;\n\n  if (x.shape.length === 1) {\n    var xVals = backend.readSync(x.dataId);\n    var weightsVals = backend.readSync(weights.dataId);\n    var outVals = bincountImplCPU(xVals, weightsVals, weights.dtype, weights.shape, size);\n    return backend.makeTensorInfo([size], weights.dtype, outVals);\n  } else if (x.shape.length === 2) {\n    var xBuf = backend.bufferSync(x);\n    var weightsBuf = backend.bufferSync(weights);\n    var outBuf = bincountReduceImplCPU(xBuf, weightsBuf, size, binaryOutput);\n    return backend.makeTensorInfo(outBuf.shape, weights.dtype, outBuf.values);\n  }\n\n  throw new Error(\"Error in denseBincount: input must be at most rank 2, but got rank\" + \"\".concat(x.shape.length, \".\"));\n}\nexport var denseBincountConfig = {\n  kernelName: DenseBincount,\n  backendName: 'webgl',\n  kernelFunc: denseBincount\n};","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var DepthToSpaceProgram = /*#__PURE__*/function () {\n  function DepthToSpaceProgram(outputShape, blockSize, dataFormat) {\n    _classCallCheck(this, DepthToSpaceProgram);\n\n    this.variableNames = ['x'];\n    this.outputShape = [];\n    this.outputShape = outputShape;\n    this.blockSize = blockSize;\n    this.dataFormat = dataFormat;\n    this.userCode = \"\\n    void main() {\\n      ivec4 coords = getOutputCoords();\\n      int b = coords[0];\\n      int h = \".concat(this.getHeightCoordString(), \";\\n      int w = \").concat(this.getWidthCoordString(), \";\\n      int d = \").concat(this.getDepthCoordString(), \";\\n\\n      int in_h = h / \").concat(blockSize, \";\\n      int offset_h = imod(h, \").concat(blockSize, \");\\n      int in_w = w / \").concat(blockSize, \";\\n      int offset_w = imod(w, \").concat(blockSize, \");\\n      int offset_d = (offset_h * \").concat(blockSize, \" + offset_w) *\\n        \").concat(this.getOutputDepthSize(), \";\\n      int in_d = d + offset_d;\\n\\n      float result = \").concat(this.getInputSamplingString(), \";\\n      setOutput(result);\\n    }\\n  \");\n  }\n\n  _createClass(DepthToSpaceProgram, [{\n    key: \"getHeightCoordString\",\n    value: function getHeightCoordString() {\n      if (this.dataFormat === 'NHWC') {\n        return \"coords[1]\";\n      } else {\n        return \"coords[2]\";\n      }\n    }\n  }, {\n    key: \"getWidthCoordString\",\n    value: function getWidthCoordString() {\n      if (this.dataFormat === 'NHWC') {\n        return \"coords[2]\";\n      } else {\n        return \"coords[3]\";\n      }\n    }\n  }, {\n    key: \"getDepthCoordString\",\n    value: function getDepthCoordString() {\n      if (this.dataFormat === 'NHWC') {\n        return \"coords[3]\";\n      } else {\n        return \"coords[1]\";\n      }\n    }\n  }, {\n    key: \"getOutputDepthSize\",\n    value: function getOutputDepthSize() {\n      if (this.dataFormat === 'NHWC') {\n        return this.outputShape[3];\n      } else {\n        return this.outputShape[1];\n      }\n    }\n  }, {\n    key: \"getInputSamplingString\",\n    value: function getInputSamplingString() {\n      if (this.dataFormat === 'NHWC') {\n        return \"getX(b, in_h, in_w, in_d)\";\n      } else {\n        return \"getX(b, in_d, in_h, in_w)\";\n      }\n    }\n  }]);\n\n  return DepthToSpaceProgram;\n}();","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { DepthToSpace, util } from '@tensorflow/tfjs-core';\nimport { DepthToSpaceProgram } from '../depth_to_space_gpu';\nexport function depthToSpace(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  var blockSize = attrs.blockSize,\n      dataFormat = attrs.dataFormat;\n  util.assert(blockSize > 1, function () {\n    return \"blockSize should be > 1 for depthToSpace, but was: \".concat(blockSize);\n  });\n  var batchSize = x.shape[0];\n  var inputHeight = dataFormat === 'NHWC' ? x.shape[1] : x.shape[2];\n  var inputWidth = dataFormat === 'NHWC' ? x.shape[2] : x.shape[3];\n  var inputDepth = dataFormat === 'NHWC' ? x.shape[3] : x.shape[1];\n  var outputHeight = inputHeight * blockSize;\n  var outputWidth = inputWidth * blockSize;\n  var outputDepth = inputDepth / (blockSize * blockSize);\n  var outputShape = dataFormat === 'NHWC' ? [batchSize, outputHeight, outputWidth, outputDepth] : [batchSize, outputDepth, outputHeight, outputWidth];\n  var program = new DepthToSpaceProgram(outputShape, blockSize, dataFormat);\n  return backend.runWebGLProgram(program, [x], x.dtype);\n}\nexport var depthToSpaceConfig = {\n  kernelName: DepthToSpace,\n  backendName: 'webgl',\n  kernelFunc: depthToSpace\n};","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var DepthwiseConv2DProgram = function DepthwiseConv2DProgram(convInfo) {\n  var addBias = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var activation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  var hasPreluActivation = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var hasLeakyReluAlpha = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n  _classCallCheck(this, DepthwiseConv2DProgram);\n\n  this.variableNames = ['x', 'W'];\n  this.outputShape = convInfo.outShape;\n  var xNumRows = convInfo.inHeight;\n  var xNumCols = convInfo.inWidth;\n  var padTop = convInfo.padInfo.top;\n  var padLeft = convInfo.padInfo.left;\n  var strideHeight = convInfo.strideHeight;\n  var strideWidth = convInfo.strideWidth;\n  var dilationHeight = convInfo.dilationHeight;\n  var dilationWidth = convInfo.dilationWidth;\n  var filterHeight = convInfo.filterHeight;\n  var filterWidth = convInfo.filterWidth;\n  var channelMul = convInfo.outChannels / convInfo.inChannels;\n  var activationSnippet = '',\n      applyActivationSnippet = '';\n\n  if (activation) {\n    if (hasPreluActivation) {\n      activationSnippet = \"float activation(float a) {\\n          float b = getPreluActivationWeightsAtOutCoords();\\n          \".concat(activation, \"\\n        }\");\n    } else if (hasLeakyReluAlpha) {\n      activationSnippet = \"float activation(float a) {\\n          float b = getLeakyreluAlphaAtOutCoords();\\n          \".concat(activation, \"\\n        }\");\n    } else {\n      activationSnippet = \"\\n          float activation(float x) {\\n            \".concat(activation, \"\\n          }\\n        \");\n    }\n\n    applyActivationSnippet = \"result = activation(result);\";\n  }\n\n  var addBiasSnippet = addBias ? 'result += getBiasAtOutCoords();' : '';\n\n  if (addBias) {\n    this.variableNames.push('bias');\n  }\n\n  if (hasPreluActivation) {\n    this.variableNames.push('preluActivationWeights');\n  }\n\n  if (hasLeakyReluAlpha) {\n    this.variableNames.push('leakyreluAlpha');\n  }\n\n  this.userCode = \"\\n      \".concat(activationSnippet, \"\\n\\n      const ivec2 strides = ivec2(\").concat(strideHeight, \", \").concat(strideWidth, \");\\n      const ivec2 pads = ivec2(\").concat(padTop, \", \").concat(padLeft, \");\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords.x;\\n        ivec2 xRCCorner = coords.yz * strides - pads;\\n        int d2 = coords.w;\\n        int d1 = d2 / \").concat(channelMul, \";\\n        int q = d2 - d1 * \").concat(channelMul, \";\\n\\n        int xRCorner = xRCCorner.x;\\n        int xCCorner = xRCCorner.y;\\n\\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\\n        for (int wR = 0; wR < \").concat(filterHeight, \"; wR++) {\\n          int xR = xRCorner + wR * \").concat(dilationHeight, \";\\n\\n          if (xR < 0 || xR >= \").concat(xNumRows, \") {\\n            continue;\\n          }\\n\\n          for (int wC = 0; wC < \").concat(filterWidth, \"; wC++) {\\n            int xC = xCCorner + wC * \").concat(dilationWidth, \";\\n\\n            if (xC < 0 || xC >= \").concat(xNumCols, \") {\\n              continue;\\n            }\\n\\n            float xVal = getX(batch, xR, xC, d1);\\n            float wVal = getW(wR, wC, d1, q);\\n            dotProd += xVal * wVal;\\n          }\\n        }\\n\\n        float result = dotProd;\\n        \").concat(addBiasSnippet, \"\\n        \").concat(applyActivationSnippet, \"\\n        setOutput(result);\\n      }\\n    \");\n};","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\nexport var DepthwiseConvPacked2DProgram = function DepthwiseConvPacked2DProgram(convInfo) {\n  var addBias = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var activation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  var hasPreluActivation = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var hasLeakyReluAlpha = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n  _classCallCheck(this, DepthwiseConvPacked2DProgram);\n\n  this.variableNames = ['x', 'W'];\n  this.packedInputs = true;\n  this.packedOutput = true;\n  this.outputShape = convInfo.outShape;\n  var channelMul = convInfo.outChannels / convInfo.inChannels;\n  var xNumRows = convInfo.inHeight;\n  var xNumCols = convInfo.inWidth;\n  var padTop = convInfo.padInfo.top;\n  var padLeft = convInfo.padInfo.left;\n  var strideHeight = convInfo.strideHeight;\n  var strideWidth = convInfo.strideWidth;\n  var dilationHeight = convInfo.dilationHeight;\n  var dilationWidth = convInfo.dilationWidth;\n  var filterHeight = convInfo.filterHeight;\n  var filterWidth = convInfo.filterWidth;\n  var texelsAcross = filterWidth;\n  var mainLoop = \"\\n      int xR; int xC; int xCOffset;\\n      vec4 wTexel; vec4 previous; vec4 final;\";\n\n  for (var c = 0; c < filterWidth; c++) {\n    mainLoop += \"\\n          vec4 xTexelC\".concat(c * 2, \";\\n          vec4 xC\").concat(c, \";\");\n  }\n  /**\n   * This vectorized implementation works by gathering the values needed for\n   * each output channel's dot product into vec4's and then multiplying them\n   * all together (this happens in the final double for-loop below). Most of\n   * the main loop consists of constructing these vec4's with the minimum\n   * number of texture2D calls, which means making use of all four returned\n   * values from a texture2D call at once.\n   */\n\n\n  for (var r = 0; r < filterHeight; r++) {\n    for (var _c = 0; _c < filterWidth; _c++) {\n      mainLoop += \"\\n          xTexelC\".concat(_c * 2, \" = vec4(0.0);\\n          xC\").concat(_c, \" = vec4(0.0);\");\n    }\n\n    mainLoop += \"\\n        xR = xRCorner + \".concat(r * dilationHeight, \";\\n        if (xR >=0 && xR < \").concat(xNumRows, \") {\\n      \");\n\n    for (var texelC = 0; texelC < texelsAcross / 2 + 1; texelC++) {\n      var _c2 = texelC * 2;\n\n      mainLoop += \"\\n          xC = xCCorner + \".concat(_c2 * dilationWidth, \";\\n          \");\n\n      if (strideWidth === 1) {\n        if (_c2 < filterWidth) {\n          // If padding is odd, the outer texels have to be composed.\n          if (padLeft % 2 === 1) {\n            // TODO: Ensure vec4 previous does not result in redundant sample,\n            // and avoid setting xTexelRC's that exceed the boundary in the\n            // first place rather than resetting them to vec4(0)).\n            // To compute xCOffset:\n            // - If padding is odd, we must add 1 to ensure we ask for an\n            // even-numbered row.\n            // - We subtract 2 to access the previous texel.\n            mainLoop += \"\\n                xCOffset = xC + 1;\\n                if (xCOffset >= 0 && xCOffset < \".concat(xNumCols, \") {\\n                  xTexelC\").concat(_c2, \" = getX(batch, xR, xCOffset, d1);\\n\\n                  // Need to manually clear unused channels in case\\n                  // we're reading from recycled texture.\\n                  if (xCOffset + 1 >= \").concat(xNumCols, \") {\\n                    xTexelC\").concat(_c2, \".zw = vec2(0.0);\\n                  }\\n                }\\n              \"); // This texel has been read in previous iteration if the dilation\n            // is 1.\n\n            if (dilationWidth === 1 && _c2 > 0) {\n              mainLoop += \"\\n                xC\".concat(_c2, \" = vec4(xTexelC\").concat(_c2 - 2, \".zw, xTexelC\").concat(_c2, \".xy);\\n                \");\n            } else {\n              mainLoop += \"\\n                  xCOffset = xC + 1 - 2;\\n\\n                  if (xCOffset >= 0 && xCOffset < \".concat(xNumCols, \") {\\n                    previous = getX(batch, xR, xCOffset, d1);\\n\\n                    // Need to manually clear unused channels in case\\n                    // we're reading from recycled texture.\\n                    if (xCOffset + 1 >= \").concat(xNumCols, \") {\\n                      previous.zw = vec2(0.0);\\n                    }\\n\\n                    xC\").concat(_c2, \" = vec4(previous.zw, xTexelC\").concat(_c2, \".xy);\\n                  } else {\\n                    xC\").concat(_c2, \" = vec4(0.0, 0.0, xTexelC\").concat(_c2, \".xy);\\n                  }\\n                  \");\n            }\n          } else {\n            // Padding is even, so xRC corresponds to a single texel.\n            mainLoop += \"\\n                if (xC >= 0 && xC < \".concat(xNumCols, \") {\\n                  xTexelC\").concat(_c2, \" = getX(batch, xR, xC, d1);\\n                  if (xC + 1 >= \").concat(xNumCols, \") {\\n                    xTexelC\").concat(_c2, \".zw = vec2(0.0);\\n                  }\\n                }\\n\\n                xC\").concat(_c2, \" = xTexelC\").concat(_c2, \";\\n                \");\n          }\n\n          if (_c2 + 1 < filterWidth) {\n            // If dilation is even, the second entry should match the first\n            // (either both are composed or both are single samples). But if\n            // dilation is odd, then the second entry should be the opposite\n            // of the first (if the first is composed, the second is a single\n            // sample, and vice versa.)\n            var nextTexelOffset = padLeft % 2 === 0 ? util.nearestLargerEven(dilationWidth) : dilationWidth;\n\n            if (dilationWidth % 2 === 0 && padLeft % 2 === 1 || dilationWidth % 2 !== 0 && padLeft % 2 !== 1) {\n              mainLoop += \"\\n                  xCOffset = xC + \".concat(padLeft % 2, \" + \").concat(nextTexelOffset, \";\\n\\n                  if (xCOffset >= 0 && xCOffset < \").concat(xNumCols, \") {\\n                    xTexelC\").concat(_c2 + 2, \" = getX(batch, xR, xCOffset, d1);\\n\\n                    // Need to manually clear unused channels in case\\n                    // we're reading from recycled texture.\\n                    if (xCOffset + 1 >= \").concat(xNumCols, \") {\\n                      xTexelC\").concat(_c2 + 2, \".zw = vec2(0.0);\\n                    }\\n                  }\\n                  \"); // If dilation > 1 then the xRC's will not be able to share any\n              // values, so each xRC will require two unique calls to getX.\n\n              if (dilationWidth > 1) {\n                mainLoop += \"\\n                    xCOffset -= 2;\\n                    if (xCOffset >= 0 && xCOffset < \".concat(xNumCols, \") {\\n                      xTexelC\").concat(_c2, \" = getX(batch, xR, xCOffset, d1);\\n                    }\\n                    \");\n              }\n\n              mainLoop += \"\\n                  xC\".concat(_c2 + 1, \" = vec4(xTexelC\").concat(_c2, \".zw, xTexelC\").concat(_c2 + 2, \".xy);\\n                  \");\n            } else {\n              // If dialtion is 1 and padding is odd, we have already read the\n              // texel when constructing the previous x value. Here we can\n              // simply skip the texture read.\n              if (nextTexelOffset === 1) {\n                mainLoop += \"\\n                    xC\".concat(_c2 + 1, \" = xTexelC\").concat(_c2, \";\\n                    \");\n              } else {\n                mainLoop += \"\\n                    xCOffset = xC + \".concat(nextTexelOffset, \";\\n\\n                    if (xCOffset >= 0 && xCOffset < \").concat(xNumCols, \") {\\n                      xTexelC\").concat(_c2 + 2, \" = getX(batch, xR, xCOffset, d1);\\n                      if (xCOffset + 1 >= \").concat(xNumCols, \") {\\n                        xTexelC\").concat(_c2 + 2, \".zw = vec2(0.0);\\n                      }\\n                    }\\n\\n                    xC\").concat(_c2 + 1, \" = xTexelC\").concat(_c2 + 2, \";\\n                    \");\n              }\n            }\n          }\n        }\n      } else {\n        // stride === 2\n        if (_c2 < filterWidth) {\n          // Depending on whether padLeft is even or odd, we want either the\n          // xy or zw channels from X texels for xC${c}. If padLeft is\n          // even, xC${c + 1} is simply the zw channels of texels we've\n          // already sampled. But if padLeft is odd, xC{$c + 1}.zw will\n          // need to come from the xy channels of a new texel, hence the `\n          // vec4\n          // final` initialized below.\n          if (padLeft % 2 === 1) {\n            mainLoop += \"\\n                xCOffset = xC + 1 - \".concat(strideWidth, \";\\n                if(xCOffset >= 0 && xCOffset < \").concat(xNumCols, \") {\\n                  xTexelC\").concat(_c2, \" = getX(batch, xR, xCOffset, d1);\\n                  // Need to manually clear unused channels in case\\n                  // we're reading from recycled texture.\\n                  if (xCOffset + 1 >= \").concat(xNumCols, \") {\\n                    xTexelC\").concat(_c2, \".zw = vec2(0.0);\\n                  }\\n                }\\n\\n                if(xC + 1 >= 0 && xC + 1 < \").concat(xNumCols, \") {\\n                  xTexelC\").concat(_c2 + 2, \" = getX(batch, xR, xC + 1, d1);\\n                  // Need to manually clear unused channels in case\\n                  // we're reading from recycled texture.\\n                  if (xC + 2 >= \").concat(xNumCols, \") {\\n                    xTexelC\").concat(_c2 + 2, \".zw = vec2(0.0);\\n                  }\\n                }\\n\\n                xC\").concat(_c2, \" = vec4(xTexelC\").concat(_c2, \".zw, xTexelC\").concat(_c2 + 2, \".zw);\\n              \");\n\n            if (_c2 + 1 < filterWidth) {\n              mainLoop += \"\\n                  final = vec4(0.0);\\n                  xCOffset = xC + 1 + \".concat(strideWidth, \";\\n                  if(xCOffset >= 0 && xCOffset < \").concat(xNumCols, \") {\\n                    final = getX(batch, xR, xCOffset, d1);\\n                  }\\n                  xC\").concat(_c2 + 1, \" = vec4(xTexelC\").concat(_c2 + 2, \".xy, final.xy);\\n                \");\n            }\n          } else {\n            mainLoop += \"\\n                if(xC >= 0 && xC < \".concat(xNumCols, \") {\\n                  xTexelC\").concat(_c2, \" = getX(batch, xR, xC, d1);\\n                  if (xC + 1 >= \").concat(xNumCols, \") {\\n                    xTexelC\").concat(_c2, \".zw = vec2(0.0);\\n                  }\\n                }\\n\\n                xCOffset = xC + \").concat(strideWidth, \";\\n                if(xCOffset >= 0 && xCOffset < \").concat(xNumCols, \") {\\n                  xTexelC\").concat(_c2 + 2, \" = getX(batch, xR, xCOffset, d1);\\n                  if (xCOffset + 1 >= \").concat(xNumCols, \") {\\n                    xTexelC\").concat(_c2 + 2, \".zw = vec2(0.);\\n                  }\\n                }\\n\\n                xC\").concat(_c2, \" = vec4(\\n                  xTexelC\").concat(_c2, \".xy, xTexelC\").concat(_c2 + 2, \".xy);\\n              \");\n\n            if (_c2 + 1 < filterWidth) {\n              mainLoop += \"\\n                  xC\".concat(_c2 + 1, \" = vec4(xTexelC\").concat(_c2, \".zw, xTexelC\").concat(_c2 + 2, \".zw);\\n                \");\n            }\n          }\n        }\n      } // localize the dotProd accumulation within the loop, the theory is for\n      // GPU with limited cache, accumulate sum across large amount of\n      // veriables will cause lots of cache misses. (i.e. 5x5 filter will have\n      // 50 variables)\n\n\n      if (_c2 < filterWidth) {\n        mainLoop += \"\\n            wTexel = getW(\".concat(r, \", \").concat(_c2, \", d1, q);\\n            dotProd += xC\").concat(_c2, \" * vec4(wTexel.xz, wTexel.xz);\\n          \");\n\n        if (_c2 + 1 < filterWidth) {\n          mainLoop += \"\\n              wTexel = getW(\".concat(r, \", \").concat(_c2 + 1, \", d1, q);\\n              dotProd += xC\").concat(_c2 + 1, \" * vec4(wTexel.xz, wTexel.xz);\\n            \");\n        }\n      }\n    }\n\n    mainLoop += \"\\n        }\\n      \";\n  }\n\n  var activationSnippet = '',\n      applyActivationSnippet = '';\n\n  if (activation) {\n    if (hasPreluActivation) {\n      activationSnippet = \"vec4 activation(vec4 a) {\\n          vec4 b = getPreluActivationWeightsAtOutCoords();\\n          \".concat(activation, \"\\n        }\");\n    } else if (hasLeakyReluAlpha) {\n      activationSnippet = \"vec4 activation(vec4 a) {\\n          vec4 b = getLeakyreluAlphaAtOutCoords();\\n          \".concat(activation, \"\\n        }\");\n    } else {\n      activationSnippet = \"vec4 activation(vec4 x) {\\n          \".concat(activation, \"\\n        }\");\n    }\n\n    applyActivationSnippet = \"result = activation(result);\";\n  }\n\n  var addBiasSnippet = addBias ? 'result += getBiasAtOutCoords();' : '';\n\n  if (addBias) {\n    this.variableNames.push('bias');\n  }\n\n  if (hasPreluActivation) {\n    this.variableNames.push('preluActivationWeights');\n  }\n\n  if (hasLeakyReluAlpha) {\n    this.variableNames.push('leakyreluAlpha');\n  }\n\n  this.userCode = \"\\n      \".concat(activationSnippet, \"\\n\\n      const ivec2 strides = ivec2(\").concat(strideHeight, \", \").concat(strideWidth, \");\\n      const ivec2 pads = ivec2(\").concat(padTop, \", \").concat(padLeft, \");\\n\\n      void main() {\\n\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords.x;\\n        ivec2 xRCCorner = coords.yz * strides - pads;\\n        int d2 = coords.w;\\n        int d1 = d2 / \").concat(channelMul, \";\\n        int q = d2 - d1 * \").concat(channelMul, \";\\n        int xRCorner = xRCCorner.x;\\n        int xCCorner = xRCCorner.y;\\n\\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\\n        vec4 dotProd = vec4(0.000000000000001);\\n\\n        \").concat(mainLoop, \"\\n\\n        vec4 result = dotProd - vec4(0.000000000000001);\\n        \").concat(addBiasSnippet, \"\\n        \").concat(applyActivationSnippet, \"\\n        setOutput(result);\\n      }\\n    \");\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, DepthwiseConv2dNative, env, util } from '@tensorflow/tfjs-core';\nimport { DepthwiseConv2DProgram } from '../conv_gpu_depthwise';\nimport { DepthwiseConvPacked2DProgram } from '../conv_packed_gpu_depthwise';\nexport function depthwiseConv2dNative(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x,\n      filter = inputs.filter;\n  var strides = attrs.strides,\n      pad = attrs.pad,\n      dilations = attrs.dilations,\n      dimRoundingMode = attrs.dimRoundingMode;\n  var $dilations = dilations;\n\n  if ($dilations == null) {\n    $dilations = [1, 1];\n  }\n\n  util.assert(backend_util.eitherStridesOrDilationsAreOne(strides, $dilations), function () {\n    return 'Error in depthwiseConv2d: Either strides or dilations must be ' + \"1. Got strides \".concat(strides, \" and dilations '\").concat($dilations, \"'\");\n  });\n  var convInfo = backend_util.computeConv2DInfo(x.shape, filter.shape, strides, $dilations, pad, dimRoundingMode, true\n  /* depthwise */\n  );\n  var program;\n\n  if (env().getBool('WEBGL_PACK_DEPTHWISECONV') && convInfo.strideWidth <= 2 && convInfo.outChannels / convInfo.inChannels === 1) {\n    program = new DepthwiseConvPacked2DProgram(convInfo);\n  } else {\n    program = new DepthwiseConv2DProgram(convInfo);\n  }\n\n  return backend.runWebGLProgram(program, [x, filter], 'float32');\n}\nexport var depthwiseConv2dNativeConfig = {\n  kernelName: DepthwiseConv2dNative,\n  backendName: 'webgl',\n  kernelFunc: depthwiseConv2dNative\n};","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var DepthwiseConv2DDerFilterProgram = function DepthwiseConv2DDerFilterProgram(convInfo) {\n  _classCallCheck(this, DepthwiseConv2DDerFilterProgram);\n\n  this.variableNames = ['x', 'dy'];\n  this.outputShape = convInfo.filterShape;\n  var strideHeight = convInfo.strideHeight;\n  var strideWidth = convInfo.strideWidth;\n  var padTop = convInfo.padInfo.top;\n  var padLeft = convInfo.padInfo.left;\n  var channelMul = convInfo.outChannels / convInfo.inChannels;\n  this.userCode = \"\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int wR = coords.x;\\n        int wC = coords.y;\\n        int d1 = coords.z;\\n        int dm = coords.w;\\n        int d2 = d1 * \".concat(channelMul, \" + dm;\\n\\n        float dotProd = 0.0;\\n\\n        // TO DO: Vec4 over the batch size\\n        for (int b = 0; b < \").concat(convInfo.batchSize, \"; b++) {\\n          for (int yR = 0; yR < \").concat(convInfo.outHeight, \"; yR++) {\\n            int xR = wR + yR * \").concat(strideHeight, \" - \").concat(padTop, \";\\n\\n            if (xR < 0 || xR >= \").concat(convInfo.inHeight, \") {\\n              continue;\\n            }\\n\\n            for (int yC = 0; yC < \").concat(convInfo.outWidth, \"; yC++) {\\n              int xC = wC + yC * \").concat(strideWidth, \" - \").concat(padLeft, \";\\n\\n              if (xC < 0 || xC >= \").concat(convInfo.inWidth, \") {\\n                continue;\\n              }\\n\\n              float dyValue = getDy(b, yR, yC, d2);\\n              float xValue = getX(b, xR, xC, d1);\\n              dotProd += (xValue * dyValue);\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \");\n};\nexport var DepthwiseConv2DDerInputProgram = function DepthwiseConv2DDerInputProgram(convInfo) {\n  _classCallCheck(this, DepthwiseConv2DDerInputProgram);\n\n  this.variableNames = ['dy', 'W'];\n  this.outputShape = convInfo.inShape;\n  var filterHeight = convInfo.filterHeight;\n  var filterWidth = convInfo.filterWidth;\n  var strideHeight = convInfo.strideHeight;\n  var strideWidth = convInfo.strideWidth;\n  var padTop = filterHeight - 1 - convInfo.padInfo.top;\n  var padLeft = filterWidth - 1 - convInfo.padInfo.left;\n  var channelMul = convInfo.outChannels / convInfo.inChannels;\n  this.userCode = \"\\n      const ivec2 pads = ivec2(\".concat(padTop, \", \").concat(padLeft, \");\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int d1 = coords[3];\\n        ivec2 dyCorner = coords.yz - pads;\\n        int dyRCorner = dyCorner.x;\\n        int dyCCorner = dyCorner.y;\\n\\n        float dotProd = 0.0;\\n\\n        for (int wR = 0; wR < \").concat(filterHeight, \"; wR++) {\\n          float dyR = float(dyRCorner + wR) / \").concat(strideHeight, \".0;\\n\\n          if (dyR < 0.0 || dyR >= \").concat(convInfo.outHeight, \".0 || fract(dyR) > 0.0) {\\n            continue;\\n          }\\n          int idyR = int(dyR);\\n\\n          int wRPerm = \").concat(filterHeight, \" - 1 - wR;\\n\\n          for (int wC = 0; wC < \").concat(filterWidth, \"; wC++) {\\n            float dyC = float(dyCCorner + wC) / \").concat(strideWidth, \".0;\\n\\n            if (dyC < 0.0 || dyC >= \").concat(convInfo.outWidth, \".0 ||\\n                fract(dyC) > 0.0) {\\n              continue;\\n            }\\n            int idyC = int(dyC);\\n\\n            int wCPerm = \").concat(filterWidth, \" - 1 - wC;\\n\\n            // TO DO: Vec4 over the channelMul\\n            for (int dm = 0; dm < \").concat(channelMul, \"; dm++) {\\n              int d2 = d1 * \").concat(channelMul, \" + dm;\\n              float xValue = getDy(batch, idyR, idyC, d2);\\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\\n              dotProd += xValue * wValue;\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \");\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, DepthwiseConv2dNativeBackpropFilter } from '@tensorflow/tfjs-core';\nimport { DepthwiseConv2DDerFilterProgram } from '../conv_backprop_gpu_depthwise';\nexport function depthwiseConv2dNativeBackpropFilter(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x,\n      dy = inputs.dy;\n  var strides = attrs.strides,\n      dilations = attrs.dilations,\n      pad = attrs.pad,\n      dimRoundingMode = attrs.dimRoundingMode,\n      filterShape = attrs.filterShape;\n  var convInfo = backend_util.computeConv2DInfo(x.shape, filterShape, strides, dilations, pad, dimRoundingMode, true\n  /* depthwise */\n  );\n  var program = new DepthwiseConv2DDerFilterProgram(convInfo);\n  return backend.runWebGLProgram(program, [x, dy], 'float32');\n}\nexport var depthwiseConv2dNativeBackpropFilterConfig = {\n  kernelName: DepthwiseConv2dNativeBackpropFilter,\n  backendName: 'webgl',\n  kernelFunc: depthwiseConv2dNativeBackpropFilter\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, DepthwiseConv2dNativeBackpropInput } from '@tensorflow/tfjs-core';\nimport { DepthwiseConv2DDerInputProgram } from '../conv_backprop_gpu_depthwise';\nexport function depthwiseConv2dNativeBackpropInput(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var dy = inputs.dy,\n      filter = inputs.filter;\n  var strides = attrs.strides,\n      dilations = attrs.dilations,\n      pad = attrs.pad,\n      dimRoundingMode = attrs.dimRoundingMode,\n      inputShape = attrs.inputShape;\n  var convInfo = backend_util.computeConv2DInfo(inputShape, filter.shape, strides, dilations, pad, dimRoundingMode, true\n  /* depthwise */\n  );\n  var program = new DepthwiseConv2DDerInputProgram(convInfo);\n  return backend.runWebGLProgram(program, [dy, filter], 'float32');\n}\nexport var depthwiseConv2dNativeBackpropInputConfig = {\n  kernelName: DepthwiseConv2dNativeBackpropInput,\n  backendName: 'webgl',\n  kernelFunc: depthwiseConv2dNativeBackpropInput\n};","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var DiagProgram = function DiagProgram(size) {\n  _classCallCheck(this, DiagProgram);\n\n  this.variableNames = ['X'];\n  this.outputShape = [size, size];\n  this.userCode = \"\\n      void main() {\\n          ivec2 coords = getOutputCoords();\\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\\n          setOutput(val);\\n      }\\n    \";\n};","import _toConsumableArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Diag, util } from '@tensorflow/tfjs-core';\nimport { DiagProgram } from '../diag_gpu';\nimport { reshape } from './Reshape';\nexport function diag(args) {\n  var inputs = args.inputs,\n      backend = args.backend;\n  var x = inputs.x;\n  var outShape = [].concat(_toConsumableArray(x.shape), _toConsumableArray(x.shape));\n  var xSize = util.sizeFromShape(x.shape);\n  var flat = reshape({\n    inputs: {\n      x: x\n    },\n    backend: backend,\n    attrs: {\n      shape: [xSize]\n    }\n  });\n  var program = new DiagProgram(xSize);\n  var res = backend.runWebGLProgram(program, [flat], flat.dtype);\n  var out = reshape({\n    inputs: {\n      x: res\n    },\n    backend: backend,\n    attrs: {\n      shape: outShape\n    }\n  });\n  backend.disposeIntermediateTensorInfo(flat);\n  backend.disposeIntermediateTensorInfo(res);\n  return out;\n}\nexport var diagConfig = {\n  kernelName: Diag,\n  backendName: 'webgl',\n  kernelFunc: diag\n};","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var Dilation2DProgram = function Dilation2DProgram(convInfo) {\n  _classCallCheck(this, Dilation2DProgram);\n\n  this.variableNames = ['x', 'W'];\n  this.outputShape = convInfo.outShape;\n  var inHeight = convInfo.inHeight,\n      inWidth = convInfo.inWidth,\n      padInfo = convInfo.padInfo,\n      strideHeight = convInfo.strideHeight,\n      strideWidth = convInfo.strideWidth,\n      filterHeight = convInfo.filterHeight,\n      filterWidth = convInfo.filterWidth,\n      dilationHeight = convInfo.dilationHeight,\n      dilationWidth = convInfo.dilationWidth;\n  var padTop = padInfo.top,\n      padLeft = padInfo.left;\n  this.userCode = \"\\n      const ivec2 strides = ivec2(\".concat(strideHeight, \", \").concat(strideWidth, \");\\n      const ivec2 pads = ivec2(\").concat(padTop, \", \").concat(padLeft, \");\\n      const float neg_infinity = -3.4e38;\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords.x;\\n        int d1 = coords.w;\\n        ivec2 outTopLeftCorner =\\n            coords.yz * strides - pads;\\n        int hBeg = outTopLeftCorner.x;\\n        int wBeg = outTopLeftCorner.y;\\n\\n        float curVal = neg_infinity;\\n        for (int h = 0; h < \").concat(filterHeight, \"; h++) {\\n          int hIn = hBeg + h * \").concat(dilationHeight, \";\\n\\n          if (hIn >= 0 && hIn < \").concat(inHeight, \") {\\n            for (int w = 0; w < \").concat(filterWidth, \"; w++) {\\n              int wIn = wBeg + w * \").concat(dilationWidth, \";\\n\\n              if (wIn >= 0 && wIn < \").concat(inWidth, \") {\\n                float xVal = getX(batch, hIn, wIn, d1);\\n                float wVal = getW(h, w, d1);\\n\\n                float val = xVal + wVal;\\n                if (val > curVal) {\\n                  curVal = val;\\n                }\\n              }\\n            }\\n          }\\n        }\\n\\n        float result = curVal;\\n        setOutput(result);\\n      }\\n    \");\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Dilation2D } from '@tensorflow/tfjs-core';\nimport { Dilation2DProgram } from '../dilation_gpu';\nimport { reshape } from './Reshape';\nexport function dilation2D(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x,\n      filter = inputs.filter;\n  var strides = attrs.strides,\n      pad = attrs.pad,\n      dilations = attrs.dilations;\n  var convInfo = backend_util.computeDilation2DInfo(x.shape, filter.shape, strides, pad, 'NHWC'\n  /* dataFormat */\n  , dilations);\n  var out;\n  var program = new Dilation2DProgram(convInfo);\n  out = backend.runWebGLProgram(program, [x, filter], 'float32');\n  var outReshaped = reshape({\n    inputs: {\n      x: out\n    },\n    backend: backend,\n    attrs: {\n      shape: convInfo.outShape\n    }\n  });\n  backend.disposeIntermediateTensorInfo(out);\n  return outReshaped;\n}\nexport var dilation2DConfig = {\n  kernelName: Dilation2D,\n  backendName: 'webgl',\n  kernelFunc: dilation2D\n};","function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Einsum, util } from '@tensorflow/tfjs-core';\nimport { multiply } from './Multiply';\nimport { reshape } from './Reshape';\nimport { sum } from './Sum';\nimport { transpose } from './Transpose';\nexport function einsum(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var equation = attrs.equation;\n  var tensors = inputs;\n\n  var _backend_util$decodeE = backend_util.decodeEinsumEquation(equation, tensors.length),\n      allDims = _backend_util$decodeE.allDims,\n      summedDims = _backend_util$decodeE.summedDims,\n      idDims = _backend_util$decodeE.idDims;\n\n  backend_util.checkEinsumDimSizes(allDims.length, idDims, tensors);\n\n  var _backend_util$getEins = backend_util.getEinsumComputePath(summedDims, idDims),\n      path = _backend_util$getEins.path,\n      steps = _backend_util$getEins.steps;\n\n  var nSteps = steps.length;\n  var out = null;\n  var numDimsRemaining = allDims.length;\n  var tensorsToDispose = [];\n\n  for (var i = 0; i < nSteps; ++i) {\n    var _iterator = _createForOfIteratorHelper(steps[i]),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var idTerm = _step.value;\n\n        var _backend_util$getEins2 = backend_util.getEinsumPermutation(numDimsRemaining, idDims[idTerm]),\n            perm = _backend_util$getEins2.permutationIndices,\n            dimsToExpand = _backend_util$getEins2.expandDims;\n\n        var x = void 0;\n\n        if (backend_util.isIdentityPermutation(perm)) {\n          x = tensors[idTerm];\n        } else {\n          x = transpose({\n            inputs: {\n              x: tensors[idTerm]\n            },\n            backend: backend,\n            attrs: {\n              perm: perm\n            }\n          });\n          tensorsToDispose.push(x);\n        }\n\n        var targetShape = x.shape.slice();\n\n        for (var k = 0; k < dimsToExpand.length; ++k) {\n          targetShape.splice(dimsToExpand[k], 0, 1);\n        }\n\n        if (!util.arraysEqual(x.shape, targetShape)) {\n          x = reshape({\n            inputs: {\n              x: x\n            },\n            backend: backend,\n            attrs: {\n              shape: targetShape\n            }\n          });\n          tensorsToDispose.push(x);\n        }\n\n        if (out === null) {\n          out = x;\n        } else {\n          // tslint:disable-next-line: no-unnecessary-type-assertion\n          out = multiply({\n            inputs: {\n              a: x,\n              b: out\n            },\n            backend: backend\n          });\n          tensorsToDispose.push(out);\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    if (i < nSteps - 1) {\n      if (path[i] >= 0) {\n        out = sum({\n          inputs: {\n            x: out\n          },\n          backend: backend,\n          attrs: {\n            axis: path[i] - (allDims.length - numDimsRemaining),\n            keepDims: false\n          }\n        });\n        tensorsToDispose.push(out);\n      }\n\n      numDimsRemaining--;\n    }\n  } // Clean up intermediate tensors.\n\n\n  for (var _i = 0, _tensorsToDispose = tensorsToDispose; _i < _tensorsToDispose.length; _i++) {\n    var tensorInfo = _tensorsToDispose[_i];\n\n    if (tensorInfo === out) {\n      continue;\n    }\n\n    backend.disposeIntermediateTensorInfo(tensorInfo);\n  }\n\n  return out;\n}\nexport var einsumConfig = {\n  kernelName: Einsum,\n  backendName: 'webgl',\n  kernelFunc: einsum\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Elu } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nvar ELU = \"return (x >= 0.0) ? x : (exp(x) - 1.0);\";\nvar ELU_PACKED = \"\\n  vec4 result;\\n\\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\\n\\n  return result;\\n\";\nvar elu = unaryKernelFunc({\n  opSnippet: ELU,\n  packedOpSnippet: ELU_PACKED\n});\nexport var eluConfig = {\n  kernelName: Elu,\n  backendName: 'webgl',\n  kernelFunc: elu\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { EluGrad, env } from '@tensorflow/tfjs-core';\nimport { BinaryOpProgram } from '../binaryop_gpu';\nimport { BinaryOpPackedProgram } from '../binaryop_packed_gpu';\nvar ELU_DER = \"return (b >= 1.0) ? a : a * (b + 1.0);\";\nvar ELU_DER_PACKED = \"\\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\\n\";\nexport var eluGrad = function eluGrad(args) {\n  var inputs = args.inputs,\n      backend = args.backend;\n  var dy = inputs.dy,\n      y = inputs.y;\n  var program = env().getBool('WEBGL_PACK_BINARY_OPERATIONS') ? new BinaryOpPackedProgram(ELU_DER_PACKED, dy.shape, y.shape) : new BinaryOpProgram(ELU_DER, dy.shape, y.shape);\n  return backend.runWebGLProgram(program, [dy, y], dy.dtype);\n};\nexport var eluGradConfig = {\n  kernelName: EluGrad,\n  backendName: 'webgl',\n  kernelFunc: eluGrad\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Equal } from '@tensorflow/tfjs-core';\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nvar PACKED_EQUAL = \"\\n  return vec4(equal(a, b));\\n\";\nvar EQUAL = \"return float(a == b);\";\nexport var equal = binaryKernelFunc({\n  opSnippet: EQUAL,\n  packedOpSnippet: PACKED_EQUAL,\n  dtype: 'bool'\n});\nexport var equalConfig = {\n  kernelName: Equal,\n  backendName: 'webgl',\n  kernelFunc: equal\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Erf } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nvar ERF = \"\\n  // Error function is calculated approximately with elementary function.\\n  // See \\\"Handbook of Mathematical Functions with Formulas,\\n  // Graphs, and Mathematical Tables\\\", Abramowitz and Stegun.\\n  float p = \".concat(backend_util.ERF_P, \";\\n  float a1 = \").concat(backend_util.ERF_A1, \";\\n  float a2 = \").concat(backend_util.ERF_A2, \";\\n  float a3 = \").concat(backend_util.ERF_A3, \";\\n  float a4 = \").concat(backend_util.ERF_A4, \";\\n  float a5 = \").concat(backend_util.ERF_A5, \";\\n\\n  float sign = sign(x);\\n  x = abs(x);\\n  float t = 1.0 / (1.0 + p * x);\\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\\n\");\nexport var erf = unaryKernelFunc({\n  opSnippet: ERF\n});\nexport var erfConfig = {\n  kernelName: Erf,\n  backendName: 'webgl',\n  kernelFunc: erf\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Exp } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { expImplCPU } from '../kernel_utils/shared';\nexport var EXP = \"return exp(x);\";\nexport var exp = unaryKernelFunc({\n  opSnippet: EXP,\n  packedOpSnippet: EXP,\n  cpuKernelImpl: expImplCPU\n});\nexport var expConfig = {\n  kernelName: Exp,\n  backendName: 'webgl',\n  kernelFunc: exp\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ExpandDims, util } from '@tensorflow/tfjs-core';\nimport { reshape } from './Reshape';\nexport function expandDims(args) {\n  var inputs = args.inputs,\n      attrs = args.attrs,\n      backend = args.backend;\n  var dim = attrs.dim;\n  var input = inputs.input;\n  var inputRank = input.shape.length;\n  var newShape = input.shape.slice();\n  var $dim = dim;\n\n  if (dim < 0) {\n    // Negative value is counted from the tail of rank.\n    util.assert(-(inputRank + 1) <= dim, function () {\n      return \"Axis must be in the interval [\".concat(-(inputRank + 1), \", \").concat(inputRank, \"]\");\n    });\n    $dim = inputRank + dim + 1;\n  }\n\n  newShape.splice($dim, 0, 1);\n  return reshape({\n    inputs: {\n      x: input\n    },\n    backend: backend,\n    attrs: {\n      shape: newShape\n    }\n  });\n}\nexport var expandDimsConfig = {\n  kernelName: ExpandDims,\n  backendName: 'webgl',\n  kernelFunc: expandDims\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Expm1 } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { expm1ImplCPU } from '../kernel_utils/shared';\nvar EXPM1 = \"return exp(x) - 1.0;\";\nexport var expm1 = unaryKernelFunc({\n  opSnippet: EXPM1,\n  packedOpSnippet: EXPM1,\n  cpuKernelImpl: expm1ImplCPU\n});\nexport var expm1Config = {\n  kernelName: Expm1,\n  backendName: 'webgl',\n  kernelFunc: expm1\n};","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var FFTProgram = function FFTProgram(component, inputShape, inverse) {\n  _classCallCheck(this, FFTProgram);\n\n  this.variableNames = ['real', 'imag'];\n  var innerDim = inputShape[1];\n  this.outputShape = inputShape;\n  var exponentMultiplierSnippet = inverse ? \"2.0 * \".concat(Math.PI) : \"-2.0 * \".concat(Math.PI);\n  var resultDenominator = inverse ? \"\".concat(innerDim, \".0\") : '1.0';\n  var opString;\n\n  if (component === 'real') {\n    opString = 'return real * expR - imag * expI;';\n  } else if (component === 'imag') {\n    opString = 'return real * expI + imag * expR;';\n  } else {\n    throw new Error(\"FFT component must be either \\\"real\\\" or \\\"imag\\\", got \".concat(component, \".\"));\n  }\n\n  this.userCode = \"\\n      const float exponentMultiplier = \".concat(exponentMultiplierSnippet, \";\\n\\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\\n        \").concat(opString, \"\\n      }\\n\\n      float mulMatDFT(int batch, int index) {\\n        float indexRatio = float(index) / float(\").concat(innerDim, \");\\n        float exponentMultiplierTimesIndexRatio =\\n            exponentMultiplier * indexRatio;\\n\\n        float result = 0.0;\\n\\n        for (int i = 0; i < \").concat(innerDim, \"; i++) {\\n          // x = (-2|2 * PI / N) * index * i;\\n          float x = exponentMultiplierTimesIndexRatio * float(i);\\n          float expR = cos(x);\\n          float expI = sin(x);\\n          float real = getReal(batch, i);\\n          float imag = getImag(batch, i);\\n\\n          result +=\\n              unaryOpComplex(real, expR, imag, expI) / \").concat(resultDenominator, \";\\n        }\\n\\n        return result;\\n      }\\n\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        setOutput(mulMatDFT(coords[0], coords[1]));\\n      }\\n    \");\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\nimport { FFTProgram } from '../fft_gpu';\nimport { complex } from './Complex';\nimport { reshape } from './Reshape';\nexport function fftImpl(x, inverse, backend) {\n  var xData = backend.texData.get(x.dataId);\n  var inputSize = util.sizeFromShape(x.shape); // Collapse all outer dimensions to a single batch dimension.\n\n  var innerDimensionSize = x.shape[x.shape.length - 1];\n  var batch = inputSize / innerDimensionSize;\n  var input2D = reshape({\n    inputs: {\n      x: x\n    },\n    backend: backend,\n    attrs: {\n      shape: [batch, innerDimensionSize]\n    }\n  });\n  var xShape = input2D.shape;\n  var realProgram = new FFTProgram('real', xShape, inverse);\n  var imagProgram = new FFTProgram('imag', xShape, inverse);\n  var inputs = [{\n    dataId: xData.complexTensorInfos.real.dataId,\n    dtype: xData.complexTensorInfos.real.dtype,\n    shape: xShape\n  }, {\n    dataId: xData.complexTensorInfos.imag.dataId,\n    dtype: xData.complexTensorInfos.imag.dtype,\n    shape: xShape\n  }];\n  var realPart = backend.runWebGLProgram(realProgram, inputs, 'float32');\n  var imagPart = backend.runWebGLProgram(imagProgram, inputs, 'float32');\n  var complexOutput = complex({\n    inputs: {\n      real: realPart,\n      imag: imagPart\n    },\n    backend: backend\n  });\n  backend.disposeIntermediateTensorInfo(realPart);\n  backend.disposeIntermediateTensorInfo(imagPart);\n  var complexOutputReshaped = reshape({\n    inputs: {\n      x: complexOutput\n    },\n    backend: backend,\n    attrs: {\n      shape: x.shape\n    }\n  });\n  backend.disposeIntermediateTensorInfo(input2D);\n  backend.disposeIntermediateTensorInfo(complexOutput);\n  return complexOutputReshaped;\n}","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { FFT } from '@tensorflow/tfjs-core';\nimport { fftImpl } from './FFT_impl';\nexport function fft(args) {\n  var inputs = args.inputs,\n      backend = args.backend;\n  var input = inputs.input;\n  return fftImpl(input, false\n  /* inverse */\n  , backend);\n}\nexport var fftConfig = {\n  kernelName: FFT,\n  backendName: 'webgl',\n  kernelFunc: fft\n};","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var FillProgram = /*#__PURE__*/function () {\n  function FillProgram(shape, value) {\n    _classCallCheck(this, FillProgram);\n\n    this.outputShape = [];\n    this.variableNames = ['x'];\n    this.outputShape = shape;\n    this.userCode = \"\\n      uniform float value;\\n      void main() {\\n        // Input can be obtained from uniform value.\\n        setOutput(value);\\n      }\\n    \";\n  }\n\n  _createClass(FillProgram, [{\n    key: \"getCustomSetupFunc\",\n    value: function getCustomSetupFunc(value) {\n      var _this = this;\n\n      return function (gpgpu, webGLProgram) {\n        if (_this.valueLoc == null) {\n          _this.valueLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'value');\n        }\n\n        gpgpu.gl.uniform1f(_this.valueLoc, value);\n      };\n    }\n  }]);\n\n  return FillProgram;\n}();","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Fill, util } from '@tensorflow/tfjs-core';\nimport { FillProgram } from '../fill_gpu';\nexport function fill(args) {\n  var backend = args.backend,\n      attrs = args.attrs;\n  var shape = attrs.shape,\n      value = attrs.value;\n  var dtype = attrs.dtype;\n  dtype = dtype || util.inferDtype(value);\n\n  if (dtype === 'string') {\n    // String type should be handled in CPU memory.\n    var values = util.getArrayFromDType(dtype, util.sizeFromShape(shape));\n    values.fill(value);\n    return backend.makeTensorInfo(shape, dtype, values);\n  } else {\n    var program = new FillProgram(shape, value);\n    var customSetup = program.getCustomSetupFunc(value);\n    return backend.runWebGLProgram(program, [], dtype, customSetup);\n  }\n}\nexport var fillConfig = {\n  kernelName: Fill,\n  backendName: 'webgl',\n  kernelFunc: fill\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env } from '@tensorflow/tfjs-core';\nimport { FromPixels } from '@tensorflow/tfjs-core';\nimport { TextureUsage } from '../tex_util';\nimport { FromPixelsProgram } from './FromPixels_utils/from_pixels_gpu';\nimport { FromPixelsPackedProgram } from './FromPixels_utils/from_pixels_packed_gpu';\nexport var fromPixelsConfig = {\n  kernelName: FromPixels,\n  backendName: 'webgl',\n  kernelFunc: fromPixels\n};\nvar fromPixels2DContext;\n\nfunction fromPixels(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var pixels = inputs.pixels;\n  var numChannels = attrs.numChannels;\n  var isVideo = typeof HTMLVideoElement !== 'undefined' && pixels instanceof HTMLVideoElement;\n  var isImage = typeof HTMLImageElement !== 'undefined' && pixels instanceof HTMLImageElement;\n\n  var _ref = isVideo ? [pixels.videoWidth, pixels.videoHeight] : [pixels.width, pixels.height],\n      _ref2 = _slicedToArray(_ref, 2),\n      width = _ref2[0],\n      height = _ref2[1];\n\n  var texShape = [height, width];\n  var outShape = [height, width, numChannels];\n\n  if (isImage || isVideo) {\n    if (fromPixels2DContext == null) {\n      fromPixels2DContext = document.createElement('canvas').getContext('2d');\n    }\n\n    fromPixels2DContext.canvas.width = width;\n    fromPixels2DContext.canvas.height = height;\n    fromPixels2DContext.drawImage(pixels, 0, 0, width, height);\n    pixels = fromPixels2DContext.canvas;\n  }\n\n  var tempPixelHandle = backend.makeTensorInfo(texShape, 'int32'); // This is a byte texture with pixels.\n\n  backend.texData.get(tempPixelHandle.dataId).usage = TextureUsage.PIXELS;\n  backend.gpgpu.uploadPixelDataToTexture(backend.getTexture(tempPixelHandle.dataId), pixels);\n  var program = env().getBool('WEBGL_PACK') ? new FromPixelsPackedProgram(outShape) : new FromPixelsProgram(outShape);\n  var res = backend.runWebGLProgram(program, [tempPixelHandle], 'int32');\n  backend.disposeData(tempPixelHandle.dataId);\n  return res;\n}","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var FlipLeftRightProgram = function FlipLeftRightProgram(imageShape) {\n  _classCallCheck(this, FlipLeftRightProgram);\n\n  this.variableNames = ['Image'];\n  this.outputShape = [];\n  var imageWidth = imageShape[2];\n  this.outputShape = imageShape;\n  this.userCode = \"\\n        void main() {\\n          ivec4 coords = getOutputCoords();\\n          int x = coords[2];\\n\\n          int coordX = \".concat(imageWidth, \" - x;\\n          float outputValue;\\n          if(coordX >= 0 && coordX < \").concat(imageWidth, \") {\\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\\n          } else {\\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\\n          }\\n          setOutput(outputValue);\\n        }\\n    \");\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { FlipLeftRight } from '@tensorflow/tfjs-core';\nimport { FlipLeftRightProgram } from '../flip_left_right_gpu';\nexport var flipLeftRightConfig = {\n  kernelName: FlipLeftRight,\n  backendName: 'webgl',\n  kernelFunc: function kernelFunc(_ref) {\n    var inputs = _ref.inputs,\n        backend = _ref.backend;\n    var image = inputs.image;\n    var webglBackend = backend;\n    var program = new FlipLeftRightProgram(image.shape);\n    var output = webglBackend.runWebGLProgram(program, [image], image.dtype);\n    return output;\n  }\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Floor } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { floorImplCPU } from '../kernel_utils/shared';\nvar FLOOR = \"return floor(x);\";\nexport var floor = unaryKernelFunc({\n  opSnippet: FLOOR,\n  packedOpSnippet: FLOOR,\n  cpuKernelImpl: floorImplCPU\n});\nexport var floorConfig = {\n  kernelName: Floor,\n  backendName: 'webgl',\n  kernelFunc: floor\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { FloorDiv } from '@tensorflow/tfjs-core';\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils'; // We use native integer division to deal with floating point imprecision. Since\n// we implement floor division and glsl implements truncated division, we\n// correct for this by subtracting 1 from result when the result is negative and\n// there is a remainder.\n\nvar INT_DIV = \"\\n  float s = sign(a) * sign(b);\\n  int ia = round(a);\\n  int ib = round(b);\\n  if (ib != 0) {\\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\\n    return float(idiv(ia, ib, s));\\n  } else {\\n    return NAN;\\n  }\\n\";\nvar INT_DIV_PACKED = \"\\n  ivec4 ia = round(a);\\n  ivec4 ib = round(b);\\n  bvec4 cond = notEqual(ib, ivec4(0));\\n  ivec4 result = ivec4(0);\\n  vec4 s = sign(a) * sign(b);\\n\\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\\n  if (cond[0]) {\\n    result[0] = idiv(ia[0], ib[0], s[0]);\\n  }\\n  if (cond[1]) {\\n    result[1] = idiv(ia[1], ib[1], s[1]);\\n  }\\n  if (cond[2]) {\\n    result[2] = idiv(ia[2], ib[2], s[2]);\\n  }\\n  if (cond[3]) {\\n    result[3] = idiv(ia[3], ib[3], s[3]);\\n  }\\n  return vec4(result);\\n\";\nexport var floorDiv = binaryKernelFunc({\n  opSnippet: INT_DIV,\n  packedOpSnippet: INT_DIV_PACKED,\n  dtype: 'int32'\n});\nexport var floorDivConfig = {\n  kernelName: FloorDiv,\n  backendName: 'webgl',\n  kernelFunc: floorDiv\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getGlslDifferences } from '../../glsl_version';\nexport var FromPixelsProgram = function FromPixelsProgram(outputShape) {\n  _classCallCheck(this, FromPixelsProgram);\n\n  this.variableNames = ['A'];\n  var glsl = getGlslDifferences();\n\n  var _outputShape = _slicedToArray(outputShape, 2),\n      height = _outputShape[0],\n      width = _outputShape[1];\n\n  this.outputShape = outputShape;\n  this.userCode = \"\\n      void main() {\\n        ivec3 coords = getOutputCoords();\\n        int texR = coords[0];\\n        int texC = coords[1];\\n        int depth = coords[2];\\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(\".concat(width, \".0, \").concat(height, \".0);\\n\\n        vec4 values = \").concat(glsl.texture2D, \"(A, uv);\\n        float value;\\n        if (depth == 0) {\\n          value = values.r;\\n        } else if (depth == 1) {\\n          value = values.g;\\n        } else if (depth == 2) {\\n          value = values.b;\\n        } else if (depth == 3) {\\n          value = values.a;\\n        }\\n\\n        setOutput(floor(value * 255.0 + 0.5));\\n      }\\n    \");\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getGlslDifferences } from '../../glsl_version';\nexport var FromPixelsPackedProgram = function FromPixelsPackedProgram(outputShape) {\n  _classCallCheck(this, FromPixelsPackedProgram);\n\n  this.variableNames = ['A'];\n  this.packedInputs = false;\n  this.packedOutput = true;\n  var glsl = getGlslDifferences();\n\n  var _outputShape = _slicedToArray(outputShape, 2),\n      height = _outputShape[0],\n      width = _outputShape[1];\n\n  this.outputShape = outputShape;\n  this.userCode = \"\\n      void main() {\\n        ivec3 coords = getOutputCoords();\\n        int texR = coords[0];\\n        int texC = coords[1];\\n        int depth = coords[2];\\n\\n        vec4 result = vec4(0.);\\n\\n        for(int row=0; row<=1; row++) {\\n          for(int col=0; col<=1; col++) {\\n            texC = coords[1] + row;\\n            depth = coords[2] + col;\\n\\n            vec2 uv = (vec2(texC, texR) + halfCR) /\\n                       vec2(\".concat(width, \".0, \").concat(height, \".0);\\n            vec4 values = \").concat(glsl.texture2D, \"(A, uv);\\n            float value;\\n            if (depth == 0) {\\n              value = values.r;\\n            } else if (depth == 1) {\\n              value = values.g;\\n            } else if (depth == 2) {\\n              value = values.b;\\n            } else if (depth == 3) {\\n              value = values.a;\\n            }\\n\\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\\n          }\\n        }\\n\\n        \").concat(glsl.output, \" = result;\\n      }\\n    \");\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, env, FusedConv2D, util } from '@tensorflow/tfjs-core';\nimport { Conv2DProgram } from '../conv_gpu';\nimport { mapActivationToShaderProgram } from '../kernel_utils/kernel_funcs_utils';\nimport { conv2dByMatMul, conv2dWithIm2Row } from './Conv2D_impl';\nimport { reshape } from './Reshape';\nexport function fusedConv2d(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x,\n      filter = inputs.filter,\n      bias = inputs.bias,\n      preluActivationWeights = inputs.preluActivationWeights;\n  var strides = attrs.strides,\n      pad = attrs.pad,\n      dataFormat = attrs.dataFormat,\n      dilations = attrs.dilations,\n      dimRoundingMode = attrs.dimRoundingMode,\n      activation = attrs.activation,\n      leakyreluAlpha = attrs.leakyreluAlpha;\n  var $dataFormat = backend_util.convertConv2DDataFormat(dataFormat);\n  var convInfo = backend_util.computeConv2DInfo(x.shape, filter.shape, strides, dilations, pad, dimRoundingMode, false\n  /* depthwise */\n  , $dataFormat);\n  var out;\n  var intermediates = [];\n\n  if (convInfo.filterHeight === 1 && convInfo.filterWidth === 1 && convInfo.dilationHeight === 1 && convInfo.dilationWidth === 1 && convInfo.strideHeight === 1 && convInfo.strideWidth === 1 && (convInfo.padInfo.type === 'SAME' || convInfo.padInfo.type === 'VALID')) {\n    out = conv2dByMatMul({\n      x: x,\n      filter: filter,\n      convInfo: convInfo,\n      backend: backend,\n      bias: bias,\n      activation: activation,\n      preluActivationWeights: preluActivationWeights,\n      leakyreluAlpha: leakyreluAlpha\n    });\n  } else if (env().getBool('WEBGL_CONV_IM2COL') && x.shape[0] === 1) {\n    out = conv2dWithIm2Row({\n      x: x,\n      filter: filter,\n      convInfo: convInfo,\n      backend: backend,\n      bias: bias,\n      activation: activation,\n      preluActivationWeights: preluActivationWeights,\n      leakyreluAlpha: leakyreluAlpha\n    });\n  } else {\n    var hasBias = bias != null;\n    var hasPreluActivationWeights = preluActivationWeights != null;\n    var hasLeakyreluAlpha = activation === 'leakyrelu';\n    var fusedActivation = activation ? mapActivationToShaderProgram(activation, false) : null;\n    var program = new Conv2DProgram(convInfo, hasBias, fusedActivation, hasPreluActivationWeights, hasLeakyreluAlpha);\n    var _inputs = [x, filter];\n\n    if (bias) {\n      _inputs.push(bias);\n    }\n\n    if (preluActivationWeights) {\n      _inputs.push(preluActivationWeights);\n    }\n\n    if (hasLeakyreluAlpha) {\n      var $leakyreluAlpha = backend.makeTensorInfo([], 'float32', util.createScalarValue(leakyreluAlpha, 'float32'));\n\n      _inputs.push($leakyreluAlpha);\n\n      intermediates.push($leakyreluAlpha);\n    }\n\n    out = backend.runWebGLProgram(program, _inputs, 'float32');\n  }\n\n  var outReshaped = reshape({\n    inputs: {\n      x: out\n    },\n    backend: backend,\n    attrs: {\n      shape: convInfo.outShape\n    }\n  });\n  intermediates.push(out);\n  intermediates.forEach(function (t) {\n    return backend.disposeIntermediateTensorInfo(t);\n  });\n  return outReshaped;\n}\nexport var fusedConv2DConfig = {\n  kernelName: FusedConv2D,\n  backendName: 'webgl',\n  kernelFunc: fusedConv2d\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, env, FusedDepthwiseConv2D, util } from '@tensorflow/tfjs-core';\nimport { DepthwiseConv2DProgram } from '../conv_gpu_depthwise';\nimport { DepthwiseConvPacked2DProgram } from '../conv_packed_gpu_depthwise';\nimport { mapActivationToShaderProgram } from '../kernel_utils/kernel_funcs_utils';\nexport function fusedDepthwiseConv2D(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x,\n      filter = inputs.filter,\n      bias = inputs.bias,\n      preluActivationWeights = inputs.preluActivationWeights;\n  var strides = attrs.strides,\n      pad = attrs.pad,\n      dilations = attrs.dilations,\n      dimRoundingMode = attrs.dimRoundingMode,\n      activation = attrs.activation,\n      leakyreluAlpha = attrs.leakyreluAlpha;\n  var intermediates = [];\n  var $dilations = dilations;\n\n  if ($dilations == null) {\n    $dilations = [1, 1];\n  }\n\n  util.assert(backend_util.eitherStridesOrDilationsAreOne(strides, $dilations), function () {\n    return 'Error in depthwiseConv2d: Either strides or dilations must be ' + \"1. Got strides \".concat(strides, \" and dilations '\").concat($dilations, \"'\");\n  });\n  var convInfo = backend_util.computeConv2DInfo(x.shape, filter.shape, strides, $dilations, pad, dimRoundingMode, true\n  /* depthwise */\n  );\n  var shouldPackDepthwiseConv = env().getBool('WEBGL_PACK_DEPTHWISECONV') && convInfo.strideWidth <= 2 && convInfo.outChannels / convInfo.inChannels === 1;\n  var fusedActivation = activation ? mapActivationToShaderProgram(activation, shouldPackDepthwiseConv) : null;\n  var programInputs = [x, filter];\n  var hasBias = bias != null;\n  var hasPreluActivationWeights = preluActivationWeights != null;\n  var hasLeakyreluAlpha = activation === 'leakyrelu';\n\n  if (hasBias) {\n    programInputs.push(bias);\n  }\n\n  if (hasPreluActivationWeights) {\n    programInputs.push(preluActivationWeights);\n  }\n\n  if (hasLeakyreluAlpha) {\n    var $leakyreluAlpha = backend.makeTensorInfo([], 'float32', util.createScalarValue(leakyreluAlpha, 'float32'));\n    programInputs.push($leakyreluAlpha);\n    intermediates.push($leakyreluAlpha);\n  }\n\n  var program;\n\n  if (shouldPackDepthwiseConv) {\n    program = new DepthwiseConvPacked2DProgram(convInfo, hasBias, fusedActivation, hasPreluActivationWeights, hasLeakyreluAlpha);\n  } else {\n    program = new DepthwiseConv2DProgram(convInfo, hasBias, fusedActivation, hasPreluActivationWeights, hasLeakyreluAlpha);\n  }\n\n  var result = backend.runWebGLProgram(program, programInputs, 'float32');\n  intermediates.forEach(function (t) {\n    return backend.disposeIntermediateTensorInfo(t);\n  });\n  return result;\n}\nexport var fusedDepthwiseConv2DConfig = {\n  kernelName: FusedDepthwiseConv2D,\n  backendName: 'webgl',\n  kernelFunc: fusedDepthwiseConv2D\n};","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { getCoordsDataType } from './shader_compiler';\nexport var GatherNDProgram = function GatherNDProgram(sliceDim, strides, shape) {\n  _classCallCheck(this, GatherNDProgram);\n\n  this.sliceDim = sliceDim;\n  this.strides = strides;\n  this.variableNames = ['x', 'indices'];\n  this.outputShape = shape;\n  var stridesType = getCoordsDataType(strides.length);\n  var dtype = getCoordsDataType(shape.length);\n  var strideString = this.sliceDim > 1 ? 'strides[j]' : 'strides';\n  this.userCode = \"\\n        \".concat(stridesType, \" strides = \").concat(stridesType, \"(\").concat(this.strides, \");\\n         void main() {\\n          \").concat(dtype, \" coords = getOutputCoords();\\n          int flattenIndex = 0;\\n          for (int j = 0; j < \").concat(this.sliceDim, \"; j++) {\\n            int index = round(getIndices(coords[0], j));\\n            flattenIndex += index * \").concat(strideString, \";\\n          }\\n          setOutput(getX(flattenIndex, coords[1]));\\n        }\\n      \");\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, GatherNd, util } from '@tensorflow/tfjs-core';\nimport { GatherNDProgram } from '../gather_nd_gpu';\nimport { reshape } from './Reshape';\nexport function gatherNd(args) {\n  var inputs = args.inputs,\n      backend = args.backend;\n  var params = inputs.params,\n      indices = inputs.indices;\n  var indicesShape = indices.shape;\n  var sliceRank = indicesShape[indicesShape.length - 1];\n\n  var _backend_util$prepare = backend_util.prepareAndValidate(params, indices),\n      _backend_util$prepare2 = _slicedToArray(_backend_util$prepare, 4),\n      resultShape = _backend_util$prepare2[0],\n      numSlices = _backend_util$prepare2[1],\n      sliceSize = _backend_util$prepare2[2],\n      strides = _backend_util$prepare2[3];\n\n  var flattenIndices = reshape({\n    inputs: {\n      x: indices\n    },\n    backend: backend,\n    attrs: {\n      shape: [numSlices, sliceRank]\n    }\n  });\n  var flattenX = reshape({\n    inputs: {\n      x: params\n    },\n    backend: backend,\n    attrs: {\n      shape: [util.sizeFromShape(params.shape) / sliceSize, sliceSize]\n    }\n  });\n  var program = new GatherNDProgram(sliceRank, strides, [numSlices, sliceSize]);\n  var res = backend.runWebGLProgram(program, [flattenX, flattenIndices], flattenX.dtype);\n  var reshaped = reshape({\n    inputs: {\n      x: res\n    },\n    backend: backend,\n    attrs: {\n      shape: resultShape\n    }\n  });\n  backend.disposeIntermediateTensorInfo(flattenIndices);\n  backend.disposeIntermediateTensorInfo(flattenX);\n  backend.disposeIntermediateTensorInfo(res);\n  return reshaped;\n}\nexport var gatherNdConfig = {\n  kernelName: GatherNd,\n  backendName: 'webgl',\n  kernelFunc: gatherNd\n};","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getCoordsDataType } from './shader_compiler';\nexport var GatherProgram = function GatherProgram(aShape, outputShape) {\n  _classCallCheck(this, GatherProgram);\n\n  this.variableNames = ['A', 'indices'];\n  this.outputShape = outputShape;\n  this.rank = outputShape.length;\n  var dtype = getCoordsDataType(this.rank);\n  var sourceCoords = getSourceCoords(aShape, 2);\n  this.userCode = \"\\n      void main() {\\n        \".concat(dtype, \" resRC = getOutputCoords();\\n        setOutput(getA(\").concat(sourceCoords, \"));\\n      }\\n    \");\n}; // The input and output are always flattened into rank 4 tensors.\n\nfunction getSourceCoords(aShape, axis) {\n  var currentCoords = ['resRC.x', 'resRC.y', 'resRC.z', 'resRC.w'];\n  var sourceCoords = [];\n\n  for (var i = 0; i < aShape.length; i++) {\n    if (i === 2) {\n      sourceCoords.push('int(getIndices(resRC.x, resRC.z))');\n    } else {\n      sourceCoords.push(\"\".concat(currentCoords[i]));\n    }\n  }\n\n  return sourceCoords.join();\n}","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, GatherV2, util } from '@tensorflow/tfjs-core';\nimport { GatherProgram } from '../gather_gpu';\nimport { gatherV2ImplCPU } from '../kernel_utils/shared';\nimport { reshape } from './Reshape';\nexport function gatherV2(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x,\n      indices = inputs.indices;\n  var axis = attrs.axis,\n      batchDims = attrs.batchDims;\n  var parsedAxis = util.parseAxisParam(axis, x.shape)[0];\n  var shapeInfo = backend_util.segment_util.collectGatherOpShapeInfo(x, indices, parsedAxis, batchDims);\n  var indicesSize = util.sizeFromShape(indices.shape);\n  var toDispose = [];\n  var flattenX = reshape({\n    inputs: {\n      x: x\n    },\n    backend: backend,\n    attrs: {\n      shape: [shapeInfo.batchSize, shapeInfo.outerSize, shapeInfo.dimSize, shapeInfo.sliceSize]\n    }\n  });\n  var flattenIndex = reshape({\n    inputs: {\n      x: indices\n    },\n    backend: backend,\n    attrs: {\n      shape: [shapeInfo.batchSize, indicesSize / shapeInfo.batchSize]\n    }\n  });\n  toDispose.push(flattenX);\n  toDispose.push(flattenIndex);\n  var flattenOutputShape = [shapeInfo.batchSize, shapeInfo.outerSize, indicesSize / shapeInfo.batchSize, shapeInfo.sliceSize];\n\n  if (backend.shouldExecuteOnCPU([x, indices]) || x.dtype === 'string') {\n    var indicesBuf = backend.bufferSync(flattenIndex);\n    var xBuf = backend.bufferSync(flattenX);\n    var outBuf = gatherV2ImplCPU(xBuf, indicesBuf, flattenOutputShape);\n    toDispose.forEach(function (t) {\n      return backend.disposeIntermediateTensorInfo(t);\n    });\n    return backend.makeTensorInfo(shapeInfo.outputShape, outBuf.dtype, outBuf.values);\n  }\n\n  var program = new GatherProgram(flattenX.shape, flattenOutputShape);\n  var res = backend.runWebGLProgram(program, [flattenX, flattenIndex], flattenX.dtype);\n  toDispose.push(res);\n  var reshaped = reshape({\n    inputs: {\n      x: res\n    },\n    backend: backend,\n    attrs: {\n      shape: shapeInfo.outputShape\n    }\n  });\n  toDispose.forEach(function (t) {\n    return backend.disposeIntermediateTensorInfo(t);\n  });\n  return reshaped;\n}\nexport var gatherV2Config = {\n  kernelName: GatherV2,\n  backendName: 'webgl',\n  kernelFunc: gatherV2\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Greater } from '@tensorflow/tfjs-core';\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { greaterImplCPU } from '../kernel_utils/shared';\nvar GREATER = \"return float(a > b);\";\nvar GREATER_PACKED = \"\\n  return vec4(greaterThan(a, b));\\n\";\nexport var greater = binaryKernelFunc({\n  opSnippet: GREATER,\n  packedOpSnippet: GREATER_PACKED,\n  cpuKernelImpl: greaterImplCPU,\n  dtype: 'bool'\n});\nexport var greaterConfig = {\n  kernelName: Greater,\n  backendName: 'webgl',\n  kernelFunc: greater\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { GreaterEqual } from '@tensorflow/tfjs-core';\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nvar GREATER_EQUAL = \"return float(a >= b);\";\nvar GREATER_EQUAL_PACKED = \"\\n  return vec4(greaterThanEqual(a, b));\\n\";\nexport var greaterEqual = binaryKernelFunc({\n  opSnippet: GREATER_EQUAL,\n  packedOpSnippet: GREATER_EQUAL_PACKED,\n  dtype: 'bool'\n});\nexport var greaterEqualConfig = {\n  kernelName: GreaterEqual,\n  backendName: 'webgl',\n  kernelFunc: greaterEqual\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { IFFT } from '@tensorflow/tfjs-core';\nimport { fftImpl } from './FFT_impl';\nexport function ifft(args) {\n  var inputs = args.inputs,\n      backend = args.backend;\n  var input = inputs.input;\n  return fftImpl(input, true\n  /* inverse */\n  , backend);\n}\nexport var ifftConfig = {\n  kernelName: IFFT,\n  backendName: 'webgl',\n  kernelFunc: ifft\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { IsFinite } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nvar IS_FINITE = \"return float(!isnan(x) && !isinf(x));\";\nexport var isFinite = unaryKernelFunc({\n  opSnippet: IS_FINITE,\n  dtype: 'bool'\n});\nexport var isFiniteConfig = {\n  kernelName: IsFinite,\n  backendName: 'webgl',\n  kernelFunc: isFinite\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { IsInf } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nvar IS_INF = \"return float(isinf(x));\";\nexport var isInf = unaryKernelFunc({\n  opSnippet: IS_INF,\n  dtype: 'bool'\n});\nexport var isInfConfig = {\n  kernelName: IsInf,\n  backendName: 'webgl',\n  kernelFunc: isInf\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { IsNan } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nvar IS_NAN = \"return float(isnan(x));\";\nexport var isNaN = unaryKernelFunc({\n  opSnippet: IS_NAN,\n  dtype: 'bool'\n});\nexport var isNaNConfig = {\n  kernelName: IsNan,\n  backendName: 'webgl',\n  kernelFunc: isNaN\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Less } from '@tensorflow/tfjs-core';\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { lessImplCPU } from '../kernel_utils/shared';\nvar LESS = \"return float(a < b);\";\nvar LESS_PACKED = \"\\n  return vec4(lessThan(a, b));\\n\";\nexport var less = binaryKernelFunc({\n  opSnippet: LESS,\n  packedOpSnippet: LESS_PACKED,\n  cpuKernelImpl: lessImplCPU,\n  dtype: 'bool'\n});\nexport var lessConfig = {\n  kernelName: Less,\n  backendName: 'webgl',\n  kernelFunc: less\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { LessEqual } from '@tensorflow/tfjs-core';\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nexport var LESS_EQUAL = \"return float(a <= b);\";\nexport var LESS_EQUAL_PACKED = \"\\n  return vec4(lessThanEqual(a, b));\\n\";\nexport var lessEqual = binaryKernelFunc({\n  opSnippet: LESS_EQUAL,\n  packedOpSnippet: LESS_EQUAL_PACKED,\n  dtype: 'bool'\n});\nexport var lessEqualConfig = {\n  kernelName: LessEqual,\n  backendName: 'webgl',\n  kernelFunc: lessEqual\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { LinSpace } from '@tensorflow/tfjs-core';\nimport { linSpaceImplCPU } from '../kernel_utils/shared';\nexport function linSpace(args) {\n  var backend = args.backend,\n      attrs = args.attrs;\n  var start = attrs.start,\n      stop = attrs.stop,\n      num = attrs.num; // TODO: Use CPU implementation due to the precision problem in Safari.\n\n  var outVals = linSpaceImplCPU(start, stop, num);\n  return backend.makeTensorInfo([outVals.length], 'float32', outVals);\n}\nexport var linSpaceConfig = {\n  kernelName: LinSpace,\n  backendName: 'webgl',\n  kernelFunc: linSpace\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Log } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { logImplCPU } from '../kernel_utils/shared';\nvar LOG = \"if (x < 0.0) return NAN;\\n  return log(x);\";\nvar LOG_PACKED = \"\\n  vec4 result = log(x);\\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\\n\\n  return result;\\n\";\nexport var log = unaryKernelFunc({\n  opSnippet: LOG,\n  packedOpSnippet: LOG_PACKED,\n  cpuKernelImpl: logImplCPU\n});\nexport var logConfig = {\n  kernelName: Log,\n  backendName: 'webgl',\n  kernelFunc: log\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Log1p } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nvar LOG1P = \"return log(1.0 + x);\";\nexport var log1p = unaryKernelFunc({\n  opSnippet: LOG1P\n});\nexport var log1pConfig = {\n  kernelName: Log1p,\n  backendName: 'webgl',\n  kernelFunc: log1p\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { LogicalAnd } from '@tensorflow/tfjs-core';\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nvar LOGICAL_AND = \"return float(a >= 1.0 && b >= 1.0);\";\nvar LOGICAL_AND_PACKED = \"\\n  return vec4(\\n    vec4(greaterThanEqual(a, vec4(1.0))) *\\n    vec4(greaterThanEqual(b, vec4(1.0))));\\n\";\nexport var logicalAnd = binaryKernelFunc({\n  opSnippet: LOGICAL_AND,\n  packedOpSnippet: LOGICAL_AND_PACKED,\n  dtype: 'bool'\n});\nexport var logicalAndConfig = {\n  kernelName: LogicalAnd,\n  backendName: 'webgl',\n  kernelFunc: logicalAnd\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { LogicalNot } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nvar LOGICAL_NOT = \"return float(!(x >= 1.0));\";\nexport var logicalNot = unaryKernelFunc({\n  opSnippet: LOGICAL_NOT\n});\nexport var logicalNotConfig = {\n  kernelName: LogicalNot,\n  backendName: 'webgl',\n  kernelFunc: logicalNot\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { LogicalOr } from '@tensorflow/tfjs-core';\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nvar LOGICAL_OR = \"return float(a >= 1.0 || b >= 1.0);\";\nvar LOGICAL_OR_PACKED = \"\\n  return min(\\n    vec4(greaterThanEqual(a, vec4(1.0))) +\\n    vec4(greaterThanEqual(b, vec4(1.0))),\\n    vec4(1.0));\\n\";\nexport var logicalOr = binaryKernelFunc({\n  opSnippet: LOGICAL_OR,\n  packedOpSnippet: LOGICAL_OR_PACKED,\n  dtype: 'bool'\n});\nexport var logicalOrConfig = {\n  kernelName: LogicalOr,\n  backendName: 'webgl',\n  kernelFunc: logicalOr\n};","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var LRNProgram = function LRNProgram(xShape, radius, bias, alpha, beta) {\n  _classCallCheck(this, LRNProgram);\n\n  this.variableNames = ['x'];\n  this.outputShape = [];\n  var rad = radius;\n  var maxD = xShape[3] - 1;\n  this.outputShape = xShape; // optimize pow(bias + alpha * sum, -beta)\n  // src: https://github.com/tensorflow/tensorflow/..\n  // blob/26033a1644a9c4a5fbe3170ab2e864b6a4ccd4ca/..\n  // tensorflow/core/kernels/mkl_lrn_op.cc#L320\n\n  var powOperator;\n  var basis = \"float(\".concat(bias, \") + float(\").concat(alpha, \") * sum\");\n\n  if (beta === 0.5) {\n    powOperator = \"inversesqrt(\".concat(basis, \")\");\n  } else if (beta === 1.0) {\n    powOperator = \"1.0/(\".concat(basis, \")\");\n  } else {\n    powOperator = \"exp(log(\".concat(basis, \") * float(-\").concat(beta, \"));\");\n  }\n\n  this.userCode = \"\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int r = coords[1];\\n        int c = coords[2];\\n        int d = coords[3];\\n        float x = getX(b, r, c, d);\\n        float sum = 0.0;\\n        for (int j = -\".concat(rad, \"; j <= \").concat(rad, \"; j++) {\\n          int idx = d + j;\\n          if (idx >= 0 && idx <=  \").concat(maxD, \") {\\n            float z = getX(b, r, c, idx);\\n            sum += z * z;\\n          }\\n        }\\n        float val = x * \").concat(powOperator, \";\\n        setOutput(val);\\n      }\\n    \");\n};","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var LRNPackedProgram = function LRNPackedProgram(xShape, radius, bias, alpha, beta) {\n  _classCallCheck(this, LRNPackedProgram);\n\n  this.variableNames = ['x'];\n  this.outputShape = [];\n  this.packedInputs = true;\n  this.packedOutput = true;\n  var rad = radius;\n  var maxD = xShape[3] - 1;\n  this.outputShape = xShape; // optimize pow(bias + alpha * sum, -beta)\n  // src: https://github.com/tensorflow/tensorflow/..\n  // blob/26033a1644a9c4a5fbe3170ab2e864b6a4ccd4ca/..\n  // tensorflow/core/kernels/mkl_lrn_op.cc#L320\n\n  var powOperator;\n  var basis = \"float(\".concat(bias, \") + float(\").concat(alpha, \") * sum\");\n\n  if (beta === 0.5) {\n    powOperator = \"inversesqrt(\".concat(basis, \")\");\n  } else if (beta === 1.0) {\n    powOperator = \"1.0/(\".concat(basis, \")\");\n  } else {\n    powOperator = \"exp(log(\".concat(basis, \") * float(-\").concat(beta, \"));\");\n  }\n\n  this.userCode = \"\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords.x;\\n        int r = coords.y;\\n        int c = coords.z;\\n        int d = coords.w;\\n\\n        bool hasNextCol = d < \".concat(this.outputShape[3], \";\\n        bool hasNextRow = c < \").concat(this.outputShape[2], \";\\n\\n        vec4 sum = vec4(0.);\\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\\n\\n        vec4 xAtOutputCoords = vec4(\\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\\n          hasNextCol ?\\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\\n          hasNextRow ?\\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\\n          (hasNextRow && hasNextCol) ?\\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\\n        );\\n\\n        int firstChannel = d - \").concat(rad, \";\\n        vec2 cache = vec2(0.);\\n        if(firstChannel >= 0){\\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\\n            if(hasNextRow){\\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\\n            }\\n        }\\n\\n        ivec2 depth = ivec2(d, d + 1);\\n        for (int j = - \").concat(rad, \"; j <= \").concat(rad, \"; j++) {\\n          ivec2 idx = depth + j;\\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(\").concat(maxD, \"));\\n\\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\\n\\n          if(depthInRange || depthPlusOneInRange){\\n            vec4 z = vec4(0.);\\n            vec4 xFragAtCurrentDepth;\\n            z.xz = cache.xy;\\n            if(depthPlusOneInRange && hasNextCol){\\n              xFragAtCurrentDepth = idx.y != d ?\\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\\n              if(hasNextRow){\\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\\n              }\\n            }\\n            cache.xy = z.yw;\\n            sum += z * z;\\n          }\\n        }\\n        vec4 result = xAtOutputCoords * \").concat(powOperator, \";\\n        setOutput(result);\\n      }\\n    \");\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env, LRN } from '@tensorflow/tfjs-core';\nimport { LRNProgram } from '../lrn_gpu';\nimport { LRNPackedProgram } from '../lrn_packed_gpu';\nexport var lrn = function lrn(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  var depthRadius = attrs.depthRadius,\n      bias = attrs.bias,\n      alpha = attrs.alpha,\n      beta = attrs.beta;\n  var program = env().getBool('WEBGL_PACK_NORMALIZATION') ? new LRNPackedProgram(x.shape, depthRadius, bias, alpha, beta) : new LRNProgram(x.shape, depthRadius, bias, alpha, beta);\n  return backend.runWebGLProgram(program, [x], x.dtype);\n}; // tslint:disable-next-line: variable-name\n\nexport var LRNConfig = {\n  kernelName: LRN,\n  backendName: 'webgl',\n  kernelFunc: lrn\n};","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var LRNGradProgram = function LRNGradProgram(inputShape, depthRadius, bias, alpha, beta) {\n  _classCallCheck(this, LRNGradProgram);\n\n  this.variableNames = ['inputImage', 'outputImage', 'dy'];\n  this.outputShape = [];\n  this.outputShape = inputShape;\n  this.depth = inputShape[3];\n  this.depthRadius = depthRadius;\n  this.bias = bias;\n  this.alpha = alpha;\n  this.beta = beta;\n  this.userCode = \"\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int r = coords[1];\\n        int c = coords[2];\\n\\n        float result = 0.0;\\n        for (int d = 0; d < \".concat(this.depth, \"; ++d) {\\n          int depthBegin = int(max(0.0, float(d - \").concat(depthRadius, \")));\\n          int depthEnd = int(min(float(\").concat(this.depth, \"),\\n              float(d + \").concat(depthRadius, \" + 1)));\\n\\n          const int MIN_DEPTH_BEGIN = 0;\\n          const int MAX_DEPTH_END = \").concat(this.depth, \";\\n\\n          float norm = 0.0;\\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\\n            if (k < depthBegin){\\n              continue;\\n            }\\n            else if (k >= depthBegin && k < depthEnd) {\\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\\n            }\\n            else {\\n              break;\\n            }\\n          }\\n\\n          norm = float(\").concat(alpha, \") * norm + float(\").concat(bias, \");\\n\\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\\n            if (k < depthBegin){\\n              continue;\\n            }\\n            else if (k >= depthBegin && k < depthEnd){\\n              float dyi = -2.0 * float(\").concat(alpha, \")\\n                * float(\").concat(beta, \")\\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\\n                / norm;\\n              if (k == d) {\\n                dyi += pow(norm, -1.0 * \").concat(beta, \");\\n              }\\n              if (k == coords[3]) {\\n                dyi *= getDy(b, r, c, d);\\n                result += dyi;\\n              }\\n            }\\n            else {\\n              break;\\n            }\\n          }\\n      }\\n      setOutput(result);\\n      }\\n    \");\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { LRNGrad } from '@tensorflow/tfjs-core';\nimport { LRNGradProgram } from '../lrn_grad_gpu';\nexport var lrnGrad = function lrnGrad(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x,\n      y = inputs.y,\n      dy = inputs.dy;\n  var depthRadius = attrs.depthRadius,\n      bias = attrs.bias,\n      alpha = attrs.alpha,\n      beta = attrs.beta;\n  var program = new LRNGradProgram(x.shape, depthRadius, bias, alpha, beta);\n  return backend.runWebGLProgram(program, [x, y, dy], x.dtype);\n}; // tslint:disable-next-line: variable-name\n\nexport var LRNGradConfig = {\n  kernelName: LRNGrad,\n  backendName: 'webgl',\n  kernelFunc: lrnGrad\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Max } from '@tensorflow/tfjs-core';\nimport { backend_util, util } from '@tensorflow/tfjs-core';\nimport { maxImplCPU } from '../kernel_utils/shared';\nimport { maxImpl } from './Max_impl';\nimport { transposeImpl, transposeImplCPU } from './Transpose_impl';\nexport function max(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  var reductionIndices = attrs.reductionIndices,\n      keepDims = attrs.keepDims;\n  var xRank = x.shape.length;\n  var origAxes = util.parseAxisParam(reductionIndices, x.shape);\n  var axes = origAxes;\n  var permutedAxes = backend_util.getAxesPermutation(axes, xRank);\n  var maxInputIsTransposed = permutedAxes != null;\n  var shouldExecuteOnCPU = backend.shouldExecuteOnCPU([x]);\n  var maxInput = x;\n\n  if (maxInputIsTransposed) {\n    if (shouldExecuteOnCPU) {\n      var xTexData = backend.texData.get(maxInput.dataId);\n      var values = xTexData.values;\n      var newShape = new Array(xRank);\n\n      for (var i = 0; i < newShape.length; i++) {\n        newShape[i] = x.shape[permutedAxes[i]];\n      }\n\n      var maxInputValues = transposeImplCPU(values, x.shape, x.dtype, permutedAxes, newShape);\n      maxInput = backend.makeTensorInfo(newShape, x.dtype);\n      var maxInputData = backend.texData.get(maxInput.dataId);\n      maxInputData.values = maxInputValues;\n    } else {\n      maxInput = transposeImpl(x, permutedAxes, backend);\n    }\n\n    axes = backend_util.getInnerMostAxes(axes.length, xRank);\n  }\n\n  backend_util.assertAxesAreInnerMostDims('max', axes, xRank);\n\n  var _backend_util$compute = backend_util.computeOutAndReduceShapes(maxInput.shape, axes),\n      _backend_util$compute2 = _slicedToArray(_backend_util$compute, 2),\n      maxOutShape = _backend_util$compute2[0],\n      reduceShape = _backend_util$compute2[1];\n\n  var outShape = maxOutShape;\n\n  if (keepDims) {\n    // rather than reshape at the end, set the target shape here.\n    outShape = backend_util.expandShapeToKeepDim(maxOutShape, origAxes);\n  }\n\n  var out;\n\n  if (shouldExecuteOnCPU) {\n    var _xTexData = backend.texData.get(maxInput.dataId);\n\n    var _values = _xTexData.values;\n    var outValues = maxImplCPU(_values, util.sizeFromShape(reduceShape), outShape, x.dtype);\n    out = backend.makeTensorInfo(outShape, x.dtype);\n    var outData = backend.texData.get(out.dataId);\n    outData.values = outValues;\n  } else {\n    out = maxImpl(maxInput, reduceShape, outShape, backend);\n  }\n\n  if (maxInputIsTransposed) {\n    backend.disposeIntermediateTensorInfo(maxInput);\n  }\n\n  return out;\n}\nexport var maxConfig = {\n  kernelName: Max,\n  backendName: 'webgl',\n  kernelFunc: max\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\nimport { reduce } from '../kernel_utils/reduce';\nimport { reshape } from '../kernels/Reshape';\nexport function maxImpl(x, reduceShape, outShape, backend) {\n  var inSize = util.sizeFromShape(reduceShape);\n  var xSize = util.sizeFromShape(x.shape);\n  var batchSize = xSize / inSize;\n  var reshapedInput = reshape({\n    inputs: {\n      x: x\n    },\n    attrs: {\n      shape: [batchSize, inSize]\n    },\n    backend: backend\n  });\n  var reduced = reduce(reshapedInput, x.dtype, 'max', backend);\n  var reshapedOutput = reshape({\n    inputs: {\n      x: reduced\n    },\n    attrs: {\n      shape: outShape\n    },\n    backend: backend\n  });\n  backend.disposeIntermediateTensorInfo(reshapedInput);\n  backend.disposeIntermediateTensorInfo(reduced);\n  return reshapedOutput;\n}","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Maximum } from '@tensorflow/tfjs-core';\nimport { CHECK_NAN_SNIPPET } from '../binaryop_gpu';\nimport { CHECK_NAN_SNIPPET as CHECK_NAN_SNIPPET_PACKED } from '../binaryop_packed_gpu';\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { maximumImplCPU } from '../kernel_utils/shared';\nvar MAXIMUM = CHECK_NAN_SNIPPET + \"\\n  return max(a, b);\\n\";\nvar MAXIMUM_PACKED = \"\\n  vec4 result = vec4(max(a, b));\\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\\n  \" + CHECK_NAN_SNIPPET_PACKED + \"\\n  return result;\\n\";\nexport var maximum = binaryKernelFunc({\n  opSnippet: MAXIMUM,\n  packedOpSnippet: MAXIMUM_PACKED,\n  cpuKernelImpl: maximumImplCPU\n});\nexport var maximumConfig = {\n  kernelName: Maximum,\n  backendName: 'webgl',\n  kernelFunc: maximum\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, MaxPool, util } from '@tensorflow/tfjs-core';\nimport { Pool2DProgram } from '../pool_gpu';\nimport { assertNotComplex } from '../webgl_util';\nimport { identity } from './Identity';\nexport function maxPool(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  assertNotComplex(x, 'maxPool');\n  var filterSize = attrs.filterSize,\n      strides = attrs.strides,\n      pad = attrs.pad,\n      dimRoundingMode = attrs.dimRoundingMode;\n  var dilations = 1;\n  util.assert(backend_util.eitherStridesOrDilationsAreOne(strides, dilations), function () {\n    return 'Error in maxPool: Either strides or dilations must be 1. ' + \"Got strides \".concat(strides, \" and dilations '\").concat(dilations, \"'\");\n  });\n  var convInfo = backend_util.computePool2DInfo(x.shape, filterSize, strides, dilations, pad, dimRoundingMode);\n\n  if (convInfo.filterWidth === 1 && convInfo.filterHeight === 1 && util.arraysEqual(convInfo.inShape, convInfo.outShape)) {\n    return identity({\n      inputs: {\n        x: x\n      },\n      backend: backend\n    });\n  }\n\n  var maxPoolProgram = new Pool2DProgram(convInfo, 'max', false);\n  return backend.runWebGLProgram(maxPoolProgram, [x], x.dtype);\n}\nexport var maxPoolConfig = {\n  kernelName: MaxPool,\n  backendName: 'webgl',\n  kernelFunc: maxPool\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, MaxPool3D } from '@tensorflow/tfjs-core';\nimport { Pool3DProgram } from '../pool_gpu';\nexport function maxPool3d(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  var filterSize = attrs.filterSize,\n      strides = attrs.strides,\n      pad = attrs.pad,\n      dataFormat = attrs.dataFormat,\n      dimRoundingMode = attrs.dimRoundingMode;\n  var dilations = [1, 1, 1];\n  var convInfo = backend_util.computePool3DInfo(x.shape, filterSize, strides, dilations, pad, dimRoundingMode, dataFormat);\n  var maxPoolProgram = new Pool3DProgram(convInfo, 'max', false);\n  return backend.runWebGLProgram(maxPoolProgram, [x], x.dtype);\n}\nexport var maxPool3DConfig = {\n  kernelName: MaxPool3D,\n  backendName: 'webgl',\n  kernelFunc: maxPool3d\n};","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var MaxPool2DBackpropProgram = function MaxPool2DBackpropProgram(convInfo) {\n  _classCallCheck(this, MaxPool2DBackpropProgram);\n\n  this.variableNames = ['dy', 'maxPos'];\n  this.outputShape = convInfo.inShape;\n  var strideHeight = convInfo.strideHeight;\n  var strideWidth = convInfo.strideWidth;\n  var dilationHeight = convInfo.dilationHeight;\n  var effectiveFilterHeight = convInfo.effectiveFilterHeight;\n  var effectiveFilterWidth = convInfo.effectiveFilterWidth;\n  var padTop = effectiveFilterHeight - 1 - convInfo.padInfo.top;\n  var padLeft = effectiveFilterWidth - 1 - convInfo.padInfo.left;\n  var lastIndex = effectiveFilterHeight * effectiveFilterWidth - 1;\n  this.userCode = \"\\n      const ivec2 pads = ivec2(\".concat(padTop, \", \").concat(padLeft, \");\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int d = coords[3];\\n\\n        ivec2 dyRCCorner = coords.yz - pads;\\n        int dyRCorner = dyRCCorner.x;\\n        int dyCCorner = dyRCCorner.y;\\n\\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n        for (int wR = 0; wR < \").concat(effectiveFilterHeight, \";\\n          wR += \").concat(dilationHeight, \") {\\n          float dyR = float(dyRCorner + wR) / \").concat(strideHeight, \".0;\\n\\n          if (dyR < 0.0 || dyR >= \").concat(convInfo.outHeight, \".0 || fract(dyR) > 0.0) {\\n            continue;\\n          }\\n          int idyR = int(dyR);\\n\\n          for (int wC = 0; wC < \").concat(effectiveFilterWidth, \"; wC++) {\\n            float dyC = float(dyCCorner + wC) / \").concat(strideWidth, \".0;\\n\\n            if (dyC < 0.0 || dyC >= \").concat(convInfo.outWidth, \".0 ||\\n                fract(dyC) > 0.0) {\\n              continue;\\n            }\\n            int idyC = int(dyC);\\n\\n            float dyValue = getDy(b, idyR, idyC, d);\\n            int maxPosValue = \").concat(lastIndex, \" - int(getMaxPos(b, idyR, idyC, d));\\n\\n            // Get the current value, check it against the value from the\\n            // position matrix.\\n            int curPosValue = wR * \").concat(effectiveFilterWidth, \" + wC;\\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\\n\\n            dotProd += dyValue * mask;\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \");\n};\nexport var MaxPool3DBackpropProgram = function MaxPool3DBackpropProgram(convInfo) {\n  _classCallCheck(this, MaxPool3DBackpropProgram);\n\n  this.variableNames = ['dy', 'maxPos'];\n  this.outputShape = convInfo.inShape;\n  var strideDepth = convInfo.strideDepth;\n  var strideHeight = convInfo.strideHeight;\n  var strideWidth = convInfo.strideWidth;\n  var dilationDepth = convInfo.dilationDepth;\n  var dilationHeight = convInfo.dilationHeight;\n  var dilationWidth = convInfo.dilationWidth;\n  var effectiveFilterDepth = convInfo.effectiveFilterDepth;\n  var effectiveFilterHeight = convInfo.effectiveFilterHeight;\n  var effectiveFilterWidth = convInfo.effectiveFilterWidth;\n  var padFront = effectiveFilterDepth - 1 - convInfo.padInfo.front;\n  var padTop = effectiveFilterHeight - 1 - convInfo.padInfo.top;\n  var padLeft = effectiveFilterWidth - 1 - convInfo.padInfo.left;\n  var lastIndex = effectiveFilterDepth * effectiveFilterHeight * effectiveFilterWidth - 1;\n  this.userCode = \"\\n      const ivec3 pads = ivec3(\".concat(padFront, \", \").concat(padTop, \", \").concat(padLeft, \");\\n\\n      void main() {\\n        ivec5 coords = getOutputCoords();\\n        int batch = coords.x;\\n        int ch = coords.u;\\n\\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\\n        int dyDCorner = dyCorner.x;\\n        int dyRCorner = dyCorner.y;\\n        int dyCCorner = dyCorner.z;\\n\\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\\n        // dx(xD, xR, xC, ch).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n\\n        for (int wD = 0; wD < \").concat(effectiveFilterDepth, \";\\n           wD += \").concat(dilationDepth, \") {\\n          float dyD = float(dyDCorner + wD) / \").concat(strideDepth, \".0;\\n\\n          if (dyD < 0.0 || dyD >= \").concat(convInfo.outDepth, \".0 || fract(dyD) > 0.0) {\\n            continue;\\n          }\\n          int idyD = int(dyD);\\n\\n          for (int wR = 0; wR < \").concat(effectiveFilterHeight, \";\\n              wR += \").concat(dilationHeight, \") {\\n            float dyR = float(dyRCorner + wR) / \").concat(strideHeight, \".0;\\n\\n            if (dyR < 0.0 || dyR >= \").concat(convInfo.outHeight, \".0 ||\\n                fract(dyR) > 0.0) {\\n              continue;\\n            }\\n            int idyR = int(dyR);\\n\\n            for (int wC = 0; wC < \").concat(effectiveFilterWidth, \";\\n                wC += \").concat(dilationWidth, \") {\\n              float dyC = float(dyCCorner + wC) / \").concat(strideWidth, \".0;\\n\\n              if (dyC < 0.0 || dyC >= \").concat(convInfo.outWidth, \".0 ||\\n                  fract(dyC) > 0.0) {\\n                continue;\\n              }\\n              int idyC = int(dyC);\\n\\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\\n              int maxPosValue = \").concat(lastIndex, \" -\\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\\n\\n              // Get the current value, check it against the value from the\\n              // position matrix.\\n              int curPosValue =\\n                  wD * \").concat(effectiveFilterHeight, \" * \").concat(effectiveFilterWidth, \" +\\n                  wR * \").concat(effectiveFilterWidth, \" + wC;\\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\\n\\n              dotProd += dyValue * mask;\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \");\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, MaxPool3DGrad } from '@tensorflow/tfjs-core';\nimport { MaxPool3DBackpropProgram } from '../max_pool_backprop_gpu';\nimport { Pool3DProgram } from '../pool_gpu';\nexport function maxPool3DGrad(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var dy = inputs.dy,\n      input = inputs.input;\n  var x = input;\n  var filterSize = attrs.filterSize,\n      strides = attrs.strides,\n      pad = attrs.pad,\n      dimRoundingMode = attrs.dimRoundingMode;\n  var dilations = [1, 1, 1];\n  var convInfo = backend_util.computePool3DInfo(x.shape, filterSize, strides, dilations, pad, dimRoundingMode);\n  var maxPool3dPositionsProgram = new Pool3DProgram(convInfo, 'max', true\n  /* get positions */\n  );\n  var maxPool3dPositions = backend.runWebGLProgram(maxPool3dPositionsProgram, [x], x.dtype);\n  var maxPoolBackpropProgram = new MaxPool3DBackpropProgram(convInfo);\n  var result = backend.runWebGLProgram(maxPoolBackpropProgram, [dy, maxPool3dPositions], x.dtype);\n  backend.disposeIntermediateTensorInfo(maxPool3dPositions);\n  return result;\n}\nexport var maxPoolGrad3DConfig = {\n  kernelName: MaxPool3DGrad,\n  backendName: 'webgl',\n  kernelFunc: maxPool3DGrad\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, MaxPoolGrad } from '@tensorflow/tfjs-core';\nimport { MaxPool2DBackpropProgram } from '../max_pool_backprop_gpu';\nimport { Pool2DProgram } from '../pool_gpu';\nimport { assertNotComplex } from '../webgl_util';\nexport function maxPoolGrad(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var dy = inputs.dy,\n      input = inputs.input,\n      output = inputs.output;\n  var x = input;\n  assertNotComplex([input, output], 'maxPoolGrad');\n  var filterSize = attrs.filterSize,\n      strides = attrs.strides,\n      pad = attrs.pad,\n      dimRoundingMode = attrs.dimRoundingMode;\n  var convInfo = backend_util.computePool2DInfo(x.shape, filterSize, strides, 1\n  /* dilations */\n  , pad, dimRoundingMode);\n  var getPositions = true;\n  var maxPoolPositionsProgram = new Pool2DProgram(convInfo, 'max', getPositions);\n  var maxPoolPositions = backend.runWebGLProgram(maxPoolPositionsProgram, [x], x.dtype);\n  var maxPoolBackPropProgram = new MaxPool2DBackpropProgram(convInfo);\n  var result = backend.runWebGLProgram(maxPoolBackPropProgram, [dy, maxPoolPositions], x.dtype);\n  backend.disposeIntermediateTensorInfo(maxPoolPositions);\n  return result;\n}\nexport var maxPoolGradConfig = {\n  kernelName: MaxPoolGrad,\n  backendName: 'webgl',\n  kernelFunc: maxPoolGrad\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { MaxPoolWithArgmax } from '@tensorflow/tfjs-core';\nimport { backend_util, util } from '@tensorflow/tfjs-core';\nimport { maxPoolWithArgmaxImpl } from './MaxPoolWithArgmax_impl';\nexport var maxPoolWithArgmaxConfig = {\n  kernelName: MaxPoolWithArgmax,\n  backendName: 'webgl',\n  kernelFunc: function kernelFunc(_ref) {\n    var inputs = _ref.inputs,\n        attrs = _ref.attrs,\n        backend = _ref.backend;\n    var x = inputs.x;\n    var filterSize = attrs.filterSize,\n        strides = attrs.strides,\n        pad = attrs.pad,\n        includeBatchInIndex = attrs.includeBatchInIndex;\n    var webglBackend = backend;\n    util.assert(x.shape.length === 4, function () {\n      return \"Error in maxPool: input must be rank 4 but got rank \".concat(x.shape.length, \".\");\n    });\n    var dilations = [1, 1];\n    util.assert(backend_util.eitherStridesOrDilationsAreOne(strides, dilations), function () {\n      return 'Error in maxPool: Either strides or dilations must be 1. ' + \"Got strides \".concat(strides, \" and dilations '\").concat(dilations, \"'\");\n    });\n    var convInfo = backend_util.computePool2DInfo(x.shape, filterSize, strides, dilations, pad);\n\n    var _maxPoolWithArgmaxImp = maxPoolWithArgmaxImpl(x, includeBatchInIndex, convInfo, webglBackend),\n        _maxPoolWithArgmaxImp2 = _slicedToArray(_maxPoolWithArgmaxImp, 2),\n        result = _maxPoolWithArgmaxImp2[0],\n        indexes = _maxPoolWithArgmaxImp2[1];\n\n    return [result, indexes];\n  }\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Pool2DProgram } from '../pool_gpu';\nexport function maxPoolWithArgmaxImpl(x, includeBatchInIndex, convInfo, backend) {\n  var program = new Pool2DProgram(convInfo, 'max', false);\n  var poolOutput = backend.runWebGLProgram(program, [x], 'float32');\n  program = new Pool2DProgram(convInfo, 'max', true, true, includeBatchInIndex);\n  var indexOutput = backend.runWebGLProgram(program, [x], 'float32');\n  return [poolOutput, indexOutput];\n}","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Mean, util } from '@tensorflow/tfjs-core';\nimport { meanImpl } from './Mean_impl';\nimport { transposeImpl, transposeImplCPU } from './Transpose_impl';\nexport var meanConfig = {\n  kernelName: Mean,\n  backendName: 'webgl',\n  kernelFunc: function kernelFunc(_ref) {\n    var inputs = _ref.inputs,\n        attrs = _ref.attrs,\n        backend = _ref.backend;\n    var x = inputs.x;\n    var keepDims = attrs.keepDims,\n        axis = attrs.axis;\n    var webglBackend = backend;\n    var xRank = x.shape.length;\n    var origAxes = util.parseAxisParam(axis, x.shape);\n    var axes = origAxes;\n    var permutedAxes = backend_util.getAxesPermutation(axes, xRank);\n    var meanInputIsTransposed = permutedAxes != null;\n    var shouldExecuteOnCPU = webglBackend.shouldExecuteOnCPU([x]);\n    var intermediates = [];\n    var meanInput = x;\n\n    if (meanInputIsTransposed) {\n      if (shouldExecuteOnCPU) {\n        var xTexData = webglBackend.texData.get(meanInput.dataId);\n        var values = xTexData.values;\n        var newShape = new Array(xRank);\n\n        for (var i = 0; i < newShape.length; i++) {\n          newShape[i] = x.shape[permutedAxes[i]];\n        }\n\n        var meanInputValues = transposeImplCPU(values, x.shape, x.dtype, permutedAxes, newShape);\n        meanInput = webglBackend.makeTensorInfo(newShape, x.dtype);\n        var meanInputData = webglBackend.texData.get(meanInput.dataId);\n        meanInputData.values = meanInputValues;\n      } else {\n        meanInput = transposeImpl(x, permutedAxes, webglBackend);\n      }\n\n      intermediates.push(meanInput);\n      axes = backend_util.getInnerMostAxes(axes.length, xRank);\n    }\n\n    backend_util.assertAxesAreInnerMostDims('sum', axes, xRank);\n\n    var _backend_util$compute = backend_util.computeOutAndReduceShapes(meanInput.shape, axes),\n        _backend_util$compute2 = _slicedToArray(_backend_util$compute, 2),\n        meanOutShape = _backend_util$compute2[0],\n        reduceShape = _backend_util$compute2[1];\n\n    var outShape = meanOutShape;\n\n    if (keepDims) {\n      // rather than reshape at the end, set the target shape here.\n      outShape = backend_util.expandShapeToKeepDim(meanOutShape, origAxes);\n    }\n\n    var out = meanImpl(meanInput, reduceShape, outShape, webglBackend);\n\n    for (var _i = 0, _intermediates = intermediates; _i < _intermediates.length; _i++) {\n      var _i2 = _intermediates[_i];\n      webglBackend.disposeIntermediateTensorInfo(_i2);\n    }\n\n    return out;\n  }\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\nimport { reduce } from '../kernel_utils/reduce';\nimport { reshape } from '../kernels/Reshape';\nexport function meanImpl(x, reduceShape, outShape, backend) {\n  var inSize = util.sizeFromShape(reduceShape);\n  var xSize = util.sizeFromShape(x.shape);\n  var batchSize = xSize / inSize;\n  var reshapedInput = reshape({\n    inputs: {\n      x: x\n    },\n    attrs: {\n      shape: [batchSize, inSize]\n    },\n    backend: backend\n  });\n  var reduced = reduce(reshapedInput, 'float32', 'mean', backend);\n  var reshapedOutput = reshape({\n    inputs: {\n      x: reduced\n    },\n    attrs: {\n      shape: outShape\n    },\n    backend: backend\n  });\n  backend.disposeIntermediateTensorInfo(reshapedInput);\n  backend.disposeIntermediateTensorInfo(reduced);\n  return reshapedOutput;\n}","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Min, util } from '@tensorflow/tfjs-core';\nimport { reduce } from '../kernel_utils/reduce';\nimport { reshape } from './Reshape';\nimport { transpose } from './Transpose';\nexport function min(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  var axis = attrs.axis,\n      keepDims = attrs.keepDims;\n  var xRank = x.shape.length;\n  var origAxes = util.parseAxisParam(axis, x.shape);\n  var axes = origAxes;\n  var permutedAxes = backend_util.getAxesPermutation(axes, xRank);\n  var permutedX = x;\n\n  if (permutedAxes != null) {\n    permutedX = transpose({\n      inputs: {\n        x: x\n      },\n      backend: backend,\n      attrs: {\n        perm: permutedAxes\n      }\n    });\n    axes = backend_util.getInnerMostAxes(axes.length, x.shape.length);\n  }\n\n  backend_util.assertAxesAreInnerMostDims('min', axes, xRank);\n\n  var _backend_util$compute = backend_util.computeOutAndReduceShapes(permutedX.shape, axes),\n      _backend_util$compute2 = _slicedToArray(_backend_util$compute, 2),\n      outShape = _backend_util$compute2[0],\n      reduceShape = _backend_util$compute2[1];\n\n  var inSize = util.sizeFromShape(reduceShape);\n  var a2D = reshape({\n    inputs: {\n      x: permutedX\n    },\n    backend: backend,\n    attrs: {\n      shape: [-1, inSize]\n    }\n  });\n  var reduced = reduce(a2D, a2D.dtype, 'min', backend);\n  var res;\n\n  if (keepDims) {\n    var newShape = backend_util.expandShapeToKeepDim(outShape, origAxes);\n    res = reshape({\n      inputs: {\n        x: reduced\n      },\n      backend: backend,\n      attrs: {\n        shape: newShape\n      }\n    });\n  } else {\n    res = reshape({\n      inputs: {\n        x: reduced\n      },\n      backend: backend,\n      attrs: {\n        shape: outShape\n      }\n    });\n  }\n\n  backend.disposeIntermediateTensorInfo(a2D);\n  backend.disposeIntermediateTensorInfo(reduced);\n\n  if (permutedAxes != null) {\n    backend.disposeIntermediateTensorInfo(permutedX);\n  }\n\n  return res;\n}\nexport var minConfig = {\n  kernelName: Min,\n  backendName: 'webgl',\n  kernelFunc: min\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Minimum } from '@tensorflow/tfjs-core';\nimport { CHECK_NAN_SNIPPET } from '../binaryop_gpu';\nimport { CHECK_NAN_SNIPPET as CHECK_NAN_SNIPPET_PACKED } from '../binaryop_packed_gpu';\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { minimumImplCPU } from '../kernel_utils/shared';\nvar MINIMUM = CHECK_NAN_SNIPPET + \"\\n  return min(a, b);\\n\";\nvar MINIMUM_PACKED = \"\\n  vec4 result = vec4(min(a, b));\\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\\n  \" + CHECK_NAN_SNIPPET_PACKED + \"\\n  return result;\\n\";\nexport var minimum = binaryKernelFunc({\n  opSnippet: MINIMUM,\n  packedOpSnippet: MINIMUM_PACKED,\n  cpuKernelImpl: minimumImplCPU\n});\nexport var minimumConfig = {\n  kernelName: Minimum,\n  backendName: 'webgl',\n  kernelFunc: minimum\n};","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getCoordsDataType } from './shader_compiler';\nexport var MirrorPadProgram = function MirrorPadProgram(xShape, paddings, mode) {\n  _classCallCheck(this, MirrorPadProgram);\n\n  this.variableNames = ['x'];\n  this.outputShape = paddings.map(function (p, i) {\n    return p[0]\n    /* beforePad */\n    + xShape[i] + p[1];\n  }\n  /* afterPad */\n  );\n  var rank = xShape.length;\n  var dtype = getCoordsDataType(rank);\n  var start = paddings.map(function (p) {\n    return p[0];\n  }).join(',');\n  var end = paddings.map(function (p, i) {\n    return p[0] + xShape[i];\n  }).join(',');\n  var unpackedCoords = ['coords[0]', 'coords[1]', 'coords[2]', 'coords[3]'].slice(0, rank);\n  var offset = mode === 'reflect' ? 0 : 1;\n\n  if (rank === 1) {\n    this.userCode = \"\\n        int start = \".concat(start, \";\\n        int end = \").concat(end, \";\\n\\n        void main() {\\n          int outC = getOutputCoords();\\n          if (outC < start) {\\n            outC = start * 2 - outC - \").concat(offset, \";\\n          } else if(outC >= end) {\\n            outC = (end - 1) * 2 - outC + \").concat(offset, \";\\n          }\\n          setOutput(getX(outC - start));\\n        }\\n      \");\n    return;\n  }\n\n  this.userCode = \"\\n      \".concat(dtype, \" start = \").concat(dtype, \"(\").concat(start, \");\\n      \").concat(dtype, \" end = \").concat(dtype, \"(\").concat(end, \");\\n\\n      void main() {\\n        \").concat(dtype, \" outC = getOutputCoords();\\n        for (int i = 0; i < \").concat(rank, \"; i++) {\\n          if (outC[i] < start[i]) {\\n            outC[i] = start[i] * 2 - outC[i] - \").concat(offset, \";\\n          } else if(outC[i] >= end[i]) {\\n            outC[i] = (end[i] - 1) * 2 - outC[i] + \").concat(offset, \";\\n          }\\n        }\\n        \").concat(dtype, \" coords = outC - start;\\n        setOutput(getX(\").concat(unpackedCoords, \"));\\n      }\\n    \");\n};","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getChannels } from './packing_util';\nimport { getCoordsDataType } from './shader_compiler';\n/**\n * Example shader code for\n * `mirrorPad(tf.tensor1d([1, 2, 3], 'int32'), [[2, 2]], 'reflect')`\n * ```\n *    const int start = int(2);\n *    const int end = int(5);\n *\n *    void main() {\n *       int outputLoc = getOutputCoords();\n *       vec4 result = vec4(0.);\n *\n *       int rc = outputLoc;\n *\n *       int source = rc;\n *       if (source < start) {\n *         source = start * 2 - source - 0;\n *       } else if (source >= end) {\n *         source = (end - 1) * 2 - source + 0;\n *       }\n *       source -= start;\n *\n *       result[0] = getChannel(getX(source), source);\n *       rc += 1;\n *       if(rc < 6) {\n *          int source = rc;\n *          if (source < start) {\n *            source = start * 2 - source - 0;\n *          } else if (source >= end) {\n *            source = (end - 1) * 2 - source + 0;\n *          }\n *          source -= start;\n *\n *         result[1] = getChannel(getX(source), source);\n *       }\n *\n *       setOutput(result);\n *     }\n * ```\n */\n\nexport var MirrorPadPackedProgram = function MirrorPadPackedProgram(xShape, paddings, mode) {\n  _classCallCheck(this, MirrorPadPackedProgram);\n\n  this.variableNames = ['x'];\n  this.packedInputs = true;\n  this.packedOutput = true;\n  this.outputShape = paddings.map(function (p, i) {\n    return p[0]\n    /* beforePad */\n    + xShape[i] + p[1];\n  }\n  /* afterPad */\n  );\n  var rank = xShape.length;\n  var dtype = getCoordsDataType(rank);\n  var start = paddings.map(function (p) {\n    return p[0];\n  }).join(',');\n  var end = paddings.map(function (p, i) {\n    return p[0] + xShape[i];\n  }).join(',');\n  var coords = getChannels('rc', rank);\n  var source = getChannels('source', rank);\n  var cLimit = \"\".concat(coords[rank - 1], \" < \").concat(this.outputShape[rank - 1]);\n  var innerDims = rank === 1 ? 'source' : \"vec2(\".concat(source.slice(-2).join(), \")\");\n  var offset = mode === 'reflect' ? 0 : 1;\n  var mainLoop = '';\n\n  if (rank === 1) {\n    var padSetup = \"\\n        \".concat(dtype, \" source = rc;\\n        if (source < start) {\\n          source = start * 2 - source - \").concat(offset, \";\\n        } else if (source >= end) {\\n          source = (end - 1) * 2 - source + \").concat(offset, \";\\n        }\\n        source -= start;\\n      \");\n    mainLoop = \"\\n        \".concat(dtype, \" rc = outputLoc;\\n        \").concat(padSetup, \"\\n        result[0] = getChannel(getX(\").concat(source.join(), \"), \").concat(innerDims, \");\\n        \").concat(coords[rank - 1], \" += 1;\\n        if(\").concat(cLimit, \") {\\n          \").concat(padSetup, \"\\n          result[1] = getChannel(getX(\").concat(source.join(), \"), \").concat(innerDims, \");\\n        }\\n      \");\n  } else {\n    var _padSetup = \"\\n        \".concat(dtype, \" source = rc;\\n        \").concat(dtype, \" lt = \").concat(dtype, \"(lessThan(source, start));\\n        \").concat(dtype, \" gte = \").concat(dtype, \"(greaterThanEqual(source, end));\\n        \").concat(dtype, \" orig = 1 - (lt + gte);\\n        source = orig * source +\\n                lt * (start * 2 - source - \").concat(offset, \") +\\n                gte * ((end - 1) * 2 - source + \").concat(offset, \");\\n        source -= start;\\n      \");\n\n    mainLoop = \"\\n        \".concat(dtype, \" rc = outputLoc;\\n        \").concat(_padSetup, \"\\n        result[0] = getChannel(getX(\").concat(source.join(), \"), \").concat(innerDims, \");\\n        \").concat(coords[rank - 1], \" += 1;\\n        if(\").concat(cLimit, \") {\\n          \").concat(_padSetup, \"\\n          result[1] = getChannel(getX(\").concat(source.join(), \"), \").concat(innerDims, \");\\n        }\\n        rc = outputLoc;\\n        \").concat(coords[rank - 2], \" += 1;\\n        if(\").concat(coords[rank - 2], \" < \").concat(this.outputShape[rank - 2], \") {\\n          \").concat(_padSetup, \"\\n          result[2] = getChannel(getX(\").concat(source.join(), \"), \").concat(innerDims, \");\\n          \").concat(coords[rank - 1], \" += 1;\\n          if(\").concat(cLimit, \") {\\n            \").concat(_padSetup, \"\\n            result[3] = getChannel(getX(\").concat(source.join(), \"), \").concat(innerDims, \");\\n          }\\n        }\\n      \");\n  }\n\n  this.userCode = \"\\n      const \".concat(dtype, \" start = \").concat(dtype, \"(\").concat(start, \");\\n      const \").concat(dtype, \" end = \").concat(dtype, \"(\").concat(end, \");\\n\\n      void main() {\\n        \").concat(dtype, \" outputLoc = getOutputCoords();\\n        vec4 result = vec4(0.);\\n        \").concat(mainLoop, \"\\n        setOutput(result);\\n      }\\n    \");\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env, MirrorPad } from '@tensorflow/tfjs-core';\nimport { MirrorPadProgram } from '../mirror_pad_gpu';\nimport { MirrorPadPackedProgram } from '../mirror_pad_packed_gpu';\nexport var mirrorPadKernelFunc = function mirrorPadKernelFunc(_ref) {\n  var inputs = _ref.inputs,\n      backend = _ref.backend,\n      attrs = _ref.attrs;\n  var x = inputs.x;\n  var paddings = attrs.paddings,\n      mode = attrs.mode;\n  var program = env().getBool('WEBGL_PACK_ARRAY_OPERATIONS') ? new MirrorPadPackedProgram(x.shape, paddings, mode) : new MirrorPadProgram(x.shape, paddings, mode);\n  var output = backend.runWebGLProgram(program, [x], x.dtype);\n  return output;\n};\nexport var mirrorPadConfig = {\n  kernelName: MirrorPad,\n  backendName: 'webgl',\n  kernelFunc: mirrorPadKernelFunc\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Mod } from '@tensorflow/tfjs-core';\nimport { CHECK_NAN_SNIPPET } from '../binaryop_packed_gpu';\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nvar MOD = \"if (b == 0.0) return NAN;\\n  return mod(a, b);\";\nvar MOD_PACKED = \"\\n  vec4 result = mod(a, b);\\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\\n  \" + CHECK_NAN_SNIPPET + \"\\n  return result;\\n\";\nexport var mod = binaryKernelFunc({\n  opSnippet: MOD,\n  packedOpSnippet: MOD_PACKED\n});\nexport var modConfig = {\n  kernelName: Mod,\n  backendName: 'webgl',\n  kernelFunc: mod\n};","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var MultinomialProgram = /*#__PURE__*/function () {\n  function MultinomialProgram(batchSize, numOutcomes, numSamples) {\n    _classCallCheck(this, MultinomialProgram);\n\n    this.variableNames = ['probs'];\n    this.outputShape = [batchSize, numSamples];\n    this.userCode = \"\\n      uniform float seed;\\n\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int batch = coords[0];\\n\\n        float r = random(seed);\\n        float cdf = 0.0;\\n\\n        for (int i = 0; i < \".concat(numOutcomes - 1, \"; i++) {\\n          cdf += getProbs(batch, i);\\n\\n          if (r < cdf) {\\n            setOutput(float(i));\\n            return;\\n          }\\n        }\\n\\n        // If no other event happened, last event happened.\\n        setOutput(float(\").concat(numOutcomes - 1, \"));\\n      }\\n    \");\n  }\n\n  _createClass(MultinomialProgram, [{\n    key: \"getCustomSetupFunc\",\n    value: function getCustomSetupFunc(seed) {\n      var _this = this;\n\n      return function (gpgpu, webGLProgram) {\n        if (_this.seedLoc == null) {\n          _this.seedLoc = gpgpu.getUniformLocation(webGLProgram, 'seed');\n        }\n\n        gpgpu.gl.uniform1f(_this.seedLoc, seed);\n      };\n    }\n  }]);\n\n  return MultinomialProgram;\n}();","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { RealDiv } from '@tensorflow/tfjs-core';\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils'; // Without the equality check div produces 0.9999 for a = b, which when\n// floored can cause errors.\n\nvar DIV = \"\\nif (a == b) {\\n  return 1.0;\\n};\\nreturn a / b;\"; // We do the same as in ./binaryop_gpu, with vec4 and ivec4.\n// On Linux, the vectorized implementation produces NaNs when a and b are 0.\n\nvar DIV_PACKED = \"\\n  // vec4 one = vec4(equal(a, b));\\n  // return one + (vec4(1.0) - one) * a / b;\\n  vec4 result = a / b;\\n  if(a.x == b.x) {\\n    result.x = 1.;\\n  }\\n  if(a.y == b.y) {\\n    result.y = 1.;\\n  }\\n  if(a.z == b.z) {\\n    result.z = 1.;\\n  }\\n  if(a.w == b.w) {\\n    result.w = 1.;\\n  }\\n\\n  return result;\\n\";\nexport var realDiv = binaryKernelFunc({\n  opSnippet: DIV,\n  packedOpSnippet: DIV_PACKED,\n  checkOutOfBounds: true\n});\nexport var realDivConfig = {\n  kernelName: RealDiv,\n  backendName: 'webgl',\n  kernelFunc: realDiv\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Sub } from '@tensorflow/tfjs-core';\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { subImplCPU as cpuSub } from '../kernel_utils/shared';\nvar SUB = 'return a - b;';\nexport var sub = binaryKernelFunc({\n  opSnippet: SUB,\n  packedOpSnippet: SUB,\n  supportsComplex: true,\n  cpuKernelImpl: cpuSub\n});\nexport var subConfig = {\n  kernelName: Sub,\n  backendName: 'webgl',\n  kernelFunc: sub\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Softmax, util } from '@tensorflow/tfjs-core';\nimport { exp } from './Exp';\nimport { max } from './Max';\nimport { realDiv } from './RealDiv';\nimport { reshape } from './Reshape';\nimport { sub } from './Sub';\nimport { sum } from './Sum';\nexport function softmax(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var logits = inputs.logits;\n  var dim = attrs.dim;\n  var axes = util.parseAxisParam([dim], logits.shape);\n  var maxLogit = max({\n    inputs: {\n      x: logits\n    },\n    backend: backend,\n    attrs: {\n      reductionIndices: axes,\n      keepDims: false\n    }\n  });\n  var expandedShape = backend_util.expandShapeToKeepDim(maxLogit.shape, axes);\n  var maxLogitsReshaped = reshape({\n    inputs: {\n      x: maxLogit\n    },\n    backend: backend,\n    attrs: {\n      shape: expandedShape\n    }\n  });\n  var a = sub({\n    inputs: {\n      a: logits,\n      b: maxLogitsReshaped\n    },\n    backend: backend\n  });\n  var b = exp({\n    inputs: {\n      x: a\n    },\n    backend: backend\n  });\n  var sumExp = sum({\n    inputs: {\n      x: b\n    },\n    backend: backend,\n    attrs: {\n      axis: axes,\n      keepDims: false\n    }\n  });\n  var sumExpReshaped = reshape({\n    inputs: {\n      x: sumExp\n    },\n    backend: backend,\n    attrs: {\n      shape: expandedShape\n    }\n  });\n  var res = realDiv({\n    inputs: {\n      a: b,\n      b: sumExpReshaped\n    },\n    backend: backend\n  });\n  backend.disposeIntermediateTensorInfo(maxLogit);\n  backend.disposeIntermediateTensorInfo(maxLogitsReshaped);\n  backend.disposeIntermediateTensorInfo(a);\n  backend.disposeIntermediateTensorInfo(b);\n  backend.disposeIntermediateTensorInfo(sumExp);\n  backend.disposeIntermediateTensorInfo(sumExpReshaped);\n  return res;\n}\nexport var softmaxConfig = {\n  kernelName: Softmax,\n  backendName: 'webgl',\n  kernelFunc: softmax\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Multinomial } from '@tensorflow/tfjs-core';\nimport { MultinomialProgram } from '../multinomial_gpu';\nimport { softmax } from './Softmax';\nexport function multinomial(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var logits = inputs.logits;\n  var numSamples = attrs.numSamples,\n      seed = attrs.seed,\n      normalized = attrs.normalized;\n  var probs = normalized ? logits : softmax({\n    inputs: {\n      logits: logits\n    },\n    backend: backend,\n    attrs: {\n      dim: logits.shape.length - 1\n    }\n  });\n  var batchSize = probs.shape[0];\n  var numOutcomes = probs.shape[1];\n  var program = new MultinomialProgram(batchSize, numOutcomes, numSamples);\n  var customSetup = program.getCustomSetupFunc(seed);\n  var res = backend.runWebGLProgram(program, [probs], 'int32', customSetup);\n\n  if (!normalized) {\n    backend.disposeIntermediateTensorInfo(probs);\n  }\n\n  return res;\n}\nexport var multinomialConfig = {\n  kernelName: Multinomial,\n  backendName: 'webgl',\n  kernelFunc: multinomial\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env, Neg } from '@tensorflow/tfjs-core';\nimport { negImplCPU } from '../kernel_utils/shared';\nimport { UnaryOpProgram } from '../unaryop_gpu';\nimport { UnaryOpPackedProgram } from '../unaryop_packed_gpu';\nvar NEG = \"return -x;\"; // This doesn't use unaryKernelFunc because negImplCPU is not of type\n// SimpleUnaryKernelImplCPU.\n\nexport function neg(args) {\n  var inputs = args.inputs,\n      backend = args.backend;\n  var x = inputs.x;\n\n  if (backend.shouldExecuteOnCPU([x])) {\n    var xData = backend.texData.get(x.dataId);\n\n    var _negImplCPU = negImplCPU(xData.values, x.shape, x.dtype),\n        _negImplCPU2 = _slicedToArray(_negImplCPU, 2),\n        outValues = _negImplCPU2[0],\n        newShape = _negImplCPU2[1];\n\n    return backend.makeTensorInfo(newShape, x.dtype, outValues);\n  }\n\n  var program;\n\n  if (env().getBool('WEBGL_PACK_UNARY_OPERATIONS')) {\n    program = new UnaryOpPackedProgram(x.shape, NEG);\n  } else {\n    program = new UnaryOpProgram(x.shape, NEG);\n  }\n\n  return backend.runWebGLProgram(program, [x], x.dtype);\n}\nexport var negConfig = {\n  kernelName: Neg,\n  backendName: 'webgl',\n  kernelFunc: neg\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, kernel_impls, NonMaxSuppressionV3 } from '@tensorflow/tfjs-core';\nvar nonMaxSuppressionV3Impl = kernel_impls.nonMaxSuppressionV3Impl;\nexport function nonMaxSuppressionV3(args) {\n  backend_util.warn('tf.nonMaxSuppression() in webgl locks the UI thread. ' + 'Call tf.nonMaxSuppressionAsync() instead');\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var boxes = inputs.boxes,\n      scores = inputs.scores;\n  var maxOutputSize = attrs.maxOutputSize,\n      iouThreshold = attrs.iouThreshold,\n      scoreThreshold = attrs.scoreThreshold;\n  var boxesVals = backend.readSync(boxes.dataId);\n  var scoresVals = backend.readSync(scores.dataId);\n\n  var _nonMaxSuppressionV3I = nonMaxSuppressionV3Impl(boxesVals, scoresVals, maxOutputSize, iouThreshold, scoreThreshold),\n      selectedIndices = _nonMaxSuppressionV3I.selectedIndices;\n\n  return backend.makeTensorInfo([selectedIndices.length], 'int32', new Int32Array(selectedIndices));\n}\nexport var nonMaxSuppressionV3Config = {\n  kernelName: NonMaxSuppressionV3,\n  backendName: 'webgl',\n  kernelFunc: nonMaxSuppressionV3\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, kernel_impls, NonMaxSuppressionV4 } from '@tensorflow/tfjs-core';\nvar nonMaxSuppressionV4Impl = kernel_impls.nonMaxSuppressionV4Impl;\nexport function nonMaxSuppressionV4(args) {\n  backend_util.warn('tf.nonMaxSuppression() in webgl locks the UI thread. ' + 'Call tf.nonMaxSuppressionAsync() instead');\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var boxes = inputs.boxes,\n      scores = inputs.scores;\n  var maxOutputSize = attrs.maxOutputSize,\n      iouThreshold = attrs.iouThreshold,\n      scoreThreshold = attrs.scoreThreshold,\n      padToMaxOutputSize = attrs.padToMaxOutputSize;\n  var boxesVals = backend.readSync(boxes.dataId);\n  var scoresVals = backend.readSync(scores.dataId);\n\n  var _nonMaxSuppressionV4I = nonMaxSuppressionV4Impl(boxesVals, scoresVals, maxOutputSize, iouThreshold, scoreThreshold, padToMaxOutputSize),\n      selectedIndices = _nonMaxSuppressionV4I.selectedIndices,\n      validOutputs = _nonMaxSuppressionV4I.validOutputs;\n\n  return [backend.makeTensorInfo([selectedIndices.length], 'int32', new Int32Array(selectedIndices)), backend.makeTensorInfo([], 'int32', new Int32Array([validOutputs]))];\n}\nexport var nonMaxSuppressionV4Config = {\n  kernelName: NonMaxSuppressionV4,\n  backendName: 'webgl',\n  kernelFunc: nonMaxSuppressionV4\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, kernel_impls, NonMaxSuppressionV5 } from '@tensorflow/tfjs-core';\nvar nonMaxSuppressionV5Impl = kernel_impls.nonMaxSuppressionV5Impl;\nexport function nonMaxSuppressionV5(args) {\n  backend_util.warn('tf.nonMaxSuppression() in webgl locks the UI thread. ' + 'Call tf.nonMaxSuppressionAsync() instead');\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var boxes = inputs.boxes,\n      scores = inputs.scores;\n  var maxOutputSize = attrs.maxOutputSize,\n      iouThreshold = attrs.iouThreshold,\n      scoreThreshold = attrs.scoreThreshold,\n      softNmsSigma = attrs.softNmsSigma;\n  var boxesVals = backend.readSync(boxes.dataId);\n  var scoresVals = backend.readSync(scores.dataId);\n  var maxOutputSizeVal = maxOutputSize;\n  var iouThresholdVal = iouThreshold;\n  var scoreThresholdVal = scoreThreshold;\n  var softNmsSigmaVal = softNmsSigma;\n\n  var _nonMaxSuppressionV5I = nonMaxSuppressionV5Impl(boxesVals, scoresVals, maxOutputSizeVal, iouThresholdVal, scoreThresholdVal, softNmsSigmaVal),\n      selectedIndices = _nonMaxSuppressionV5I.selectedIndices,\n      selectedScores = _nonMaxSuppressionV5I.selectedScores;\n\n  return [backend.makeTensorInfo([selectedIndices.length], 'int32', new Int32Array(selectedIndices)), backend.makeTensorInfo([selectedScores.length], 'float32', new Float32Array(selectedScores))];\n}\nexport var nonMaxSuppressionV5Config = {\n  kernelName: NonMaxSuppressionV5,\n  backendName: 'webgl',\n  kernelFunc: nonMaxSuppressionV5\n};","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var OneHotProgram = function OneHotProgram(numIndices, depth, onValue, offValue) {\n  _classCallCheck(this, OneHotProgram);\n\n  this.variableNames = ['indices'];\n  this.outputShape = [numIndices, depth];\n  this.userCode = \"\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int index = round(getIndices(coords.x));\\n        setOutput(mix(float(\".concat(offValue, \"), float(\").concat(onValue, \"),\\n                      float(index == coords.y)));\\n      }\\n    \");\n};","import _toConsumableArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { OneHot, util } from '@tensorflow/tfjs-core';\nimport { OneHotProgram } from '../onehot_gpu';\nimport { reshape } from './Reshape';\nexport var oneHot = function oneHot(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var indices = inputs.indices;\n  var depth = attrs.depth,\n      onValue = attrs.onValue,\n      offValue = attrs.offValue;\n  var indicesSize = util.sizeFromShape(indices.shape);\n  var program = new OneHotProgram(indicesSize, depth, onValue, offValue);\n  var reshaped = reshape({\n    inputs: {\n      x: indices\n    },\n    backend: backend,\n    attrs: {\n      shape: [indicesSize]\n    }\n  });\n  var result = backend.runWebGLProgram(program, [reshaped], indices.dtype);\n  backend.disposeIntermediateTensorInfo(reshaped);\n  var outShape = [].concat(_toConsumableArray(indices.shape), [depth]);\n  var out = reshape({\n    inputs: {\n      x: result\n    },\n    backend: backend,\n    attrs: {\n      shape: outShape\n    }\n  });\n  backend.disposeIntermediateTensorInfo(result);\n  return out;\n};\nexport var oneHotConfig = {\n  kernelName: OneHot,\n  backendName: 'webgl',\n  kernelFunc: oneHot\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ZerosLike } from '@tensorflow/tfjs-core';\nimport { complex } from './Complex';\nimport { fill } from './Fill';\nimport { imag } from './Imag';\nimport { real } from './Real';\nexport function zerosLike(args) {\n  var inputs = args.inputs,\n      backend = args.backend;\n  var x = inputs.x;\n\n  if (x.dtype === 'complex64') {\n    var realPart = real({\n      inputs: {\n        input: x\n      },\n      backend: backend\n    });\n    var r = zerosLike({\n      inputs: {\n        x: realPart\n      },\n      backend: backend\n    });\n    var imagPart = imag({\n      inputs: {\n        input: x\n      },\n      backend: backend\n    });\n    var i = zerosLike({\n      inputs: {\n        x: imagPart\n      },\n      backend: backend\n    });\n    var result = complex({\n      inputs: {\n        real: r,\n        imag: i\n      },\n      backend: backend\n    });\n    backend.disposeIntermediateTensorInfo(realPart);\n    backend.disposeIntermediateTensorInfo(r);\n    backend.disposeIntermediateTensorInfo(imagPart);\n    backend.disposeIntermediateTensorInfo(i);\n    return result;\n  } else {\n    return fill({\n      attrs: {\n        shape: x.shape,\n        dtype: x.dtype,\n        value: x.dtype === 'string' ? '' : 0\n      },\n      backend: backend\n    });\n  }\n}\nexport var zerosLikeConfig = {\n  kernelName: ZerosLike,\n  backendName: 'webgl',\n  kernelFunc: zerosLike\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { OnesLike } from '@tensorflow/tfjs-core';\nimport { complex } from './Complex';\nimport { fill } from './Fill';\nimport { imag } from './Imag';\nimport { real } from './Real';\nimport { zerosLike } from './ZerosLike';\nexport function onesLike(args) {\n  var inputs = args.inputs,\n      backend = args.backend;\n  var x = inputs.x;\n\n  if (x.dtype === 'string') {\n    throw new Error('onesLike is not supported under string dtype');\n  } else if (x.dtype === 'complex64') {\n    var realPart = real({\n      inputs: {\n        input: x\n      },\n      backend: backend\n    });\n    var r = onesLike({\n      inputs: {\n        x: realPart\n      },\n      backend: backend\n    });\n    var imagPart = imag({\n      inputs: {\n        input: x\n      },\n      backend: backend\n    });\n    var i = zerosLike({\n      inputs: {\n        x: imagPart\n      },\n      backend: backend\n    });\n    var result = complex({\n      inputs: {\n        real: r,\n        imag: i\n      },\n      backend: backend\n    });\n    backend.disposeIntermediateTensorInfo(realPart);\n    backend.disposeIntermediateTensorInfo(r);\n    backend.disposeIntermediateTensorInfo(imagPart);\n    backend.disposeIntermediateTensorInfo(i);\n    return result;\n  } else {\n    // TODO(cais, smilkov): Add WebGL shader for onesLike:\n    //   https://github.com/tensorflow/tfjs/issues/1293\n    return fill({\n      attrs: {\n        shape: x.shape,\n        dtype: x.dtype,\n        value: 1\n      },\n      backend: backend\n    });\n  }\n}\nexport var onesLikeConfig = {\n  kernelName: OnesLike,\n  backendName: 'webgl',\n  kernelFunc: onesLike\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Pack, util } from '@tensorflow/tfjs-core';\nimport { concat } from './Concat';\nimport { expandDims } from './ExpandDims';\nexport function pack(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var axis = attrs.axis;\n\n  if (inputs.length === 1) {\n    return expandDims({\n      inputs: {\n        input: inputs[0]\n      },\n      backend: backend,\n      attrs: {\n        dim: axis\n      }\n    });\n  }\n\n  var shape = inputs[0].shape;\n  var dtype = inputs[0].dtype;\n  inputs.forEach(function (t) {\n    util.assertShapesMatch(shape, t.shape, 'All tensors passed to stack must have matching shapes');\n    util.assert(dtype === t.dtype, function () {\n      return 'All tensors passed to stack must have matching dtypes';\n    });\n  });\n  var intermediateTensorInfos = [];\n  var expandedTensors = inputs.map(function (t) {\n    var expandedT = expandDims({\n      inputs: {\n        input: t\n      },\n      backend: backend,\n      attrs: {\n        dim: axis\n      }\n    });\n    intermediateTensorInfos.push(expandedT);\n    return expandedT;\n  });\n  var result = concat({\n    inputs: expandedTensors,\n    backend: backend,\n    attrs: {\n      axis: axis\n    }\n  });\n  intermediateTensorInfos.forEach(function (t) {\n    return backend.disposeIntermediateTensorInfo(t);\n  });\n  return result;\n}\nexport var packConfig = {\n  kernelName: Pack,\n  backendName: 'webgl',\n  kernelFunc: pack\n};","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getCoordsDataType } from './shader_compiler';\nexport var PadProgram = /*#__PURE__*/function () {\n  function PadProgram(xShape, paddings, constantValue) {\n    _classCallCheck(this, PadProgram);\n\n    this.variableNames = ['x'];\n    this.outputShape = paddings.map(function (p, i) {\n      return p[0]\n      /* beforePad */\n      + xShape[i] + p[1];\n    }\n    /* afterPad */\n    );\n    var rank = xShape.length;\n    var type = getCoordsDataType(rank);\n    var start = paddings.map(function (p) {\n      return p[0];\n    }).join(',');\n    var end = paddings.map(function (p, i) {\n      return p[0] + xShape[i];\n    }).join(',');\n    var unpackedCoords = ['coords[0]', 'coords[1]', 'coords[2]', 'coords[3]'].slice(0, rank);\n\n    if (rank === 1) {\n      this.userCode = \"\\n        int start = \".concat(start, \";\\n        int end = \").concat(end, \";\\n        uniform float value;\\n\\n        void main() {\\n          int outC = getOutputCoords();\\n          if (outC < start || outC >= end) {\\n            setOutput(value);\\n          } else {\\n            setOutput(getX(outC - start));\\n          }\\n        }\\n      \");\n      return;\n    }\n\n    this.userCode = \"\\n      \".concat(type, \" start = \").concat(type, \"(\").concat(start, \");\\n      \").concat(type, \" end = \").concat(type, \"(\").concat(end, \");\\n      uniform float value;\\n\\n      void main() {\\n        \").concat(type, \" outC = getOutputCoords();\\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\\n          setOutput(value);\\n        } else {\\n          \").concat(type, \" coords = outC - start;\\n          setOutput(getX(\").concat(unpackedCoords, \"));\\n        }\\n      }\\n    \");\n  }\n\n  _createClass(PadProgram, [{\n    key: \"getCustomSetupFunc\",\n    value: function getCustomSetupFunc(value) {\n      var _this = this;\n\n      return function (gpgpu, webGLProgram) {\n        if (_this.valueLoc == null) {\n          _this.valueLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'value');\n        }\n\n        gpgpu.gl.uniform1f(_this.valueLoc, value);\n      };\n    }\n  }]);\n\n  return PadProgram;\n}();","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getChannels } from './packing_util';\nimport { getCoordsDataType } from './shader_compiler';\nexport var PadPackedProgram = /*#__PURE__*/function () {\n  function PadPackedProgram(xShape, paddings, constantValue) {\n    _classCallCheck(this, PadPackedProgram);\n\n    this.variableNames = ['x'];\n    this.packedInputs = true;\n    this.packedOutput = true;\n    this.outputShape = paddings.map(function (p, i) {\n      return p[0]\n      /* beforePad */\n      + xShape[i] + p[1];\n    }\n    /* afterPad */\n    );\n    var rank = xShape.length;\n    var dtype = getCoordsDataType(rank);\n    var start = paddings.map(function (p) {\n      return p[0];\n    }).join(',');\n    var end = paddings.map(function (p, i) {\n      return p[0] + xShape[i];\n    }).join(',');\n    var coords = getChannels('rc', rank);\n    var source = getChannels('source', rank);\n    var cLimit = \"\".concat(coords[rank - 1], \" < \").concat(this.outputShape[rank - 1]);\n    var innerDims = rank === 1 ? 'source' : \"vec2(\".concat(source.slice(-2).join(), \")\");\n    var componentSetup = [\"\".concat(dtype, \" rc = outputLoc;\"), \"\".concat(coords[rank - 1], \" += 1;\\n       if(\").concat(cLimit, \") {\\n      \"), rank === 1 ? '' : \"}\\n       rc = outputLoc;\\n       \".concat(coords[rank - 2], \" += 1;\\n       if(\").concat(coords[rank - 2], \" < \").concat(this.outputShape[rank - 2], \") {\"), rank === 1 ? '' : \"  \".concat(coords[rank - 1], \" += 1;\\n         if(\").concat(cLimit, \") {\")];\n    var paddingArea = rank === 1 ? 'rc < start || rc >= end' : 'any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))';\n    var mainLoop = '';\n\n    for (var i = 0, j = rank === 1 ? 2 : 4; i < j; i++) {\n      mainLoop += \"\\n        \".concat(componentSetup[i], \"\\n        if (\").concat(paddingArea, \") {\\n          result[\").concat(i, \"] = float(value);\\n        } else {\\n          \").concat(dtype, \" source = rc - start;\\n          result[\").concat(i, \"] = getChannel(getX(\").concat(source.join(), \"), \").concat(innerDims, \");\\n        }\\n      \");\n    }\n\n    mainLoop += rank === 1 ? \"} \" : \"}}\";\n    this.userCode = \"\\n      const \".concat(dtype, \" start = \").concat(dtype, \"(\").concat(start, \");\\n      const \").concat(dtype, \" end = \").concat(dtype, \"(\").concat(end, \");\\n      uniform float value;\\n\\n      void main() {\\n        \").concat(dtype, \" outputLoc = getOutputCoords();\\n        vec4 result = vec4(0.);\\n        \").concat(mainLoop, \"\\n        setOutput(result);\\n      }\\n    \");\n  }\n\n  _createClass(PadPackedProgram, [{\n    key: \"getCustomSetupFunc\",\n    value: function getCustomSetupFunc(value) {\n      var _this = this;\n\n      return function (gpgpu, webGLProgram) {\n        if (_this.valueLoc == null) {\n          _this.valueLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'value');\n        }\n\n        gpgpu.gl.uniform1f(_this.valueLoc, value);\n      };\n    }\n  }]);\n\n  return PadPackedProgram;\n}();","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env, PadV2 } from '@tensorflow/tfjs-core';\nimport { PadProgram } from '../pad_gpu';\nimport { PadPackedProgram } from '../pad_packed_gpu';\nexport var padV2 = function padV2(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  var paddings = attrs.paddings,\n      constantValue = attrs.constantValue;\n  var program = env().getBool('WEBGL_PACK_ARRAY_OPERATIONS') ? new PadPackedProgram(x.shape, paddings, constantValue) : new PadProgram(x.shape, paddings, constantValue);\n  var customSetup = program.getCustomSetupFunc(constantValue);\n  return backend.runWebGLProgram(program, [x], x.dtype, customSetup);\n};\nexport var padV2Config = {\n  kernelName: PadV2,\n  backendName: 'webgl',\n  kernelFunc: padV2\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Pow } from '@tensorflow/tfjs-core';\nimport { CHECK_NAN_SNIPPET } from '../binaryop_packed_gpu';\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nvar POW = \"\\n  if(a < 0.0 && floor(b) < b){\\n    return NAN;\\n  }\\n  if (b == 0.0) {\\n    return 1.0;\\n  }\\n  return (round(mod(b, 2.0)) != 1) ?\\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\\n\";\nvar POW_PACKED = \"\\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\\n  vec4 result = multiplier * pow(abs(a), b);\\n\\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\\n  bvec4 isExpZero = equal(b, vec4(0.0));\\n  result.r = isExpZero.r ? 1.0 : result.r;\\n  result.g = isExpZero.g ? 1.0 : result.g;\\n  result.b = isExpZero.b ? 1.0 : result.b;\\n  result.a = isExpZero.a ? 1.0 : result.a;\\n\\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\\n  \" + CHECK_NAN_SNIPPET + \"\\n  return result;\\n\";\nexport var pow = binaryKernelFunc({\n  opSnippet: POW,\n  packedOpSnippet: POW_PACKED\n});\nexport var powConfig = {\n  kernelName: Pow,\n  backendName: 'webgl',\n  kernelFunc: pow\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Prod, sumOutType, util } from '@tensorflow/tfjs-core';\nimport { reduce } from '../kernel_utils/reduce';\nimport { prodImplCPU } from '../kernel_utils/shared';\nimport { reshape } from './Reshape';\nimport { transpose } from './Transpose';\nexport function prod(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  var axis = attrs.axis,\n      keepDims = attrs.keepDims;\n  var xRank = x.shape.length;\n  var toDispose = [];\n  var origAxes = util.parseAxisParam(axis, x.shape);\n  var axes = origAxes;\n  var permutedAxes = backend_util.getAxesPermutation(axes, xRank);\n  var permutedX = x;\n\n  if (permutedAxes != null) {\n    permutedX = transpose({\n      inputs: {\n        x: x\n      },\n      backend: backend,\n      attrs: {\n        perm: permutedAxes\n      }\n    });\n    axes = backend_util.getInnerMostAxes(axes.length, xRank);\n    toDispose.push(permutedX);\n  }\n\n  backend_util.assertAxesAreInnerMostDims('prod', axes, xRank);\n  var res;\n\n  if (backend.shouldExecuteOnCPU([permutedX])) {\n    var xVals = backend.texData.get(permutedX.dataId).values;\n\n    var _prodImplCPU = prodImplCPU(permutedX.shape, permutedX.dtype, xVals, axes),\n        outVals = _prodImplCPU.outVals,\n        outShape = _prodImplCPU.outShape,\n        outDtype = _prodImplCPU.outDtype;\n\n    res = backend.makeTensorInfo(outShape, outDtype, outVals);\n  } else {\n    var _backend_util$compute = backend_util.computeOutAndReduceShapes(permutedX.shape, axes),\n        _backend_util$compute2 = _slicedToArray(_backend_util$compute, 2),\n        _outShape = _backend_util$compute2[0],\n        reduceShape = _backend_util$compute2[1];\n\n    var inSize = util.sizeFromShape(reduceShape);\n    var a2D = reshape({\n      inputs: {\n        x: permutedX\n      },\n      backend: backend,\n      attrs: {\n        shape: [-1, inSize]\n      }\n    });\n    var outputDType = sumOutType(x.dtype);\n    var reduced = reduce(a2D, outputDType, 'prod', backend);\n    res = reshape({\n      inputs: {\n        x: reduced\n      },\n      backend: backend,\n      attrs: {\n        shape: _outShape\n      }\n    });\n    toDispose.push(a2D);\n    toDispose.push(reduced);\n  }\n\n  if (keepDims) {\n    toDispose.push(res);\n    var newShape = backend_util.expandShapeToKeepDim(res.shape, origAxes);\n    res = reshape({\n      inputs: {\n        x: res\n      },\n      backend: backend,\n      attrs: {\n        shape: newShape\n      }\n    });\n  }\n\n  toDispose.forEach(function (t) {\n    return backend.disposeIntermediateTensorInfo(t);\n  });\n  return res;\n}\nexport var prodConfig = {\n  kernelName: Prod,\n  backendName: 'webgl',\n  kernelFunc: prod\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Range } from '@tensorflow/tfjs-core';\nimport { rangeImplCPU } from '../kernel_utils/shared';\nexport var range = function range(args) {\n  var backend = args.backend,\n      attrs = args.attrs;\n  var start = attrs.start,\n      stop = attrs.stop,\n      step = attrs.step,\n      dtype = attrs.dtype;\n  var values = rangeImplCPU(start, stop, step, dtype);\n  return backend.makeTensorInfo([values.length], dtype, values);\n};\nexport var rangeConfig = {\n  kernelName: Range,\n  backendName: 'webgl',\n  kernelFunc: range\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Reciprocal } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nvar RECIPROCAL = \"return 1.0 / x;\";\nexport var reciprocal = unaryKernelFunc({\n  opSnippet: RECIPROCAL\n});\nexport var reciprocalConfig = {\n  kernelName: Reciprocal,\n  backendName: 'webgl',\n  kernelFunc: reciprocal\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Relu } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { CHECK_NAN_SNIPPET } from '../unaryop_gpu';\nvar RELU = CHECK_NAN_SNIPPET + \"\\n  return (x < 0.0) ? 0.0 : x;\\n\";\nvar RELU_PACKED = \"\\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\\n  bvec4 isNaN = isnan(x);\\n\\n  result.r = isNaN.r ? x.r : result.r;\\n  result.g = isNaN.g ? x.g : result.g;\\n  result.b = isNaN.b ? x.b : result.b;\\n  result.a = isNaN.a ? x.a : result.a;\\n\\n  return result;\\n\";\nexport var relu = unaryKernelFunc({\n  opSnippet: RELU,\n  packedOpSnippet: RELU_PACKED\n});\nexport var reluConfig = {\n  kernelName: Relu,\n  backendName: 'webgl',\n  kernelFunc: relu\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Relu6 } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { CHECK_NAN_SNIPPET } from '../unaryop_gpu';\nvar RELU6 = CHECK_NAN_SNIPPET + \"\\n  return (x < 0.0) ? 0.0 : min(6.0, x);\\n\";\nvar RELU6_PACKED = \"\\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\\n  bvec4 isNaN = isnan(x);\\n\\n  result.r = isNaN.r ? x.r : result.r;\\n  result.g = isNaN.g ? x.g : result.g;\\n  result.b = isNaN.b ? x.b : result.b;\\n  result.a = isNaN.a ? x.a : result.a;\\n\\n  return result;\\n\";\nexport var relu6 = unaryKernelFunc({\n  opSnippet: RELU6,\n  packedOpSnippet: RELU6_PACKED\n});\nexport var relu6Config = {\n  kernelName: Relu6,\n  backendName: 'webgl',\n  kernelFunc: relu6\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var ResizeBilinearProgram = function ResizeBilinearProgram(inputShape, newHeight, newWidth, alignCorners, halfPixelCenters) {\n  _classCallCheck(this, ResizeBilinearProgram);\n\n  this.variableNames = ['A'];\n  this.outputShape = [];\n\n  var _inputShape = _slicedToArray(inputShape, 4),\n      batch = _inputShape[0],\n      oldHeight = _inputShape[1],\n      oldWidth = _inputShape[2],\n      depth = _inputShape[3];\n\n  this.outputShape = [batch, newHeight, newWidth, depth];\n  var effectiveInSize = [alignCorners && newHeight > 1 ? oldHeight - 1 : oldHeight, alignCorners && newWidth > 1 ? oldWidth - 1 : oldWidth];\n  var effectiveOutSize = [alignCorners && newHeight > 1 ? newHeight - 1 : newHeight, alignCorners && newWidth > 1 ? newWidth - 1 : newWidth];\n  var sourceFracIndexRC;\n\n  if (halfPixelCenters) {\n    sourceFracIndexRC = \"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC\" + \" - vec2(0.5)\";\n  } else {\n    sourceFracIndexRC = \"vec2(yRC) * effectiveInputOverOutputRatioRC\";\n  }\n\n  this.userCode = \"\\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\\n          \".concat(effectiveInSize[0] / effectiveOutSize[0], \",\\n          \").concat(effectiveInSize[1] / effectiveOutSize[1], \");\\n      const vec2 inputShapeRC = vec2(\").concat(oldHeight, \".0, \").concat(oldWidth, \".0);\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int d = coords[3];\\n        ivec2 yRC = coords.yz;\\n\\n        // Fractional source index.\\n        vec2 sourceFracIndexRC = \").concat(sourceFracIndexRC, \";\\n\\n        // Compute the four integer indices.\\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\\n        ivec2 sourceCeilRC = ivec2(\\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\\n\\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\\n\\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\\n\\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\\n        float newValue = top + (bottom - top) * fracRC.x;\\n\\n        setOutput(newValue);\\n      }\\n    \");\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var ResizeBilinearPackedProgram = function ResizeBilinearPackedProgram(inputShape, newHeight, newWidth, alignCorners, halfPixelCenters) {\n  _classCallCheck(this, ResizeBilinearPackedProgram);\n\n  this.variableNames = ['A'];\n  this.packedInputs = true;\n  this.packedOutput = true;\n  this.outputShape = [];\n\n  var _inputShape = _slicedToArray(inputShape, 4),\n      batch = _inputShape[0],\n      oldHeight = _inputShape[1],\n      oldWidth = _inputShape[2],\n      depth = _inputShape[3];\n\n  this.outputShape = [batch, newHeight, newWidth, depth];\n  var effectiveInSize = [alignCorners && newHeight > 1 ? oldHeight - 1 : oldHeight, alignCorners && newWidth > 1 ? oldWidth - 1 : oldWidth];\n  var effectiveOutSize = [alignCorners && newHeight > 1 ? newHeight - 1 : newHeight, alignCorners && newWidth > 1 ? newWidth - 1 : newWidth];\n  var sourceFracIndexRC;\n\n  if (halfPixelCenters) {\n    sourceFracIndexRC = \"(vec3(yRC) + vec3(0.5)) * \" + \"effectiveInputOverOutputRatioRC - vec3(0.5)\";\n  } else {\n    sourceFracIndexRC = \"vec3(yRC) * effectiveInputOverOutputRatioRC\";\n  }\n\n  this.userCode = \"\\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\\n          \".concat(effectiveInSize[0] / effectiveOutSize[0], \",\\n          \").concat(effectiveInSize[1] / effectiveOutSize[1], \",\\n          \").concat(effectiveInSize[1] / effectiveOutSize[1], \");\\n      const vec3 inputShapeRC = vec3(\").concat(oldHeight, \".0, \").concat(oldWidth, \".0,\\n                                     \").concat(oldWidth, \".0);\\n\\n      float getAValue(int b, int r, int c, int d) {\\n        return getChannel(getA(b, r, c, d), vec2(c, d));\\n      }\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int d = coords[3];\\n        // Calculate values for next column in yRC.z.\\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\\n\\n        // Fractional source index.\\n        vec3 sourceFracIndexRC = \").concat(sourceFracIndexRC, \";\\n\\n        // Compute the four integer indices.\\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\\n        ivec3 sourceCeilRC = ivec3(\\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\\n\\n        // Should we calculate next column and row elements in 2x2 packed cell.\\n        bool hasNextCol = d < \").concat(depth - 1, \";\\n        bool hasNextRow = coords.z < \").concat(newWidth - 1, \";\\n\\n        // In parallel, construct four corners for all four components in\\n        // packed 2x2 cell.\\n        vec4 topLeft = vec4(\\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\\n                     : 0.0,\\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\\n                     : 0.0,\\n          (hasNextRow && hasNextCol) ?\\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\\n\\n        vec4 bottomLeft = vec4(\\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\\n                     : 0.0,\\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\\n                     : 0.0,\\n          (hasNextRow && hasNextCol) ?\\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\\n\\n        vec4 topRight = vec4(\\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\\n                     : 0.0,\\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\\n                     : 0.0,\\n          (hasNextRow && hasNextCol) ?\\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\\n\\n        vec4 bottomRight = vec4(\\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\\n                     : 0.0,\\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\\n                     : 0.0,\\n          (hasNextRow && hasNextCol) ?\\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\\n\\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\\n\\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\\n        vec4 newValue = mix(top, bottom, fracRC.x);\\n\\n        setOutput(newValue);\\n      }\\n    \");\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env, ResizeBilinear } from '@tensorflow/tfjs-core';\nimport { ResizeBilinearProgram } from '../resize_bilinear_gpu';\nimport { ResizeBilinearPackedProgram } from '../resize_bilinear_packed_gpu';\nexport function resizeBilinear(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var images = inputs.images;\n  var alignCorners = attrs.alignCorners,\n      halfPixelCenters = attrs.halfPixelCenters,\n      size = attrs.size;\n\n  var _size = _slicedToArray(size, 2),\n      newHeight = _size[0],\n      newWidth = _size[1];\n\n  var program = env().getBool('WEBGL_PACK_IMAGE_OPERATIONS') ? new ResizeBilinearPackedProgram(images.shape, newHeight, newWidth, alignCorners, halfPixelCenters) : new ResizeBilinearProgram(images.shape, newHeight, newWidth, alignCorners, halfPixelCenters);\n  return backend.runWebGLProgram(program, [images], 'float32');\n}\nexport var resizeBilinearConfig = {\n  kernelName: ResizeBilinear,\n  backendName: 'webgl',\n  kernelFunc: resizeBilinear\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var ResizeBilinearBackpropProgram = function ResizeBilinearBackpropProgram(dyShape, inputShape, alignCorners) {\n  _classCallCheck(this, ResizeBilinearBackpropProgram);\n\n  this.variableNames = ['dy'];\n  this.outputShape = [];\n  this.outputShape = inputShape;\n\n  var _inputShape = _slicedToArray(inputShape, 3),\n      xHeight = _inputShape[1],\n      xWidth = _inputShape[2];\n\n  var _dyShape = _slicedToArray(dyShape, 3),\n      yHeight = _dyShape[1],\n      yWidth = _dyShape[2]; // In the backwards pass, we want to find the pixels that were generated for\n  // each pixel in the input image the forward pass and add the corresponding\n  // coefficient from dy to the gradient (with some interpolation).\n\n\n  var effectiveXSize = [alignCorners && yHeight > 1 ? xHeight - 1 : xHeight, alignCorners && yWidth > 1 ? xWidth - 1 : xWidth];\n  var effectiveYSize = [alignCorners && yHeight > 1 ? yHeight - 1 : yHeight, alignCorners && yWidth > 1 ? yWidth - 1 : yWidth];\n  var heightScale = effectiveXSize[0] / effectiveYSize[0];\n  var widthScale = effectiveXSize[1] / effectiveYSize[1];\n  var invHeightScale = 1 / heightScale;\n  var invWidthScale = 1 / widthScale; // This defines the size of the window of values around a particular\n  // index in dy that we want to search for contributions to dx.\n\n  var winHeight = Math.ceil(invHeightScale) * 2 + 2;\n  var winWidth = Math.ceil(invWidthScale) * 2 + 2;\n  this.userCode = \"\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int d = coords[3];\\n        int r = coords[1];\\n        int c = coords[2];\\n\\n        float accumulator = 0.0;\\n\\n        const float heightScale = float(\".concat(heightScale, \");\\n        const float widthScale = float(\").concat(widthScale, \");\\n\\n        const float invHeightScale = float(\").concat(invHeightScale, \");\\n        const float invWidthScale = float(\").concat(invWidthScale, \");\\n\\n        const int winHeight = int(\").concat(winHeight, \");\\n        const int winWidth = int(\").concat(winWidth, \");\\n\\n        // Compute bounds for where in dy we will look\\n        float startRLerp = floor(float(r) * invHeightScale);\\n        int startDyR = int(startRLerp - float(winHeight / 2));\\n\\n        float startCLerp = floor(float(c) * invWidthScale);\\n        int startDyC = int(startCLerp - float(winWidth / 2));\\n\\n        // Loop over dy\\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\\n          int dyR = dyROffset + startDyR;\\n\\n          // Guard against the window exceeding the bounds of dy\\n          if (dyR < 0 || dyR >= \").concat(yHeight, \") {\\n            continue;\\n          }\\n\\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\\n            int dyC = dyCOffset + startDyC;\\n\\n            // Guard against the window exceeding the bounds of dy\\n            if (dyC < 0 || dyC >= \").concat(yWidth, \") {\\n              continue;\\n            }\\n\\n            float dxR = float(dyR) * heightScale;\\n            int topDxRIndex = int(floor(dxR));\\n            int bottomDxRIndex = int(min(ceil(dxR), \").concat(xHeight - 1, \".0));\\n            float dxRLerp = dxR - float(topDxRIndex);\\n            float inverseDxRLerp = 1.0 - dxRLerp;\\n\\n            float dxC = float(dyC) * widthScale;\\n            int leftDxCIndex = int(floor(dxC));\\n            int rightDxCIndex = int(min(ceil(dxC), \").concat(xWidth - 1, \".0));\\n            float dxCLerp = dxC - float(leftDxCIndex);\\n            float inverseDxCLerp = 1.0 - dxCLerp;\\n\\n            if (r == topDxRIndex && c == leftDxCIndex) {\\n              // topLeft\\n              accumulator +=\\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\\n            }\\n\\n            if (r == topDxRIndex && c == rightDxCIndex) {\\n              // topRight\\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\\n            }\\n\\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\\n              // bottomLeft\\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\\n            }\\n\\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\\n              // bottomRight\\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\\n            }\\n          }\\n        }\\n        // End loop over dy\\n\\n        setOutput(accumulator);\\n      }\\n    \");\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ResizeBilinearGrad } from '@tensorflow/tfjs-core';\nimport { ResizeBilinearBackpropProgram } from '../resize_bilinear_backprop_gpu';\nexport function resizeBilinearGrad(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var images = inputs.images,\n      dy = inputs.dy;\n  var alignCorners = attrs.alignCorners;\n  var program = new ResizeBilinearBackpropProgram(dy.shape, images.shape, alignCorners);\n  return backend.runWebGLProgram(program, [dy], dy.dtype);\n}\nexport var resizeBilinearGradConfig = {\n  kernelName: ResizeBilinearGrad,\n  backendName: 'webgl',\n  kernelFunc: resizeBilinearGrad\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var ResizeNearestNeighborProgram = function ResizeNearestNeighborProgram(inputShape, newHeight, newWidth, alignCorners, halfPixelCenters) {\n  _classCallCheck(this, ResizeNearestNeighborProgram);\n\n  this.variableNames = ['A'];\n  this.outputShape = [];\n\n  var _inputShape = _slicedToArray(inputShape, 4),\n      batch = _inputShape[0],\n      oldHeight = _inputShape[1],\n      oldWidth = _inputShape[2],\n      depth = _inputShape[3];\n\n  this.outputShape = [batch, newHeight, newWidth, depth];\n  var effectiveInSize = [alignCorners && newHeight > 1 ? oldHeight - 1 : oldHeight, alignCorners && newWidth > 1 ? oldWidth - 1 : oldWidth];\n  var effectiveOutSize = [alignCorners && newHeight > 1 ? newHeight - 1 : newHeight, alignCorners && newWidth > 1 ? newWidth - 1 : newWidth]; // When align corners is false, we rounds the value with floor.\n\n  var roundBase = alignCorners ? '0.5' : '0.0';\n  var sourceFracIndexRC;\n\n  if (halfPixelCenters) {\n    sourceFracIndexRC = \"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC\" + \", vec2(0.0))\";\n  } else {\n    sourceFracIndexRC = \"vec2(yRC) * effectiveInputOverOutputRatioRC\";\n  }\n\n  this.userCode = \"\\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\\n          \".concat(effectiveInSize[0] / effectiveOutSize[0], \",\\n          \").concat(effectiveInSize[1] / effectiveOutSize[1], \");\\n      const vec2 inputShapeRC = vec2(\").concat(oldHeight, \".0, \").concat(oldWidth, \".0);\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int d = coords[3];\\n        ivec2 yRC = coords.yz;\\n\\n        // Fractional source index.\\n        vec2 sourceFracIndexRC = \").concat(sourceFracIndexRC, \";\\n\\n        // Compute the coordinators of nearest neighbor point.\\n        ivec2 sourceNearestRC = ivec2(\\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + \").concat(roundBase, \")));\\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\\n\\n        setOutput(newValue);\\n      }\\n    \");\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ResizeNearestNeighbor } from '@tensorflow/tfjs-core';\nimport { ResizeNearestNeighborProgram } from '../resize_nearest_neighbor_gpu';\nexport function resizeNearestNeighbor(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var images = inputs.images;\n  var alignCorners = attrs.alignCorners,\n      halfPixelCenters = attrs.halfPixelCenters,\n      size = attrs.size;\n\n  var _size = _slicedToArray(size, 2),\n      newHeight = _size[0],\n      newWidth = _size[1];\n\n  var program = new ResizeNearestNeighborProgram(images.shape, newHeight, newWidth, alignCorners, halfPixelCenters);\n  return backend.runWebGLProgram(program, [images], images.dtype);\n}\nexport var resizeNearestNeighborConfig = {\n  kernelName: ResizeNearestNeighbor,\n  backendName: 'webgl',\n  kernelFunc: resizeNearestNeighbor\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var ResizeNearestNeigborBackpropProgram = function ResizeNearestNeigborBackpropProgram(dyShape, inputShape, alignCorners) {\n  _classCallCheck(this, ResizeNearestNeigborBackpropProgram);\n\n  this.variableNames = ['dy'];\n  this.outputShape = [];\n  this.outputShape = inputShape;\n\n  var _inputShape = _slicedToArray(inputShape, 3),\n      xHeight = _inputShape[1],\n      xWidth = _inputShape[2];\n\n  var _dyShape = _slicedToArray(dyShape, 3),\n      yHeight = _dyShape[1],\n      yWidth = _dyShape[2]; // In the backwards pass, we want to find the pixels that were generated for\n  // each pixel in the input image the forward pass and add the corresponding\n  // coefficient from dy to the gradient (with some interpolation).\n\n\n  var effectiveXSize = [alignCorners && yHeight > 1 ? xHeight - 1 : xHeight, alignCorners && yWidth > 1 ? xWidth - 1 : xWidth];\n  var effectiveYSize = [alignCorners && yHeight > 1 ? yHeight - 1 : yHeight, alignCorners && yWidth > 1 ? yWidth - 1 : yWidth];\n  var heightScale = effectiveXSize[0] / effectiveYSize[0];\n  var widthScale = effectiveXSize[1] / effectiveYSize[1];\n  var invHeightScale = 1 / heightScale;\n  var invWidthScale = 1 / widthScale; // This defines the size of the window of values around a particular\n  // index in dy that we want to search for contributions to dx.\n\n  var winHeight = Math.ceil(invHeightScale) * 2 + 2;\n  var winWidth = Math.ceil(invWidthScale) * 2 + 2;\n  this.userCode = \"\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int d = coords[3];\\n        int r = coords[1];\\n        int c = coords[2];\\n\\n        float accumulator = 0.0;\\n\\n        const float heightScale = float(\".concat(heightScale, \");\\n        const float widthScale = float(\").concat(widthScale, \");\\n\\n        const float invHeightScale = float(\").concat(invHeightScale, \");\\n        const float invWidthScale = float(\").concat(invWidthScale, \");\\n\\n        const int winHeight = int(\").concat(winHeight, \");\\n        const int winWidth = int(\").concat(winWidth, \");\\n\\n        // Compute bounds for where in dy we will look\\n        float startRLerp = floor(float(r) * invHeightScale);\\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\\n\\n        float startCLerp = floor(float(c) * invWidthScale);\\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\\n\\n        // Loop over dy\\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\\n          int dyR = dyROffset + startDyR;\\n\\n          // Guard against the window exceeding the bounds of dy\\n          if (dyR < 0 || dyR >= \").concat(yHeight, \") {\\n            continue;\\n          }\\n\\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\\n            int dyC = dyCOffset + startDyC;\\n\\n            // Guard against the window exceeding the bounds of dy\\n            if (dyC < 0 || dyC >= \").concat(yWidth, \") {\\n              continue;\\n            }\\n\\n            float sourceFracRow =\\n              float(\").concat(effectiveXSize[0], \") *\\n                (float(dyR) / float(\").concat(effectiveYSize[0], \"));\\n\\n            float sourceFracCol =\\n                float(\").concat(effectiveXSize[1], \") *\\n                  (float(dyC) / float(\").concat(effectiveYSize[1], \"));\\n\\n            int sourceNearestRow = int(min(\\n                float(int(\").concat(xHeight, \") - 1),\\n                \").concat(alignCorners, \" ? float(round(sourceFracRow)) :\\n                                  float(floor(sourceFracRow))));\\n\\n            int sourceNearestCol = int(min(\\n                float(int(\").concat(xWidth, \") - 1),\\n                \").concat(alignCorners, \" ? float(round(sourceFracCol)) :\\n                                  float(floor(sourceFracCol))));\\n\\n            if (r == sourceNearestRow && c == sourceNearestCol) {\\n              accumulator += getDy(b, dyR, dyC, d);\\n            }\\n          }\\n        }\\n        // End loop over dy\\n\\n        setOutput(accumulator);\\n      }\\n    \");\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ResizeNearestNeighborGrad } from '@tensorflow/tfjs-core';\nimport { ResizeNearestNeigborBackpropProgram } from '../resize_nearest_neighbor_backprop_gpu';\nexport function resizeNearestNeighborGrad(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var images = inputs.images,\n      dy = inputs.dy;\n  var alignCorners = attrs.alignCorners;\n  var program = new ResizeNearestNeigborBackpropProgram(dy.shape, images.shape, alignCorners);\n  return backend.runWebGLProgram(program, [dy], dy.dtype);\n}\nexport var resizeNearestNeighborGradConfig = {\n  kernelName: ResizeNearestNeighborGrad,\n  backendName: 'webgl',\n  kernelFunc: resizeNearestNeighborGrad\n};","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getCoordsDataType } from './shader_compiler';\nexport var ReverseProgram = function ReverseProgram(xShape, axis) {\n  _classCallCheck(this, ReverseProgram);\n\n  this.variableNames = ['x'];\n  var rank = xShape.length;\n\n  if (rank > 4) {\n    throw new Error(\"WebGL backend: Reverse of rank-\".concat(rank, \" tensor is not yet supported\"));\n  }\n\n  this.outputShape = xShape;\n\n  if (rank === 1) {\n    this.userCode = \"\\n        void main() {\\n          int coord = getOutputCoords();\\n          setOutput(getX(\".concat(xShape[0], \" - coord - 1));\\n        }\\n      \");\n    return;\n  }\n\n  var getInCoord = function getInCoord(i) {\n    if (axis.indexOf(i) !== -1 && xShape[i] !== 1) {\n      return \"\".concat(xShape[i], \" - coords[\").concat(i, \"] - 1\");\n    }\n\n    return \"coords[\".concat(i, \"]\");\n  };\n\n  var inCoords = xShape.map(function (_, i) {\n    return getInCoord(i);\n  }).join(',');\n  var type = getCoordsDataType(rank);\n  this.userCode = \"\\n      void main() {\\n        \".concat(type, \" coords = getOutputCoords();\\n        setOutput(getX(\").concat(inCoords, \"));\\n      }\\n    \");\n};","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getChannels } from './packing_util';\nimport { getCoordsDataType } from './shader_compiler';\nexport var ReversePackedProgram = function ReversePackedProgram(xShape, axis) {\n  _classCallCheck(this, ReversePackedProgram);\n\n  this.variableNames = ['x'];\n  this.packedInputs = true;\n  this.packedOutput = true;\n  var rank = xShape.length;\n\n  if (rank > 4) {\n    throw new Error(\"WebGL backend: Reverse of rank-\".concat(rank, \" tensor is not yet supported\"));\n  }\n\n  this.outputShape = xShape;\n  var channels = getChannels('rc', rank);\n  var nextColumn = \"\".concat(channels[rank - 1], \" + 1 < \").concat(this.outputShape[rank - 1]);\n  var nextRow = \"\".concat(channels[rank - 2], \" + 1 < \").concat(this.outputShape[rank - 2]);\n  var type = getCoordsDataType(rank);\n\n  if (rank === 1) {\n    this.userCode = \"\\n        void main(){\\n          int rc = getOutputCoords();\\n          vec4 result = vec4(0.);\\n          result.r = getChannel(getX(\".concat(xShape[0], \" - rc - 1),\\n            \").concat(xShape[0], \" - rc - 1);\\n          if(\").concat(nextColumn, \"){\\n              result.g = getChannel(getX(\").concat(xShape[0], \" - (rc  + 1) - 1),\\n                \").concat(xShape[0], \" - (rc  + 1) - 1);\\n          }\\n          setOutput(result);\\n        }\\n      \");\n  } else {\n    this.userCode = \"\\n        void main() {\\n          \".concat(type, \" rc = getOutputCoords();\\n          vec4 result = vec4(0.);\\n          result.r = \").concat(getR(channels.slice()), \";\\n          if(\").concat(nextColumn, \"){\\n            result.g = \").concat(getG(channels.slice()), \";\\n          }\\n          if(\").concat(nextRow, \") {\\n            result.b = \").concat(getB(channels.slice()), \";\\n            if(\").concat(nextColumn, \") {\\n              result.a = \").concat(getA(channels.slice()), \";\\n            }\\n          }\\n          setOutput(result);\\n        }\\n    \");\n  }\n\n  function getR(channels) {\n    return getChannel(channels);\n  }\n\n  function getG(channels) {\n    channels[rank - 1] = '(' + channels[rank - 1] + \" + 1)\";\n    return getChannel(channels);\n  }\n\n  function getB(channels) {\n    channels[rank - 2] = '(' + channels[rank - 2] + \" + 1)\";\n    return getChannel(channels);\n  }\n\n  function getA(channels) {\n    channels[rank - 1] = '(' + channels[rank - 1] + \" + 1)\";\n    channels[rank - 2] = '(' + channels[rank - 2] + \" + 1)\";\n    return getChannel(channels);\n  }\n\n  function getChannel(channels) {\n    var inCoordsArray = xShape.map(function (_, i) {\n      return getInCoord(i, channels);\n    });\n    var inCoords = inCoordsArray.join(',');\n    var innerDims = inCoordsArray.slice(-2).join(',');\n    return \"getChannel(getX(\".concat(inCoords, \"), vec2(\").concat(innerDims, \"))\");\n  }\n\n  function getInCoord(i, channels1) {\n    if (axis.indexOf(i) !== -1 && xShape[i] !== 1) {\n      return \"\".concat(xShape[i], \" - \").concat(channels1[i], \" - 1\");\n    } else {\n      return \"\".concat(channels1[i]);\n    }\n  }\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env, Reverse, util } from '@tensorflow/tfjs-core';\nimport { ReverseProgram } from '../reverse_gpu';\nimport { ReversePackedProgram } from '../reverse_packed_gpu';\nimport { identity } from './Identity';\nexport function reverse(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  var dims = attrs.dims;\n  var xRank = x.shape.length;\n  var $dims = util.parseAxisParam(dims, x.shape);\n\n  if (xRank === 0) {\n    return identity({\n      inputs: {\n        x: x\n      },\n      backend: backend\n    });\n  }\n\n  var program = env().getBool('WEBGL_PACK_ARRAY_OPERATIONS') ? new ReversePackedProgram(x.shape, $dims) : new ReverseProgram(x.shape, $dims);\n  return backend.runWebGLProgram(program, [x], x.dtype);\n}\nexport var reverseConfig = {\n  kernelName: Reverse,\n  backendName: 'webgl',\n  kernelFunc: reverse\n};","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var RotateProgram = /*#__PURE__*/function () {\n  function RotateProgram(imageShape, fillValue) {\n    _classCallCheck(this, RotateProgram);\n\n    this.variableNames = ['Image'];\n    this.outputShape = [];\n    var imageHeight = imageShape[1];\n    var imageWidth = imageShape[2];\n    this.outputShape = imageShape;\n    var fillSnippet = '';\n\n    if (typeof fillValue === 'number') {\n      fillSnippet = \"float outputValue = \".concat(fillValue.toFixed(2), \";\");\n    } else {\n      fillSnippet = \"\\n        vec3 fill = vec3(\".concat(fillValue.join(','), \");\\n        float outputValue = fill[coords[3]];\");\n    }\n\n    this.userCode = \"\\n        uniform vec4 params;\\n        void main() {\\n          ivec4 coords = getOutputCoords();\\n          int x = coords[2];\\n          int y = coords[1];\\n          float coordXFloat = (float(x) - params[0]) * params[3] -\\n            (float(y) - params[1]) * params[2];\\n          float coordYFloat = (float(x) - params[0]) * params[2] +\\n            (float(y) - params[1]) * params[3];\\n          int coordX = int(round(coordXFloat + params[0]));\\n          int coordY = int(round(coordYFloat + params[1]));\\n          \".concat(fillSnippet, \"\\n          if(coordX >= 0 && coordX < \").concat(imageWidth, \" && coordY >= 0 && coordY < \").concat(imageHeight, \") {\\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\\n          }\\n          setOutput(outputValue);\\n        }\\n    \");\n  }\n\n  _createClass(RotateProgram, [{\n    key: \"getCustomSetupFunc\",\n    value: function getCustomSetupFunc(centerX, centerY, sinFactor, cosFactor) {\n      var _this = this;\n\n      return function (gpgpu, webGLProgram) {\n        if (_this.paramsLoc == null) {\n          _this.paramsLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'params');\n        }\n\n        gpgpu.gl.uniform4f(_this.paramsLoc, centerX, centerY, sinFactor, cosFactor);\n      };\n    }\n  }]);\n\n  return RotateProgram;\n}();","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util } from '@tensorflow/tfjs-core';\nimport { RotateWithOffset } from '@tensorflow/tfjs-core';\nimport { RotateProgram } from '../rotate_gpu';\nexport var rotateWithOffsetConfig = {\n  kernelName: RotateWithOffset,\n  backendName: 'webgl',\n  kernelFunc: function kernelFunc(_ref) {\n    var inputs = _ref.inputs,\n        attrs = _ref.attrs,\n        backend = _ref.backend;\n    var image = inputs.image;\n    var radians = attrs.radians,\n        fillValue = attrs.fillValue,\n        center = attrs.center;\n    var webglBackend = backend;\n    var program = new RotateProgram(image.shape, fillValue);\n\n    var _backend_util$getImag = backend_util.getImageCenter(center, image.shape[1], image.shape[2]),\n        _backend_util$getImag2 = _slicedToArray(_backend_util$getImag, 2),\n        centerX = _backend_util$getImag2[0],\n        centerY = _backend_util$getImag2[1];\n\n    var customSetup = program.getCustomSetupFunc(centerX, centerY, Math.sin(radians), Math.cos(radians));\n    var output = webglBackend.runWebGLProgram(program, [image], image.dtype, customSetup);\n    return output;\n  }\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Round } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nvar ROUND = \"\\n  // OpenGL ES does not support round function.\\n  // The algorithm is based on banker's rounding.\\n  float base = floor(x);\\n  if ((x - base) < 0.5) {\\n    return floor(x);\\n  } else if ((x - base) > 0.5) {\\n    return ceil(x);\\n  } else {\\n    if (mod(base, 2.0) == 0.0) {\\n      return base;\\n    } else {\\n      return base + 1.0;\\n    }\\n  }\\n\";\nexport var round = unaryKernelFunc({\n  opSnippet: ROUND\n});\nexport var roundConfig = {\n  kernelName: Round,\n  backendName: 'webgl',\n  kernelFunc: round\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Rsqrt } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { rsqrtImplCPU } from '../kernel_utils/shared';\nvar RSQRT = \"return inversesqrt(x);\";\nexport var rsqrt = unaryKernelFunc({\n  opSnippet: RSQRT,\n  cpuKernelImpl: rsqrtImplCPU\n});\nexport var rsqrtConfig = {\n  kernelName: Rsqrt,\n  backendName: 'webgl',\n  kernelFunc: rsqrt\n};","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getCoordsDataType } from './shader_compiler';\nexport var ScatterProgram = function ScatterProgram(updateSize, sliceDim, indicesRank, updatesRank, strides, shape) {\n  var summingDupeIndex = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : true;\n\n  _classCallCheck(this, ScatterProgram);\n\n  this.variableNames = ['updates', 'indices', 'defaultValue'];\n  this.outputShape = shape;\n  var stridesType = getCoordsDataType(strides.length);\n  var dtype = getCoordsDataType(shape.length);\n  var indicesString = '';\n\n  if (indicesRank === 1) {\n    indicesString = 'i';\n  } else if (indicesRank === 2) {\n    indicesString = 'i, j';\n  }\n\n  var indicesSnippet = \"getIndices(\".concat(indicesString, \")\");\n  var updatesString = '';\n\n  if (updatesRank === 1) {\n    updatesString = 'i';\n  } else if (updatesRank === 2) {\n    updatesString = 'i, coords[1]';\n  }\n\n  var updatesSnippet = \"getUpdates(\".concat(updatesString, \")\");\n  var strideString = sliceDim > 1 ? 'strides[j]' : 'strides';\n  this.userCode = \"\\n        \".concat(stridesType, \" strides = \").concat(stridesType, \"(\").concat(strides, \");\\n\\n        void main() {\\n          \").concat(dtype, \" coords = getOutputCoords();\\n          float sum = 0.0;\\n          bool found = false;\\n          for (int i = 0; i < \").concat(updateSize, \"; i++) {\\n            int flattenedIndex = 0;\\n            for (int j = 0; j < \").concat(sliceDim, \"; j++) {\\n              int index = round(\").concat(indicesSnippet, \");\\n              flattenedIndex += index * \").concat(strideString, \";\\n            }\\n            if (flattenedIndex == coords[0]) {\\n              sum += \").concat(updatesSnippet, \";\\n              found = true;\\n            }\\n          }\\n          setOutput(mix(getDefaultValue(), sum, float(found)));\\n        }\\n      \");\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, ScatterNd } from '@tensorflow/tfjs-core';\nimport { ScatterProgram } from '../scatter_gpu';\nimport { reshape } from './Reshape';\nexport function scatterNd(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var indices = inputs.indices,\n      updates = inputs.updates;\n  var shape = attrs.shape;\n\n  var _backend_util$calcula = backend_util.calculateShapes(updates, indices, shape),\n      sliceRank = _backend_util$calcula.sliceRank,\n      numUpdates = _backend_util$calcula.numUpdates,\n      sliceSize = _backend_util$calcula.sliceSize,\n      strides = _backend_util$calcula.strides,\n      outputSize = _backend_util$calcula.outputSize;\n\n  var flattenShape = [outputSize / sliceSize, sliceSize];\n\n  if (outputSize === 0) {\n    return backend.makeTensorInfo(shape, indices.dtype);\n  }\n\n  var flattenIndices = reshape({\n    inputs: {\n      x: indices\n    },\n    backend: backend,\n    attrs: {\n      shape: [numUpdates, sliceRank]\n    }\n  });\n  var flattenX = reshape({\n    inputs: {\n      x: updates\n    },\n    backend: backend,\n    attrs: {\n      shape: [numUpdates, sliceSize]\n    }\n  });\n  var defaultValue = backend.makeTensorInfo([], 'float32', new Float32Array([0])); // scalar(0)\n\n  var program = new ScatterProgram(numUpdates, sliceRank, flattenIndices.shape.length, flattenX.shape.length, strides, flattenShape);\n  var res = backend.runWebGLProgram(program, [flattenX, flattenIndices, defaultValue], flattenX.dtype);\n  var reshaped = reshape({\n    inputs: {\n      x: res\n    },\n    backend: backend,\n    attrs: {\n      shape: shape\n    }\n  });\n  backend.disposeIntermediateTensorInfo(flattenIndices);\n  backend.disposeIntermediateTensorInfo(flattenX);\n  backend.disposeIntermediateTensorInfo(res);\n  backend.disposeIntermediateTensorInfo(defaultValue);\n  return reshaped;\n}\nexport var scatterNdConfig = {\n  kernelName: ScatterNd,\n  backendName: 'webgl',\n  kernelFunc: scatterNd\n};","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getCoordsDataType } from './shader_compiler';\nexport var SelectProgram = function SelectProgram(cRank, shape, rank) {\n  _classCallCheck(this, SelectProgram);\n\n  this.variableNames = ['c', 'a', 'b'];\n  this.outputShape = shape;\n  var cCoords;\n  var abCoords;\n\n  if (rank > 4) {\n    throw Error(\"Where for rank \".concat(rank, \" is not yet supported\"));\n  }\n\n  if (rank === 1) {\n    abCoords = \"resRC\";\n    cCoords = \"resRC\";\n  } else {\n    var currentCoords = ['resRC.x', 'resRC.y', 'resRC.z', 'resRC.w'];\n    var cCoordVars = [];\n    var abCoordVars = [];\n\n    for (var i = 0; i < shape.length; i++) {\n      abCoordVars.push(\"\".concat(currentCoords[i]));\n\n      if (i < cRank) {\n        cCoordVars.push(\"\".concat(currentCoords[i]));\n      }\n    }\n\n    cCoords = cCoordVars.join();\n    abCoords = abCoordVars.join();\n  }\n\n  var dtype = getCoordsDataType(rank);\n  this.userCode = \"\\n      void main() {\\n        \".concat(dtype, \" resRC = getOutputCoords();\\n        float cVal = getC(\").concat(cCoords, \");\\n        if (cVal >= 1.0) {\\n          setOutput(getA(\").concat(abCoords, \"));\\n        } else {\\n          setOutput(getB(\").concat(abCoords, \"));\\n        }\\n      }\\n    \");\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Select, upcastType } from '@tensorflow/tfjs-core';\nimport { SelectProgram } from '../select_gpu';\nexport function select(args) {\n  var inputs = args.inputs,\n      backend = args.backend;\n  var condition = inputs.condition,\n      t = inputs.t,\n      e = inputs.e;\n  var program = new SelectProgram(condition.shape.length, t.shape, t.shape.length);\n  return backend.runWebGLProgram(program, [condition, t, e], upcastType(t.dtype, e.dtype));\n}\nexport var selectConfig = {\n  kernelName: Select,\n  backendName: 'webgl',\n  kernelFunc: select\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Selu } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nvar SELU = \"\\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\\n  // see: https://arxiv.org/abs/1706.02515\\n  float scaleAlpha = \".concat(backend_util.SELU_SCALEALPHA, \";\\n  float scale = \").concat(backend_util.SELU_SCALE, \";\\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\\n\");\nexport var selu = unaryKernelFunc({\n  opSnippet: SELU\n});\nexport var seluConfig = {\n  kernelName: Selu,\n  backendName: 'webgl',\n  kernelFunc: selu\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Sigmoid } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nvar SIGMOID = \"return 1.0 / (1.0 + exp(-1.0 * x));\";\nexport var sigmoid = unaryKernelFunc({\n  opSnippet: SIGMOID\n});\nexport var sigmoidConfig = {\n  kernelName: Sigmoid,\n  backendName: 'webgl',\n  kernelFunc: sigmoid\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Sign } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils'; // Sign does not propagate NANs.\n\nvar SIGN = \"\\n  if (isnan(x)) { return 0.0; }\\n  return sign(x);\\n\";\nexport var sign = unaryKernelFunc({\n  opSnippet: SIGN\n});\nexport var signConfig = {\n  kernelName: Sign,\n  backendName: 'webgl',\n  kernelFunc: sign\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Sin } from '@tensorflow/tfjs-core';\nimport { CHECK_NAN_SNIPPET_UNARY, unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nvar SIN = CHECK_NAN_SNIPPET_UNARY + \"\\n  return sin(x);\\n\";\nexport var sin = unaryKernelFunc({\n  opSnippet: SIN\n});\nexport var sinConfig = {\n  kernelName: Sin,\n  backendName: 'webgl',\n  kernelFunc: sin\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Sinh } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nvar SINH = \"\\n  float e2x = exp(x);\\n  return (e2x - 1.0 / e2x) / 2.0;\\n\";\nexport var sinh = unaryKernelFunc({\n  opSnippet: SINH\n});\nexport var sinhConfig = {\n  kernelName: Sinh,\n  backendName: 'webgl',\n  kernelFunc: sinh\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Softplus } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nvar SOFTPLUS = \"\\n  float epsilon = 1.1920928955078125e-7;\\n  float threshold = log(epsilon) + 2.0;\\n\\n  bool too_large = x > -threshold;\\n  bool too_small = x < threshold;\\n\\n  float result;\\n  float exp_x = exp(x);\\n\\n  if (too_large){\\n    result = x;\\n  }\\n  else if (too_small){\\n    result = exp_x;\\n  }\\n  else{\\n    result = log(exp_x + 1.0);\\n  }\\n  return result;\\n\";\nexport var softplus = unaryKernelFunc({\n  opSnippet: SOFTPLUS\n});\nexport var softplusConfig = {\n  kernelName: Softplus,\n  backendName: 'webgl',\n  kernelFunc: softplus\n};","import _toConsumableArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, SpaceToBatchND, util } from '@tensorflow/tfjs-core';\nimport { padV2 } from './PadV2';\nimport { reshape } from './Reshape';\nimport { transpose } from './Transpose';\nexport var spaceToBatchND = function spaceToBatchND(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  var blockShape = attrs.blockShape,\n      paddings = attrs.paddings;\n  util.assert(x.shape.length <= 4, function () {\n    return 'spaceToBatchND for rank > 4 with a WebGL backend not ' + 'implemented yet';\n  });\n  var prod = blockShape.reduce(function (a, b) {\n    return a * b;\n  });\n  var completePaddings = [[0, 0]];\n  completePaddings.push.apply(completePaddings, _toConsumableArray(paddings));\n\n  for (var i = 1 + blockShape.length; i < x.shape.length; ++i) {\n    completePaddings.push([0, 0]);\n  }\n\n  var toDispose = [];\n  var paddedX = padV2({\n    inputs: {\n      x: x\n    },\n    backend: backend,\n    attrs: {\n      paddings: completePaddings,\n      constantValue: 0\n    }\n  });\n  var reshapedPaddedShape = backend_util.getReshaped(paddedX.shape, blockShape, prod, false);\n  var permutedReshapedPaddedPermutation = backend_util.getPermuted(reshapedPaddedShape.length, blockShape.length, false);\n  var flattenShape = backend_util.getReshapedPermuted(paddedX.shape, blockShape, prod, false);\n  var reshapedPaddedX = reshape({\n    inputs: {\n      x: paddedX\n    },\n    backend: backend,\n    attrs: {\n      shape: reshapedPaddedShape\n    }\n  });\n  var paddedXT = transpose({\n    inputs: {\n      x: reshapedPaddedX\n    },\n    backend: backend,\n    attrs: {\n      perm: permutedReshapedPaddedPermutation\n    }\n  });\n  var result = reshape({\n    inputs: {\n      x: paddedXT\n    },\n    backend: backend,\n    attrs: {\n      shape: flattenShape\n    }\n  });\n  toDispose.push(paddedX);\n  toDispose.push(reshapedPaddedX);\n  toDispose.push(paddedXT);\n  toDispose.forEach(function (t) {\n    return backend.disposeIntermediateTensorInfo(t);\n  });\n  return result;\n};\nexport var spaceToBatchNDConfig = {\n  kernelName: SpaceToBatchND,\n  backendName: 'webgl',\n  kernelFunc: spaceToBatchND\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, SparseToDense } from '@tensorflow/tfjs-core';\nimport { ScatterProgram } from '../scatter_gpu';\nimport { reshape } from './Reshape';\nexport function sparseToDense(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var sparseIndices = inputs.sparseIndices,\n      sparseValues = inputs.sparseValues,\n      defaultValue = inputs.defaultValue;\n  var outputShape = attrs.outputShape;\n\n  var _backend_util$calcula = backend_util.calculateShapes(sparseValues, sparseIndices, outputShape),\n      sliceRank = _backend_util$calcula.sliceRank,\n      numUpdates = _backend_util$calcula.numUpdates,\n      strides = _backend_util$calcula.strides,\n      outputSize = _backend_util$calcula.outputSize;\n\n  var sumDupeIndices = false;\n  var program = new ScatterProgram(numUpdates, sliceRank, sparseIndices.shape.length, sparseValues.shape.length, strides, [outputSize, 1], sumDupeIndices);\n  var res = backend.runWebGLProgram(program, [sparseValues, sparseIndices, defaultValue], sparseValues.dtype);\n  var reshaped = reshape({\n    inputs: {\n      x: res\n    },\n    backend: backend,\n    attrs: {\n      shape: outputShape\n    }\n  });\n  backend.disposeIntermediateTensorInfo(res);\n  return reshaped;\n}\nexport var sparseToDenseConfig = {\n  kernelName: SparseToDense,\n  backendName: 'webgl',\n  kernelFunc: sparseToDense\n};","import _toConsumableArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, SplitV, util } from '@tensorflow/tfjs-core';\nimport { slice } from './Slice';\nexport function splitV(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  var numOrSizeSplits = attrs.numOrSizeSplits,\n      axis = attrs.axis;\n  var $axis = util.parseAxisParam(axis, x.shape)[0];\n  var splitSizes = backend_util.prepareSplitSize(x, numOrSizeSplits, $axis);\n  var xRank = x.shape.length;\n  var begin = new Array(xRank).fill(0);\n  var size = x.shape.slice();\n  return splitSizes.map(function (s) {\n    var sliceSize = _toConsumableArray(size);\n\n    sliceSize[$axis] = s;\n    var sliceT = slice({\n      inputs: {\n        x: x\n      },\n      backend: backend,\n      attrs: {\n        begin: begin,\n        size: sliceSize\n      }\n    });\n    begin[$axis] += s;\n    return sliceT;\n  });\n}\nexport var splitVConfig = {\n  kernelName: SplitV,\n  backendName: 'webgl',\n  kernelFunc: splitV\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Sqrt } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nvar SQRT = \"return sqrt(x);\";\nexport var sqrt = unaryKernelFunc({\n  opSnippet: SQRT\n});\nexport var sqrtConfig = {\n  kernelName: Sqrt,\n  backendName: 'webgl',\n  kernelFunc: sqrt\n};","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Square } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nvar SQUARE = \"return x * x;\";\nexport var square = unaryKernelFunc({\n  opSnippet: SQUARE\n});\nexport var squareConfig = {\n  kernelName: Square,\n  backendName: 'webgl',\n  kernelFunc: square\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { SquaredDifference } from '@tensorflow/tfjs-core';\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nvar SQUARED_DIFFERENCE = 'return (a - b) * (a - b);';\nexport var squaredDifference = binaryKernelFunc({\n  opSnippet: SQUARED_DIFFERENCE,\n  packedOpSnippet: SQUARED_DIFFERENCE\n});\nexport var squaredDifferenceConfig = {\n  kernelName: SquaredDifference,\n  backendName: 'webgl',\n  kernelFunc: squaredDifference\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Step } from '@tensorflow/tfjs-core';\nimport { CHECK_NAN_SNIPPET, UnaryOpProgram } from '../unaryop_gpu';\nexport function step(_ref) {\n  var inputs = _ref.inputs,\n      attrs = _ref.attrs,\n      backend = _ref.backend;\n  var x = inputs.x;\n  var opSnippet = CHECK_NAN_SNIPPET + \"\\n    return x > 0.0 ? 1.0 : float(\".concat(attrs.alpha, \");\\n  \");\n  var program = new UnaryOpProgram(x.shape, opSnippet);\n  return backend.runWebGLProgram(program, [x], x.dtype);\n}\nexport var stepConfig = {\n  kernelName: Step,\n  backendName: 'webgl',\n  kernelFunc: step\n};","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getCoordsDataType } from './shader_compiler';\nexport var StridedSliceProgram = function StridedSliceProgram(begin, strides, size) {\n  _classCallCheck(this, StridedSliceProgram);\n\n  this.variableNames = ['x'];\n  this.outputShape = size;\n  var rank = size.length;\n  var inputDtype = getCoordsDataType(size.length);\n  var dtype = getCoordsDataType(size.length);\n  var newCoords = '';\n\n  if (rank === 1) {\n    newCoords = 'coords * strides + begin';\n  } else {\n    var outputAxis = 0;\n    newCoords = size.map(function (_, i) {\n      outputAxis++;\n      return size.length === 1 ? \"coords * strides[\".concat(i, \"] + begin[\").concat(i, \"]\") : \"coords[\".concat(outputAxis - 1, \"] * strides[\").concat(i, \"] + begin[\").concat(i, \"]\");\n    }).join(',');\n  }\n\n  this.userCode = \"\\n      \".concat(inputDtype, \" begin = \").concat(inputDtype, \"(\").concat(begin, \");\\n      \").concat(inputDtype, \" strides = \").concat(inputDtype, \"(\").concat(strides, \");\\n\\n      void main() {\\n        \").concat(dtype, \" coords = getOutputCoords();\\n        setOutput(getX(\").concat(newCoords, \"));\\n      }\\n    \");\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { buffer, slice_util, StridedSlice } from '@tensorflow/tfjs-core';\nimport { stridedSliceImplCPU } from '../kernel_utils/shared';\nimport { StridedSliceProgram } from '../strided_slice_gpu';\nimport { reshape } from './Reshape';\nimport { slice } from './Slice';\nexport function stridedSlice(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  var begin = attrs.begin,\n      end = attrs.end,\n      strides = attrs.strides,\n      beginMask = attrs.beginMask,\n      endMask = attrs.endMask,\n      ellipsisMask = attrs.ellipsisMask,\n      newAxisMask = attrs.newAxisMask,\n      shrinkAxisMask = attrs.shrinkAxisMask;\n\n  var _slice_util$sliceInfo = slice_util.sliceInfo(x.shape, begin, end, strides, beginMask, endMask, ellipsisMask, newAxisMask, shrinkAxisMask),\n      nonStrided = _slice_util$sliceInfo.nonStrided,\n      $begin = _slice_util$sliceInfo.$begin,\n      $strides = _slice_util$sliceInfo.$strides,\n      size = _slice_util$sliceInfo.size,\n      newShape = _slice_util$sliceInfo.newShape,\n      outShape = _slice_util$sliceInfo.outShape;\n\n  var $x = reshape({\n    inputs: {\n      x: x\n    },\n    backend: backend,\n    attrs: {\n      shape: newShape\n    }\n  });\n  var result;\n\n  if (nonStrided) {\n    var sliced = slice({\n      inputs: {\n        x: $x\n      },\n      backend: backend,\n      attrs: {\n        begin: $begin,\n        size: size\n      }\n    });\n    result = reshape({\n      inputs: {\n        x: sliced\n      },\n      backend: backend,\n      attrs: {\n        shape: outShape\n      }\n    });\n    backend.disposeIntermediateTensorInfo(sliced);\n  } else if (outShape.some(function (axis) {\n    return axis === 0;\n  })) {\n    result = backend.makeTensorInfo(outShape, x.dtype, []);\n  } else {\n    var shouldExecuteOnCPU = backend.shouldExecuteOnCPU([$x]);\n\n    if (shouldExecuteOnCPU) {\n      var xTexData = backend.texData.get($x.dataId);\n      var values = xTexData.values;\n      var xBuf = buffer($x.shape, $x.dtype, values);\n      var resultValues = stridedSliceImplCPU(outShape, xBuf, $strides, $begin);\n      result = backend.makeTensorInfo(outShape, $x.dtype, resultValues.values);\n    } else {\n      var program = new StridedSliceProgram($begin, $strides, outShape);\n      result = backend.runWebGLProgram(program, [$x], $x.dtype);\n    }\n  }\n\n  var resultReshaped = reshape({\n    inputs: {\n      x: result\n    },\n    backend: backend,\n    attrs: {\n      shape: outShape\n    }\n  });\n  backend.disposeIntermediateTensorInfo($x);\n  backend.disposeIntermediateTensorInfo(result);\n  return resultReshaped;\n}\nexport var stridedSliceConfig = {\n  kernelName: StridedSlice,\n  backendName: 'webgl',\n  kernelFunc: stridedSlice\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Tan } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nvar TAN = \"return tan(x);\";\nexport var tan = unaryKernelFunc({\n  opSnippet: TAN\n});\nexport var tanConfig = {\n  kernelName: Tan,\n  backendName: 'webgl',\n  kernelFunc: tan\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Tanh } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nvar TANH = \"\\n  float e2x = exp(-2.0 * abs(x));\\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\\n\";\nexport var tanh = unaryKernelFunc({\n  opSnippet: TANH\n});\nexport var tanhConfig = {\n  kernelName: Tanh,\n  backendName: 'webgl',\n  kernelFunc: tanh\n};","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getCoordsDataType } from './shader_compiler';\nexport var TileProgram = function TileProgram(aShape, reps) {\n  _classCallCheck(this, TileProgram);\n\n  this.variableNames = ['A'];\n  var outputShape = new Array(aShape.length);\n\n  for (var i = 0; i < outputShape.length; i++) {\n    outputShape[i] = aShape[i] * reps[i];\n  }\n\n  this.outputShape = outputShape;\n  this.rank = outputShape.length;\n  var dtype = getCoordsDataType(this.rank);\n  var sourceCoords = getSourceCoords(aShape);\n  this.userCode = \"\\n      void main() {\\n        \".concat(dtype, \" resRC = getOutputCoords();\\n        setOutput(getA(\").concat(sourceCoords, \"));\\n      }\\n    \");\n};\n\nfunction getSourceCoords(aShape) {\n  var rank = aShape.length;\n\n  if (rank > 5) {\n    throw Error(\"Tile for rank \".concat(rank, \" is not yet supported\"));\n  }\n\n  if (rank === 1) {\n    return \"imod(resRC, \".concat(aShape[0], \")\");\n  }\n\n  var currentCoords = ['resRC.x', 'resRC.y', 'resRC.z', 'resRC.w', 'resRC.u'];\n  var sourceCoords = [];\n\n  for (var i = 0; i < aShape.length; i++) {\n    sourceCoords.push(\"imod(\".concat(currentCoords[i], \", \").concat(aShape[i], \")\"));\n  }\n\n  return sourceCoords.join();\n}","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { buffer, Tile, util } from '@tensorflow/tfjs-core';\nimport { tileImplCPU } from '../kernel_utils/shared';\nimport { TileProgram } from '../tile_gpu';\nexport function tile(params) {\n  var inputs = params.inputs,\n      backend = params.backend,\n      attrs = params.attrs;\n  var x = inputs.x;\n  var reps = attrs.reps;\n\n  if (x.dtype === 'string') {\n    // Even thought string tensor is always on CPU, just to be consistent on how\n    // to access tensor data.\n    var data = backend.readSync(x.dataId);\n    var decodedData = data.map(function (d) {\n      return util.decodeString(d);\n    });\n    var buf = buffer(x.shape, x.dtype, decodedData);\n    var outBuf = tileImplCPU(buf, reps);\n    return backend.makeTensorInfo(outBuf.shape, outBuf.dtype, outBuf.values);\n  }\n\n  var program = new TileProgram(x.shape, reps);\n  var output = backend.runWebGLProgram(program, [x], x.dtype);\n  return output;\n}\nexport var tileConfig = {\n  kernelName: Tile,\n  backendName: 'webgl',\n  kernelFunc: tile\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { TopK } from '@tensorflow/tfjs-core';\nimport { topKImplCPU } from '../kernel_utils/shared';\nexport function topK(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  var k = attrs.k,\n      sorted = attrs.sorted;\n  var xVals = backend.readSync(x.dataId);\n\n  var _topKImplCPU = topKImplCPU(xVals, x.shape, x.dtype, k, sorted),\n      _topKImplCPU2 = _slicedToArray(_topKImplCPU, 2),\n      allTopKVals = _topKImplCPU2[0],\n      allTopKIndices = _topKImplCPU2[1];\n\n  return [backend.makeTensorInfo(allTopKVals.shape, allTopKVals.dtype, allTopKVals.values), backend.makeTensorInfo(allTopKIndices.shape, allTopKIndices.dtype, allTopKIndices.values)];\n}\nexport var topKConfig = {\n  kernelName: TopK,\n  backendName: 'webgl',\n  kernelFunc: topK\n};","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var TransformProgram = function TransformProgram(imageHeight, imageWidth, interpolation, fillMode, fillValue, outShape) {\n  _classCallCheck(this, TransformProgram);\n\n  this.variableNames = ['Image', 'Transforms'];\n  this.outputShape = outShape;\n  var interpolationModeId = interpolation === 'nearest' ? 1 : 2;\n  var fillModeId;\n\n  switch (fillMode) {\n    case 'constant':\n      fillModeId = 1;\n      break;\n\n    case 'reflect':\n      fillModeId = 2;\n      break;\n\n    case 'wrap':\n      fillModeId = 3;\n      break;\n\n    case 'nearest':\n      fillModeId = 4;\n      break;\n\n    default:\n      fillModeId = 1;\n      break;\n  }\n\n  this.userCode = \"\\n            float mapCoord(float outCoord, float len) {\\n              float inCoord = outCoord;\\n              if(\".concat(fillModeId, \" == 2) {\\n                if (inCoord < 0.0) {\\n                  if (len <= 1.0) {\\n                    inCoord = 0.0;\\n                  } else {\\n                    float sz2 = 2.0 * len;\\n                    if (inCoord < sz2) {\\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\\n                      inCoord;\\n                    }\\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\\n                  }\\n                } else if (inCoord > len - 1.0) {\\n                  if (len <= 1.0) {\\n                    inCoord = 0.0;\\n                  } else {\\n                    float sz2 = 2.0 * len;\\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\\n                    if (inCoord >= len) {\\n                      inCoord = sz2 - inCoord - 1.0;\\n                    }\\n                  }\\n                }\\n                return clamp(inCoord, 0.0, len - 1.0);\\n              } else if (\").concat(fillModeId, \" == 3) {\\n                if (inCoord < 0.0) {\\n                  if (len <= 1.0) {\\n                    inCoord = 0.0;\\n                  } else {\\n                    float sz = len - 1.0;\\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\\n                  }\\n                } else if (inCoord > len - 1.0) {\\n                  if (len <= 1.0) {\\n                    inCoord = 0.0;\\n                  } else {\\n                    float sz = len - 1.0;\\n                    inCoord -= len * float(int(float(inCoord / sz)));\\n                  }\\n                }\\n                return clamp(inCoord, 0.0, len - 1.0);\\n              } else if (\").concat(fillModeId, \" == 4) {\\n                return clamp(outCoord, 0.0, len - 1.0);\\n              } else {\\n                return outCoord;\\n              }\\n            }\\n\\n            float readWithFillValue(int batch, int coordY, int coordX,\\n              int channel) {\\n              float outputValue;\\n              if (0 <= coordY && coordY < \").concat(imageHeight, \" && 0 <= coordX && coordX < \").concat(imageWidth, \") {\\n                  outputValue = getImage(batch, coordY, coordX, channel);\\n              } else {\\n                outputValue = float(\").concat(fillValue, \");\\n              }\\n              return outputValue;\\n            }\\n\\n            void main() {\\n              ivec4 coords = getOutputCoords();\\n              float outputValue;\\n              int batch = coords[0];\\n              int x = coords[2];\\n              int y = coords[1];\\n              int channel = coords[3];\\n              float xf = float(x);\\n              float yf = float(y);\\n              float a1 = getTransforms(batch, 0);\\n              float a2 = getTransforms(batch, 1);\\n              float a3 = getTransforms(batch, 2);\\n              float b1 = getTransforms(batch, 3);\\n              float b2 = getTransforms(batch, 4);\\n              float b3 = getTransforms(batch, 5);\\n              float c1 = getTransforms(batch, 6);\\n              float c2 = getTransforms(batch, 7);\\n              float projection = c1 * xf + c2 * yf + 1.0;\\n              if (projection == 0.0) {\\n                outputValue = float(\").concat(fillValue, \");\\n              } else {\\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\\n                float mapX = mapCoord(inX, float(\").concat(imageWidth, \"));\\n                float mapY = mapCoord(inY, float(\").concat(imageHeight, \"));\\n\\n                if (\").concat(interpolationModeId, \" == 1) {\\n                  int coordY = int(round(mapY));\\n                  int coordX = int(round(mapX));\\n                  outputValue = readWithFillValue(batch, coordY, coordX,\\n                    channel);\\n                } else {\\n                  float yFloor = floor(mapY);\\n                  float xFloor = floor(mapX);\\n                  float yCeil = yFloor + 1.0;\\n                  float xCeil = xFloor + 1.0;\\n                  float valueYFloor = (xCeil - mapX) *\\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\\n                  (mapX - xFloor) *\\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\\n                  float valueYCeil = (xCeil - mapX) *\\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\\n                  (mapX - xFloor) *\\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\\n                  outputValue = (yCeil - mapY) * valueYFloor +\\n                  (mapY - yFloor) * valueYCeil;\\n                }\\n              }\\n              setOutput(outputValue);\\n            }\\n        \");\n};","import _slicedToArray from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Transform } from '@tensorflow/tfjs-core';\nimport { TransformProgram } from '../transform_gpu';\nexport function transform(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var image = inputs.image,\n      transforms = inputs.transforms;\n  var interpolation = attrs.interpolation,\n      fillMode = attrs.fillMode,\n      fillValue = attrs.fillValue,\n      outputShape = attrs.outputShape;\n\n  var _image$shape = _slicedToArray(image.shape, 4),\n      batch = _image$shape[0],\n      imageHeight = _image$shape[1],\n      imageWidth = _image$shape[2],\n      numChannels = _image$shape[3];\n\n  var _ref = outputShape != null ? outputShape : [imageHeight, imageWidth],\n      _ref2 = _slicedToArray(_ref, 2),\n      outHeight = _ref2[0],\n      outWidth = _ref2[1];\n\n  var outShape = [batch, outHeight, outWidth, numChannels];\n  var program = new TransformProgram(imageHeight, imageWidth, interpolation, fillMode, fillValue, outShape);\n  return backend.runWebGLProgram(program, [image, transforms], 'float32');\n}\nexport var transformConfig = {\n  kernelName: Transform,\n  backendName: 'webgl',\n  kernelFunc: transform\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Unique } from '@tensorflow/tfjs-core';\nimport { uniqueImplCPU } from '../kernel_utils/shared';\nimport { assertNotComplex } from '../webgl_util';\nexport function unique(args) {\n  var inputs = args.inputs,\n      attrs = args.attrs,\n      backend = args.backend;\n  var axis = attrs.axis;\n  var x = inputs.x;\n  assertNotComplex(x, 'unique'); // For now, always forward calculation to the CPU backend.\n\n  console.warn('WARNING: ', 'UI might be locked temporarily as data is being downloaded');\n  var values = backend.readSync(x.dataId);\n\n  var _uniqueImplCPU = uniqueImplCPU(values, axis, x.shape, x.dtype),\n      outputValues = _uniqueImplCPU.outputValues,\n      outputShape = _uniqueImplCPU.outputShape,\n      indices = _uniqueImplCPU.indices;\n\n  return [backend.makeTensorInfo(outputShape, x.dtype, outputValues), backend.makeTensorInfo([indices.length], 'int32', indices)];\n}\nexport var uniqueConfig = {\n  kernelName: Unique,\n  backendName: 'webgl',\n  kernelFunc: unique\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Unpack } from '@tensorflow/tfjs-core';\nimport { reshape } from './Reshape';\nimport { slice } from './Slice';\nexport function unpack(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var value = inputs.value;\n  var axis = attrs.axis;\n\n  if (axis < 0) {\n    axis += value.shape.length;\n  }\n\n  var x = value;\n  var xRank = x.shape.length;\n  var num = value.shape[axis];\n  var outShape = new Array(xRank - 1);\n  var outIndex = 0;\n\n  for (var i = 0; i < xRank; i++) {\n    if (i !== axis) {\n      outShape[outIndex++] = x.shape[i];\n    }\n  }\n\n  var toDispose = [];\n  var begin = new Array(xRank).fill(0);\n  var size = x.shape.slice();\n  size[axis] = 1;\n  var res = new Array(num);\n\n  for (var _i = 0; _i < res.length; _i++) {\n    begin[axis] = _i;\n    var sliced = slice({\n      inputs: {\n        x: x\n      },\n      backend: backend,\n      attrs: {\n        begin: begin,\n        size: size\n      }\n    });\n    var reshaped = reshape({\n      inputs: {\n        x: sliced\n      },\n      backend: backend,\n      attrs: {\n        shape: outShape\n      }\n    });\n    res[_i] = reshaped;\n    toDispose.push(sliced);\n  }\n\n  toDispose.forEach(function (t) {\n    return backend.disposeIntermediateTensorInfo(t);\n  });\n  return res;\n}\nexport var unpackConfig = {\n  kernelName: Unpack,\n  backendName: 'webgl',\n  kernelFunc: unpack\n};","import _classCallCheck from \"C:/Users/lego1/Broad/CellProfilerAnalystForTheWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var SegmentOpProgram = function SegmentOpProgram(segOpInfo, segOpType) {\n  _classCallCheck(this, SegmentOpProgram);\n\n  this.variableNames = ['x', 'segmentIds'];\n  var windowSize = segOpInfo.windowSize;\n  var batchSize = segOpInfo.batchSize;\n  var inSize = segOpInfo.inSize;\n  var numSegments = segOpInfo.numSegments;\n  var outSize = numSegments * Math.ceil(inSize / windowSize);\n  this.outputShape = [batchSize, outSize];\n  var initializationValue = '0.0';\n  var returnValue = \"sumValue\";\n  var windowSizeNearestVec4 = Math.floor(windowSize / 4) * 4;\n  var windowSizeVec4Remainder = windowSize % 4;\n  var updateSnippet = \"\\n        sumValue += dot(values, segFilter);\\n    \";\n  var checkValueOutOfBounds = '';\n\n  if (inSize % windowSize > 0) {\n    checkValueOutOfBounds = \"\\n        if (inIdx < 0 || inIdx >= \".concat(inSize, \") {\\n          return initializationValue;\\n        }\\n      \");\n  }\n\n  var checkSegmentIdOutOfBounds = '';\n\n  if (inSize % windowSize > 0) {\n    checkSegmentIdOutOfBounds = \"\\n        if (inIdx < 0 || inIdx >= \".concat(inSize, \") {\\n          return -1.0;\\n        }\\n      \");\n  }\n\n  this.userCode = \"\\n      const float initializationValue = \".concat(initializationValue, \";\\n\\n      float getValue(int batch, int inIdx) {\\n        \").concat(checkValueOutOfBounds, \"\\n        return getX(batch, inIdx);\\n      }\\n\\n      float getSegmentIdAtIndex(int inIdx) {\\n        \").concat(checkSegmentIdOutOfBounds, \"\\n        return getSegmentIds(inIdx);\\n      }\\n\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int outIdx = coords[1];\\n        int inOffset = int(floor(float(outIdx) / float(\\n          \").concat(numSegments, \")) * float(\").concat(windowSize, \"));\\n        int currentSeg = int(mod(float(outIdx), float(\").concat(numSegments, \")));\\n\\n        float sumValue = 0.0;\\n\\n        for (int i = 0; i < \").concat(windowSizeNearestVec4, \"; i += 4) {\\n          int inIdx = inOffset + i;\\n          vec4 values = vec4(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            getValue(batch, inIdx + 2),\\n            getValue(batch, inIdx + 3)\\n          );\\n\\n          vec4 segFilter = vec4(\\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\\n          );\\n\\n          \").concat(updateSnippet, \"\\n        }\\n\\n        int inIdx = inOffset + \").concat(windowSizeNearestVec4, \";\\n        if (\").concat(windowSizeVec4Remainder === 1, \") {\\n          vec4 values = vec4(\\n            getValue(batch, inIdx),\\n            initializationValue,\\n            initializationValue,\\n            initializationValue\\n          );\\n\\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\\n\\n          vec4 segFilter = vec4(\\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\\n            0,\\n            0,\\n            0\\n          );\\n\\n          \").concat(updateSnippet, \"\\n        } else if (\").concat(windowSizeVec4Remainder === 2, \") {\\n          vec4 values = vec4(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            initializationValue,\\n            initializationValue\\n          );\\n\\n          vec4 segFilter = vec4(\\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\\n              0,\\n              0\\n          );\\n\\n          \").concat(updateSnippet, \"\\n        } else if (\").concat(windowSizeVec4Remainder === 3, \") {\\n          vec4 values = vec4(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            getValue(batch, inIdx + 2),\\n            initializationValue\\n          );\\n\\n          vec4 segFilter = vec4(\\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\\n            0\\n          );\\n\\n          \").concat(updateSnippet, \"\\n        }\\n        setOutput(\").concat(returnValue, \");\\n      }\\n    \");\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { registerKernel } from '@tensorflow/tfjs-core';\nimport { _fusedMatMulConfig } from './kernels/_FusedMatMul';\nimport { absConfig } from './kernels/Abs';\nimport { acosConfig } from './kernels/Acos';\nimport { acoshConfig } from './kernels/Acosh';\nimport { addConfig } from './kernels/Add';\nimport { addNConfig } from './kernels/AddN';\nimport { allConfig } from './kernels/All';\nimport { anyConfig } from './kernels/Any';\nimport { argMaxConfig } from './kernels/ArgMax';\nimport { argMinConfig } from './kernels/ArgMin';\nimport { asinConfig } from './kernels/Asin';\nimport { asinhConfig } from './kernels/Asinh';\nimport { atanConfig } from './kernels/Atan';\nimport { atan2Config } from './kernels/Atan2';\nimport { atanhConfig } from './kernels/Atanh';\nimport { avgPoolConfig } from './kernels/AvgPool';\nimport { avgPool3DConfig } from './kernels/AvgPool3D';\nimport { avgPoolGrad3DConfig } from './kernels/AvgPool3DGrad';\nimport { avgPoolGradConfig } from './kernels/AvgPoolGrad';\nimport { batchMatMulConfig } from './kernels/BatchMatMul';\nimport { batchNormConfig } from './kernels/BatchNorm';\nimport { batchToSpaceNDConfig } from './kernels/BatchToSpaceND';\nimport { bincountConfig } from './kernels/Bincount';\nimport { castConfig } from './kernels/Cast';\nimport { ceilConfig } from './kernels/Ceil';\nimport { clipByValueConfig } from './kernels/ClipByValue';\nimport { complexConfig } from './kernels/Complex';\nimport { complexAbsConfig } from './kernels/ComplexAbs';\nimport { concatConfig } from './kernels/Concat';\nimport { conv2DConfig } from './kernels/Conv2D';\nimport { conv2DBackpropFilterConfig } from './kernels/Conv2DBackpropFilter';\nimport { conv2DBackpropInputConfig } from './kernels/Conv2DBackpropInput';\nimport { conv3DConfig } from './kernels/Conv3D';\nimport { conv3DBackpropFilterV2Config } from './kernels/Conv3DBackpropFilterV2';\nimport { conv3DBackpropInputConfig } from './kernels/Conv3DBackpropInputV2';\nimport { cosConfig } from './kernels/Cos';\nimport { coshConfig } from './kernels/Cosh';\nimport { cropAndResizeConfig } from './kernels/CropAndResize';\nimport { cumsumConfig } from './kernels/Cumsum';\nimport { denseBincountConfig } from './kernels/DenseBincount';\nimport { depthToSpaceConfig } from './kernels/DepthToSpace';\nimport { depthwiseConv2dNativeConfig } from './kernels/DepthwiseConv2dNative';\nimport { depthwiseConv2dNativeBackpropFilterConfig } from './kernels/DepthwiseConv2dNativeBackpropFilter';\nimport { depthwiseConv2dNativeBackpropInputConfig } from './kernels/DepthwiseConv2dNativeBackpropInput';\nimport { diagConfig } from './kernels/Diag';\nimport { dilation2DConfig } from './kernels/Dilation2D';\nimport { einsumConfig } from './kernels/Einsum';\nimport { eluConfig } from './kernels/Elu';\nimport { eluGradConfig } from './kernels/EluGrad';\nimport { equalConfig } from './kernels/Equal';\nimport { erfConfig } from './kernels/Erf';\nimport { expConfig } from './kernels/Exp';\nimport { expandDimsConfig } from './kernels/ExpandDims';\nimport { expm1Config } from './kernels/Expm1';\nimport { fftConfig } from './kernels/FFT';\nimport { fillConfig } from './kernels/Fill';\nimport { flipLeftRightConfig } from './kernels/FlipLeftRight';\nimport { floorConfig } from './kernels/Floor';\nimport { floorDivConfig } from './kernels/FloorDiv';\nimport { fromPixelsConfig } from './kernels/FromPixels';\nimport { fusedConv2DConfig } from './kernels/FusedConv2D';\nimport { fusedDepthwiseConv2DConfig } from './kernels/FusedDepthwiseConv2D';\nimport { gatherNdConfig } from './kernels/GatherNd';\nimport { gatherV2Config } from './kernels/GatherV2';\nimport { greaterConfig } from './kernels/Greater';\nimport { greaterEqualConfig } from './kernels/GreaterEqual';\nimport { identityConfig } from './kernels/Identity';\nimport { ifftConfig } from './kernels/IFFT';\nimport { imagConfig } from './kernels/Imag';\nimport { isFiniteConfig } from './kernels/IsFinite';\nimport { isInfConfig } from './kernels/IsInf';\nimport { isNaNConfig } from './kernels/IsNaN';\nimport { leakyReluConfig } from './kernels/LeakyRelu';\nimport { lessConfig } from './kernels/Less';\nimport { lessEqualConfig } from './kernels/LessEqual';\nimport { linSpaceConfig } from './kernels/LinSpace';\nimport { logConfig } from './kernels/Log';\nimport { log1pConfig } from './kernels/Log1p';\nimport { logicalAndConfig } from './kernels/LogicalAnd';\nimport { logicalNotConfig } from './kernels/LogicalNot';\nimport { logicalOrConfig } from './kernels/LogicalOr';\nimport { LRNConfig } from './kernels/LRN';\nimport { LRNGradConfig } from './kernels/LRNGrad';\nimport { maxConfig } from './kernels/Max';\nimport { maximumConfig } from './kernels/Maximum';\nimport { maxPoolConfig } from './kernels/MaxPool';\nimport { maxPool3DConfig } from './kernels/MaxPool3D';\nimport { maxPoolGrad3DConfig } from './kernels/MaxPool3DGrad';\nimport { maxPoolGradConfig } from './kernels/MaxPoolGrad';\nimport { maxPoolWithArgmaxConfig } from './kernels/MaxPoolWithArgmax';\nimport { meanConfig } from './kernels/Mean';\nimport { minConfig } from './kernels/Min';\nimport { minimumConfig } from './kernels/Minimum';\nimport { mirrorPadConfig } from './kernels/MirrorPad';\nimport { modConfig } from './kernels/Mod';\nimport { multinomialConfig } from './kernels/Multinomial';\nimport { multiplyConfig } from './kernels/Multiply';\nimport { negConfig } from './kernels/Neg';\nimport { nonMaxSuppressionV3Config } from './kernels/NonMaxSuppressionV3';\nimport { nonMaxSuppressionV4Config } from './kernels/NonMaxSuppressionV4';\nimport { nonMaxSuppressionV5Config } from './kernels/NonMaxSuppressionV5';\nimport { notEqualConfig } from './kernels/NotEqual';\nimport { oneHotConfig } from './kernels/OneHot';\nimport { onesLikeConfig } from './kernels/OnesLike';\nimport { packConfig } from './kernels/Pack';\nimport { padV2Config } from './kernels/PadV2';\nimport { powConfig } from './kernels/Pow';\nimport { preluConfig } from './kernels/Prelu';\nimport { prodConfig } from './kernels/Prod';\nimport { rangeConfig } from './kernels/Range';\nimport { realConfig } from './kernels/Real';\nimport { realDivConfig } from './kernels/RealDiv';\nimport { reciprocalConfig } from './kernels/Reciprocal';\nimport { reluConfig } from './kernels/Relu';\nimport { relu6Config } from './kernels/Relu6';\nimport { reshapeConfig } from './kernels/Reshape';\nimport { resizeBilinearConfig } from './kernels/ResizeBilinear';\nimport { resizeBilinearGradConfig } from './kernels/ResizeBilinearGrad';\nimport { resizeNearestNeighborConfig } from './kernels/ResizeNearestNeighbor';\nimport { resizeNearestNeighborGradConfig } from './kernels/ResizeNearestNeighborGrad';\nimport { reverseConfig } from './kernels/Reverse';\nimport { rotateWithOffsetConfig } from './kernels/RotateWithOffset';\nimport { roundConfig } from './kernels/Round';\nimport { rsqrtConfig } from './kernels/Rsqrt';\nimport { scatterNdConfig } from './kernels/ScatterNd';\nimport { selectConfig } from './kernels/Select';\nimport { seluConfig } from './kernels/Selu';\nimport { sigmoidConfig } from './kernels/Sigmoid';\nimport { signConfig } from './kernels/Sign';\nimport { sinConfig } from './kernels/Sin';\nimport { sinhConfig } from './kernels/Sinh';\nimport { sliceConfig } from './kernels/Slice';\nimport { softmaxConfig } from './kernels/Softmax';\nimport { softplusConfig } from './kernels/Softplus';\nimport { spaceToBatchNDConfig } from './kernels/SpaceToBatchND';\nimport { sparseToDenseConfig } from './kernels/SparseToDense';\nimport { splitVConfig } from './kernels/SplitV';\nimport { sqrtConfig } from './kernels/Sqrt';\nimport { squareConfig } from './kernels/Square';\nimport { squaredDifferenceConfig } from './kernels/SquaredDifference';\nimport { stepConfig } from './kernels/Step';\nimport { stridedSliceConfig } from './kernels/StridedSlice';\nimport { subConfig } from './kernels/Sub';\nimport { sumConfig } from './kernels/Sum';\nimport { tanConfig } from './kernels/Tan';\nimport { tanhConfig } from './kernels/Tanh';\nimport { tileConfig } from './kernels/Tile';\nimport { topKConfig } from './kernels/TopK';\nimport { transformConfig } from './kernels/Transform';\nimport { transposeConfig } from './kernels/Transpose';\nimport { uniqueConfig } from './kernels/Unique';\nimport { unpackConfig } from './kernels/Unpack';\nimport { unsortedSegmentSumConfig } from './kernels/UnsortedSegmentSum';\nimport { zerosLikeConfig } from './kernels/ZerosLike'; // List all kernel configs here\n\nvar kernelConfigs = [LRNConfig, LRNGradConfig, _fusedMatMulConfig, absConfig, acosConfig, acoshConfig, addConfig, addNConfig, allConfig, anyConfig, argMaxConfig, argMinConfig, asinConfig, asinhConfig, atan2Config, atanConfig, atanhConfig, avgPool3DConfig, avgPoolConfig, avgPoolGrad3DConfig, avgPoolGradConfig, batchMatMulConfig, batchNormConfig, batchToSpaceNDConfig, bincountConfig, castConfig, ceilConfig, clipByValueConfig, complexAbsConfig, complexConfig, concatConfig, conv2DBackpropFilterConfig, conv2DBackpropInputConfig, conv2DConfig, conv3DBackpropFilterV2Config, conv3DBackpropInputConfig, conv3DConfig, cosConfig, coshConfig, cropAndResizeConfig, cumsumConfig, denseBincountConfig, depthToSpaceConfig, depthwiseConv2dNativeBackpropFilterConfig, depthwiseConv2dNativeBackpropInputConfig, depthwiseConv2dNativeConfig, diagConfig, dilation2DConfig, einsumConfig, eluConfig, eluGradConfig, equalConfig, erfConfig, expConfig, expandDimsConfig, expm1Config, fftConfig, fillConfig, flipLeftRightConfig, floorConfig, floorDivConfig, fromPixelsConfig, fusedConv2DConfig, fusedDepthwiseConv2DConfig, gatherNdConfig, gatherV2Config, greaterConfig, greaterEqualConfig, identityConfig, ifftConfig, imagConfig, isFiniteConfig, isInfConfig, isNaNConfig, leakyReluConfig, lessConfig, lessEqualConfig, linSpaceConfig, log1pConfig, logConfig, logicalAndConfig, logicalNotConfig, logicalOrConfig, maxConfig, maxPool3DConfig, maxPoolConfig, maxPoolGrad3DConfig, maxPoolGradConfig, maxPoolWithArgmaxConfig, maximumConfig, meanConfig, minConfig, minimumConfig, mirrorPadConfig, modConfig, multinomialConfig, multiplyConfig, negConfig, nonMaxSuppressionV3Config, nonMaxSuppressionV4Config, nonMaxSuppressionV5Config, notEqualConfig, oneHotConfig, onesLikeConfig, packConfig, padV2Config, powConfig, preluConfig, prodConfig, rangeConfig, realConfig, realDivConfig, reciprocalConfig, relu6Config, reluConfig, reshapeConfig, resizeBilinearConfig, resizeBilinearGradConfig, resizeNearestNeighborConfig, resizeNearestNeighborGradConfig, reverseConfig, rotateWithOffsetConfig, roundConfig, rsqrtConfig, scatterNdConfig, selectConfig, seluConfig, sigmoidConfig, signConfig, sinConfig, sinhConfig, sliceConfig, softmaxConfig, softplusConfig, spaceToBatchNDConfig, sparseToDenseConfig, splitVConfig, sqrtConfig, squareConfig, squaredDifferenceConfig, stepConfig, stridedSliceConfig, subConfig, sumConfig, tanConfig, tanhConfig, tileConfig, topKConfig, transformConfig, transposeConfig, uniqueConfig, unpackConfig, unsortedSegmentSumConfig, zerosLikeConfig];\n\nfor (var _i = 0, _kernelConfigs = kernelConfigs; _i < _kernelConfigs.length; _i++) {\n  var kernelConfig = _kernelConfigs[_i];\n  registerKernel(kernelConfig);\n}","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, sumOutType, UnsortedSegmentSum, util } from '@tensorflow/tfjs-core';\nimport { SegmentOpProgram } from '../segment_gpu';\nimport { range } from './Range';\nimport { reshape } from './Reshape';\nimport { tile } from './Tile';\nimport { transpose } from './Transpose';\nexport function unsortedSegmentSum(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x,\n      segmentIds = inputs.segmentIds;\n  var numSegments = attrs.numSegments;\n  var xRank = x.shape.length;\n  var toDispose = [];\n  var axis = 0;\n  var permutation = backend_util.getAxesPermutation([axis], xRank);\n  var permutedX = x;\n\n  if (permutation != null) {\n    permutedX = transpose({\n      inputs: {\n        x: x\n      },\n      backend: backend,\n      attrs: {\n        perm: permutation\n      }\n    });\n    toDispose.push(permutedX);\n    axis = backend_util.getInnerMostAxes(1, xRank)[0];\n  }\n\n  var outShape = backend_util.segment_util.computeOutShape(permutedX.shape, axis, numSegments);\n  var inSize = util.sizeFromShape([permutedX.shape[axis]]);\n  var a2D = reshape({\n    inputs: {\n      x: permutedX\n    },\n    backend: backend,\n    attrs: {\n      shape: [-1, inSize]\n    }\n  });\n  toDispose.push(a2D);\n  var outputDType = sumOutType(x.dtype);\n\n  var segOpCompute = function segOpCompute(x, segOpType, segmentIds, dtype, numSegments) {\n    var batchSize = x.shape[0];\n    var inSize = x.shape[1];\n    var windowSize = backend_util.segment_util.segOpComputeOptimalWindowSize(inSize, numSegments);\n    var segOpInfo = {\n      windowSize: windowSize,\n      inSize: inSize,\n      batchSize: batchSize,\n      numSegments: numSegments\n    };\n    var program = new SegmentOpProgram(segOpInfo, segOpType);\n    var output = backend.compileAndRun(program, [x, segmentIds], dtype);\n    toDispose.push(output); // No need to run another GPGPU program.\n\n    if (output.shape[1] === numSegments) {\n      return output;\n    }\n\n    var rangeInfo = range({\n      backend: backend,\n      attrs: {\n        start: 0,\n        stop: numSegments,\n        step: 1,\n        dtype: 'float32'\n      }\n    });\n    var tileInfo = tile({\n      inputs: {\n        x: rangeInfo\n      },\n      backend: backend,\n      attrs: {\n        reps: [inSize / windowSize]\n      }\n    });\n    toDispose.push(rangeInfo);\n    toDispose.push(tileInfo);\n    var result = segOpCompute(output, segOpType, tileInfo, dtype, numSegments);\n    return result;\n  };\n\n  var segOpResult = segOpCompute(a2D, 'unsortedSegmentSum', segmentIds, outputDType, numSegments);\n  var reshaped = reshape({\n    inputs: {\n      x: segOpResult\n    },\n    backend: backend,\n    attrs: {\n      shape: outShape\n    }\n  });\n  var result = reshaped;\n\n  if (permutation != null) {\n    toDispose.push(reshaped);\n    var perm = backend_util.getUndoAxesPermutation(permutation);\n    result = transpose({\n      inputs: {\n        x: result\n      },\n      backend: backend,\n      attrs: {\n        perm: perm\n      }\n    });\n  }\n\n  toDispose.forEach(function (t) {\n    return backend.disposeIntermediateTensorInfo(t);\n  });\n  return result;\n}\nexport var unsortedSegmentSumConfig = {\n  kernelName: UnsortedSegmentSum,\n  backendName: 'webgl',\n  kernelFunc: unsortedSegmentSum\n};","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport '@tensorflow/tfjs-core'; // tslint:disable-next-line: no-imports-from-dist\n\nimport '@tensorflow/tfjs-core/dist/register_all_gradients'; // tslint:disable-next-line: no-imports-from-dist\n\nimport '@tensorflow/tfjs-core/dist/public/chained_ops/register_all_chained_ops';\nexport * from '@tensorflow/tfjs-core';\nexport * from '@tensorflow/tfjs-layers';\nexport * from '@tensorflow/tfjs-converter'; // Export data api as tf.data\n\nimport * as data from '@tensorflow/tfjs-data';\nexport { data }; // Import and register backends.\n\nimport '@tensorflow/tfjs-backend-cpu';\nimport '@tensorflow/tfjs-backend-webgl'; // Import versions of all sub-packages.\n\nimport { version_core } from '@tensorflow/tfjs-core';\nimport { version_cpu } from '@tensorflow/tfjs-backend-cpu';\nimport { version_webgl } from '@tensorflow/tfjs-backend-webgl';\nimport { version_data } from '@tensorflow/tfjs-data';\nimport { version_layers } from '@tensorflow/tfjs-layers';\nimport { version_converter } from '@tensorflow/tfjs-converter';\nimport { version as version_union } from './version';\nexport var version = {\n  'tfjs-core': version_core,\n  'tfjs-backend-cpu': version_cpu,\n  'tfjs-backend-webgl': version_webgl,\n  'tfjs-data': version_data,\n  'tfjs-layers': version_layers,\n  'tfjs-converter': version_converter,\n  'tfjs': version_union\n};"],"sourceRoot":""}