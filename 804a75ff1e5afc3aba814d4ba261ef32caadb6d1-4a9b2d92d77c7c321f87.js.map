{"version":3,"sources":["webpack://gatsby-test/./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://gatsby-test/./node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack://gatsby-test/./node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","webpack://gatsby-test/./node_modules/@babel/runtime/helpers/esm/construct.js","webpack://gatsby-test/./node_modules/@babel/runtime/helpers/esm/get.js","webpack://gatsby-test/./node_modules/@babel/runtime/helpers/esm/superPropBase.js","webpack://gatsby-test/./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack://gatsby-test/./node_modules/@babel/runtime/helpers/esm/inherits.js","webpack://gatsby-test/./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","webpack://gatsby-test/./node_modules/@babel/runtime/helpers/esm/toArray.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/backends/backend.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/profiler.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/tape.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/engine.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/environment.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/global_util.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/gradients.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/device_util.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/flags.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/tensor.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/io/types.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/io/io_utils.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/io/router_registry.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/io/indexed_db.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/io/local_storage.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/io/model_management.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/platforms/platform_browser.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/platforms/platform_node.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/buffer.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/print.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/base_side_effects.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/io/browser_files.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/io/progress.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/io/weights_loader.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/io/http.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/io/passthrough.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/confusion_matrix.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/browser.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/tensor3d.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/gather_nd_util.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/scatter_nd_util.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/serialization.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/test_util.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/version.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/globals.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/optimizers/optimizer.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/optimizers/adadelta_optimizer.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/fill.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/optimizers/adagrad_optimizer.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/optimizers/adam_optimizer.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/optimizers/adamax_optimizer.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/optimizers/sgd_optimizer.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/optimizers/momentum_optimizer.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/add_n.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/avg_pool_3d.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/basic_lstm_cell.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm2d.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm3d.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm4d.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/bincount.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/concat_1d.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/concat_2d.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/concat_3d.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/concat_4d.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/conv3d.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/conv3d_transpose.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/dense_bincount.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/diag.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/einsum.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/eye.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/linspace.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/max_pool_3d.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/max_pool_with_argmax.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/meshgrid.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/moments.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/multi_rnn_cell.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/multinomial.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/outer_product.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/pad1d.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/pad2d.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/pad3d.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/pad4d.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/rand.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/rand_util.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/random_gamma.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/random_normal.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/random_uniform.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/range.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/reverse_1d.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/reverse_2d.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/reverse_3d.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/reverse_4d.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/setdiff1d_async.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/slice1d.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/slice2d.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/slice3d.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/slice4d.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/tensor1d.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/tensor2d.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/tensor4d.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/tensor5d.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/tensor6d.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/truncated_normal.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/variable.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/backends/where_impl.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/where_async.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/boolean_mask.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/moving_average.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/scatter_nd.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/sparse_to_dense_util.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/sparse_to_dense.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/gather_nd.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/dropout.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/dropout_util.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/signal_ops_util.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/in_top_k.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/fused_util.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/fused/conv2d.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/fused/depthwise_conv2d.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/fused/mat_mul.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/signal/hamming_window.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/signal/hann_window.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/signal/frame.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/signal/stft.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/image/crop_and_resize.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/image/flip_left_right.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/image/rotate_with_offset.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/nonmax_util.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/backends/non_max_suppression_util.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/backends/non_max_suppression_impl.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression_async.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression_with_score.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression_with_score_async.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression_padded.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression_padded_async.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/image/transform.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/linalg/band_part.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/linalg/gram_schmidt.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/linalg/qr.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/loss_ops_utils.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/losses/compute_weighted_loss.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/losses/absolute_difference.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/losses/cosine_distance.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/losses/hinge_loss.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/losses/huber_loss.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/losses/log_loss.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/losses/mean_squared_error.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/losses/sigmoid_cross_entropy.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/losses/softmax_cross_entropy.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/ops.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/optimizers/optimizer_constructors.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/train.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/browser_util.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/concat_util.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/reduce_util.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/rotate_util.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/array_ops_util.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/erf_util.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/log.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/backends/complex_util.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/backends/einsum_util.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/split_util.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/segment_util.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/backends/backend_util.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/kernel_registry.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/abs.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/acos.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/acosh.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/add.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/all.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/any.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/arg_max.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/arg_min.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/asin.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/asinh.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/atan.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/atan2.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/atanh.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/avg_pool.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/axis_util.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/batch_to_space_nd.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm_util.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_to.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_util.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/cast.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/ceil.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/clip_by_value.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/clone.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/complex.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/concat.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/conv1d.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/conv2d.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/conv2d_backprop_filter.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/conv2d_backprop_input.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/conv2d_transpose.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/conv3d_backprop_input.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/conv_util.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/cos.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/cosh.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/cumsum.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/depth_to_space.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/depthwise_conv2d.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/depthwise_conv2d_native_backprop_filter.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/depthwise_conv2d_native_backprop_input.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/dilation2d.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/div.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/div_no_nan.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/dot.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/elu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/equal.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/erf.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/exp.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/expand_dims.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/expm1.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/floor.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/floorDiv.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/gather.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/greater.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/greater_equal.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/imag.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/image/resize_bilinear.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/image/resize_nearest_neighbor.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/is_finite.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/is_inf.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/is_nan.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/leaky_relu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/less.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/less_equal.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/local_response_normalization.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/log.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/log1p.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/log_sigmoid.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/log_softmax.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/log_sum_exp.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/logical_and.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/logical_not.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/logical_or.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/logical_xor.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/mat_mul.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/max.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/max_pool.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/maximum.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/mean.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/min.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/minimum.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/mirror_pad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/mod.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/neg.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/norm.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/not_equal.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/one_hot.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/ones.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/ones_like.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/pad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/pool.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/pow.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/prelu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/prod.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/real.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/reciprocal.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/relu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/relu6.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/reverse.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/round.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/rsqrt.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/scalar.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/selu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/selu_util.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/separable_conv2d.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/sigmoid.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/sign.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/sin.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/sinh.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/slice.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/slice_util.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/softmax.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/softplus.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/space_to_batch_nd.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/spectral/fft.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/spectral/ifft.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/spectral/irfft.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/spectral/rfft.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/split.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/sqrt.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/square.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/squared_difference.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/squeeze.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/stack.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/step.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/strided_slice.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/sub.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/sum.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/tan.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/tanh.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/tensor_ops_util.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/tile.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/topk.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/transpose.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/unique.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/unsorted_segment_sum.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/unstack.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/where.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/zeros.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/ops/zeros_like.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/abs.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/acos.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/acosh.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/add.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/all.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/any.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/arg_max.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/arg_min.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/as_scalar.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/as_type.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/as1d.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/as2d.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/as3d.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/as4d.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/as5d.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/asin.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/asinh.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/atan.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/atan2.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/atanh.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/avg_pool.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/batch_to_space_nd.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/batchnorm.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/broadcast_to.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/cast.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/ceil.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/clip_by_value.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/concat.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/conv1d.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/conv2d_transpose.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/conv2d.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/cos.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/cosh.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/cumsum.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/depth_to_space.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/depthwise_conv2d.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/dilation2d.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/div_no_nan.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/div.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/dot.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/elu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/equal.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/erf.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/exp.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/expand_dims.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/expm1.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/fft.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/flatten.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/floor.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/floorDiv.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/gather.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/greater_equal.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/greater.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/ifft.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/irfft.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/is_finite.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/is_inf.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/is_nan.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/leaky_relu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/less_equal.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/less.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/local_response_normalization.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/log_sigmoid.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/log_softmax.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/log_sum_exp.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/log.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/log1p.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/logical_and.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/logical_not.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/logical_or.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/logical_xor.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/mat_mul.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/max_pool.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/max.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/maximum.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/mean.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/min.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/minimum.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/mirror_pad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/mod.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/mul.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/neg.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/norm.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/not_equal.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/one_hot.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/ones_like.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/pad.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/pool.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/pow.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/prelu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/prod.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/reciprocal.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/relu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/relu6.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/reshape_as.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/reshape.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/resize_bilinear.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/resize_nearest_neighbor.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/reverse.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/rfft.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/round.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/rsqrt.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/selu.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/separable_conv2d.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/sigmoid.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/sign.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/sin.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/sinh.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/slice.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/softmax.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/softplus.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/space_to_batch_nd.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/split.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/sqrt.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/square.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/squared_difference.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/squeeze.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/stack.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/step.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/strided_slice.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/sub.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/sum.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/tan.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/tanh.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/tile.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/to_bool.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/to_float.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/to_int.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/topk.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/transpose.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/unique.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/unsorted_segment_sum.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/unstack.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/where.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/zeros_like.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/tensor_format.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/tensor.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/types.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/util.js","webpack://gatsby-test/./node_modules/@tensorflow/tfjs-core/dist/util_base.js","webpack://gatsby-test/./node_modules/seedrandom/index.js","webpack://gatsby-test/./node_modules/seedrandom/lib/alea.js","webpack://gatsby-test/./node_modules/seedrandom/lib/tychei.js","webpack://gatsby-test/./node_modules/seedrandom/lib/xor128.js","webpack://gatsby-test/./node_modules/seedrandom/lib/xor4096.js","webpack://gatsby-test/./node_modules/seedrandom/lib/xorshift7.js","webpack://gatsby-test/./node_modules/seedrandom/lib/xorwow.js","webpack://gatsby-test/./node_modules/seedrandom/seedrandom.js","webpack://gatsby-test/./node_modules/core-js/internals/an-object.js","webpack://gatsby-test/./node_modules/core-js/internals/array-includes.js","webpack://gatsby-test/./node_modules/core-js/internals/classof-raw.js","webpack://gatsby-test/./node_modules/core-js/internals/copy-constructor-properties.js","webpack://gatsby-test/./node_modules/core-js/internals/create-non-enumerable-property.js","webpack://gatsby-test/./node_modules/core-js/internals/create-property-descriptor.js","webpack://gatsby-test/./node_modules/core-js/internals/descriptors.js","webpack://gatsby-test/./node_modules/core-js/internals/document-create-element.js","webpack://gatsby-test/./node_modules/core-js/internals/enum-bug-keys.js","webpack://gatsby-test/./node_modules/core-js/internals/export.js","webpack://gatsby-test/./node_modules/core-js/internals/fails.js","webpack://gatsby-test/./node_modules/core-js/internals/get-built-in.js","webpack://gatsby-test/./node_modules/core-js/internals/global.js","webpack://gatsby-test/./node_modules/core-js/internals/has.js","webpack://gatsby-test/./node_modules/core-js/internals/hidden-keys.js","webpack://gatsby-test/./node_modules/core-js/internals/ie8-dom-define.js","webpack://gatsby-test/./node_modules/core-js/internals/indexed-object.js","webpack://gatsby-test/./node_modules/core-js/internals/inspect-source.js","webpack://gatsby-test/./node_modules/core-js/internals/internal-state.js","webpack://gatsby-test/./node_modules/core-js/internals/is-forced.js","webpack://gatsby-test/./node_modules/core-js/internals/is-object.js","webpack://gatsby-test/./node_modules/core-js/internals/is-pure.js","webpack://gatsby-test/./node_modules/core-js/internals/native-weak-map.js","webpack://gatsby-test/./node_modules/core-js/internals/object-define-property.js","webpack://gatsby-test/./node_modules/core-js/internals/object-get-own-property-descriptor.js","webpack://gatsby-test/./node_modules/core-js/internals/object-get-own-property-names.js","webpack://gatsby-test/./node_modules/core-js/internals/object-get-own-property-symbols.js","webpack://gatsby-test/./node_modules/core-js/internals/object-keys-internal.js","webpack://gatsby-test/./node_modules/core-js/internals/object-property-is-enumerable.js","webpack://gatsby-test/./node_modules/core-js/internals/own-keys.js","webpack://gatsby-test/./node_modules/core-js/internals/path.js","webpack://gatsby-test/./node_modules/core-js/internals/redefine.js","webpack://gatsby-test/./node_modules/core-js/internals/require-object-coercible.js","webpack://gatsby-test/./node_modules/core-js/internals/set-global.js","webpack://gatsby-test/./node_modules/core-js/internals/shared-key.js","webpack://gatsby-test/./node_modules/core-js/internals/shared-store.js","webpack://gatsby-test/./node_modules/core-js/internals/shared.js","webpack://gatsby-test/./node_modules/core-js/internals/to-absolute-index.js","webpack://gatsby-test/./node_modules/core-js/internals/to-indexed-object.js","webpack://gatsby-test/./node_modules/core-js/internals/to-integer.js","webpack://gatsby-test/./node_modules/core-js/internals/to-length.js","webpack://gatsby-test/./node_modules/core-js/internals/to-primitive.js","webpack://gatsby-test/./node_modules/core-js/internals/uid.js","webpack://gatsby-test/./node_modules/core-js/modules/es.math.hypot.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","_classCallCheck","instance","Constructor","TypeError","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","prototype","valueOf","call","e","_construct","Parent","Class","a","push","Function","bind","setPrototypeOf","_get","target","property","receiver","get","base","object","Object","hasOwnProperty","getPrototypeOf","desc","getOwnPropertyDescriptor","_getPrototypeOf","o","__proto__","_inherits","subClass","superClass","create","constructor","writable","configurable","_possibleConstructorReturn","_toArray","arr","DataStorage","backend","dataMover","data","WeakMap","dataIdsCount","dataId","has","moveData","set","delete","KernelBackend","notYetImplemented","f","force","values","shape","dtype","refCount","floatPrecision","kernelName","Error","concat","_createForOfIteratorHelper","allowArrayLike","it","Symbol","iterator","Array","isArray","minLen","_arrayLikeToArray","n","toString","slice","name","from","test","_unsupportedIterableToArray","length","i","F","s","_e","normalCompletion","didErr","step","next","_e2","return","len","arr2","Profiler","backendTimer","logger","Logger","inputs","outputs","timer","holdResultWrapperFn","start","util","now","timerAvailable","time","_step","_iterator","dataSync","kernelMs","getBool","_loop","output","tensorVals","vals","num","isNaN","isFinite","console","warn","checkComputationForErrors","timeMs","timing","extraInfo","getExtraProfileInfo","kernelProfile","_this","forEach","result","all","valueContainer","logKernelProfile","paddedName","rank","size","inputShapesDescription","_name","input","inputShape","inputRank","log","getFilteredNodesXToY","tape","xs","y","tensorsFromX","nodesFromX","id","_i","node","nodeInputs","inputName","anyInputFromX","j","tensorsLeadToY","nodesToY","_i2","_node","_nodeInputs","_j","_inputName","filteredTape","_i3","_node2","prunedInputs","_inputName2","nodeInput","prunedNode","assign","backpropagateGradients","tensorAccumulatedGradientMap","tidy","add","dys","gradTensor","gradient","inputGradients","_loop2","keys","dx","x","curGradient","dispose","isRegisteredKernelInvocation","kernelInvocation","EngineState","registeredVariables","nextTapeNodeId","numBytes","numTensors","numStringTensors","numDataBuffers","gradientDepth","kernelDepth","scopeStack","numDataMovesStack","nextScopeId","tensorInfo","profiling","activeProfile","newBytes","newTensors","peakBytes","kernels","Set","map","k","variableName","Engine","ENV","registry","registryFactory","pendingBackendInitId","state","_time","_profile","_setBackend","_ready","_callee","sortedBackends","backendName","_context","prev","pendingBackendInit","abrupt","backendInstance","getSortedBackends","initializeBackend","success","sent","setBackend","stop","_this$initializeBacke","initializeBackendsAndReturnBest","asyncInit","factory","priority","_callee2","_this$initializeBacke3","_context2","t0","setupRegisteredKernels","profiler","_x","kernel","setupFunc","_this2","disposeFunc","_this3","registryFactoryEntry","promiseId","catch","stack","message","disposeRegisteredKernels","_this4","sort","b","_this$initializeBacke4","srcBackend","readSync","disposeData","move","shouldCheckForMemLeaks","nameOrFn","_this5","String","scopedRun","startScope","endScope","end","res","ex","nextTensorId","nextVariableId","ENGINE","runKernel","addTapeNode","activeScope","dy","gradInputs","attrs","runKernelFunc","numDataIdsBefore","outInfos","numDataIdsAfter","numDataIds","numOutputDataIds","numMoves","dataIdsLeaked","kernelParams","kernelFunc","out","_this6","saved","isTapeOn","startingBytecount","startingNumTensors","kernelOrScopeName","_inputs","_attrs","checkKernelForMemLeak","outTensors","outInfo","makeTensorFromDataId","tensorsToSave","getTensorsForGradient","saveTensorsForBackwardMode","forwardFunc","saveFunc","tensors","tensor","keep","clone","outs","backwardsFunc","profileKernel","bytesAdded","totalBytesSnapshot","tensorsAdded","totalTensorsSnapshot","inputShapes","outputShapes","item","kernelTimeMs","_this7","gradConfig","inputTensorsToSave","inputsToSave","outputsToSave","saveAllInputs","outputTensorsToSave","filter","_","backendVals","d","encodeString","write","t","trackTensor","bytes","initialValue","trainable","cast","v","incRef","track","removeDataId","varName","disposeVariable","disposeTensor","memory","unreliable","reasons","_callee3","query","startBytes","startNumTensors","_context3","Math","max","finish","_x2","gradientsFunc","_this8","tapeNode","gradFunc","makeTensor","activeTape","kept","scopeInfo","_this9","tensorsToTrackInParent","getTensorsInContainer","tensorsToTrackInParentSet","oldScope","pop","scopeId","_this10","allowNoGradients","startTape","endTape","accumulatedGradientMap","ones","grads","_step2","_iterator2","_this11","_len","_key","every","inputMap","save","gradRes","gradMap","grad","read","_callee4","timingInfo","_context4","wallMs","_x3","reset","getOrMakeEngine","ns","_tfengine","environment","TENSORFLOWJS_FLAGS_PREFIX","Environment","global","flags","flagRegistry","urlFlags","getQueryParams","populateURLFlags","_getAsync","platformName","platform","flagName","evaluationFn","setHook","flagValue","evaluateFlag","location","search","urlParams","split","keyValue","_keyValue$split","_keyValue$split2","toLowerCase","parseValue","queryString","params","replace","decodeParam","join","decodeURIComponent","env","setEnvironmentGlobal","globalNameSpace","getGlobalNamespace","window","g","process","getGlobal","init","globalMap","_tfGlobals","Map","singleton","$x","$dy","_ENGINE$gradients","checkGrads","$args","_ENGINE$gradients2","valueAndGrad","_ENGINE$gradients3","valueAndGrads","variableGrads","varList","specifiedVarList","specifiedNonTrainable","variable","originalVarCount","_ENGINE$gradients4","some","namedGrads","customGrad","isMobile","nav","navigator","product","userAgent","vendor","opera","substr","isBrowser","document","WorkerGlobalScope","registerFlag","debugValue","versions","inferredShape","DTYPE_VALUE_SIZE_MAP","encodeWeights","_encodeWeights","group","specs","dataPromises","names","tensorValues","spec","utf8bytes","_ref","totalNumBytes","offset","_i6","val","bytesOfLength","reduce","p","c","Uint8Array","Uint32Array","buffer","concatenateTypedArrays","decodeWeights","float16Decode","quantization","quantizationSizeFactor","byteBuffer","quantizedArray","Uint16Array","Float32Array","scale","min","getFloat16Decoder","Int32Array","_v","round","_size","byteLength","dtypeFactor","_byteBuffer","real","image","realTensor","imageTensor","complex","JSON","stringify","totalByteLength","normalizedXs","useNodeBuffer","Buffer","Blob","atob","btoa","stringByteLength","str","arrayBufferToBase64String","buf","l","fromCharCode","base64StringToArrayBuffer","byteOffset","charCodeAt","concatenateArrayBuffers","buffers","temp","basename","path","trim","endsWith","items","getModelArtifactsInfoForJSON","modelArtifacts","modelTopology","ArrayBuffer","dateSaved","Date","modelTopologyType","modelTopologyBytes","weightSpecsBytes","weightSpecs","weightDataBytes","weightData","mantisaTable","convertMantissa","m","_i4","computeFloat16MantisaTable","exponentTable","_i5","computeFloat16ExponentTable","offsetTable","computeFloat16OffsetTable","bufferUint32View","index","float16Bits","float32Bits","IORouterRegistry","saveRouters","loadRouters","saveRouter","getInstance","loadRouter","url","getHandlers","loadOptions","handlerType","validHandlers","router","handler","registerSaveRouter","loudRouter","registerLoadRouter","getSaveHandlers","getLoadHandlers","DATABASE_NAME","MODEL_STORE_NAME","INFO_STORE_NAME","getIndexedDBFactory","theWindow","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","shimIndexedDB","setUpDatabase","openRequest","db","createObjectStore","keyPath","BrowserIndexedDB","modelPath","_load","_save","databaseAction","open","onupgradeneeded","onsuccess","modelTx","transaction","getRequest","objectStore","close","onerror","oncomplete","_modelTx","modelArtifactsInfo","infoTx","infoStore","putInfoRequest","put","putModelRequest","deleteInfoRequest","URL_SCHEME","indexedDBRouter","startsWith","BrowserIndexedDBManager","_listModels","tx","getAllInfoRequest","getAll","_removeModel","getInfoRequest","deleteModelData","deleteModelRequest","PATH_SEPARATOR","PATH_PREFIX","INFO_SUFFIX","MODEL_TOPOLOGY_SUFFIX","WEIGHT_SPECS_SUFFIX","WEIGHT_DATA_SUFFIX","MODEL_METADATA_SUFFIX","getModelKeys","topology","modelMetadata","getModelPathFromKey","BrowserLocalStorage","localStorage","LS","setItem","format","generatedBy","convertedBy","signature","userDefinedMetadata","modelInitializer","removeItem","metadataString","metadata","weightDataBase64","parse","getItem","localStorageRouter","BrowserLocalStorageManager","prefix","suffix","URL_SCHEME_SUFFIX","ModelStoreManagerRegistry","managers","scheme","manager","indexOf","parseURL","getSchemes","cloneModelInternal","_cloneModelInternal","sourceURL","destURL","deleteSource","loadHandlers","loadHandler","saveHandlers","saveHandler","sourceScheme","sourcePath","sameMedium","saveResult","_args","load","getManager","removeModel","listModels","schemes","schemeOut","schemeAndPath","copyModel","_x4","_x5","_copyModel","moveModel","_x6","_x7","_moveModel","_callee5","_context5","PlatformBrowser","_fetch","fetch","performance","text","encoding","textEncoder","TextEncoder","encode","TextDecoder","decode","setPlatform","registerManager","systemFetch","getNodeFetch","PlatformNode","requestInits","hrtime","print","verbose","opHandler","defer","setTimeout","BrowserDownloads","fileNamePrefix","modelTopologyFileName","weightDataFileName","weightsURL","weightsManifest","modelTopologyAndWeightManifest","modelTopologyAndWeightManifestURL","jsonAnchor","weightDataAnchor","URL","createObjectURL","type","paths","weights","createElement","download","href","dispatchEvent","MouseEvent","BrowserFiles","files","jsonFile","weightFiles","jsonReader","FileReader","onload","event","modelJSON","pathToFile","checkManifestAndWeightFiles","perFileBuffers","weightsGroup","weightFileReader","readAsArrayBuffer","readAsText","manifest","basenames","fileNames","file","pathBasename","browserFiles","browserDownloads","monitorPromisesProgress","promises","onProgress","startFraction","endFraction","checkPromises","checkFraction","resolvedPromise","promise","fraction","loadWeightsAsArrayBuffer","_loadWeightsAsArrayBuffer","fetchURLs","fetchFunc","requests","fetchStartFraction","fetchEndFraction","responses","bufferPromises","bufferStartFraction","bufferEndFraction","fetchURL","requestInit","isBinary","response","arrayBuffer","t1","loadWeights","_loadWeights","filePathPrefix","weightNames","_args3","weightsLoaderFactory","fetchUrls","fetchWeightsFunction","groupIndicesToFetchMap","groupWeightsToFetch","weightsFound","allManifestWeightNames","weightsNotFound","groupIndicesToFetch","weightsTensorMap","bufferIndexOffset","manifestGroupConfig","groupIndex","groupOffset","weightsEntry","rawDtype","weightsBytes","enqueueWeightsForFetchingFn","manifestEntry","sizeBytes","weightName","weightIndex","found","accumulator","shouldFetch","filepath","fetchUrl","numBuffers","groupBytes","groupBuffer","groupByteBuffer","groupBufferOffset","nameToTensorMap","HTTPRequest","DEFAULT_METHOD","weightPathPrefix","weightUrlConverter","body","method","FormData","append","ok","status","modelConfigRequest","modelConfig","results","_results","artifacts","initializer","json","weightPath","_parseUrl","_parseUrl2","pathPrefix","entry","urlPromises","_iterator3","_step3","parseUrl","t2","t3","t4","lastSlash","lastIndexOf","lastSearchParam","substring","isHTTPScheme","match","URL_SCHEME_REGEX","httpRouter","urlItem","http","browserHTTPRequest","PassthroughLoader","PassthroughSaver","fromMemory","trainingConfig","isModelArtifacts","withSaveHandler","fromPixels2DContext","confusionMatrix","op","confusionMatrix_","labels","predictions","numClasses","$labels","$predictions","Number","isInteger","oneHotLabels","oneHotPredictions","oneHotLabelsT","transpose","tensor3d","fromPixels_","pixels","numChannels","isPixelData","isImageData","isVideo","isImage","isCanvasLike","isImageBitmap","ImageData","HTMLVideoElement","HTMLImageElement","getContext","ImageBitmap","HAVE_CURRENT_DATA_READY_STATE","readyState","videoWidth","videoHeight","width","height","_ref2","getImageData","canvas","drawImage","numPixels","channel","outShape","canWrapPixelsToImageBitmap","isNonEmptyPixels","fromPixelsAsync","_fromPixelsAsync","imageBitmap","createImageBitmap","premultiplyAlpha","toPixels","_toPixels","img","$img","originalImgTensor","_$img$shape$slice","_$img$shape$slice2","depth","multiplier","rgba","ctx","imageData","Uint8ClampedArray","putImageData","fromPixels","prepareAndValidate","indices","tensorRank","indicesRank","indicesShape","sliceRank","nResult","resultShape","sliceSize","strides","stride","validateUpdateShape","updates","sliceDim","batchDim","shapeError","_d","validateInput","calculateShapes","totalNd","safeSliceDim","numUpdates","outputSize","Serializable","className","cls","config","SerializationMap","classNameMap","getMap","fromConfig","registerClass","register","TEST_EPSILON_FLOAT16","expectArraysClose","actual","expected","epsilon","expectArraysPredicate","areClose","predicate","checkClassType","aType","bType","actualShape","expectedShape","actualFlat","expectedFlat","expectPromiseToFail","fail","expectArraysEqual","exp","abs","expectValuesInRange","low","high","expectArrayBuffersEqual","expect","toEqual","encodeStrings","version","enableProdMode","enableDebugMode","disableDeprecationWarnings","deprecationWarn","msg","disposeVariables","profile","container","ready","getBackend","removeBackend","findBackend","findBackendFactory","registerBackend","_createSuper","Derived","hasNativeReflectConstruct","Super","NewTarget","Optimizer","_Serializable","_extractIterations","_setWeights","_getWeights","_saveIterations","_super","returnCost","_this$computeGradient","computeGradients","gradArray","applyGradients","iterations_","iterations","scalar","weightValues","getClassName","defineProperty","hasInstance","minimize","AdadeltaOptimizer","_Optimizer","learningRate","rho","accumulatedGrads","accumulatedUpdates","variableGradients","originalName","accumulatedGrad","accumulatedUpdate","newAccumulatedGrad","mul","square","div","sqrt","newAccumulatedUpdate","newValue","incrementIterations","variables","saveIterations","variableCount","extractIterations","fill","AdagradOptimizer","initialAccumulatorValue","AdamOptimizer","beta1","beta2","accumulatedFirstMoment","accumulatedSecondMoment","accBeta1","accBeta2","varNames","oneMinusAccBeta1","sub","oneMinusAccBeta2","firstMoment","secondMoment","newFirstMoment","newSecondMoment","biasCorrectedFirstMoment","biasCorrectedSecondMoment","pow","AdamaxOptimizer","decay","accumulatedWeightedInfNorm","iteration","variableNames","lr","weightedInfNorm","ut0","ut1","newWeightedInfNorm","maximum","SGDOptimizer","setLearningRate","MomentumOptimizer","_SGDOptimizer","momentum","useNesterov","accumulations","accumulation","newAccumulation","RMSPropOptimizer","centered","accumulatedMeanSquares","accumulatedMoments","accumulatedMeanGrads","accumulatedMeanSquare","newAccumulatedMeanSquare","accumulatedMeanGrad","newAccumulatedMeanGrad","gradContribution","newAccumulatedMoments","_newAccumulatedMeanSquare","_newAccumulatedMoments","_newValue","addN","addN_","$tensors","firstTensor","avgPool3d","avgPool3d_","filterSize","pad","dimRoundingMode","dataFormat","x5D","reshapedTo5D","reshape","basicLSTMCell","basicLSTMCell_","forgetBias","lstmKernel","lstmBias","h","$forgetBias","$lstmKernel","$lstmBias","$data","$c","$h","combined","weighted","batchSize","sliceCols","newC","sigmoid","tanh","batchNorm2d","batchNorm2d_","mean","variance","varianceEpsilon","$scale","$offset","$mean","$variance","batchNorm3d","batchNorm3d_","batchNorm4d","batchNorm4d_","bincount","bincount_","$weights","concat1d","concat1d_","concat2d","concat2d_","axis","concat3d","concat3d_","concat4d","concat4d_","conv3d","conv3d_","dilations","$filter","conv3dTranspose","conv3dTranspose_","outputShape","denseBincount","denseBincount_","binaryOutput","diag","diag_","einsum","einsum_","equation","eye","eye_","numRows","numColumns","batchShape","buff","toTensor","tile","linspace","maxPool3d","maxPool3d_","maxPoolWithArgmax","maxPoolWithArgmax_","includeBatchInIndex","indexes","meshgrid","_ref$indexing","indexing","$y","w","moments","moments_","keepDims","axes","xMean","keepDimsShape","devSquared","multiRNNCell","multiRNNCell_","lstmCells","newStates","newH","multinomial","multinomial_","logits","numSamples","seed","normalized","$logits","numOutcomes","origRank","random","logits2D","outerProduct","outerProduct_","v1","v2","$v1","$v2","v12D","v22D","pad1d","pad1d_","paddings","constantValue","pad2d","pad2d_","pad3d","pad3d_","pad4d","pad4d_","rand","rand_","randFunction","MPRandGauss","stdDeviation","truncated","stdDev","nextVal","NaN","upper","lower","seedValue","seedrandom","alea","resultX","resultY","isValid","isValidTruncated","convertValue","RandGamma","alpha","beta","randu","randn","x2","v0","u","nextValue","UniformRandom","canReturnFloat","range","randomGamma","randomGamma_","rgamma","randomNormal","randomNormal_","randGauss","randomUniform","randomUniform_","minval","maxval","reverse1d","reverse1d_","reverse","reverse2d","reverse2d_","reverse3d","reverse3d_","reverse4d","reverse4d_","_setdiff1dAsync_","xVals","yVals","ySet","setdiff1dAsync","slice1d","slice1d_","begin","slice2d","slice2d_","slice3d","slice3d_","slice4d","slice4d_","tensor1d","tensor2d","tensor4d","tensor5d","tensor6d","truncatedNormal","truncatedNormal_","whereImpl","condShape","condVals","inBuffer","loc","indexToLoc","_whereAsync_","condition","$condition","whereAsync","_booleanMaskAsync_","mask","$tensor","$mask","axisFrom","maskDim","tensorShape","leadingSize","targetTensorShape","reshapedTensor","reshapedMask","positivePositions","squeeze","gather","booleanMaskAsync","movingAverage","movingAverage_","zeroDebias","$v","$decay","assertTypesMatch","one","oneMinusDecay","update","$step","scatterND","scatterND_","$indices","$updates","sparseIndices","sparseValues","defaultValues","numElems","numDims","numValues","sparseToDense","sparseToDense_","defaultValue","$sparseIndices","$sparseValues","$defaultValue","gatherND","gatherND_","dropout","dropout_","rate","noiseShape","$noiseShape","newDimension","getNoiseShape","keepProb","floor","enclosingPowerOfTwo","ceil","cosineWindow","windowLength","even","newValues","cosArg","PI","cos","_inTopKAsync_","targets","$targets","lastDim","predictionsVals","targetsVals","batch","precision","valAndInd","subarray","inTopKAsync","getFusedDyActivation","activation","getFusedBiasGradient","bias","dyActivation","reduceAxes","broadcast_util","sum","applyActivation","preluActivationWeights","leakyreluAlpha","relu","elu","relu6","prelu","shouldFuse","fusedConv2d_","_ref$dataFormat","_ref$dilations","_ref$activation","x4D","reshapedTo4D","conv_util","$bias","$preluActivationWeights","convInfo","_makeTypesMatch","makeTypesMatch","_saved","der","biasDer","customOp","customOpWithBias","depthwiseConv2d","fusedDepthwiseConv2d_","_makeTypesMatch2","xDer","filterDer","matMul","fusedMatMul_","_ref$transposeA","transposeA","_ref$transposeB","transposeB","$a","$b","innerShapeA","innerShapeB","outerShapeA","outerShapeB","outerDimsA","outerDimsB","batchDimA","batchDimB","a3D","b3D","_makeTypesMatch3","aDer","bDer","hammingWindow","hammingWindow_","hannWindow","hannWindow_","frame_","signal","frameLength","frameStep","padEnd","padValue","padLen","stft","stft_","fftLength","windowFn","framedSignal","windowedSignal","rfft","cropAndResize","cropAndResize_","boxes","boxInd","cropSize","extrapolationValue","$image","$boxes","$boxInd","numBoxes","flipLeftRight","flipLeftRight_","rotateWithOffset","rotateWithOffset_","radians","fillValue","center","nonMaxSuppSanityCheck","scores","maxOutputSize","iouThreshold","scoreThreshold","softNmsSigma","NEGATIVE_INFINITY","nonMaxSuppression","nonMaxSuppression_","$scores","binaryInsert","element","comparator","left","right","middle","compareResult","binarySearch_","defaultComparator","binarySearch","insertionPoint","splice","nonMaxSuppressionV3Impl","nonMaxSuppressionImpl_","nonMaxSuppressionV4Impl","padToMaxOutputSize","nonMaxSuppressionV5Impl","returnScoresTensor","returnValidOutputs","candidates","score","boxIndex","suppressBeginIndex","ascendingComparator","selectedIndices","selectedScores","candidate","originalScore","ignoreCandidate","iou","intersectionOverUnion","suppressWeight","validOutputs","elemsToPad","iCoord","jCoord","yminI","xminI","ymaxI","xmaxI","yminJ","xminJ","ymaxJ","xmaxJ","areaI","areaJ","intersectionYmin","intersectionXmin","intersectionYmax","intersectionXmax","intersectionArea","weight","c1","c2","_nonMaxSuppressionAsync_","boxesAndScores","boxesVals","scoresVals","_nonMaxSuppressionV3I","nonMaxSuppressionAsync","nonMaxSuppressionWithScore","nonMaxSuppressionWithScore_","_nonMaxSuppressionWithScoreAsync_","_nonMaxSuppressionV5I","nonMaxSuppressionWithScoreAsync","nonMaxSuppressionPadded","nonMaxSuppressionPadded_","$maxOutputSize","$iouThreshold","$scoreThreshold","_nonMaxSuppressionPaddedAsync_","_yield$Promise$all","_yield$Promise$all2","_nonMaxSuppressionV4I","nonMaxSuppressionPaddedAsync","transform","transform_","transforms","interpolation","fillMode","$transforms","bandPart","bandPart_","numLower","numUpper","_$a$shape$slice","_$a$shape$slice2","M","N","ij","inBand","zero","zeros","unstack","mat","where","gramSchmidt","gramSchmidt_","inputIsTensor2D","dim","ys","xs1d","proj","norm","qr2d","fullMatrices","q","r","one2D","iters","rTemp","wTemp","qTemp","_ENGINE$tidy","rjEnd1","normX","rjj","greater","u1","wPre","tau","neg","rjEndAll","tauTimesW","wT","rTimesTau","tawTimesWT","qAllJEnd","qTimesTau","_ENGINE$tidy2","Reduction","qr","qr_","outerDimsProd","x2ds","q2ds","r2ds","x2d","_qr2d","_qr2d2","q2d","r2d","computeWeightedLoss","computeWeightedLoss_","losses","reduction","SUM_BY_NONZERO_WEIGHTS","$losses","weightedLoss","NONE","SUM","MEAN","broadcastFactor","broadcastedWeights","numNonZeros","absoluteDifference","absoluteDifference_","cosineDistance","cosineDistance_","hingeLoss","hingeLoss_","huberLoss","huberLoss_","delta","deltaScalar","quadratic","minimum","linear","logLoss","logLoss_","epsilonScalar","l1","l2","meanSquaredError","meanSquaredError_","sigmoidCrossEntropyWithLogits_","maxOutput","outputXTarget","sigmoidOutput","log1p","sigmoidCrossEntropy","sigmoidCrossEntropy_","multiClassLabels","labelSmoothing","$multiClassLabels","labelSmoothingScalar","half","softmaxCrossEntropyWithLogits_","lse","logResult","costVector","dyShape","softmaxCrossEntropy","softmaxCrossEntropy_","onehotLabels","$onehotLabels","spectral","fft","ifft","irfft","frame","resizeNearestNeighbor","resizeBilinear","linalg","OptimizerConstructors","_momentum","train","sgd","adadelta","adagrad","rmsprop","adamax","adam","delayCallback","requestAnimationFrame","setImmediate","nextFrame","assertParamsConsistent","shapes","firstShape","computeOutShape","PARALLELIZE_THRESHOLD","computeOptimalWindowSize","inSize","getImageCenter","imageHeight","imageWidth","getReshaped","blockShape","prod","batchToSpace","reshaped","spatialLength","getPermuted","reshapedRank","blockShapeRank","permuted","permutedBeforeBatch","permutedAfterBatch","getReshapedPermuted","reshapedPermuted","getSliceBeginCoords","crops","sliceBeginCoords","getSliceSize","uncroppedShape","ERF_P","ERF_A1","ERF_A2","ERF_A3","ERF_A4","ERF_A5","_console","_console2","mergeRealAndImagArrays","imag","splitRealAndImagArrays","complexWithEvenIndex","complexWithOddIndex","getComplexWithIndex","assignToTypedArray","exponents","inverse","sin","exponent","ARROW","ARROW_REGEX","decodeEinsumEquation","numArrows","_equation$split","_equation$split2","inputString","outputString","inputTerms","numInputs","allDims","dimName","inputTerm","idDims","summedDims","getEinsumPermutation","nDims","permutationIndices","expandDims","checkEinsumDimSizes","dimSizes","_loop3","getEinsumComputePath","nSteps","steps","computedTermIndices","findTermsWithDim","termIndex","isIdentityPermutation","perm","termIndices","prepareSplitSize","numOrSizeSplits","splitSizes","numOfNegs","count","negIndex","total","segOpComputeOptimalWindowSize","numSegments","aShape","collectGatherOpShapeInfo","batchDims","xRank","dimSize","outerSize","fromUint8ToStringArray","decodeString","fromStringArrayToUint8","strings","Abs","Acos","Acosh","Add","AddN","All","Any","ArgMax","ArgMin","Asin","Asinh","Atan","Atanh","Atan2","AvgPool","AvgPoolGrad","AvgPool3D","AvgPool3DGrad","BatchMatMul","BatchToSpaceND","Bincount","BroadcastTo","Cast","Ceil","ClipByValue","Complex","ComplexAbs","Concat","Conv2D","Conv2DBackpropFilter","Conv2DBackpropInput","Conv3D","Conv3DBackpropFilterV2","Conv3DBackpropInputV2","Cos","Cosh","Cumsum","CropAndResize","DenseBincount","DepthToSpace","DepthwiseConv2dNative","DepthwiseConv2dNativeBackpropFilter","DepthwiseConv2dNativeBackpropInput","Diag","Dilation2D","Dilation2DBackpropInput","Dilation2DBackpropFilter","RealDiv","Einsum","Elu","EluGrad","Erf","Equal","Exp","ExpandDims","Expm1","FFT","Fill","FlipLeftRight","Floor","FloorDiv","FusedBatchNorm","GatherV2","GatherNd","Greater","GreaterEqual","Identity","IFFT","Imag","IsFinite","IsInf","IsNan","LeakyRelu","Less","LessEqual","LinSpace","Log","Log1p","LogicalAnd","LogicalNot","LogicalOr","LogSoftmax","LRN","LRNGrad","Max","Maximum","MaxPool","MaxPoolGrad","MaxPool3D","MaxPool3DGrad","MaxPoolWithArgmax","Mean","Min","Minimum","MirrorPad","Mod","Multinomial","Multiply","Neg","NotEqual","NonMaxSuppressionV3","NonMaxSuppressionV4","NonMaxSuppressionV5","OnesLike","OneHot","Pack","PadV2","Pool","Pow","Prelu","Prod","Range","Real","Reciprocal","Relu","Reshape","ResizeNearestNeighbor","ResizeNearestNeighborGrad","ResizeBilinear","ResizeBilinearGrad","Relu6","Reverse","Round","Rsqrt","ScatterNd","Select","Selu","Slice","Sin","Sinh","Sign","Sigmoid","Softplus","Sqrt","Sum","SpaceToBatchND","SplitV","Softmax","SquaredDifference","Square","Sub","SparseToDense","StridedSlice","Tan","Tanh","Tile","TopK","Transform","Transpose","Unique","Unpack","UnsortedSegmentSum","ZerosLike","Step","FromPixels","RotateWithOffset","_FusedMatMul","FusedConv2D","FusedDepthwiseConv2D","kernelRegistry","gradRegistry","getKernel","makeKey","getGradient","getKernelsForBackend","entries","_it$next","_value","_key$split","registerKernel","registerGradient","unregisterKernel","unregisterGradient","copyRegisteredKernels","registeredBackendName","newBackendName","kernelConfig","abs_","acos","acos_","acosh","acosh_","add_","all_","any","any_","argMax","argMax_","argMin","argMin_","asin","asin_","asinh","asinh_","atan","atan_","atan2","atan2_","atanh","atanh_","avgPool","avgPool_","axesAreInnerMostDims","combineLocations","outputLoc","reduceLoc","outIdx","reduceIdx","computeOutAndReduceShapes","expandShapeToKeepDim","assertAxesAreInnerMostDims","getAxesPermutation","getUndoAxesPermutation","getInnerMostAxes","numAxes","batchToSpaceND","batchToSpaceND_","batchNorm","batchNorm_","xAs4D","broadcastTo","broadcastTo_","xShape","newShape","unshift","reps","getBroadcastDims","inShape","inRank","dims","getReductionAxes","inDim","outAxis","outDim","assertAndGetBroadcastShape","shapeA","shapeB","errMsg","cast_","ceil_","clipByValue","clipByValue_","clipValueMin","clipValueMax","clone_","complex_","$real","$imag","concat_","attr","conv1d","conv1d_","dilation","x3D","reshapedTo3D","filter4D","input4D","conv2dDataFormat","conv2d","conv2d_","inDepth","conv2DBackpropFilter","conv2DBackpropFilter_","filterShape","dy4D","outDepth","conv2DBackpropInput","conv2DBackpropInput_","xShape4D","conv2dTranspose","conv2dTranspose_","conv3DBackpropInput","conv3DBackpropInput_","xShape5D","dy5D","computeDilation2DInfo","inputChannels","$filterShape","$dataFormat","convertConv2DDataFormat","computeConv2DInfo","computePool2DInfo","roundingMode","_parseTupleParam","parseTupleParam","_parseTupleParam2","filterHeight","filterWidth","computePool3DInfo","_parse3TupleParam","parse3TupleParam","_parse3TupleParam2","filterDepth","computeConv3DInfo","depthwise","inHeight","inWidth","inChannels","_inShape","_inShape2","_filterShape","filterChannels","_parseTupleParam3","_parseTupleParam4","strideHeight","strideWidth","_parseTupleParam5","_parseTupleParam6","dilationHeight","dilationWidth","effectiveFilterHeight","getEffectiveFilterSize","effectiveFilterWidth","_getPadAndOutInfo","getPadAndOutInfo","padInfo","outHeight","outWidth","outChannels","_inShape3","_inShape4","_filterShape2","_parse3TupleParam3","_parse3TupleParam4","strideDepth","_parse3TupleParam5","_parse3TupleParam6","dilationDepth","effectiveFilterDepth","_get3DPadAndOutInfo","get3DPadAndOutInfo","computeDefaultPad","fieldSize","effectiveFieldSize","param","top","bottom","zeroPad","inputRows","inputCols","computeOutputShape2D","padAlongHeight","padAlongWidth","_top","_bottom","_left","_right","front","back","inputDepth","computeOutputShape4D","padAlongDepth","trunc","tupleValuesAreOne","_parseTupleParam7","_parseTupleParam8","dimA","dimB","dimC","eitherStridesOrDilationsAreOne","cos_","cosh","cosh_","cumsum","cumsum_","exclusive","depthToSpace","depthToSpace_","blockSize","inputHeight","inputWidth","depthwiseConv2d_","depthwiseConv2dNativeBackpropFilter","depthwiseConv2dNativeBackpropFilter_","depthwiseConv2dNativeBackpropInput","depthwiseConv2dNativeBackpropInput_","dilation2d","dilation2d_","div_","divNoNan","divNoNan_","divResult","bEqualsZero","dot","dot_","$t1","$t2","t1Inner","t2Inner","t12D","t22D","t1t2","_t12D","_t22D","_t1t","_t22D2","_t1t2","_t22D3","elu_","equal","equal_","erf","erf_","exp_","expandDims_","expm1","expm1_","floor_","floorDiv","floorDiv_","gather_","greater_","greaterEqual","greaterEqual_","imag_","resizeBilinear_","images","alignCorners","halfPixelCenters","$images","batchImages","resizeNearestNeighbor_","isFinite_","isInf","isInf_","isNaN_","leakyRelu","leakyRelu_","less","less_","lessEqual","lessEqual_","localResponseNormalization","localResponseNormalization_","depthRadius","log_","log1p_","logSigmoid","logSigmoid_","logSoftmax","logSoftmax_","xMax","shifted","softmax","logSumExp","logSumExp_","logicalAnd","logicalAnd_","logicalNot","logicalNot_","logicalOr","logicalOr_","logicalXor","logicalXor_","matMul_","max_","reductionIndices","maxPool","maxPool_","maximum_","mean_","min_","minimum_","mirrorPad","mirrorPad_","mode","shapeOffset","mod","mod_","mul_","neg_","normImpl","Infinity","norm_","ord","notEqual","notEqual_","oneHot","oneHot_","onValue","offValue","onesLike","onesLike_","OP_SCOPE_SUFFIX","opName","f2","pad_","pool","pool_","windowShape","poolingType","basePadding","padExtraShape","padExtraStart","padExtraEnd","withSpaceToBatchBasePaddings","isDilationOne","_requiredSpaceToBatch","padStart","origPadEnd","fullInputShape","padEndExtra","requiredSpaceToBatchPaddings","_requiredSpaceToBatch2","adjustedPadding","adjustedCrops","convertedPad","convertedX","pow_","$base","$exp","prelu_","prod_","real_","reciprocal","reciprocal_","relu_","relu6_","reshape_","reverse_","round_","rsqrt","rsqrt_","selu","selu_","SELU_SCALEALPHA","SELU_SCALE","separableConv2d","separableConv2d_","depthwiseFilter","pointwiseFilter","$depthwiseFilter","$pointwiseFilter","channelMultiplier","pointwiseStride","sigmoid_","sign","sign_","sin_","sinh","sinh_","slice_","assertParamsValid","maskToAxes","stridesWithElidedDims","ellipsisInsertionIndex","numElidedAxes","newStrides","unnormalizeAxis","normalizedAxis","getElidedAxes","elidedAxes","getNormalizedAxes","ellipsisAxes","numInterpolatedAxes","beginMask","endMask","ellipsisMask","normalizedBegin","normalizedEnd","normalizedStrides","fullIndex","startIndicesWithElidedDims","stopIndicesWithElidedDims","startForAxis","stopForAxis","stridesForAxis","originalBegin","newIndices","originalAxis","originalValue","originalEnd","MAX_SAFE_INTEGER","axisSize","startIndices","MIN_SAFE_INTEGER","stopIndices","isSliceContinous","firstNonOneAxis","computeFlatOffset","flatOffset","parseSliceParams","begin_","size_","sliceInfo","newAxisMask","shrinkAxisMask","$begin","$end","$strides","expandAxes","_getNormalizedAxes","shrinkAxes","nonStrided","softmax_","softplus","softplus_","spaceToBatchND","spaceToBatchND_","fft_","ifft_","irfft_","ret","innerDimensionSize","complexInput","realInput","imagInput","realConjugate","imagConjugate","_complexInput","_batch","rfft_","adjustedInput","zerosShape","zerosInput","realValues","imagValues","realComplexConjugate","imagComplexConjugate","split_","sqrt_","square_","squaredDifference","squaredDifference_","squeeze_","stack_","step_","stridedSlice","stridedSlice_","sub_","sum_","tan","tan_","tanh_","providedSize","inferredSize","inferred","flatDimsDontMatch","toTypedArray","tile_","topk","topk_","sorted","_ENGINE$runKernel","_ENGINE$runKernel2","transpose_","unique","unique_","unsortedSegmentSum","unsortedSegmentSum_","segmentIds","$segmentIds","unstack_","where_","broadcastShape","zerosLike","zerosLike_","throwIfDisposed","asScalar","asType","as1D","as2D","rows","columns","as3D","as4D","depth2","as5D","depth3","flatten","padding","dilationRate","reshapeAs","newShape2D","halfFloatCenters","tensorsToBeStacked","toBool","toFloat","toInt","tensorToString","padPerCol","numCols","valuesOrTuples","createComplexTuples","row","valToString","computeMaxSizePerColumn","valsLines","subTensorToString","lines","valStr","parseFloat","toFixed","boolNumToString","isLast","storagePerElement","complexTuple","firstValsSize","firstVals","lastVals","displayVals","subshape","substrides","_start","_end","_start2","_end2","sep","newLineSep","complexTuples","TensorBuffer","locs","locToIndex","_len2","_key2","_locs","trackerFn","setTensorTracker","setOpHandler","setDeprecationWarningFn","Tensor","isDisposedInternal","rankType","_bytes","_data","_array","_buffer","_a","isDisposed","makeVariable","getGlobalTensorClass","Variable","_Tensor","tensorId","isTensorInList","tensorList","list","walkTensorContainer","seen","obj","iterable","inferShape","firstElem","deepAssertShapeConsistency","subShape","assertDtype","expectedDtype","actualDType","argName","functionName","convertToTensor","parseAsDtype","inferredDtype","skipTypedArray","convertToTensorArray","Rank","UpcastInt32AndMap","UpcastBoolAndMap","UpcastFloat32AndMap","UpcastComplex64AndMap","upcastTypeMap","upcastType","typeA","typeB","sumOutType","createScalarValue","noConversionNeeded","bool","shuffle","array","counter","shuffleCombo","array2","temp2","clamp","nearestLargerEven","randUniform","distSquared","diff","assert","expr","assertShapesMatch","errorMessagePrefix","arraysEqual","assertNonNull","isTypedArray","sizeFromShape","isScalarShape","n1","n2","isInt","e2x","sizeToSquarishShape","createShuffledIndices","shuffledIndices","rightPad","repeat","repeatedTry","checkFn","delayFn","maxCounter","tryCount","tryFn","nextBackoff","inferFromImplicitShape","shapeProd","implicitIdx","parseAxisParam","ax","squeezeShape","keptDims","isEmptyArray","getTypedArrayFromDType","getArrayFromDType","checkConversionForErrors","isValidDtype","hasEncodingLoss","oldType","newType","bytesPerElement","bytesFromStringArray","isString","isBoolean","isNumber","inferDtype","isFunction","nearestDivisor","computeStrides","createNestedArray","isComplex","rest","acc","toNestedArray","makeOnesTypedArray","makeZerosTypedArray","makeZerosNestedTypedArray","curr","assertNonNegativeIntegerDimensions","isPromise","xor128","xorwow","xorshift7","xor4096","tychei","sr","module","exports","define","Alea","me","mash","s0","s1","s2","copy","impl","opts","xg","prng","int32","double","quick","XorGen","strseed","z","X","limit","math","nodecrypto","startdenom","significance","overflow","options","callback","shortseed","mixkey","entropy","tostring","randomBytes","crypto","msCrypto","getRandomValues","browser","plugins","screen","autoseed","arc4","ARC4","S","pass","is_math_call","keylen","prop","typ","smear","stringseed","isObject","toIndexedObject","toLength","toAbsoluteIndex","createMethod","IS_INCLUDES","$this","el","fromIndex","O","includes","ownKeys","getOwnPropertyDescriptorModule","definePropertyModule","source","DESCRIPTORS","createPropertyDescriptor","bitmap","enumerable","fails","EXISTS","createNonEnumerableProperty","redefine","setGlobal","copyConstructorProperties","isForced","targetProperty","sourceProperty","descriptor","TARGET","GLOBAL","STATIC","stat","noTargetGet","forced","exec","aFunction","namespace","check","globalThis","classof","propertyIsEnumerable","store","functionToString","inspectSource","NATIVE_WEAK_MAP","objectHas","shared","sharedKey","hiddenKeys","wmget","wmhas","wmset","facade","STATE","enforce","getterFor","TYPE","replacement","feature","detection","normalize","POLYFILL","NATIVE","string","IE8_DOM_DEFINE","anObject","toPrimitive","$defineProperty","P","Attributes","propertyIsEnumerableModule","$getOwnPropertyDescriptor","internalObjectKeys","getOwnPropertyNames","getOwnPropertySymbols","$propertyIsEnumerable","NASHORN_BUG","1","V","getBuiltIn","getOwnPropertyNamesModule","getOwnPropertySymbolsModule","InternalStateModule","getInternalState","enforceInternalState","TEMPLATE","unsafe","simple","uid","SHARED","IS_PURE","copyright","toInteger","integer","IndexedObject","requireObjectCoercible","argument","PREFERRED_STRING","postfix","$","$hypot","hypot","value1","value2","aLen","larg"],"mappings":"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","file":"804a75ff1e5afc3aba814d4ba261ef32caadb6d1-4a9b2d92d77c7c321f87.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import _typeof from \"@babel/runtime/helpers/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","import _classCallCheck from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var EPSILON_FLOAT32 = 1e-7;\nexport var EPSILON_FLOAT16 = 1e-4;\n/** Convenient class for storing tensor-related data. */\n\nexport var DataStorage = /*#__PURE__*/function () {\n  function DataStorage(backend, dataMover) {\n    _classCallCheck(this, DataStorage);\n\n    this.backend = backend;\n    this.dataMover = dataMover;\n    this.data = new WeakMap();\n    this.dataIdsCount = 0;\n  }\n\n  _createClass(DataStorage, [{\n    key: \"get\",\n    value: function get(dataId) {\n      if (!this.data.has(dataId)) {\n        this.dataMover.moveData(this.backend, dataId);\n      }\n\n      return this.data.get(dataId);\n    }\n  }, {\n    key: \"set\",\n    value: function set(dataId, value) {\n      this.dataIdsCount++;\n      this.data.set(dataId, value);\n    }\n  }, {\n    key: \"has\",\n    value: function has(dataId) {\n      return this.data.has(dataId);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(dataId) {\n      this.dataIdsCount--;\n      return this.data.delete(dataId);\n    }\n  }, {\n    key: \"numDataIds\",\n    value: function numDataIds() {\n      return this.dataIdsCount;\n    }\n  }]);\n\n  return DataStorage;\n}();\n/**\n * The interface that defines the kernels that should be implemented when\n * adding a new backend. New backends don't need to implement every one of the\n * methods, this can be done gradually (throw an error for unimplemented\n * methods).\n */\n\nexport var KernelBackend = /*#__PURE__*/function () {\n  function KernelBackend() {\n    _classCallCheck(this, KernelBackend);\n  }\n\n  _createClass(KernelBackend, [{\n    key: \"refCount\",\n    value: function refCount(dataId) {\n      return notYetImplemented('refCount');\n    }\n  }, {\n    key: \"incRef\",\n    value: function incRef(dataId) {\n      return notYetImplemented('incRef');\n    }\n  }, {\n    key: \"timerAvailable\",\n    value: function timerAvailable() {\n      return true;\n    }\n  }, {\n    key: \"time\",\n    value: function time(f) {\n      return notYetImplemented('time');\n    }\n  }, {\n    key: \"read\",\n    value: function read(dataId) {\n      return notYetImplemented('read');\n    }\n  }, {\n    key: \"readSync\",\n    value: function readSync(dataId) {\n      return notYetImplemented('readSync');\n    }\n  }, {\n    key: \"numDataIds\",\n    value: function numDataIds() {\n      return notYetImplemented('numDataIds');\n    }\n  }, {\n    key: \"disposeData\",\n    value: function disposeData(dataId, force) {\n      return notYetImplemented('disposeData');\n    }\n  }, {\n    key: \"write\",\n    value: function write(values, shape, dtype) {\n      return notYetImplemented('write');\n    }\n  }, {\n    key: \"move\",\n    value: function move(dataId, values, shape, dtype, refCount) {\n      return notYetImplemented('move');\n    }\n  }, {\n    key: \"memory\",\n    value: function memory() {\n      return notYetImplemented('memory');\n    }\n    /** Returns the highest precision for floats in bits (e.g. 16 or 32) */\n\n  }, {\n    key: \"floatPrecision\",\n    value: function floatPrecision() {\n      return notYetImplemented('floatPrecision');\n    }\n    /** Returns the smallest representable number.  */\n\n  }, {\n    key: \"epsilon\",\n    value: function epsilon() {\n      return this.floatPrecision() === 32 ? EPSILON_FLOAT32 : EPSILON_FLOAT16;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      return notYetImplemented('dispose');\n    }\n  }]);\n\n  return KernelBackend;\n}();\n\nfunction notYetImplemented(kernelName) {\n  throw new Error(\"'\".concat(kernelName, \"' not yet implemented or not found in the registry. \") + \"This kernel may not be supported by the tfjs backend you have chosen\");\n}","import _classCallCheck from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env } from './environment';\nimport * as util from './util';\nexport var Profiler = /*#__PURE__*/function () {\n  function Profiler(backendTimer, logger) {\n    _classCallCheck(this, Profiler);\n\n    this.backendTimer = backendTimer;\n    this.logger = logger;\n\n    if (logger == null) {\n      this.logger = new Logger();\n    }\n  }\n\n  _createClass(Profiler, [{\n    key: \"profileKernel\",\n    value: function profileKernel(kernelName, inputs, f) {\n      var outputs;\n\n      var holdResultWrapperFn = function holdResultWrapperFn() {\n        outputs = f();\n      };\n\n      var timer;\n      var start = util.now();\n\n      if (this.backendTimer.timerAvailable()) {\n        timer = this.backendTimer.time(holdResultWrapperFn);\n      } else {\n        holdResultWrapperFn();\n\n        var _iterator = _createForOfIteratorHelper(outputs),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var output = _step.value;\n            output.dataSync();\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        timer = Promise.resolve({\n          kernelMs: util.now() - start\n        });\n      }\n\n      if (env().getBool('CHECK_COMPUTATION_FOR_ERRORS')) {\n        var _loop = function _loop(i) {\n          var output = outputs[i]; // Dangling promise here because we don't want to propagate up\n          // asynchronicity.\n\n          output.data().then(function (tensorVals) {\n            checkComputationForErrors(tensorVals, output.dtype, kernelName);\n          });\n        };\n\n        for (var i = 0; i < outputs.length; i++) {\n          _loop(i);\n        }\n      }\n\n      var kernelProfile = {\n        kernelName: kernelName,\n        outputs: outputs,\n        inputs: inputs,\n        timeMs: timer.then(function (timing) {\n          return timing.kernelMs;\n        }),\n        extraInfo: timer.then(function (timing) {\n          return timing.getExtraProfileInfo != null ? timing.getExtraProfileInfo() : '';\n        })\n      };\n      return kernelProfile;\n    }\n  }, {\n    key: \"logKernelProfile\",\n    value: function logKernelProfile(kernelProfile) {\n      var _this = this;\n\n      var kernelName = kernelProfile.kernelName,\n          outputs = kernelProfile.outputs,\n          timeMs = kernelProfile.timeMs,\n          inputs = kernelProfile.inputs,\n          extraInfo = kernelProfile.extraInfo;\n      outputs.forEach(function (result) {\n        Promise.all([result.data(), timeMs, extraInfo]).then(function (valueContainer) {\n          _this.logger.logKernelProfile(kernelName, result, valueContainer[0], valueContainer[1], inputs, valueContainer[2]);\n        });\n      });\n    }\n  }]);\n\n  return Profiler;\n}();\nexport function checkComputationForErrors(vals, dtype, kernelName) {\n  if (dtype !== 'float32') {\n    // Only floating point computations will generate NaN values\n    return false;\n  }\n\n  for (var i = 0; i < vals.length; i++) {\n    var num = vals[i];\n\n    if (isNaN(num) || !isFinite(num)) {\n      // Throwing custom exception so behavior is testable.\n      console.warn(\"Found \".concat(num, \" in the result of '\").concat(kernelName, \"'\"));\n      return true;\n    }\n  }\n\n  return false;\n}\nexport var Logger = /*#__PURE__*/function () {\n  function Logger() {\n    _classCallCheck(this, Logger);\n  }\n\n  _createClass(Logger, [{\n    key: \"logKernelProfile\",\n    value: function logKernelProfile(name, result, vals, timeMs, inputs, extraInfo) {\n      var time = typeof timeMs === 'number' ? util.rightPad(\"\".concat(timeMs, \"ms\"), 9) : timeMs['error'];\n      var paddedName = util.rightPad(name, 25);\n      var rank = result.rank;\n      var size = result.size;\n      var shape = util.rightPad(result.shape.toString(), 14);\n      var inputShapesDescription = '';\n\n      for (var _name in inputs) {\n        var input = inputs[_name];\n\n        if (input != null) {\n          // The input might be a non-tensor (e.g HTMLImageElement), in which case\n          // we claim the output shape as input shape.\n          var inputShape = input.shape || result.shape;\n          var inputRank = inputShape.length;\n          inputShapesDescription += \"\".concat(_name, \": \").concat(inputRank, \"D \").concat(inputRank > 0 ? inputShape : '', \" \");\n        }\n      }\n\n      console.log(\"%c\".concat(paddedName, \"\\t%c\").concat(time, \"\\t%c\").concat(rank, \"D \").concat(shape, \"\\t%c\").concat(size, \"\\t%c\").concat(inputShapesDescription, \"\\t%c\").concat(extraInfo), 'font-weight:bold', 'color:red', 'color:blue', 'color: orange', 'color: green', 'color: steelblue');\n    }\n  }]);\n\n  return Logger;\n}();","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport * as util from './util';\n/**\n * Computes a list of TapeNodes that connect x to y, filtering everything else\n * out and preserving the order of the original tape elements.\n *\n * @param tape The tape elements to filter.\n * @param xs The input Tensors.\n * @param y The output Tensor.\n */\n\nexport function getFilteredNodesXToY(tape, xs, y) {\n  // Forward pass to compute all the nodes and Tensors that are transitively a\n  // function of x.\n  var tensorsFromX = {};\n  var nodesFromX = {};\n\n  for (var i = 0; i < xs.length; i++) {\n    tensorsFromX[xs[i].id] = true;\n  }\n\n  for (var _i = 0; _i < tape.length; _i++) {\n    var node = tape[_i];\n    var nodeInputs = node.inputs;\n\n    for (var inputName in nodeInputs) {\n      var input = nodeInputs[inputName];\n      var anyInputFromX = false;\n\n      for (var j = 0; j < xs.length; j++) {\n        if (tensorsFromX[input.id]) {\n          node.outputs.forEach(function (output) {\n            return tensorsFromX[output.id] = true;\n          });\n          anyInputFromX = true;\n          nodesFromX[node.id] = true;\n          break;\n        }\n      }\n\n      if (anyInputFromX) {\n        break;\n      }\n    }\n  } // Backward pass to find all of the nodes and Tensors that lead to y.\n\n\n  var tensorsLeadToY = {};\n  tensorsLeadToY[y.id] = true;\n  var nodesToY = {};\n\n  for (var _i2 = tape.length - 1; _i2 >= 0; _i2--) {\n    var _node = tape[_i2];\n    var _nodeInputs = _node.inputs; // If any of the outputs lead to y, mark all of the inputs as leading to y.\n\n    for (var _j = 0; _j < _node.outputs.length; _j++) {\n      if (tensorsLeadToY[_node.outputs[_j].id]) {\n        for (var _inputName in _nodeInputs) {\n          tensorsLeadToY[_nodeInputs[_inputName].id] = true;\n          nodesToY[_node.id] = true;\n        }\n\n        break;\n      }\n    }\n  } // Return the paths that come from x and lead to y.\n\n\n  var filteredTape = [];\n\n  for (var _i3 = 0; _i3 < tape.length; _i3++) {\n    var _node2 = tape[_i3];\n\n    if (nodesFromX[_node2.id] && nodesToY[_node2.id]) {\n      // Prune the inputs from the node that aren't a function of x.\n      var prunedInputs = {};\n\n      for (var _inputName2 in _node2.inputs) {\n        var nodeInput = _node2.inputs[_inputName2];\n\n        if (tensorsFromX[nodeInput.id]) {\n          prunedInputs[_inputName2] = nodeInput;\n        }\n      } // Copy the node and overwrite inputsAndArgs to the pruned version.\n\n\n      var prunedNode = Object.assign({}, _node2);\n      prunedNode.inputs = prunedInputs;\n      prunedNode.outputs = _node2.outputs;\n      filteredTape.push(prunedNode);\n    }\n  }\n\n  return filteredTape;\n}\n/**\n * Backpropagate gradients through the filtered TapeNodes.\n *\n * @param tensorAccumulatedGradientMap A map of Tensor to its gradient. This map\n * is mutated by this method.\n * @param filteredTape The filtered TapeNodes to backprop through.\n */\n\nexport function backpropagateGradients(tensorAccumulatedGradientMap, filteredTape, tidy, add) {\n  var _loop = function _loop(i) {\n    var node = filteredTape[i];\n    var dys = [];\n    node.outputs.forEach(function (o) {\n      var gradTensor = tensorAccumulatedGradientMap[o.id];\n\n      if (gradTensor != null) {\n        dys.push(gradTensor);\n      } else {\n        // This particular output is not in the back-propagation subgraph, so it\n        // does not affect the final output, thus we put null for its dy.\n        dys.push(null);\n      }\n    });\n\n    if (node.gradient == null) {\n      throw new Error(\"Cannot compute gradient: gradient function not found \" + \"for \".concat(node.kernelName, \".\"));\n    } // Backprop dy through this node and accumulate gradients over the inputs.\n\n\n    var inputGradients = node.gradient(dys);\n\n    var _loop2 = function _loop2(inputName) {\n      if (!(inputName in inputGradients)) {\n        throw new Error(\"Cannot backprop through input \".concat(inputName, \". \") + \"Available gradients found: \".concat(Object.keys(inputGradients), \".\"));\n      } // Call the gradient function.\n\n\n      var dx = tidy(function () {\n        return inputGradients[inputName]();\n      });\n\n      if (dx.dtype !== 'float32') {\n        throw new Error(\"Error in gradient for op \".concat(node.kernelName, \". The gradient of input \") + \"\".concat(inputName, \" must have 'float32' dtype, but has '\").concat(dx.dtype, \"'\"));\n      }\n\n      var x = node.inputs[inputName];\n\n      if (!util.arraysEqual(dx.shape, x.shape)) {\n        throw new Error(\"Error in gradient for op \".concat(node.kernelName, \". The gradient of input \") + \"'\".concat(inputName, \"' has shape '\").concat(dx.shape, \"', which does not match \") + \"the shape of the input '\".concat(x.shape, \"'\"));\n      }\n\n      if (tensorAccumulatedGradientMap[x.id] == null) {\n        tensorAccumulatedGradientMap[x.id] = dx;\n      } else {\n        var curGradient = tensorAccumulatedGradientMap[x.id];\n        tensorAccumulatedGradientMap[x.id] = add(curGradient, dx);\n        curGradient.dispose();\n      }\n    };\n\n    for (var inputName in node.inputs) {\n      _loop2(inputName);\n    }\n  };\n\n  // Walk the tape backward and keep a map of Tensor to its gradient.\n  for (var i = filteredTape.length - 1; i >= 0; i--) {\n    _loop(i);\n  }\n}","import _toConsumableArray from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport _regeneratorRuntime from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/regenerator\";\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { KernelBackend } from './backends/backend';\nimport { Environment, setEnvironmentGlobal } from './environment';\nimport { getGlobalNamespace } from './global_util';\nimport { Add, Cast, Identity } from './kernel_names';\nimport { getGradient, getKernel, getKernelsForBackend } from './kernel_registry';\nimport { Profiler } from './profiler';\nimport { backpropagateGradients, getFilteredNodesXToY } from './tape';\nimport { setTensorTracker, Tensor, Variable } from './tensor';\nimport { getTensorsInContainer } from './tensor_util';\nimport * as util from './util';\nimport { bytesFromStringArray, makeOnesTypedArray, now, sizeFromShape } from './util';\n\nfunction isRegisteredKernelInvocation(kernelInvocation) {\n  return kernelInvocation.kernelName != null;\n}\n\nvar EngineState = /*#__PURE__*/function () {\n  function EngineState() {\n    _classCallCheck(this, EngineState);\n\n    // Public since optimizers will use it.\n    this.registeredVariables = {};\n    this.nextTapeNodeId = 0;\n    this.numBytes = 0;\n    this.numTensors = 0;\n    this.numStringTensors = 0;\n    this.numDataBuffers = 0; // Number of nested tf.grad() statements when computing higher-order\n    // gradients. E.g. `1` for first-order gradients and `2` for second-order\n    // gradients. Used to track if the tape should be removed after a backprop.\n\n    this.gradientDepth = 0; // Number of nested kernel calls. When kernel depth is greater than 1, we turn\n    // off the tape.\n\n    this.kernelDepth = 0;\n    this.scopeStack = [];\n    /**\n     * Keeps track of the number of data moves during a kernel execution. We\n     * maintain a stack since kernels can call other kernels, recursively.\n     */\n\n    this.numDataMovesStack = [];\n    this.nextScopeId = 0;\n    this.tensorInfo = new WeakMap();\n    this.profiling = false;\n    this.activeProfile = {\n      newBytes: 0,\n      newTensors: 0,\n      peakBytes: 0,\n      kernels: [],\n      result: null,\n\n      get kernelNames() {\n        return Array.from(new Set(this.kernels.map(function (k) {\n          return k.name;\n        })));\n      }\n\n    };\n  }\n\n  _createClass(EngineState, [{\n    key: \"dispose\",\n    value: function dispose() {\n      for (var variableName in this.registeredVariables) {\n        this.registeredVariables[variableName].dispose();\n      }\n    }\n  }]);\n\n  return EngineState;\n}();\n\nexport var Engine = /*#__PURE__*/function () {\n  function Engine(ENV) {\n    _classCallCheck(this, Engine);\n\n    this.ENV = ENV;\n    this.registry = {};\n    this.registryFactory = {};\n    this.pendingBackendInitId = 0;\n    this.state = new EngineState();\n  }\n\n  _createClass(Engine, [{\n    key: \"ready\",\n    value: function () {\n      var _ready = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var sortedBackends, i, backendName, success;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(this.pendingBackendInit != null)) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this.pendingBackendInit.then(function () {}));\n\n              case 2:\n                if (!(this.backendInstance != null)) {\n                  _context.next = 4;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 4:\n                sortedBackends = this.getSortedBackends();\n                i = 0;\n\n              case 6:\n                if (!(i < sortedBackends.length)) {\n                  _context.next = 18;\n                  break;\n                }\n\n                backendName = sortedBackends[i];\n                _context.next = 10;\n                return this.initializeBackend(backendName).success;\n\n              case 10:\n                success = _context.sent;\n\n                if (!success) {\n                  _context.next = 15;\n                  break;\n                }\n\n                _context.next = 14;\n                return this.setBackend(backendName);\n\n              case 14:\n                return _context.abrupt(\"return\");\n\n              case 15:\n                i++;\n                _context.next = 6;\n                break;\n\n              case 18:\n                throw new Error(\"Could not initialize any backends, all backend initializations \" + \"failed.\");\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function ready() {\n        return _ready.apply(this, arguments);\n      }\n\n      return ready;\n    }()\n  }, {\n    key: \"backend\",\n    get: function get() {\n      if (this.pendingBackendInit != null) {\n        throw new Error(\"Backend '\".concat(this.backendName, \"' has not yet been initialized. Make \") + \"sure to await tf.ready() or await tf.setBackend() before calling \" + \"other methods\");\n      }\n\n      if (this.backendInstance == null) {\n        var _this$initializeBacke = this.initializeBackendsAndReturnBest(),\n            name = _this$initializeBacke.name,\n            asyncInit = _this$initializeBacke.asyncInit;\n\n        if (asyncInit) {\n          throw new Error(\"The highest priority backend '\".concat(name, \"' has not yet been \") + \"initialized. Make sure to await tf.ready() or \" + \"await tf.setBackend() before calling other methods\");\n        }\n\n        this.setBackend(name);\n      }\n\n      return this.backendInstance;\n    }\n  }, {\n    key: \"backendNames\",\n    value: function backendNames() {\n      return Object.keys(this.registryFactory);\n    }\n  }, {\n    key: \"findBackend\",\n    value: function findBackend(backendName) {\n      if (!(backendName in this.registry)) {\n        // If the backend hasn't been initialized but we have a registry entry for\n        // it, initialize it and return it.\n        if (backendName in this.registryFactory) {\n          var _this$initializeBacke2 = this.initializeBackend(backendName),\n              asyncInit = _this$initializeBacke2.asyncInit;\n\n          if (asyncInit) {\n            // Backend is not ready yet.\n            return null;\n          }\n        } else {\n          return null;\n        }\n      }\n\n      return this.registry[backendName];\n    }\n  }, {\n    key: \"findBackendFactory\",\n    value: function findBackendFactory(backendName) {\n      if (!(backendName in this.registryFactory)) {\n        return null;\n      }\n\n      return this.registryFactory[backendName].factory;\n    }\n  }, {\n    key: \"registerBackend\",\n    value: function registerBackend(backendName, factory) {\n      var priority = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n      if (backendName in this.registryFactory) {\n        console.warn(\"\".concat(backendName, \" backend was already registered. \") + \"Reusing existing backend factory.\");\n        return false;\n      }\n\n      this.registryFactory[backendName] = {\n        factory: factory,\n        priority: priority\n      };\n      return true;\n    }\n  }, {\n    key: \"setBackend\",\n    value: function () {\n      var _setBackend = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(backendName) {\n        var _this$initializeBacke3, success, asyncInit, result;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(this.registryFactory[backendName] == null)) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                throw new Error(\"Backend name '\".concat(backendName, \"' not found in registry\"));\n\n              case 2:\n                this.backendName = backendName;\n\n                if (!(this.registry[backendName] == null)) {\n                  _context2.next = 16;\n                  break;\n                }\n\n                this.backendInstance = null;\n                _this$initializeBacke3 = this.initializeBackend(backendName), success = _this$initializeBacke3.success, asyncInit = _this$initializeBacke3.asyncInit;\n\n                if (!asyncInit) {\n                  _context2.next = 12;\n                  break;\n                }\n\n                _context2.next = 9;\n                return success;\n\n              case 9:\n                _context2.t0 = _context2.sent;\n                _context2.next = 13;\n                break;\n\n              case 12:\n                _context2.t0 = success;\n\n              case 13:\n                result = _context2.t0;\n\n                if (result) {\n                  _context2.next = 16;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", false);\n\n              case 16:\n                this.backendInstance = this.registry[backendName];\n                this.setupRegisteredKernels(); // Reset the profiler.\n\n                this.profiler = new Profiler(this.backendInstance);\n                return _context2.abrupt(\"return\", true);\n\n              case 20:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function setBackend(_x) {\n        return _setBackend.apply(this, arguments);\n      }\n\n      return setBackend;\n    }()\n  }, {\n    key: \"setupRegisteredKernels\",\n    value: function setupRegisteredKernels() {\n      var _this = this;\n\n      var kernels = getKernelsForBackend(this.backendName);\n      kernels.forEach(function (kernel) {\n        if (kernel.setupFunc != null) {\n          kernel.setupFunc(_this.backendInstance);\n        }\n      });\n    }\n  }, {\n    key: \"disposeRegisteredKernels\",\n    value: function disposeRegisteredKernels(backendName) {\n      var _this2 = this;\n\n      var kernels = getKernelsForBackend(backendName);\n      kernels.forEach(function (kernel) {\n        if (kernel.disposeFunc != null) {\n          kernel.disposeFunc(_this2.registry[backendName]);\n        }\n      });\n    }\n    /**\n     * Initializes a backend by looking up the backend name in the factory\n     * registry and calling the factory method. Returns a boolean representing\n     * whether the initialization of the backend suceeded. Throws an error if\n     * there is no backend in the factory registry.\n     */\n\n  }, {\n    key: \"initializeBackend\",\n    value: function initializeBackend(backendName) {\n      var _this3 = this;\n\n      var registryFactoryEntry = this.registryFactory[backendName];\n\n      if (registryFactoryEntry == null) {\n        throw new Error(\"Cannot initialize backend \".concat(backendName, \", no registration found.\"));\n      }\n\n      try {\n        var backend = registryFactoryEntry.factory();\n        /* Test if the factory returns a promise.\n        Done in a more liberal way than\n        previous 'Promise.resolve(backend)===backend'\n        as we needed to account for custom Promise\n        implementations (e.g. Angular) */\n\n        if (backend && !(backend instanceof KernelBackend) && typeof backend.then === 'function') {\n          var promiseId = ++this.pendingBackendInitId;\n          var success = backend.then(function (backendInstance) {\n            // Outdated promise. Another backend was set in the meantime.\n            if (promiseId < _this3.pendingBackendInitId) {\n              return false;\n            }\n\n            _this3.registry[backendName] = backendInstance;\n            _this3.pendingBackendInit = null;\n            return true;\n          }).catch(function (err) {\n            // Outdated promise. Another backend was set in the meantime.\n            if (promiseId < _this3.pendingBackendInitId) {\n              return false;\n            }\n\n            _this3.pendingBackendInit = null;\n            console.warn(\"Initialization of backend \".concat(backendName, \" failed\"));\n            console.warn(err.stack || err.message);\n            return false;\n          });\n          this.pendingBackendInit = success;\n          return {\n            success: success,\n            asyncInit: true\n          };\n        } else {\n          this.registry[backendName] = backend;\n          return {\n            success: true,\n            asyncInit: false\n          };\n        }\n      } catch (err) {\n        console.warn(\"Initialization of backend \".concat(backendName, \" failed\"));\n        console.warn(err.stack || err.message);\n        return {\n          success: false,\n          asyncInit: false\n        };\n      }\n    }\n  }, {\n    key: \"removeBackend\",\n    value: function removeBackend(backendName) {\n      if (!(backendName in this.registryFactory)) {\n        throw new Error(\"\".concat(backendName, \" backend not found in registry\"));\n      }\n\n      if (this.backendName === backendName && this.pendingBackendInit != null) {\n        // There is a pending promise of the backend we want to remove. Make it\n        // obsolete.\n        this.pendingBackendInitId++;\n      }\n\n      if (backendName in this.registry) {\n        this.disposeRegisteredKernels(backendName);\n        this.registry[backendName].dispose();\n        delete this.registry[backendName];\n      }\n\n      delete this.registryFactory[backendName]; // Unset the backend if it is active.\n\n      if (this.backendName === backendName) {\n        this.pendingBackendInit = null;\n        this.backendName = null;\n        this.backendInstance = null;\n      }\n    }\n  }, {\n    key: \"getSortedBackends\",\n    value: function getSortedBackends() {\n      var _this4 = this;\n\n      if (Object.keys(this.registryFactory).length === 0) {\n        throw new Error('No backend found in registry.');\n      }\n\n      return Object.keys(this.registryFactory).sort(function (a, b) {\n        // Highest priority comes first.\n        return _this4.registryFactory[b].priority - _this4.registryFactory[a].priority;\n      });\n    }\n  }, {\n    key: \"initializeBackendsAndReturnBest\",\n    value: function initializeBackendsAndReturnBest() {\n      var sortedBackends = this.getSortedBackends();\n\n      for (var i = 0; i < sortedBackends.length; i++) {\n        var backendName = sortedBackends[i];\n\n        var _this$initializeBacke4 = this.initializeBackend(backendName),\n            success = _this$initializeBacke4.success,\n            asyncInit = _this$initializeBacke4.asyncInit;\n\n        if (asyncInit || success) {\n          return {\n            name: backendName,\n            asyncInit: asyncInit\n          };\n        }\n      }\n\n      throw new Error(\"Could not initialize any backends, all backend initializations \" + \"failed.\");\n    }\n  }, {\n    key: \"moveData\",\n    value: function moveData(backend, dataId) {\n      var info = this.state.tensorInfo.get(dataId);\n      var srcBackend = info.backend;\n      var values = this.readSync(dataId);\n      var refCount = srcBackend.refCount(dataId); // Delete the tensor from the old backend and move it to the new\n      // backend.\n\n      srcBackend.disposeData(dataId, true);\n      info.backend = backend;\n      backend.move(dataId, values, info.shape, info.dtype, refCount);\n\n      if (this.shouldCheckForMemLeaks()) {\n        // Track the number of moves during a kernel execution to correctly\n        // detect memory leaks.\n        this.state.numDataMovesStack[this.state.numDataMovesStack.length - 1]++;\n      }\n    }\n  }, {\n    key: \"tidy\",\n    value: function tidy(nameOrFn, fn) {\n      var _this5 = this;\n\n      var name = null;\n\n      if (fn == null) {\n        // Called with only 1 argument.\n        if (typeof nameOrFn !== 'function') {\n          throw new Error('Please provide a function to tidy()');\n        }\n\n        fn = nameOrFn;\n      } else {\n        // Called with 2 arguments.\n        if (typeof nameOrFn !== 'string' && !(nameOrFn instanceof String)) {\n          throw new Error('When calling with two arguments, the first argument ' + 'to tidy() must be a string');\n        }\n\n        if (typeof fn !== 'function') {\n          throw new Error('When calling with two arguments, the 2nd argument ' + 'to tidy() must be a function');\n        }\n\n        name = nameOrFn; // TODO(nsthorat,smilkov): Do operation logging and performance\n        // profiling.\n      }\n\n      var result;\n      return this.scopedRun(function () {\n        return _this5.startScope(name);\n      }, function () {\n        return _this5.endScope(result);\n      }, function () {\n        result = fn();\n\n        if (result instanceof Promise) {\n          console.error('Cannot return a Promise inside of tidy.');\n        }\n\n        return result;\n      });\n    }\n  }, {\n    key: \"scopedRun\",\n    value: function scopedRun(start, end, f) {\n      start();\n\n      try {\n        var res = f();\n        end();\n        return res;\n      } catch (ex) {\n        end();\n        throw ex;\n      }\n    }\n  }, {\n    key: \"nextTensorId\",\n    value: function nextTensorId() {\n      return Engine.nextTensorId++;\n    }\n  }, {\n    key: \"nextVariableId\",\n    value: function nextVariableId() {\n      return Engine.nextVariableId++;\n    }\n    /**\n     * This method is called instead of the public-facing tensor.clone() when\n     * saving a tensor for backwards pass. It makes sure to add the clone\n     * operation to the tape regardless of being called inside a kernel\n     * execution.\n     */\n\n  }, {\n    key: \"clone\",\n    value: function clone(x) {\n      var y = ENGINE.runKernel(Identity, {\n        x: x\n      });\n      var inputs = {\n        x: x\n      };\n\n      var grad = function grad(dy) {\n        return {\n          x: function x() {\n            var dtype = 'float32';\n            var gradInputs = {\n              x: dy\n            };\n            var attrs = {\n              dtype: dtype\n            };\n            return ENGINE.runKernel(Cast, gradInputs, // tslint:disable-next-line: no-unnecessary-type-assertion\n            attrs);\n          }\n        };\n      };\n\n      var saved = [];\n      this.addTapeNode(this.state.activeScope.name, inputs, [y], grad, saved, {});\n      return y;\n    }\n    /**\n     * Execute a kernel with the given name and return the output tensor.\n     *\n     * @param kernelName The name of the kernel to execute.\n     * @param inputs A map of input names to tensors.\n     * @param attrs A map of attribute names to their values. An attribute is a\n     *     primitive (non-tensor) input to the kernel.\n     * @param inputsToSave A list of tensors, inputs to save for the backprop\n     *     computation.\n     * @param outputsToSave A list of booleans, specifying which output to save\n     *     for the backprop computation. These are booleans since the output\n     * tensors are not visible to the user.\n     */\n\n  }, {\n    key: \"runKernel\",\n    value: function runKernel(kernelName, inputs, attrs) {\n      var hasKernel = getKernel(kernelName, this.backendName) != null;\n\n      if (!hasKernel) {\n        throw new Error(\"Kernel '\".concat(kernelName, \"' not registered for backend '\").concat(this.backendName, \"'\"));\n      }\n\n      return this.runKernelFunc({\n        kernelName: kernelName,\n        inputs: inputs,\n        attrs: attrs\n      });\n    }\n  }, {\n    key: \"shouldCheckForMemLeaks\",\n    value: function shouldCheckForMemLeaks() {\n      return this.ENV.getBool('IS_TEST');\n    }\n  }, {\n    key: \"checkKernelForMemLeak\",\n    value: function checkKernelForMemLeak(kernelName, numDataIdsBefore, outInfos) {\n      var numDataIdsAfter = this.backend.numDataIds(); // Count the number of data ids associated with the result of the kernel.\n\n      var numOutputDataIds = 0;\n      outInfos.forEach(function (info) {\n        // Complex numbers allocate 3 data ids, one for 'real', one for\n        // 'imaginary', and one for the container that holds the former two.\n        numOutputDataIds += info.dtype === 'complex64' ? 3 : 1;\n      }); // Account for the number of moves during kernel execution. A \"data move\"\n      // can happen in the middle of a kernel execution, placing a new (key,value)\n      // pair in the data storage. Since data moves have net zero effect (we\n      // always remove the data from the old backend), we have to cancel them out\n      // when detecting memory leaks.\n\n      var numMoves = this.state.numDataMovesStack[this.state.numDataMovesStack.length - 1];\n      var dataIdsLeaked = numDataIdsAfter - numDataIdsBefore - numOutputDataIds - numMoves;\n\n      if (dataIdsLeaked > 0) {\n        throw new Error(\"Backend '\".concat(this.backendName, \"' has an internal memory leak \") + \"(\".concat(dataIdsLeaked, \" data ids) after running '\").concat(kernelName, \"'\"));\n      }\n    }\n    /**\n     * Internal helper method to execute a kernel Func\n     *\n     * Use `runKernel` to execute kernels from outside of engine.\n     */\n\n  }, {\n    key: \"runKernelFunc\",\n    value: function runKernelFunc(kernelParams) {\n      var _this6 = this;\n\n      var outputs;\n      var saved = [];\n      var isTapeOn = this.isTapeOn();\n      var startingBytecount = this.state.numBytes;\n      var startingNumTensors = this.state.numTensors;\n\n      if (this.shouldCheckForMemLeaks()) {\n        this.state.numDataMovesStack.push(0);\n      }\n\n      var kernelFunc;\n\n      if (this.backendName == null) {\n        // backend has not been initialized yet (backend initialization is lazy\n        // can be deferred until an op/ kernel is run).\n        // The below getter has side effects that will try to initialize the\n        // backend and set properties like this.backendName\n        // tslint:disable-next-line: no-unused-expression\n        this.backend;\n      }\n\n      var out;\n      var kernelOrScopeName = isRegisteredKernelInvocation(kernelParams) ? kernelParams.kernelName : this.state.activeScope != null ? this.state.activeScope.name : ''; // Create the kernelFunc from either a registered kernel OR passed in\n      // forward/backward functions (used by custom grad). In this context a\n      // kernelFunc wraps a kernel implementation with some bookkeeping.\n\n      if (isRegisteredKernelInvocation(kernelParams)) {\n        var kernelName = kernelParams.kernelName,\n            _inputs = kernelParams.inputs,\n            _attrs = kernelParams.attrs;\n\n        if (this.backendName == null) {\n          // backend has not been initialized yet (backend initialization is lazy\n          // can be deferred until an op/ kernel is run).\n          // The below getter has side effects that will try to initialize the\n          // backend and set properties like this.backendName\n          // tslint:disable-next-line: no-unused-expression\n          this.backend;\n        }\n\n        var kernel = getKernel(kernelName, this.backendName);\n        util.assert(kernel != null, function () {\n          return \"Cannot find registered kernel '\".concat(kernelName, \"' for backend '\").concat(_this6.backendName, \"'\");\n        });\n\n        kernelFunc = function kernelFunc() {\n          var numDataIdsBefore = _this6.backend.numDataIds();\n\n          out = kernel.kernelFunc({\n            inputs: _inputs,\n            attrs: _attrs,\n            backend: _this6.backend\n          });\n          var outInfos = Array.isArray(out) ? out : [out];\n\n          if (_this6.shouldCheckForMemLeaks()) {\n            _this6.checkKernelForMemLeak(kernelName, numDataIdsBefore, outInfos);\n          }\n\n          var outTensors = outInfos.map(function (outInfo) {\n            // todo (yassogba) remove this option (Tensor) when node backend\n            // methods have been modularized and they all return tensorInfo.\n            // TensorInfos do not have a rank attribute.\n            if (outInfo.rank != null) {\n              return outInfo;\n            }\n\n            var dataId = outInfo.dataId,\n                shape = outInfo.shape,\n                dtype = outInfo.dtype;\n            return _this6.makeTensorFromDataId(dataId, shape, dtype);\n          }); // Save any required inputs and outputs.\n          // Do not save unless we are recording to the tape. Otherwise it would\n          // cause a mem leak since there would be no backprop for these tensors\n          // (which would otherwise dispose them).\n\n          if (isTapeOn) {\n            var tensorsToSave = _this6.getTensorsForGradient(kernelName, _inputs, outTensors);\n\n            saved = _this6.saveTensorsForBackwardMode(tensorsToSave);\n          }\n\n          return outTensors;\n        };\n      } else {\n        var forwardFunc = kernelParams.forwardFunc; // Running a customGrad op.\n\n        var saveFunc = function saveFunc(tensors) {\n          // Do not save unless we are recording to the tape. Otherwise it would\n          // cause a mem leak since we would never run backprop, which disposes\n          // the kept tensors.\n          if (!isTapeOn) {\n            return;\n          }\n\n          saved = tensors.map(function (tensor) {\n            return _this6.keep(_this6.clone(tensor));\n          });\n        };\n\n        kernelFunc = function kernelFunc() {\n          var numDataIdsBefore = _this6.backend.numDataIds();\n\n          out = _this6.tidy(function () {\n            return forwardFunc(_this6.backend, saveFunc);\n          });\n          var outs = Array.isArray(out) ? out : [out];\n\n          if (_this6.shouldCheckForMemLeaks()) {\n            // Scope name is used to print a more helpful error message if needed.\n            _this6.checkKernelForMemLeak(kernelOrScopeName, numDataIdsBefore, outs);\n          }\n\n          return outs;\n        };\n      } //\n      // Run the kernelFunc. Optionally profiling it.\n      //\n\n\n      var inputs = kernelParams.inputs,\n          attrs = kernelParams.attrs;\n      var backwardsFunc = isRegisteredKernelInvocation(kernelParams) ? null : kernelParams.backwardsFunc;\n      var kernelProfile;\n      this.scopedRun( // Stop recording to a tape when running a kernel.\n      function () {\n        return _this6.state.kernelDepth++;\n      }, function () {\n        return _this6.state.kernelDepth--;\n      }, function () {\n        if (!_this6.ENV.getBool('DEBUG') && !_this6.state.profiling) {\n          outputs = kernelFunc();\n        } else {\n          kernelProfile = _this6.profiler.profileKernel(kernelOrScopeName, inputs, function () {\n            return kernelFunc();\n          });\n\n          if (_this6.ENV.getBool('DEBUG')) {\n            _this6.profiler.logKernelProfile(kernelProfile);\n          }\n\n          outputs = kernelProfile.outputs;\n        }\n      });\n\n      if (isTapeOn) {\n        this.addTapeNode(kernelOrScopeName, inputs, outputs, backwardsFunc, saved, attrs);\n      }\n\n      if (this.state.profiling) {\n        this.state.activeProfile.kernels.push({\n          name: kernelOrScopeName,\n          bytesAdded: this.state.numBytes - startingBytecount,\n          totalBytesSnapshot: this.state.numBytes,\n          tensorsAdded: this.state.numTensors - startingNumTensors,\n          totalTensorsSnapshot: this.state.numTensors,\n          inputShapes: Object.keys(inputs).map(function (key) {\n            return inputs[key] != null ? inputs[key].shape : null;\n          }),\n          outputShapes: outputs.map(function (item) {\n            return item.shape;\n          }),\n          kernelTimeMs: kernelProfile.timeMs,\n          extraInfo: kernelProfile.extraInfo\n        });\n      }\n\n      return Array.isArray(out) ? outputs : outputs[0];\n    }\n    /**\n     * Saves tensors used in forward mode for use in backward mode.\n     *\n     * @param tensors the list of tensors to save.\n     */\n\n  }, {\n    key: \"saveTensorsForBackwardMode\",\n    value: function saveTensorsForBackwardMode(tensors) {\n      var _this7 = this;\n\n      var saved = tensors.map(function (tensor) {\n        return _this7.keep(_this7.clone(tensor));\n      });\n      return saved;\n    }\n    /**\n     * Returns a list of tensors to save for a given gradient calculation.\n     *\n     * @param kernelName name of kernel to look up gradient for.\n     * @param inputs a map of input tensors.\n     * @param outputs an array of output tensors from forward mode of kernel.\n     */\n\n  }, {\n    key: \"getTensorsForGradient\",\n    value: function getTensorsForGradient(kernelName, inputs, outputs) {\n      var gradConfig = getGradient(kernelName);\n\n      if (gradConfig != null) {\n        var inputsToSave = gradConfig.inputsToSave || [];\n        var outputsToSave = gradConfig.outputsToSave || []; // If saveAllInputs is true, all inputs will be saved. Otherwise, inputs\n        // specified in inputsToSave will be saved.\n\n        var inputTensorsToSave;\n\n        if (gradConfig.saveAllInputs) {\n          util.assert(Array.isArray(inputs), function () {\n            return 'saveAllInputs is true, expected inputs to be an array.';\n          });\n          inputTensorsToSave = Object.keys(inputs).map(function (key) {\n            return inputs[key];\n          });\n        } else {\n          inputTensorsToSave = inputsToSave.map(function (inputName) {\n            return inputs[inputName];\n          });\n        }\n\n        var outputTensorsToSave = outputs.filter(function (_, i) {\n          return outputsToSave[i];\n        });\n        return inputTensorsToSave.concat(outputTensorsToSave);\n      } // We return an empty list rather than throw an error because the kernel we\n      // are looking up may not actually be relevant to backproping through the\n      // overall function\n      //\n      // See 'does not error if irrelevant (pruned) ops are missing grads' test\n      // in gradients_test.ts for an example.\n\n\n      return [];\n    }\n    /**\n     * Internal method used by public APIs for tensor creation. Makes a new\n     * tensor with the provided shape, dtype and values. It always\n     * creates a new data id and writes the values to the underlying backend.\n     */\n\n  }, {\n    key: \"makeTensor\",\n    value: function makeTensor(values, shape, dtype, backend) {\n      if (values == null) {\n        throw new Error('Values passed to engine.makeTensor() are null');\n      }\n\n      dtype = dtype || 'float32';\n      backend = backend || this.backend;\n      var backendVals = values;\n\n      if (dtype === 'string' && util.isString(values[0])) {\n        backendVals = values.map(function (d) {\n          return util.encodeString(d);\n        });\n      }\n\n      var dataId = backend.write(backendVals, shape, dtype);\n      var t = new Tensor(shape, dtype, dataId, this.nextTensorId());\n      this.trackTensor(t, backend); // Count bytes for string tensors.\n\n      if (dtype === 'string') {\n        var info = this.state.tensorInfo.get(dataId);\n        var newBytes = bytesFromStringArray(backendVals);\n        this.state.numBytes += newBytes - info.bytes;\n        info.bytes = newBytes;\n      }\n\n      return t;\n    }\n    /**\n     * Internal method used by backends. Makes a new tensor\n     * that is a wrapper around an existing data id. It doesn't create\n     * a new data id, only increments the ref count used in memory tracking.\n     */\n\n  }, {\n    key: \"makeTensorFromDataId\",\n    value: function makeTensorFromDataId(dataId, shape, dtype, backend) {\n      dtype = dtype || 'float32';\n      var t = new Tensor(shape, dtype, dataId, this.nextTensorId());\n      this.trackTensor(t, backend);\n      return t;\n    }\n  }, {\n    key: \"makeVariable\",\n    value: function makeVariable(initialValue) {\n      var trainable = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var name = arguments.length > 2 ? arguments[2] : undefined;\n      var dtype = arguments.length > 3 ? arguments[3] : undefined;\n      name = name || this.nextVariableId().toString();\n\n      if (dtype != null && dtype !== initialValue.dtype) {\n        initialValue = initialValue.cast(dtype);\n      }\n\n      var v = new Variable(initialValue, trainable, name, this.nextTensorId());\n\n      if (this.state.registeredVariables[v.name] != null) {\n        throw new Error(\"Variable with name \".concat(v.name, \" was already registered\"));\n      }\n\n      this.state.registeredVariables[v.name] = v;\n      this.incRef(v, this.backend);\n      return v;\n    }\n  }, {\n    key: \"trackTensor\",\n    value: function trackTensor(a, backend) {\n      this.state.numTensors++;\n\n      if (a.dtype === 'string') {\n        this.state.numStringTensors++;\n      } // Bytes for complex numbers are counted by their components. Bytes for\n      // string tensors are counted when writing values.\n\n\n      var bytes = 0;\n\n      if (a.dtype !== 'complex64' && a.dtype !== 'string') {\n        bytes = a.size * util.bytesPerElement(a.dtype);\n      }\n\n      this.state.numBytes += bytes;\n\n      if (!this.state.tensorInfo.has(a.dataId)) {\n        this.state.numDataBuffers++;\n        this.state.tensorInfo.set(a.dataId, {\n          backend: backend || this.backend,\n          dtype: a.dtype,\n          shape: a.shape,\n          bytes: bytes\n        });\n      }\n\n      if (!(a instanceof Variable)) {\n        this.track(a);\n      }\n    } // Track the tensor by dataId and increase the refCount for the dataId in the\n    // backend.\n    // TODO(pyu10055): This is currently used by makeVariable method, to increase\n    // refCount on the backend for the dataId. It can potentially be replaced with\n    // Identity op indead of calling backend directly.\n\n  }, {\n    key: \"incRef\",\n    value: function incRef(a, backend) {\n      this.trackTensor(a, backend);\n      this.backend.incRef(a.dataId);\n    }\n  }, {\n    key: \"removeDataId\",\n    value: function removeDataId(dataId, backend) {\n      if (this.state.tensorInfo.has(dataId) && this.state.tensorInfo.get(dataId).backend === backend) {\n        this.state.tensorInfo.delete(dataId);\n        this.state.numDataBuffers--;\n      }\n    }\n  }, {\n    key: \"disposeTensor\",\n    value: function disposeTensor(a) {\n      if (!this.state.tensorInfo.has(a.dataId)) {\n        return;\n      }\n\n      var info = this.state.tensorInfo.get(a.dataId);\n      this.state.numTensors--;\n\n      if (a.dtype === 'string') {\n        this.state.numStringTensors--;\n        this.state.numBytes -= info.bytes;\n      } // Don't count bytes for complex numbers as they are counted by their\n      // components.\n\n\n      if (a.dtype !== 'complex64' && a.dtype !== 'string') {\n        var bytes = a.size * util.bytesPerElement(a.dtype);\n        this.state.numBytes -= bytes;\n      } // Remove the reference to dataId if backend dispose the data successfully\n\n\n      if (info.backend.disposeData(a.dataId)) {\n        this.removeDataId(a.dataId, info.backend);\n      } // TODO(nsthorat): Construct an error and save the stack trace for\n      // debugging when in debug mode. Creating a stack trace is too expensive\n      // to do unconditionally.\n\n    }\n  }, {\n    key: \"disposeVariables\",\n    value: function disposeVariables() {\n      for (var varName in this.state.registeredVariables) {\n        var v = this.state.registeredVariables[varName];\n        this.disposeVariable(v);\n      }\n    }\n  }, {\n    key: \"disposeVariable\",\n    value: function disposeVariable(v) {\n      this.disposeTensor(v);\n\n      if (this.state.registeredVariables[v.name] != null) {\n        delete this.state.registeredVariables[v.name];\n      }\n    }\n  }, {\n    key: \"memory\",\n    value: function memory() {\n      var info = this.backend.memory();\n      info.numTensors = this.state.numTensors;\n      info.numDataBuffers = this.state.numDataBuffers;\n      info.numBytes = this.state.numBytes;\n\n      if (this.state.numStringTensors > 0) {\n        info.unreliable = true;\n\n        if (info.reasons == null) {\n          info.reasons = [];\n        }\n\n        info.reasons.push('Memory usage by string tensors is approximate ' + '(2 bytes per character)');\n      }\n\n      return info;\n    }\n  }, {\n    key: \"profile\",\n    value: function () {\n      var _profile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(query) {\n        var startBytes, startNumTensors, _iterator, _step, kernel;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.state.profiling = true;\n                startBytes = this.state.numBytes;\n                startNumTensors = this.state.numTensors;\n                this.state.activeProfile.kernels = [];\n                _context3.next = 6;\n                return query();\n\n              case 6:\n                this.state.activeProfile.result = _context3.sent;\n                this.state.profiling = false;\n                this.state.activeProfile.peakBytes = Math.max.apply(Math, _toConsumableArray(this.state.activeProfile.kernels.map(function (d) {\n                  return d.totalBytesSnapshot;\n                })));\n                this.state.activeProfile.newBytes = this.state.numBytes - startBytes;\n                this.state.activeProfile.newTensors = this.state.numTensors - startNumTensors;\n                _iterator = _createForOfIteratorHelper(this.state.activeProfile.kernels);\n                _context3.prev = 12;\n\n                _iterator.s();\n\n              case 14:\n                if ((_step = _iterator.n()).done) {\n                  _context3.next = 24;\n                  break;\n                }\n\n                kernel = _step.value;\n                _context3.next = 18;\n                return kernel.kernelTimeMs;\n\n              case 18:\n                kernel.kernelTimeMs = _context3.sent;\n                _context3.next = 21;\n                return kernel.extraInfo;\n\n              case 21:\n                kernel.extraInfo = _context3.sent;\n\n              case 22:\n                _context3.next = 14;\n                break;\n\n              case 24:\n                _context3.next = 29;\n                break;\n\n              case 26:\n                _context3.prev = 26;\n                _context3.t0 = _context3[\"catch\"](12);\n\n                _iterator.e(_context3.t0);\n\n              case 29:\n                _context3.prev = 29;\n\n                _iterator.f();\n\n                return _context3.finish(29);\n\n              case 32:\n                return _context3.abrupt(\"return\", this.state.activeProfile);\n\n              case 33:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[12, 26, 29, 32]]);\n      }));\n\n      function profile(_x2) {\n        return _profile.apply(this, arguments);\n      }\n\n      return profile;\n    }()\n  }, {\n    key: \"isTapeOn\",\n    value: function isTapeOn() {\n      return this.state.gradientDepth > 0 && this.state.kernelDepth === 0;\n    }\n  }, {\n    key: \"addTapeNode\",\n    value: function addTapeNode(kernelName, inputs, outputs, gradientsFunc, saved, attrs) {\n      var _this8 = this;\n\n      var tapeNode = {\n        id: this.state.nextTapeNodeId++,\n        kernelName: kernelName,\n        inputs: inputs,\n        outputs: outputs,\n        saved: saved\n      };\n      var gradConfig = getGradient(kernelName);\n\n      if (gradConfig != null) {\n        gradientsFunc = gradConfig.gradFunc;\n      }\n\n      if (gradientsFunc != null) {\n        tapeNode.gradient = function (dys) {\n          // TODO(smilkov): To optimize back-prop, pass dys that are not used in\n          // the backprop graph to the user as null instead of zeros\n          dys = dys.map(function (dy, i) {\n            if (dy == null) {\n              var output = outputs[i];\n              var vals = util.makeZerosTypedArray(output.size, output.dtype);\n              return _this8.makeTensor(vals, output.shape, output.dtype);\n            }\n\n            return dy;\n          }); // Grad functions of ops with single outputs expect a dy, while ops\n          // with multiple outputs expect dys (array of dy).\n\n          return gradientsFunc(dys.length > 1 ? dys : dys[0], saved, attrs);\n        };\n      }\n\n      this.state.activeTape.push(tapeNode);\n    }\n  }, {\n    key: \"keep\",\n    value: function keep(result) {\n      result.kept = true;\n      return result;\n    }\n  }, {\n    key: \"startTape\",\n    value: function startTape() {\n      if (this.state.gradientDepth === 0) {\n        this.state.activeTape = [];\n      }\n\n      this.state.gradientDepth++;\n    }\n  }, {\n    key: \"endTape\",\n    value: function endTape() {\n      this.state.gradientDepth--;\n    }\n    /**\n     * Start a scope. Use this with endScope() to achieve the same functionality\n     * as scope() without the need for a function closure.\n     */\n\n  }, {\n    key: \"startScope\",\n    value: function startScope(name) {\n      var scopeInfo = {\n        track: [],\n        name: 'unnamed scope',\n        id: this.state.nextScopeId++\n      };\n\n      if (name) {\n        scopeInfo.name = name;\n      }\n\n      this.state.scopeStack.push(scopeInfo);\n      this.state.activeScope = scopeInfo;\n    }\n    /**\n     * End a scope. Use this with startScope() to achieve the same functionality\n     * as scope() without the need for a function closure.\n     */\n\n  }, {\n    key: \"endScope\",\n    value: function endScope(result) {\n      var _this9 = this;\n\n      var tensorsToTrackInParent = getTensorsInContainer(result);\n      var tensorsToTrackInParentSet = new Set(tensorsToTrackInParent.map(function (t) {\n        return t.id;\n      })); // Dispose the arrays tracked in this scope.\n\n      for (var i = 0; i < this.state.activeScope.track.length; i++) {\n        var tensor = this.state.activeScope.track[i];\n\n        if (!tensor.kept && !tensorsToTrackInParentSet.has(tensor.id)) {\n          tensor.dispose();\n        }\n      }\n\n      var oldScope = this.state.scopeStack.pop();\n      this.state.activeScope = this.state.scopeStack.length === 0 ? null : this.state.scopeStack[this.state.scopeStack.length - 1]; // Track the current result in the parent scope.\n\n      tensorsToTrackInParent.forEach(function (tensor) {\n        // Only track the tensor if was allocated in the inner scope and is not\n        // globally kept.\n        if (!tensor.kept && tensor.scopeId === oldScope.id) {\n          _this9.track(tensor);\n        }\n      });\n    }\n    /**\n     * Returns gradients of `f` with respect to each of the `xs`. The gradients\n     * returned are of the same length as `xs`, but some might be null if `f`\n     * was not a function of that `x`. It also takes optional dy to multiply the\n     * gradient, which defaults to `1`.\n     */\n\n  }, {\n    key: \"gradients\",\n    value: function gradients(f, xs, dy) {\n      var _this10 = this;\n\n      var allowNoGradients = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      util.assert(xs.length > 0, function () {\n        return 'gradients() received an empty list of xs.';\n      });\n\n      if (dy != null && dy.dtype !== 'float32') {\n        throw new Error(\"dy must have 'float32' dtype, but has '\".concat(dy.dtype, \"'\"));\n      }\n\n      var y = this.scopedRun(function () {\n        return _this10.startTape();\n      }, function () {\n        return _this10.endTape();\n      }, function () {\n        return _this10.tidy('forward', f);\n      });\n      util.assert(y instanceof Tensor, function () {\n        return 'The result y returned by f() must be a tensor.';\n      }); // Filter out the nodes that don't connect x => y.\n\n      var filteredTape = getFilteredNodesXToY(this.state.activeTape, xs, y);\n\n      if (!allowNoGradients && filteredTape.length === 0 && xs.length > 0) {\n        throw new Error('Cannot compute gradient of y=f(x) with respect to x. Make sure ' + 'that the f you passed encloses all operations that lead from x ' + 'to y.');\n      }\n\n      return this.tidy('backward', function () {\n        var accumulatedGradientMap = {};\n        accumulatedGradientMap[y.id] = dy == null ? ones(y.shape) : dy; // Backprop gradients through the filtered nodes.\n\n        backpropagateGradients(accumulatedGradientMap, filteredTape, // Pass the tidy function to avoid circular dep with `tape.ts`.\n        function (f) {\n          return _this10.tidy(f);\n        }, // Pass an add function to avoide a circular dep with `tape.ts`.\n        add);\n        var grads = xs.map(function (x) {\n          return accumulatedGradientMap[x.id];\n        });\n\n        if (_this10.state.gradientDepth === 0) {\n          // This means that we are not computing higher-order gradients\n          // and can clean up the tape.\n          _this10.state.activeTape.forEach(function (node) {\n            var _iterator2 = _createForOfIteratorHelper(node.saved),\n                _step2;\n\n            try {\n              for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                var tensor = _step2.value;\n                tensor.dispose();\n              }\n            } catch (err) {\n              _iterator2.e(err);\n            } finally {\n              _iterator2.f();\n            }\n          });\n\n          _this10.state.activeTape = null;\n        }\n\n        return {\n          value: y,\n          grads: grads\n        };\n      });\n    }\n  }, {\n    key: \"customGrad\",\n    value: function customGrad(f) {\n      var _this11 = this;\n\n      util.assert(util.isFunction(f), function () {\n        return 'The f passed in customGrad(f) must be a function.';\n      });\n      return function () {\n        for (var _len = arguments.length, inputs = new Array(_len), _key = 0; _key < _len; _key++) {\n          inputs[_key] = arguments[_key];\n        }\n\n        util.assert(inputs.every(function (t) {\n          return t instanceof Tensor;\n        }), function () {\n          return 'The args passed in customGrad(f)(x1, x2,...) must all be ' + 'tensors';\n        });\n        var res;\n        var inputMap = {};\n        inputs.forEach(function (input, i) {\n          inputMap[i] = input;\n        });\n\n        var forwardFunc = function forwardFunc(_, save) {\n          res = f.apply(void 0, [].concat(inputs, [save]));\n          util.assert(res.value instanceof Tensor, function () {\n            return 'The function f passed in customGrad(f) must return an ' + 'object where `obj.value` is a tensor';\n          });\n          util.assert(util.isFunction(res.gradFunc), function () {\n            return 'The function f passed in customGrad(f) must return an ' + 'object where `obj.gradFunc` is a function.';\n          });\n          return res.value;\n        };\n\n        var backwardsFunc = function backwardsFunc(dy, saved) {\n          var gradRes = res.gradFunc(dy, saved);\n          var grads = Array.isArray(gradRes) ? gradRes : [gradRes];\n          util.assert(grads.length === inputs.length, function () {\n            return 'The function f passed in customGrad(f) must return an ' + 'object where `obj.gradFunc` is a function that returns ' + 'the same number of tensors as inputs passed to f(...).';\n          });\n          util.assert(grads.every(function (t) {\n            return t instanceof Tensor;\n          }), function () {\n            return 'The function f passed in customGrad(f) must return an ' + 'object where `obj.gradFunc` is a function that returns ' + 'a list of only tensors.';\n          });\n          var gradMap = {};\n          grads.forEach(function (grad, i) {\n            gradMap[i] = function () {\n              return grad;\n            };\n          });\n          return gradMap;\n        };\n\n        return _this11.runKernelFunc({\n          forwardFunc: forwardFunc,\n          backwardsFunc: backwardsFunc,\n          inputs: inputMap\n        });\n      };\n    }\n  }, {\n    key: \"readSync\",\n    value: function readSync(dataId) {\n      // Route the read to the correct backend.\n      var info = this.state.tensorInfo.get(dataId);\n      return info.backend.readSync(dataId);\n    }\n  }, {\n    key: \"read\",\n    value: function read(dataId) {\n      // Route the read to the correct backend.\n      var info = this.state.tensorInfo.get(dataId);\n      return info.backend.read(dataId);\n    }\n  }, {\n    key: \"time\",\n    value: function () {\n      var _time = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(query) {\n        var start, timingInfo;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                start = now();\n                _context4.next = 3;\n                return this.backend.time(query);\n\n              case 3:\n                timingInfo = _context4.sent;\n                timingInfo.wallMs = now() - start;\n                return _context4.abrupt(\"return\", timingInfo);\n\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function time(_x3) {\n        return _time.apply(this, arguments);\n      }\n\n      return time;\n    }()\n    /**\n     * Tracks a Tensor in the current scope to be automatically cleaned up\n     * when the current scope ends, and returns the value.\n     *\n     * @param result The Tensor to track in the current scope.\n     */\n\n  }, {\n    key: \"track\",\n    value: function track(result) {\n      if (this.state.activeScope != null) {\n        result.scopeId = this.state.activeScope.id;\n        this.state.activeScope.track.push(result);\n      }\n\n      return result;\n    }\n  }, {\n    key: \"registeredVariables\",\n    get: function get() {\n      return this.state.registeredVariables;\n    }\n    /**\n     * Resets the engine state. Removes all backends but does not remove\n     * registered backend factories.\n     */\n\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      // Make any pending promise obsolete.\n      this.pendingBackendInitId++;\n      this.state.dispose();\n      this.ENV.reset();\n      this.state = new EngineState();\n\n      for (var backendName in this.registry) {\n        this.disposeRegisteredKernels(backendName);\n        this.registry[backendName].dispose();\n        delete this.registry[backendName];\n      }\n\n      this.backendName = null;\n      this.backendInstance = null;\n      this.pendingBackendInit = null;\n    }\n  }]);\n\n  return Engine;\n}();\nEngine.nextTensorId = 0;\nEngine.nextVariableId = 0;\n\nfunction ones(shape) {\n  var values = makeOnesTypedArray(sizeFromShape(shape), 'float32');\n  return ENGINE.makeTensor(values, shape, 'float32');\n}\n\nexport function getOrMakeEngine() {\n  var ns = getGlobalNamespace();\n\n  if (ns._tfengine == null) {\n    var environment = new Environment(ns);\n    ns._tfengine = new Engine(environment);\n  }\n\n  setEnvironmentGlobal(ns._tfengine.ENV); // Tell the current tensor interface that the global engine is responsible\n  // for tracking.\n\n  setTensorTracker(function () {\n    return ns._tfengine;\n  });\n  return ns._tfengine;\n}\nexport var ENGINE = getOrMakeEngine();\n/**\n * A implementation of the add op for use within engine and tape.\n *\n * This allows us to avoid a circular dependency between add.ts and engine.\n * It is exported to be available in tape tests.\n */\n\nexport function add(a, b) {\n  // We duplicate Add here to avoid a circular dependency with add.ts.\n  var inputs = {\n    a: a,\n    b: b\n  };\n  return ENGINE.runKernel(Add, inputs);\n}","import _slicedToArray from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _regeneratorRuntime from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/regenerator\";\n\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { isPromise } from './util_base'; // Expects flags from URL in the format ?tfjsflags=FLAG1:1,FLAG2:true.\n\nvar TENSORFLOWJS_FLAGS_PREFIX = 'tfjsflags';\n/**\n * The environment contains evaluated flags as well as the registered platform.\n * This is always used as a global singleton and can be retrieved with\n * `tf.env()`.\n *\n * @doc {heading: 'Environment'}\n */\n\nexport var Environment = /*#__PURE__*/function () {\n  // tslint:disable-next-line: no-any\n  function Environment(global) {\n    _classCallCheck(this, Environment);\n\n    this.global = global;\n    this.flags = {};\n    this.flagRegistry = {};\n    this.urlFlags = {}; // Jasmine spies on this in 'environment_test.ts'\n\n    this.getQueryParams = getQueryParams;\n    this.populateURLFlags();\n  }\n\n  _createClass(Environment, [{\n    key: \"setPlatform\",\n    value: function setPlatform(platformName, platform) {\n      if (this.platform != null) {\n        console.warn(\"Platform \".concat(this.platformName, \" has already been set. \") + \"Overwriting the platform with \".concat(platform, \".\"));\n      }\n\n      this.platformName = platformName;\n      this.platform = platform;\n    }\n  }, {\n    key: \"registerFlag\",\n    value: function registerFlag(flagName, evaluationFn, setHook) {\n      this.flagRegistry[flagName] = {\n        evaluationFn: evaluationFn,\n        setHook: setHook\n      }; // Override the flag value from the URL. This has to happen here because the\n      // environment is initialized before flags get registered.\n\n      if (this.urlFlags[flagName] != null) {\n        var flagValue = this.urlFlags[flagName];\n        console.warn(\"Setting feature override from URL \".concat(flagName, \": \").concat(flagValue, \".\"));\n        this.set(flagName, flagValue);\n      }\n    }\n  }, {\n    key: \"getAsync\",\n    value: function () {\n      var _getAsync = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(flagName) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(flagName in this.flags)) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this.flags[flagName]);\n\n              case 2:\n                _context.next = 4;\n                return this.evaluateFlag(flagName);\n\n              case 4:\n                this.flags[flagName] = _context.sent;\n                return _context.abrupt(\"return\", this.flags[flagName]);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getAsync(_x) {\n        return _getAsync.apply(this, arguments);\n      }\n\n      return getAsync;\n    }()\n  }, {\n    key: \"get\",\n    value: function get(flagName) {\n      if (flagName in this.flags) {\n        return this.flags[flagName];\n      }\n\n      var flagValue = this.evaluateFlag(flagName);\n\n      if (isPromise(flagValue)) {\n        throw new Error(\"Flag \".concat(flagName, \" cannot be synchronously evaluated. \") + \"Please use getAsync() instead.\");\n      }\n\n      this.flags[flagName] = flagValue;\n      return this.flags[flagName];\n    }\n  }, {\n    key: \"getNumber\",\n    value: function getNumber(flagName) {\n      return this.get(flagName);\n    }\n  }, {\n    key: \"getBool\",\n    value: function getBool(flagName) {\n      return this.get(flagName);\n    }\n  }, {\n    key: \"getFlags\",\n    value: function getFlags() {\n      return this.flags;\n    } // For backwards compatibility.\n\n  }, {\n    key: \"features\",\n    get: function get() {\n      return this.flags;\n    }\n  }, {\n    key: \"set\",\n    value: function set(flagName, value) {\n      if (this.flagRegistry[flagName] == null) {\n        throw new Error(\"Cannot set flag \".concat(flagName, \" as it has not been registered.\"));\n      }\n\n      this.flags[flagName] = value;\n\n      if (this.flagRegistry[flagName].setHook != null) {\n        this.flagRegistry[flagName].setHook(value);\n      }\n    }\n  }, {\n    key: \"evaluateFlag\",\n    value: function evaluateFlag(flagName) {\n      if (this.flagRegistry[flagName] == null) {\n        throw new Error(\"Cannot evaluate flag '\".concat(flagName, \"': no evaluation function found.\"));\n      }\n\n      return this.flagRegistry[flagName].evaluationFn();\n    }\n  }, {\n    key: \"setFlags\",\n    value: function setFlags(flags) {\n      this.flags = Object.assign({}, flags);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.flags = {};\n      this.urlFlags = {};\n      this.populateURLFlags();\n    }\n  }, {\n    key: \"populateURLFlags\",\n    value: function populateURLFlags() {\n      var _this = this;\n\n      if (typeof this.global === 'undefined' || typeof this.global.location === 'undefined' || typeof this.global.location.search === 'undefined') {\n        return;\n      }\n\n      var urlParams = this.getQueryParams(this.global.location.search);\n\n      if (TENSORFLOWJS_FLAGS_PREFIX in urlParams) {\n        var keyValues = urlParams[TENSORFLOWJS_FLAGS_PREFIX].split(',');\n        keyValues.forEach(function (keyValue) {\n          var _keyValue$split = keyValue.split(':'),\n              _keyValue$split2 = _slicedToArray(_keyValue$split, 2),\n              key = _keyValue$split2[0],\n              value = _keyValue$split2[1];\n\n          _this.urlFlags[key] = parseValue(key, value);\n        });\n      }\n    }\n  }]);\n\n  return Environment;\n}();\nexport function getQueryParams(queryString) {\n  var params = {};\n  queryString.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g, function (s) {\n    for (var _len = arguments.length, t = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      t[_key - 1] = arguments[_key];\n    }\n\n    decodeParam(params, t[0], t[1]);\n    return t.join('=');\n  });\n  return params;\n}\n\nfunction decodeParam(params, name, value) {\n  params[decodeURIComponent(name)] = decodeURIComponent(value || '');\n}\n\nfunction parseValue(flagName, value) {\n  value = value.toLowerCase();\n\n  if (value === 'true' || value === 'false') {\n    return value === 'true';\n  } else if (\"\".concat(+value) === value) {\n    return +value;\n  }\n\n  throw new Error(\"Could not parse value flag value \".concat(value, \" for flag \").concat(flagName, \".\"));\n}\n/**\n * Returns the current environment (a global singleton).\n *\n * The environment object contains the evaluated feature values as well as the\n * active platform.\n *\n * @doc {heading: 'Environment'}\n */\n\n\nexport function env() {\n  return ENV;\n}\nexport var ENV = null;\nexport function setEnvironmentGlobal(environment) {\n  ENV = environment;\n}","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// Note that the identifier globalNameSpace is scoped to this module, but will\n// always resolve to the same global object regardless of how the module is\n// resolved.\n// tslint:disable-next-line:no-any\nvar globalNameSpace; // tslint:disable-next-line:no-any\n\nexport function getGlobalNamespace() {\n  if (globalNameSpace == null) {\n    // tslint:disable-next-line:no-any\n    var ns;\n\n    if (typeof window !== 'undefined') {\n      ns = window;\n    } else if (typeof global !== 'undefined') {\n      ns = global;\n    } else if (typeof process !== 'undefined') {\n      ns = process;\n    } else if (typeof self !== 'undefined') {\n      ns = self;\n    } else {\n      throw new Error('Could not find a global object');\n    }\n\n    globalNameSpace = ns;\n  }\n\n  return globalNameSpace;\n} // tslint:disable-next-line:no-any\n\nfunction getGlobalMap() {\n  var ns = getGlobalNamespace();\n\n  if (ns._tfGlobals == null) {\n    ns._tfGlobals = new Map();\n  }\n\n  return ns._tfGlobals;\n}\n/**\n * Returns a globally accessible 'singleton' object.\n *\n * @param key the name of the object\n * @param init a function to initialize to initialize this object\n *             the first time it is fetched.\n */\n\n\nexport function getGlobal(key, init) {\n  var globalMap = getGlobalMap();\n\n  if (globalMap.has(key)) {\n    return globalMap.get(key);\n  } else {\n    var singleton = init();\n    globalMap.set(key, singleton);\n    return globalMap.get(key);\n  }\n}","import _toConsumableArray from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from './engine';\nimport { Tensor, Variable } from './tensor';\nimport { convertToTensor, convertToTensorArray } from './tensor_util_env';\nimport * as util from './util';\n/**\n * Provided `f(x)`, returns another function `g(x, dy?)`, which gives the\n * gradient of `f(x)` with respect to `x`.\n *\n * If `dy` is provided, the gradient of `f(x).mul(dy).sum()` with respect to\n * `x` is computed instead. `f(x)` must take a single tensor `x` and return a\n * single tensor `y`. If `f()` takes multiple inputs, use `tf.grads` instead.\n *\n * ```js\n * // f(x) = x ^ 2\n * const f = x => x.square();\n * // f'(x) = 2x\n * const g = tf.grad(f);\n *\n * const x = tf.tensor1d([2, 3]);\n * g(x).print();\n * ```\n *\n * ```js\n * // f(x) = x ^ 3\n * const f = x => x.pow(tf.scalar(3, 'int32'));\n * // f'(x) = 3x ^ 2\n * const g = tf.grad(f);\n * // f''(x) = 6x\n * const gg = tf.grad(g);\n *\n * const x = tf.tensor1d([2, 3]);\n * gg(x).print();\n * ```\n *\n * @param f The function f(x), to compute gradient for.\n *\n * @doc {heading: 'Training', subheading: 'Gradients'}\n */\n\nfunction grad(f) {\n  util.assert(util.isFunction(f), function () {\n    return 'The f passed in grad(f) must be a function';\n  });\n  return function (x, dy) {\n    // x can be of any dtype, thus null as the last argument.\n    var $x = convertToTensor(x, 'x', 'tf.grad', 'string_or_numeric');\n    var $dy = dy != null ? convertToTensor(dy, 'dy', 'tf.grad') : null;\n    return ENGINE.tidy(function () {\n      var _ENGINE$gradients = ENGINE.gradients(function () {\n        return f($x);\n      }, [$x], $dy),\n          value = _ENGINE$gradients.value,\n          grads = _ENGINE$gradients.grads;\n\n      if ($dy != null) {\n        util.assertShapesMatch(value.shape, $dy.shape, 'The shape of dy passed in grad(f)(x, dy) must match the shape ' + 'returned by f(x)');\n      }\n\n      checkGrads(grads);\n      return grads[0];\n    });\n  };\n}\n/**\n * Provided `f(x1, x2,...)`, returns another function `g([x1, x2,...], dy?)`,\n * which gives an array of gradients of `f()` with respect to each input\n * [`x1`,`x2`,...].\n *\n * If `dy` is passed when calling `g()`, the gradient of\n * `f(x1,...).mul(dy).sum()` with respect to each input is computed instead.\n * The provided `f` must take one or more tensors and return a single tensor\n * `y`. If `f()` takes a single input, we recommend using `tf.grad` instead.\n *\n * ```js\n * // f(a, b) = a * b\n * const f = (a, b) => a.mul(b);\n * // df / da = b, df / db = a\n * const g = tf.grads(f);\n *\n * const a = tf.tensor1d([2, 3]);\n * const b = tf.tensor1d([-2, -3]);\n * const [da, db] = g([a, b]);\n * console.log('da');\n * da.print();\n * console.log('db');\n * db.print();\n * ```\n *\n * @param f The function `f(x1, x2,...)` to compute gradients for.\n *\n * @doc {heading: 'Training', subheading: 'Gradients'}\n */\n\n\nfunction grads(f) {\n  util.assert(util.isFunction(f), function () {\n    return 'The f passed in grads(f) must be a function';\n  });\n  return function (args, dy) {\n    util.assert(Array.isArray(args), function () {\n      return 'The args passed in grads(f)(args) must be an array ' + 'of `Tensor`s or `TensorLike`s';\n    }); // args can be of any dtype, thus null as the last argument.\n\n    var $args = convertToTensorArray(args, 'args', 'tf.grads', 'string_or_numeric');\n    var $dy = dy != null ? convertToTensor(dy, 'dy', 'tf.grads') : null;\n    return ENGINE.tidy(function () {\n      var _ENGINE$gradients2 = ENGINE.gradients(function () {\n        return f.apply(void 0, _toConsumableArray($args));\n      }, $args, $dy),\n          value = _ENGINE$gradients2.value,\n          grads = _ENGINE$gradients2.grads;\n\n      if ($dy != null) {\n        util.assertShapesMatch(value.shape, $dy.shape, 'The shape of dy passed in grads(f)([x1,...], dy) must ' + 'match the shape returned by f([x1,...])');\n      }\n\n      checkGrads(grads);\n      return grads;\n    });\n  };\n}\n/**\n * Like `tf.grad`, but also returns the value of `f()`. Useful when `f()`\n * returns a metric you want to show.\n *\n * The result is a rich object with the following properties:\n * - grad: The gradient of `f(x)` w.r.t `x` (result of `tf.grad`).\n * - value: The value returned by `f(x)`.\n *\n * ```js\n * // f(x) = x ^ 2\n * const f = x => x.square();\n * // f'(x) = 2x\n * const g = tf.valueAndGrad(f);\n *\n * const x = tf.tensor1d([2, 3]);\n * const {value, grad} = g(x);\n *\n * console.log('value');\n * value.print();\n * console.log('grad');\n * grad.print();\n * ```\n *\n * @doc {heading: 'Training', subheading: 'Gradients'}\n */\n\n\nfunction valueAndGrad(f) {\n  util.assert(util.isFunction(f), function () {\n    return 'The f passed in valueAndGrad(f) must be a function';\n  });\n  return function (x, dy) {\n    util.assert(x instanceof Tensor, function () {\n      return 'The x passed in valueAndGrad(f)(x) must be a tensor';\n    });\n    util.assert(dy == null || dy instanceof Tensor, function () {\n      return 'The dy passed in valueAndGrad(f)(x, dy) must be a tensor';\n    });\n\n    var _ENGINE$gradients3 = ENGINE.gradients(function () {\n      return f(x);\n    }, [x], dy),\n        grads = _ENGINE$gradients3.grads,\n        value = _ENGINE$gradients3.value;\n\n    checkGrads(grads);\n    return {\n      grad: grads[0],\n      value: value\n    };\n  };\n}\n/**\n * Like `tf.grads`, but returns also the value of `f()`. Useful when `f()`\n * returns a metric you want to show.\n *\n * The result is a rich object with the following properties:\n * - grads: The gradients of `f()` w.r.t each input (result of `tf.grads`).\n * - value: The value returned by `f(x)`.\n *\n * ```js\n * // f(a, b) = a * b\n * const f = (a, b) => a.mul(b);\n * // df/da = b, df/db = a\n * const g = tf.valueAndGrads(f);\n *\n * const a = tf.tensor1d([2, 3]);\n * const b = tf.tensor1d([-2, -3]);\n * const {value, grads} = g([a, b]);\n *\n * const [da, db] = grads;\n *\n * console.log('value');\n * value.print();\n *\n * console.log('da');\n * da.print();\n * console.log('db');\n * db.print();\n * ```\n *\n * @doc {heading: 'Training', subheading: 'Gradients'}\n */\n\n\nfunction valueAndGrads(f) {\n  util.assert(util.isFunction(f), function () {\n    return 'The f passed in valueAndGrads(f) must be a function';\n  });\n  return function (args, dy) {\n    util.assert(Array.isArray(args) && args.every(function (arg) {\n      return arg instanceof Tensor;\n    }), function () {\n      return 'The args passed in valueAndGrads(f)(args) must be array of ' + 'tensors';\n    });\n    util.assert(dy == null || dy instanceof Tensor, function () {\n      return 'The dy passed in valueAndGrads(f)(args, dy) must be a tensor';\n    });\n    var res = ENGINE.gradients(function () {\n      return f.apply(void 0, _toConsumableArray(args));\n    }, args, dy);\n\n    if (dy != null) {\n      util.assertShapesMatch(res.value.shape, dy.shape, 'The shape of dy passed in valueAndGrads(f)([x1,...], dy) must ' + 'match the shape returned by f([x1,...])');\n    }\n\n    checkGrads(res.grads);\n    return res;\n  };\n}\n/**\n * Computes and returns the gradient of f(x) with respect to the list of\n * trainable variables provided by `varList`. If no list is provided, it\n * defaults to all trainable variables.\n *\n * ```js\n * const a = tf.variable(tf.tensor1d([3, 4]));\n * const b = tf.variable(tf.tensor1d([5, 6]));\n * const x = tf.tensor1d([1, 2]);\n *\n * // f(a, b) = a * x ^ 2 + b * x\n * const f = () => a.mul(x.square()).add(b.mul(x)).sum();\n * // df/da = x ^ 2, df/db = x\n * const {value, grads} = tf.variableGrads(f);\n *\n * Object.keys(grads).forEach(varName => grads[varName].print());\n * ```\n *\n * @param f The function to execute. f() should return a scalar.\n * @param varList The list of variables to compute the gradients with respect\n *     to. Defaults to all trainable variables.\n * @returns An object with the following keys and values:\n *   - `value`: The value of the function `f`.\n *   - `grads`: A map from the names of the variables to the gradients.\n *     If the `varList` argument is provided explicitly and contains a subset of\n *     non-trainable variables, this map in the return value will contain keys\n *     that map the names of the non-trainable variables to `null`.\n *\n * @doc {heading: 'Training', subheading: 'Gradients'}\n */\n\n\nfunction variableGrads(f, varList) {\n  util.assert(util.isFunction(f), function () {\n    return 'The f passed in variableGrads(f) must be a function';\n  });\n  util.assert(varList == null || Array.isArray(varList) && varList.every(function (v) {\n    return v instanceof Variable;\n  }), function () {\n    return 'The varList passed in variableGrads(f, varList) must be an array ' + 'of variables';\n  });\n  var specifiedVarList = varList != null;\n\n  if (!specifiedVarList) {\n    // Get all of the trainable variables.\n    varList = [];\n\n    for (var varName in ENGINE.registeredVariables) {\n      varList.push(ENGINE.registeredVariables[varName]);\n    }\n  }\n\n  var specifiedNonTrainable = specifiedVarList ? varList.filter(function (variable) {\n    return !variable.trainable;\n  }) : null; // Prune non-trainable variables.\n\n  var originalVarCount = varList.length;\n  varList = varList.filter(function (variable) {\n    return variable.trainable;\n  });\n  util.assert(varList.length > 0, function () {\n    return \"variableGrads() expects at least one of the input variables to \" + \"be trainable, but none of the \".concat(originalVarCount, \" variables is \") + \"trainable.\";\n  });\n  var allowNoGradients = true;\n\n  var _ENGINE$gradients4 = ENGINE.gradients(f, varList, null, allowNoGradients),\n      value = _ENGINE$gradients4.value,\n      grads = _ENGINE$gradients4.grads;\n\n  util.assert(grads.some(function (g) {\n    return g != null;\n  }), function () {\n    return 'Cannot find a connection between any variable and the result of ' + 'the loss function y=f(x). Please make sure the operations that ' + 'use variables are inside the function f passed to minimize().';\n  });\n  util.assert(value.rank === 0, function () {\n    return \"The f passed in variableGrads(f) must return a scalar, but it \" + \"returned a rank-\".concat(value.rank, \" tensor\");\n  });\n  var namedGrads = {};\n  varList.forEach(function (v, i) {\n    if (grads[i] != null) {\n      namedGrads[v.name] = grads[i];\n    }\n  });\n\n  if (specifiedNonTrainable != null) {\n    // If varList is explicitly provided and contains non-trainable values,\n    // add them to the returned gradients with `null` values.\n    specifiedNonTrainable.forEach(function (v) {\n      return namedGrads[v.name] = null;\n    });\n  }\n\n  return {\n    value: value,\n    grads: namedGrads\n  };\n}\n/**\n * Overrides the gradient computation of a function `f`.\n *\n * Takes a function\n * `f(...inputs, save) => {value: Tensor, gradFunc: (dy, saved) => Tensor[]}`\n * and returns another function `g(...inputs)` which takes the same inputs as\n * `f`. When called, `g` returns `f().value`. In backward mode, custom gradients\n * with respect to each input of `f` are computed using `f().gradFunc`.\n *\n * The `save` function passsed to `f` should be used for saving tensors needed\n * in the gradient. And the `saved` passed to the `gradFunc` is a\n * `NamedTensorMap`, which contains those saved tensor.\n *\n * ```js\n * const customOp = tf.customGrad((x, save) => {\n *   // Save x to make sure it's available later for the gradient.\n *   save([x]);\n *   // Override gradient of our custom x ^ 2 op to be dy * abs(x);\n *   return {\n *     value: x.square(),\n *     // Note `saved.x` which points to the `x` we saved earlier.\n *     gradFunc: (dy, saved) => [dy.mul(saved[0].abs())]\n *   };\n * });\n *\n * const x = tf.tensor1d([-1, -2, 3]);\n * const dx = tf.grad(x => customOp(x));\n *\n * console.log(`f(x):`);\n * customOp(x).print();\n * console.log(`f'(x):`);\n * dx(x).print();\n * ```\n *\n * @param f The function to evaluate in forward mode, which should return\n *     `{value: Tensor, gradFunc: (dy, saved) => Tensor[]}`, where `gradFunc`\n *     returns the custom gradients of `f` with respect to its inputs.\n *\n * @doc {heading: 'Training', subheading: 'Gradients'}\n */\n\n\nfunction customGrad(f) {\n  return ENGINE.customGrad(f);\n}\n\nfunction checkGrads(grads) {\n  var numNullGradients = grads.filter(function (g) {\n    return g == null;\n  }).length;\n\n  if (numNullGradients > 0) {\n    throw new Error(\"Cannot compute gradient of y=f(x) with respect to x. Make sure that\\n    the f you passed encloses all operations that lead from x to y.\");\n  }\n}\n\nexport { customGrad, variableGrads, valueAndGrad, valueAndGrads, grad, grads };","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line:no-any\nfunction _isNavigatorDefined() {\n  return typeof navigator !== 'undefined' && navigator != null;\n}\n\nexport function isMobile(nav) {\n  if (nav || _isNavigatorDefined()) {\n    if (!nav) {\n      nav = navigator;\n    }\n\n    if (nav.product === 'ReactNative') {\n      return true;\n    } // tslint:disable-next-line:no-any\n\n\n    var a = nav.userAgent || nav.vendor || window.opera; // tslint:disable-next-line:max-line-length\n\n    return /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || // tslint:disable-next-line:max-line-length\n    /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4));\n  }\n\n  return false;\n}\nexport function isBrowser() {\n  return typeof window !== 'undefined' && window.document != null || //@ts-ignore\n  typeof WorkerGlobalScope !== 'undefined';\n}","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport './engine';\nimport * as device_util from './device_util';\nimport { env } from './environment';\nvar ENV = env();\n/**\n * This file contains environment-related flag registrations.\n */\n\n/** Whether to enable debug mode. */\n\nENV.registerFlag('DEBUG', function () {\n  return false;\n}, function (debugValue) {\n  if (debugValue) {\n    console.warn('Debugging mode is ON. The output of every math call will ' + 'be downloaded to CPU and checked for NaNs. ' + 'This significantly impacts performance.');\n  }\n});\n/** Whether we are in a browser (as versus, say, node.js) environment. */\n\nENV.registerFlag('IS_BROWSER', function () {\n  return device_util.isBrowser();\n});\n/** Whether we are in a browser (as versus, say, node.js) environment. */\n\nENV.registerFlag('IS_NODE', function () {\n  return typeof process !== 'undefined' && typeof process.versions !== 'undefined' && typeof process.versions.node !== 'undefined';\n});\n/** Whether this browser is Chrome. */\n\nENV.registerFlag('IS_CHROME', function () {\n  return typeof navigator !== 'undefined' && navigator != null && navigator.userAgent != null && /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\n});\n/**\n * True when the environment is \"production\" where we disable safety checks\n * to gain performance.\n */\n\nENV.registerFlag('PROD', function () {\n  return false;\n});\n/**\n * Whether to do sanity checks when inferring a shape from user-provided\n * values, used when creating a new tensor.\n */\n\nENV.registerFlag('TENSORLIKE_CHECK_SHAPE_CONSISTENCY', function () {\n  return ENV.getBool('DEBUG');\n});\n/** Whether deprecation warnings are enabled. */\n\nENV.registerFlag('DEPRECATION_WARNINGS_ENABLED', function () {\n  return true;\n});\n/** True if running unit tests. */\n\nENV.registerFlag('IS_TEST', function () {\n  return false;\n});\n/** Whether to check computation result for errors. */\n\nENV.registerFlag('CHECK_COMPUTATION_FOR_ERRORS', function () {\n  return true;\n});\n/** Whether the backend needs to wrap input to imageBitmap. */\n\nENV.registerFlag('WRAP_TO_IMAGEBITMAP', function () {\n  return false;\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { inferShape } from '../tensor_util_env';\nimport { makeTensor } from './tensor_ops_util';\n/**\n * Creates a `tf.Tensor` with the provided values, shape and dtype.\n *\n * ```js\n * // Pass an array of values to create a vector.\n * tf.tensor([1, 2, 3, 4]).print();\n * ```\n *\n * ```js\n * // Pass a nested array of values to make a matrix or a higher\n * // dimensional tensor.\n * tf.tensor([[1, 2], [3, 4]]).print();\n * ```\n *\n * ```js\n * // Pass a flat array and specify a shape yourself.\n * tf.tensor([1, 2, 3, 4], [2, 2]).print();\n * ```\n *\n * @param values The values of the tensor. Can be nested array of numbers,\n *     or a flat array, or a `TypedArray`. If the values are strings,\n *     they will be encoded as utf-8 and kept as `Uint8Array[]`.\n * @param shape The shape of the tensor. Optional. If not provided,\n *   it is inferred from `values`.\n * @param dtype The data type.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\n\nexport function tensor(values, shape, dtype) {\n  var inferredShape = inferShape(values, dtype);\n  return makeTensor(values, shape, inferredShape, dtype);\n}","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/* Type definitions for exporting and importing of models. */\n\n/**\n * A map from Tensor dtype to number of bytes per element of the Tensor.\n */\nexport var DTYPE_VALUE_SIZE_MAP = {\n  'float32': 4,\n  'float16': 2,\n  'int32': 4,\n  'uint16': 2,\n  'uint8': 1,\n  'bool': 1,\n  'complex64': 8\n};","import _asyncToGenerator from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _regeneratorRuntime from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/regenerator\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { complex } from '../ops/complex';\nimport { tensor } from '../ops/tensor';\nimport { sizeFromShape } from '../util';\nimport { DTYPE_VALUE_SIZE_MAP } from './types';\n/** Number of bytes reserved for the length of the string. (32bit integer). */\n\nvar NUM_BYTES_STRING_LENGTH = 4;\n/**\n * Encode a map from names to weight values as an ArrayBuffer, along with an\n * `Array` of `WeightsManifestEntry` as specification of the encoded weights.\n *\n * This function does not perform sharding.\n *\n * This function is the reverse of `decodeWeights`.\n *\n * @param tensors A map (\"dict\") from names to tensors.\n * @param group Group to which the weights belong (optional).\n * @returns A `Promise` of\n *   - A flat `ArrayBuffer` with all the binary values of the `Tensor`s\n *     concatenated.\n *   - An `Array` of `WeightManifestEntry`s, carrying information including\n *     tensor names, `dtype`s and shapes.\n * @throws Error: on unsupported tensor `dtype`.\n */\n\nexport function encodeWeights(_x, _x2) {\n  return _encodeWeights.apply(this, arguments);\n}\n/**\n * Decode flat ArrayBuffer as weights.\n *\n * This function does not handle sharding.\n *\n * This function is the reverse of `encodeWeights`.\n *\n * @param buffer A flat ArrayBuffer carrying the binary values of the tensors\n *   concatenated in the order specified in `specs`.\n * @param specs Specifications of the names, dtypes and shapes of the tensors\n *   whose value are encoded by `buffer`.\n * @return A map from tensor name to tensor value, with the names corresponding\n *   to names in `specs`.\n * @throws Error, if any of the tensors has unsupported dtype.\n */\n\nfunction _encodeWeights() {\n  _encodeWeights = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(tensors, group) {\n    var specs, dataPromises, names, _loop, i, tensorValues;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            // TODO(adarob, cais): Support quantization.\n            specs = [];\n            dataPromises = [];\n            names = Array.isArray(tensors) ? tensors.map(function (tensor) {\n              return tensor.name;\n            }) : Object.keys(tensors);\n\n            _loop = function _loop(i) {\n              var name = names[i];\n              var t = Array.isArray(tensors) ? tensors[i].tensor : tensors[name];\n\n              if (t.dtype !== 'float32' && t.dtype !== 'int32' && t.dtype !== 'bool' && t.dtype !== 'string' && t.dtype !== 'complex64') {\n                throw new Error(\"Unsupported dtype in weight '\".concat(name, \"': \").concat(t.dtype));\n              }\n\n              var spec = {\n                name: name,\n                shape: t.shape,\n                dtype: t.dtype\n              };\n\n              if (t.dtype === 'string') {\n                var utf8bytes = new Promise( /*#__PURE__*/function () {\n                  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(resolve) {\n                    var vals, totalNumBytes, bytes, offset, _i6, val, bytesOfLength;\n\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            _context.next = 2;\n                            return t.bytes();\n\n                          case 2:\n                            vals = _context.sent;\n                            totalNumBytes = vals.reduce(function (p, c) {\n                              return p + c.length;\n                            }, 0) + NUM_BYTES_STRING_LENGTH * vals.length;\n                            bytes = new Uint8Array(totalNumBytes);\n                            offset = 0;\n\n                            for (_i6 = 0; _i6 < vals.length; _i6++) {\n                              val = vals[_i6];\n                              bytesOfLength = new Uint8Array(new Uint32Array([val.length]).buffer);\n                              bytes.set(bytesOfLength, offset);\n                              offset += NUM_BYTES_STRING_LENGTH;\n                              bytes.set(val, offset);\n                              offset += val.length;\n                            }\n\n                            resolve(bytes);\n\n                          case 8:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  }));\n\n                  return function (_x3) {\n                    return _ref.apply(this, arguments);\n                  };\n                }());\n                dataPromises.push(utf8bytes);\n              } else {\n                dataPromises.push(t.data());\n              }\n\n              if (group != null) {\n                spec.group = group;\n              }\n\n              specs.push(spec);\n            };\n\n            for (i = 0; i < names.length; ++i) {\n              _loop(i);\n            }\n\n            _context2.next = 7;\n            return Promise.all(dataPromises);\n\n          case 7:\n            tensorValues = _context2.sent;\n            return _context2.abrupt(\"return\", {\n              data: concatenateTypedArrays(tensorValues),\n              specs: specs\n            });\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _encodeWeights.apply(this, arguments);\n}\n\nexport function decodeWeights(buffer, specs) {\n  // TODO(adarob, cais): Support quantization.\n  var out = {};\n  var float16Decode;\n  var offset = 0;\n\n  var _iterator = _createForOfIteratorHelper(specs),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var spec = _step.value;\n      var name = spec.name;\n      var dtype = spec.dtype;\n      var shape = spec.shape;\n      var size = sizeFromShape(shape);\n      var values = void 0;\n\n      if ('quantization' in spec) {\n        var quantization = spec.quantization;\n\n        if (quantization.dtype === 'uint8' || quantization.dtype === 'uint16') {\n          if (!('min' in quantization && 'scale' in quantization)) {\n            throw new Error(\"Weight \".concat(spec.name, \" with quantization \").concat(quantization.dtype, \" \") + \"doesn't have corresponding metadata min and scale.\");\n          }\n        } else if (quantization.dtype === 'float16') {\n          if (dtype !== 'float32') {\n            throw new Error(\"Weight \".concat(spec.name, \" is quantized with \").concat(quantization.dtype, \" \") + \"which only supports weights of type float32 not \".concat(dtype, \".\"));\n          }\n        } else {\n          throw new Error(\"Weight \".concat(spec.name, \" has unknown \") + \"quantization dtype \".concat(quantization.dtype, \". \") + \"Supported quantization dtypes are: \" + \"'uint8', 'uint16', and 'float16'.\");\n        }\n\n        var quantizationSizeFactor = DTYPE_VALUE_SIZE_MAP[quantization.dtype];\n        var byteBuffer = buffer.slice(offset, offset + size * quantizationSizeFactor);\n        var quantizedArray = quantization.dtype === 'uint8' ? new Uint8Array(byteBuffer) : new Uint16Array(byteBuffer);\n\n        if (dtype === 'float32') {\n          if (quantization.dtype === 'uint8' || quantization.dtype === 'uint16') {\n            values = new Float32Array(quantizedArray.length);\n\n            for (var i = 0; i < quantizedArray.length; i++) {\n              var v = quantizedArray[i];\n              values[i] = v * quantization.scale + quantization.min;\n            }\n          } else if (quantization.dtype === 'float16') {\n            if (float16Decode === undefined) {\n              float16Decode = getFloat16Decoder();\n            }\n\n            values = float16Decode(quantizedArray);\n          } else {\n            throw new Error(\"Unsupported quantization type \".concat(quantization.dtype, \" \") + \"for weight type float32.\");\n          }\n        } else if (dtype === 'int32') {\n          if (quantization.dtype !== 'uint8' && quantization.dtype !== 'uint16') {\n            throw new Error(\"Unsupported quantization type \".concat(quantization.dtype, \" \") + \"for weight type int32.\");\n          }\n\n          values = new Int32Array(quantizedArray.length);\n\n          for (var _i = 0; _i < quantizedArray.length; _i++) {\n            var _v = quantizedArray[_i];\n            values[_i] = Math.round(_v * quantization.scale + quantization.min);\n          }\n        } else {\n          throw new Error(\"Unsupported dtype in weight '\".concat(name, \"': \").concat(dtype));\n        }\n\n        offset += size * quantizationSizeFactor;\n      } else if (dtype === 'string') {\n        var _size = sizeFromShape(spec.shape);\n\n        values = [];\n\n        for (var _i2 = 0; _i2 < _size; _i2++) {\n          var byteLength = new Uint32Array(buffer.slice(offset, offset + NUM_BYTES_STRING_LENGTH))[0];\n          offset += NUM_BYTES_STRING_LENGTH;\n          var bytes = new Uint8Array(buffer.slice(offset, offset + byteLength));\n          values.push(bytes);\n          offset += byteLength;\n        }\n      } else {\n        var dtypeFactor = DTYPE_VALUE_SIZE_MAP[dtype];\n\n        var _byteBuffer = buffer.slice(offset, offset + size * dtypeFactor);\n\n        if (dtype === 'float32') {\n          values = new Float32Array(_byteBuffer);\n        } else if (dtype === 'int32') {\n          values = new Int32Array(_byteBuffer);\n        } else if (dtype === 'bool') {\n          values = new Uint8Array(_byteBuffer);\n        } else if (dtype === 'complex64') {\n          values = new Float32Array(_byteBuffer);\n          var real = new Float32Array(values.length / 2);\n          var image = new Float32Array(values.length / 2);\n\n          for (var _i3 = 0; _i3 < real.length; _i3++) {\n            real[_i3] = values[_i3 * 2];\n            image[_i3] = values[_i3 * 2 + 1];\n          }\n\n          var realTensor = tensor(real, shape, 'float32');\n          var imageTensor = tensor(image, shape, 'float32');\n          out[name] = complex(realTensor, imageTensor);\n          realTensor.dispose();\n          imageTensor.dispose();\n        } else {\n          throw new Error(\"Unsupported dtype in weight '\".concat(name, \"': \").concat(dtype));\n        }\n\n        offset += size * dtypeFactor;\n      }\n\n      if (dtype !== 'complex64') {\n        out[name] = tensor(values, shape, dtype);\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return out;\n}\n/**\n * Concatenate TypedArrays into an ArrayBuffer.\n */\n\nexport function concatenateTypedArrays(xs) {\n  // TODO(adarob, cais): Support quantization.\n  if (xs === null) {\n    throw new Error(\"Invalid input value: \".concat(JSON.stringify(xs)));\n  }\n\n  var totalByteLength = 0; // `normalizedXs` is here for this reason: a `TypedArray`'s `buffer'\n  // can have a different byte length from that of the `TypedArray` itself,\n  // for example, when the `TypedArray` is created from an offset in an\n  // `ArrayBuffer`. `normliazedXs` holds `TypedArray`s whose `buffer`s match\n  // the `TypedArray` in byte length. If an element of `xs` does not show\n  // this property, a new `TypedArray` that satisfy this property will be\n  // constructed and pushed into `normalizedXs`.\n\n  var normalizedXs = [];\n  xs.forEach(function (x) {\n    totalByteLength += x.byteLength; // tslint:disable:no-any\n\n    normalizedXs.push(x.byteLength === x.buffer.byteLength ? x : new x.constructor(x));\n\n    if (!(x instanceof Float32Array || x instanceof Int32Array || x instanceof Uint8Array)) {\n      throw new Error(\"Unsupported TypedArray subtype: \".concat(x.constructor.name));\n    } // tslint:enable:no-any\n\n  });\n  var y = new Uint8Array(totalByteLength);\n  var offset = 0;\n  normalizedXs.forEach(function (x) {\n    y.set(new Uint8Array(x.buffer), offset);\n    offset += x.byteLength;\n  });\n  return y.buffer;\n} // Use Buffer on Node.js instead of Blob/atob/btoa\n\nvar useNodeBuffer = typeof Buffer !== 'undefined' && (typeof Blob === 'undefined' || typeof atob === 'undefined' || typeof btoa === 'undefined');\n/**\n * Calculate the byte length of a JavaScript string.\n *\n * Note that a JavaScript string can contain wide characters, therefore the\n * length of the string is not necessarily equal to the byte length.\n *\n * @param str Input string.\n * @returns Byte length.\n */\n\nexport function stringByteLength(str) {\n  if (useNodeBuffer) {\n    return Buffer.byteLength(str);\n  }\n\n  return new Blob([str]).size;\n}\n/**\n * Encode an ArrayBuffer as a base64 encoded string.\n *\n * @param buffer `ArrayBuffer` to be converted.\n * @returns A string that base64-encodes `buffer`.\n */\n\nexport function arrayBufferToBase64String(buffer) {\n  if (useNodeBuffer) {\n    return Buffer.from(buffer).toString('base64');\n  }\n\n  var buf = new Uint8Array(buffer);\n  var s = '';\n\n  for (var i = 0, l = buf.length; i < l; i++) {\n    s += String.fromCharCode(buf[i]);\n  }\n\n  return btoa(s);\n}\n/**\n * Decode a base64 string as an ArrayBuffer.\n *\n * @param str Base64 string.\n * @returns Decoded `ArrayBuffer`.\n */\n\nexport function base64StringToArrayBuffer(str) {\n  if (useNodeBuffer) {\n    var buf = Buffer.from(str, 'base64');\n    return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n  }\n\n  var s = atob(str);\n  var buffer = new Uint8Array(s.length);\n\n  for (var i = 0; i < s.length; ++i) {\n    buffer.set([s.charCodeAt(i)], i);\n  }\n\n  return buffer.buffer;\n}\n/**\n * Concatenate a number of ArrayBuffers into one.\n *\n * @param buffers A number of array buffers to concatenate.\n * @returns Result of concatenating `buffers` in order.\n */\n\nexport function concatenateArrayBuffers(buffers) {\n  if (buffers.length === 1) {\n    return buffers[0];\n  }\n\n  var totalByteLength = 0;\n  buffers.forEach(function (buffer) {\n    totalByteLength += buffer.byteLength;\n  });\n  var temp = new Uint8Array(totalByteLength);\n  var offset = 0;\n  buffers.forEach(function (buffer) {\n    temp.set(new Uint8Array(buffer), offset);\n    offset += buffer.byteLength;\n  });\n  return temp.buffer;\n}\n/**\n * Get the basename of a path.\n *\n * Behaves in a way analogous to Linux's basename command.\n *\n * @param path\n */\n\nexport function basename(path) {\n  var SEPARATOR = '/';\n  path = path.trim();\n\n  while (path.endsWith(SEPARATOR)) {\n    path = path.slice(0, path.length - 1);\n  }\n\n  var items = path.split(SEPARATOR);\n  return items[items.length - 1];\n}\n/**\n * Populate ModelArtifactsInfo fields for a model with JSON topology.\n * @param modelArtifacts\n * @returns A ModelArtifactsInfo object.\n */\n\nexport function getModelArtifactsInfoForJSON(modelArtifacts) {\n  if (modelArtifacts.modelTopology instanceof ArrayBuffer) {\n    throw new Error('Expected JSON model topology, received ArrayBuffer.');\n  }\n\n  return {\n    dateSaved: new Date(),\n    modelTopologyType: 'JSON',\n    modelTopologyBytes: modelArtifacts.modelTopology == null ? 0 : stringByteLength(JSON.stringify(modelArtifacts.modelTopology)),\n    weightSpecsBytes: modelArtifacts.weightSpecs == null ? 0 : stringByteLength(JSON.stringify(modelArtifacts.weightSpecs)),\n    weightDataBytes: modelArtifacts.weightData == null ? 0 : modelArtifacts.weightData.byteLength\n  };\n}\n/**\n * Computes mantisa table for casting Float16 to Float32\n * See http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n *\n * @returns Uint32Array, 2048 mantissa lookup values.\n */\n\nfunction computeFloat16MantisaTable() {\n  var convertMantissa = function convertMantissa(i) {\n    var m = i << 13;\n    var e = 0;\n\n    while ((m & 0x00800000) === 0) {\n      e -= 0x00800000;\n      m <<= 1;\n    }\n\n    m &= ~0x00800000;\n    e += 0x38800000;\n    return m | e;\n  };\n\n  var mantisaTable = new Uint32Array(2048);\n  mantisaTable[0] = 0;\n\n  for (var i = 1; i < 1024; i++) {\n    mantisaTable[i] = convertMantissa(i);\n  }\n\n  for (var _i4 = 1024; _i4 < 2048; _i4++) {\n    mantisaTable[_i4] = 0x38000000 + (_i4 - 1024 << 13);\n  }\n\n  return mantisaTable;\n}\n/**\n * Computes exponent table for casting Float16 to Float32\n * See http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n *\n * @returns Uint32Array, 64 exponent lookup values.\n */\n\n\nfunction computeFloat16ExponentTable() {\n  var exponentTable = new Uint32Array(64);\n  exponentTable[0] = 0;\n  exponentTable[31] = 0x47800000;\n  exponentTable[32] = 0x80000000;\n  exponentTable[63] = 0xc7800000;\n\n  for (var i = 1; i < 31; i++) {\n    exponentTable[i] = i << 23;\n  }\n\n  for (var _i5 = 33; _i5 < 63; _i5++) {\n    exponentTable[_i5] = 0x80000000 + (_i5 - 32 << 23);\n  }\n\n  return exponentTable;\n}\n/**\n * Computes offset table for casting Float16 to Float32\n * See http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n *\n * @returns Uint32Array, 6d offset values.\n */\n\n\nfunction computeFloat16OffsetTable() {\n  var offsetTable = new Uint32Array(64);\n\n  for (var i = 0; i < 64; i++) {\n    offsetTable[i] = 1024;\n  }\n\n  offsetTable[0] = offsetTable[32] = 0;\n  return offsetTable;\n}\n/**\n * Retrieve a Float16 decoder which will decode a ByteArray of Float16 values\n * to a Float32Array.\n *\n * @returns Function (buffer: Uint16Array) => Float32Array which decodes\n *          the Uint16Array of Float16 bytes to a Float32Array.\n */\n\n\nexport function getFloat16Decoder() {\n  // Algorithm is based off of\n  // http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n  // Cache lookup tables\n  var mantisaTable = computeFloat16MantisaTable();\n  var exponentTable = computeFloat16ExponentTable();\n  var offsetTable = computeFloat16OffsetTable();\n  return function (quantizedArray) {\n    var buffer = new ArrayBuffer(4 * quantizedArray.length);\n    var bufferUint32View = new Uint32Array(buffer);\n\n    for (var index = 0; index < quantizedArray.length; index++) {\n      var float16Bits = quantizedArray[index];\n      var float32Bits = mantisaTable[offsetTable[float16Bits >> 10] + (float16Bits & 0x3ff)] + exponentTable[float16Bits >> 10];\n      bufferUint32View[index] = float32Bits;\n    }\n\n    return new Float32Array(buffer);\n  };\n}","import _classCallCheck from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var IORouterRegistry = /*#__PURE__*/function () {\n  function IORouterRegistry() {\n    _classCallCheck(this, IORouterRegistry);\n\n    this.saveRouters = [];\n    this.loadRouters = [];\n  }\n\n  _createClass(IORouterRegistry, null, [{\n    key: \"getInstance\",\n    value: function getInstance() {\n      if (IORouterRegistry.instance == null) {\n        IORouterRegistry.instance = new IORouterRegistry();\n      }\n\n      return IORouterRegistry.instance;\n    }\n    /**\n     * Register a save-handler router.\n     *\n     * @param saveRouter A function that maps a URL-like string onto an instance\n     * of `IOHandler` with the `save` method defined or `null`.\n     */\n\n  }, {\n    key: \"registerSaveRouter\",\n    value: function registerSaveRouter(saveRouter) {\n      IORouterRegistry.getInstance().saveRouters.push(saveRouter);\n    }\n    /**\n     * Register a load-handler router.\n     *\n     * @param loadRouter A function that maps a URL-like string onto an instance\n     * of `IOHandler` with the `load` method defined or `null`.\n     */\n\n  }, {\n    key: \"registerLoadRouter\",\n    value: function registerLoadRouter(loadRouter) {\n      IORouterRegistry.getInstance().loadRouters.push(loadRouter);\n    }\n    /**\n     * Look up IOHandler for saving, given a URL-like string.\n     *\n     * @param url\n     * @returns If only one match is found, an instance of IOHandler with the\n     * `save` method defined. If no match is found, `null`.\n     * @throws Error, if more than one match is found.\n     */\n\n  }, {\n    key: \"getSaveHandlers\",\n    value: function getSaveHandlers(url) {\n      return IORouterRegistry.getHandlers(url, 'save');\n    }\n    /**\n     * Look up IOHandler for loading, given a URL-like string.\n     *\n     * @param url\n     * @param loadOptions Optional, custom load options.\n     * @returns All valid handlers for `url`, given the currently registered\n     *   handler routers.\n     */\n\n  }, {\n    key: \"getLoadHandlers\",\n    value: function getLoadHandlers(url, loadOptions) {\n      return IORouterRegistry.getHandlers(url, 'load', loadOptions);\n    }\n  }, {\n    key: \"getHandlers\",\n    value: function getHandlers(url, handlerType, loadOptions) {\n      var validHandlers = [];\n      var routers = handlerType === 'load' ? IORouterRegistry.getInstance().loadRouters : IORouterRegistry.getInstance().saveRouters;\n      routers.forEach(function (router) {\n        var handler = router(url, loadOptions);\n\n        if (handler !== null) {\n          validHandlers.push(handler);\n        }\n      });\n      return validHandlers;\n    }\n  }]);\n\n  return IORouterRegistry;\n}();\nexport var registerSaveRouter = function registerSaveRouter(loudRouter) {\n  return IORouterRegistry.registerSaveRouter(loudRouter);\n};\nexport var registerLoadRouter = function registerLoadRouter(loudRouter) {\n  return IORouterRegistry.registerLoadRouter(loudRouter);\n};\nexport var getSaveHandlers = function getSaveHandlers(url) {\n  return IORouterRegistry.getSaveHandlers(url);\n};\nexport var getLoadHandlers = function getLoadHandlers(url, loadOptions) {\n  return IORouterRegistry.getLoadHandlers(url, loadOptions);\n};","import _classCallCheck from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _asyncToGenerator from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport _regeneratorRuntime from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/regenerator\";\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport '../flags';\nimport { env } from '../environment';\nimport { getModelArtifactsInfoForJSON } from './io_utils';\nimport { IORouterRegistry } from './router_registry';\nvar DATABASE_NAME = 'tensorflowjs';\nvar DATABASE_VERSION = 1; // Model data and ModelArtifactsInfo (metadata) are stored in two separate\n// stores for efficient access of the list of stored models and their metadata.\n// 1. The object store for model data: topology, weights and weight manifests.\n\nvar MODEL_STORE_NAME = 'models_store'; // 2. The object store for ModelArtifactsInfo, including meta-information such\n//    as the type of topology (JSON vs binary), byte size of the topology, byte\n//    size of the weights, etc.\n\nvar INFO_STORE_NAME = 'model_info_store';\n/**\n * Delete the entire database for tensorflow.js, including the models store.\n */\n\nexport function deleteDatabase() {\n  return _deleteDatabase.apply(this, arguments);\n}\n\nfunction _deleteDatabase() {\n  _deleteDatabase = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n    var idbFactory;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            idbFactory = getIndexedDBFactory();\n            return _context5.abrupt(\"return\", new Promise(function (resolve, reject) {\n              var deleteRequest = idbFactory.deleteDatabase(DATABASE_NAME);\n\n              deleteRequest.onsuccess = function () {\n                return resolve();\n              };\n\n              deleteRequest.onerror = function (error) {\n                return reject(error);\n              };\n            }));\n\n          case 2:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _deleteDatabase.apply(this, arguments);\n}\n\nfunction getIndexedDBFactory() {\n  if (!env().getBool('IS_BROWSER')) {\n    // TODO(cais): Add more info about what IOHandler subtypes are available.\n    //   Maybe point to a doc page on the web and/or automatically determine\n    //   the available IOHandlers and print them in the error message.\n    throw new Error('Failed to obtain IndexedDB factory because the current environment' + 'is not a web browser.');\n  } // tslint:disable-next-line:no-any\n\n\n  var theWindow = typeof window === 'undefined' ? self : window;\n  var factory = theWindow.indexedDB || theWindow.mozIndexedDB || theWindow.webkitIndexedDB || theWindow.msIndexedDB || theWindow.shimIndexedDB;\n\n  if (factory == null) {\n    throw new Error('The current browser does not appear to support IndexedDB.');\n  }\n\n  return factory;\n}\n\nfunction setUpDatabase(openRequest) {\n  var db = openRequest.result;\n  db.createObjectStore(MODEL_STORE_NAME, {\n    keyPath: 'modelPath'\n  });\n  db.createObjectStore(INFO_STORE_NAME, {\n    keyPath: 'modelPath'\n  });\n}\n/**\n * IOHandler subclass: Browser IndexedDB.\n *\n * See the doc string of `browserIndexedDB` for more details.\n */\n\n\nexport var BrowserIndexedDB = /*#__PURE__*/function () {\n  function BrowserIndexedDB(modelPath) {\n    _classCallCheck(this, BrowserIndexedDB);\n\n    this.indexedDB = getIndexedDBFactory();\n\n    if (modelPath == null || !modelPath) {\n      throw new Error('For IndexedDB, modelPath must not be null, undefined or empty.');\n    }\n\n    this.modelPath = modelPath;\n  }\n\n  _createClass(BrowserIndexedDB, [{\n    key: \"save\",\n    value: function () {\n      var _save = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(modelArtifacts) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(modelArtifacts.modelTopology instanceof ArrayBuffer)) {\n                  _context.next = 2;\n                  break;\n                }\n\n                throw new Error('BrowserLocalStorage.save() does not support saving model topology ' + 'in binary formats yet.');\n\n              case 2:\n                return _context.abrupt(\"return\", this.databaseAction(this.modelPath, modelArtifacts));\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function save(_x) {\n        return _save.apply(this, arguments);\n      }\n\n      return save;\n    }()\n  }, {\n    key: \"load\",\n    value: function () {\n      var _load = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", this.databaseAction(this.modelPath));\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function load() {\n        return _load.apply(this, arguments);\n      }\n\n      return load;\n    }()\n    /**\n     * Perform database action to put model artifacts into or read model artifacts\n     * from IndexedDB object store.\n     *\n     * Whether the action is put or get depends on whether `modelArtifacts` is\n     * specified. If it is specified, the action will be put; otherwise the action\n     * will be get.\n     *\n     * @param modelPath A unique string path for the model.\n     * @param modelArtifacts If specified, it will be the model artifacts to be\n     *   stored in IndexedDB.\n     * @returns A `Promise` of `SaveResult`, if the action is put, or a `Promise`\n     *   of `ModelArtifacts`, if the action is get.\n     */\n\n  }, {\n    key: \"databaseAction\",\n    value: function databaseAction(modelPath, modelArtifacts) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        var openRequest = _this.indexedDB.open(DATABASE_NAME, DATABASE_VERSION);\n\n        openRequest.onupgradeneeded = function () {\n          return setUpDatabase(openRequest);\n        };\n\n        openRequest.onsuccess = function () {\n          var db = openRequest.result;\n\n          if (modelArtifacts == null) {\n            // Read model out from object store.\n            var modelTx = db.transaction(MODEL_STORE_NAME, 'readonly');\n            var modelStore = modelTx.objectStore(MODEL_STORE_NAME);\n            var getRequest = modelStore.get(_this.modelPath);\n\n            getRequest.onsuccess = function () {\n              if (getRequest.result == null) {\n                db.close();\n                return reject(new Error(\"Cannot find model with path '\".concat(_this.modelPath, \"' \") + \"in IndexedDB.\"));\n              } else {\n                resolve(getRequest.result.modelArtifacts);\n              }\n            };\n\n            getRequest.onerror = function (error) {\n              db.close();\n              return reject(getRequest.error);\n            };\n\n            modelTx.oncomplete = function () {\n              return db.close();\n            };\n          } else {\n            // Put model into object store.\n            var modelArtifactsInfo = getModelArtifactsInfoForJSON(modelArtifacts); // First, put ModelArtifactsInfo into info store.\n\n            var infoTx = db.transaction(INFO_STORE_NAME, 'readwrite');\n            var infoStore = infoTx.objectStore(INFO_STORE_NAME);\n            var putInfoRequest = infoStore.put({\n              modelPath: _this.modelPath,\n              modelArtifactsInfo: modelArtifactsInfo\n            });\n\n            var _modelTx;\n\n            putInfoRequest.onsuccess = function () {\n              // Second, put model data into model store.\n              _modelTx = db.transaction(MODEL_STORE_NAME, 'readwrite');\n\n              var modelStore = _modelTx.objectStore(MODEL_STORE_NAME);\n\n              var putModelRequest = modelStore.put({\n                modelPath: _this.modelPath,\n                modelArtifacts: modelArtifacts,\n                modelArtifactsInfo: modelArtifactsInfo\n              });\n\n              putModelRequest.onsuccess = function () {\n                return resolve({\n                  modelArtifactsInfo: modelArtifactsInfo\n                });\n              };\n\n              putModelRequest.onerror = function (error) {\n                // If the put-model request fails, roll back the info entry as\n                // well.\n                infoStore = infoTx.objectStore(INFO_STORE_NAME);\n                var deleteInfoRequest = infoStore.delete(_this.modelPath);\n\n                deleteInfoRequest.onsuccess = function () {\n                  db.close();\n                  return reject(putModelRequest.error);\n                };\n\n                deleteInfoRequest.onerror = function (error) {\n                  db.close();\n                  return reject(putModelRequest.error);\n                };\n              };\n            };\n\n            putInfoRequest.onerror = function (error) {\n              db.close();\n              return reject(putInfoRequest.error);\n            };\n\n            infoTx.oncomplete = function () {\n              if (_modelTx == null) {\n                db.close();\n              } else {\n                _modelTx.oncomplete = function () {\n                  return db.close();\n                };\n              }\n            };\n          }\n        };\n\n        openRequest.onerror = function (error) {\n          return reject(openRequest.error);\n        };\n      });\n    }\n  }]);\n\n  return BrowserIndexedDB;\n}();\nBrowserIndexedDB.URL_SCHEME = 'indexeddb://';\nexport var indexedDBRouter = function indexedDBRouter(url) {\n  if (!env().getBool('IS_BROWSER')) {\n    return null;\n  } else {\n    if (!Array.isArray(url) && url.startsWith(BrowserIndexedDB.URL_SCHEME)) {\n      return browserIndexedDB(url.slice(BrowserIndexedDB.URL_SCHEME.length));\n    } else {\n      return null;\n    }\n  }\n};\nIORouterRegistry.registerSaveRouter(indexedDBRouter);\nIORouterRegistry.registerLoadRouter(indexedDBRouter);\n/**\n * Creates a browser IndexedDB IOHandler for saving and loading models.\n *\n * ```js\n * const model = tf.sequential();\n * model.add(\n *     tf.layers.dense({units: 1, inputShape: [100], activation: 'sigmoid'}));\n *\n * const saveResult = await model.save('indexeddb://MyModel'));\n * console.log(saveResult);\n * ```\n *\n * @param modelPath A unique identifier for the model to be saved. Must be a\n *   non-empty string.\n * @returns An instance of `BrowserIndexedDB` (sublcass of `IOHandler`),\n *   which can be used with, e.g., `tf.Model.save`.\n */\n\nexport function browserIndexedDB(modelPath) {\n  return new BrowserIndexedDB(modelPath);\n}\n\nfunction maybeStripScheme(key) {\n  return key.startsWith(BrowserIndexedDB.URL_SCHEME) ? key.slice(BrowserIndexedDB.URL_SCHEME.length) : key;\n}\n\nexport var BrowserIndexedDBManager = /*#__PURE__*/function () {\n  function BrowserIndexedDBManager() {\n    _classCallCheck(this, BrowserIndexedDBManager);\n\n    this.indexedDB = getIndexedDBFactory();\n  }\n\n  _createClass(BrowserIndexedDBManager, [{\n    key: \"listModels\",\n    value: function () {\n      var _listModels = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                return _context3.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  var openRequest = _this2.indexedDB.open(DATABASE_NAME, DATABASE_VERSION);\n\n                  openRequest.onupgradeneeded = function () {\n                    return setUpDatabase(openRequest);\n                  };\n\n                  openRequest.onsuccess = function () {\n                    var db = openRequest.result;\n                    var tx = db.transaction(INFO_STORE_NAME, 'readonly');\n                    var store = tx.objectStore(INFO_STORE_NAME); // tslint:disable:max-line-length\n                    // Need to cast `store` as `any` here because TypeScript's DOM\n                    // library does not have the `getAll()` method even though the\n                    // method is supported in the latest version of most mainstream\n                    // browsers:\n                    // https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore/getAll\n                    // tslint:enable:max-line-length\n                    // tslint:disable-next-line:no-any\n\n                    var getAllInfoRequest = store.getAll();\n\n                    getAllInfoRequest.onsuccess = function () {\n                      var out = {};\n\n                      var _iterator = _createForOfIteratorHelper(getAllInfoRequest.result),\n                          _step;\n\n                      try {\n                        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                          var item = _step.value;\n                          out[item.modelPath] = item.modelArtifactsInfo;\n                        }\n                      } catch (err) {\n                        _iterator.e(err);\n                      } finally {\n                        _iterator.f();\n                      }\n\n                      resolve(out);\n                    };\n\n                    getAllInfoRequest.onerror = function (error) {\n                      db.close();\n                      return reject(getAllInfoRequest.error);\n                    };\n\n                    tx.oncomplete = function () {\n                      return db.close();\n                    };\n                  };\n\n                  openRequest.onerror = function (error) {\n                    return reject(openRequest.error);\n                  };\n                }));\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function listModels() {\n        return _listModels.apply(this, arguments);\n      }\n\n      return listModels;\n    }()\n  }, {\n    key: \"removeModel\",\n    value: function () {\n      var _removeModel = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(path) {\n        var _this3 = this;\n\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                path = maybeStripScheme(path);\n                return _context4.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  var openRequest = _this3.indexedDB.open(DATABASE_NAME, DATABASE_VERSION);\n\n                  openRequest.onupgradeneeded = function () {\n                    return setUpDatabase(openRequest);\n                  };\n\n                  openRequest.onsuccess = function () {\n                    var db = openRequest.result;\n                    var infoTx = db.transaction(INFO_STORE_NAME, 'readwrite');\n                    var infoStore = infoTx.objectStore(INFO_STORE_NAME);\n                    var getInfoRequest = infoStore.get(path);\n                    var modelTx;\n\n                    getInfoRequest.onsuccess = function () {\n                      if (getInfoRequest.result == null) {\n                        db.close();\n                        return reject(new Error(\"Cannot find model with path '\".concat(path, \"' \") + \"in IndexedDB.\"));\n                      } else {\n                        // First, delete the entry in the info store.\n                        var deleteInfoRequest = infoStore.delete(path);\n\n                        var deleteModelData = function deleteModelData() {\n                          // Second, delete the entry in the model store.\n                          modelTx = db.transaction(MODEL_STORE_NAME, 'readwrite');\n                          var modelStore = modelTx.objectStore(MODEL_STORE_NAME);\n                          var deleteModelRequest = modelStore.delete(path);\n\n                          deleteModelRequest.onsuccess = function () {\n                            return resolve(getInfoRequest.result.modelArtifactsInfo);\n                          };\n\n                          deleteModelRequest.onerror = function (error) {\n                            return reject(getInfoRequest.error);\n                          };\n                        }; // Proceed with deleting model data regardless of whether deletion\n                        // of info data succeeds or not.\n\n\n                        deleteInfoRequest.onsuccess = deleteModelData;\n\n                        deleteInfoRequest.onerror = function (error) {\n                          deleteModelData();\n                          db.close();\n                          return reject(getInfoRequest.error);\n                        };\n                      }\n                    };\n\n                    getInfoRequest.onerror = function (error) {\n                      db.close();\n                      return reject(getInfoRequest.error);\n                    };\n\n                    infoTx.oncomplete = function () {\n                      if (modelTx == null) {\n                        db.close();\n                      } else {\n                        modelTx.oncomplete = function () {\n                          return db.close();\n                        };\n                      }\n                    };\n                  };\n\n                  openRequest.onerror = function (error) {\n                    return reject(openRequest.error);\n                  };\n                }));\n\n              case 2:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function removeModel(_x2) {\n        return _removeModel.apply(this, arguments);\n      }\n\n      return removeModel;\n    }()\n  }]);\n\n  return BrowserIndexedDBManager;\n}();","import _asyncToGenerator from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _regeneratorRuntime from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/regenerator\";\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport '../flags';\nimport { env } from '../environment';\nimport { assert } from '../util';\nimport { arrayBufferToBase64String, base64StringToArrayBuffer, getModelArtifactsInfoForJSON } from './io_utils';\nimport { IORouterRegistry } from './router_registry';\nvar PATH_SEPARATOR = '/';\nvar PATH_PREFIX = 'tensorflowjs_models';\nvar INFO_SUFFIX = 'info';\nvar MODEL_TOPOLOGY_SUFFIX = 'model_topology';\nvar WEIGHT_SPECS_SUFFIX = 'weight_specs';\nvar WEIGHT_DATA_SUFFIX = 'weight_data';\nvar MODEL_METADATA_SUFFIX = 'model_metadata';\n/**\n * Purge all tensorflow.js-saved model artifacts from local storage.\n *\n * @returns Paths of the models purged.\n */\n\nexport function purgeLocalStorageArtifacts() {\n  if (!env().getBool('IS_BROWSER') || typeof window === 'undefined' || typeof window.localStorage === 'undefined') {\n    throw new Error('purgeLocalStorageModels() cannot proceed because local storage is ' + 'unavailable in the current environment.');\n  }\n\n  var LS = window.localStorage;\n  var purgedModelPaths = [];\n\n  for (var i = 0; i < LS.length; ++i) {\n    var key = LS.key(i);\n    var prefix = PATH_PREFIX + PATH_SEPARATOR;\n\n    if (key.startsWith(prefix) && key.length > prefix.length) {\n      LS.removeItem(key);\n      var modelName = getModelPathFromKey(key);\n\n      if (purgedModelPaths.indexOf(modelName) === -1) {\n        purgedModelPaths.push(modelName);\n      }\n    }\n  }\n\n  return purgedModelPaths;\n}\n\nfunction getModelKeys(path) {\n  return {\n    info: [PATH_PREFIX, path, INFO_SUFFIX].join(PATH_SEPARATOR),\n    topology: [PATH_PREFIX, path, MODEL_TOPOLOGY_SUFFIX].join(PATH_SEPARATOR),\n    weightSpecs: [PATH_PREFIX, path, WEIGHT_SPECS_SUFFIX].join(PATH_SEPARATOR),\n    weightData: [PATH_PREFIX, path, WEIGHT_DATA_SUFFIX].join(PATH_SEPARATOR),\n    modelMetadata: [PATH_PREFIX, path, MODEL_METADATA_SUFFIX].join(PATH_SEPARATOR)\n  };\n}\n/**\n * Get model path from a local-storage key.\n *\n * E.g., 'tensorflowjs_models/my/model/1/info' --> 'my/model/1'\n *\n * @param key\n */\n\n\nfunction getModelPathFromKey(key) {\n  var items = key.split(PATH_SEPARATOR);\n\n  if (items.length < 3) {\n    throw new Error(\"Invalid key format: \".concat(key));\n  }\n\n  return items.slice(1, items.length - 1).join(PATH_SEPARATOR);\n}\n\nfunction maybeStripScheme(key) {\n  return key.startsWith(BrowserLocalStorage.URL_SCHEME) ? key.slice(BrowserLocalStorage.URL_SCHEME.length) : key;\n}\n/**\n * IOHandler subclass: Browser Local Storage.\n *\n * See the doc string to `browserLocalStorage` for more details.\n */\n\n\nexport var BrowserLocalStorage = /*#__PURE__*/function () {\n  function BrowserLocalStorage(modelPath) {\n    _classCallCheck(this, BrowserLocalStorage);\n\n    if (!env().getBool('IS_BROWSER') || typeof window === 'undefined' || typeof window.localStorage === 'undefined') {\n      // TODO(cais): Add more info about what IOHandler subtypes are\n      // available.\n      //   Maybe point to a doc page on the web and/or automatically determine\n      //   the available IOHandlers and print them in the error message.\n      throw new Error('The current environment does not support local storage.');\n    }\n\n    this.LS = window.localStorage;\n\n    if (modelPath == null || !modelPath) {\n      throw new Error('For local storage, modelPath must not be null, undefined or empty.');\n    }\n\n    this.modelPath = modelPath;\n    this.keys = getModelKeys(this.modelPath);\n  }\n  /**\n   * Save model artifacts to browser local storage.\n   *\n   * See the documentation to `browserLocalStorage` for details on the saved\n   * artifacts.\n   *\n   * @param modelArtifacts The model artifacts to be stored.\n   * @returns An instance of SaveResult.\n   */\n\n\n  _createClass(BrowserLocalStorage, [{\n    key: \"save\",\n    value: function () {\n      var _save = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(modelArtifacts) {\n        var topology, weightSpecs, modelArtifactsInfo, result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(modelArtifacts.modelTopology instanceof ArrayBuffer)) {\n                  _context.next = 4;\n                  break;\n                }\n\n                throw new Error('BrowserLocalStorage.save() does not support saving model topology ' + 'in binary formats yet.');\n\n              case 4:\n                topology = JSON.stringify(modelArtifacts.modelTopology);\n                weightSpecs = JSON.stringify(modelArtifacts.weightSpecs);\n                modelArtifactsInfo = getModelArtifactsInfoForJSON(modelArtifacts);\n                _context.prev = 7;\n                this.LS.setItem(this.keys.info, JSON.stringify(modelArtifactsInfo));\n                this.LS.setItem(this.keys.topology, topology);\n                this.LS.setItem(this.keys.weightSpecs, weightSpecs);\n                this.LS.setItem(this.keys.weightData, arrayBufferToBase64String(modelArtifacts.weightData));\n                result = {\n                  format: modelArtifacts.format,\n                  generatedBy: modelArtifacts.generatedBy,\n                  convertedBy: modelArtifacts.convertedBy\n                };\n\n                if (modelArtifacts.signature != null) {\n                  result.signature = modelArtifacts.signature;\n                }\n\n                if (modelArtifacts.userDefinedMetadata != null) {\n                  result.userDefinedMetadata = modelArtifacts.userDefinedMetadata;\n                }\n\n                if (modelArtifacts.modelInitializer != null) {\n                  result.modelInitializer = modelArtifacts.modelInitializer;\n                }\n\n                this.LS.setItem(this.keys.modelMetadata, JSON.stringify(result));\n                return _context.abrupt(\"return\", {\n                  modelArtifactsInfo: modelArtifactsInfo\n                });\n\n              case 20:\n                _context.prev = 20;\n                _context.t0 = _context[\"catch\"](7);\n                // If saving failed, clean up all items saved so far.\n                this.LS.removeItem(this.keys.info);\n                this.LS.removeItem(this.keys.topology);\n                this.LS.removeItem(this.keys.weightSpecs);\n                this.LS.removeItem(this.keys.weightData);\n                this.LS.removeItem(this.keys.modelMetadata);\n                throw new Error(\"Failed to save model '\".concat(this.modelPath, \"' to local storage: \") + \"size quota being exceeded is a possible cause of this failure: \" + \"modelTopologyBytes=\".concat(modelArtifactsInfo.modelTopologyBytes, \", \") + \"weightSpecsBytes=\".concat(modelArtifactsInfo.weightSpecsBytes, \", \") + \"weightDataBytes=\".concat(modelArtifactsInfo.weightDataBytes, \".\"));\n\n              case 28:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[7, 20]]);\n      }));\n\n      function save(_x) {\n        return _save.apply(this, arguments);\n      }\n\n      return save;\n    }()\n    /**\n     * Load a model from local storage.\n     *\n     * See the documentation to `browserLocalStorage` for details on the saved\n     * artifacts.\n     *\n     * @returns The loaded model (if loading succeeds).\n     */\n\n  }, {\n    key: \"load\",\n    value: function () {\n      var _load = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var info, out, topology, weightSpecs, metadataString, metadata, weightDataBase64;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                info = JSON.parse(this.LS.getItem(this.keys.info));\n\n                if (!(info == null)) {\n                  _context2.next = 3;\n                  break;\n                }\n\n                throw new Error(\"In local storage, there is no model with name '\".concat(this.modelPath, \"'\"));\n\n              case 3:\n                if (!(info.modelTopologyType !== 'JSON')) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                throw new Error('BrowserLocalStorage does not support loading non-JSON model ' + 'topology yet.');\n\n              case 5:\n                out = {}; // Load topology.\n\n                topology = JSON.parse(this.LS.getItem(this.keys.topology));\n\n                if (!(topology == null)) {\n                  _context2.next = 9;\n                  break;\n                }\n\n                throw new Error(\"In local storage, the topology of model '\".concat(this.modelPath, \"' \") + \"is missing.\");\n\n              case 9:\n                out.modelTopology = topology; // Load weight specs.\n\n                weightSpecs = JSON.parse(this.LS.getItem(this.keys.weightSpecs));\n\n                if (!(weightSpecs == null)) {\n                  _context2.next = 13;\n                  break;\n                }\n\n                throw new Error(\"In local storage, the weight specs of model '\".concat(this.modelPath, \"' \") + \"are missing.\");\n\n              case 13:\n                out.weightSpecs = weightSpecs; // Load meta-data fields.\n\n                metadataString = this.LS.getItem(this.keys.modelMetadata);\n\n                if (metadataString != null) {\n                  metadata = JSON.parse(metadataString);\n                  out.format = metadata['format'];\n                  out.generatedBy = metadata['generatedBy'];\n                  out.convertedBy = metadata['convertedBy'];\n\n                  if (metadata['signature'] != null) {\n                    out.signature = metadata['signature'];\n                  }\n\n                  if (metadata['userDefinedMetadata'] != null) {\n                    out.userDefinedMetadata = metadata['userDefinedMetadata'];\n                  }\n\n                  if (metadata['modelInitializer'] != null) {\n                    out.modelInitializer = metadata['modelInitializer'];\n                  }\n                } // Load weight data.\n\n\n                weightDataBase64 = this.LS.getItem(this.keys.weightData);\n\n                if (!(weightDataBase64 == null)) {\n                  _context2.next = 19;\n                  break;\n                }\n\n                throw new Error(\"In local storage, the binary weight values of model \" + \"'\".concat(this.modelPath, \"' are missing.\"));\n\n              case 19:\n                out.weightData = base64StringToArrayBuffer(weightDataBase64);\n                return _context2.abrupt(\"return\", out);\n\n              case 21:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function load() {\n        return _load.apply(this, arguments);\n      }\n\n      return load;\n    }()\n  }]);\n\n  return BrowserLocalStorage;\n}();\nBrowserLocalStorage.URL_SCHEME = 'localstorage://';\nexport var localStorageRouter = function localStorageRouter(url) {\n  if (!env().getBool('IS_BROWSER')) {\n    return null;\n  } else {\n    if (!Array.isArray(url) && url.startsWith(BrowserLocalStorage.URL_SCHEME)) {\n      return browserLocalStorage(url.slice(BrowserLocalStorage.URL_SCHEME.length));\n    } else {\n      return null;\n    }\n  }\n};\nIORouterRegistry.registerSaveRouter(localStorageRouter);\nIORouterRegistry.registerLoadRouter(localStorageRouter);\n/**\n * Factory function for local storage IOHandler.\n *\n * This `IOHandler` supports both `save` and `load`.\n *\n * For each model's saved artifacts, four items are saved to local storage.\n *   - `${PATH_SEPARATOR}/${modelPath}/info`: Contains meta-info about the\n *     model, such as date saved, type of the topology, size in bytes, etc.\n *   - `${PATH_SEPARATOR}/${modelPath}/topology`: Model topology. For Keras-\n *     style models, this is a stringized JSON.\n *   - `${PATH_SEPARATOR}/${modelPath}/weight_specs`: Weight specs of the\n *     model, can be used to decode the saved binary weight values (see\n *     item below).\n *   - `${PATH_SEPARATOR}/${modelPath}/weight_data`: Concatenated binary\n *     weight values, stored as a base64-encoded string.\n *\n * Saving may throw an `Error` if the total size of the artifacts exceed the\n * browser-specific quota.\n *\n * @param modelPath A unique identifier for the model to be saved. Must be a\n *   non-empty string.\n * @returns An instance of `IOHandler`, which can be used with, e.g.,\n *   `tf.Model.save`.\n */\n\nexport function browserLocalStorage(modelPath) {\n  return new BrowserLocalStorage(modelPath);\n}\nexport var BrowserLocalStorageManager = /*#__PURE__*/function () {\n  function BrowserLocalStorageManager() {\n    _classCallCheck(this, BrowserLocalStorageManager);\n\n    assert(env().getBool('IS_BROWSER'), function () {\n      return 'Current environment is not a web browser';\n    });\n    assert(typeof window === 'undefined' || typeof window.localStorage !== 'undefined', function () {\n      return 'Current browser does not appear to support localStorage';\n    });\n    this.LS = window.localStorage;\n  }\n\n  _createClass(BrowserLocalStorageManager, [{\n    key: \"listModels\",\n    value: function () {\n      var _listModels = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var out, prefix, suffix, i, key, modelPath;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                out = {};\n                prefix = PATH_PREFIX + PATH_SEPARATOR;\n                suffix = PATH_SEPARATOR + INFO_SUFFIX;\n\n                for (i = 0; i < this.LS.length; ++i) {\n                  key = this.LS.key(i);\n\n                  if (key.startsWith(prefix) && key.endsWith(suffix)) {\n                    modelPath = getModelPathFromKey(key);\n                    out[modelPath] = JSON.parse(this.LS.getItem(key));\n                  }\n                }\n\n                return _context3.abrupt(\"return\", out);\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function listModels() {\n        return _listModels.apply(this, arguments);\n      }\n\n      return listModels;\n    }()\n  }, {\n    key: \"removeModel\",\n    value: function () {\n      var _removeModel = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(path) {\n        var keys, info;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                path = maybeStripScheme(path);\n                keys = getModelKeys(path);\n\n                if (!(this.LS.getItem(keys.info) == null)) {\n                  _context4.next = 4;\n                  break;\n                }\n\n                throw new Error(\"Cannot find model at path '\".concat(path, \"'\"));\n\n              case 4:\n                info = JSON.parse(this.LS.getItem(keys.info));\n                this.LS.removeItem(keys.info);\n                this.LS.removeItem(keys.topology);\n                this.LS.removeItem(keys.weightSpecs);\n                this.LS.removeItem(keys.weightData);\n                return _context4.abrupt(\"return\", info);\n\n              case 10:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function removeModel(_x2) {\n        return _removeModel.apply(this, arguments);\n      }\n\n      return removeModel;\n    }()\n  }]);\n\n  return BrowserLocalStorageManager;\n}();","import _asyncToGenerator from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport _regeneratorRuntime from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/regenerator\";\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * Classes and functions for model management across multiple storage mediums.\n *\n * Supported client actions:\n * - Listing models on all registered storage mediums.\n * - Remove model by URL from any registered storage mediums, by using URL\n *   string.\n * - Moving or copying model from one path to another in the same medium or from\n *   one medium to another, by using URL strings.\n */\nimport { assert } from '../util';\nimport { IORouterRegistry } from './router_registry';\nvar URL_SCHEME_SUFFIX = '://';\nexport var ModelStoreManagerRegistry = /*#__PURE__*/function () {\n  function ModelStoreManagerRegistry() {\n    _classCallCheck(this, ModelStoreManagerRegistry);\n\n    this.managers = {};\n  }\n\n  _createClass(ModelStoreManagerRegistry, null, [{\n    key: \"getInstance\",\n    value: function getInstance() {\n      if (ModelStoreManagerRegistry.instance == null) {\n        ModelStoreManagerRegistry.instance = new ModelStoreManagerRegistry();\n      }\n\n      return ModelStoreManagerRegistry.instance;\n    }\n    /**\n     * Register a save-handler router.\n     *\n     * @param saveRouter A function that maps a URL-like string onto an instance\n     * of `IOHandler` with the `save` method defined or `null`.\n     */\n\n  }, {\n    key: \"registerManager\",\n    value: function registerManager(scheme, manager) {\n      assert(scheme != null, function () {\n        return 'scheme must not be undefined or null.';\n      });\n\n      if (scheme.endsWith(URL_SCHEME_SUFFIX)) {\n        scheme = scheme.slice(0, scheme.indexOf(URL_SCHEME_SUFFIX));\n      }\n\n      assert(scheme.length > 0, function () {\n        return 'scheme must not be an empty string.';\n      });\n      var registry = ModelStoreManagerRegistry.getInstance();\n      assert(registry.managers[scheme] == null, function () {\n        return \"A model store manager is already registered for scheme '\".concat(scheme, \"'.\");\n      });\n      registry.managers[scheme] = manager;\n    }\n  }, {\n    key: \"getManager\",\n    value: function getManager(scheme) {\n      var manager = this.getInstance().managers[scheme];\n\n      if (manager == null) {\n        throw new Error(\"Cannot find model manager for scheme '\".concat(scheme, \"'\"));\n      }\n\n      return manager;\n    }\n  }, {\n    key: \"getSchemes\",\n    value: function getSchemes() {\n      return Object.keys(this.getInstance().managers);\n    }\n  }]);\n\n  return ModelStoreManagerRegistry;\n}();\n/**\n * Helper method for parsing a URL string into a scheme and a path.\n *\n * @param url E.g., 'localstorage://my-model'\n * @returns A dictionary with two fields: scheme and path.\n *   Scheme: e.g., 'localstorage' in the example above.\n *   Path: e.g., 'my-model' in the example above.\n */\n\nfunction parseURL(url) {\n  if (url.indexOf(URL_SCHEME_SUFFIX) === -1) {\n    throw new Error(\"The url string provided does not contain a scheme. \" + \"Supported schemes are: \" + \"\".concat(ModelStoreManagerRegistry.getSchemes().join(',')));\n  }\n\n  return {\n    scheme: url.split(URL_SCHEME_SUFFIX)[0],\n    path: url.split(URL_SCHEME_SUFFIX)[1]\n  };\n}\n\nfunction cloneModelInternal(_x, _x2) {\n  return _cloneModelInternal.apply(this, arguments);\n}\n/**\n * List all models stored in registered storage mediums.\n *\n * For a web browser environment, the registered mediums are Local Storage and\n * IndexedDB.\n *\n * ```js\n * // First create and save a model.\n * const model = tf.sequential();\n * model.add(tf.layers.dense(\n *     {units: 1, inputShape: [10], activation: 'sigmoid'}));\n * await model.save('localstorage://demo/management/model1');\n *\n * // Then list existing models.\n * console.log(JSON.stringify(await tf.io.listModels()));\n *\n * // Delete the model.\n * await tf.io.removeModel('localstorage://demo/management/model1');\n *\n * // List models again.\n * console.log(JSON.stringify(await tf.io.listModels()));\n * ```\n *\n * @returns A `Promise` of a dictionary mapping URLs of existing models to\n * their model artifacts info. URLs include medium-specific schemes, e.g.,\n *   'indexeddb://my/model/1'. Model artifacts info include type of the\n * model's topology, byte sizes of the topology, weights, etc.\n *\n * @doc {\n *   heading: 'Models',\n *   subheading: 'Management',\n *   namespace: 'io',\n *   ignoreCI: true\n * }\n */\n\n\nfunction _cloneModelInternal() {\n  _cloneModelInternal = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(sourceURL, destURL) {\n    var deleteSource,\n        loadHandlers,\n        loadHandler,\n        saveHandlers,\n        saveHandler,\n        sourceScheme,\n        sourcePath,\n        sameMedium,\n        modelArtifacts,\n        saveResult,\n        _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            deleteSource = _args.length > 2 && _args[2] !== undefined ? _args[2] : false;\n            assert(sourceURL !== destURL, function () {\n              return \"Old path and new path are the same: '\".concat(sourceURL, \"'\");\n            });\n            loadHandlers = IORouterRegistry.getLoadHandlers(sourceURL);\n            assert(loadHandlers.length > 0, function () {\n              return \"Copying failed because no load handler is found for source URL \".concat(sourceURL, \".\");\n            });\n            assert(loadHandlers.length < 2, function () {\n              return \"Copying failed because more than one (\".concat(loadHandlers.length, \") \") + \"load handlers for source URL \".concat(sourceURL, \".\");\n            });\n            loadHandler = loadHandlers[0];\n            saveHandlers = IORouterRegistry.getSaveHandlers(destURL);\n            assert(saveHandlers.length > 0, function () {\n              return \"Copying failed because no save handler is found for destination \" + \"URL \".concat(destURL, \".\");\n            });\n            assert(saveHandlers.length < 2, function () {\n              return \"Copying failed because more than one (\".concat(loadHandlers.length, \") \") + \"save handlers for destination URL \".concat(destURL, \".\");\n            });\n            saveHandler = saveHandlers[0];\n            sourceScheme = parseURL(sourceURL).scheme;\n            sourcePath = parseURL(sourceURL).path;\n            sameMedium = sourceScheme === parseURL(sourceURL).scheme;\n            _context.next = 15;\n            return loadHandler.load();\n\n          case 15:\n            modelArtifacts = _context.sent;\n\n            if (!(deleteSource && sameMedium)) {\n              _context.next = 19;\n              break;\n            }\n\n            _context.next = 19;\n            return ModelStoreManagerRegistry.getManager(sourceScheme).removeModel(sourcePath);\n\n          case 19:\n            _context.next = 21;\n            return saveHandler.save(modelArtifacts);\n\n          case 21:\n            saveResult = _context.sent;\n\n            if (!(deleteSource && !sameMedium)) {\n              _context.next = 25;\n              break;\n            }\n\n            _context.next = 25;\n            return ModelStoreManagerRegistry.getManager(sourceScheme).removeModel(sourcePath);\n\n          case 25:\n            return _context.abrupt(\"return\", saveResult.modelArtifactsInfo);\n\n          case 26:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _cloneModelInternal.apply(this, arguments);\n}\n\nfunction listModels() {\n  return _listModels.apply(this, arguments);\n}\n/**\n * Remove a model specified by URL from a reigstered storage medium.\n *\n * ```js\n * // First create and save a model.\n * const model = tf.sequential();\n * model.add(tf.layers.dense(\n *     {units: 1, inputShape: [10], activation: 'sigmoid'}));\n * await model.save('localstorage://demo/management/model1');\n *\n * // Then list existing models.\n * console.log(JSON.stringify(await tf.io.listModels()));\n *\n * // Delete the model.\n * await tf.io.removeModel('localstorage://demo/management/model1');\n *\n * // List models again.\n * console.log(JSON.stringify(await tf.io.listModels()));\n * ```\n *\n * @param url A URL to a stored model, with a scheme prefix, e.g.,\n *   'localstorage://my-model-1', 'indexeddb://my/model/2'.\n * @returns ModelArtifactsInfo of the deleted model (if and only if deletion\n *   is successful).\n * @throws Error if deletion fails, e.g., if no model exists at `path`.\n *\n * @doc {\n *   heading: 'Models',\n *   subheading: 'Management',\n *   namespace: 'io',\n *   ignoreCI: true\n * }\n */\n\n\nfunction _listModels() {\n  _listModels = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var schemes, out, _iterator, _step, scheme, schemeOut, path, url;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            schemes = ModelStoreManagerRegistry.getSchemes();\n            out = {};\n            _iterator = _createForOfIteratorHelper(schemes);\n            _context2.prev = 3;\n\n            _iterator.s();\n\n          case 5:\n            if ((_step = _iterator.n()).done) {\n              _context2.next = 13;\n              break;\n            }\n\n            scheme = _step.value;\n            _context2.next = 9;\n            return ModelStoreManagerRegistry.getManager(scheme).listModels();\n\n          case 9:\n            schemeOut = _context2.sent;\n\n            for (path in schemeOut) {\n              url = scheme + URL_SCHEME_SUFFIX + path;\n              out[url] = schemeOut[path];\n            }\n\n          case 11:\n            _context2.next = 5;\n            break;\n\n          case 13:\n            _context2.next = 18;\n            break;\n\n          case 15:\n            _context2.prev = 15;\n            _context2.t0 = _context2[\"catch\"](3);\n\n            _iterator.e(_context2.t0);\n\n          case 18:\n            _context2.prev = 18;\n\n            _iterator.f();\n\n            return _context2.finish(18);\n\n          case 21:\n            return _context2.abrupt(\"return\", out);\n\n          case 22:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[3, 15, 18, 21]]);\n  }));\n  return _listModels.apply(this, arguments);\n}\n\nfunction removeModel(_x3) {\n  return _removeModel.apply(this, arguments);\n}\n/**\n * Copy a model from one URL to another.\n *\n * This function supports:\n *\n * 1. Copying within a storage medium, e.g.,\n *    `tf.io.copyModel('localstorage://model-1', 'localstorage://model-2')`\n * 2. Copying between two storage mediums, e.g.,\n *    `tf.io.copyModel('localstorage://model-1', 'indexeddb://model-1')`\n *\n * ```js\n * // First create and save a model.\n * const model = tf.sequential();\n * model.add(tf.layers.dense(\n *     {units: 1, inputShape: [10], activation: 'sigmoid'}));\n * await model.save('localstorage://demo/management/model1');\n *\n * // Then list existing models.\n * console.log(JSON.stringify(await tf.io.listModels()));\n *\n * // Copy the model, from Local Storage to IndexedDB.\n * await tf.io.copyModel(\n *     'localstorage://demo/management/model1',\n *     'indexeddb://demo/management/model1');\n *\n * // List models again.\n * console.log(JSON.stringify(await tf.io.listModels()));\n *\n * // Remove both models.\n * await tf.io.removeModel('localstorage://demo/management/model1');\n * await tf.io.removeModel('indexeddb://demo/management/model1');\n * ```\n *\n * @param sourceURL Source URL of copying.\n * @param destURL Destination URL of copying.\n * @returns ModelArtifactsInfo of the copied model (if and only if copying\n *   is successful).\n * @throws Error if copying fails, e.g., if no model exists at `sourceURL`, or\n *   if `oldPath` and `newPath` are identical.\n *\n * @doc {\n *   heading: 'Models',\n *   subheading: 'Management',\n *   namespace: 'io',\n *   ignoreCI: true\n * }\n */\n\n\nfunction _removeModel() {\n  _removeModel = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(url) {\n    var schemeAndPath, manager;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            schemeAndPath = parseURL(url);\n            manager = ModelStoreManagerRegistry.getManager(schemeAndPath.scheme);\n            return _context3.abrupt(\"return\", manager.removeModel(schemeAndPath.path));\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _removeModel.apply(this, arguments);\n}\n\nfunction copyModel(_x4, _x5) {\n  return _copyModel.apply(this, arguments);\n}\n/**\n * Move a model from one URL to another.\n *\n * This function supports:\n *\n * 1. Moving within a storage medium, e.g.,\n *    `tf.io.moveModel('localstorage://model-1', 'localstorage://model-2')`\n * 2. Moving between two storage mediums, e.g.,\n *    `tf.io.moveModel('localstorage://model-1', 'indexeddb://model-1')`\n *\n * ```js\n * // First create and save a model.\n * const model = tf.sequential();\n * model.add(tf.layers.dense(\n *     {units: 1, inputShape: [10], activation: 'sigmoid'}));\n * await model.save('localstorage://demo/management/model1');\n *\n * // Then list existing models.\n * console.log(JSON.stringify(await tf.io.listModels()));\n *\n * // Move the model, from Local Storage to IndexedDB.\n * await tf.io.moveModel(\n *     'localstorage://demo/management/model1',\n *     'indexeddb://demo/management/model1');\n *\n * // List models again.\n * console.log(JSON.stringify(await tf.io.listModels()));\n *\n * // Remove the moved model.\n * await tf.io.removeModel('indexeddb://demo/management/model1');\n * ```\n *\n * @param sourceURL Source URL of moving.\n * @param destURL Destination URL of moving.\n * @returns ModelArtifactsInfo of the copied model (if and only if copying\n *   is successful).\n * @throws Error if moving fails, e.g., if no model exists at `sourceURL`, or\n *   if `oldPath` and `newPath` are identical.\n *\n * @doc {\n *   heading: 'Models',\n *   subheading: 'Management',\n *   namespace: 'io',\n *   ignoreCI: true\n * }\n */\n\n\nfunction _copyModel() {\n  _copyModel = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(sourceURL, destURL) {\n    var deleteSource;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            deleteSource = false;\n            return _context4.abrupt(\"return\", cloneModelInternal(sourceURL, destURL, deleteSource));\n\n          case 2:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _copyModel.apply(this, arguments);\n}\n\nfunction moveModel(_x6, _x7) {\n  return _moveModel.apply(this, arguments);\n}\n\nfunction _moveModel() {\n  _moveModel = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(sourceURL, destURL) {\n    var deleteSource;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            deleteSource = true;\n            return _context5.abrupt(\"return\", cloneModelInternal(sourceURL, destURL, deleteSource));\n\n          case 2:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _moveModel.apply(this, arguments);\n}\n\nexport { moveModel, copyModel, removeModel, listModels };","import _classCallCheck from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport '../flags';\nimport { env } from '../environment';\nimport { BrowserIndexedDB, BrowserIndexedDBManager } from '../io/indexed_db';\nimport { BrowserLocalStorage, BrowserLocalStorageManager } from '../io/local_storage';\nimport { ModelStoreManagerRegistry } from '../io/model_management';\nexport var PlatformBrowser = /*#__PURE__*/function () {\n  function PlatformBrowser() {\n    _classCallCheck(this, PlatformBrowser);\n  }\n\n  _createClass(PlatformBrowser, [{\n    key: \"fetch\",\n    value: function (_fetch) {\n      function fetch(_x, _x2) {\n        return _fetch.apply(this, arguments);\n      }\n\n      fetch.toString = function () {\n        return _fetch.toString();\n      };\n\n      return fetch;\n    }(function (path, init) {\n      return fetch(path, init);\n    })\n  }, {\n    key: \"now\",\n    value: function now() {\n      return performance.now();\n    }\n  }, {\n    key: \"encode\",\n    value: function encode(text, encoding) {\n      if (encoding !== 'utf-8' && encoding !== 'utf8') {\n        throw new Error(\"Browser's encoder only supports utf-8, but got \".concat(encoding));\n      }\n\n      if (this.textEncoder == null) {\n        this.textEncoder = new TextEncoder();\n      }\n\n      return this.textEncoder.encode(text);\n    }\n  }, {\n    key: \"decode\",\n    value: function decode(bytes, encoding) {\n      return new TextDecoder(encoding).decode(bytes);\n    }\n  }]);\n\n  return PlatformBrowser;\n}();\n\nif (env().get('IS_BROWSER')) {\n  env().setPlatform('browser', new PlatformBrowser()); // Register LocalStorage IOHandler\n\n  try {\n    ModelStoreManagerRegistry.registerManager(BrowserLocalStorage.URL_SCHEME, new BrowserLocalStorageManager());\n  } catch (err) {} // Register IndexedDB IOHandler\n\n\n  try {\n    ModelStoreManagerRegistry.registerManager(BrowserIndexedDB.URL_SCHEME, new BrowserIndexedDBManager());\n  } catch (err) {}\n}","import _classCallCheck from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env } from '../environment'; // We are wrapping this within an object so it can be stubbed by Jasmine.\n\nexport var getNodeFetch = {\n  // tslint:disable-next-line:no-require-imports\n  importFetch: function importFetch() {\n    return require('node-fetch');\n  }\n};\nvar systemFetch; // These getters and setters are for testing so we don't export a mutable\n// variable.\n\nexport function resetSystemFetch() {\n  systemFetch = null;\n}\nexport function setSystemFetch(fetchFn) {\n  systemFetch = fetchFn;\n}\nexport function getSystemFetch() {\n  return systemFetch;\n}\nexport var PlatformNode = /*#__PURE__*/function () {\n  function PlatformNode() {\n    _classCallCheck(this, PlatformNode);\n\n    // tslint:disable-next-line:no-require-imports\n    this.util = require('util'); // According to the spec, the built-in encoder can do only UTF-8 encoding.\n    // https://developer.mozilla.org/en-US/docs/Web/API/TextEncoder/TextEncoder\n\n    this.textEncoder = new this.util.TextEncoder();\n  }\n\n  _createClass(PlatformNode, [{\n    key: \"fetch\",\n    value: function fetch(path, requestInits) {\n      if (env().global.fetch != null) {\n        return env().global.fetch(path, requestInits);\n      }\n\n      if (systemFetch == null) {\n        systemFetch = getNodeFetch.importFetch();\n      }\n\n      return systemFetch(path, requestInits);\n    }\n  }, {\n    key: \"now\",\n    value: function now() {\n      var time = process.hrtime();\n      return time[0] * 1000 + time[1] / 1000000;\n    }\n  }, {\n    key: \"encode\",\n    value: function encode(text, encoding) {\n      if (encoding !== 'utf-8' && encoding !== 'utf8') {\n        throw new Error(\"Node built-in encoder only supports utf-8, but got \".concat(encoding));\n      }\n\n      return this.textEncoder.encode(text);\n    }\n  }, {\n    key: \"decode\",\n    value: function decode(bytes, encoding) {\n      if (bytes.length === 0) {\n        return '';\n      }\n\n      return new this.util.TextDecoder(encoding).decode(bytes);\n    }\n  }]);\n\n  return PlatformNode;\n}();\n\nif (env().get('IS_NODE')) {\n  env().setPlatform('node', new PlatformNode());\n}","/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { TensorBuffer } from '../tensor';\nimport * as util from '../util';\n/**\n * Creates an empty `tf.TensorBuffer` with the specified `shape` and `dtype`.\n *\n * The values are stored in CPU as `TypedArray`. Fill the buffer using\n * `buffer.set()`, or by modifying directly `buffer.values`.\n *\n * When done, call `buffer.toTensor()` to get an immutable `tf.Tensor` with\n * those values.\n *\n * ```js\n * // Create a buffer and set values at particular indices.\n * const buffer = tf.buffer([2, 2]);\n * buffer.set(3, 0, 0);\n * buffer.set(5, 1, 0);\n *\n * // Convert the buffer back to a tensor.\n * buffer.toTensor().print();\n * ```\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param dtype The dtype of the buffer. Defaults to 'float32'.\n * @param values The values of the buffer as `TypedArray`. Defaults to\n * zeros.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\n\nexport function buffer(shape) {\n  var dtype = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'float32';\n  var values = arguments.length > 2 ? arguments[2] : undefined;\n  dtype = dtype || 'float32';\n  util.assertNonNegativeIntegerDimensions(shape);\n  return new TensorBuffer(shape, dtype, values);\n}","/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * Prints information about the `tf.Tensor` including its data.\n *\n * ```js\n * const verbose = true;\n * tf.tensor2d([1, 2, 3, 4], [2, 2]).print(verbose);\n * ```\n * @param x The tensor to be printed.\n * @param verbose Whether to print verbose information about the ` Tensor`,\n * including dtype and size.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nexport function print(x) {\n  var verbose = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  console.log(x.toString(verbose));\n}","/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// Required side effectful code for tfjs-core\n// Set up Engine and ENV\nimport { getOrMakeEngine } from './engine';\ngetOrMakeEngine(); // Register backend-agnostic flags.\n\nimport './flags'; // Register platforms\n\nimport './platforms/platform_browser';\nimport './platforms/platform_node'; // Set up OpHandler\n\nimport { buffer } from './ops/buffer';\nimport { cast } from './ops/cast';\nimport { clone } from './ops/clone';\nimport { print } from './ops/print';\nimport { setOpHandler } from './tensor';\nvar opHandler = {\n  buffer: buffer,\n  cast: cast,\n  clone: clone,\n  print: print\n};\nsetOpHandler(opHandler);","import _toConsumableArray from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport _regeneratorRuntime from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/regenerator\";\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * IOHandlers related to files, such as browser-triggered file downloads,\n * user-selected files in browser.\n */\nimport '../flags';\nimport { env } from '../environment';\nimport { basename, concatenateArrayBuffers, getModelArtifactsInfoForJSON } from './io_utils';\nimport { IORouterRegistry } from './router_registry';\nvar DEFAULT_FILE_NAME_PREFIX = 'model';\nvar DEFAULT_JSON_EXTENSION_NAME = '.json';\nvar DEFAULT_WEIGHT_DATA_EXTENSION_NAME = '.weights.bin';\n\nfunction defer(f) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve);\n  }).then(f);\n}\n\nexport var BrowserDownloads = /*#__PURE__*/function () {\n  function BrowserDownloads(fileNamePrefix) {\n    _classCallCheck(this, BrowserDownloads);\n\n    if (!env().getBool('IS_BROWSER')) {\n      // TODO(cais): Provide info on what IOHandlers are available under the\n      //   current environment.\n      throw new Error('browserDownloads() cannot proceed because the current environment ' + 'is not a browser.');\n    }\n\n    if (fileNamePrefix.startsWith(BrowserDownloads.URL_SCHEME)) {\n      fileNamePrefix = fileNamePrefix.slice(BrowserDownloads.URL_SCHEME.length);\n    }\n\n    if (fileNamePrefix == null || fileNamePrefix.length === 0) {\n      fileNamePrefix = DEFAULT_FILE_NAME_PREFIX;\n    }\n\n    this.modelTopologyFileName = fileNamePrefix + DEFAULT_JSON_EXTENSION_NAME;\n    this.weightDataFileName = fileNamePrefix + DEFAULT_WEIGHT_DATA_EXTENSION_NAME;\n  }\n\n  _createClass(BrowserDownloads, [{\n    key: \"save\",\n    value: function () {\n      var _save = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(modelArtifacts) {\n        var weightsURL, weightsManifest, modelTopologyAndWeightManifest, modelTopologyAndWeightManifestURL, jsonAnchor, weightDataAnchor;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(typeof document === 'undefined')) {\n                  _context.next = 2;\n                  break;\n                }\n\n                throw new Error('Browser downloads are not supported in ' + 'this environment since `document` is not present');\n\n              case 2:\n                weightsURL = window.URL.createObjectURL(new Blob([modelArtifacts.weightData], {\n                  type: 'application/octet-stream'\n                }));\n\n                if (!(modelArtifacts.modelTopology instanceof ArrayBuffer)) {\n                  _context.next = 7;\n                  break;\n                }\n\n                throw new Error('BrowserDownloads.save() does not support saving model topology ' + 'in binary formats yet.');\n\n              case 7:\n                weightsManifest = [{\n                  paths: ['./' + this.weightDataFileName],\n                  weights: modelArtifacts.weightSpecs\n                }];\n                modelTopologyAndWeightManifest = {\n                  modelTopology: modelArtifacts.modelTopology,\n                  format: modelArtifacts.format,\n                  generatedBy: modelArtifacts.generatedBy,\n                  convertedBy: modelArtifacts.convertedBy,\n                  weightsManifest: weightsManifest\n                };\n\n                if (modelArtifacts.signature != null) {\n                  modelTopologyAndWeightManifest.signature = modelArtifacts.signature;\n                }\n\n                if (modelArtifacts.userDefinedMetadata != null) {\n                  modelTopologyAndWeightManifest.userDefinedMetadata = modelArtifacts.userDefinedMetadata;\n                }\n\n                if (modelArtifacts.modelInitializer != null) {\n                  modelTopologyAndWeightManifest.modelInitializer = modelArtifacts.modelInitializer;\n                }\n\n                modelTopologyAndWeightManifestURL = window.URL.createObjectURL(new Blob([JSON.stringify(modelTopologyAndWeightManifest)], {\n                  type: 'application/json'\n                })); // If anchor elements are not provided, create them without attaching them\n                // to parents, so that the downloaded file names can be controlled.\n\n                jsonAnchor = this.jsonAnchor == null ? document.createElement('a') : this.jsonAnchor;\n                jsonAnchor.download = this.modelTopologyFileName;\n                jsonAnchor.href = modelTopologyAndWeightManifestURL; // Trigger downloads by evoking a click event on the download anchors.\n                // When multiple downloads are started synchronously, Firefox will only\n                // save the last one.\n\n                _context.next = 18;\n                return defer(function () {\n                  return jsonAnchor.dispatchEvent(new MouseEvent('click'));\n                });\n\n              case 18:\n                if (!(modelArtifacts.weightData != null)) {\n                  _context.next = 24;\n                  break;\n                }\n\n                weightDataAnchor = this.weightDataAnchor == null ? document.createElement('a') : this.weightDataAnchor;\n                weightDataAnchor.download = this.weightDataFileName;\n                weightDataAnchor.href = weightsURL;\n                _context.next = 24;\n                return defer(function () {\n                  return weightDataAnchor.dispatchEvent(new MouseEvent('click'));\n                });\n\n              case 24:\n                return _context.abrupt(\"return\", {\n                  modelArtifactsInfo: getModelArtifactsInfoForJSON(modelArtifacts)\n                });\n\n              case 25:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function save(_x) {\n        return _save.apply(this, arguments);\n      }\n\n      return save;\n    }()\n  }]);\n\n  return BrowserDownloads;\n}();\nBrowserDownloads.URL_SCHEME = 'downloads://';\n\nvar BrowserFiles = /*#__PURE__*/function () {\n  function BrowserFiles(files) {\n    _classCallCheck(this, BrowserFiles);\n\n    if (files == null || files.length < 1) {\n      throw new Error(\"When calling browserFiles, at least 1 file is required, \" + \"but received \".concat(files));\n    }\n\n    this.files = files;\n  }\n\n  _createClass(BrowserFiles, [{\n    key: \"load\",\n    value: function () {\n      var _load = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _this = this;\n\n        var jsonFile, weightFiles;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                jsonFile = this.files[0];\n                weightFiles = this.files.slice(1);\n                return _context2.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  var jsonReader = new FileReader();\n\n                  jsonReader.onload = function (event) {\n                    // tslint:disable-next-line:no-any\n                    var modelJSON = JSON.parse(event.target.result);\n                    var modelTopology = modelJSON.modelTopology;\n\n                    if (modelTopology == null) {\n                      reject(new Error(\"modelTopology field is missing from file \".concat(jsonFile.name)));\n                      return;\n                    }\n\n                    if (weightFiles.length === 0) {\n                      resolve({\n                        modelTopology: modelTopology\n                      });\n                    }\n\n                    var weightsManifest = modelJSON.weightsManifest;\n\n                    if (weightsManifest == null) {\n                      reject(new Error(\"weightManifest field is missing from file \".concat(jsonFile.name)));\n                      return;\n                    }\n\n                    var pathToFile;\n\n                    try {\n                      pathToFile = _this.checkManifestAndWeightFiles(weightsManifest, weightFiles);\n                    } catch (err) {\n                      reject(err);\n                      return;\n                    }\n\n                    var weightSpecs = [];\n                    var paths = [];\n                    var perFileBuffers = [];\n                    weightsManifest.forEach(function (weightsGroup) {\n                      weightsGroup.paths.forEach(function (path) {\n                        paths.push(path);\n                        perFileBuffers.push(null);\n                      });\n                      weightSpecs.push.apply(weightSpecs, _toConsumableArray(weightsGroup.weights));\n                    });\n                    weightsManifest.forEach(function (weightsGroup) {\n                      weightsGroup.paths.forEach(function (path) {\n                        var weightFileReader = new FileReader();\n\n                        weightFileReader.onload = function (event) {\n                          // tslint:disable-next-line:no-any\n                          var weightData = event.target.result;\n                          var index = paths.indexOf(path);\n                          perFileBuffers[index] = weightData;\n\n                          if (perFileBuffers.indexOf(null) === -1) {\n                            var result = {\n                              modelTopology: modelTopology,\n                              weightSpecs: weightSpecs,\n                              weightData: concatenateArrayBuffers(perFileBuffers),\n                              format: modelJSON.format,\n                              generatedBy: modelJSON.generatedBy,\n                              convertedBy: modelJSON.convertedBy\n                            };\n\n                            if (modelJSON.signature != null) {\n                              result.signature = modelJSON.signature;\n                            }\n\n                            if (modelJSON.userDefinedMetadata != null) {\n                              result.userDefinedMetadata = modelJSON.userDefinedMetadata;\n                            }\n\n                            if (modelJSON.modelInitializer != null) {\n                              result.modelInitializer = modelJSON.modelInitializer;\n                            }\n\n                            resolve(result);\n                          }\n                        };\n\n                        weightFileReader.onerror = function (error) {\n                          return reject(\"Failed to weights data from file of path '\".concat(path, \"'.\"));\n                        };\n\n                        weightFileReader.readAsArrayBuffer(pathToFile[path]);\n                      });\n                    });\n                  };\n\n                  jsonReader.onerror = function (error) {\n                    return reject(\"Failed to read model topology and weights manifest JSON \" + \"from file '\".concat(jsonFile.name, \"'. BrowserFiles supports loading \") + \"Keras-style tf.Model artifacts only.\");\n                  };\n\n                  jsonReader.readAsText(jsonFile);\n                }));\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function load() {\n        return _load.apply(this, arguments);\n      }\n\n      return load;\n    }()\n    /**\n     * Check the compatibility between weights manifest and weight files.\n     */\n\n  }, {\n    key: \"checkManifestAndWeightFiles\",\n    value: function checkManifestAndWeightFiles(manifest, files) {\n      var basenames = [];\n      var fileNames = files.map(function (file) {\n        return basename(file.name);\n      });\n      var pathToFile = {};\n\n      var _iterator = _createForOfIteratorHelper(manifest),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var group = _step.value;\n          group.paths.forEach(function (path) {\n            var pathBasename = basename(path);\n\n            if (basenames.indexOf(pathBasename) !== -1) {\n              throw new Error(\"Duplicate file basename found in weights manifest: \" + \"'\".concat(pathBasename, \"'\"));\n            }\n\n            basenames.push(pathBasename);\n\n            if (fileNames.indexOf(pathBasename) === -1) {\n              throw new Error(\"Weight file with basename '\".concat(pathBasename, \"' is not provided.\"));\n            } else {\n              pathToFile[path] = files[fileNames.indexOf(pathBasename)];\n            }\n          });\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      if (basenames.length !== files.length) {\n        throw new Error(\"Mismatch in the number of files in weights manifest \" + \"(\".concat(basenames.length, \") and the number of weight files provided \") + \"(\".concat(files.length, \").\"));\n      }\n\n      return pathToFile;\n    }\n  }]);\n\n  return BrowserFiles;\n}();\n\nexport var browserDownloadsRouter = function browserDownloadsRouter(url) {\n  if (!env().getBool('IS_BROWSER')) {\n    return null;\n  } else {\n    if (!Array.isArray(url) && url.startsWith(BrowserDownloads.URL_SCHEME)) {\n      return browserDownloads(url.slice(BrowserDownloads.URL_SCHEME.length));\n    } else {\n      return null;\n    }\n  }\n};\nIORouterRegistry.registerSaveRouter(browserDownloadsRouter);\n/**\n * Creates an IOHandler that triggers file downloads from the browser.\n *\n * The returned `IOHandler` instance can be used as model exporting methods such\n * as `tf.Model.save` and supports only saving.\n *\n * ```js\n * const model = tf.sequential();\n * model.add(tf.layers.dense(\n *     {units: 1, inputShape: [10], activation: 'sigmoid'}));\n * const saveResult = await model.save('downloads://mymodel');\n * // This will trigger downloading of two files:\n * //   'mymodel.json' and 'mymodel.weights.bin'.\n * console.log(saveResult);\n * ```\n *\n * @param fileNamePrefix Prefix name of the files to be downloaded. For use with\n *   `tf.Model`, `fileNamePrefix` should follow either of the following two\n *   formats:\n *   1. `null` or `undefined`, in which case the default file\n *      names will be used:\n *      - 'model.json' for the JSON file containing the model topology and\n *        weights manifest.\n *      - 'model.weights.bin' for the binary file containing the binary weight\n *        values.\n *   2. A single string or an Array of a single string, as the file name prefix.\n *      For example, if `'foo'` is provided, the downloaded JSON\n *      file and binary weights file will be named 'foo.json' and\n *      'foo.weights.bin', respectively.\n * @param config Additional configuration for triggering downloads.\n * @returns An instance of `BrowserDownloads` `IOHandler`.\n *\n * @doc {\n *   heading: 'Models',\n *   subheading: 'Loading',\n *   namespace: 'io',\n *   ignoreCI: true\n * }\n */\n\nexport function browserDownloads() {\n  var fileNamePrefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'model';\n  return new BrowserDownloads(fileNamePrefix);\n}\n/**\n * Creates an IOHandler that loads model artifacts from user-selected files.\n *\n * This method can be used for loading from files such as user-selected files\n * in the browser.\n * When used in conjunction with `tf.loadLayersModel`, an instance of\n * `tf.LayersModel` (Keras-style) can be constructed from the loaded artifacts.\n *\n * ```js\n * // Note: This code snippet won't run properly without the actual file input\n * //   elements in the HTML DOM.\n *\n * // Suppose there are two HTML file input (`<input type=\"file\" ...>`)\n * // elements.\n * const uploadJSONInput = document.getElementById('upload-json');\n * const uploadWeightsInput = document.getElementById('upload-weights');\n * const model = await tf.loadLayersModel(tf.io.browserFiles(\n *     [uploadJSONInput.files[0], uploadWeightsInput.files[0]]));\n * ```\n *\n * @param files `File`s to load from. Currently, this function supports only\n *   loading from files that contain Keras-style models (i.e., `tf.Model`s), for\n *   which an `Array` of `File`s is expected (in that order):\n *   - A JSON file containing the model topology and weight manifest.\n *   - Optionally, One or more binary files containing the binary weights.\n *     These files must have names that match the paths in the `weightsManifest`\n *     contained by the aforementioned JSON file, or errors will be thrown\n *     during loading. These weights files have the same format as the ones\n *     generated by `tensorflowjs_converter` that comes with the `tensorflowjs`\n *     Python PIP package. If no weights files are provided, only the model\n *     topology will be loaded from the JSON file above.\n * @returns An instance of `Files` `IOHandler`.\n *\n * @doc {\n *   heading: 'Models',\n *   subheading: 'Loading',\n *   namespace: 'io',\n *   ignoreCI: true\n * }\n */\n\nexport function browserFiles(files) {\n  return new BrowserFiles(files);\n}","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { assert } from '../util';\n/**\n * Monitor Promise.all progress, fire onProgress callback function.\n *\n * @param promises Promise list going to be monitored\n * @param onProgress Callback function. Fired when a promise resolved.\n * @param startFraction Optional fraction start. Default to 0.\n * @param endFraction Optional fraction end. Default to 1.\n */\n\nexport function monitorPromisesProgress(promises, onProgress, startFraction, endFraction) {\n  checkPromises(promises);\n  startFraction = startFraction == null ? 0 : startFraction;\n  endFraction = endFraction == null ? 1 : endFraction;\n  checkFraction(startFraction, endFraction);\n  var resolvedPromise = 0;\n\n  var registerMonitor = function registerMonitor(promise) {\n    promise.then(function (value) {\n      var fraction = startFraction + ++resolvedPromise / promises.length * (endFraction - startFraction); // pass fraction as parameter to callback function.\n\n      onProgress(fraction);\n      return value;\n    });\n    return promise;\n  };\n\n  function checkPromises(promises) {\n    assert(promises != null && Array.isArray(promises) && promises.length > 0, function () {\n      return 'promises must be a none empty array';\n    });\n  }\n\n  function checkFraction(startFraction, endFraction) {\n    assert(startFraction >= 0 && startFraction <= 1, function () {\n      return \"Progress fraction must be in range [0, 1], but \" + \"got startFraction \".concat(startFraction);\n    });\n    assert(endFraction >= 0 && endFraction <= 1, function () {\n      return \"Progress fraction must be in range [0, 1], but \" + \"got endFraction \".concat(endFraction);\n    });\n    assert(endFraction >= startFraction, function () {\n      return \"startFraction must be no more than endFraction, but \" + \"got startFraction \".concat(startFraction, \" and endFraction \") + \"\".concat(endFraction);\n    });\n  }\n\n  return Promise.all(promises.map(registerMonitor));\n}","import _asyncToGenerator from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _regeneratorRuntime from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/regenerator\";\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env } from '../environment';\nimport * as util from '../util';\nimport { decodeWeights } from './io_utils';\nimport { monitorPromisesProgress } from './progress';\nimport { DTYPE_VALUE_SIZE_MAP } from './types';\n/**\n * Reads binary weights data from a number of URLs.\n *\n * @param fetchURLs URLs to send the HTTP requests at, using `fetch` calls.\n * @param requestOptions RequestInit (options) for the HTTP requests.\n * @param fetchFunc Optional overriding value for the `window.fetch` function.\n * @param onProgress Optional, progress callback function, fired periodically\n *   before the load is completed.\n * @returns A `Promise` of an Array of `ArrayBuffer`. The Array has the same\n *   length as `fetchURLs`.\n */\n\nexport function loadWeightsAsArrayBuffer(_x, _x2) {\n  return _loadWeightsAsArrayBuffer.apply(this, arguments);\n}\n/**\n * Reads a weights manifest JSON configuration, fetches the weights and\n * returns them as `Tensor`s.\n *\n * @param manifest The weights manifest JSON.\n * @param filePathPrefix The path prefix for filenames given in the manifest.\n *     Defaults to the empty string.\n * @param weightNames The names of the weights to be fetched.\n */\n\nfunction _loadWeightsAsArrayBuffer() {\n  _loadWeightsAsArrayBuffer = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(fetchURLs, loadOptions) {\n    var fetchFunc, requests, fetchStartFraction, fetchEndFraction, responses, bufferPromises, bufferStartFraction, bufferEndFraction, buffers;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (loadOptions == null) {\n              loadOptions = {};\n            }\n\n            fetchFunc = loadOptions.fetchFunc == null ? env().platform.fetch : loadOptions.fetchFunc; // Create the requests for all of the weights in parallel.\n\n            requests = fetchURLs.map(function (fetchURL) {\n              return fetchFunc(fetchURL, loadOptions.requestInit, {\n                isBinary: true\n              });\n            });\n            fetchStartFraction = 0;\n            fetchEndFraction = 0.5;\n\n            if (!(loadOptions.onProgress == null)) {\n              _context2.next = 11;\n              break;\n            }\n\n            _context2.next = 8;\n            return Promise.all(requests);\n\n          case 8:\n            _context2.t0 = _context2.sent;\n            _context2.next = 14;\n            break;\n\n          case 11:\n            _context2.next = 13;\n            return monitorPromisesProgress(requests, loadOptions.onProgress, fetchStartFraction, fetchEndFraction);\n\n          case 13:\n            _context2.t0 = _context2.sent;\n\n          case 14:\n            responses = _context2.t0;\n            bufferPromises = responses.map(function (response) {\n              return response.arrayBuffer();\n            });\n            bufferStartFraction = 0.5;\n            bufferEndFraction = 1;\n\n            if (!(loadOptions.onProgress == null)) {\n              _context2.next = 24;\n              break;\n            }\n\n            _context2.next = 21;\n            return Promise.all(bufferPromises);\n\n          case 21:\n            _context2.t1 = _context2.sent;\n            _context2.next = 27;\n            break;\n\n          case 24:\n            _context2.next = 26;\n            return monitorPromisesProgress(bufferPromises, loadOptions.onProgress, bufferStartFraction, bufferEndFraction);\n\n          case 26:\n            _context2.t1 = _context2.sent;\n\n          case 27:\n            buffers = _context2.t1;\n            return _context2.abrupt(\"return\", buffers);\n\n          case 29:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _loadWeightsAsArrayBuffer.apply(this, arguments);\n}\n\nexport function loadWeights(_x3) {\n  return _loadWeights.apply(this, arguments);\n}\n/**\n * Creates a function, which reads a weights manifest JSON configuration,\n * fetches the weight files using the specified function and returns them as\n * `Tensor`s.\n *\n * ```js\n * // example for creating a nodejs weight loader, which reads the weight files\n * // from disk using fs.readFileSync\n *\n * import * as fs from 'fs'\n *\n * const fetchWeightsFromDisk = (filePaths: string[]) =>\n *   filePaths.map(filePath => fs.readFileSync(filePath).buffer)\n *\n * const loadWeights = tf.io.weightsLoaderFactory(fetchWeightsFromDisk)\n *\n * const manifest = JSON.parse(\n *   fs.readFileSync('./my_model-weights_manifest').toString()\n * )\n * const weightMap = await loadWeights(manifest, './')\n * ```\n * @param fetchWeightsFunction The function used for fetching the weight files.\n * @returns Weight loading function.\n */\n\nfunction _loadWeights() {\n  _loadWeights = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(manifest) {\n    var filePathPrefix,\n        weightNames,\n        requestInit,\n        fetchWeights,\n        loadWeights,\n        _args3 = arguments;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            filePathPrefix = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : '';\n            weightNames = _args3.length > 2 ? _args3[2] : undefined;\n            requestInit = _args3.length > 3 ? _args3[3] : undefined;\n\n            // TODO(nsthorat): Groups are currently fetched atomically. If you need a\n            // single weight from a group, the whole group will be fetched. At a future\n            // date, we should support fetching only the individual shards within a\n            // group that are needed to reconstruct the requested weight.\n            // TODO(cais): Use `decodeWeights` for implementation.\n            fetchWeights = function fetchWeights(fetchUrls) {\n              return loadWeightsAsArrayBuffer(fetchUrls, {\n                requestInit: requestInit\n              });\n            };\n\n            loadWeights = weightsLoaderFactory(fetchWeights);\n            return _context3.abrupt(\"return\", loadWeights(manifest, filePathPrefix, weightNames));\n\n          case 6:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _loadWeights.apply(this, arguments);\n}\n\nexport function weightsLoaderFactory(fetchWeightsFunction) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(manifest) {\n      var filePathPrefix,\n          weightNames,\n          groupIndicesToFetchMap,\n          groupWeightsToFetch,\n          weightsFound,\n          allManifestWeightNames,\n          weightsNotFound,\n          groupIndicesToFetch,\n          fetchUrls,\n          buffers,\n          weightsTensorMap,\n          bufferIndexOffset,\n          _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              filePathPrefix = _args.length > 1 && _args[1] !== undefined ? _args[1] : '';\n              weightNames = _args.length > 2 ? _args[2] : undefined;\n              // Collect all the groups, weights, and their relative offsets to be\n              // fetched.\n              groupIndicesToFetchMap = manifest.map(function () {\n                return false;\n              });\n              groupWeightsToFetch = {};\n              weightsFound = weightNames != null ? weightNames.map(function () {\n                return false;\n              }) : [];\n              allManifestWeightNames = [];\n              manifest.forEach(function (manifestGroupConfig, groupIndex) {\n                var groupOffset = 0;\n                manifestGroupConfig.weights.forEach(function (weightsEntry) {\n                  var rawDtype = 'quantization' in weightsEntry ? weightsEntry.quantization.dtype : weightsEntry.dtype;\n                  var weightsBytes = DTYPE_VALUE_SIZE_MAP[rawDtype] * util.sizeFromShape(weightsEntry.shape);\n\n                  var enqueueWeightsForFetchingFn = function enqueueWeightsForFetchingFn() {\n                    groupIndicesToFetchMap[groupIndex] = true;\n\n                    if (groupWeightsToFetch[groupIndex] == null) {\n                      groupWeightsToFetch[groupIndex] = [];\n                    }\n\n                    groupWeightsToFetch[groupIndex].push({\n                      manifestEntry: weightsEntry,\n                      groupOffset: groupOffset,\n                      sizeBytes: weightsBytes\n                    });\n                  };\n\n                  if (weightNames != null) {\n                    weightNames.forEach(function (weightName, weightIndex) {\n                      if (weightName === weightsEntry.name) {\n                        enqueueWeightsForFetchingFn();\n                        weightsFound[weightIndex] = true;\n                      }\n                    });\n                  } else {\n                    enqueueWeightsForFetchingFn();\n                  }\n\n                  allManifestWeightNames.push(weightsEntry.name);\n                  groupOffset += weightsBytes;\n                });\n              });\n\n              if (weightsFound.every(function (found) {\n                return found;\n              })) {\n                _context.next = 10;\n                break;\n              }\n\n              weightsNotFound = weightNames.filter(function (_, i) {\n                return !weightsFound[i];\n              });\n              throw new Error(\"Could not find weights in manifest with names: \" + \"\".concat(weightsNotFound.join(', '), \". \\n\") + \"Manifest JSON has weights with names: \" + \"\".concat(allManifestWeightNames.join(', '), \".\"));\n\n            case 10:\n              // Convert the one-hot boolean groupId => shouldFetch map to a list of group\n              // IDs.\n              groupIndicesToFetch = groupIndicesToFetchMap.reduce(function (accumulator, shouldFetch, i) {\n                if (shouldFetch) {\n                  accumulator.push(i);\n                }\n\n                return accumulator;\n              }, []);\n              fetchUrls = [];\n              groupIndicesToFetch.forEach(function (i) {\n                manifest[i].paths.forEach(function (filepath) {\n                  var fetchUrl = filePathPrefix + (!filePathPrefix.endsWith('/') ? '/' : '') + filepath;\n                  fetchUrls.push(fetchUrl);\n                });\n              });\n              _context.next = 15;\n              return fetchWeightsFunction(fetchUrls);\n\n            case 15:\n              buffers = _context.sent;\n              weightsTensorMap = {};\n              bufferIndexOffset = 0;\n              groupIndicesToFetch.forEach(function (i) {\n                var numBuffers = manifest[i].paths.length;\n                var groupBytes = 0;\n\n                for (var _i = 0; _i < numBuffers; _i++) {\n                  groupBytes += buffers[bufferIndexOffset + _i].byteLength;\n                } // Create a buffer for the whole group.\n\n\n                var groupBuffer = new ArrayBuffer(groupBytes);\n                var groupByteBuffer = new Uint8Array(groupBuffer);\n                var groupBufferOffset = 0;\n\n                for (var _i2 = 0; _i2 < numBuffers; _i2++) {\n                  var buffer = new Uint8Array(buffers[bufferIndexOffset + _i2]);\n                  groupByteBuffer.set(buffer, groupBufferOffset);\n                  groupBufferOffset += buffer.byteLength;\n                }\n\n                var weightsEntries = groupWeightsToFetch[i];\n                weightsEntries.forEach(function (weightsEntry) {\n                  var byteBuffer = groupBuffer.slice(weightsEntry.groupOffset, weightsEntry.groupOffset + weightsEntry.sizeBytes);\n                  var nameToTensorMap = decodeWeights(byteBuffer, [weightsEntry.manifestEntry]);\n\n                  for (var name in nameToTensorMap) {\n                    weightsTensorMap[name] = nameToTensorMap[name];\n                  }\n                });\n                bufferIndexOffset += numBuffers;\n              });\n              return _context.abrupt(\"return\", weightsTensorMap);\n\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x4) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n}","import _toConsumableArray from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport _regeneratorRuntime from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/regenerator\";\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * IOHandler implementations based on HTTP requests in the web browser.\n *\n * Uses [`fetch`](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API).\n */\nimport { env } from '../environment';\nimport { assert } from '../util';\nimport { concatenateArrayBuffers, getModelArtifactsInfoForJSON } from './io_utils';\nimport { IORouterRegistry } from './router_registry';\nimport { loadWeightsAsArrayBuffer } from './weights_loader';\nvar OCTET_STREAM_MIME_TYPE = 'application/octet-stream';\nvar JSON_TYPE = 'application/json';\nexport var HTTPRequest = /*#__PURE__*/function () {\n  function HTTPRequest(path, loadOptions) {\n    _classCallCheck(this, HTTPRequest);\n\n    this.DEFAULT_METHOD = 'POST';\n\n    if (loadOptions == null) {\n      loadOptions = {};\n    }\n\n    this.weightPathPrefix = loadOptions.weightPathPrefix;\n    this.onProgress = loadOptions.onProgress;\n    this.weightUrlConverter = loadOptions.weightUrlConverter;\n\n    if (loadOptions.fetchFunc != null) {\n      assert(typeof loadOptions.fetchFunc === 'function', function () {\n        return 'Must pass a function that matches the signature of ' + '`fetch` (see ' + 'https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)';\n      });\n      this.fetch = loadOptions.fetchFunc;\n    } else {\n      this.fetch = env().platform.fetch;\n    }\n\n    assert(path != null && path.length > 0, function () {\n      return 'URL path for http must not be null, undefined or ' + 'empty.';\n    });\n\n    if (Array.isArray(path)) {\n      assert(path.length === 2, function () {\n        return 'URL paths for http must have a length of 2, ' + \"(actual length is \".concat(path.length, \").\");\n      });\n    }\n\n    this.path = path;\n\n    if (loadOptions.requestInit != null && loadOptions.requestInit.body != null) {\n      throw new Error('requestInit is expected to have no pre-existing body, but has one.');\n    }\n\n    this.requestInit = loadOptions.requestInit || {};\n  }\n\n  _createClass(HTTPRequest, [{\n    key: \"save\",\n    value: function () {\n      var _save = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(modelArtifacts) {\n        var init, weightsManifest, modelTopologyAndWeightManifest, response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(modelArtifacts.modelTopology instanceof ArrayBuffer)) {\n                  _context.next = 2;\n                  break;\n                }\n\n                throw new Error('BrowserHTTPRequest.save() does not support saving model topology ' + 'in binary formats yet.');\n\n              case 2:\n                init = Object.assign({\n                  method: this.DEFAULT_METHOD\n                }, this.requestInit);\n                init.body = new FormData();\n                weightsManifest = [{\n                  paths: ['./model.weights.bin'],\n                  weights: modelArtifacts.weightSpecs\n                }];\n                modelTopologyAndWeightManifest = {\n                  modelTopology: modelArtifacts.modelTopology,\n                  format: modelArtifacts.format,\n                  generatedBy: modelArtifacts.generatedBy,\n                  convertedBy: modelArtifacts.convertedBy,\n                  weightsManifest: weightsManifest\n                };\n\n                if (modelArtifacts.signature != null) {\n                  modelTopologyAndWeightManifest.signature = modelArtifacts.signature;\n                }\n\n                if (modelArtifacts.userDefinedMetadata != null) {\n                  modelTopologyAndWeightManifest.userDefinedMetadata = modelArtifacts.userDefinedMetadata;\n                }\n\n                if (modelArtifacts.modelInitializer != null) {\n                  modelTopologyAndWeightManifest.modelInitializer = modelArtifacts.modelInitializer;\n                }\n\n                init.body.append('model.json', new Blob([JSON.stringify(modelTopologyAndWeightManifest)], {\n                  type: JSON_TYPE\n                }), 'model.json');\n\n                if (modelArtifacts.weightData != null) {\n                  init.body.append('model.weights.bin', new Blob([modelArtifacts.weightData], {\n                    type: OCTET_STREAM_MIME_TYPE\n                  }), 'model.weights.bin');\n                }\n\n                _context.next = 13;\n                return this.fetch(this.path, init);\n\n              case 13:\n                response = _context.sent;\n\n                if (!response.ok) {\n                  _context.next = 18;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", {\n                  modelArtifactsInfo: getModelArtifactsInfoForJSON(modelArtifacts),\n                  responses: [response]\n                });\n\n              case 18:\n                throw new Error(\"BrowserHTTPRequest.save() failed due to HTTP response status \" + \"\".concat(response.status, \".\"));\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function save(_x) {\n        return _save.apply(this, arguments);\n      }\n\n      return save;\n    }()\n    /**\n     * Load model artifacts via HTTP request(s).\n     *\n     * See the documentation to `tf.io.http` for details on the saved\n     * artifacts.\n     *\n     * @returns The loaded model artifacts (if loading succeeds).\n     */\n\n  }, {\n    key: \"load\",\n    value: function () {\n      var _load = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var modelConfigRequest, modelConfig, message, modelTopology, weightsManifest, generatedBy, convertedBy, format, signature, userDefinedMetadata, weightSpecs, weightData, results, _results, artifacts, initializer;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.fetch(this.path, this.requestInit);\n\n              case 2:\n                modelConfigRequest = _context2.sent;\n\n                if (modelConfigRequest.ok) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                throw new Error(\"Request to \".concat(this.path, \" failed with status code \") + \"\".concat(modelConfigRequest.status, \". Please verify this URL points to \") + \"the model JSON of the model to load.\");\n\n              case 5:\n                _context2.prev = 5;\n                _context2.next = 8;\n                return modelConfigRequest.json();\n\n              case 8:\n                modelConfig = _context2.sent;\n                _context2.next = 16;\n                break;\n\n              case 11:\n                _context2.prev = 11;\n                _context2.t0 = _context2[\"catch\"](5);\n                message = \"Failed to parse model JSON of response from \".concat(this.path, \".\"); // TODO(nsthorat): Remove this after some time when we're comfortable that\n                // .pb files are mostly gone.\n\n                if (this.path.endsWith('.pb')) {\n                  message += ' Your path contains a .pb file extension. ' + 'Support for .pb models have been removed in TensorFlow.js 1.0 ' + 'in favor of .json models. You can re-convert your Python ' + 'TensorFlow model using the TensorFlow.js 1.0 conversion scripts ' + 'or you can convert your.pb models with the \\'pb2json\\'' + 'NPM script in the tensorflow/tfjs-converter repository.';\n                } else {\n                  message += ' Please make sure the server is serving valid ' + 'JSON for this request.';\n                }\n\n                throw new Error(message);\n\n              case 16:\n                modelTopology = modelConfig.modelTopology;\n                weightsManifest = modelConfig.weightsManifest;\n                generatedBy = modelConfig.generatedBy;\n                convertedBy = modelConfig.convertedBy;\n                format = modelConfig.format;\n                signature = modelConfig.signature;\n                userDefinedMetadata = modelConfig.userDefinedMetadata; // We do not allow both modelTopology and weightsManifest to be missing.\n\n                if (!(modelTopology == null && weightsManifest == null)) {\n                  _context2.next = 25;\n                  break;\n                }\n\n                throw new Error(\"The JSON from HTTP path \".concat(this.path, \" contains neither model \") + \"topology or manifest for weights.\");\n\n              case 25:\n                if (!(weightsManifest != null)) {\n                  _context2.next = 32;\n                  break;\n                }\n\n                _context2.next = 28;\n                return this.loadWeights(weightsManifest);\n\n              case 28:\n                results = _context2.sent;\n                _results = _slicedToArray(results, 2);\n                weightSpecs = _results[0];\n                weightData = _results[1];\n\n              case 32:\n                artifacts = {\n                  modelTopology: modelTopology,\n                  weightSpecs: weightSpecs,\n                  weightData: weightData,\n                  generatedBy: generatedBy,\n                  convertedBy: convertedBy,\n                  format: format\n                };\n\n                if (signature != null) {\n                  artifacts.signature = signature;\n                }\n\n                if (userDefinedMetadata != null) {\n                  artifacts.userDefinedMetadata = userDefinedMetadata;\n                }\n\n                initializer = modelConfig.modelInitializer;\n\n                if (initializer) {\n                  artifacts.modelInitializer = initializer;\n                }\n\n                return _context2.abrupt(\"return\", artifacts);\n\n              case 38:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[5, 11]]);\n      }));\n\n      function load() {\n        return _load.apply(this, arguments);\n      }\n\n      return load;\n    }()\n  }, {\n    key: \"loadWeights\",\n    value: function () {\n      var _loadWeights = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(weightsManifest) {\n        var weightPath, _parseUrl, _parseUrl2, prefix, suffix, pathPrefix, weightSpecs, _iterator, _step, entry, fetchURLs, urlPromises, _iterator2, _step2, weightsGroup, _iterator3, _step3, path, buffers;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                weightPath = Array.isArray(this.path) ? this.path[1] : this.path;\n                _parseUrl = parseUrl(weightPath), _parseUrl2 = _slicedToArray(_parseUrl, 2), prefix = _parseUrl2[0], suffix = _parseUrl2[1];\n                pathPrefix = this.weightPathPrefix || prefix;\n                weightSpecs = [];\n                _iterator = _createForOfIteratorHelper(weightsManifest);\n\n                try {\n                  for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                    entry = _step.value;\n                    weightSpecs.push.apply(weightSpecs, _toConsumableArray(entry.weights));\n                  }\n                } catch (err) {\n                  _iterator.e(err);\n                } finally {\n                  _iterator.f();\n                }\n\n                fetchURLs = [];\n                urlPromises = [];\n                _iterator2 = _createForOfIteratorHelper(weightsManifest);\n\n                try {\n                  for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                    weightsGroup = _step2.value;\n                    _iterator3 = _createForOfIteratorHelper(weightsGroup.paths);\n\n                    try {\n                      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                        path = _step3.value;\n\n                        if (this.weightUrlConverter != null) {\n                          urlPromises.push(this.weightUrlConverter(path));\n                        } else {\n                          fetchURLs.push(pathPrefix + path + suffix);\n                        }\n                      }\n                    } catch (err) {\n                      _iterator3.e(err);\n                    } finally {\n                      _iterator3.f();\n                    }\n                  }\n                } catch (err) {\n                  _iterator2.e(err);\n                } finally {\n                  _iterator2.f();\n                }\n\n                if (!this.weightUrlConverter) {\n                  _context3.next = 19;\n                  break;\n                }\n\n                _context3.t0 = fetchURLs.push;\n                _context3.t1 = fetchURLs;\n                _context3.t2 = _toConsumableArray;\n                _context3.next = 16;\n                return Promise.all(urlPromises);\n\n              case 16:\n                _context3.t3 = _context3.sent;\n                _context3.t4 = (0, _context3.t2)(_context3.t3);\n\n                _context3.t0.apply.call(_context3.t0, _context3.t1, _context3.t4);\n\n              case 19:\n                _context3.next = 21;\n                return loadWeightsAsArrayBuffer(fetchURLs, {\n                  requestInit: this.requestInit,\n                  fetchFunc: this.fetch,\n                  onProgress: this.onProgress\n                });\n\n              case 21:\n                buffers = _context3.sent;\n                return _context3.abrupt(\"return\", [weightSpecs, concatenateArrayBuffers(buffers)]);\n\n              case 23:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadWeights(_x2) {\n        return _loadWeights.apply(this, arguments);\n      }\n\n      return loadWeights;\n    }()\n  }]);\n\n  return HTTPRequest;\n}();\nHTTPRequest.URL_SCHEME_REGEX = /^https?:\\/\\//;\n/**\n * Extract the prefix and suffix of the url, where the prefix is the path before\n * the last file, and suffix is the search params after the last file.\n * ```\n * const url = 'http://tfhub.dev/model/1/tensorflowjs_model.pb?tfjs-format=file'\n * [prefix, suffix] = parseUrl(url)\n * // prefix = 'http://tfhub.dev/model/1/'\n * // suffix = '?tfjs-format=file'\n * ```\n * @param url the model url to be parsed.\n */\n\nexport function parseUrl(url) {\n  var lastSlash = url.lastIndexOf('/');\n  var lastSearchParam = url.lastIndexOf('?');\n  var prefix = url.substring(0, lastSlash);\n  var suffix = lastSearchParam > lastSlash ? url.substring(lastSearchParam) : '';\n  return [prefix + '/', suffix];\n}\nexport function isHTTPScheme(url) {\n  return url.match(HTTPRequest.URL_SCHEME_REGEX) != null;\n}\nexport var httpRouter = function httpRouter(url, loadOptions) {\n  if (typeof fetch === 'undefined' && (loadOptions == null || loadOptions.fetchFunc == null)) {\n    // `http` uses `fetch` or `node-fetch`, if one wants to use it in\n    // an environment that is not the browser or node they have to setup a\n    // global fetch polyfill.\n    return null;\n  } else {\n    var isHTTP = true;\n\n    if (Array.isArray(url)) {\n      isHTTP = url.every(function (urlItem) {\n        return isHTTPScheme(urlItem);\n      });\n    } else {\n      isHTTP = isHTTPScheme(url);\n    }\n\n    if (isHTTP) {\n      return http(url, loadOptions);\n    }\n  }\n\n  return null;\n};\nIORouterRegistry.registerSaveRouter(httpRouter);\nIORouterRegistry.registerLoadRouter(httpRouter);\n/**\n * Creates an IOHandler subtype that sends model artifacts to HTTP server.\n *\n * An HTTP request of the `multipart/form-data` mime type will be sent to the\n * `path` URL. The form data includes artifacts that represent the topology\n * and/or weights of the model. In the case of Keras-style `tf.Model`, two\n * blobs (files) exist in form-data:\n *   - A JSON file consisting of `modelTopology` and `weightsManifest`.\n *   - A binary weights file consisting of the concatenated weight values.\n * These files are in the same format as the one generated by\n * [tfjs_converter](https://js.tensorflow.org/tutorials/import-keras.html).\n *\n * The following code snippet exemplifies the client-side code that uses this\n * function:\n *\n * ```js\n * const model = tf.sequential();\n * model.add(\n *     tf.layers.dense({units: 1, inputShape: [100], activation: 'sigmoid'}));\n *\n * const saveResult = await model.save(tf.io.http(\n *     'http://model-server:5000/upload', {requestInit: {method: 'PUT'}}));\n * console.log(saveResult);\n * ```\n *\n * If the default `POST` method is to be used, without any custom parameters\n * such as headers, you can simply pass an HTTP or HTTPS URL to `model.save`:\n *\n * ```js\n * const saveResult = await model.save('http://model-server:5000/upload');\n * ```\n *\n * The following GitHub Gist\n * https://gist.github.com/dsmilkov/1b6046fd6132d7408d5257b0976f7864\n * implements a server based on [flask](https://github.com/pallets/flask) that\n * can receive the request. Upon receiving the model artifacts via the requst,\n * this particular server reconsistutes instances of [Keras\n * Models](https://keras.io/models/model/) in memory.\n *\n *\n * @param path A URL path to the model.\n *   Can be an absolute HTTP path (e.g.,\n *   'http://localhost:8000/model-upload)') or a relative path (e.g.,\n *   './model-upload').\n * @param requestInit Request configurations to be used when sending\n *    HTTP request to server using `fetch`. It can contain fields such as\n *    `method`, `credentials`, `headers`, `mode`, etc. See\n *    https://developer.mozilla.org/en-US/docs/Web/API/Request/Request\n *    for more information. `requestInit` must not have a body, because the\n * body will be set by TensorFlow.js. File blobs representing the model\n * topology (filename: 'model.json') and the weights of the model (filename:\n * 'model.weights.bin') will be appended to the body. If `requestInit` has a\n * `body`, an Error will be thrown.\n * @param loadOptions Optional configuration for the loading. It includes the\n *   following fields:\n *   - weightPathPrefix Optional, this specifies the path prefix for weight\n *     files, by default this is calculated from the path param.\n *   - fetchFunc Optional, custom `fetch` function. E.g., in Node.js,\n *     the `fetch` from node-fetch can be used here.\n *   - onProgress Optional, progress callback function, fired periodically\n *     before the load is completed.\n * @returns An instance of `IOHandler`.\n *\n * @doc {\n *   heading: 'Models',\n *   subheading: 'Loading',\n *   namespace: 'io',\n *   ignoreCI: true\n * }\n */\n\nexport function http(path, loadOptions) {\n  return new HTTPRequest(path, loadOptions);\n}\n/**\n * Deprecated. Use `tf.io.http`.\n * @param path\n * @param loadOptions\n */\n\nexport function browserHTTPRequest(path, loadOptions) {\n  return http(path, loadOptions);\n}","import _asyncToGenerator from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _regeneratorRuntime from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/regenerator\";\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar PassthroughLoader = /*#__PURE__*/function () {\n  function PassthroughLoader(modelArtifacts) {\n    _classCallCheck(this, PassthroughLoader);\n\n    this.modelArtifacts = modelArtifacts;\n  }\n\n  _createClass(PassthroughLoader, [{\n    key: \"load\",\n    value: function () {\n      var _load = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", this.modelArtifacts);\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function load() {\n        return _load.apply(this, arguments);\n      }\n\n      return load;\n    }()\n  }]);\n\n  return PassthroughLoader;\n}();\n\nvar PassthroughSaver = /*#__PURE__*/function () {\n  function PassthroughSaver(saveHandler) {\n    _classCallCheck(this, PassthroughSaver);\n\n    this.saveHandler = saveHandler;\n  }\n\n  _createClass(PassthroughSaver, [{\n    key: \"save\",\n    value: function () {\n      var _save = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(modelArtifacts) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", this.saveHandler(modelArtifacts));\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function save(_x) {\n        return _save.apply(this, arguments);\n      }\n\n      return save;\n    }()\n  }]);\n\n  return PassthroughSaver;\n}();\n/**\n * Creates an IOHandler that loads model artifacts from memory.\n *\n * When used in conjunction with `tf.loadLayersModel`, an instance of\n * `tf.LayersModel` (Keras-style) can be constructed from the loaded artifacts.\n *\n * ```js\n * const model = await tf.loadLayersModel(tf.io.fromMemory(\n *     modelTopology, weightSpecs, weightData));\n * ```\n *\n * @param modelArtifacts a object containing model topology (i.e., parsed from\n *   the JSON format).\n * @param weightSpecs An array of `WeightsManifestEntry` objects describing the\n *   names, shapes, types, and quantization of the weight data.\n * @param weightData A single `ArrayBuffer` containing the weight data,\n *   concatenated in the order described by the weightSpecs.\n * @param trainingConfig Model training configuration. Optional.\n *\n * @returns A passthrough `IOHandler` that simply loads the provided data.\n */\n\n\nexport function fromMemory(modelArtifacts, weightSpecs, weightData, trainingConfig) {\n  if (arguments.length === 1) {\n    var isModelArtifacts = modelArtifacts.modelTopology != null || modelArtifacts.weightSpecs != null;\n\n    if (isModelArtifacts) {\n      return new PassthroughLoader(modelArtifacts);\n    } else {\n      // Legacy support: with only modelTopology.\n      // TODO(cais): Remove this deprecated API.\n      console.warn('Please call tf.io.fromMemory() with only one argument. ' + 'The argument should be of type ModelArtifacts. ' + 'The multi-argument signature of tf.io.fromMemory() has been ' + 'deprecated and will be removed in a future release.');\n      return new PassthroughLoader({\n        modelTopology: modelArtifacts\n      });\n    }\n  } else {\n    // Legacy support.\n    // TODO(cais): Remove this deprecated API.\n    console.warn('Please call tf.io.fromMemory() with only one argument. ' + 'The argument should be of type ModelArtifacts. ' + 'The multi-argument signature of tf.io.fromMemory() has been ' + 'deprecated and will be removed in a future release.');\n    return new PassthroughLoader({\n      modelTopology: modelArtifacts,\n      weightSpecs: weightSpecs,\n      weightData: weightData,\n      trainingConfig: trainingConfig\n    });\n  }\n}\n/**\n * Creates an IOHandler that passes saved model artifacts to a callback.\n *\n * ```js\n * function handleSave(artifacts) {\n *   // ... do something with the artifacts ...\n *   return {modelArtifactsInfo: {...}, ...};\n * }\n *\n * const saveResult = model.save(tf.io.withSaveHandler(handleSave));\n * ```\n *\n * @param saveHandler A function that accepts a `ModelArtifacts` and returns a\n *     `SaveResult`.\n */\n\nexport function withSaveHandler(saveHandler) {\n  return new PassthroughSaver(saveHandler);\n}","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { cast } from './cast';\nimport { matMul } from './mat_mul';\nimport { oneHot } from './one_hot';\nimport { op } from './operation';\nimport { transpose } from './transpose';\n/**\n * Computes the confusion matrix from true labels and predicted labels.\n *\n * ```js\n * const labels = tf.tensor1d([0, 1, 2, 1, 0], 'int32');\n * const predictions = tf.tensor1d([0, 2, 2, 1, 0], 'int32');\n * const numClasses = 3;\n * const out = tf.math.confusionMatrix(labels, predictions, numClasses);\n * out.print();\n * // Expected output matrix:\n * // [[2, 0, 0],\n * //  [0, 1, 1],\n * //  [0, 0, 1]]\n * ```\n *\n * @param labels The target labels, assumed to be 0-based integers\n *   for the classes. The shape is `[numExamples]`, where\n *   `numExamples` is the number of examples included.\n * @param predictions The predicted classes, assumed to be\n *   0-based integers for the classes. Must have the same shape as `labels`.\n * @param numClasses Number of all classes, as an integer.\n *   Its value must be larger than the largest element in `labels` and\n *   `predictions`.\n * @returns The confusion matrix as a int32-type 2D tensor. The value at\n *   row `r` and column `c` is the number of times examples of actual class\n *   `r` were predicted as class `c`.\n *\n * @doc {heading: 'Operations', subheading: 'Evaluation'}\n */\n\nexport function confusionMatrix_(labels, predictions, numClasses) {\n  var $labels = convertToTensor(labels, 'labels', 'confusionMatrix');\n  var $predictions = convertToTensor(predictions, 'predictions', 'confusionMatrix');\n  util.assert(numClasses == null || numClasses > 0 && Number.isInteger(numClasses), function () {\n    return \"If provided, numClasses must be a positive integer, \" + \"but got \".concat(numClasses);\n  });\n  util.assert($labels.rank === 1, function () {\n    return \"Expected the rank of labels to be 1, but got \".concat($labels.rank);\n  });\n  util.assert($predictions.rank === 1, function () {\n    return \"Expected the rank of predictions to be 1, \" + \"but got \".concat($predictions.rank);\n  });\n  util.assert($labels.shape[0] === $predictions.shape[0], function () {\n    return \"Mismatch in the number of examples: \" + \"\".concat($labels.shape[0], \" vs. \").concat($predictions.shape[0], \". \") + \"Labels and predictions should have the same number of elements.\";\n  });\n  util.assert(numClasses > 0 && Number.isInteger(numClasses), function () {\n    return \"numClasses is required to be a positive integer, but got \" + \"\".concat(numClasses);\n  }); // TODO(cais): In the future, if oneHot supports tensors inputs for\n  //   `numClasses`, `confusionMatrix` can make `numClasses` optional.\n\n  var oneHotLabels = oneHot(cast($labels, 'int32'), numClasses);\n  var oneHotPredictions = oneHot(cast($predictions, 'int32'), numClasses);\n  var oneHotLabelsT = transpose(oneHotLabels);\n  var product = matMul(oneHotLabelsT, oneHotPredictions);\n  return cast(product, 'int32');\n}\nexport var confusionMatrix = op({\n  confusionMatrix_: confusionMatrix_\n});","import _asyncToGenerator from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/regenerator\";\n\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { env } from '../environment';\nimport { FromPixels } from '../kernel_names';\nimport { getKernel } from '../kernel_registry';\nimport { Tensor } from '../tensor';\nimport { convertToTensor } from '../tensor_util_env';\nimport { cast } from './cast';\nimport { op } from './operation';\nimport { tensor3d } from './tensor3d';\nvar fromPixels2DContext;\n/**\n * Creates a `tf.Tensor` from an image.\n *\n * ```js\n * const image = new ImageData(1, 1);\n * image.data[0] = 100;\n * image.data[1] = 150;\n * image.data[2] = 200;\n * image.data[3] = 255;\n *\n * tf.browser.fromPixels(image).print();\n * ```\n *\n * @param pixels The input image to construct the tensor from. The\n * supported image types are all 4-channel. You can also pass in an image\n * object with following attributes:\n * `{data: Uint8Array; width: number; height: number}`\n * @param numChannels The number of channels of the output tensor. A\n * numChannels value less than 4 allows you to ignore channels. Defaults to\n * 3 (ignores alpha channel of input image).\n *\n * @returns A Tensor3D with the shape `[height, width, numChannels]`.\n *\n * @doc {heading: 'Browser', namespace: 'browser', ignoreCI: true}\n */\n\nfunction fromPixels_(pixels) {\n  var numChannels = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3;\n\n  // Sanity checks.\n  if (numChannels > 4) {\n    throw new Error('Cannot construct Tensor with more than 4 channels from pixels.');\n  }\n\n  if (pixels == null) {\n    throw new Error('pixels passed to tf.browser.fromPixels() can not be null');\n  }\n\n  var isPixelData = false;\n  var isImageData = false;\n  var isVideo = false;\n  var isImage = false;\n  var isCanvasLike = false;\n  var isImageBitmap = false;\n\n  if (pixels.data instanceof Uint8Array) {\n    isPixelData = true;\n  } else if (typeof ImageData !== 'undefined' && pixels instanceof ImageData) {\n    isImageData = true;\n  } else if (typeof HTMLVideoElement !== 'undefined' && pixels instanceof HTMLVideoElement) {\n    isVideo = true;\n  } else if (typeof HTMLImageElement !== 'undefined' && pixels instanceof HTMLImageElement) {\n    isImage = true; // tslint:disable-next-line: no-any\n  } else if (pixels.getContext != null) {\n    isCanvasLike = true;\n  } else if (typeof ImageBitmap !== 'undefined' && pixels instanceof ImageBitmap) {\n    isImageBitmap = true;\n  } else {\n    throw new Error('pixels passed to tf.browser.fromPixels() must be either an ' + \"HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData \" + \"in browser, or OffscreenCanvas, ImageData in webworker\" + \" or {data: Uint32Array, width: number, height: number}, \" + \"but was \".concat(pixels.constructor.name));\n  }\n\n  if (isVideo) {\n    var HAVE_CURRENT_DATA_READY_STATE = 2;\n\n    if (isVideo && pixels.readyState < HAVE_CURRENT_DATA_READY_STATE) {\n      throw new Error('The video element has not loaded data yet. Please wait for ' + '`loadeddata` event on the <video> element.');\n    }\n  } // If the current backend has 'FromPixels' registered, it has a more\n  // efficient way of handling pixel uploads, so we call that.\n\n\n  var kernel = getKernel(FromPixels, ENGINE.backendName);\n\n  if (kernel != null) {\n    var inputs = {\n      pixels: pixels\n    };\n    var attrs = {\n      numChannels: numChannels\n    };\n    return ENGINE.runKernel(FromPixels, inputs, attrs);\n  }\n\n  var _ref = isVideo ? [pixels.videoWidth, pixels.videoHeight] : [pixels.width, pixels.height],\n      _ref2 = _slicedToArray(_ref, 2),\n      width = _ref2[0],\n      height = _ref2[1];\n\n  var vals;\n\n  if (isCanvasLike) {\n    vals = // tslint:disable-next-line:no-any\n    pixels.getContext('2d').getImageData(0, 0, width, height).data;\n  } else if (isImageData || isPixelData) {\n    vals = pixels.data;\n  } else if (isImage || isVideo || isImageBitmap) {\n    if (fromPixels2DContext == null) {\n      fromPixels2DContext = document.createElement('canvas').getContext('2d');\n    }\n\n    fromPixels2DContext.canvas.width = width;\n    fromPixels2DContext.canvas.height = height;\n    fromPixels2DContext.drawImage(pixels, 0, 0, width, height);\n    vals = fromPixels2DContext.getImageData(0, 0, width, height).data;\n  }\n\n  var values;\n\n  if (numChannels === 4) {\n    values = new Int32Array(vals);\n  } else {\n    var numPixels = width * height;\n    values = new Int32Array(numPixels * numChannels);\n\n    for (var i = 0; i < numPixels; i++) {\n      for (var channel = 0; channel < numChannels; ++channel) {\n        values[i * numChannels + channel] = vals[i * 4 + channel];\n      }\n    }\n  }\n\n  var outShape = [height, width, numChannels];\n  return tensor3d(values, outShape, 'int32');\n} // Helper functions for |fromPixelsAsync| to check whether the input can\n// be wrapped into imageBitmap.\n\n\nfunction isPixelData(pixels) {\n  return pixels != null && pixels.data instanceof Uint8Array;\n}\n\nfunction isImageBitmapFullySupported() {\n  return typeof window !== 'undefined' && typeof ImageBitmap !== 'undefined' && window.hasOwnProperty('createImageBitmap');\n}\n\nfunction isNonEmptyPixels(pixels) {\n  return pixels != null && pixels.width !== 0 && pixels.height !== 0;\n}\n\nfunction canWrapPixelsToImageBitmap(pixels) {\n  return isImageBitmapFullySupported() && !(pixels instanceof ImageBitmap) && isNonEmptyPixels(pixels) && !isPixelData(pixels);\n}\n/**\n * Creates a `tf.Tensor` from an image in async way.\n *\n * ```js\n * const image = new ImageData(1, 1);\n * image.data[0] = 100;\n * image.data[1] = 150;\n * image.data[2] = 200;\n * image.data[3] = 255;\n *\n * (await tf.browser.fromPixelsAsync(image)).print();\n * ```\n * This API is the async version of fromPixels. The API will first\n * check |WRAP_TO_IMAGEBITMAP| flag, and try to wrap the input to\n * imageBitmap if the flag is set to true.\n *\n * @param pixels The input image to construct the tensor from. The\n * supported image types are all 4-channel. You can also pass in an image\n * object with following attributes:\n * `{data: Uint8Array; width: number; height: number}`\n * @param numChannels The number of channels of the output tensor. A\n * numChannels value less than 4 allows you to ignore channels. Defaults to\n * 3 (ignores alpha channel of input image).\n *\n * @doc {heading: 'Browser', namespace: 'browser', ignoreCI: true}\n */\n\n\nexport function fromPixelsAsync(_x) {\n  return _fromPixelsAsync.apply(this, arguments);\n}\n/**\n * Draws a `tf.Tensor` of pixel values to a byte array or optionally a\n * canvas.\n *\n * When the dtype of the input is 'float32', we assume values in the range\n * [0-1]. Otherwise, when input is 'int32', we assume values in the range\n * [0-255].\n *\n * Returns a promise that resolves when the canvas has been drawn to.\n *\n * @param img A rank-2 tensor with shape `[height, width]`, or a rank-3 tensor\n * of shape `[height, width, numChannels]`. If rank-2, draws grayscale. If\n * rank-3, must have depth of 1, 3 or 4. When depth of 1, draws\n * grayscale. When depth of 3, we draw with the first three components of\n * the depth dimension corresponding to r, g, b and alpha = 1. When depth of\n * 4, all four components of the depth dimension correspond to r, g, b, a.\n * @param canvas The canvas to draw to.\n *\n * @doc {heading: 'Browser', namespace: 'browser'}\n */\n\nfunction _fromPixelsAsync() {\n  _fromPixelsAsync = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(pixels) {\n    var numChannels,\n        inputs,\n        imageBitmap,\n        _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            numChannels = _args.length > 1 && _args[1] !== undefined ? _args[1] : 3;\n            inputs = null; // Check whether the backend needs to wrap |pixels| to imageBitmap and\n            // whether |pixels| can be wrapped to imageBitmap.\n\n            if (!(env().getBool('WRAP_TO_IMAGEBITMAP') && canWrapPixelsToImageBitmap(pixels))) {\n              _context.next = 15;\n              break;\n            }\n\n            _context.prev = 3;\n            _context.next = 6;\n            return createImageBitmap(pixels, {\n              premultiplyAlpha: 'none'\n            });\n\n          case 6:\n            imageBitmap = _context.sent;\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](3);\n            imageBitmap = null;\n\n          case 12:\n            // createImageBitmap will clip the source size.\n            // In some cases, the input will have larger size than its content.\n            // E.g. new Image(10, 10) but with 1 x 1 content. Using\n            // createImageBitmap will clip the size from 10 x 10 to 1 x 1, which\n            // is not correct. We should avoid wrapping such resouce to\n            // imageBitmap.\n            if (imageBitmap != null && imageBitmap.width === pixels.width && imageBitmap.height === pixels.height) {\n              inputs = imageBitmap;\n            } else {\n              inputs = pixels;\n            }\n\n            _context.next = 16;\n            break;\n\n          case 15:\n            inputs = pixels;\n\n          case 16:\n            return _context.abrupt(\"return\", fromPixels_(inputs, numChannels));\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[3, 9]]);\n  }));\n  return _fromPixelsAsync.apply(this, arguments);\n}\n\nexport function toPixels(_x2, _x3) {\n  return _toPixels.apply(this, arguments);\n}\n\nfunction _toPixels() {\n  _toPixels = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(img, canvas) {\n    var $img, originalImgTensor, _$img$shape$slice, _$img$shape$slice2, height, width, depth, data, multiplier, bytes, i, rgba, d, value, j, ctx, imageData;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            $img = convertToTensor(img, 'img', 'toPixels');\n\n            if (!(img instanceof Tensor)) {\n              // Assume int32 if user passed a native array.\n              originalImgTensor = $img;\n              $img = cast(originalImgTensor, 'int32');\n              originalImgTensor.dispose();\n            }\n\n            if (!($img.rank !== 2 && $img.rank !== 3)) {\n              _context2.next = 4;\n              break;\n            }\n\n            throw new Error(\"toPixels only supports rank 2 or 3 tensors, got rank \".concat($img.rank, \".\"));\n\n          case 4:\n            _$img$shape$slice = $img.shape.slice(0, 2), _$img$shape$slice2 = _slicedToArray(_$img$shape$slice, 2), height = _$img$shape$slice2[0], width = _$img$shape$slice2[1];\n            depth = $img.rank === 2 ? 1 : $img.shape[2];\n\n            if (!(depth > 4 || depth === 2)) {\n              _context2.next = 8;\n              break;\n            }\n\n            throw new Error(\"toPixels only supports depth of size \" + \"1, 3 or 4 but got \".concat(depth));\n\n          case 8:\n            if (!($img.dtype !== 'float32' && $img.dtype !== 'int32')) {\n              _context2.next = 10;\n              break;\n            }\n\n            throw new Error(\"Unsupported type for toPixels: \".concat($img.dtype, \".\") + \" Please use float32 or int32 tensors.\");\n\n          case 10:\n            _context2.next = 12;\n            return $img.data();\n\n          case 12:\n            data = _context2.sent;\n            multiplier = $img.dtype === 'float32' ? 255 : 1;\n            bytes = new Uint8ClampedArray(width * height * 4);\n            i = 0;\n\n          case 16:\n            if (!(i < height * width)) {\n              _context2.next = 41;\n              break;\n            }\n\n            rgba = [0, 0, 0, 255];\n            d = 0;\n\n          case 19:\n            if (!(d < depth)) {\n              _context2.next = 33;\n              break;\n            }\n\n            value = data[i * depth + d];\n\n            if (!($img.dtype === 'float32')) {\n              _context2.next = 26;\n              break;\n            }\n\n            if (!(value < 0 || value > 1)) {\n              _context2.next = 24;\n              break;\n            }\n\n            throw new Error(\"Tensor values for a float32 Tensor must be in the \" + \"range [0 - 1] but encountered \".concat(value, \".\"));\n\n          case 24:\n            _context2.next = 29;\n            break;\n\n          case 26:\n            if (!($img.dtype === 'int32')) {\n              _context2.next = 29;\n              break;\n            }\n\n            if (!(value < 0 || value > 255)) {\n              _context2.next = 29;\n              break;\n            }\n\n            throw new Error(\"Tensor values for a int32 Tensor must be in the \" + \"range [0 - 255] but encountered \".concat(value, \".\"));\n\n          case 29:\n            if (depth === 1) {\n              rgba[0] = value * multiplier;\n              rgba[1] = value * multiplier;\n              rgba[2] = value * multiplier;\n            } else {\n              rgba[d] = value * multiplier;\n            }\n\n          case 30:\n            d++;\n            _context2.next = 19;\n            break;\n\n          case 33:\n            j = i * 4;\n            bytes[j + 0] = Math.round(rgba[0]);\n            bytes[j + 1] = Math.round(rgba[1]);\n            bytes[j + 2] = Math.round(rgba[2]);\n            bytes[j + 3] = Math.round(rgba[3]);\n\n          case 38:\n            ++i;\n            _context2.next = 16;\n            break;\n\n          case 41:\n            if (canvas != null) {\n              canvas.width = width;\n              canvas.height = height;\n              ctx = canvas.getContext('2d');\n              imageData = new ImageData(bytes, width, height);\n              ctx.putImageData(imageData, 0, 0);\n            }\n\n            if ($img !== img) {\n              $img.dispose();\n            }\n\n            return _context2.abrupt(\"return\", bytes);\n\n          case 44:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _toPixels.apply(this, arguments);\n}\n\nexport var fromPixels = op({\n  fromPixels_: fromPixels_\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { inferShape } from '../tensor_util_env';\nimport { assertNonNull } from '../util';\nimport { makeTensor } from './tensor_ops_util';\n/**\n * Creates rank-3 `tf.Tensor` with the provided values, shape and dtype.\n *\n * The same functionality can be achieved with `tf.tensor`, but in general\n * we recommend using `tf.tensor3d` as it makes the code more readable.\n *\n *  ```js\n * // Pass a nested array.\n * tf.tensor3d([[[1], [2]], [[3], [4]]]).print();\n * ```\n * ```js\n * // Pass a flat array and specify a shape.\n * tf.tensor3d([1, 2, 3, 4], [2, 2, 1]).print();\n * ```\n *\n * @param values The values of the tensor. Can be nested array of numbers,\n *     or a flat array, or a `TypedArray`.\n * @param shape The shape of the tensor. If not provided,  it is inferred from\n *     `values`.\n * @param dtype The data type.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\n\nexport function tensor3d(values, shape, dtype) {\n  assertNonNull(values);\n\n  if (shape != null && shape.length !== 3) {\n    throw new Error('tensor3d() requires shape to have three numbers');\n  }\n\n  var inferredShape = inferShape(values, dtype);\n\n  if (inferredShape.length !== 3 && inferredShape.length !== 1) {\n    throw new Error('tensor3d() requires values to be number[][][] or flat/TypedArray');\n  }\n\n  if (inferredShape.length === 1 && shape == null) {\n    throw new Error('tensor3d() requires shape to be provided when `values` ' + 'are a flat array');\n  }\n\n  return makeTensor(values, shape, inferredShape, dtype);\n}","import _toConsumableArray from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { computeStrides, sizeFromShape } from '../util';\n/**\n * Validate gather nd inputs.\n *\n * @param tensor The tensor contains the source values.\n * @param indices The tensor contains the indices to slice the source.\n *\n * @returns [resultShape, numUpdates, sliceSize, strides]\n */\n\nexport function prepareAndValidate(tensor, indices) {\n  var tensorRank = tensor.shape.length;\n  var indicesRank = indices.shape.length;\n\n  if (tensorRank < 1) {\n    throw new Error('tf.gatherND() expects the input to be rank 1 or higher,' + \" but the rank was \".concat(tensorRank, \".\"));\n  }\n\n  if (indicesRank < 1) {\n    throw new Error('tf.gatherND() expects the indices to be rank 1 or higher,' + \" but the rank was \".concat(indicesRank, \".\"));\n  }\n\n  if (indices.dtype !== 'int32') {\n    throw new Error('tf.gatherND() expects the indices to be int32 type,' + \" but the dtype was \".concat(indices.dtype, \".\"));\n  }\n\n  if (indices.shape[indicesRank - 1] > tensorRank) {\n    throw new Error('index innermost dimension length must be <= tensor rank; saw: ' + \"\".concat(indices.shape[indicesRank - 1], \" vs. \").concat(tensorRank));\n  }\n\n  if (sizeFromShape(tensor.shape) === 0) {\n    throw new Error('Requested more than 0 entries, but input is empty.' + \" Input shape: \".concat(tensor.shape, \".\"));\n  }\n\n  var indicesShape = indices.shape;\n  var sliceRank = indicesShape[indicesShape.length - 1]; // The result shape is\n  //   indices.shape[:-1] + params.shape[indices.shape[-1]:]\n\n  var nResult = 1;\n\n  for (var i = 0; i < indicesShape.length - 1; ++i) {\n    nResult *= indicesShape[i];\n  }\n\n  var inputShape = tensor.shape;\n  var resultShape = indicesShape.slice();\n  resultShape.pop();\n  var sliceSize = 1;\n\n  for (var _i = sliceRank; _i < tensorRank; ++_i) {\n    sliceSize *= inputShape[_i];\n    resultShape.push(inputShape[_i]);\n  }\n\n  var strides = [].concat(_toConsumableArray(computeStrides(tensor.shape).map(function (stride) {\n    return stride / sliceSize;\n  })), [1]).slice(0, sliceRank);\n  return [resultShape, nResult, sliceSize, strides];\n}","import _toConsumableArray from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { computeStrides, sizeFromShape } from '../util';\n/**\n * Check whether updates.shape = indices.shape[:batchDim] +\n * shape[sliceDim:]\n *\n * @param x The input tensor.\n */\n\nexport function validateUpdateShape(shape, indices, updates) {\n  var sliceDim = indices.rank > 1 ? indices.shape[indices.rank - 1] : 1;\n  var batchDim = indices.rank > 1 ? indices.rank - 1 : 1;\n  var shapeError = 'Must have updates.shape = indices.shape[:batchDim] + ' + \"shape[sliceDim:], got updates.shape: \".concat(updates.shape) + \", indices.shape: \".concat(indices.shape, \", shape: \").concat(shape) + \", sliceDim: \".concat(sliceDim, \", and batchDim: \").concat(batchDim, \".\");\n\n  if (updates.rank < batchDim) {\n    throw new Error(shapeError + \" update.rank < \".concat(batchDim, \". \"));\n  }\n\n  if (shape.length < sliceDim + (updates.rank - batchDim)) {\n    throw new Error(shapeError + \" Output shape length < \".concat(sliceDim + (updates.rank - batchDim)));\n  }\n\n  if (updates.rank !== batchDim + shape.length - sliceDim) {\n    throw new Error(shapeError + \" update.rank != \".concat(batchDim + shape.length - sliceDim));\n  }\n\n  for (var d = 0; d < batchDim; ++d) {\n    if (updates.shape[d] !== indices.shape[d]) {\n      throw new Error(shapeError + \" updates.shape[\".concat(d, \"] (\").concat(updates.shape[d], \") != indices.shape[\").concat(d, \"] (\").concat(indices.shape[d], \").\"));\n    }\n  }\n\n  for (var _d = 0; _d < updates.rank - batchDim; ++_d) {\n    if (updates.shape[_d + batchDim] !== shape[_d + sliceDim]) {\n      throw new Error(shapeError + \" updates.shape[\".concat(_d + batchDim, \"] (\").concat(updates.shape[_d + batchDim], \") != shape[\").concat(_d + batchDim, \"] (\").concat(shape[_d + batchDim], \")\"));\n    }\n  }\n}\n/**\n * Validate scatter nd inputs.\n *\n * @param update The tensor contains the update values.\n * @param indices The tensor contains the indices for the update values.\n * @param shape The shape of the output tensor.\n */\n\nexport function validateInput(updates, indices, shape) {\n  if (indices.rank < 1) {\n    throw new Error('tf.scatterND() expects the indices to be rank 1 or higher,' + \" but the rank was \".concat(indices.rank, \".\"));\n  }\n\n  if (updates.rank < 1) {\n    throw new Error('tf.scatterND() expects the updates to be rank 1 or higher,' + \" but the rank was \".concat(updates.rank, \".\"));\n  }\n\n  if (indices.dtype !== 'int32') {\n    throw new Error(\"The dtype of 'indices' should be int32, but got dtype: \".concat(indices.dtype));\n  }\n\n  if (shape.length < 1) {\n    throw new Error(\"Output rank must be greater or equal to 1, but got shape: \".concat(shape));\n  }\n\n  if (shape.length === 0) {\n    if (indices.size === 0) {\n      throw new Error(\"Indices specified for empty output. indices shape: \".concat(indices.shape));\n    }\n\n    if (updates.size === 0) {\n      throw new Error(\"Updates specified for empty output. updates shape: \".concat(updates.shape));\n    }\n  }\n\n  validateUpdateShape(shape, indices, updates);\n}\n/**\n * Calculate the shape information for the output.\n *\n * @param update The tensor contains the update values.\n * @param indices The tensor contains the indices for the update values.\n * @param shape The shape of the output tensor.\n *\n * @returns ScatterShapeInfo\n */\n\nexport function calculateShapes(updates, indices, shape) {\n  // Calculate the number of dimensions in indices\n  var indicesRank = indices.shape.length;\n  var sliceRank = indicesRank > 1 ? indices.shape[indicesRank - 1] : 1; // Calculate the number of elements that make up each slice of our updated\n  // tensor. This allows us to work with flattened tensors and copy over whole\n  // slices at a time.\n\n  var totalNd = shape.length;\n  var sliceSize = 1;\n\n  for (var i = sliceRank; i < totalNd; ++i) {\n    sliceSize *= shape[i];\n  }\n\n  var safeSliceDim = sliceRank < 1 ? 1 : sliceRank;\n  var numUpdates = sizeFromShape(indices.shape) / safeSliceDim;\n  var strides = [].concat(_toConsumableArray(computeStrides(shape.slice(0, sliceRank))), [1]);\n  var outputSize = sizeFromShape(shape);\n  return {\n    sliceRank: sliceRank,\n    numUpdates: numUpdates,\n    sliceSize: sliceSize,\n    strides: strides,\n    outputSize: outputSize\n  };\n}","import _classCallCheck from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { assert } from './util';\n/**\n * Serializable defines the serialization contract.\n *\n * TFJS requires serializable classes to return their className when asked\n * to avoid issues with minification.\n */\n\nexport var Serializable = /*#__PURE__*/function () {\n  function Serializable() {\n    _classCallCheck(this, Serializable);\n  }\n\n  _createClass(Serializable, [{\n    key: \"getClassName\",\n    value:\n    /**\n     * Return the class name for this class to use in serialization contexts.\n     *\n     * Generally speaking this will be the same thing that constructor.name\n     * would have returned.  However, the class name needs to be robust\n     * against minification for serialization/deserialization to work properly.\n     *\n     * There's also places such as initializers.VarianceScaling, where\n     * implementation details between different languages led to different\n     * class hierarchies and a non-leaf node is used for serialization purposes.\n     */\n    function getClassName() {\n      return this.constructor.className;\n    }\n    /**\n     * Creates an instance of T from a ConfigDict.\n     *\n     * This works for most descendants of serializable.  A few need to\n     * provide special handling.\n     * @param cls A Constructor for the class to instantiate.\n     * @param config The Configuration for the object.\n     */\n\n    /** @nocollapse */\n\n  }], [{\n    key: \"fromConfig\",\n    value: function fromConfig(cls, config) {\n      return new cls(config);\n    }\n  }]);\n\n  return Serializable;\n}();\n/**\n * Maps string keys to class constructors.\n *\n * Used during (de)serialization from the cross-language JSON format, which\n * requires the class name in the serialization format matches the class\n * names as used in Python, should it exist.\n */\n\nexport var SerializationMap = /*#__PURE__*/function () {\n  function SerializationMap() {\n    _classCallCheck(this, SerializationMap);\n\n    this.classNameMap = {};\n  }\n  /**\n   * Returns the singleton instance of the map.\n   */\n\n\n  _createClass(SerializationMap, null, [{\n    key: \"getMap\",\n    value: function getMap() {\n      if (SerializationMap.instance == null) {\n        SerializationMap.instance = new SerializationMap();\n      }\n\n      return SerializationMap.instance;\n    }\n    /**\n     * Registers the class as serializable.\n     */\n\n  }, {\n    key: \"register\",\n    value: function register(cls) {\n      SerializationMap.getMap().classNameMap[cls.className] = [cls, cls.fromConfig];\n    }\n  }]);\n\n  return SerializationMap;\n}();\n/**\n * Register a class with the serialization map of TensorFlow.js.\n *\n * This is often used for registering custom Layers, so they can be\n * serialized and deserialized.\n *\n * Example:\n *\n * ```js\n * class MyCustomLayer extends tf.layers.Layer {\n *   static className = 'MyCustomLayer';\n *\n *   constructor(config) {\n *     super(config);\n *   }\n * }\n * tf.serialization.registerClass(MyCustomLayer);\n * ```\n *\n * @param cls The class to be registered. It must have a public static member\n *   called `className` defined and the value must be a non-empty string.\n *\n * @doc {heading: 'Models', subheading: 'Serialization', ignoreCI: true}\n */\n\nexport function registerClass(cls) {\n  assert(cls.className != null, function () {\n    return \"Class being registered does not have the static className \" + \"property defined.\";\n  });\n  assert(typeof cls.className === 'string', function () {\n    return \"className is required to be a string, but got type \" + typeof cls.className;\n  });\n  assert(cls.className.length > 0, function () {\n    return \"Class being registered has an empty-string as its className, \" + \"which is disallowed.\";\n  });\n  SerializationMap.register(cls);\n}","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from './engine';\nimport { inferShape } from './tensor_util_env';\nimport { arraysEqual, encodeString, flatten, isString, isTypedArray } from './util';\nvar TEST_EPSILON_FLOAT32 = 1e-3;\nexport var TEST_EPSILON_FLOAT16 = 1e-1;\nexport function expectArraysClose(actual, expected, epsilon) {\n  if (epsilon == null) {\n    epsilon = testEpsilon();\n  }\n\n  return expectArraysPredicate(actual, expected, function (a, b) {\n    return areClose(a, b, epsilon);\n  });\n}\nexport function testEpsilon() {\n  return ENGINE.backend.floatPrecision() === 32 ? TEST_EPSILON_FLOAT32 : TEST_EPSILON_FLOAT16;\n}\n\nfunction expectArraysPredicate(actual, expected, predicate) {\n  var checkClassType = true;\n\n  if (isTypedArray(actual) || isTypedArray(expected)) {\n    checkClassType = false;\n  }\n\n  if (isTypedArray(actual) && isTypedArray(expected)) {\n    checkClassType = true;\n  }\n\n  if (checkClassType) {\n    var aType = actual.constructor.name;\n    var bType = expected.constructor.name;\n\n    if (aType !== bType) {\n      throw new Error(\"Arrays are of different type. Actual: \".concat(aType, \". \") + \"Expected: \".concat(bType));\n    }\n  }\n\n  if (Array.isArray(actual) && Array.isArray(expected)) {\n    var actualShape = inferShape(actual);\n    var expectedShape = inferShape(expected);\n\n    if (!arraysEqual(actualShape, expectedShape)) {\n      throw new Error(\"Arrays have different shapes. \" + \"Actual: [\".concat(actualShape, \"]. Expected: [\").concat(expectedShape, \"]\"));\n    }\n  }\n\n  var actualFlat = isTypedArray(actual) ? actual : flatten(actual);\n  var expectedFlat = isTypedArray(expected) ? expected : flatten(expected);\n\n  if (actualFlat.length !== expectedFlat.length) {\n    throw new Error(\"Arrays have different lengths actual: \".concat(actualFlat.length, \" vs \") + \"expected: \".concat(expectedFlat.length, \".\\n\") + \"Actual:   \".concat(actualFlat, \".\\n\") + \"Expected: \".concat(expectedFlat, \".\"));\n  }\n\n  for (var i = 0; i < expectedFlat.length; ++i) {\n    var a = actualFlat[i];\n    var e = expectedFlat[i];\n\n    if (!predicate(a, e)) {\n      throw new Error(\"Arrays differ: actual[\".concat(i, \"] = \").concat(a, \", expected[\").concat(i, \"] = \").concat(e, \".\\n\") + \"Actual:   \".concat(actualFlat, \".\\n\") + \"Expected: \".concat(expectedFlat, \".\"));\n    }\n  }\n}\n\nexport function expectPromiseToFail(fn, done) {\n  fn().then(function () {\n    return done.fail();\n  }, function () {\n    return done();\n  });\n}\nexport function expectArraysEqual(actual, expected) {\n  var exp = typeof expected === 'string' || typeof expected === 'number' || typeof expected === 'boolean' ? [expected] : expected;\n\n  if (isString(actual) || isString(actual[0]) || isString(expected) || isString(expected[0])) {\n    // tslint:disable-next-line: triple-equals\n    return expectArraysPredicate(actual, exp, function (a, b) {\n      return a == b;\n    });\n  }\n\n  return expectArraysPredicate(actual, expected, function (a, b) {\n    return areClose(a, b, 0);\n  });\n}\nexport function expectNumbersClose(a, e, epsilon) {\n  if (epsilon == null) {\n    epsilon = testEpsilon();\n  }\n\n  if (!areClose(a, e, epsilon)) {\n    throw new Error(\"Numbers differ: actual === \".concat(a, \", expected === \").concat(e));\n  }\n}\n\nfunction areClose(a, e, epsilon) {\n  if (!isFinite(a) && !isFinite(e)) {\n    return true;\n  }\n\n  if (isNaN(a) || isNaN(e) || Math.abs(a - e) > epsilon) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function expectValuesInRange(actual, low, high) {\n  for (var i = 0; i < actual.length; i++) {\n    if (actual[i] < low || actual[i] > high) {\n      throw new Error(\"Value out of range:\".concat(actual[i], \" low: \").concat(low, \", high: \").concat(high));\n    }\n  }\n}\nexport function expectArrayBuffersEqual(actual, expected) {\n  // Safari & Jasmine don't like comparing ArrayBuffers directly. Wrapping in\n  // a Float32Array solves this issue.\n  expect(new Float32Array(actual)).toEqual(new Float32Array(expected));\n}\n/** Encodes strings into utf-8 bytes. */\n\nexport function encodeStrings(a) {\n  for (var i = 0; i < a.length; i++) {\n    var val = a[i];\n\n    if (Array.isArray(val)) {\n      encodeStrings(val);\n    } else {\n      a[i] = encodeString(val);\n    }\n  }\n\n  return a;\n}","/** @license See the LICENSE file. */\n// This code is auto-generated, do not modify this file!\nvar version = '3.4.0';\nexport { version };","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from './engine';\nimport { env } from './environment';\nimport { setDeprecationWarningFn } from './tensor';\nimport { getTensorsInContainer } from './tensor_util';\n/**\n * Enables production mode which disables correctness checks in favor of\n * performance.\n *\n * @doc {heading: 'Environment'}\n */\n\nexport function enableProdMode() {\n  env().set('PROD', true);\n}\n/**\n * Enables debug mode which will log information about all executed kernels:\n * the elapsed time of the kernel execution, as well as the rank, shape, and\n * size of the output tensor.\n *\n * Debug mode will significantly slow down your application as it will\n * download the result of every operation to the CPU. This should not be used in\n * production. Debug mode does not affect the timing information of the kernel\n * execution as we do not measure download time in the kernel execution time.\n *\n * See also: `tf.profile`, `tf.memory`.\n *\n * @doc {heading: 'Environment'}\n */\n\nexport function enableDebugMode() {\n  env().set('DEBUG', true);\n}\n/** Globally disables deprecation warnings */\n\nexport function disableDeprecationWarnings() {\n  env().set('DEPRECATION_WARNINGS_ENABLED', false);\n  console.warn(\"TensorFlow.js deprecation warnings have been disabled.\");\n}\n/** Warn users about deprecated functionality. */\n\nexport function deprecationWarn(msg) {\n  if (env().getBool('DEPRECATION_WARNINGS_ENABLED')) {\n    console.warn(msg + ' You can disable deprecation warnings with ' + 'tf.disableDeprecationWarnings().');\n  }\n}\nsetDeprecationWarningFn(deprecationWarn);\n/**\n * Dispose all variables kept in backend engine.\n *\n * @doc {heading: 'Environment'}\n */\n\nexport function disposeVariables() {\n  ENGINE.disposeVariables();\n}\n/**\n * It returns the global engine that keeps track of all tensors and backends.\n *\n * @doc {heading: 'Environment'}\n */\n\nexport function engine() {\n  return ENGINE;\n}\n/**\n * Returns memory info at the current time in the program. The result is an\n * object with the following properties:\n *\n * - `numBytes`: Number of bytes allocated (undisposed) at this time.\n * - `numTensors`: Number of unique tensors allocated.\n * - `numDataBuffers`: Number of unique data buffers allocated\n *   (undisposed) at this time, which is ≤ the number of tensors\n *   (e.g. `a.reshape(newShape)` makes a new Tensor that shares the same\n *   data buffer with `a`).\n * - `unreliable`: True if the memory usage is unreliable. See `reasons` when\n *    `unreliable` is true.\n * - `reasons`: `string[]`, reasons why the memory is unreliable, present if\n *    `unreliable` is true.\n *\n * WebGL Properties:\n * - `numBytesInGPU`: Number of bytes allocated (undisposed) in the GPU only at\n *     this time.\n *\n * @doc {heading: 'Performance', subheading: 'Memory'}\n */\n\nexport function memory() {\n  return ENGINE.memory();\n}\n/**\n * Executes the provided function `f()` and returns a promise that resolves\n * with information about the function's memory use:\n * - `newBytes`: the number of new bytes allocated\n * - `newTensors`: the number of new tensors created\n * - `peakBytes`: the peak number of bytes allocated\n * - `kernels`: an array of objects for each kernel involved that reports\n * their input and output shapes, number of bytes used, and number of new\n * tensors created.\n * - `kernelNames`: an array of unique strings with just the names of the\n * kernels in the `kernels` array.\n *\n * ```js\n * const profile = await tf.profile(() => {\n *   const x = tf.tensor1d([1, 2, 3]);\n *   let x2 = x.square();\n *   x2.dispose();\n *   x2 = x.square();\n *   x2.dispose();\n *   return x;\n * });\n *\n * console.log(`newBytes: ${profile.newBytes}`);\n * console.log(`newTensors: ${profile.newTensors}`);\n * console.log(`byte usage over all kernels: ${profile.kernels.map(k =>\n * k.totalBytesSnapshot)}`);\n * ```\n *\n *\n * @doc {heading: 'Performance', subheading: 'Profile'}\n */\n\nexport function profile(f) {\n  return ENGINE.profile(f);\n}\n/**\n * Executes the provided function `fn` and after it is executed, cleans up all\n * intermediate tensors allocated by `fn` except those returned by `fn`.\n * `fn` must not return a Promise (async functions not allowed). The returned\n * result can be a complex object.\n *\n * Using this method helps avoid memory leaks. In general, wrap calls to\n * operations in `tf.tidy` for automatic memory cleanup.\n *\n * NOTE: Variables do *not* get cleaned up when inside a tidy(). If you want to\n * dispose variables, please use `tf.disposeVariables` or call dispose()\n * directly on variables.\n *\n * ```js\n * // y = 2 ^ 2 + 1\n * const y = tf.tidy(() => {\n *   // a, b, and one will be cleaned up when the tidy ends.\n *   const one = tf.scalar(1);\n *   const a = tf.scalar(2);\n *   const b = a.square();\n *\n *   console.log('numTensors (in tidy): ' + tf.memory().numTensors);\n *\n *   // The value returned inside the tidy function will return\n *   // through the tidy, in this case to the variable y.\n *   return b.add(one);\n * });\n *\n * console.log('numTensors (outside tidy): ' + tf.memory().numTensors);\n * y.print();\n * ```\n *\n * @param nameOrFn The name of the closure, or the function to execute.\n *     If a name is provided, the 2nd argument should be the function.\n *     If debug mode is on, the timing and the memory usage of the function\n *     will be tracked and displayed on the console using the provided name.\n * @param fn The function to execute.\n *\n * @doc {heading: 'Performance', subheading: 'Memory'}\n */\n\nexport function tidy(nameOrFn, fn) {\n  return ENGINE.tidy(nameOrFn, fn);\n}\n/**\n * Disposes any `tf.Tensor`s found within the provided object.\n *\n * @param container an object that may be a `tf.Tensor` or may directly\n *     contain `tf.Tensor`s, such as a `Tensor[]` or `{key: Tensor, ...}`. If\n *     the object is not a `tf.Tensor` or does not contain `Tensors`, nothing\n *     happens. In general it is safe to pass any object here, except that\n *     `Promise`s are not supported.\n *\n * @doc {heading: 'Performance', subheading: 'Memory'}\n */\n\nexport function dispose(container) {\n  var tensors = getTensorsInContainer(container);\n  tensors.forEach(function (tensor) {\n    return tensor.dispose();\n  });\n}\n/**\n * Keeps a `tf.Tensor` generated inside a `tf.tidy` from being disposed\n * automatically.\n *\n * ```js\n * let b;\n * const y = tf.tidy(() => {\n *   const one = tf.scalar(1);\n *   const a = tf.scalar(2);\n *\n *   // b will not be cleaned up by the tidy. a and one will be cleaned up\n *   // when the tidy ends.\n *   b = tf.keep(a.square());\n *\n *   console.log('numTensors (in tidy): ' + tf.memory().numTensors);\n *\n *   // The value returned inside the tidy function will return\n *   // through the tidy, in this case to the variable y.\n *   return b.add(one);\n * });\n *\n * console.log('numTensors (outside tidy): ' + tf.memory().numTensors);\n * console.log('y:');\n * y.print();\n * console.log('b:');\n * b.print();\n * ```\n *\n * @param result The tensor to keep from being disposed.\n *\n * @doc {heading: 'Performance', subheading: 'Memory'}\n */\n\nexport function keep(result) {\n  return ENGINE.keep(result);\n}\n/**\n * Executes `f()` and returns a promise that resolves with timing\n * information.\n *\n * The result is an object with the following properties:\n *\n * - `wallMs`: Wall execution time.\n * - `kernelMs`: Kernel execution time, ignoring data transfer. If using the\n * WebGL backend and the query timer extension is not available, this will\n * return an error object.\n * - On `WebGL` The following additional properties exist:\n *   - `uploadWaitMs`: CPU blocking time on texture uploads.\n *   - `downloadWaitMs`: CPU blocking time on texture downloads (readPixels).\n *\n * ```js\n * const x = tf.randomNormal([20, 20]);\n * const time = await tf.time(() => x.matMul(x));\n *\n * console.log(`kernelMs: ${time.kernelMs}, wallTimeMs: ${time.wallMs}`);\n * ```\n *\n * @param f The function to execute and time.\n *\n * @doc {heading: 'Performance', subheading: 'Timing'}\n */\n\nexport function time(f) {\n  return ENGINE.time(f);\n}\n/**\n * Sets the backend (cpu, webgl, wasm, etc) responsible for creating tensors and\n * executing operations on those tensors. Returns a promise that resolves\n * to a boolean if the backend initialization was successful.\n *\n * Note this disposes the current backend, if any, as well as any tensors\n * associated with it. A new backend is initialized, even if it is of the\n * same type as the previous one.\n *\n * @param backendName The name of the backend. Currently supports\n *     `'webgl'|'cpu'` in the browser, `'tensorflow'` under node.js\n *     (requires tfjs-node), and `'wasm'` (requires tfjs-backend-wasm).\n *\n * @doc {heading: 'Backends'}\n */\n\nexport function setBackend(backendName) {\n  return ENGINE.setBackend(backendName);\n}\n/**\n * Returns a promise that resolves when the currently selected backend (or the\n * highest priority one) has initialized. Await this promise when you are using\n * a backend that has async initialization.\n *\n * @doc {heading: 'Backends'}\n */\n\nexport function ready() {\n  return ENGINE.ready();\n}\n/**\n * Returns the current backend name (cpu, webgl, etc). The backend is\n * responsible for creating tensors and executing operations on those tensors.\n *\n * @doc {heading: 'Backends'}\n */\n\nexport function getBackend() {\n  return ENGINE.backendName;\n}\n/**\n * Removes a backend and the registered factory.\n *\n * @doc {heading: 'Backends'}\n */\n\nexport function removeBackend(name) {\n  ENGINE.removeBackend(name);\n}\n/**\n * Finds the backend registered under the provided name. Returns null if the\n * name is not in the registry, or the registration hasn't finished yet.\n */\n\nexport function findBackend(name) {\n  return ENGINE.findBackend(name);\n}\n/**\n * Finds the backend factory registered under the provided name. Returns a\n * function that produces a new backend when called. Returns null if the name\n * is not in the registry.\n */\n\nexport function findBackendFactory(name) {\n  return ENGINE.findBackendFactory(name);\n}\n/**\n * Registers a global backend. The registration should happen when importing\n * a module file (e.g. when importing `backend_webgl.ts`), and is used for\n * modular builds (e.g. custom tfjs bundle with only webgl support).\n *\n * @param factory The backend factory function. When called, it should\n * return a backend instance, or a promise of an instance.\n * @param priority The priority of the backend (higher = more important).\n *     In case multiple backends are registered, the priority is used to find\n *     the best backend. Defaults to 1.\n * @return False if there is already a registered backend under this name, true\n *     if not.\n *\n * @doc {heading: 'Backends'}\n */\n\nexport function registerBackend(name, factory) {\n  var priority = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  return ENGINE.registerBackend(name, factory, priority);\n}\n/**\n * Gets the current backend. If no backends have been initialized, this will\n * attempt to initialize the best backend. Will throw an error if the highest\n * priority backend has async initialization, in which case, you should call\n * 'await tf.ready()' before running other code.\n *\n * @doc {heading: 'Backends'}\n */\n\nexport function backend() {\n  return ENGINE.backend;\n}\n/**\n * Sets the global platform.\n *\n * @param platformName The name of this platform.\n * @param platform A platform implementation.\n */\n\nexport function setPlatform(platformName, platform) {\n  env().setPlatform(platformName, platform);\n}","import _asyncToGenerator from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _regeneratorRuntime from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { dispose as _dispose } from '../globals';\nimport { variableGrads } from '../gradients';\nimport { scalar } from '../ops/ops';\nimport { Serializable } from '../serialization';\n/** @doc {heading: 'Training', subheading: 'Classes', namespace: 'train'} */\n\nexport var Optimizer = /*#__PURE__*/function (_Serializable) {\n  _inherits(Optimizer, _Serializable);\n\n  var _super = _createSuper(Optimizer);\n\n  function Optimizer() {\n    _classCallCheck(this, Optimizer);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Optimizer, [{\n    key: \"minimize\",\n    value:\n    /**\n     * Executes `f()` and minimizes the scalar output of `f()` by computing\n     * gradients of y with respect to the list of trainable variables provided by\n     * `varList`. If no list is provided, it defaults to all trainable variables.\n     *\n     * @param f The function to execute and whose output to minimize.\n     * @param returnCost Whether to return the scalar cost value produced by\n     * executing `f()`.\n     * @param varList An optional list of variables to update. If specified, only\n     * the trainable variables in varList will be updated by minimize. Defaults to\n     * all trainable variables.\n     *\n     * @doc {heading: 'Training', subheading: 'Optimizers'}\n     */\n    function minimize(f) {\n      var returnCost = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var varList = arguments.length > 2 ? arguments[2] : undefined;\n\n      var _this$computeGradient = this.computeGradients(f, varList),\n          value = _this$computeGradient.value,\n          grads = _this$computeGradient.grads;\n\n      if (varList != null) {\n        var gradArray = varList.map(function (v) {\n          return {\n            name: v.name,\n            tensor: grads[v.name]\n          };\n        });\n        this.applyGradients(gradArray);\n      } else {\n        this.applyGradients(grads);\n      } // Dispose gradients.\n\n\n      _dispose(grads);\n\n      if (returnCost) {\n        return value;\n      } else {\n        value.dispose();\n        return null;\n      }\n    }\n    /**\n     * The number of iterations that this optimizer instance has been invoked for.\n     */\n\n  }, {\n    key: \"iterations\",\n    get: function get() {\n      if (this.iterations_ == null) {\n        this.iterations_ = 0;\n      }\n\n      return this.iterations_;\n    }\n  }, {\n    key: \"incrementIterations\",\n    value: function incrementIterations() {\n      this.iterations_ = this.iterations + 1;\n    }\n    /**\n     * Executes f() and computes the gradient of the scalar output of f() with\n     * respect to the list of trainable variables provided by `varList`. If no\n     * list is provided, it defaults to all trainable variables.\n     *\n     * @param f The function to execute and whose output to use for computing\n     * gradients with respect to variables.\n     * @param varList An optional list of variables to compute gradients with\n     * respect to. If specified, only the trainable variables in varList will have\n     * gradients computed with respect to. Defaults to all trainable variables.\n     *\n     * @doc {heading: 'Training', subheading: 'Optimizers'}\n     */\n\n  }, {\n    key: \"computeGradients\",\n    value: function computeGradients(f, varList) {\n      return variableGrads(f, varList);\n    }\n    /**\n     * Dispose the variables (if any) owned by this optimizer instance.\n     */\n\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      if (this.iterations_ != null) {\n        _dispose(this.iterations_);\n      }\n    }\n  }, {\n    key: \"saveIterations\",\n    value: function () {\n      var _saveIterations = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this.iterations_ == null) {\n                  this.iterations_ = 0;\n                }\n\n                return _context.abrupt(\"return\", {\n                  name: 'iter',\n                  // TODO(cais): Use 'int64' type when available.\n                  tensor: scalar(this.iterations_, 'int32')\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function saveIterations() {\n        return _saveIterations.apply(this, arguments);\n      }\n\n      return saveIterations;\n    }()\n  }, {\n    key: \"getWeights\",\n    value: function () {\n      var _getWeights = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                throw new Error('getWeights() is not implemented for this optimizer yet.');\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getWeights() {\n        return _getWeights.apply(this, arguments);\n      }\n\n      return getWeights;\n    }()\n  }, {\n    key: \"setWeights\",\n    value: function () {\n      var _setWeights = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(weightValues) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                throw new Error(\"setWeights() is not implemented for this optimizer class \" + \"\".concat(this.getClassName()));\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function setWeights(_x) {\n        return _setWeights.apply(this, arguments);\n      }\n\n      return setWeights;\n    }()\n    /**\n     * Extract the first element of the weight values and set it\n     * as the iterations counter variable of this instance of optimizer.\n     *\n     * @param weightValues\n     * @returns Weight values with the first element consumed and excluded.\n     */\n\n  }, {\n    key: \"extractIterations\",\n    value: function () {\n      var _extractIterations = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(weightValues) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return weightValues[0].tensor.data();\n\n              case 2:\n                this.iterations_ = _context4.sent[0];\n                return _context4.abrupt(\"return\", weightValues.slice(1));\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function extractIterations(_x2) {\n        return _extractIterations.apply(this, arguments);\n      }\n\n      return extractIterations;\n    }()\n  }]);\n\n  return Optimizer;\n}(Serializable);\nObject.defineProperty(Optimizer, Symbol.hasInstance, {\n  value: function value(instance) {\n    return instance.minimize != null && instance.computeGradients != null && instance.applyGradients != null;\n  }\n});","import _toConsumableArray from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _regeneratorRuntime from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { dispose as _dispose, tidy } from '../globals';\nimport { add } from '../ops/add';\nimport { div } from '../ops/div';\nimport { mul } from '../ops/mul';\nimport { sqrt } from '../ops/ops';\nimport { square } from '../ops/square';\nimport { zerosLike } from '../ops/zeros_like';\nimport { registerClass } from '../serialization';\nimport { Optimizer } from './optimizer';\n/** @doclink Optimizer */\n\nexport var AdadeltaOptimizer = /*#__PURE__*/function (_Optimizer) {\n  _inherits(AdadeltaOptimizer, _Optimizer);\n\n  var _super = _createSuper(AdadeltaOptimizer);\n\n  function AdadeltaOptimizer(learningRate, rho) {\n    var _this;\n\n    var epsilon = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n    _classCallCheck(this, AdadeltaOptimizer);\n\n    _this = _super.call(this);\n    _this.learningRate = learningRate;\n    _this.rho = rho;\n    _this.epsilon = epsilon;\n    _this.accumulatedGrads = [];\n    _this.accumulatedUpdates = [];\n\n    if (epsilon == null) {\n      _this.epsilon = ENGINE.backend.epsilon();\n    }\n\n    return _this;\n  }\n\n  _createClass(AdadeltaOptimizer, [{\n    key: \"applyGradients\",\n    value: function applyGradients(variableGradients) {\n      var _this2 = this;\n\n      var variableNames = Array.isArray(variableGradients) ? variableGradients.map(function (item) {\n        return item.name;\n      }) : Object.keys(variableGradients);\n      variableNames.forEach(function (name, i) {\n        var value = ENGINE.registeredVariables[name];\n        var trainable = false;\n\n        if (_this2.accumulatedGrads[i] == null) {\n          _this2.accumulatedGrads[i] = {\n            originalName: \"\".concat(name, \"/accum_grad\"),\n            variable: tidy(function () {\n              return zerosLike(value).variable(trainable);\n            })\n          };\n        }\n\n        if (_this2.accumulatedUpdates[i] == null) {\n          _this2.accumulatedUpdates[i] = {\n            originalName: \"\".concat(name, \"/accum_var\"),\n            variable: tidy(function () {\n              return zerosLike(value).variable(trainable);\n            })\n          };\n        }\n\n        var gradient = Array.isArray(variableGradients) ? variableGradients[i].tensor : variableGradients[name];\n\n        if (gradient == null) {\n          return;\n        }\n\n        var accumulatedGrad = _this2.accumulatedGrads[i].variable;\n        var accumulatedUpdate = _this2.accumulatedUpdates[i].variable;\n        tidy(function () {\n          var newAccumulatedGrad = add(mul(accumulatedGrad, _this2.rho), mul(square(gradient), 1 - _this2.rho));\n          var updates = mul(div(sqrt(add(accumulatedUpdate, _this2.epsilon)), sqrt(add(accumulatedGrad, _this2.epsilon))), gradient);\n          var newAccumulatedUpdate = add(mul(accumulatedUpdate, _this2.rho), mul(square(updates), 1 - _this2.rho));\n          accumulatedGrad.assign(newAccumulatedGrad);\n          accumulatedUpdate.assign(newAccumulatedUpdate);\n          var newValue = add(mul(updates, -_this2.learningRate), value);\n          value.assign(newValue);\n        });\n      });\n      this.incrementIterations();\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      if (this.accumulatedUpdates != null) {\n        _dispose(this.accumulatedGrads.map(function (v) {\n          return v.variable;\n        }));\n\n        _dispose(this.accumulatedUpdates.map(function (v) {\n          return v.variable;\n        }));\n      }\n    }\n  }, {\n    key: \"getWeights\",\n    value: function () {\n      var _getWeights = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var variables;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // Order matters for Python compatibility.\n                variables = [].concat(_toConsumableArray(this.accumulatedGrads), _toConsumableArray(this.accumulatedUpdates));\n                _context.next = 3;\n                return this.saveIterations();\n\n              case 3:\n                _context.t0 = _context.sent;\n                return _context.abrupt(\"return\", [_context.t0].concat(variables.map(function (v) {\n                  return {\n                    name: v.originalName,\n                    tensor: v.variable\n                  };\n                })));\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getWeights() {\n        return _getWeights.apply(this, arguments);\n      }\n\n      return getWeights;\n    }()\n  }, {\n    key: \"setWeights\",\n    value: function () {\n      var _setWeights = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(weightValues) {\n        var variableCount, trainable;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.extractIterations(weightValues);\n\n              case 2:\n                weightValues = _context2.sent;\n                variableCount = weightValues.length / 2;\n                trainable = false;\n                this.accumulatedGrads = weightValues.slice(0, variableCount).map(function (v) {\n                  return {\n                    originalName: v.name,\n                    variable: v.tensor.variable(trainable)\n                  };\n                });\n                this.accumulatedUpdates = weightValues.slice(variableCount, variableCount * 2).map(function (v) {\n                  return {\n                    originalName: v.name,\n                    variable: v.tensor.variable(trainable)\n                  };\n                });\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function setWeights(_x) {\n        return _setWeights.apply(this, arguments);\n      }\n\n      return setWeights;\n    }()\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      return {\n        'learningRate': this.learningRate,\n        'rho': this.rho,\n        'epsilon': this.epsilon\n      };\n    }\n    /** @nocollapse */\n\n  }], [{\n    key: \"fromConfig\",\n    value: function fromConfig(cls, config) {\n      return new cls(config['learningRate'], config['rho'], config['epsilon']);\n    }\n  }]);\n\n  return AdadeltaOptimizer;\n}(Optimizer);\n/** @nocollapse */\n\nAdadeltaOptimizer.className = 'Adadelta'; // Name matters for Python compatibility.\n\nregisterClass(AdadeltaOptimizer);","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Fill } from '../kernel_names';\n/**\n * Creates a `tf.Tensor` filled with a scalar value.\n *\n * ```js\n * tf.fill([2, 2], 4).print();\n * ```\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param value The scalar value to fill the tensor with.\n * @param dtype The type of an element in the resulting tensor. Defaults to\n * 'float'.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\n\nfunction fill(shape, value, dtype) {\n  var attrs = {\n    shape: shape,\n    value: value,\n    dtype: dtype\n  };\n  return ENGINE.runKernel(Fill, {}, attrs);\n}\n\nexport { fill };","import _asyncToGenerator from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _regeneratorRuntime from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { dispose as _dispose, tidy } from '../globals';\nimport { add } from '../ops/add';\nimport { div } from '../ops/div';\nimport { fill } from '../ops/fill';\nimport { mul } from '../ops/mul';\nimport { sqrt } from '../ops/sqrt';\nimport { square } from '../ops/square';\nimport { registerClass } from '../serialization';\nimport { Optimizer } from './optimizer';\n/** @doclink Optimizer */\n\nexport var AdagradOptimizer = /*#__PURE__*/function (_Optimizer) {\n  _inherits(AdagradOptimizer, _Optimizer);\n\n  var _super = _createSuper(AdagradOptimizer);\n\n  function AdagradOptimizer(learningRate) {\n    var _this;\n\n    var initialAccumulatorValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.1;\n\n    _classCallCheck(this, AdagradOptimizer);\n\n    _this = _super.call(this);\n    _this.learningRate = learningRate;\n    _this.initialAccumulatorValue = initialAccumulatorValue;\n    _this.accumulatedGrads = [];\n    return _this;\n  }\n\n  _createClass(AdagradOptimizer, [{\n    key: \"applyGradients\",\n    value: function applyGradients(variableGradients) {\n      var _this2 = this;\n\n      var variableNames = Array.isArray(variableGradients) ? variableGradients.map(function (item) {\n        return item.name;\n      }) : Object.keys(variableGradients);\n      variableNames.forEach(function (name, i) {\n        var value = ENGINE.registeredVariables[name];\n\n        if (_this2.accumulatedGrads[i] == null) {\n          var trainable = false;\n          _this2.accumulatedGrads[i] = {\n            originalName: \"\".concat(name, \"/accumulator\"),\n            variable: tidy(function () {\n              return fill(value.shape, _this2.initialAccumulatorValue).variable(trainable);\n            })\n          };\n        }\n\n        var gradient = Array.isArray(variableGradients) ? variableGradients[i].tensor : variableGradients[name];\n\n        if (gradient == null) {\n          return;\n        }\n\n        var accumulatedGrad = _this2.accumulatedGrads[i].variable;\n        tidy(function () {\n          var newAccumulatedGrad = add(accumulatedGrad, square(gradient));\n          accumulatedGrad.assign(newAccumulatedGrad);\n          var newValue = add(mul(div(gradient, sqrt(add(newAccumulatedGrad, ENGINE.backend.epsilon()))), -_this2.learningRate), value);\n          value.assign(newValue);\n        });\n      });\n      this.incrementIterations();\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      if (this.accumulatedGrads != null) {\n        _dispose(this.accumulatedGrads.map(function (v) {\n          return v.variable;\n        }));\n      }\n    }\n  }, {\n    key: \"getWeights\",\n    value: function () {\n      var _getWeights = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.saveIterations();\n\n              case 2:\n                _context.t0 = _context.sent;\n                return _context.abrupt(\"return\", [_context.t0].concat(this.accumulatedGrads.map(function (v) {\n                  return {\n                    name: v.originalName,\n                    tensor: v.variable\n                  };\n                })));\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getWeights() {\n        return _getWeights.apply(this, arguments);\n      }\n\n      return getWeights;\n    }()\n  }, {\n    key: \"setWeights\",\n    value: function () {\n      var _setWeights = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(weightValues) {\n        var trainable;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.extractIterations(weightValues);\n\n              case 2:\n                weightValues = _context2.sent;\n                trainable = false;\n                this.accumulatedGrads = weightValues.map(function (v) {\n                  return {\n                    originalName: v.name,\n                    variable: v.tensor.variable(trainable)\n                  };\n                });\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function setWeights(_x) {\n        return _setWeights.apply(this, arguments);\n      }\n\n      return setWeights;\n    }()\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      return {\n        'learningRate': this.learningRate,\n        'initialAccumulatorValue': this.initialAccumulatorValue\n      };\n    }\n    /** @nocollapse */\n\n  }], [{\n    key: \"fromConfig\",\n    value: function fromConfig(cls, config) {\n      return new cls(config['learningRate'], config['initialAccumulatorValue']);\n    }\n  }]);\n\n  return AdagradOptimizer;\n}(Optimizer);\n/** @nocollapse */\n\nAdagradOptimizer.className = 'Adagrad'; // Note: Name matters for Python compatibility.\n\nregisterClass(AdagradOptimizer);","import _toConsumableArray from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _regeneratorRuntime from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { dispose as _dispose, tidy } from '../globals';\nimport { add } from '../ops/add';\nimport { div } from '../ops/div';\nimport { mul } from '../ops/mul';\nimport { pow } from '../ops/pow';\nimport { scalar } from '../ops/scalar';\nimport { sqrt } from '../ops/sqrt';\nimport { square } from '../ops/square';\nimport { sub } from '../ops/sub';\nimport { zerosLike } from '../ops/zeros_like';\nimport { registerClass } from '../serialization';\nimport { Optimizer } from './optimizer';\nexport var AdamOptimizer = /*#__PURE__*/function (_Optimizer) {\n  _inherits(AdamOptimizer, _Optimizer);\n\n  var _super = _createSuper(AdamOptimizer);\n\n  function AdamOptimizer(learningRate, beta1, beta2) {\n    var _this;\n\n    var epsilon = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n    _classCallCheck(this, AdamOptimizer);\n\n    _this = _super.call(this);\n    _this.learningRate = learningRate;\n    _this.beta1 = beta1;\n    _this.beta2 = beta2;\n    _this.epsilon = epsilon;\n    _this.accumulatedFirstMoment = [];\n    _this.accumulatedSecondMoment = [];\n    tidy(function () {\n      // accB* will be updated by batch.\n      _this.accBeta1 = scalar(beta1).variable();\n      _this.accBeta2 = scalar(beta2).variable();\n    });\n\n    if (epsilon == null) {\n      _this.epsilon = ENGINE.backend.epsilon();\n    }\n\n    return _this;\n  }\n\n  _createClass(AdamOptimizer, [{\n    key: \"applyGradients\",\n    value: function applyGradients(variableGradients) {\n      var _this2 = this;\n\n      var varNames = Array.isArray(variableGradients) ? variableGradients.map(function (v) {\n        return v.name;\n      }) : Object.keys(variableGradients);\n      tidy(function () {\n        var oneMinusAccBeta1 = sub(1, _this2.accBeta1);\n        var oneMinusAccBeta2 = sub(1, _this2.accBeta2);\n        varNames.forEach(function (name, i) {\n          var value = ENGINE.registeredVariables[name];\n          var trainable = false;\n\n          if (_this2.accumulatedFirstMoment[i] == null) {\n            _this2.accumulatedFirstMoment[i] = {\n              originalName: \"\".concat(name, \"/m\"),\n              variable: tidy(function () {\n                return zerosLike(value).variable(trainable);\n              })\n            };\n          }\n\n          if (_this2.accumulatedSecondMoment[i] == null) {\n            _this2.accumulatedSecondMoment[i] = {\n              originalName: \"\".concat(name, \"/v\"),\n              variable: tidy(function () {\n                return zerosLike(value).variable(trainable);\n              })\n            };\n          }\n\n          var gradient = Array.isArray(variableGradients) ? variableGradients[i].tensor : variableGradients[name];\n\n          if (gradient == null) {\n            return;\n          }\n\n          var firstMoment = _this2.accumulatedFirstMoment[i].variable;\n          var secondMoment = _this2.accumulatedSecondMoment[i].variable;\n          var newFirstMoment = add(mul(firstMoment, _this2.beta1), mul(gradient, 1 - _this2.beta1));\n          var newSecondMoment = add(mul(secondMoment, _this2.beta2), mul(square(gradient), 1 - _this2.beta2));\n          var biasCorrectedFirstMoment = div(newFirstMoment, oneMinusAccBeta1);\n          var biasCorrectedSecondMoment = div(newSecondMoment, oneMinusAccBeta2);\n          firstMoment.assign(newFirstMoment);\n          secondMoment.assign(newSecondMoment);\n          var newValue = add(mul(div(biasCorrectedFirstMoment, add(sqrt(biasCorrectedSecondMoment), _this2.epsilon)), -_this2.learningRate), value);\n          value.assign(newValue);\n        });\n\n        _this2.accBeta1.assign(mul(_this2.accBeta1, _this2.beta1));\n\n        _this2.accBeta2.assign(mul(_this2.accBeta2, _this2.beta2));\n      });\n      this.incrementIterations();\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.accBeta1.dispose();\n      this.accBeta2.dispose();\n\n      if (this.accumulatedFirstMoment != null) {\n        _dispose(this.accumulatedFirstMoment.map(function (v) {\n          return v.variable;\n        }));\n      }\n\n      if (this.accumulatedSecondMoment != null) {\n        _dispose(this.accumulatedSecondMoment.map(function (v) {\n          return v.variable;\n        }));\n      }\n    }\n  }, {\n    key: \"getWeights\",\n    value: function () {\n      var _getWeights = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var variables;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // Order matters for Python compatibility.\n                variables = [].concat(_toConsumableArray(this.accumulatedFirstMoment), _toConsumableArray(this.accumulatedSecondMoment));\n                _context.next = 3;\n                return this.saveIterations();\n\n              case 3:\n                _context.t0 = _context.sent;\n                return _context.abrupt(\"return\", [_context.t0].concat(variables.map(function (v) {\n                  return {\n                    name: v.originalName,\n                    tensor: v.variable\n                  };\n                })));\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getWeights() {\n        return _getWeights.apply(this, arguments);\n      }\n\n      return getWeights;\n    }()\n  }, {\n    key: \"setWeights\",\n    value: function () {\n      var _setWeights = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(weightValues) {\n        var _this3 = this;\n\n        var variableCount, trainable;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.extractIterations(weightValues);\n\n              case 2:\n                weightValues = _context2.sent;\n                tidy(function () {\n                  _this3.accBeta1.assign(pow(_this3.beta1, _this3.iterations_ + 1));\n\n                  _this3.accBeta2.assign(pow(_this3.beta2, _this3.iterations_ + 1));\n                });\n                variableCount = weightValues.length / 2;\n                trainable = false;\n                this.accumulatedFirstMoment = weightValues.slice(0, variableCount).map(function (v) {\n                  return {\n                    originalName: v.name,\n                    variable: v.tensor.variable(trainable)\n                  };\n                });\n                this.accumulatedSecondMoment = weightValues.slice(variableCount, variableCount * 2).map(function (v) {\n                  return {\n                    originalName: v.name,\n                    variable: v.tensor.variable(trainable)\n                  };\n                });\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function setWeights(_x) {\n        return _setWeights.apply(this, arguments);\n      }\n\n      return setWeights;\n    }()\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      return {\n        'learningRate': this.learningRate,\n        'beta1': this.beta1,\n        'beta2': this.beta2,\n        'epsilon': this.epsilon\n      };\n    }\n    /** @nocollapse */\n\n  }], [{\n    key: \"fromConfig\",\n    value: function fromConfig(cls, config) {\n      return new cls(config['learningRate'], config['beta1'], config['beta2'], config['epsilon']);\n    }\n  }]);\n\n  return AdamOptimizer;\n}(Optimizer);\n/** @nocollapse */\n\nAdamOptimizer.className = 'Adam'; // Note: Name matters for Python compatibility.\n\nregisterClass(AdamOptimizer);","import _asyncToGenerator from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _regeneratorRuntime from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { dispose as _dispose, tidy } from '../globals';\nimport { abs } from '../ops/abs';\nimport { add } from '../ops/add';\nimport { div } from '../ops/div';\nimport { maximum } from '../ops/maximum';\nimport { mul } from '../ops/mul';\nimport { scalar } from '../ops/scalar';\nimport { sub } from '../ops/sub';\nimport { zerosLike } from '../ops/zeros_like';\nimport { registerClass } from '../serialization';\nimport { Optimizer } from './optimizer';\nexport var AdamaxOptimizer = /*#__PURE__*/function (_Optimizer) {\n  _inherits(AdamaxOptimizer, _Optimizer);\n\n  var _super = _createSuper(AdamaxOptimizer);\n\n  function AdamaxOptimizer(learningRate, beta1, beta2) {\n    var _this;\n\n    var epsilon = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n    var decay = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0.0;\n\n    _classCallCheck(this, AdamaxOptimizer);\n\n    _this = _super.call(this);\n    _this.learningRate = learningRate;\n    _this.beta1 = beta1;\n    _this.beta2 = beta2;\n    _this.epsilon = epsilon;\n    _this.decay = decay;\n    _this.accumulatedFirstMoment = [];\n    _this.accumulatedWeightedInfNorm = [];\n    tidy(function () {\n      _this.iteration = scalar(0).variable();\n      _this.accBeta1 = scalar(beta1).variable();\n    });\n\n    if (epsilon == null) {\n      _this.epsilon = ENGINE.backend.epsilon();\n    }\n\n    return _this;\n  }\n\n  _createClass(AdamaxOptimizer, [{\n    key: \"applyGradients\",\n    value: function applyGradients(variableGradients) {\n      var _this2 = this;\n\n      var variableNames = Array.isArray(variableGradients) ? variableGradients.map(function (item) {\n        return item.name;\n      }) : Object.keys(variableGradients);\n      tidy(function () {\n        var oneMinusAccBeta1 = sub(1, _this2.accBeta1);\n        var lr = div(-_this2.learningRate, add(mul(_this2.iteration, _this2.decay), 1));\n        variableNames.forEach(function (name, i) {\n          var value = ENGINE.registeredVariables[name];\n          var trainable = false;\n\n          if (_this2.accumulatedFirstMoment[i] == null) {\n            _this2.accumulatedFirstMoment[i] = {\n              originalName: \"\".concat(name, \"/m\"),\n              variable: zerosLike(value).variable(trainable)\n            };\n          }\n\n          if (_this2.accumulatedWeightedInfNorm[i] == null) {\n            _this2.accumulatedWeightedInfNorm[i] = {\n              originalName: \"\".concat(name, \"/v\"),\n              variable: zerosLike(value).variable(trainable)\n            };\n          }\n\n          var gradient = Array.isArray(variableGradients) ? variableGradients[i].tensor : variableGradients[name];\n\n          if (gradient == null) {\n            return;\n          }\n\n          var firstMoment = _this2.accumulatedFirstMoment[i].variable;\n          var weightedInfNorm = _this2.accumulatedWeightedInfNorm[i].variable;\n          var newFirstMoment = add(mul(firstMoment, _this2.beta1), mul(gradient, 1 - _this2.beta1));\n          var ut0 = mul(weightedInfNorm, _this2.beta2);\n          var ut1 = abs(gradient);\n          var newWeightedInfNorm = maximum(ut0, ut1);\n          firstMoment.assign(newFirstMoment);\n          weightedInfNorm.assign(newWeightedInfNorm);\n          var newValue = add(mul(div(lr, oneMinusAccBeta1), div(newFirstMoment, add(newWeightedInfNorm, _this2.epsilon))), value);\n          value.assign(newValue);\n        });\n\n        _this2.iteration.assign(add(_this2.iteration, 1));\n\n        _this2.accBeta1.assign(mul(_this2.accBeta1, _this2.beta1));\n      });\n      this.incrementIterations();\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.accBeta1.dispose();\n      this.iteration.dispose();\n\n      if (this.accumulatedFirstMoment != null) {\n        _dispose(this.accumulatedFirstMoment.map(function (v) {\n          return v.variable;\n        }));\n      }\n\n      if (this.accumulatedWeightedInfNorm != null) {\n        _dispose(this.accumulatedWeightedInfNorm.map(function (v) {\n          return v.variable;\n        }));\n      }\n    }\n  }, {\n    key: \"getWeights\",\n    value: function () {\n      var _getWeights = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                throw new Error('getWeights() is not implemented for Adamax yet.');\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getWeights() {\n        return _getWeights.apply(this, arguments);\n      }\n\n      return getWeights;\n    }()\n  }, {\n    key: \"setWeights\",\n    value: function () {\n      var _setWeights = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(weightValues) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                throw new Error('setWeights() is not implemented for Adamax yet.');\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function setWeights(_x) {\n        return _setWeights.apply(this, arguments);\n      }\n\n      return setWeights;\n    }()\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      return {\n        'learningRate': this.learningRate,\n        'beta1': this.beta1,\n        'beta2': this.beta2,\n        'epsilon': this.epsilon,\n        'decay': this.decay\n      };\n    }\n    /** @nocollapse */\n\n  }], [{\n    key: \"fromConfig\",\n    value: function fromConfig(cls, config) {\n      return new cls(config['learningRate'], config['beta1'], config['beta2'], config['epsilon'], config['decay']);\n    }\n  }]);\n\n  return AdamaxOptimizer;\n}(Optimizer);\n/** @nocollapse */\n\nAdamaxOptimizer.className = 'Adamax'; // Note: Name matters for Python compatbility.\n\nregisterClass(AdamaxOptimizer);","import _asyncToGenerator from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _regeneratorRuntime from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { keep, tidy } from '../globals';\nimport { add } from '../ops/add';\nimport { mul } from '../ops/mul';\nimport { scalar } from '../ops/scalar';\nimport { registerClass } from '../serialization';\nimport { Optimizer } from './optimizer';\n/** @doclink Optimizer */\n\nexport var SGDOptimizer = /*#__PURE__*/function (_Optimizer) {\n  _inherits(SGDOptimizer, _Optimizer);\n\n  var _super = _createSuper(SGDOptimizer);\n\n  function SGDOptimizer(learningRate) {\n    var _this;\n\n    _classCallCheck(this, SGDOptimizer);\n\n    _this = _super.call(this);\n    _this.learningRate = learningRate;\n\n    _this.setLearningRate(learningRate);\n\n    return _this;\n  }\n\n  _createClass(SGDOptimizer, [{\n    key: \"applyGradients\",\n    value: function applyGradients(variableGradients) {\n      var _this2 = this;\n\n      var varNames = Array.isArray(variableGradients) ? variableGradients.map(function (v) {\n        return v.name;\n      }) : Object.keys(variableGradients);\n      varNames.forEach(function (name, i) {\n        var gradient = Array.isArray(variableGradients) ? variableGradients[i].tensor : variableGradients[name];\n\n        if (gradient == null) {\n          return;\n        }\n\n        var value = ENGINE.registeredVariables[name];\n        tidy(function () {\n          var newValue = add(mul(_this2.c, gradient), value);\n          value.assign(newValue);\n        });\n      });\n      this.incrementIterations();\n    }\n    /**\n     * Sets the learning rate of the optimizer.\n     */\n\n  }, {\n    key: \"setLearningRate\",\n    value: function setLearningRate(learningRate) {\n      this.learningRate = learningRate;\n\n      if (this.c != null) {\n        this.c.dispose();\n      }\n\n      this.c = keep(scalar(-learningRate));\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.c.dispose();\n    }\n  }, {\n    key: \"getWeights\",\n    value: function () {\n      var _getWeights = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.saveIterations();\n\n              case 2:\n                _context.t0 = _context.sent;\n                return _context.abrupt(\"return\", [_context.t0]);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getWeights() {\n        return _getWeights.apply(this, arguments);\n      }\n\n      return getWeights;\n    }()\n  }, {\n    key: \"setWeights\",\n    value: function () {\n      var _setWeights = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(weightValues) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.extractIterations(weightValues);\n\n              case 2:\n                weightValues = _context2.sent;\n\n                if (!(weightValues.length !== 0)) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                throw new Error('SGD optimizer does not have settable weights.');\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function setWeights(_x) {\n        return _setWeights.apply(this, arguments);\n      }\n\n      return setWeights;\n    }()\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      return {\n        'learningRate': this.learningRate\n      };\n    }\n    /** @nocollapse */\n\n  }], [{\n    key: \"fromConfig\",\n    value: function fromConfig(cls, config) {\n      return new cls(config['learningRate']);\n    }\n  }]);\n\n  return SGDOptimizer;\n}(Optimizer);\n/** @nocollapse */\n\nSGDOptimizer.className = 'SGD'; // Note: Name matters for Python compatibility.\n\nregisterClass(SGDOptimizer);","import _asyncToGenerator from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _regeneratorRuntime from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { dispose as _dispose, tidy } from '../globals';\nimport { add } from '../ops/add';\nimport { mul } from '../ops/mul';\nimport { scalar } from '../ops/scalar';\nimport { zerosLike } from '../ops/zeros_like';\nimport { registerClass } from '../serialization';\nimport { SGDOptimizer } from './sgd_optimizer';\n/** @doclink Optimizer */\n\nexport var MomentumOptimizer = /*#__PURE__*/function (_SGDOptimizer) {\n  _inherits(MomentumOptimizer, _SGDOptimizer);\n\n  var _super = _createSuper(MomentumOptimizer);\n\n  function MomentumOptimizer(learningRate, momentum) {\n    var _this;\n\n    var useNesterov = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    _classCallCheck(this, MomentumOptimizer);\n\n    _this = _super.call(this, learningRate);\n    _this.learningRate = learningRate;\n    _this.momentum = momentum;\n    _this.useNesterov = useNesterov;\n    _this.accumulations = [];\n    _this.m = scalar(_this.momentum);\n    return _this;\n  }\n\n  _createClass(MomentumOptimizer, [{\n    key: \"applyGradients\",\n    value: function applyGradients(variableGradients) {\n      var _this2 = this;\n\n      var variableNames = Array.isArray(variableGradients) ? variableGradients.map(function (item) {\n        return item.name;\n      }) : Object.keys(variableGradients);\n      variableNames.forEach(function (name, i) {\n        var value = ENGINE.registeredVariables[name];\n\n        if (_this2.accumulations[i] == null) {\n          var trainable = false;\n          _this2.accumulations[i] = {\n            originalName: \"\".concat(name, \"/momentum\"),\n            variable: tidy(function () {\n              return zerosLike(value).variable(trainable);\n            })\n          };\n        }\n\n        var accumulation = _this2.accumulations[i].variable;\n        var gradient = Array.isArray(variableGradients) ? variableGradients[i].tensor : variableGradients[name];\n\n        if (gradient == null) {\n          return;\n        }\n\n        tidy(function () {\n          var newValue;\n          var newAccumulation = add(mul(_this2.m, accumulation), gradient);\n\n          if (_this2.useNesterov) {\n            newValue = add(mul(_this2.c, add(gradient, mul(newAccumulation, _this2.m))), value);\n          } else {\n            newValue = add(mul(_this2.c, newAccumulation), value);\n          }\n\n          accumulation.assign(newAccumulation);\n          value.assign(newValue);\n        });\n      });\n      this.incrementIterations();\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.m.dispose();\n\n      if (this.accumulations != null) {\n        _dispose(this.accumulations.map(function (v) {\n          return v.variable;\n        }));\n      }\n    }\n    /**\n     * Sets the momentum of the optimizer.\n     *\n     * @param momentum\n     */\n\n  }, {\n    key: \"setMomentum\",\n    value: function setMomentum(momentum) {\n      this.momentum = momentum;\n    }\n  }, {\n    key: \"getWeights\",\n    value: function () {\n      var _getWeights = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.saveIterations();\n\n              case 2:\n                _context.t0 = _context.sent;\n                return _context.abrupt(\"return\", [_context.t0].concat(this.accumulations.map(function (v) {\n                  return {\n                    name: v.originalName,\n                    tensor: v.variable\n                  };\n                })));\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getWeights() {\n        return _getWeights.apply(this, arguments);\n      }\n\n      return getWeights;\n    }()\n  }, {\n    key: \"setWeights\",\n    value: function () {\n      var _setWeights = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(weightValues) {\n        var trainable;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.extractIterations(weightValues);\n\n              case 2:\n                weightValues = _context2.sent;\n                trainable = false;\n                this.accumulations = weightValues.map(function (v) {\n                  return {\n                    originalName: v.name,\n                    variable: v.tensor.variable(trainable)\n                  };\n                });\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function setWeights(_x) {\n        return _setWeights.apply(this, arguments);\n      }\n\n      return setWeights;\n    }()\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      return {\n        'learningRate': this.learningRate,\n        'momentum': this.momentum,\n        'useNesterov': this.useNesterov\n      };\n    }\n    /** @nocollapse */\n\n  }], [{\n    key: \"fromConfig\",\n    value: function fromConfig(cls, config) {\n      return new cls(config['learningRate'], config['momentum'], config['useNesterov']);\n    }\n  }]);\n\n  return MomentumOptimizer;\n}(SGDOptimizer);\n/** @nocollapse */\n\nMomentumOptimizer.className = 'Momentum'; // Name matters for Python compatibility.\n\nregisterClass(MomentumOptimizer);","import _toConsumableArray from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _regeneratorRuntime from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { dispose as _dispose, tidy } from '../globals';\nimport { add } from '../ops/add';\nimport { div } from '../ops/div';\nimport { mul } from '../ops/mul';\nimport { sqrt } from '../ops/sqrt';\nimport { square } from '../ops/square';\nimport { sub } from '../ops/sub';\nimport { zerosLike } from '../ops/zeros_like';\nimport { registerClass } from '../serialization';\nimport { Optimizer } from './optimizer';\n/** @doclink Optimizer */\n\nexport var RMSPropOptimizer = /*#__PURE__*/function (_Optimizer) {\n  _inherits(RMSPropOptimizer, _Optimizer);\n\n  var _super = _createSuper(RMSPropOptimizer);\n\n  function RMSPropOptimizer(learningRate) {\n    var _this;\n\n    var decay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.9;\n    var momentum = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0.0;\n    var epsilon = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n    var centered = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n    _classCallCheck(this, RMSPropOptimizer);\n\n    _this = _super.call(this);\n    _this.learningRate = learningRate;\n    _this.decay = decay;\n    _this.momentum = momentum;\n    _this.epsilon = epsilon;\n    _this.accumulatedMeanSquares = [];\n    _this.accumulatedMoments = [];\n    _this.accumulatedMeanGrads = [];\n    _this.centered = centered;\n\n    if (epsilon == null) {\n      _this.epsilon = ENGINE.backend.epsilon();\n    }\n\n    if (learningRate == null) {\n      throw new Error(\"learningRate for RMSPropOptimizer must be defined.\");\n    }\n\n    return _this;\n  }\n\n  _createClass(RMSPropOptimizer, [{\n    key: \"applyGradients\",\n    value: function applyGradients(variableGradients) {\n      var _this2 = this;\n\n      var variableNames = Array.isArray(variableGradients) ? variableGradients.map(function (item) {\n        return item.name;\n      }) : Object.keys(variableGradients);\n      variableNames.forEach(function (name, i) {\n        var value = ENGINE.registeredVariables[name];\n        var trainable = false;\n\n        if (_this2.accumulatedMeanSquares[i] == null) {\n          _this2.accumulatedMeanSquares[i] = {\n            originalName: \"\".concat(name, \"/rms\"),\n            variable: tidy(function () {\n              return zerosLike(value).variable(trainable);\n            })\n          };\n        }\n\n        if (_this2.accumulatedMoments[i] == null) {\n          _this2.accumulatedMoments[i] = {\n            originalName: \"\".concat(name, \"/momentum\"),\n            variable: tidy(function () {\n              return zerosLike(value).variable(trainable);\n            })\n          };\n        }\n\n        if (_this2.accumulatedMeanGrads[i] == null && _this2.centered) {\n          _this2.accumulatedMeanGrads[i] = {\n            originalName: \"\".concat(name, \"/mg\"),\n            variable: tidy(function () {\n              return zerosLike(value).variable(trainable);\n            })\n          };\n        }\n\n        var gradient = Array.isArray(variableGradients) ? variableGradients[i].tensor : variableGradients[name];\n\n        if (gradient == null) {\n          return;\n        }\n\n        var accumulatedMeanSquare = _this2.accumulatedMeanSquares[i].variable;\n        var accumulatedMoments = _this2.accumulatedMoments[i].variable;\n        tidy(function () {\n          var newAccumulatedMeanSquare = add(mul(accumulatedMeanSquare, _this2.decay), mul(square(gradient), 1 - _this2.decay));\n\n          if (_this2.centered) {\n            var accumulatedMeanGrad = _this2.accumulatedMeanGrads[i].variable; // Centered gradient\n\n            var newAccumulatedMeanGrad = add(mul(accumulatedMeanGrad, _this2.decay), mul(gradient, 1 - _this2.decay));\n            var gradContribution = div(mul(gradient, _this2.learningRate), sqrt(sub(newAccumulatedMeanSquare, add(square(newAccumulatedMeanGrad), _this2.epsilon))));\n            var newAccumulatedMoments = add(mul(accumulatedMoments, _this2.momentum), gradContribution);\n            accumulatedMeanSquare.assign(newAccumulatedMeanSquare);\n            accumulatedMeanGrad.assign(newAccumulatedMeanGrad);\n            accumulatedMoments.assign(newAccumulatedMoments);\n            var newValue = sub(value, newAccumulatedMoments);\n            value.assign(newValue);\n          } else {\n            // Plain gradient\n            var _newAccumulatedMeanSquare = add(mul(accumulatedMeanSquare, _this2.decay), mul(square(gradient), 1 - _this2.decay));\n\n            var _newAccumulatedMoments = add(mul(accumulatedMoments, _this2.momentum), div(mul(gradient, _this2.learningRate), sqrt(add(_newAccumulatedMeanSquare, _this2.epsilon))));\n\n            accumulatedMeanSquare.assign(_newAccumulatedMeanSquare);\n            accumulatedMoments.assign(_newAccumulatedMoments);\n\n            var _newValue = sub(value, _newAccumulatedMoments);\n\n            value.assign(_newValue);\n          }\n        });\n      });\n      this.incrementIterations();\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      if (this.accumulatedMeanSquares != null) {\n        _dispose(this.accumulatedMeanSquares.map(function (v) {\n          return v.variable;\n        }));\n      }\n\n      if (this.accumulatedMeanGrads != null && this.centered) {\n        _dispose(this.accumulatedMeanGrads.map(function (v) {\n          return v.variable;\n        }));\n      }\n\n      if (this.accumulatedMoments != null) {\n        _dispose(this.accumulatedMoments.map(function (v) {\n          return v.variable;\n        }));\n      }\n    }\n  }, {\n    key: \"getWeights\",\n    value: function () {\n      var _getWeights = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var variables;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // Order matters for Python compatibility.\n                variables = [].concat(_toConsumableArray(this.accumulatedMeanSquares), _toConsumableArray(this.accumulatedMoments));\n\n                if (this.centered) {\n                  variables.push.apply(variables, _toConsumableArray(this.accumulatedMeanGrads));\n                }\n\n                _context.next = 4;\n                return this.saveIterations();\n\n              case 4:\n                _context.t0 = _context.sent;\n                return _context.abrupt(\"return\", [_context.t0].concat(variables.map(function (v) {\n                  return {\n                    name: v.originalName,\n                    tensor: v.variable\n                  };\n                })));\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getWeights() {\n        return _getWeights.apply(this, arguments);\n      }\n\n      return getWeights;\n    }()\n  }, {\n    key: \"setWeights\",\n    value: function () {\n      var _setWeights = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(weightValues) {\n        var variableCount, trainable;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.extractIterations(weightValues);\n\n              case 2:\n                weightValues = _context2.sent;\n                variableCount = this.centered ? weightValues.length / 3 : weightValues.length / 2;\n                trainable = false;\n                this.accumulatedMeanSquares = weightValues.slice(0, variableCount).map(function (v) {\n                  return {\n                    originalName: v.name,\n                    variable: v.tensor.variable(trainable)\n                  };\n                });\n                this.accumulatedMoments = weightValues.slice(variableCount, variableCount * 2).map(function (v) {\n                  return {\n                    originalName: v.name,\n                    variable: v.tensor.variable(trainable)\n                  };\n                });\n\n                if (this.centered) {\n                  this.accumulatedMeanGrads = weightValues.slice(variableCount * 2, variableCount * 3).map(function (v) {\n                    return {\n                      originalName: v.name,\n                      variable: v.tensor.variable(trainable)\n                    };\n                  });\n                }\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function setWeights(_x) {\n        return _setWeights.apply(this, arguments);\n      }\n\n      return setWeights;\n    }()\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      return {\n        'learningRate': this.learningRate,\n        'decay': this.decay,\n        'momentum': this.momentum,\n        'epsilon': this.epsilon,\n        'centered': this.centered\n      };\n    }\n    /** @nocollapse */\n\n  }], [{\n    key: \"fromConfig\",\n    value: function fromConfig(cls, config) {\n      return new cls(config['learningRate'], config['decay'], config['momentum'], config['epsilon'], config['centered']);\n    }\n  }]);\n\n  return RMSPropOptimizer;\n}(Optimizer);\n/** @nocollapse */\n\nRMSPropOptimizer.className = 'RMSProp'; // Note: Name matters for Python compatibility.\n\nregisterClass(RMSPropOptimizer);","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { AddN } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\n/**\n * Adds a list of `tf.Tensor`s element-wise, each with the same shape and dtype.\n *\n * ```js\n * const a = tf.tensor1d([1, 2]);\n * const b = tf.tensor1d([3, 4]);\n * const c = tf.tensor1d([5, 6]);\n *\n * tf.addN([a, b, c]).print();\n * ```\n * @param tensors A list of tensors with the same shape and dtype.\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\n\nfunction addN_(tensors) {\n  util.assert(Array.isArray(tensors), function () {\n    return 'The argument passed to tf.addN() must be a list of tensors';\n  });\n  util.assert(tensors.length >= 1, function () {\n    return \"Must pass at least one tensor to tf.addN(), but got \" + \"\".concat(tensors.length);\n  });\n  var $tensors = tensors.map(function (t, i) {\n    return convertToTensor(t, \"tensors\".concat(i), 'addN');\n  });\n  var firstTensor = $tensors[0];\n  $tensors.forEach(function (t) {\n    if (t.dtype !== firstTensor.dtype) {\n      throw new Error('All tensors passed to tf.addN() must have the same dtype');\n    }\n  });\n  $tensors.forEach(function (t) {\n    if (!util.arraysEqual(t.shape, firstTensor.shape)) {\n      throw new Error('All tensors passed to tf.addN() must have the same shape');\n    }\n  });\n  var inputs = $tensors;\n  return ENGINE.runKernel(AddN, inputs);\n}\n\nexport var addN = op({\n  addN_: addN_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { AvgPool3D } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { cast } from './cast';\nimport { op } from './operation';\nimport { reshape } from './reshape';\n/**\n * Computes the 3D average pooling.\n *\n * ```js\n * const x = tf.tensor5d([1, 2, 3, 4, 5, 6, 7, 8], [1, 2, 2, 2, 1]);\n * const result = tf.avgPool3d(x, 2, 1, 'valid');\n * result.print();\n * ```\n *\n * @param x The input tensor, of rank 5 or rank 4 of shape\n *     `[batch, depth, height, width, inChannels]`.\n * @param filterSize The filter size:\n *     `[filterDepth, filterHeight, filterWidth]`.\n *     If `filterSize` is a single number,\n *     then `filterDepth == filterHeight == filterWidth`.\n * @param strides The strides of the pooling:\n *     `[strideDepth, strideHeight, strideWidth]`.\n *     If `strides` is a single number,\n *     then `strideDepth == strideHeight == strideWidth`.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1*1x1.\n *    - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *          https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n * @param dataFormat An optional string from: \"NDHWC\", \"NCDHW\". Defaults to\n *     \"NDHWC\". Specify the data format of the input and output data. With the\n *     default format \"NDHWC\", the data is stored in the order of: [batch,\n *     depth, height, width, channels]. Only \"NDHWC\" is currently supported.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\n\nfunction avgPool3d_(x, filterSize, strides, pad, dimRoundingMode) {\n  var dataFormat = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 'NDHWC';\n  var $x = convertToTensor(x, 'x', 'avgPool3d', 'float32');\n  var x5D = $x;\n  var reshapedTo5D = false;\n\n  if ($x.rank === 4) {\n    reshapedTo5D = true;\n    x5D = reshape($x, [1, $x.shape[0], $x.shape[1], $x.shape[2], $x.shape[3]]);\n  }\n\n  util.assert(x5D.rank === 5, function () {\n    return \"Error in avgPool3d: x must be rank 5 but got rank \".concat(x5D.rank, \".\");\n  });\n  util.assert(dataFormat === 'NDHWC', function () {\n    return \"Error in avgPool3d: Only NDHWC is currently supported, \" + \"but got dataFormat of \".concat(dataFormat);\n  });\n\n  if (dimRoundingMode != null) {\n    util.assert(util.isInt(pad), function () {\n      return \"Error in avgPool3d: pad must be an integer when using, \" + \"dimRoundingMode \".concat(dimRoundingMode, \" but got pad \").concat(pad, \".\");\n    });\n  }\n\n  var inputs = {\n    x: x5D\n  };\n  var attrs = {\n    filterSize: filterSize,\n    strides: strides,\n    pad: pad,\n    dimRoundingMode: dimRoundingMode,\n    dataFormat: dataFormat\n  }; // tslint:disable-next-line: no-unnecessary-type-assertion\n\n  var res = ENGINE.runKernel(AvgPool3D, inputs, attrs);\n  res = cast(res, x5D.dtype);\n\n  if (reshapedTo5D) {\n    return reshape(res, [res.shape[1], res.shape[2], res.shape[3], res.shape[4]]);\n  }\n\n  return res;\n}\n\nexport var avgPool3d = op({\n  avgPool3d_: avgPool3d_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { convertToTensor } from '../tensor_util_env';\nimport { add } from './add';\nimport { concat } from './concat';\nimport { matMul } from './mat_mul';\nimport { mul } from './mul';\nimport { op } from './operation';\nimport { sigmoid } from './sigmoid';\nimport { slice } from './slice';\nimport { tanh } from './tanh';\n/**\n * Computes the next state and output of a BasicLSTMCell.\n *\n * Returns `[newC, newH]`.\n *\n * Derived from tf.contrib.rnn.BasicLSTMCell.\n *\n * @param forgetBias Forget bias for the cell.\n * @param lstmKernel The weights for the cell.\n * @param lstmBias The bias for the cell.\n * @param data The input to the cell.\n * @param c Previous cell state.\n * @param h Previous cell output.\n *\n * @doc {heading: 'Operations', subheading: 'RNN'}\n */\n\nfunction basicLSTMCell_(forgetBias, lstmKernel, lstmBias, data, c, h) {\n  var $forgetBias = convertToTensor(forgetBias, 'forgetBias', 'basicLSTMCell');\n  var $lstmKernel = convertToTensor(lstmKernel, 'lstmKernel', 'basicLSTMCell');\n  var $lstmBias = convertToTensor(lstmBias, 'lstmBias', 'basicLSTMCell');\n  var $data = convertToTensor(data, 'data', 'basicLSTMCell');\n  var $c = convertToTensor(c, 'c', 'basicLSTMCell');\n  var $h = convertToTensor(h, 'h', 'basicLSTMCell');\n  var combined = concat([$data, $h], 1);\n  var weighted = matMul(combined, $lstmKernel);\n  var res = add(weighted, $lstmBias); // i = input_gate, j = new_input, f = forget_gate, o = output_gate\n\n  var batchSize = res.shape[0];\n  var sliceCols = res.shape[1] / 4;\n  var sliceSize = [batchSize, sliceCols];\n  var i = slice(res, [0, 0], sliceSize);\n  var j = slice(res, [0, sliceCols], sliceSize);\n  var f = slice(res, [0, sliceCols * 2], sliceSize);\n  var o = slice(res, [0, sliceCols * 3], sliceSize);\n  var newC = add(mul(sigmoid(i), tanh(j)), mul($c, sigmoid(add($forgetBias, f))));\n  var newH = mul(tanh(newC), sigmoid(o));\n  return [newC, newH];\n}\n\nexport var basicLSTMCell = op({\n  basicLSTMCell_: basicLSTMCell_\n});","import { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { batchNorm } from './batchnorm';\nimport { op } from './operation';\n/**\n * Batch normalization, strictly for 2D. For the more relaxed version, see\n * `tf.batchNorm`.\n *\n * @param x The input Tensor.\n * @param mean A mean Tensor.\n * @param variance A variance Tensor.\n * @param offset An offset Tensor.\n * @param scale A scale Tensor.\n * @param varianceEpsilon A small float number to avoid dividing by 0.\n */\n\nfunction batchNorm2d_(x, mean, variance, offset, scale, varianceEpsilon) {\n  var $x = convertToTensor(x, 'x', 'batchNorm');\n  var $mean = convertToTensor(mean, 'mean', 'batchNorm');\n  var $variance = convertToTensor(variance, 'variance', 'batchNorm');\n  var $scale;\n\n  if (scale != null) {\n    $scale = convertToTensor(scale, 'scale', 'batchNorm');\n  }\n\n  var $offset;\n\n  if (offset != null) {\n    $offset = convertToTensor(offset, 'offset', 'batchNorm');\n  }\n\n  util.assert($x.rank === 2, function () {\n    return \"Error in batchNorm2D: x must be rank 2 but got rank \" + \"\".concat($x.rank, \".\");\n  });\n  util.assert($mean.rank === 2 || $mean.rank === 1, function () {\n    return \"Error in batchNorm2D: mean must be rank 2 or rank 1 but \" + \"got rank \".concat($mean.rank, \".\");\n  });\n  util.assert($variance.rank === 2 || $variance.rank === 1, function () {\n    return \"Error in batchNorm2D: variance must be rank 2 or rank 1 \" + \"but got rank \".concat($variance.rank, \".\");\n  });\n\n  if ($scale != null) {\n    util.assert($scale.rank === 2 || $scale.rank === 1, function () {\n      return \"Error in batchNorm2D: scale must be rank 2 or rank 1 \" + \"but got rank \".concat($scale.rank, \".\");\n    });\n  }\n\n  if ($offset != null) {\n    util.assert($offset.rank === 2 || $offset.rank === 1, function () {\n      return \"Error in batchNorm2D: offset must be rank 2 or rank 1 \" + \"but got rank \".concat($offset.rank, \".\");\n    });\n  }\n\n  return batchNorm($x, $mean, $variance, $offset, $scale, varianceEpsilon);\n}\n\nexport var batchNorm2d = op({\n  batchNorm2d_: batchNorm2d_\n});","import { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { batchNorm } from './batchnorm';\nimport { op } from './operation';\n/**\n * Batch normalization, strictly for 3D. For the more relaxed version, see\n * `tf.batchNorm`.\n *\n * @param x The input Tensor.\n * @param mean A mean Tensor.\n * @param variance A variance Tensor.\n * @param offset An offset Tensor.\n * @param scale A scale Tensor.\n * @param varianceEpsilon A small float number to avoid dividing by 0.\n */\n\nfunction batchNorm3d_(x, mean, variance, offset, scale, varianceEpsilon) {\n  var $x = convertToTensor(x, 'x', 'batchNorm');\n  var $mean = convertToTensor(mean, 'mean', 'batchNorm');\n  var $variance = convertToTensor(variance, 'variance', 'batchNorm');\n  var $scale;\n\n  if (scale != null) {\n    $scale = convertToTensor(scale, 'scale', 'batchNorm');\n  }\n\n  var $offset;\n\n  if (offset != null) {\n    $offset = convertToTensor(offset, 'offset', 'batchNorm');\n  }\n\n  util.assert($x.rank === 3, function () {\n    return \"Error in batchNorm3D: x must be rank 3 but got rank \" + \"\".concat($x.rank, \".\");\n  });\n  util.assert($mean.rank === 3 || $mean.rank === 1, function () {\n    return \"Error in batchNorm3D: mean must be rank 3 or rank 1 but \" + \"got rank \".concat($mean.rank, \".\");\n  });\n  util.assert($variance.rank === 3 || $variance.rank === 1, function () {\n    return \"Error in batchNorm3D: variance must be rank 3 or rank 1 \" + \"but got rank \".concat($variance.rank, \".\");\n  });\n\n  if ($scale != null) {\n    util.assert($scale.rank === 3 || $scale.rank === 1, function () {\n      return \"Error in batchNorm3D: scale must be rank 3 or rank 1 \" + \"but got rank \".concat($scale.rank, \".\");\n    });\n  }\n\n  if ($offset != null) {\n    util.assert($offset.rank === 3 || $offset.rank === 1, function () {\n      return \"Error in batchNorm3D: offset must be rank 3 or rank 1 \" + \"but got rank \".concat($offset.rank, \".\");\n    });\n  }\n\n  return batchNorm($x, $mean, $variance, $offset, $scale, varianceEpsilon);\n}\n\nexport var batchNorm3d = op({\n  batchNorm3d_: batchNorm3d_\n});","import { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { batchNorm } from './batchnorm';\nimport { op } from './operation';\n/**\n * Batch normalization, strictly for 4D. For the more relaxed version, see\n * `tf.batchNorm`.\n *\n * @param x The input Tensor.\n * @param mean A mean Tensor.\n * @param variance A variance Tensor.\n * @param offset An offset Tensor.\n * @param scale A scale Tensor.\n * @param varianceEpsilon A small float number to avoid dividing by 0.\n */\n\nfunction batchNorm4d_(x, mean, variance, offset, scale, varianceEpsilon) {\n  var $x = convertToTensor(x, 'x', 'batchNorm');\n  var $mean = convertToTensor(mean, 'mean', 'batchNorm');\n  var $variance = convertToTensor(variance, 'variance', 'batchNorm');\n  var $scale;\n\n  if (scale != null) {\n    $scale = convertToTensor(scale, 'scale', 'batchNorm');\n  }\n\n  var $offset;\n\n  if (offset != null) {\n    $offset = convertToTensor(offset, 'offset', 'batchNorm');\n  }\n\n  util.assert($x.rank === 4, function () {\n    return \"Error in batchNorm4D: x must be rank 4 but got rank \" + \"\".concat($x.rank, \".\");\n  });\n  util.assert($mean.rank === 4 || $mean.rank === 1, function () {\n    return \"Error in batchNorm4D: mean must be rank 4 or rank 1 but \" + \"got rank \".concat($mean.rank, \".\");\n  });\n  util.assert($variance.rank === 4 || $variance.rank === 1, function () {\n    return \"Error in batchNorm4D: variance must be rank 4 or rank 1 \" + \"but got rank \".concat($variance.rank, \".\");\n  });\n\n  if ($scale != null) {\n    util.assert($scale.rank === 4 || $scale.rank === 1, function () {\n      return \"Error in batchNorm4D: scale must be rank 4 or rank 1 \" + \"but got rank \".concat($scale.rank, \".\");\n    });\n  }\n\n  if ($offset != null) {\n    util.assert($offset.rank === 4 || $offset.rank === 1, function () {\n      return \"Error in batchNorm4D: offset must be rank 4 or rank 1 \" + \"but got rank \".concat($offset.rank, \".\");\n    });\n  }\n\n  return batchNorm($x, $mean, $variance, $offset, $scale, varianceEpsilon);\n}\n\nexport var batchNorm4d = op({\n  batchNorm4d_: batchNorm4d_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Bincount } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\n/**\n * Outputs a vector with length `size` and the same dtype as `weights`.\n *\n * If `weights` are empty, then index `i` stores the number of times the value\n * `i` is counted in `x`. If `weights` are non-empty, then index `i` stores the\n * sum of the value in `weights` at each index where the corresponding value in\n * `x` is `i`.\n *\n * Values in `x` outside of the range [0, size) are ignored.\n *\n * @param x The input int tensor, rank 1.\n * @param weights The weights tensor, must have the same shape as x, or a\n *     length-0 Tensor, in which case it acts as all weights equal to 1.\n * @param size Non-negative integer.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\n\nfunction bincount_(x, weights, size) {\n  var $x = convertToTensor(x, 'x', 'bincount');\n  var $weights = convertToTensor(weights, 'weights', 'bincount');\n  util.assert($x.dtype === 'int32', function () {\n    return \"Error in bincount: input \" + \"dtype must be int32, but got \".concat($x.dtype);\n  });\n  util.assert(size >= 0, function () {\n    return \"size must be non-negative, but got \".concat(size, \".\");\n  });\n  util.assert($weights.size === $x.size || $weights.size === 0, function () {\n    return \"Error in bincount: weights must have the same size as input or\" + \"0-length, but got input shape: \".concat($x.shape, \", weights shape: \") + \"\".concat($weights.shape, \".\");\n  });\n  var inputs = {\n    x: $x,\n    weights: $weights\n  };\n  var attrs = {\n    size: size\n  };\n  return ENGINE.runKernel(Bincount, inputs, attrs);\n}\n\nexport var bincount = op({\n  bincount_: bincount_\n});","import { concat } from './concat';\nimport { op } from './operation';\n/**\n * Concatenates a list of`tf.Tensor1D`s along an axis. See `concat` for details.\n *\n * For example, if:\n * A: shape(3) = |r1, g1, b1|\n * B: shape(2) = |r2, g2|\n * C = tf.concat1d([A, B]) == |r1, g1, b1, r2, g2|\n *\n * @param tensors A list of`tf.Tensor`s to concatenate.\n * @return The concatenated array.\n */\n\nfunction concat1d_(tensors) {\n  return concat(tensors, 0\n  /* axis */\n  );\n}\n\nexport var concat1d = op({\n  concat1d_: concat1d_\n});","import { concat } from './concat';\nimport { op } from './operation';\n/**\n * Concatenates a list of`tf.Tensor2D`s along an axis. See `concat` for details.\n *\n * For example, if:\n * A: shape(2, 3) = | r1, g1, b1 |\n *                  | r2, g2, b2 |\n *\n * B: shape(2, 3) = | r3, g3, b3 |\n *                  | r4, g4, b4 |\n *\n * C = tf.concat2d([A, B], axis)\n *\n * if axis = 0:\n * C: shape(4, 3) = | r1, g1, b1 |\n *                  | r2, g2, b2 |\n *                  | r3, g3, b3 |\n *                  | r4, g4, b4 |\n *\n * if axis = 1:\n * C = shape(2, 6) = | r1, g1, b1, r3, g3, b3 |\n *                   | r2, g2, b2, r4, g4, b4 |\n *\n *\n * @param tensors A list of `tf.Tensor`s to concatenate.\n * @param axis The axis to concatenate along.\n * @return The concatenated array.\n */\n\nfunction concat2d_(tensors, axis) {\n  return concat(tensors, axis);\n}\n\nexport var concat2d = op({\n  concat2d_: concat2d_\n});","import { concat } from './concat';\nimport { op } from './operation';\n/**\n * Concatenates a list of `tf.Tensor3D`s along an axis.\n * See `concat` for details.\n *\n * For example, if:\n * A: shape(2, 1, 3) = | r1, g1, b1 |\n *                     | r2, g2, b2 |\n *\n * B: shape(2, 1, 3) = | r3, g3, b3 |\n *                     | r4, g4, b4 |\n *\n * C = tf.concat3d([A, B], axis)\n *\n * if axis = 0:\n * C: shape(4, 1, 3) = | r1, g1, b1 |\n *                     | r2, g2, b2 |\n *                     | r3, g3, b3 |\n *                     | r4, g4, b4 |\n *\n * if axis = 1:\n * C: shape(2, 2, 3) = | r1, g1, b1, r3, g3, b3 |\n *                     | r2, g2, b2, r4, g4, b4 |\n *\n * if axis = 2:\n * C = shape(2, 1, 6) = | r1, g1, b1, r3, g3, b3 |\n *                      | r2, g2, b2, r4, g4, b4 |\n *\n * @param tensors A list of`tf.Tensor`s to concatenate.\n * @param axis The axis to concate along.\n * @return The concatenated array.\n */\n\nfunction concat3d_(tensors, axis) {\n  return concat(tensors, axis);\n}\n\nexport var concat3d = op({\n  concat3d_: concat3d_\n});","import { concat } from './concat';\nimport { op } from './operation';\n/**\n * Concatenates a list of `tf.Tensor4D`s along an axis.\n * See `concat` for details.\n *\n * @param tensors A list of `tf.Tensor`s to concatenate.\n * @param axis The axis to concate along.\n * @return The concatenated array.\n */\n\nfunction concat4d_(tensors, axis) {\n  return concat(tensors, axis);\n}\n\nexport var concat4d = op({\n  concat4d_: concat4d_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Conv3D } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { eitherStridesOrDilationsAreOne } from './conv_util';\nimport { op } from './operation';\nimport { reshape } from './reshape';\n/**\n * Computes a 3D convolution over the input x.\n *\n * @param x The input tensor, of rank 5 or rank 4, of shape\n *     `[batch, depth, height, width, channels]`. If rank 4,\n * batch of 1 is assumed.\n * @param filter The filter, rank 5, of shape\n *     `[filterDepth, filterHeight, filterWidth, inChannels, outChannels]`.\n *      inChannels must match between input and filter.\n * @param strides The strides of the convolution: `[strideDepth, strideHeight,\n * strideWidth]`.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *   - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *          https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dataFormat: An optional string from: \"NDHWC\", \"NCDHW\". Defaults to\n *     \"NDHWC\". Specify the data format of the input and output data. With the\n *     default format \"NDHWC\", the data is stored in the order of: [batch,\n *     depth, height, width, channels]. Only \"NDHWC\" is currently supported.\n * @param dilations The dilation rates: `[dilationDepth, dilationHeight,\n *     dilationWidth]` in which we sample input values across the height\n *     and width dimensions in atrous convolution. Defaults to `[1, 1, 1]`.\n *     If `dilations` is a single number, then\n *     `dilationDepth == dilationHeight == dilationWidth`. If it is greater\n *     than 1, then all values of `strides` must be 1.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\n\nfunction conv3d_(x, filter, strides, pad) {\n  var dataFormat = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'NDHWC';\n  var dilations = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : [1, 1, 1];\n  var $x = convertToTensor(x, 'x', 'conv3d');\n  var $filter = convertToTensor(filter, 'filter', 'conv3d');\n  var x5D = $x;\n  var reshapedTo5D = false;\n\n  if ($x.rank === 4) {\n    reshapedTo5D = true;\n    x5D = reshape($x, [1, $x.shape[0], $x.shape[1], $x.shape[2], $x.shape[3]]);\n  }\n\n  util.assert(x5D.rank === 5, function () {\n    return \"Error in conv3d: input must be rank 5, but got rank \".concat(x5D.rank, \".\");\n  });\n  util.assert($filter.rank === 5, function () {\n    return \"Error in conv3d: filter must be rank 5, but got rank \" + \"\".concat($filter.rank, \".\");\n  });\n  util.assert(x5D.shape[4] === $filter.shape[3], function () {\n    return \"Error in conv3d: depth of input (\".concat(x5D.shape[4], \") must match \") + \"input depth for filter \".concat($filter.shape[3], \".\");\n  });\n  util.assert(eitherStridesOrDilationsAreOne(strides, dilations), function () {\n    return 'Error in conv3D: Either strides or dilations must be 1. ' + \"Got strides \".concat(strides, \" and dilations '\").concat(dilations, \"'\");\n  });\n  util.assert(dataFormat === 'NDHWC', function () {\n    return \"Error in conv3d: got dataFormat of \".concat(dataFormat, \" but only NDHWC is currently supported.\");\n  });\n  var inputs = {\n    x: x5D,\n    filter: $filter\n  };\n  var attrs = {\n    strides: strides,\n    pad: pad,\n    dataFormat: dataFormat,\n    dilations: dilations\n  }; // tslint:disable-next-line: no-unnecessary-type-assertion\n\n  var res = ENGINE.runKernel(Conv3D, inputs, attrs);\n\n  if (reshapedTo5D) {\n    return reshape(res, [res.shape[1], res.shape[2], res.shape[3], res.shape[4]]);\n  }\n\n  return res;\n}\n\nexport var conv3d = op({\n  conv3d_: conv3d_\n});","import { convertToTensor } from '../tensor_util_env';\nimport { conv3DBackpropInput } from './conv3d_backprop_input';\nimport { op } from './operation';\n/**\n * Computes the transposed 3D convolution of a volume, also known as a\n * deconvolution.\n *\n * @param x The input image, of rank 5 or rank 4, of shape\n *   `[batch, depth, height, width, inDepth]`. If rank 4, batch of 1 is assumed.\n * @param filter The filter, rank 4, of shape\n *     `[depth, filterHeight, filterWidth, outDepth, inDepth]`.\n *     `inDepth` must match `inDepth` in `x`.\n * @param outputShape Output shape, of rank 5 or rank 4:\n *     `[batch, depth, height, width, outDepth]`. If rank 3, batch of 1 is\n *    assumed.\n * @param strides The strides of the original convolution:\n *     `[strideDepth, strideHeight, strideWidth]`.\n * @param pad  The type of padding algorithm used in the non-transpose version\n *    of the op.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\n\nfunction conv3dTranspose_(x, filter, outputShape, strides, pad) {\n  var $x = convertToTensor(x, 'x', 'conv3dTranspose');\n  var $filter = convertToTensor(filter, 'filter', 'conv3dTranspose');\n  return conv3DBackpropInput(outputShape, $x, $filter, strides, pad);\n}\n\nexport var conv3dTranspose = op({\n  conv3dTranspose_: conv3dTranspose_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { DenseBincount } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\n/**\n * Outputs a vector with length `size` and the same dtype as `weights`.\n *\n * If `weights` are empty, then index `i` stores the number of times the value\n * `i` is counted in `x`. If `weights` are non-empty, then index `i` stores the\n * sum of the value in `weights` at each index where the corresponding value in\n * `x` is `i`.\n *\n * Values in `x` outside of the range [0, size) are ignored.\n *\n * @param x The input int tensor, rank 1 or rank 2.\n * @param weights The weights tensor, must have the same shape as x, or a\n *     length-0 Tensor, in which case it acts as all weights equal to 1.\n * @param size Non-negative integer.\n * @param binaryOutput Optional. Whether the kernel should count the appearance\n *     or number of occurrences. Defaults to False.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\n\nfunction denseBincount_(x, weights, size) {\n  var binaryOutput = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var $x = convertToTensor(x, 'x', 'denseBincount');\n  var $weights = convertToTensor(weights, 'weights', 'denseBincount');\n  util.assert($x.dtype === 'int32', function () {\n    return \"Error in denseBincount: input \" + \"dtype must be int32, but got \".concat($x.dtype);\n  });\n  util.assert($x.rank <= 2, function () {\n    return \"Error in denseBincount: input must be at most rank 2, but got \" + \"rank \".concat($x.rank, \".\");\n  });\n  util.assert(size >= 0, function () {\n    return \"size must be non-negative, but got \".concat(size, \".\");\n  });\n  util.assert($weights.size === $x.size || $weights.size === 0, function () {\n    return \"Error in denseBincount: weights must have the same shape as x or \" + \"0-length, but got x shape: \".concat($x.shape, \", weights shape: \") + \"\".concat($weights.shape, \".\");\n  });\n  var inputs = {\n    x: $x,\n    weights: $weights\n  };\n  var attrs = {\n    size: size,\n    binaryOutput: binaryOutput\n  };\n  return ENGINE.runKernel(DenseBincount, inputs, attrs);\n}\n\nexport var denseBincount = op({\n  denseBincount_: denseBincount_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Diag } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Returns a diagonal tensor with a given diagonal values.\n *\n * Given a diagonal, this operation returns a tensor with the diagonal and\n * everything else padded with zeros.\n *\n * Assume the input has dimensions `[D1,..., Dk]`, then the output is a tensor\n * of rank 2k with dimensions `[D1,..., Dk, D1,..., Dk]`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n *\n * tf.diag(x).print()\n * ```\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4, 5, 6, 6, 8], [4, 2])\n *\n * tf.diag(x).print()\n * ```\n * @param x The input tensor.\n */\n\nfunction diag_(x) {\n  var $x = convertToTensor(x, 'x', 'diag');\n  var inputs = {\n    x: $x\n  };\n  return ENGINE.runKernel(Diag, inputs);\n}\n\nexport var diag = op({\n  diag_: diag_\n});","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Einsum } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Tensor contraction over specified indices and outer product.\n *\n * `einsum` allows defining Tensors by defining their element-wise computation.\n * This computation is based on\n * [Einstein summation](https://en.wikipedia.org/wiki/Einstein_notation).\n *\n * Some special cases include:\n *\n * Matrix multiplication:\n * ```js\n * const x = tf.tensor2d([[1, 2, 3], [4, 5, 6]]);\n * const y = tf.tensor2d([[0, 1], [2, 3], [4, 5]]);\n * x.print();\n * y.print();\n * tf.einsum('ij,jk->ik', x, y).print();\n * ```\n *\n * Dot product:\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n * const y = tf.tensor1d([0, 1, 2]);\n * x.print();\n * y.print();\n * tf.einsum('i,i->', x, y).print();\n * ```\n *\n * Batch dot product:\n * ```js\n * const x = tf.tensor2d([[1, 2, 3], [4, 5, 6]]);\n * const y = tf.tensor2d([[0, 1, 2], [3, 4, 5]]);\n * x.print();\n * y.print();\n * tf.einsum('bi,bi->b', x, y).print();\n * ```\n *\n * Outer prouduct:\n * ```js\n * const x = tf.tensor1d([1, 3, 5]);\n * const y = tf.tensor1d([2, 4, 6]);\n * x.print();\n * y.print();\n * tf.einsum('i,j->ij', x, y).print();\n * ```\n *\n * Matrix transpose:\n * ```js\n * const x = tf.tensor2d([[1, 2], [3, 4]]);\n * x.print();\n * tf.einsum('ij->ji', x).print();\n * ```\n *\n * Batch matrix transpose:\n * ```js\n * const x = tf.tensor3d([[[1, 2], [3, 4]], [[-1, -2], [-3, -4]]]);\n * x.print();\n * tf.einsum('bij->bji', x).print();\n * ```\n *\n * Limitations:\n *\n * This implementation of einsum has the following limitations:\n *\n * - Does not support >2 input tensors.\n * - Does not support duplicate axes for any given input tensor. E.g., equation\n *   'ii->' is not suppoted.\n * - The `...` notation is not supported.\n *\n * @param equation a string describing the contraction, in the same format as\n * [numpy.einsum](https://numpy.org/doc/stable/reference/generated/numpy.einsum.html).\n * @param tensors the input(s) to contract (each one a Tensor), whose shapes\n *     should be consistent with equation.\n * @returns The output tensor.\n *\n * @doc {heading: 'Tensors', subheading: 'Matrices'}\n */\n\nexport function einsum_(equation) {\n  for (var _len = arguments.length, tensors = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    tensors[_key - 1] = arguments[_key];\n  }\n\n  var $tensors = tensors.map(function (t, i) {\n    return convertToTensor(t, \"tensors\".concat(i), 'einsum');\n  });\n  var attrs = {\n    equation: equation\n  };\n  return ENGINE.runKernel(Einsum, $tensors, attrs);\n}\nexport var einsum = op({\n  einsum_: einsum_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { buffer } from './buffer';\nimport { expandDims } from './expand_dims';\nimport { op } from './operation';\nimport { reshape } from './reshape';\nimport { tile } from './tile';\n/**\n * Create an identity matrix.\n *\n * @param numRows Number of rows.\n * @param numColumns Number of columns. Defaults to `numRows`.\n * @param batchShape If provided, will add the batch shape to the beginning\n *   of the shape of the returned `tf.Tensor` by repeating the identity\n *   matrix.\n * @param dtype Data type.\n * @returns Identity matrix of the specified size and data type, possibly\n *   with batch repetition if `batchShape` is specified.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\n\nfunction eye_(numRows, numColumns, batchShape) {\n  var dtype = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'float32';\n\n  if (numColumns == null) {\n    numColumns = numRows;\n  }\n\n  var buff = buffer([numRows, numColumns], dtype);\n  var n = numRows <= numColumns ? numRows : numColumns;\n\n  for (var i = 0; i < n; ++i) {\n    buff.set(1, i, i);\n  }\n\n  var out = reshape(buff.toTensor(), [numRows, numColumns]);\n\n  if (batchShape == null) {\n    return out;\n  } else {\n    if (batchShape.length === 1) {\n      return tile(expandDims(out, 0), [batchShape[0], 1, 1]);\n    } else if (batchShape.length === 2) {\n      // tslint:disable-next-line:no-unnecessary-type-assertion\n      return tile(expandDims(expandDims(out, 0), 0), [batchShape[0], batchShape[1], 1, 1]);\n    } else if (batchShape.length === 3) {\n      // tslint:disable-next-line:no-unnecessary-type-assertion\n      return tile(expandDims(expandDims(expandDims(out, 0), 0), 0), [batchShape[0], batchShape[1], batchShape[2], 1, 1]);\n    } else {\n      throw new Error(\"eye() currently supports only 1D and 2D \" + // tslint:disable-next-line:no-any\n      \"batchShapes, but received \".concat(batchShape.length, \"D.\"));\n    }\n  }\n}\n\nexport var eye = op({\n  eye_: eye_\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { LinSpace } from '../kernel_names';\n/**\n * Return an evenly spaced sequence of numbers over the given interval.\n *\n * ```js\n * tf.linspace(0, 9, 10).print();\n * ```\n * @param start The start value of the sequence.\n * @param stop The end value of the sequence.\n * @param num The number of values to generate.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\n\nexport function linspace(start, stop, num) {\n  if (num <= 0) {\n    throw new Error('The number of values should be positive.');\n  }\n\n  var attrs = {\n    start: start,\n    stop: stop,\n    num: num\n  };\n  return ENGINE.runKernel(LinSpace, {}, attrs);\n}","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { MaxPool3D } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\nimport { reshape } from './reshape';\n/**\n * Computes the 3D max pooling.\n *\n * ```js\n * const x = tf.tensor5d([1, 2, 3, 4, 5, 6, 7, 8], [1, 2, 2, 2, 1]);\n * const result = tf.maxPool3d(x, 2, 1, 'valid');\n * result.print();\n * ```\n *\n * @param x The input tensor, of rank 5 or rank 4 of shape\n *     `[batch, depth, height, width, inChannels]`.\n * @param filterSize The filter size:\n *     `[filterDepth, filterHeight, filterWidth]`.\n *     If `filterSize` is a single number,\n *     then `filterDepth == filterHeight == filterWidth`.\n * @param strides The strides of the pooling:\n *     `[strideDepth, strideHeight, strideWidth]`.\n *     If `strides` is a single number,\n *     then `strideDepth == strideHeight == strideWidth`.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1*1x1.\n *    - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *          https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n * @param dataFormat An optional string from: \"NDHWC\", \"NCDHW\". Defaults to\n *     \"NDHWC\". Specify the data format of the input and output data. With the\n *     default format \"NDHWC\", the data is stored in the order of: [batch,\n *     depth, height, width, channels]. Only \"NDHWC\" is currently supported.\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\n\nfunction maxPool3d_(x) {\n  var filterSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [1, 1, 1];\n  var strides = arguments.length > 2 ? arguments[2] : undefined;\n  var pad = arguments.length > 3 ? arguments[3] : undefined;\n  var dimRoundingMode = arguments.length > 4 ? arguments[4] : undefined;\n  var dataFormat = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 'NDHWC';\n  var $x = convertToTensor(x, 'x', 'maxPool3d');\n  var x5D = $x;\n  var reshapedTo5D = false;\n\n  if ($x.rank === 4) {\n    reshapedTo5D = true;\n    x5D = reshape($x, [1, $x.shape[0], $x.shape[1], $x.shape[2], $x.shape[3]]);\n  }\n\n  util.assert(x5D.rank === 5, function () {\n    return \"Error in maxPool3d: x must be rank 5 but got rank \".concat(x5D.rank, \".\");\n  });\n  util.assert(dataFormat === 'NDHWC', function () {\n    return \"Error in maxPool3d: Only NDHWC is currently supported, \" + \"but got dataFormat of \".concat(dataFormat);\n  });\n\n  if (dimRoundingMode != null) {\n    util.assert(util.isInt(pad), function () {\n      return \"Error in maxPool3d: pad must be an integer when using, \" + \"dimRoundingMode \".concat(dimRoundingMode, \" but got pad \").concat(pad, \".\");\n    });\n  }\n\n  var inputs = {\n    x: x5D\n  };\n  var attrs = {\n    filterSize: filterSize,\n    strides: strides,\n    pad: pad,\n    dimRoundingMode: dimRoundingMode,\n    dataFormat: dataFormat\n  }; // tslint:disable-next-line: no-unnecessary-type-assertion\n\n  var res = ENGINE.runKernel(MaxPool3D, inputs, attrs);\n\n  if (reshapedTo5D) {\n    return reshape(res, [res.shape[1], res.shape[2], res.shape[3], res.shape[4]]);\n  }\n\n  return res;\n}\n\nexport var maxPool3d = op({\n  maxPool3d_: maxPool3d_\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { MaxPoolWithArgmax } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes the 2D max pooling of an image with Argmax index.\n * The indices in argmax are flattened, so that a maximum value at position `[b,\n * y, x, c]` becomes flattened index: `(y * width + x) * channels + c` if\n * include_batch_in_index is False; `((b * height + y) * width + x) * channels\n * +c` if include_batch_in_index is True.\n *\n * The indices returned are always in `[0, height) x [0, width)` before\n * flattening.\n *\n * @param x The input tensor, of rank 4 or rank 3 of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.\n * @param filterSize The filter size: `[filterHeight, filterWidth]`. If\n *     `filterSize` is a single number, then `filterHeight == filterWidth`.\n * @param strides The strides of the pooling: `[strideHeight, strideWidth]`. If\n *     `strides` is a single number, then `strideHeight == strideWidth`.\n * @param dataFormat An optional string from: \"NDHWC\", \"NCDHW\". Defaults to\n *     \"NDHWC\". Specify the data format of the input and output data. With the\n *     default format \"NDHWC\", the data is stored in the order of: [batch,\n *     depth, height, width, channels]. Only \"NDHWC\" is currently supported.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *    - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *          https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param includeBatchIndex Defaults to False. Whether to include batch\n *    dimension in flattened index of argmax.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\n\nfunction maxPoolWithArgmax_(x, filterSize, strides, pad) {\n  var includeBatchInIndex = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  var $x = convertToTensor(x, 'x', 'maxPoolWithArgmax');\n  var inputs = {\n    x: $x\n  };\n  var attrs = {\n    filterSize: filterSize,\n    strides: strides,\n    pad: pad,\n    includeBatchInIndex: includeBatchInIndex\n  }; // tslint:disable-next-line: no-unnecessary-type-assertion\n\n  var result = ENGINE.runKernel(MaxPoolWithArgmax, inputs, attrs);\n  return {\n    result: result[0],\n    indexes: result[1]\n  };\n}\n\nexport var maxPoolWithArgmax = op({\n  maxPoolWithArgmax_: maxPoolWithArgmax_\n});","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { matMul } from './mat_mul';\nimport { ones } from './ones';\nimport { reshape } from './reshape';\nimport { Tensor } from '../tensor';\nimport { convertToTensor } from '../tensor_util_env';\nimport { sizeFromShape } from '../util_base';\n/**\n * Broadcasts parameters for evaluation on an N-D grid.\n *\n * Given N one-dimensional coordinate arrays `*args`, returns a list `outputs`\n * of N-D coordinate arrays for evaluating expressions on an N-D grid.\n *\n * Notes:\n * `meshgrid` supports cartesian ('xy') and matrix ('ij') indexing conventions.\n * When the `indexing` argument is set to 'xy' (the default), the broadcasting\n * instructions for the first two dimensions are swapped.\n * Examples:\n * Calling `const [X, Y] = meshgrid(x, y)` with the tensors\n *\n * ```javascript\n * const x = [1, 2, 3];\n * const y = [4, 5, 6];\n * const [X, Y] = tf.meshgrid(x, y);\n * // X = [[1, 2, 3],\n * //      [1, 2, 3],\n * //      [1, 2, 3]]\n * // Y = [[4, 4, 4],\n * //      [5, 5, 5],\n * //      [6, 6, 6]]\n * ```\n *\n * @param x Tensor with rank geq 1.\n * @param y Tensor with rank geq 1.\n * @param indexing\n *\n * @doc {heading: 'Operations', subheading: 'Slicing and Joining'}\n */\n\nexport function meshgrid(x, y) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      _ref$indexing = _ref.indexing,\n      indexing = _ref$indexing === void 0 ? 'xy' : _ref$indexing;\n\n  if (indexing !== 'xy' && indexing !== 'ij') {\n    throw new TypeError(\"\".concat(indexing, \" is not a valid third argument to meshgrid\"));\n  }\n\n  if (x === undefined) {\n    return [];\n  }\n\n  var $x = convertToTensor(x, 'x', 'meshgrid', x instanceof Tensor ? x.dtype : 'float32');\n\n  if (y === undefined) {\n    return [$x];\n  }\n\n  var $y = convertToTensor(y, 'y', 'meshgrid', y instanceof Tensor ? y.dtype : 'float32');\n  var w = sizeFromShape($x.shape);\n  var h = sizeFromShape($y.shape);\n\n  if (indexing === 'xy') {\n    $x = reshape($x, [1, -1]);\n    $y = reshape($y, [-1, 1]);\n    return [matMul(ones([h, 1], $x.dtype), $x), matMul($y, ones([1, w], $y.dtype))];\n  }\n\n  $x = reshape($x, [-1, 1]);\n  $y = reshape($y, [1, -1]);\n  return [matMul($x, ones([1, h], $x.dtype)), matMul(ones([w, 1], $y.dtype), $y)];\n}","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { convertToTensor } from '../tensor_util_env';\nimport { parseAxisParam } from '../util';\nimport { expandShapeToKeepDim } from './axis_util';\nimport { cast } from './cast';\nimport { mean } from './mean';\nimport { op } from './operation';\nimport { reshape } from './reshape';\nimport { square } from './square';\nimport { sub } from './sub';\n/**\n * Calculates the mean and variance of `x`. The mean and variance are\n * calculated by aggregating the contents of `x` across `axes`. If `x` is\n * 1-D and `axes = [0]` this is just the mean and variance of a vector.\n *\n * @param x The input tensor.\n * @param axis The dimension(s) along with to compute mean and\n *     variance. By default it reduces all dimensions.\n * @param keepDims If true, the moments have the same dimensionality as the\n *     input.\n * @return An object with two keys: `mean` and `variance`.\n *\n * @doc {heading: 'Operations', subheading: 'Normalization'}\n */\n\nfunction moments_(x) {\n  var axis = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var keepDims = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  x = convertToTensor(x, 'x', 'moments');\n  var axes = parseAxisParam(axis, x.shape);\n  var xMean = mean(x, axes, keepDims);\n  var keepDimsShape = xMean.shape;\n\n  if (!keepDims) {\n    keepDimsShape = expandShapeToKeepDim(xMean.shape, axes);\n  }\n\n  var devSquared = square(sub(cast(x, 'float32'), reshape(xMean, keepDimsShape)));\n  var variance = mean(devSquared, axes, keepDims);\n  return {\n    mean: xMean,\n    variance: variance\n  };\n}\n\nexport var moments = op({\n  moments_: moments_\n});","import { convertToTensor, convertToTensorArray } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes the next states and outputs of a stack of LSTMCells.\n *\n * Each cell output is used as input to the next cell.\n *\n * Returns `[cellState, cellOutput]`.\n *\n * Derived from tf.contrib.rn.MultiRNNCell.\n *\n * @param lstmCells Array of LSTMCell functions.\n * @param data The input to the cell.\n * @param c Array of previous cell states.\n * @param h Array of previous cell outputs.\n *\n * @doc {heading: 'Operations', subheading: 'RNN'}\n */\n\nfunction multiRNNCell_(lstmCells, data, c, h) {\n  var $data = convertToTensor(data, 'data', 'multiRNNCell');\n  var $c = convertToTensorArray(c, 'c', 'multiRNNCell');\n  var $h = convertToTensorArray(h, 'h', 'multiRNNCell');\n  var input = $data;\n  var newStates = [];\n\n  for (var i = 0; i < lstmCells.length; i++) {\n    var output = lstmCells[i](input, $c[i], $h[i]);\n    newStates.push(output[0]);\n    newStates.push(output[1]);\n    input = output[1];\n  }\n\n  var newC = [];\n  var newH = [];\n\n  for (var _i = 0; _i < newStates.length; _i += 2) {\n    newC.push(newStates[_i]);\n    newH.push(newStates[_i + 1]);\n  }\n\n  return [newC, newH];\n}\n\nexport var multiRNNCell = op({\n  multiRNNCell_: multiRNNCell_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Multinomial } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\nimport { reshape } from './reshape';\n/**\n * Creates a `tf.Tensor` with values drawn from a multinomial distribution.\n *\n * ```js\n * const probs = tf.tensor([.75, .25]);\n * tf.multinomial(probs, 3).print();\n * ```\n *\n * @param logits 1D array with unnormalized log-probabilities, or\n *     2D array of shape `[batchSize, numOutcomes]`. See the `normalized`\n *     parameter.\n * @param numSamples Number of samples to draw for each row slice.\n * @param seed The seed number.\n * @param normalized Whether the provided `logits` are normalized true\n *     probabilities (sum to 1). Defaults to false.\n * @return 1D array of shape `[numSamples]`, or 2D array of shape\n *     `[batchSize, numSamples]`, depending on the rank of the input.\n *\n * @doc {heading: 'Tensors', subheading: 'Random'}\n */\n\nfunction multinomial_(logits, numSamples, seed) {\n  var normalized = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var $logits = convertToTensor(logits, 'logits', 'multinomial');\n  var numOutcomes = $logits.size;\n  var origRank = $logits.rank;\n\n  if (numOutcomes < 2) {\n    throw new Error(\"Error in multinomial: you need at least 2 outcomes, but got \" + \"\".concat(numOutcomes, \".\"));\n  }\n\n  if (origRank > 2) {\n    throw new Error(\"Rank of probabilities must be 1 or 2, but is \".concat(origRank));\n  } // TODO(lina128): Investigate correct seed behavior. The code seems not allow\n  // setting see to 0.\n\n\n  seed = seed || Math.random(); // The kernel only accepts (and returns) rank 2 tensors.\n\n  var logits2D = origRank === 1 ? reshape($logits, [1, -1]) : $logits;\n  var inputs = {\n    logits: logits2D\n  };\n  var attrs = {\n    numSamples: numSamples,\n    seed: seed,\n    normalized: normalized\n  }; // tslint:disable-next-line: no-unnecessary-type-assertion\n\n  var res = ENGINE.runKernel(Multinomial, inputs, attrs); // tslint:disable-next-line:no-unnecessary-type-assertion\n\n  return origRank === 1 ? reshape(res, [res.size]) : res;\n}\n\nexport var multinomial = op({\n  multinomial_: multinomial_\n});","import { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { matMul } from './mat_mul';\nimport { op } from './operation';\nimport { reshape } from './reshape';\n/**\n * Computes the outer product of two vectors, `v1` and `v2`.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n * const b = tf.tensor1d([3, 4, 5]);\n *\n * tf.outerProduct(a, b).print();\n * ```\n * @param v1 The first vector in the outer product operation.\n * @param v2 The second vector in the outer product operation.\n *\n * @doc {heading: 'Operations', subheading: 'Matrices'}\n */\n\nfunction outerProduct_(v1, v2) {\n  var $v1 = convertToTensor(v1, 'v1', 'outerProduct');\n  var $v2 = convertToTensor(v2, 'v2', 'outerProduct');\n  util.assert($v1.rank === 1 && $v2.rank === 1, function () {\n    return \"Error in outerProduct: inputs must be rank 1, but got ranks \" + \"\".concat($v1.rank, \" and \").concat($v2.rank, \".\");\n  });\n  var v12D = reshape($v1, [-1, 1]);\n  var v22D = reshape($v2, [1, -1]);\n  return matMul(v12D, v22D);\n}\n\nexport var outerProduct = op({\n  outerProduct_: outerProduct_\n});","import { assert } from '../util';\nimport { op } from './operation';\nimport { pad } from './pad';\n/**\n * Pads a `tf.Tensor1D` with a given value and paddings. See `pad` for details.\n */\n\nfunction pad1d_(x, paddings) {\n  var constantValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  assert(paddings.length === 2, function () {\n    return 'Invalid number of paddings. Must be length of 2.';\n  });\n  return pad(x, [paddings], constantValue);\n}\n\nexport var pad1d = op({\n  pad1d_: pad1d_\n});","import { assert } from '../util';\nimport { op } from './operation';\nimport { pad } from './pad';\n/**\n * Pads a `tf.Tensor2D` with a given value and paddings. See `pad` for details.\n */\n\nfunction pad2d_(x, paddings) {\n  var constantValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  assert(paddings.length === 2 && paddings[0].length === 2 && paddings[1].length === 2, function () {\n    return 'Invalid number of paddings. Must be length of 2 each.';\n  });\n  return pad(x, paddings, constantValue);\n}\n\nexport var pad2d = op({\n  pad2d_: pad2d_\n});","import { assert } from '../util';\nimport { op } from './operation';\nimport { pad } from './pad';\n/**\n * Pads a `tf.Tensor3D` with a given value and paddings. See `pad` for details.\n */\n\nfunction pad3d_(x, paddings) {\n  var constantValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  assert(paddings.length === 3 && paddings[0].length === 2 && paddings[1].length === 2 && paddings[2].length === 2, function () {\n    return 'Invalid number of paddings. Must be length of 2 each.';\n  });\n  return pad(x, paddings, constantValue);\n}\n\nexport var pad3d = op({\n  pad3d_: pad3d_\n});","import { assert } from '../util';\nimport { op } from './operation';\nimport { pad } from './pad';\n/**\n * Pads a `tf.Tensor4D` with a given value and paddings. See `pad` for details.\n */\n\nfunction pad4d_(x, paddings) {\n  var constantValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  assert(paddings.length === 4 && paddings[0].length === 2 && paddings[1].length === 2 && paddings[2].length === 2 && paddings[3].length === 2, function () {\n    return 'Invalid number of paddings. Must be length of 2 each.';\n  });\n  return pad(x, paddings, constantValue);\n}\n\nexport var pad4d = op({\n  pad4d_: pad4d_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { sizeFromShape } from '../util';\nimport { op } from './operation';\n/**\n * Creates a `tf.Tensor` with values sampled from a random number generator\n * function defined by the user.\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param randFunction A random number generator function which is called\n * for each element in the output tensor.\n * @param dtype The data type of the output tensor. Defaults to 'float32'.\n */\n\nfunction rand_(shape, randFunction, dtype) {\n  var size = sizeFromShape(shape);\n  var values = null;\n\n  if (dtype == null || dtype === 'float32') {\n    values = new Float32Array(size);\n  } else if (dtype === 'int32') {\n    values = new Int32Array(size);\n  } else if (dtype === 'bool') {\n    values = new Uint8Array(size);\n  } else {\n    throw new Error(\"Unknown data type \".concat(dtype));\n  }\n\n  for (var i = 0; i < size; i++) {\n    values[i] = randFunction();\n  }\n\n  return ENGINE.makeTensor(values, shape, dtype);\n}\n\nexport var rand = op({\n  rand_: rand_\n});","import _classCallCheck from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport * as seedrandom from 'seedrandom';\nimport { expectNumbersClose, testEpsilon } from '../test_util'; // https://en.wikipedia.org/wiki/Marsaglia_polar_method\n\nexport var MPRandGauss = /*#__PURE__*/function () {\n  function MPRandGauss(mean, stdDeviation, dtype, truncated, seed) {\n    _classCallCheck(this, MPRandGauss);\n\n    this.mean = mean;\n    this.stdDev = stdDeviation;\n    this.dtype = dtype;\n    this.nextVal = NaN;\n    this.truncated = truncated;\n\n    if (this.truncated) {\n      this.upper = this.mean + this.stdDev * 2;\n      this.lower = this.mean - this.stdDev * 2;\n    }\n\n    var seedValue = seed ? seed : Math.random();\n    this.random = seedrandom.alea(seedValue.toString());\n  }\n  /** Returns next sample from a Gaussian distribution. */\n\n\n  _createClass(MPRandGauss, [{\n    key: \"nextValue\",\n    value: function nextValue() {\n      if (!isNaN(this.nextVal)) {\n        var value = this.nextVal;\n        this.nextVal = NaN;\n        return value;\n      }\n\n      var resultX, resultY;\n      var isValid = false;\n\n      while (!isValid) {\n        var v1 = void 0,\n            v2 = void 0,\n            s = void 0;\n\n        do {\n          v1 = 2 * this.random() - 1;\n          v2 = 2 * this.random() - 1;\n          s = v1 * v1 + v2 * v2;\n        } while (s >= 1 || s === 0);\n\n        var mul = Math.sqrt(-2.0 * Math.log(s) / s);\n        resultX = this.mean + this.stdDev * v1 * mul;\n        resultY = this.mean + this.stdDev * v2 * mul;\n\n        if (!this.truncated || this.isValidTruncated(resultX)) {\n          isValid = true;\n        }\n      }\n\n      if (!this.truncated || this.isValidTruncated(resultY)) {\n        this.nextVal = this.convertValue(resultY);\n      }\n\n      return this.convertValue(resultX);\n    }\n    /** Handles proper rounding for non-floating-point numbers. */\n\n  }, {\n    key: \"convertValue\",\n    value: function convertValue(value) {\n      if (this.dtype == null || this.dtype === 'float32') {\n        return value;\n      }\n\n      return Math.round(value);\n    }\n    /** Returns true if less than 2-standard-deviations from the mean. */\n\n  }, {\n    key: \"isValidTruncated\",\n    value: function isValidTruncated(value) {\n      return value <= this.upper && value >= this.lower;\n    }\n  }]);\n\n  return MPRandGauss;\n}(); // Marsaglia, George, and Wai Wan Tsang. 2000. \"A Simple Method for Generating\n// Gamma Variables.\"\n\nexport var RandGamma = /*#__PURE__*/function () {\n  function RandGamma(alpha, beta, dtype, seed) {\n    _classCallCheck(this, RandGamma);\n\n    this.alpha = alpha;\n    this.beta = 1 / beta; // convert rate to scale parameter\n\n    this.dtype = dtype;\n    var seedValue = seed ? seed : Math.random();\n    this.randu = seedrandom.alea(seedValue.toString());\n    this.randn = new MPRandGauss(0, 1, dtype, false, this.randu());\n\n    if (alpha < 1) {\n      this.d = alpha + 2 / 3;\n    } else {\n      this.d = alpha - 1 / 3;\n    }\n\n    this.c = 1 / Math.sqrt(9 * this.d);\n  }\n  /** Returns next sample from a gamma distribution. */\n\n\n  _createClass(RandGamma, [{\n    key: \"nextValue\",\n    value: function nextValue() {\n      var x2, v0, v1, x, u, v;\n\n      while (true) {\n        do {\n          x = this.randn.nextValue();\n          v = 1 + this.c * x;\n        } while (v <= 0);\n\n        v *= v * v;\n        x2 = x * x;\n        v0 = 1 - 0.331 * x2 * x2;\n        v1 = 0.5 * x2 + this.d * (1 - v + Math.log(v));\n        u = this.randu();\n\n        if (u < v0 || Math.log(u) < v1) {\n          break;\n        }\n      }\n\n      v = 1 / this.beta * this.d * v;\n\n      if (this.alpha < 1) {\n        v *= Math.pow(this.randu(), 1 / this.alpha);\n      }\n\n      return this.convertValue(v);\n    }\n    /** Handles proper rounding for non-floating-point numbers. */\n\n  }, {\n    key: \"convertValue\",\n    value: function convertValue(value) {\n      if (this.dtype === 'float32') {\n        return value;\n      }\n\n      return Math.round(value);\n    }\n  }]);\n\n  return RandGamma;\n}();\nexport var UniformRandom = /*#__PURE__*/function () {\n  function UniformRandom() {\n    var _this = this;\n\n    var min = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var max = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    var dtype = arguments.length > 2 ? arguments[2] : undefined;\n    var seed = arguments.length > 3 ? arguments[3] : undefined;\n\n    _classCallCheck(this, UniformRandom);\n\n    /** Handles proper rounding for non floating point numbers. */\n    this.canReturnFloat = function () {\n      return _this.dtype == null || _this.dtype === 'float32';\n    };\n\n    this.min = min;\n    this.range = max - min;\n    this.dtype = dtype;\n\n    if (seed == null) {\n      seed = Math.random();\n    }\n\n    if (typeof seed === 'number') {\n      seed = seed.toString();\n    }\n\n    if (!this.canReturnFloat() && this.range <= 1) {\n      throw new Error(\"The difference between \".concat(min, \" - \").concat(max, \" <= 1 and dtype is not float\"));\n    }\n\n    this.random = seedrandom.alea(seed);\n  }\n\n  _createClass(UniformRandom, [{\n    key: \"convertValue\",\n    value: function convertValue(value) {\n      if (this.canReturnFloat()) {\n        return value;\n      }\n\n      return Math.round(value);\n    }\n  }, {\n    key: \"nextValue\",\n    value: function nextValue() {\n      return this.convertValue(this.min + this.range * this.random());\n    }\n  }]);\n\n  return UniformRandom;\n}();\nexport function jarqueBeraNormalityTest(values) {\n  // https://en.wikipedia.org/wiki/Jarque%E2%80%93Bera_test\n  var n = values.length;\n  var s = skewness(values);\n  var k = kurtosis(values);\n  var jb = n / 6 * (Math.pow(s, 2) + 0.25 * Math.pow(k - 3, 2)); // JB test requires 2-degress of freedom from Chi-Square @ 0.95:\n  // http://www.itl.nist.gov/div898/handbook/eda/section3/eda3674.htm\n\n  var CHI_SQUARE_2DEG = 5.991;\n\n  if (jb > CHI_SQUARE_2DEG) {\n    throw new Error(\"Invalid p-value for JB: \".concat(jb));\n  }\n}\nexport function expectArrayInMeanStdRange(actual, expectedMean, expectedStdDev, epsilon) {\n  if (epsilon == null) {\n    epsilon = testEpsilon();\n  }\n\n  var actualMean = mean(actual);\n  expectNumbersClose(actualMean, expectedMean, epsilon);\n  expectNumbersClose(standardDeviation(actual, actualMean), expectedStdDev, epsilon);\n}\n\nfunction mean(values) {\n  var sum = 0;\n\n  for (var i = 0; i < values.length; i++) {\n    sum += values[i];\n  }\n\n  return sum / values.length;\n}\n\nfunction standardDeviation(values, mean) {\n  var squareDiffSum = 0;\n\n  for (var i = 0; i < values.length; i++) {\n    var diff = values[i] - mean;\n    squareDiffSum += diff * diff;\n  }\n\n  return Math.sqrt(squareDiffSum / values.length);\n}\n\nfunction kurtosis(values) {\n  // https://en.wikipedia.org/wiki/Kurtosis\n  var valuesMean = mean(values);\n  var n = values.length;\n  var sum2 = 0;\n  var sum4 = 0;\n\n  for (var i = 0; i < n; i++) {\n    var v = values[i] - valuesMean;\n    sum2 += Math.pow(v, 2);\n    sum4 += Math.pow(v, 4);\n  }\n\n  return 1 / n * sum4 / Math.pow(1 / n * sum2, 2);\n}\n\nfunction skewness(values) {\n  // https://en.wikipedia.org/wiki/Skewness\n  var valuesMean = mean(values);\n  var n = values.length;\n  var sum2 = 0;\n  var sum3 = 0;\n\n  for (var i = 0; i < n; i++) {\n    var v = values[i] - valuesMean;\n    sum2 += Math.pow(v, 2);\n    sum3 += Math.pow(v, 3);\n  }\n\n  return 1 / n * sum3 / Math.pow(1 / (n - 1) * sum2, 3 / 2);\n}","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { buffer } from './buffer';\nimport { op } from './operation';\nimport { RandGamma } from './rand_util';\n/**\n * Creates a `tf.Tensor` with values sampled from a gamma distribution.\n *\n * ```js\n * tf.randomGamma([2, 2], 1).print();\n * ```\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param alpha The shape parameter of the gamma distribution.\n * @param beta The inverse scale parameter of the gamma distribution. Defaults\n *     to 1.\n * @param dtype The data type of the output. Defaults to float32.\n * @param seed The seed for the random number generator.\n *\n * @doc {heading: 'Tensors', subheading: 'Random'}\n */\n\nfunction randomGamma_(shape, alpha) {\n  var beta = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var dtype = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'float32';\n  var seed = arguments.length > 4 ? arguments[4] : undefined;\n\n  if (beta == null) {\n    beta = 1;\n  }\n\n  if (dtype == null) {\n    dtype = 'float32';\n  }\n\n  if (dtype !== 'float32' && dtype !== 'int32') {\n    throw new Error(\"Unsupported data type \".concat(dtype));\n  }\n\n  var rgamma = new RandGamma(alpha, beta, dtype, seed);\n  var res = buffer(shape, dtype);\n\n  for (var i = 0; i < res.values.length; i++) {\n    res.values[i] = rgamma.nextValue();\n  }\n\n  return res.toTensor();\n}\n\nexport var randomGamma = op({\n  randomGamma_: randomGamma_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { buffer } from './buffer';\nimport { op } from './operation';\nimport { MPRandGauss } from './rand_util';\n/**\n * Creates a `tf.Tensor` with values sampled from a normal distribution.\n *\n * ```js\n * tf.randomNormal([2, 2]).print();\n * ```\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param mean The mean of the normal distribution.\n * @param stdDev The standard deviation of the normal distribution.\n * @param dtype The data type of the output.\n * @param seed The seed for the random number generator.\n *\n * @doc {heading: 'Tensors', subheading: 'Random'}\n */\n\nfunction randomNormal_(shape) {\n  var mean = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var stdDev = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var dtype = arguments.length > 3 ? arguments[3] : undefined;\n  var seed = arguments.length > 4 ? arguments[4] : undefined;\n\n  if (dtype != null && dtype === 'bool') {\n    throw new Error(\"Unsupported data type \".concat(dtype));\n  }\n\n  var randGauss = new MPRandGauss(mean, stdDev, dtype, false\n  /* truncated */\n  , seed);\n  var res = buffer(shape, dtype);\n\n  for (var i = 0; i < res.values.length; i++) {\n    res.values[i] = randGauss.nextValue();\n  }\n\n  return res.toTensor();\n}\n\nexport var randomNormal = op({\n  randomNormal_: randomNormal_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { buffer } from './buffer';\nimport { op } from './operation';\nimport { UniformRandom } from './rand_util';\n/**\n * Creates a `tf.Tensor` with values sampled from a uniform distribution.\n *\n * The generated values follow a uniform distribution in the range [minval,\n * maxval). The lower bound minval is included in the range, while the upper\n * bound maxval is excluded.\n *\n * ```js\n * tf.randomUniform([2, 2]).print();\n * ```\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param minval The lower bound on the range of random values to generate.\n *   Defaults to 0.\n * @param maxval The upper bound on the range of random values to generate.\n *   Defaults to 1.\n * @param dtype The data type of the output tensor. Defaults to 'float32'.\n *\n * @doc {heading: 'Tensors', subheading: 'Random'}\n */\n\nfunction randomUniform_(shape) {\n  var minval = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var maxval = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var dtype = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'float32';\n  var seed = arguments.length > 4 ? arguments[4] : undefined;\n  var res = buffer(shape, dtype);\n  var random = new UniformRandom(minval, maxval, null, seed);\n\n  for (var i = 0; i < res.values.length; i++) {\n    res.values[i] = random.nextValue();\n  }\n\n  return res.toTensor();\n}\n\nexport var randomUniform = op({\n  randomUniform_: randomUniform_\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Range } from '../kernel_names';\n/**\n * Creates a new `tf.Tensor1D` filled with the numbers in the range provided.\n *\n * The tensor is a is half-open interval meaning it includes start, but\n * excludes stop. Decrementing ranges and negative step values are also\n * supported.sv\n *\n *\n * ```js\n * tf.range(0, 9, 2).print();\n * ```\n *\n * @param start An integer start value\n * @param stop An integer stop value\n * @param step An integer increment (will default to 1 or -1)\n * @param dtype The data type of the output tensor. Defaults to 'float32'.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\n\nexport function range(start, stop) {\n  var step = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var dtype = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'float32';\n\n  if (step === 0) {\n    throw new Error('Cannot have a step of zero');\n  }\n\n  var attrs = {\n    start: start,\n    stop: stop,\n    step: step,\n    dtype: dtype\n  };\n  return ENGINE.runKernel(Range, {}\n  /* inputs */\n  , attrs);\n}","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\nimport { reverse } from './reverse';\n/**\n * Reverses a `tf.Tensor1D`.\n *\n * @param x The input tensor.\n */\n\nfunction reverse1d_(x) {\n  var $x = convertToTensor(x, 'x', 'reverse');\n  util.assert($x.rank === 1, function () {\n    return \"Error in reverse1D: x must be rank 1 but got rank \".concat($x.rank, \".\");\n  });\n  return reverse($x, 0);\n}\n\nexport var reverse1d = op({\n  reverse1d_: reverse1d_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\nimport { reverse } from './reverse';\n/**\n * Reverses a `tf.Tensor2D` along a specified axis.\n *\n * @param x The input tensor.\n * @param axis The set of dimensions to reverse. Must be in the\n *     range [-rank(x), rank(x)). Defaults to all axes.\n */\n\nfunction reverse2d_(x, axis) {\n  var $x = convertToTensor(x, 'x', 'reverse');\n  util.assert($x.rank === 2, function () {\n    return \"Error in reverse2D: x must be rank 2 but got rank \".concat($x.rank, \".\");\n  });\n  return reverse($x, axis);\n}\n\nexport var reverse2d = op({\n  reverse2d_: reverse2d_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\nimport { reverse } from './reverse';\n/**\n * Reverses a `tf.Tensor3D` along a specified axis.\n *\n * @param x The input tensor.\n * @param axis The set of dimensions to reverse. Must be in the\n *     range [-rank(x), rank(x)). Defaults to all axes.\n */\n\nfunction reverse3d_(x, axis) {\n  var $x = convertToTensor(x, 'x', 'reverse');\n  util.assert($x.rank === 3, function () {\n    return \"Error in reverse3D: x must be rank 3 but got rank \".concat($x.rank, \".\");\n  });\n  return reverse($x, axis);\n}\n\nexport var reverse3d = op({\n  reverse3d_: reverse3d_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\nimport { reverse } from './reverse';\n/**\n * Reverses a `tf.Tensor4D` along a specified axis.\n *\n * @param x The input tensor.\n * @param axis The set of dimensions to reverse. Must be in the\n *     range [-rank(x), rank(x)). Defaults to all axes.\n */\n\nfunction reverse4d_(x, axis) {\n  var $x = convertToTensor(x, 'x', 'reverse');\n  util.assert($x.rank === 4, function () {\n    return \"Error in reverse4D: x must be rank 4 but got rank \".concat($x.rank, \".\");\n  });\n  return reverse($x, axis);\n}\n\nexport var reverse4d = op({\n  reverse4d_: reverse4d_\n});","import _asyncToGenerator from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _regeneratorRuntime from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/regenerator\";\n\n/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { TensorBuffer } from '../tensor';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\n/**\n * Computes the difference between two lists of numbers.\n *\n * Given a Tensor `x` and a Tensor `y`, this operation returns a Tensor `out`\n * that represents all values that are in `x` but not in `y`. The returned\n * Tensor `out` is sorted in the same order that the numbers appear in `x`\n * (duplicates are preserved). This operation also returns a Tensor indices that\n * represents the position of each out element in `x`. In other words:\n *\n * `out[i] = x[idx[i]] for i in [0, 1, ..., out.length - 1]`\n *\n * ```js\n * const x = [1, 2, 3, 4, 5, 6];\n * const y = [1, 3, 5];\n *\n * const [out, indices] = await tf.setdiff1dAsync(x, y);\n * out.print(); // [2, 4, 6]\n * indices.print(); // [1, 3, 5]\n * ```\n *\n * @param x 1-D Tensor. Values to keep.\n * @param y 1-D Tensor. Must have the same type as x. Values to exclude in the\n *     output.\n * @returns Promise of Tensor tuple [out, indices].\n *  out: Tensor with the same type as x.\n *  indices: A Tensor of type int32.\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\n\nfunction setdiff1dAsync_(_x, _x2) {\n  return _setdiff1dAsync_.apply(this, arguments);\n}\n\nfunction _setdiff1dAsync_() {\n  _setdiff1dAsync_ = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(x, y) {\n    var $x, $y, xVals, yVals, ySet, outputSize, i, buffer, indices, _i, p;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            $x = convertToTensor(x, 'x', 'setdiff1d');\n            $y = convertToTensor(y, 'y', 'setdiff1d');\n            util.assert($x.dtype === $y.dtype, function () {\n              return \"x and y should have the same dtype, but got x (\".concat($x.dtype, \") and y (\").concat($y.dtype, \").\");\n            });\n            util.assert($x.rank === 1, function () {\n              return \"x should be 1D tensor, but got x (\".concat($x.shape, \").\");\n            });\n            util.assert($y.rank === 1, function () {\n              return \"y should be 1D tensor, but got y (\".concat($y.shape, \").\");\n            });\n            _context.next = 7;\n            return $x.data();\n\n          case 7:\n            xVals = _context.sent;\n            _context.next = 10;\n            return $y.data();\n\n          case 10:\n            yVals = _context.sent;\n            ySet = new Set(yVals);\n            outputSize = 0;\n\n            for (i = 0; i < xVals.length; i++) {\n              if (!ySet.has(xVals[i])) {\n                outputSize++;\n              }\n            }\n\n            buffer = new TensorBuffer([outputSize], $x.dtype);\n            indices = new TensorBuffer([outputSize], 'int32');\n\n            for (_i = 0, p = 0; _i < xVals.length; _i++) {\n              if (!ySet.has(xVals[_i])) {\n                buffer.values[p] = xVals[_i];\n                indices.values[p] = _i;\n                p++;\n              }\n            }\n\n            return _context.abrupt(\"return\", [buffer.toTensor(), indices.toTensor()]);\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _setdiff1dAsync_.apply(this, arguments);\n}\n\nexport var setdiff1dAsync = setdiff1dAsync_;","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\nimport { slice } from './slice';\n/**\n * Extracts a 1D slice from 1D array starting at coordinates `begin` and is\n * of length `size`. See `slice` for details.\n */\n\nfunction slice1d_(x, begin, size) {\n  var $x = convertToTensor(x, 'x', 'slice1d');\n  util.assert($x.rank === 1, function () {\n    return \"slice1d expects a rank-1 tensor, but got a rank-\".concat($x.rank, \" tensor\");\n  });\n  return slice($x, [begin], [size]);\n}\n\nexport var slice1d = op({\n  slice1d_: slice1d_\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\nimport { slice } from './slice';\n/**\n * Extracts a 2D slice from a 2D array starting at coordinates `begin` and\n * is of size `size`. See `slice` for details.\n */\n\nfunction slice2d_(x, begin, size) {\n  var $x = convertToTensor(x, 'x', 'slice2d');\n  util.assert($x.rank === 2, function () {\n    return \"slice2d expects a rank-2 tensor, but got a rank-\".concat($x.rank, \" tensor\");\n  });\n  return slice($x, begin, size);\n}\n\nexport var slice2d = op({\n  slice2d_: slice2d_\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\nimport { slice } from './slice';\n/**\n * Extracts a 3D slice from a 3D array starting at coordinates `begin` and\n * is of size `size`. See `slice` for details.\n */\n\nfunction slice3d_(x, begin, size) {\n  var $x = convertToTensor(x, 'x', 'slice3d');\n  util.assert($x.rank === 3, function () {\n    return \"slice3d expects a rank-3 tensor, but got a rank-\".concat($x.rank, \" tensor\");\n  });\n  return slice($x, begin, size);\n}\n\nexport var slice3d = op({\n  slice3d_: slice3d_\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\nimport { slice } from './slice';\n/**\n * Extracts a 4D slice from a 4D array starting at coordinates `begin` and\n * is of size `size`. See `slice` for details.\n */\n\nfunction slice4d_(x, begin, size) {\n  var $x = convertToTensor(x, 'x', 'slice4d');\n  util.assert($x.rank === 4, function () {\n    return \"slice4d expects a rank-4 tensor, but got a rank-\".concat($x.rank, \" tensor\");\n  });\n  return slice($x, begin, size);\n}\n\nexport var slice4d = op({\n  slice4d_: slice4d_\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { inferShape } from '../tensor_util_env';\nimport { assertNonNull } from '../util';\nimport { makeTensor } from './tensor_ops_util';\n/**\n * Creates rank-1 `tf.Tensor` with the provided values, shape and dtype.\n *\n * The same functionality can be achieved with `tf.tensor`, but in general\n * we recommend using `tf.tensor1d` as it makes the code more readable.\n *\n * ```js\n * tf.tensor1d([1, 2, 3]).print();\n * ```\n *\n * @param values The values of the tensor. Can be array of numbers,\n *     or a `TypedArray`.\n * @param dtype The data type.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\n\nexport function tensor1d(values, dtype) {\n  assertNonNull(values);\n  var inferredShape = inferShape(values, dtype);\n\n  if (inferredShape.length !== 1) {\n    throw new Error('tensor1d() requires values to be a flat/TypedArray');\n  }\n\n  var shape = null;\n  return makeTensor(values, shape, inferredShape, dtype);\n}","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { inferShape } from '../tensor_util_env';\nimport { assertNonNull } from '../util';\nimport { makeTensor } from './tensor_ops_util';\n/**\n * Creates rank-2 `tf.Tensor` with the provided values, shape and dtype.\n *\n * The same functionality can be achieved with `tf.tensor`, but in general\n * we recommend using `tf.tensor2d` as it makes the code more readable.\n *\n *  ```js\n * // Pass a nested array.\n * tf.tensor2d([[1, 2], [3, 4]]).print();\n * ```\n * ```js\n * // Pass a flat array and specify a shape.\n * tf.tensor2d([1, 2, 3, 4], [2, 2]).print();\n * ```\n *\n * @param values The values of the tensor. Can be nested array of numbers,\n *     or a flat array, or a `TypedArray`.\n * @param shape The shape of the tensor. If not provided, it is inferred from\n *     `values`.\n * @param dtype The data type.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\n\nexport function tensor2d(values, shape, dtype) {\n  assertNonNull(values);\n\n  if (shape != null && shape.length !== 2) {\n    throw new Error('tensor2d() requires shape to have two numbers');\n  }\n\n  var inferredShape = inferShape(values, dtype);\n\n  if (inferredShape.length !== 2 && inferredShape.length !== 1) {\n    throw new Error('tensor2d() requires values to be number[][] or flat/TypedArray');\n  }\n\n  if (inferredShape.length === 1 && shape == null) {\n    throw new Error('tensor2d() requires shape to be provided when `values` ' + 'are a flat/TypedArray');\n  }\n\n  return makeTensor(values, shape, inferredShape, dtype);\n}","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { inferShape } from '../tensor_util_env';\nimport { assertNonNull } from '../util';\nimport { makeTensor } from './tensor_ops_util';\n/**\n * Creates rank-4 `tf.Tensor` with the provided values, shape and dtype.\n *\n * The same functionality can be achieved with `tf.tensor`, but in general\n * we recommend using `tf.tensor4d` as it makes the code more readable.\n *\n *  ```js\n * // Pass a nested array.\n * tf.tensor4d([[[[1], [2]], [[3], [4]]]]).print();\n * ```\n * ```js\n * // Pass a flat array and specify a shape.\n * tf.tensor4d([1, 2, 3, 4], [1, 2, 2, 1]).print();\n * ```\n *\n * @param values The values of the tensor. Can be nested array of numbers,\n *     or a flat array, or a `TypedArray`.\n * @param shape The shape of the tensor. Optional. If not provided,\n *   it is inferred from `values`.\n * @param dtype The data type.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\n\nexport function tensor4d(values, shape, dtype) {\n  assertNonNull(values);\n\n  if (shape != null && shape.length !== 4) {\n    throw new Error('tensor4d() requires shape to have four numbers');\n  }\n\n  var inferredShape = inferShape(values, dtype);\n\n  if (inferredShape.length !== 4 && inferredShape.length !== 1) {\n    throw new Error('tensor4d() requires values to be number[][][][] or flat/TypedArray');\n  }\n\n  if (inferredShape.length === 1 && shape == null) {\n    throw new Error('tensor4d() requires shape to be provided when `values` ' + 'are a flat array');\n  }\n\n  return makeTensor(values, shape, inferredShape, dtype);\n}","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { inferShape } from '../tensor_util_env';\nimport { assertNonNull } from '../util';\nimport { makeTensor } from './tensor_ops_util';\n/**\n * Creates rank-5 `tf.Tensor` with the provided values, shape and dtype.\n *\n * The same functionality can be achieved with `tf.tensor`, but in general\n * we recommend using `tf.tensor5d` as it makes the code more readable.\n *\n *  ```js\n * // Pass a nested array.\n * tf.tensor5d([[[[[1],[2]],[[3],[4]]],[[[5],[6]],[[7],[8]]]]]).print();\n * ```\n * ```js\n * // Pass a flat array and specify a shape.\n * tf.tensor5d([1, 2, 3, 4, 5, 6, 7, 8], [1, 2, 2, 2, 1]).print();\n * ```\n *\n * @param values The values of the tensor. Can be nested array of numbers,\n *     or a flat array, or a `TypedArray`.\n * @param shape The shape of the tensor. Optional. If not provided,\n *   it is inferred from `values`.\n * @param dtype The data type.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\n\nexport function tensor5d(values, shape, dtype) {\n  assertNonNull(values);\n\n  if (shape != null && shape.length !== 5) {\n    throw new Error('tensor5d() requires shape to have five numbers');\n  }\n\n  var inferredShape = inferShape(values, dtype);\n\n  if (inferredShape.length !== 5 && inferredShape.length !== 1) {\n    throw new Error('tensor5d() requires values to be ' + 'number[][][][][] or flat/TypedArray');\n  }\n\n  if (inferredShape.length === 1 && shape == null) {\n    throw new Error('tensor5d() requires shape to be provided when `values` ' + 'are a flat array');\n  }\n\n  return makeTensor(values, shape, inferredShape, dtype);\n}","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { inferShape } from '../tensor_util_env';\nimport { assertNonNull } from '../util';\nimport { makeTensor } from './tensor_ops_util';\n/**\n * Creates rank-6 `tf.Tensor` with the provided values, shape and dtype.\n *\n * The same functionality can be achieved with `tf.tensor`, but in general\n * we recommend using `tf.tensor6d` as it makes the code more readable.\n *\n *  ```js\n * // Pass a nested array.\n * tf.tensor6d([[[[[[1],[2]],[[3],[4]]],[[[5],[6]],[[7],[8]]]]]]).print();\n * ```\n * ```js\n * // Pass a flat array and specify a shape.\n * tf.tensor6d([1, 2, 3, 4, 5, 6, 7, 8], [1, 1, 2, 2, 2, 1]).print();\n * ```\n *\n * @param values The values of the tensor. Can be nested array of numbers,\n *     or a flat array, or a `TypedArray`.\n * @param shape The shape of the tensor. Optional. If not provided,\n *   it is inferred from `values`.\n * @param dtype The data type.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\n\nexport function tensor6d(values, shape, dtype) {\n  assertNonNull(values);\n\n  if (shape != null && shape.length !== 6) {\n    throw new Error('tensor6d() requires shape to have six numbers');\n  }\n\n  var inferredShape = inferShape(values, dtype);\n\n  if (inferredShape.length !== 6 && inferredShape.length !== 1) {\n    throw new Error('tensor6d() requires values to be number[][][][][][] or ' + 'flat/TypedArray');\n  }\n\n  if (inferredShape.length === 1 && shape == null) {\n    throw new Error('tensor6d() requires shape to be provided when `values` ' + 'are a flat array');\n  }\n\n  shape = shape || inferredShape;\n  return makeTensor(values, shape, inferredShape, dtype);\n}","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { buffer } from './buffer';\nimport { op } from './operation';\nimport { MPRandGauss } from './rand_util';\n/**\n * Creates a `tf.Tensor` with values sampled from a truncated normal\n * distribution.\n *\n * ```js\n * tf.truncatedNormal([2, 2]).print();\n * ```\n *\n * The generated values follow a normal distribution with specified mean and\n * standard deviation, except that values whose magnitude is more than 2\n * standard deviations from the mean are dropped and re-picked.\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param mean The mean of the normal distribution.\n * @param stdDev The standard deviation of the normal distribution.\n * @param dtype The data type of the output tensor.\n * @param seed The seed for the random number generator.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\n\nfunction truncatedNormal_(shape) {\n  var mean = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var stdDev = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var dtype = arguments.length > 3 ? arguments[3] : undefined;\n  var seed = arguments.length > 4 ? arguments[4] : undefined;\n\n  if (dtype != null && dtype === 'bool') {\n    throw new Error(\"Unsupported data type $ { dtype }\");\n  }\n\n  var randGauss = new MPRandGauss(mean, stdDev, dtype, true\n  /* truncated */\n  , seed);\n  var res = buffer(shape, dtype);\n\n  for (var i = 0; i < res.values.length; i++) {\n    res.values[i] = randGauss.nextValue();\n  }\n\n  return res.toTensor();\n}\n\nexport var truncatedNormal = op({\n  truncatedNormal_: truncatedNormal_\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\n/**\n * Creates a new variable with the provided initial value.\n * ```js\n * const x = tf.variable(tf.tensor([1, 2, 3]));\n * x.assign(tf.tensor([4, 5, 6]));\n *\n * x.print();\n * ```\n *\n * @param initialValue Initial value for the tensor.\n * @param trainable If true, optimizers are allowed to update it.\n * @param name Name of the variable. Defaults to a unique id.\n * @param dtype If set, initialValue will be converted to the given type.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\n\nexport function variable(initialValue) {\n  var trainable = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var name = arguments.length > 2 ? arguments[2] : undefined;\n  var dtype = arguments.length > 3 ? arguments[3] : undefined;\n  return ENGINE.makeVariable(initialValue, trainable, name, dtype);\n}","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/** An implementation of the Where kernel shared between cpu and webgl */\nimport { buffer } from '../ops/buffer';\nexport function whereImpl(condShape, condVals) {\n  var indices = [];\n\n  for (var i = 0; i < condVals.length; i++) {\n    if (condVals[i]) {\n      indices.push(i);\n    }\n  }\n\n  var inBuffer = buffer(condShape, 'int32');\n  var out = buffer([indices.length, condShape.length], 'int32');\n\n  for (var _i = 0; _i < indices.length; _i++) {\n    var loc = inBuffer.indexToLoc(indices[_i]);\n    var offset = _i * condShape.length;\n    out.values.set(loc, offset);\n  }\n\n  return out.toTensor();\n}","import _asyncToGenerator from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _regeneratorRuntime from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/regenerator\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { whereImpl } from '../backends/where_impl';\nimport { convertToTensor } from '../tensor_util_env';\n/**\n * Returns the coordinates of true elements of condition.\n *\n * The coordinates are returned in a 2-D tensor where the first dimension (rows)\n * represents the number of true elements, and the second dimension (columns)\n * represents the coordinates of the true elements. Keep in mind, the shape of\n * the output tensor can vary depending on how many true values there are in\n * input. Indices are output in row-major order. The resulting tensor has the\n * shape `[numTrueElems, condition.rank]`.\n *\n * This is analogous to calling the python `tf.where(cond)` without an x or y.\n *\n * ```js\n * const cond = tf.tensor1d([false, false, true], 'bool');\n * const result = await tf.whereAsync(cond);\n * result.print();\n * ```\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\n\nfunction whereAsync_(_x) {\n  return _whereAsync_.apply(this, arguments);\n}\n\nfunction _whereAsync_() {\n  _whereAsync_ = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(condition) {\n    var $condition, vals, res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            $condition = convertToTensor(condition, 'condition', 'whereAsync', 'bool');\n            _context.next = 3;\n            return $condition.data();\n\n          case 3:\n            vals = _context.sent;\n            res = whereImpl($condition.shape, vals);\n\n            if (condition !== $condition) {\n              $condition.dispose();\n            }\n\n            return _context.abrupt(\"return\", res);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _whereAsync_.apply(this, arguments);\n}\n\nexport var whereAsync = whereAsync_;","import _asyncToGenerator from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _regeneratorRuntime from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/regenerator\";\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { gather } from './gather';\nimport { reshape } from './reshape';\nimport { squeeze } from './squeeze';\nimport { whereAsync } from './where_async';\n/**\n * Apply boolean mask to tensor.\n *\n * ```js\n * const tensor = tf.tensor2d([1, 2, 3, 4, 5, 6], [3, 2]);\n * const mask = tf.tensor1d([1, 0, 1], 'bool');\n * const result = await tf.booleanMaskAsync(tensor, mask);\n * result.print();\n * ```\n *\n * @param tensor N-D tensor.\n * @param mask K-D boolean tensor, K <= N and K must be known statically.\n * @param axis A 0-D int Tensor representing the axis in tensor to mask from.\n *     By default, axis is 0 which will mask from the first dimension.\n *     Otherwise K + axis <= N.\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\n\nfunction booleanMaskAsync_(_x, _x2, _x3) {\n  return _booleanMaskAsync_.apply(this, arguments);\n}\n\nfunction _booleanMaskAsync_() {\n  _booleanMaskAsync_ = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(tensor, mask, axis) {\n    var $tensor, $mask, axisFrom, maskDim, tensorShape, leadingSize, i, targetTensorShape, reshapedTensor, reshapedMask, positivePositions, indices, res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            $tensor = convertToTensor(tensor, 'tensor', 'boolMask');\n            $mask = convertToTensor(mask, 'mask', 'boolMask', 'bool');\n            axisFrom = axis == null ? 0 : axis;\n            maskDim = $mask.rank;\n            tensorShape = $tensor.shape;\n            util.assert(maskDim > 0, function () {\n              return 'mask cannot be scalar';\n            });\n            util.assertShapesMatch(tensorShape.slice(axisFrom, axisFrom + maskDim), $mask.shape, \"mask's shape must match the first K dimensions of tensor's shape,\");\n            leadingSize = 1;\n\n            for (i = axisFrom; i < axisFrom + maskDim; i++) {\n              leadingSize *= tensorShape[i];\n            }\n\n            targetTensorShape = tensorShape.slice(0, axisFrom).concat([leadingSize], tensorShape.slice(axisFrom + maskDim));\n            reshapedTensor = reshape($tensor, targetTensorShape);\n            reshapedMask = reshape($mask, [-1]);\n            _context.next = 14;\n            return whereAsync(reshapedMask);\n\n          case 14:\n            positivePositions = _context.sent;\n            indices = squeeze(positivePositions, [1]);\n            res = gather(reshapedTensor, indices, axisFrom); // Ensure no memory leak.\n\n            if (tensor !== $tensor) {\n              $tensor.dispose();\n            }\n\n            if (mask !== $mask) {\n              $mask.dispose();\n            }\n\n            indices.dispose();\n            reshapedTensor.dispose();\n            reshapedMask.dispose();\n            positivePositions.dispose();\n            return _context.abrupt(\"return\", res);\n\n          case 24:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _booleanMaskAsync_.apply(this, arguments);\n}\n\nexport var booleanMaskAsync = booleanMaskAsync_;","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { assertTypesMatch } from '../tensor_util';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { add } from './add';\nimport { div } from './div';\nimport { mul } from './mul';\nimport { op } from './operation';\nimport { pow } from './pow';\nimport { scalar } from './scalar';\nimport { sub } from './sub';\n/**\n * Compute the moving average of a variable.\n *\n * Without zeroDebias, the moving average operation is defined by:\n *   `v += delta`\n * where\n *   `delta = (1 - decay) * (x - v)`\n *\n * With zeroDebias (default), the `delta` term is scaled to debias the\n * effect of the (assumed) zero-initialization of `v`.\n *   `delta /= (1 - decay ^ step)`\n *\n * For more details on the zero-debiasing algorithm, see:\n *   https://arxiv.org/abs/1412.6980\n *\n * Note that this function is completely stateless and does not keep track of\n * step count. The step count needs to be maintained by the caller and passed\n * in as `step`.\n *\n * @param v The current moving average value.\n * @param x New input value, must have the same shape and dtype as `v`.\n * @param decay The decay factor. Typical values are 0.95 and 0.99.\n * @param step Step count.\n * @param zeroDebias: Whether zeroDebias is to be performed (default: `true`).\n * @returns The new moving average value.\n *\n * @doc {heading: 'Operations', subheading: 'Moving Average'}\n */\n\nfunction movingAverage_(v, x, decay, step) {\n  var zeroDebias = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n  var $v = convertToTensor(v, 'v', 'movingAverage');\n  var $x = convertToTensor(x, 'x', 'movingAverage');\n  var $decay = convertToTensor(decay, 'decay', 'movingAverage');\n  assertTypesMatch($v, $x);\n  util.assert(util.arraysEqual($v.shape, $x.shape), function () {\n    return 'Shape mismatch in v and x';\n  });\n  var one = scalar(1);\n  var oneMinusDecay = sub(one, $decay);\n  var update = mul(sub($x, $v), oneMinusDecay);\n\n  if (zeroDebias) {\n    util.assert(step != null, function () {\n      return 'When using zeroDebias: true, step is required.';\n    });\n    var $step = convertToTensor(step, 'step', 'movingAverage');\n    update = div(update, sub(one, pow($decay, $step)));\n  }\n\n  return add($v, update);\n}\n\nexport var movingAverage = op({\n  movingAverage_: movingAverage_\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { ScatterNd } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\nimport * as scatter_nd_util from './scatter_nd_util';\n/**\n * Creates a new tensor by applying sparse updates to individual\n * values or slices within a zero tensor of the given shape tensor according to\n * indices. This operator is the inverse of the `tf.gatherND` operator which\n * extracts values or slices from a given tensor.\n *\n * ```js\n * const indices = tf.tensor2d([4, 3, 1, 7], [4, 1], 'int32');\n * const updates = tf.tensor1d([9, 10, 11, 12]);\n * const shape = [8];\n * tf.scatterND(indices, updates, shape).print() //[0, 11, 0, 10, 9, 0, 0, 12]\n * ```\n *\n * @param indices The tensor contains the indices into the output tensor.\n * @param updates The tensor contains the value for the indices.\n * @param shape: The shape of the output tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Slicing and Joining'}\n */\n\nfunction scatterND_(indices, updates, shape) {\n  var $indices = convertToTensor(indices, 'indices', 'scatterND', 'int32');\n  var $updates = convertToTensor(updates, 'updates', 'scatterND');\n  scatter_nd_util.validateInput($updates, $indices, shape);\n  var inputs = {\n    indices: $indices,\n    updates: $updates\n  };\n  var attrs = {\n    shape: shape\n  }; // tslint:disable-next-line: no-unnecessary-type-assertion\n\n  return ENGINE.runKernel(ScatterNd, inputs, attrs);\n}\n\nexport var scatterND = op({\n  scatterND_: scatterND_\n});","/**\n * Validate sparseToDense inputs.\n *\n * @param sparseIndices A 0-D, 1-D, or 2-D Tensor of type int32.\n * sparseIndices[i] contains the complete index where sparseValues[i] will be\n * placed.\n * @param sparseValues A 0-D or 1-D Tensor. Values\n * corresponding to each row of sparseIndices, or a scalar value to be used for\n * all sparse indices.\n * @param outputShape number[]. Shape of the dense output tensor.\n * @param validateIndices boolean. indice validation is not supported, error\n * will be thrown if it is set.\n */\nexport function validateInput(sparseIndices, sparseValues, outputShape, defaultValues) {\n  if (sparseIndices.dtype !== 'int32') {\n    throw new Error('tf.sparseToDense() expects the indices to be int32 type,' + \" but the dtype was \".concat(sparseIndices.dtype, \".\"));\n  }\n\n  if (sparseIndices.rank > 2) {\n    throw new Error('sparseIndices should be a scalar, vector, or matrix,' + \" but got shape \".concat(sparseIndices.shape, \".\"));\n  }\n\n  var numElems = sparseIndices.rank > 0 ? sparseIndices.shape[0] : 1;\n  var numDims = sparseIndices.rank > 1 ? sparseIndices.shape[1] : 1;\n\n  if (outputShape.length !== numDims) {\n    throw new Error('outputShape has incorrect number of elements:,' + \" \".concat(outputShape.length, \", should be: \").concat(numDims, \".\"));\n  }\n\n  var numValues = sparseValues.size;\n\n  if (!(sparseValues.rank === 0 || sparseValues.rank === 1 && numValues === numElems)) {\n    throw new Error('sparseValues has incorrect shape ' + \"\".concat(sparseValues.shape, \", should be [] or [\").concat(numElems, \"]\"));\n  }\n\n  if (sparseValues.dtype !== defaultValues.dtype) {\n    throw new Error('sparseValues.dtype must match defaultValues.dtype');\n  }\n}","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { SparseToDense } from '../kernel_names';\nimport * as sparse_to_dense from '../ops/sparse_to_dense_util';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Converts a sparse representation into a dense tensor.\n *\n * Builds an array dense with shape outputShape such that:\n *\n * // If sparseIndices is scalar\n * dense[i] = (i == sparseIndices ? sparseValues : defaultValue)\n *\n * // If sparseIndices is a vector, then for each i\n * dense[sparseIndices[i]] = sparseValues[i]\n *\n * // If sparseIndices is an n by d matrix, then for each i in [0, n)\n * dense[sparseIndices[i][0], ..., sparseIndices[i][d-1]] = sparseValues[i]\n * All other values in dense are set to defaultValue. If sparseValues is a\n * scalar, all sparse indices are set to this single value.\n *\n * If indices are repeated the final value is summed over all values for those\n * indices.\n *\n * ```js\n * const indices = tf.tensor1d([4, 5, 6, 1, 2, 3], 'int32');\n * const values = tf.tensor1d([10, 11, 12, 13, 14, 15], 'float32');\n * const shape = [8];\n * tf.sparseToDense(indices, values, shape).print();\n * ```\n *\n * @param sparseIndices A 0-D, 1-D, or 2-D Tensor of type int32.\n * sparseIndices[i] contains the complete index where sparseValues[i] will be\n * placed.\n * @param sparseValues A 0-D or 1-D Tensor. Values\n * corresponding to each row of sparseIndices, or a scalar value to be used for\n * all sparse indices.\n * @param outputShape Shape of the dense output tensor. the type is inferred.\n * @param defaultValue Scalar. Value to set for indices not specified in\n * sparseIndices. Defaults to zero.\n *\n * @doc {heading: 'Operations', subheading: 'Normalization'}\n */\n\nfunction sparseToDense_(sparseIndices, sparseValues, outputShape) {\n  var defaultValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  var $sparseIndices = convertToTensor(sparseIndices, 'sparseIndices', 'sparseToDense', 'int32');\n  var $sparseValues = convertToTensor(sparseValues, 'sparseValues', 'sparseToDense');\n  var $defaultValue = convertToTensor(defaultValue, 'defaultValue', 'sparseToDense', $sparseValues.dtype);\n  sparse_to_dense.validateInput($sparseIndices, $sparseValues, outputShape, $defaultValue);\n  var inputs = {\n    sparseIndices: $sparseIndices,\n    sparseValues: $sparseValues,\n    defaultValue: $defaultValue\n  };\n  var attrs = {\n    outputShape: outputShape\n  };\n  return ENGINE.runKernel(SparseToDense, inputs, attrs);\n}\n\nexport var sparseToDense = op({\n  sparseToDense_: sparseToDense_\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { GatherNd } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Gather slices from input tensor into a Tensor with shape specified by\n * `indices`.\n *\n * `indices` is an K-dimensional integer tensor, best thought of as a\n * (K-1)-dimensional tensor of indices into input, where each element defines a\n * slice of input:\n * output[\\\\(i_0, ..., i_{K-2}\\\\)] = input[indices[\\\\(i_0, ..., i_{K-2}\\\\)]]\n *\n * Whereas in `tf.gather`, `indices` defines slices into the first dimension of\n * input, in `tf.gatherND`, `indices` defines slices into the first N dimensions\n * of input, where N = indices.shape[-1].\n *\n * The last dimension of indices can be at most the rank of input:\n * indices.shape[-1] <= input.rank\n *\n * The last dimension of `indices` corresponds to elements\n * (if indices.shape[-1] == input.rank) or slices\n * (if indices.shape[-1] < input.rank) along dimension indices.shape[-1] of\n * input.\n * The output tensor has shape\n * indices.shape[:-1] + input.shape[indices.shape[-1]:]\n *\n * Note that on CPU, if an out of bound index is found, an error is returned. On\n * GPU, if an out of bound index is found, a 0 is stored in the corresponding\n * output value.\n *\n * ```js\n * const indices = tf.tensor2d([0, 1, 1, 0], [2,2], 'int32');\n * const input = tf.tensor2d([9, 10, 11, 12], [2, 2]);\n * tf.gatherND(input, indices).print() // [10, 11]\n * ```\n *\n * @param x The tensor from which to gather values.\n * @param indices Index tensor, must be of type int32.\n *\n * @doc {heading: 'Operations', subheading: 'Slicing and Joining'}\n */\n\nfunction gatherND_(x, indices) {\n  var $indices = convertToTensor(indices, 'indices', 'gatherND', 'int32');\n  var $x = convertToTensor(x, 'x', 'gatherND');\n  var inputs = {\n    params: $x,\n    indices: $indices\n  };\n  return ENGINE.runKernel(GatherNd, inputs);\n}\n\nexport var gatherND = op({\n  gatherND_: gatherND_\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Tensor } from '../tensor';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { add } from './add';\nimport { div } from './div';\nimport { getNoiseShape } from './dropout_util';\nimport { floor } from './floor';\nimport { mul } from './mul';\nimport { op } from './operation';\nimport { randomUniform } from './random_uniform';\n/**\n * Computes dropout.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 2, 1]);\n * const rate = 0.75;\n * const output = tf.dropout(x, rate);\n * output.print();\n * ```\n *\n * @param x A floating point Tensor or TensorLike.\n * @param rate A float in the range [0, 1). The probability that each element\n *   of x is discarded.\n * @param noiseShape An array of numbers of type int32, representing the\n * shape for randomly generated keep/drop flags. If the noiseShape has null\n * value, it will be automatically replaced with the x's relative dimension\n * size. Optional.\n * @param seed Used to create random seeds. Optional.\n * @returns A Tensor of the same shape of x.\n *\n * @doc {heading: 'Operations', subheading: 'Dropout'}\n */\n\nfunction dropout_(x, rate, noiseShape, seed) {\n  var $x = convertToTensor(x, 'x', 'dropout');\n  util.assert($x.dtype === 'float32', function () {\n    return \"x has to be a floating point tensor since it's going to be \" + \"scaled, but got a \".concat($x.dtype, \" tensor instead.\");\n  });\n  util.assert(rate >= 0 && rate < 1, function () {\n    return \"rate must be a float in the range [0, 1), but got \".concat(rate, \".\");\n  });\n\n  if (rate === 0) {\n    return x instanceof Tensor ? $x.clone() : $x;\n  }\n\n  var $noiseShape = getNoiseShape($x, noiseShape);\n  var keepProb = 1 - rate;\n  var multiplier = div(floor(add(randomUniform($noiseShape, 0, 1, 'float32', seed), keepProb)), keepProb);\n  return mul($x, multiplier);\n}\n\nexport var dropout = op({\n  dropout_: dropout_\n});","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport * as util from '../util';\n/**\n * Normalize noise shape based on provided tensor and noise shape.\n *\n * @param x Tensor.\n * @param noiseShape The shape for the randomly generated keep/drop flags, as\n *   an array of numbers. Optional.\n * @returns Normalized noise shape.\n */\n\nexport function getNoiseShape(x, noiseShape) {\n  if (noiseShape == null) {\n    return x.shape.slice();\n  }\n\n  if (util.arraysEqual(x.shape, noiseShape)) {\n    return noiseShape;\n  }\n\n  if (x.shape.length === noiseShape.length) {\n    var newDimension = [];\n\n    for (var i = 0; i < x.shape.length; i++) {\n      if (noiseShape[i] == null && x.shape[i] != null) {\n        newDimension.push(x.shape[i]);\n      } else {\n        newDimension.push(noiseShape[i]);\n      }\n    }\n\n    return newDimension;\n  }\n\n  return noiseShape;\n}","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { tensor1d } from './tensor1d';\nexport function enclosingPowerOfTwo(value) {\n  // Return 2**N for integer N such that 2**N >= value.\n  return Math.floor(Math.pow(2, Math.ceil(Math.log(value) / Math.log(2.0))));\n}\nexport function cosineWindow(windowLength, a, b) {\n  var even = 1 - windowLength % 2;\n  var newValues = new Float32Array(windowLength);\n\n  for (var i = 0; i < windowLength; ++i) {\n    var cosArg = 2.0 * Math.PI * i / (windowLength + even - 1);\n    newValues[i] = a - b * Math.cos(cosArg);\n  }\n\n  return tensor1d(newValues, 'float32');\n}","import _asyncToGenerator from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _regeneratorRuntime from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/regenerator\";\n\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { convertToTensor } from '../tensor_util_env';\nimport { assert, assertShapesMatch, getTypedArrayFromDType } from '../util';\nimport { tensor } from './tensor';\n/**\n * Returns whether the targets are in the top K predictions.\n *\n * ```js\n * const predictions = tf.tensor2d([[20, 10, 40, 30], [30, 50, -20, 10]]);\n * const targets = tf.tensor1d([2, 0]);\n * const precision = await tf.inTopKAsync(predictions, targets);\n * precision.print();\n * ```\n * @param predictions 2-D or higher `tf.Tensor` with last dimension being\n *     at least `k`.\n * @param targets 1-D or higher `tf.Tensor`.\n * @param k Optional Number of top elements to look at for computing precision,\n *     default to 1.\n *\n * @doc {heading: 'Operations', subheading: 'Evaluation'}\n */\n\nfunction inTopKAsync_(_x, _x2) {\n  return _inTopKAsync_.apply(this, arguments);\n}\n\nfunction _inTopKAsync_() {\n  _inTopKAsync_ = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(predictions, targets) {\n    var k,\n        $predictions,\n        $targets,\n        lastDim,\n        predictionsVals,\n        targetsVals,\n        batch,\n        size,\n        precision,\n        b,\n        offset,\n        vals,\n        valAndInd,\n        i,\n        _i,\n        _args = arguments;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            k = _args.length > 2 && _args[2] !== undefined ? _args[2] : 1;\n            $predictions = convertToTensor(predictions, 'predictions', 'inTopK');\n            $targets = convertToTensor(targets, 'targets', 'inTopK');\n            assert($predictions.rank > 1, function () {\n              return 'inTopK() expects the predictions to be of rank 2 or higher, ' + \"but got \".concat($predictions.rank);\n            });\n            assert($predictions.rank - 1 === $targets.rank, function () {\n              return \"predictions rank should be 1 larger than \" + \"targets rank, but got predictions rank \" + \"\".concat($predictions.rank, \" and targets rank \").concat($targets.rank);\n            });\n            assertShapesMatch($predictions.shape.slice(0, $predictions.shape.length - 1), $targets.shape, \"predictions's shape should be align with the targets' shape, \" + 'except the last dimension.');\n            lastDim = $predictions.shape[$predictions.shape.length - 1];\n            assert(k > 0 && k <= lastDim, function () {\n              return \"'k' passed to inTopK() must be > 0 && <= the predictions last \" + \"dimension (\".concat(lastDim, \"), but got \").concat(k);\n            });\n            _context.next = 10;\n            return $predictions.data();\n\n          case 10:\n            predictionsVals = _context.sent;\n            _context.next = 13;\n            return $targets.data();\n\n          case 13:\n            targetsVals = _context.sent;\n            // Reshape predictionsVals into a 2d tensor [batch, lastDim]\n            // and look up topK along lastDim.\n            batch = predictionsVals.length / lastDim, size = lastDim;\n            precision = getTypedArrayFromDType('bool', batch);\n            b = 0;\n\n          case 17:\n            if (!(b < batch)) {\n              _context.next = 35;\n              break;\n            }\n\n            offset = b * size;\n            vals = predictionsVals.subarray(offset, offset + size);\n            valAndInd = [];\n\n            for (i = 0; i < vals.length; i++) {\n              valAndInd.push({\n                value: vals[i],\n                index: i\n              });\n            }\n\n            valAndInd.sort(function (a, b) {\n              return b.value - a.value;\n            });\n            precision[b] = 0;\n            _i = 0;\n\n          case 25:\n            if (!(_i < k)) {\n              _context.next = 32;\n              break;\n            }\n\n            if (!(valAndInd[_i].index === targetsVals[b])) {\n              _context.next = 29;\n              break;\n            }\n\n            precision[b] = 1;\n            return _context.abrupt(\"break\", 32);\n\n          case 29:\n            _i++;\n            _context.next = 25;\n            break;\n\n          case 32:\n            b++;\n            _context.next = 17;\n            break;\n\n          case 35:\n            if (predictions !== $predictions) {\n              $predictions.dispose();\n            }\n\n            if (targets !== $targets) {\n              $targets.dispose();\n            } // Output precision has the same shape as targets.\n\n\n            return _context.abrupt(\"return\", tensor(precision, $targets.shape, 'bool'));\n\n          case 38:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _inTopKAsync_.apply(this, arguments);\n}\n\nexport var inTopKAsync = inTopKAsync_;","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport * as broadcast_util from './broadcast_util';\nimport { elu } from './elu';\nimport { leakyRelu } from './leaky_relu';\nimport { mul } from './mul';\nimport { prelu } from './prelu';\nimport { relu } from './relu';\nimport { relu6 } from './relu6';\nimport { reshape } from './reshape';\nimport { step } from './step';\nimport { sum } from './sum'; // Returns gradient for fused activation.\n\nexport function getFusedDyActivation(dy, y, activation) {\n  if (activation == null || activation === 'linear') {\n    return dy;\n  }\n\n  if (activation === 'relu') {\n    return mul(dy, step(y));\n  }\n\n  throw new Error(\"Cannot compute gradient for fused activation \".concat(activation, \".\"));\n} // Returns gradient for fused bias.\n\nexport function getFusedBiasGradient(bias, dyActivation) {\n  var res = dyActivation;\n  var reduceAxes = broadcast_util.getReductionAxes(bias.shape, dyActivation.shape);\n\n  if (reduceAxes.length > 0) {\n    res = sum(res, reduceAxes);\n  }\n\n  return reshape(res, bias.shape);\n}\nexport function applyActivation(x, activation, preluActivationWeights, leakyreluAlpha) {\n  if (activation === 'linear') {\n    return x;\n  } else if (activation === 'relu') {\n    return relu(x);\n  } else if (activation === 'elu') {\n    return elu(x);\n  } else if (activation === 'relu6') {\n    return relu6(x);\n  } else if (activation === 'prelu') {\n    return prelu(x, preluActivationWeights);\n  } else if (activation === 'leakyrelu') {\n    return leakyRelu(x, leakyreluAlpha);\n  }\n\n  throw new Error(\"Unknown fused activation \".concat(activation, \".\"));\n} // Whether we should call fused ops.\n\nexport var shouldFuse = function shouldFuse(gradientDepth, activation) {\n  var gradientMode = gradientDepth > 0;\n  return !gradientMode || activation === 'linear';\n};","import _slicedToArray from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../../engine';\nimport { customGrad } from '../../gradients';\nimport { FusedConv2D } from '../../kernel_names';\nimport { makeTypesMatch } from '../../tensor_util';\nimport { convertToTensor } from '../../tensor_util_env';\nimport * as util from '../../util';\nimport { add } from '../add';\nimport * as broadcast_util from '../broadcast_util';\nimport { conv2d as unfusedConv2d } from '../conv2d';\nimport { conv2DBackpropFilter } from '../conv2d_backprop_filter';\nimport { conv2DBackpropInput } from '../conv2d_backprop_input';\nimport * as conv_util from '../conv_util';\nimport { applyActivation, getFusedBiasGradient, getFusedDyActivation, shouldFuse } from '../fused_util';\nimport { op } from '../operation';\nimport { reshape } from '../reshape';\n/**\n * Computes a 2D convolution over the input x, optionally fused with adding a\n * bias and applying an activation.\n *\n * ```js\n * const inputDepth = 2;\n * const inShape = [2, 2, 2, inputDepth];\n * const outputDepth = 2;\n * const fSize = 1;\n * const pad = 0;\n * const strides = 1;\n *\n * const x = tf.tensor4d( [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n * 16], inShape);\n * const w = tf.tensor4d([-1, 1, -2, 0.5], [fSize, fSize, inputDepth,\n * outputDepth]);\n *\n * tf.fused.conv2d({ x, filter: w, strides, pad, dataFormat: 'NHWC',\n * dilations: [1, 1], bias: tf.scalar(5), activation: 'relu' }).print();\n * ```\n *\n * @param obj An object with the following properties:\n * @param x The input tensor, of rank 4 or rank 3, of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is\n * assumed.\n * @param filter The filter, rank 4, of shape\n *     `[filterHeight, filterWidth, inDepth, outDepth]`.\n * @param strides The strides of the convolution: `[strideHeight,\n * strideWidth]`.\n * @param pad The type of padding algorithm.\n *   - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *   - `valid` output will be smaller than input if filter is larger\n *       than 1x1.\n *   - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *          https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dataFormat An optional string from: \"NHWC\", \"NCHW\". Defaults to\n *     \"NHWC\". Specify the data format of the input and output data. With the\n *     default format \"NHWC\", the data is stored in the order of: [batch,\n *     height, width, channels]. Only \"NHWC\" is currently supported.\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     in atrous convolution. Defaults to `[1, 1]`. If `dilations` is a single\n *     number, then `dilationHeight == dilationWidth`. If it is greater than\n *     1, then all values of `strides` must be 1.\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n * @param bias Tensor to be added to the result.\n * @param activation Name of activation kernel (defaults to `linear`) to be\n *     applied\n *      after biasAdd.\n * @param preluActivationWeights Tensor of prelu weights to be applied as part\n *     of a `prelu` activation, typically the same shape as `x`.\n * @param leakyreluAlpha Optional. Alpha to be applied as part of a `leakyrelu`\n *     activation.\n */\n\nfunction fusedConv2d_(_ref) {\n  var x = _ref.x,\n      filter = _ref.filter,\n      strides = _ref.strides,\n      pad = _ref.pad,\n      _ref$dataFormat = _ref.dataFormat,\n      dataFormat = _ref$dataFormat === void 0 ? 'NHWC' : _ref$dataFormat,\n      _ref$dilations = _ref.dilations,\n      dilations = _ref$dilations === void 0 ? [1, 1] : _ref$dilations,\n      dimRoundingMode = _ref.dimRoundingMode,\n      bias = _ref.bias,\n      _ref$activation = _ref.activation,\n      activation = _ref$activation === void 0 ? 'linear' : _ref$activation,\n      preluActivationWeights = _ref.preluActivationWeights,\n      leakyreluAlpha = _ref.leakyreluAlpha;\n  activation = activation || 'linear';\n\n  if (shouldFuse(ENGINE.state.gradientDepth, activation) === false) {\n    var result = unfusedConv2d(x, filter, strides, pad, dataFormat, dilations, dimRoundingMode);\n\n    if (bias != null) {\n      result = add(result, bias);\n    }\n\n    return applyActivation(result, activation, preluActivationWeights, leakyreluAlpha);\n  }\n\n  var $x = convertToTensor(x, 'x', 'conv2d');\n  var $filter = convertToTensor(filter, 'filter', 'conv2d');\n  var x4D = $x;\n  var reshapedTo4D = false;\n\n  if ($x.rank === 3) {\n    reshapedTo4D = true;\n    x4D = reshape($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n  }\n\n  util.assert(x4D.rank === 4, function () {\n    return \"Error in fused conv2d: input must be rank 4, but got rank \" + \"\".concat(x4D.rank, \".\");\n  });\n  util.assert($filter.rank === 4, function () {\n    return \"Error in fused conv2d: filter must be rank 4, but got rank \" + \"\".concat($filter.rank, \".\");\n  });\n\n  if (dimRoundingMode != null) {\n    util.assert(util.isInt(pad), function () {\n      return \"Error in fused conv2d: pad must be an integer when using, \" + \"dimRoundingMode \".concat(dimRoundingMode, \" but got pad \").concat(pad, \".\");\n    });\n  }\n\n  util.assert(x4D.shape[3] === $filter.shape[2], function () {\n    return \"Error in conv2d: depth of input (\".concat(x4D.shape[3], \") must match \") + \"input depth for filter \".concat($filter.shape[2], \".\");\n  });\n  util.assert(conv_util.eitherStridesOrDilationsAreOne(strides, dilations), function () {\n    return 'Error in conv2D: Either strides or dilations must be 1. ' + \"Got strides \".concat(strides, \" and dilations '\").concat(dilations, \"'\");\n  });\n  util.assert(dataFormat === 'NHWC', function () {\n    return \"Error in conv2d: got dataFormat of \".concat(dataFormat, \" but only NHWC is currently supported.\");\n  });\n  var convInfo = conv_util.computeConv2DInfo(x4D.shape, $filter.shape, strides, dilations, pad, dimRoundingMode);\n  var $bias;\n\n  if (bias != null) {\n    $bias = convertToTensor(bias, 'bias', 'fused conv2d');\n\n    var _makeTypesMatch = makeTypesMatch($bias, $x);\n\n    var _makeTypesMatch2 = _slicedToArray(_makeTypesMatch, 1);\n\n    $bias = _makeTypesMatch2[0];\n    broadcast_util.assertAndGetBroadcastShape(convInfo.outShape, $bias.shape);\n  }\n\n  var $preluActivationWeights;\n\n  if (preluActivationWeights != null) {\n    $preluActivationWeights = convertToTensor(preluActivationWeights, 'prelu weights', 'fused conv2d');\n  }\n\n  var grad = function grad(dy, saved) {\n    var _saved = _slicedToArray(saved, 4),\n        $filter = _saved[0],\n        x4D = _saved[1],\n        y = _saved[2],\n        $bias = _saved[3];\n\n    var dyActivation = getFusedDyActivation(dy, y, activation);\n    util.assert(conv_util.tupleValuesAreOne(dilations), function () {\n      return 'Error in gradient of fused conv2D: ' + \"dilation rates greater than 1 \" + \"are not yet supported in gradients. Got dilations '\".concat(dilations, \"'\");\n    });\n    var xDer = conv2DBackpropInput(x4D.shape, dyActivation, $filter, strides, pad);\n    var filterDer = conv2DBackpropFilter(x4D, dyActivation, $filter.shape, strides, pad);\n    var der = [xDer, filterDer];\n\n    if ($bias != null) {\n      var biasDer = getFusedBiasGradient($bias, dyActivation);\n      der.push(biasDer);\n    }\n\n    return der;\n  };\n\n  var inputs = {\n    x: x4D,\n    filter: $filter,\n    bias: $bias,\n    preluActivationWeights: $preluActivationWeights\n  };\n  var attrs = {\n    strides: strides,\n    pad: pad,\n    dataFormat: dataFormat,\n    dilations: dilations,\n    dimRoundingMode: dimRoundingMode,\n    activation: activation,\n    leakyreluAlpha: leakyreluAlpha\n  }; // Depending on the the params passed in we will have different number of\n  // inputs and thus a a different number of elements in the gradient.\n\n  if (bias == null) {\n    var customOp = customGrad(function (x4D, filter, save) {\n      var res = // tslint:disable-next-line: no-unnecessary-type-assertion\n      ENGINE.runKernel(FusedConv2D, inputs, attrs);\n      save([filter, x4D, res]);\n\n      if (reshapedTo4D) {\n        // tslint:disable-next-line: no-unnecessary-type-assertion\n        res = reshape(res, [res.shape[1], res.shape[2], res.shape[3]]);\n      }\n\n      return {\n        value: res,\n        gradFunc: grad\n      };\n    });\n    return customOp(x4D, $filter);\n  } else {\n    var customOpWithBias = customGrad(function (x4D, filter, bias, save) {\n      var res = ENGINE.runKernel(FusedConv2D, inputs, attrs);\n      save([filter, x4D, res, bias]);\n\n      if (reshapedTo4D) {\n        // tslint:disable-next-line: no-unnecessary-type-assertion\n        res = reshape(res, [res.shape[1], res.shape[2], res.shape[3]]);\n      }\n\n      return {\n        value: res,\n        gradFunc: grad\n      };\n    });\n    return customOpWithBias(x4D, $filter, $bias);\n  }\n}\n\nexport var conv2d = op({\n  fusedConv2d_: fusedConv2d_\n});","import _slicedToArray from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../../engine';\nimport { customGrad } from '../../gradients';\nimport { FusedDepthwiseConv2D } from '../../kernel_names';\nimport { makeTypesMatch } from '../../tensor_util';\nimport { convertToTensor } from '../../tensor_util_env';\nimport * as util from '../../util';\nimport { add } from '../add';\nimport * as broadcast_util from '../broadcast_util';\nimport * as conv_util from '../conv_util';\nimport { depthwiseConv2d as unfusedDepthwiseConv2d } from '../depthwise_conv2d';\nimport { depthwiseConv2dNativeBackpropFilter } from '../depthwise_conv2d_native_backprop_filter';\nimport { depthwiseConv2dNativeBackpropInput } from '../depthwise_conv2d_native_backprop_input';\nimport { applyActivation, getFusedBiasGradient, getFusedDyActivation, shouldFuse } from '../fused_util';\nimport { op } from '../operation';\nimport { reshape } from '../reshape';\n/**\n * Computes depthwise 2D convolution, optionally fused with adding a\n * bias and applying an activation.\n *\n * Given a 4D `input` array and a `filter` array of shape\n * `[filterHeight, filterWidth, inChannels, channelMultiplier]` containing\n * `inChannels` convolutional filters of depth 1, this op applies a\n * different filter to each input channel (expanding from 1 channel to\n * `channelMultiplier` channels for each), then concatenates the results\n * together. The output has `inChannels * channelMultiplier` channels.\n *\n * See\n * [https://www.tensorflow.org/api_docs/python/tf/nn/depthwise_conv2d](\n *     https://www.tensorflow.org/api_docs/python/tf/nn/depthwise_conv2d)\n * for more details.\n *\n * @param obj An object with the following properties:\n * @param x The input tensor, of rank 4 or rank 3, of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is\n * assumed.\n * @param filter The filter tensor, rank 4, of shape\n *     `[filterHeight, filterWidth, inChannels, channelMultiplier]`.\n * @param strides The strides of the convolution: `[strideHeight,\n * strideWidth]`. If strides is a single number, then `strideHeight ==\n * strideWidth`.\n * @param pad The type of padding algorithm.\n *   - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *   - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *   - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *          https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     in atrous convolution. Defaults to `[1, 1]`. If `rate` is a single\n *     number, then `dilationHeight == dilationWidth`. If it is greater than\n *     1, then all values of `strides` must be 1.\n * @param dataFormat: An optional string from: \"NHWC\", \"NCHW\". Defaults to\n *     \"NHWC\". Specify the data format of the input and output data. With the\n *     default format \"NHWC\", the data is stored in the order of: [batch,\n *     height, width, channels]. Only \"NHWC\" is currently supported.\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n * @param bias Tensor to be added to the result.\n * @param activation Name of activation kernel (defaults to `linear`).\n * @param preluActivationWeights Tensor of prelu weights to be applied as part\n *     of a `prelu` activation, typically the same shape as `x`.\n * @param leakyreluAlpha Optional. Alpha to be applied as part of a `leakyrelu`\n *     activation.\n */\n\nfunction fusedDepthwiseConv2d_(_ref) {\n  var x = _ref.x,\n      filter = _ref.filter,\n      strides = _ref.strides,\n      pad = _ref.pad,\n      _ref$dataFormat = _ref.dataFormat,\n      dataFormat = _ref$dataFormat === void 0 ? 'NHWC' : _ref$dataFormat,\n      _ref$dilations = _ref.dilations,\n      dilations = _ref$dilations === void 0 ? [1, 1] : _ref$dilations,\n      dimRoundingMode = _ref.dimRoundingMode,\n      bias = _ref.bias,\n      _ref$activation = _ref.activation,\n      activation = _ref$activation === void 0 ? 'linear' : _ref$activation,\n      preluActivationWeights = _ref.preluActivationWeights,\n      leakyreluAlpha = _ref.leakyreluAlpha;\n\n  if (shouldFuse(ENGINE.state.gradientDepth, activation) === false) {\n    var result = unfusedDepthwiseConv2d(x, filter, strides, pad, dataFormat, dilations, dimRoundingMode);\n\n    if (bias != null) {\n      result = add(result, bias);\n    }\n\n    return applyActivation(result, activation, preluActivationWeights, leakyreluAlpha);\n  }\n\n  var $x = convertToTensor(x, 'x', 'depthwiseConv2d');\n  var $filter = convertToTensor(filter, 'filter', 'depthwiseConv2d');\n  var x4D = $x;\n  var reshapedTo4D = false;\n\n  if ($x.rank === 3) {\n    reshapedTo4D = true;\n    x4D = reshape($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n  }\n\n  util.assert(x4D.rank === 4, function () {\n    return \"Error in fused depthwiseConv2d: input must be rank 4, but got \" + \"rank \".concat(x4D.rank, \".\");\n  });\n  util.assert($filter.rank === 4, function () {\n    return \"Error in fused depthwiseConv2d: filter must be rank 4, \" + \"but got rank \".concat($filter.rank, \".\");\n  });\n  util.assert(x4D.shape[3] === $filter.shape[2], function () {\n    return \"Error in fused depthwiseConv2d: number of input channels \" + \"(\".concat(x4D.shape[3], \") must match the inChannels dimension in \") + \"filter \".concat($filter.shape[2], \".\");\n  });\n\n  if (dilations == null) {\n    dilations = [1, 1];\n  }\n\n  util.assert(conv_util.eitherStridesOrDilationsAreOne(strides, dilations), function () {\n    return 'Error in fused depthwiseConv2d: Either strides or dilations must ' + \"be 1. Got strides \".concat(strides, \" and dilations '\").concat(dilations, \"'\");\n  });\n\n  if (dimRoundingMode != null) {\n    util.assert(util.isInt(pad), function () {\n      return \"Error in fused depthwiseConv2d: pad must be an integer when \" + \"using dimRoundingMode \".concat(dimRoundingMode, \" but got pad \").concat(pad, \".\");\n    });\n  }\n\n  var convInfo = conv_util.computeConv2DInfo(x4D.shape, $filter.shape, strides, dilations, pad, dimRoundingMode, true\n  /* depthwise */\n  );\n  var $bias;\n\n  if (bias != null) {\n    $bias = convertToTensor(bias, 'bias', 'fused conv2d');\n\n    var _makeTypesMatch = makeTypesMatch($bias, $x);\n\n    var _makeTypesMatch2 = _slicedToArray(_makeTypesMatch, 1);\n\n    $bias = _makeTypesMatch2[0];\n    broadcast_util.assertAndGetBroadcastShape(convInfo.outShape, $bias.shape);\n  }\n\n  var $preluActivationWeights;\n\n  if (preluActivationWeights != null) {\n    $preluActivationWeights = convertToTensor(preluActivationWeights, 'prelu weights', 'fused depthwiseConv2d');\n  }\n\n  var grad = function grad(dy, saved) {\n    util.assert(conv_util.tupleValuesAreOne(dilations), function () {\n      return 'Error in gradient of fused depthwiseConv2d: dilation rates ' + \"greater than 1 are not yet supported. Got dilations \" + \"'\".concat(dilations, \"'\");\n    });\n\n    var _saved = _slicedToArray(saved, 4),\n        $filter = _saved[0],\n        x4D = _saved[1],\n        y = _saved[2],\n        bias = _saved[3];\n\n    var dyActivation = getFusedDyActivation(dy, y, activation);\n    var xDer = depthwiseConv2dNativeBackpropInput(x4D.shape, dyActivation, $filter, strides, pad, dilations, dimRoundingMode);\n    var filterDer = depthwiseConv2dNativeBackpropFilter(x4D, dyActivation, $filter.shape, strides, pad, dilations, dimRoundingMode);\n\n    if (bias != null) {\n      var biasDer = getFusedBiasGradient($bias, dyActivation);\n      return [xDer, filterDer, biasDer];\n    }\n\n    return [xDer, filterDer];\n  };\n\n  var inputs = {\n    x: x4D,\n    filter: $filter,\n    bias: $bias,\n    preluActivationWeights: $preluActivationWeights\n  };\n  var attrs = {\n    strides: strides,\n    pad: pad,\n    dataFormat: dataFormat,\n    dilations: dilations,\n    dimRoundingMode: dimRoundingMode,\n    activation: activation,\n    leakyreluAlpha: leakyreluAlpha\n  }; // Depending on the the params passed in we will have different number of\n  // inputs and thus a a different number of elements in the gradient.\n\n  if (bias == null) {\n    var customOp = customGrad(function (x4D, filter, save) {\n      // tslint:disable-next-line: no-unnecessary-type-assertion\n      var res = ENGINE.runKernel(FusedDepthwiseConv2D, inputs, attrs);\n      save([filter, x4D, res]);\n\n      if (reshapedTo4D) {\n        // tslint:disable-next-line: no-unnecessary-type-assertion\n        res = reshape(res, [res.shape[1], res.shape[2], res.shape[3]]);\n      }\n\n      return {\n        value: res,\n        gradFunc: grad\n      };\n    });\n    return customOp(x4D, $filter);\n  } else {\n    var customOpWithBias = customGrad(function (x4D, filter, bias, save) {\n      // tslint:disable-next-line: no-unnecessary-type-assertion\n      var res = ENGINE.runKernel(FusedDepthwiseConv2D, inputs, attrs);\n      save([filter, x4D, res, bias]);\n\n      if (reshapedTo4D) {\n        // tslint:disable-next-line: no-unnecessary-type-assertion\n        res = reshape(res, [res.shape[1], res.shape[2], res.shape[3]]);\n      }\n\n      return {\n        value: res,\n        gradFunc: grad\n      };\n    });\n    return customOpWithBias(x4D, $filter, $bias);\n  }\n}\n\nexport var depthwiseConv2d = op({\n  fusedDepthwiseConv2d_: fusedDepthwiseConv2d_\n});","import _slicedToArray from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../../engine';\nimport { customGrad } from '../../gradients';\nimport { _FusedMatMul } from '../../kernel_names';\nimport { makeTypesMatch } from '../../tensor_util';\nimport { convertToTensor } from '../../tensor_util_env';\nimport * as util from '../../util';\nimport { add } from '../add';\nimport * as broadcast_util from '../broadcast_util';\nimport { applyActivation, getFusedBiasGradient, getFusedDyActivation, shouldFuse } from '../fused_util';\nimport { matMul as unfusedMatMul } from '../mat_mul';\nimport { op } from '../operation';\nimport { reshape } from '../reshape';\n/**\n * Computes the dot product of two matrices with optional activation and bias.\n *\n * ```js\n * const a = tf.tensor2d([-1, -2], [1, 2]);\n * const b = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n * const bias = tf.tensor2d([1, 2], [1, 2]);\n *\n * tf.fused.matMul({a, b, bias, activation: 'relu'}).print();\n * ```\n *\n * @param obj An object with the following properties:\n * - `a` First matrix in dot product operation.\n * - `b` Second matrix in dot product operation.\n * - `transposeA` If true, `a` is transposed before multiplication.\n * - `transposeB` If true, `b` is transposed before multiplication.\n * - `bias` Matrix to be added to the result.\n * - `activation` Name of activation kernel (defaults to `linear`).\n * - `preluActivationWeights` Tensor of prelu weights.\n * - `leakyreluAlpha` Alpha of leakyrelu.\n */\n\nfunction fusedMatMul_(_ref) {\n  var a = _ref.a,\n      b = _ref.b,\n      _ref$transposeA = _ref.transposeA,\n      transposeA = _ref$transposeA === void 0 ? false : _ref$transposeA,\n      _ref$transposeB = _ref.transposeB,\n      transposeB = _ref$transposeB === void 0 ? false : _ref$transposeB,\n      bias = _ref.bias,\n      _ref$activation = _ref.activation,\n      activation = _ref$activation === void 0 ? 'linear' : _ref$activation,\n      preluActivationWeights = _ref.preluActivationWeights,\n      leakyreluAlpha = _ref.leakyreluAlpha;\n\n  if (shouldFuse(ENGINE.state.gradientDepth, activation) === false) {\n    var result = unfusedMatMul(a, b, transposeA, transposeB);\n\n    if (bias != null) {\n      result = add(result, bias);\n    }\n\n    return applyActivation(result, activation, preluActivationWeights, leakyreluAlpha);\n  }\n\n  var $a = convertToTensor(a, 'a', 'fused matMul');\n  var $b = convertToTensor(b, 'b', 'fused matMul');\n\n  var _makeTypesMatch = makeTypesMatch($a, $b);\n\n  var _makeTypesMatch2 = _slicedToArray(_makeTypesMatch, 2);\n\n  $a = _makeTypesMatch2[0];\n  $b = _makeTypesMatch2[1];\n  var innerShapeA = transposeA ? $a.shape[$a.rank - 2] : $a.shape[$a.rank - 1];\n  var innerShapeB = transposeB ? $b.shape[$b.rank - 1] : $b.shape[$b.rank - 2];\n  var outerShapeA = transposeA ? $a.shape[$a.rank - 1] : $a.shape[$a.rank - 2];\n  var outerShapeB = transposeB ? $b.shape[$b.rank - 2] : $b.shape[$b.rank - 1];\n  var outerDimsA = $a.shape.slice(0, -2);\n  var outerDimsB = $b.shape.slice(0, -2);\n  var batchDimA = util.sizeFromShape(outerDimsA);\n  var batchDimB = util.sizeFromShape(outerDimsB);\n  util.assert($a.rank >= 2 && $b.rank >= 2 && $a.rank === $b.rank, function () {\n    return \"Error in fused matMul: inputs must have the same rank of at \" + \"least 2, got ranks \".concat($a.rank, \" and \").concat($b.rank, \".\");\n  });\n  util.assert(util.arraysEqual(outerDimsA, outerDimsB), function () {\n    return \"Error in fused matMul: outer dimensions (\".concat(outerDimsA, \") and (\") + \"\".concat(outerDimsB, \") of Tensors with shapes \").concat($a.shape, \" and \") + \"\".concat($b.shape, \" must match.\");\n  });\n  util.assert(innerShapeA === innerShapeB, function () {\n    return \"Error in fused matMul: inner shapes (\".concat(innerShapeA, \") and (\") + \"\".concat(innerShapeB, \") of Tensors with shapes \").concat($a.shape, \" and \") + \"\".concat($b.shape, \" and transposeA=\").concat(transposeA) + \" and transposeB=\".concat(transposeB, \" must match.\");\n  });\n  var outShape = $a.shape.slice(0, -2).concat([outerShapeA, outerShapeB]);\n  var a3D = transposeA ? reshape($a, [batchDimA, innerShapeA, outerShapeA]) : reshape($a, [batchDimA, outerShapeA, innerShapeA]);\n  var b3D = transposeB ? reshape($b, [batchDimB, outerShapeB, innerShapeB]) : reshape($b, [batchDimB, innerShapeB, outerShapeB]);\n  var $bias;\n\n  if (bias != null) {\n    $bias = convertToTensor(bias, 'bias', 'fused matMul');\n\n    var _makeTypesMatch3 = makeTypesMatch($bias, $a);\n\n    var _makeTypesMatch4 = _slicedToArray(_makeTypesMatch3, 1);\n\n    $bias = _makeTypesMatch4[0];\n    broadcast_util.assertAndGetBroadcastShape(outShape, $bias.shape);\n  }\n\n  var $preluActivationWeights;\n\n  if (preluActivationWeights != null) {\n    $preluActivationWeights = convertToTensor(preluActivationWeights, 'prelu weights', 'fused matMul');\n  }\n\n  var grad = function grad(dy, saved) {\n    var _saved = _slicedToArray(saved, 4),\n        a3D = _saved[0],\n        b3D = _saved[1],\n        y = _saved[2],\n        $bias = _saved[3]; // we reshape dy because the result of the forward is not\n    // necessarily going to be a 3d tensor due to a reshape done at the end of\n    // the customOp.\n\n\n    var dyActivation = getFusedDyActivation(reshape(dy, y.shape), y, activation);\n    var aDer;\n    var bDer;\n\n    if (!transposeA && !transposeB) {\n      aDer = unfusedMatMul(dyActivation, b3D, false, true);\n      bDer = unfusedMatMul(a3D, dyActivation, true, false);\n    } else if (!transposeA && transposeB) {\n      aDer = unfusedMatMul(dyActivation, b3D, false, false);\n      bDer = unfusedMatMul(dyActivation, a3D, true, false);\n    } else if (transposeA && !transposeB) {\n      aDer = unfusedMatMul(b3D, dyActivation, false, true);\n      bDer = unfusedMatMul(a3D, dyActivation, false, false);\n    } else {\n      aDer = unfusedMatMul(b3D, dyActivation, true, true);\n      bDer = unfusedMatMul(dyActivation, a3D, true, true);\n    }\n\n    if (bias != null) {\n      var biasDer = getFusedBiasGradient($bias, dyActivation);\n      return [aDer, bDer, biasDer];\n    } else {\n      return [aDer, bDer];\n    }\n  };\n\n  var inputs = {\n    a: a3D,\n    b: b3D,\n    bias: $bias,\n    preluActivationWeights: $preluActivationWeights\n  };\n  var attrs = {\n    transposeA: transposeA,\n    transposeB: transposeB,\n    activation: activation,\n    leakyreluAlpha: leakyreluAlpha\n  }; // Depending on the the params passed in we will have different number of\n  // inputs and thus a a different number of elements in the gradient.\n\n  if (bias == null) {\n    var customOp = customGrad(function (a3D, b3D, save) {\n      var res = // tslint:disable-next-line: no-unnecessary-type-assertion\n      ENGINE.runKernel(_FusedMatMul, inputs, attrs);\n      save([a3D, b3D, res]);\n      return {\n        value: reshape(res, outShape),\n        gradFunc: grad\n      };\n    });\n    return customOp(a3D, b3D);\n  } else {\n    var customOpWithBias = customGrad(function (a3D, b3D, $bias, save) {\n      var res = // tslint:disable-next-line: no-unnecessary-type-assertion\n      ENGINE.runKernel(_FusedMatMul, inputs, attrs);\n      save([a3D, b3D, res, $bias]);\n      return {\n        value: reshape(res, outShape),\n        gradFunc: grad\n      };\n    });\n    return customOpWithBias(a3D, b3D, $bias);\n  }\n}\n\nexport var matMul = op({\n  fusedMatMul_: fusedMatMul_\n});","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { op } from '../operation';\nimport { cosineWindow } from '../signal_ops_util';\n/**\n * Generate a hamming window.\n *\n * See: https://en.wikipedia.org/wiki/Window_function#Hann_and_Hamming_windows\n *\n * ```js\n * tf.signal.hammingWindow(10).print();\n * ```\n * @param The length of window\n *\n * @doc {heading: 'Operations', subheading: 'Signal', namespace: 'signal'}\n */\n\nfunction hammingWindow_(windowLength) {\n  return cosineWindow(windowLength, 0.54, 0.46);\n}\n\nexport var hammingWindow = op({\n  hammingWindow_: hammingWindow_\n});","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { op } from '../operation';\nimport { cosineWindow } from '../signal_ops_util';\n/**\n * Generate a Hann window.\n *\n * See: https://en.wikipedia.org/wiki/Window_function#Hann_and_Hamming_windows\n *\n * ```js\n * tf.signal.hannWindow(10).print();\n * ```\n * @param The length of window\n *\n * @doc {heading: 'Operations', subheading: 'Signal', namespace: 'signal'}\n */\n\nfunction hannWindow_(windowLength) {\n  return cosineWindow(windowLength, 0.5, 0.5);\n}\n\nexport var hannWindow = op({\n  hannWindow_: hannWindow_\n});","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { concat } from '../concat';\nimport { fill } from '../fill';\nimport { op } from '../operation';\nimport { reshape } from '../reshape';\nimport { slice } from '../slice';\nimport { tensor2d } from '../tensor2d';\n/**\n * Expands input into frames of frameLength.\n * Slides a window size with frameStep.\n *\n * ```js\n * tf.signal.frame([1, 2, 3], 2, 1).print();\n * ```\n * @param signal The input tensor to be expanded\n * @param frameLength Length of each frame\n * @param frameStep The frame hop size in samples.\n * @param padEnd Whether to pad the end of signal with padValue.\n * @param padValue An number to use where the input signal does\n *     not exist when padEnd is True.\n *\n * @doc {heading: 'Operations', subheading: 'Signal', namespace: 'signal'}\n */\n\nfunction frame_(signal, frameLength, frameStep) {\n  var padEnd = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var padValue = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n  var start = 0;\n  var output = [];\n\n  while (start + frameLength <= signal.size) {\n    output.push(slice(signal, start, frameLength));\n    start += frameStep;\n  }\n\n  if (padEnd) {\n    while (start < signal.size) {\n      var padLen = start + frameLength - signal.size;\n      var pad = concat([slice(signal, start, frameLength - padLen), fill([padLen], padValue)]);\n      output.push(pad);\n      start += frameStep;\n    }\n  }\n\n  if (output.length === 0) {\n    return tensor2d([], [0, frameLength]);\n  }\n\n  return reshape(concat(output), [output.length, frameLength]);\n}\n\nexport var frame = op({\n  frame_: frame_\n});","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { mul } from '../mul';\nimport { op } from '../operation';\nimport { enclosingPowerOfTwo } from '../signal_ops_util';\nimport { rfft } from '../spectral/rfft';\nimport { frame } from './frame';\nimport { hannWindow } from './hann_window';\n/**\n * Computes the Short-time Fourier Transform of signals\n * See: https://en.wikipedia.org/wiki/Short-time_Fourier_transform\n *\n * ```js\n * const input = tf.tensor1d([1, 1, 1, 1, 1])\n * tf.signal.stft(input, 3, 1).print();\n * ```\n * @param signal 1-dimensional real value tensor.\n * @param frameLength The window length of samples.\n * @param frameStep The number of samples to step.\n * @param fftLength The size of the FFT to apply.\n * @param windowFn A callable that takes a window length and returns 1-d tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Signal', namespace: 'signal'}\n */\n\nfunction stft_(signal, frameLength, frameStep, fftLength) {\n  var windowFn = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : hannWindow;\n\n  if (fftLength == null) {\n    fftLength = enclosingPowerOfTwo(frameLength);\n  }\n\n  var framedSignal = frame(signal, frameLength, frameStep);\n  var windowedSignal = mul(framedSignal, windowFn(frameLength));\n  return rfft(windowedSignal, fftLength);\n}\n\nexport var stft = op({\n  stft_: stft_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../../engine';\nimport { CropAndResize } from '../../kernel_names';\nimport { convertToTensor } from '../../tensor_util_env';\nimport * as util from '../../util';\nimport { op } from '../operation';\n/**\n * Extracts crops from the input image tensor and resizes them using bilinear\n * sampling or nearest neighbor sampling (possibly with aspect ratio change)\n * to a common output size specified by cropSize.\n *\n * @param image 4d tensor of shape `[batch,imageHeight,imageWidth, depth]`,\n *     where imageHeight and imageWidth must be positive, specifying the\n *     batch of images from which to take crops\n * @param boxes 2d float32 tensor of shape `[numBoxes, 4]`. Each entry is\n *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the normalized\n *     coordinates of the box in the boxInd[i]'th image in the batch\n * @param boxInd 1d int32 tensor of shape `[numBoxes]` with values in range\n *     `[0, batch)` that specifies the image that the `i`-th box refers to.\n * @param cropSize 1d int32 tensor of 2 elements `[cropHeigh, cropWidth]`\n *     specifying the size to which all crops are resized to.\n * @param method Optional string from `'bilinear' | 'nearest'`,\n *     defaults to bilinear, which specifies the sampling method for resizing\n * @param extrapolationValue A threshold for deciding when to remove boxes based\n *     on score. Defaults to 0.\n * @return A 4D tensor of the shape `[numBoxes,cropHeight,cropWidth,depth]`\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\n\nfunction cropAndResize_(image, boxes, boxInd, cropSize) {\n  var method = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'bilinear';\n  var extrapolationValue = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n  var $image = convertToTensor(image, 'image', 'cropAndResize');\n  var $boxes = convertToTensor(boxes, 'boxes', 'cropAndResize', 'float32');\n  var $boxInd = convertToTensor(boxInd, 'boxInd', 'cropAndResize', 'int32');\n  var numBoxes = $boxes.shape[0];\n  util.assert($image.rank === 4, function () {\n    return 'Error in cropAndResize: image must be rank 4,' + \"but got rank \".concat($image.rank, \".\");\n  });\n  util.assert($boxes.rank === 2 && $boxes.shape[1] === 4, function () {\n    return \"Error in cropAndResize: boxes must be have size [\".concat(numBoxes, \",4] \") + \"but had shape \".concat($boxes.shape, \".\");\n  });\n  util.assert($boxInd.rank === 1 && $boxInd.shape[0] === numBoxes, function () {\n    return \"Error in cropAndResize: boxInd must be have size [\".concat(numBoxes, \"] \") + \"but had shape \".concat($boxes.shape, \".\");\n  });\n  util.assert(cropSize.length === 2, function () {\n    return \"Error in cropAndResize: cropSize must be of length 2, but got \" + \"length \".concat(cropSize.length, \".\");\n  });\n  util.assert(cropSize[0] >= 1 && cropSize[1] >= 1, function () {\n    return \"cropSize must be atleast [1,1], but was \".concat(cropSize);\n  });\n  util.assert(method === 'bilinear' || method === 'nearest', function () {\n    return \"method must be bilinear or nearest, but was \".concat(method);\n  });\n  var inputs = {\n    image: $image,\n    boxes: $boxes,\n    boxInd: $boxInd\n  };\n  var attrs = {\n    method: method,\n    extrapolationValue: extrapolationValue,\n    cropSize: cropSize\n  };\n  var res = ENGINE.runKernel(CropAndResize, inputs, attrs);\n  return res;\n}\n\nexport var cropAndResize = op({\n  cropAndResize_: cropAndResize_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../../engine';\nimport { FlipLeftRight } from '../../kernel_names';\nimport { convertToTensor } from '../../tensor_util_env';\nimport * as util from '../../util';\nimport { op } from '../operation';\n/**\n * Flips the image left to right. Currently available in the CPU, WebGL, and\n * WASM backends.\n *\n * @param image 4d tensor of shape `[batch, imageHeight, imageWidth, depth]`.\n */\n\n/** @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'} */\n\nfunction flipLeftRight_(image) {\n  var $image = convertToTensor(image, 'image', 'flipLeftRight', 'float32');\n  util.assert($image.rank === 4, function () {\n    return 'Error in flipLeftRight: image must be rank 4,' + \"but got rank \".concat($image.rank, \".\");\n  });\n  var inputs = {\n    image: $image\n  };\n  var res = ENGINE.runKernel(FlipLeftRight, inputs, {});\n  return res;\n}\n\nexport var flipLeftRight = op({\n  flipLeftRight_: flipLeftRight_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../../engine';\nimport { RotateWithOffset } from '../../kernel_names';\nimport { convertToTensor } from '../../tensor_util_env';\nimport * as util from '../../util';\nimport { op } from '../operation';\n/**\n * Rotates the input image tensor counter-clockwise with an optional offset\n * center of rotation. Currently available in the CPU, WebGL, and WASM backends.\n *\n * @param image 4d tensor of shape `[batch, imageHeight, imageWidth, depth]`.\n * @param radians The amount of rotation.\n * @param fillValue The value to fill in the empty space leftover\n *     after rotation. Can be either a single grayscale value (0-255), or an\n *     array of three numbers `[red, green, blue]` specifying the red, green,\n *     and blue channels. Defaults to `0` (black).\n * @param center The center of rotation. Can be either a single value (0-1), or\n *     an array of two numbers `[centerX, centerY]`. Defaults to `0.5` (rotates\n *     the image around its center).\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\n\nfunction rotateWithOffset_(image, radians) {\n  var fillValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var center = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0.5;\n  var $image = convertToTensor(image, 'image', 'rotateWithOffset', 'float32');\n  util.assert($image.rank === 4, function () {\n    return 'Error in rotateWithOffset: image must be rank 4,' + \"but got rank \".concat($image.rank, \".\");\n  });\n  var inputs = {\n    image: $image\n  };\n  var attrs = {\n    radians: radians,\n    fillValue: fillValue,\n    center: center\n  };\n  var res = ENGINE.runKernel(RotateWithOffset, inputs, attrs);\n  return res;\n}\n\nexport var rotateWithOffset = op({\n  rotateWithOffset_: rotateWithOffset_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport * as util from '../util';\n\nfunction nonMaxSuppSanityCheck(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma) {\n  if (iouThreshold == null) {\n    iouThreshold = 0.5;\n  }\n\n  if (scoreThreshold == null) {\n    scoreThreshold = Number.NEGATIVE_INFINITY;\n  }\n\n  if (softNmsSigma == null) {\n    softNmsSigma = 0.0;\n  }\n\n  var numBoxes = boxes.shape[0];\n  maxOutputSize = Math.min(maxOutputSize, numBoxes);\n  util.assert(0 <= iouThreshold && iouThreshold <= 1, function () {\n    return \"iouThreshold must be in [0, 1], but was '\".concat(iouThreshold, \"'\");\n  });\n  util.assert(boxes.rank === 2, function () {\n    return \"boxes must be a 2D tensor, but was of rank '\".concat(boxes.rank, \"'\");\n  });\n  util.assert(boxes.shape[1] === 4, function () {\n    return \"boxes must have 4 columns, but 2nd dimension was \".concat(boxes.shape[1]);\n  });\n  util.assert(scores.rank === 1, function () {\n    return 'scores must be a 1D tensor';\n  });\n  util.assert(scores.shape[0] === numBoxes, function () {\n    return \"scores has incompatible shape with boxes. Expected \".concat(numBoxes, \", \") + \"but was \".concat(scores.shape[0]);\n  });\n  util.assert(0 <= softNmsSigma && softNmsSigma <= 1, function () {\n    return \"softNmsSigma must be in [0, 1], but was '\".concat(softNmsSigma, \"'\");\n  });\n  return {\n    maxOutputSize: maxOutputSize,\n    iouThreshold: iouThreshold,\n    scoreThreshold: scoreThreshold,\n    softNmsSigma: softNmsSigma\n  };\n}\n\nexport { nonMaxSuppSanityCheck };","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../../engine';\nimport { NonMaxSuppressionV3 } from '../../kernel_names';\nimport { convertToTensor } from '../../tensor_util_env';\nimport { nonMaxSuppSanityCheck } from '../nonmax_util';\nimport { op } from '../operation';\n/**\n * Performs non maximum suppression of bounding boxes based on\n * iou (intersection over union).\n *\n * @param boxes a 2d tensor of shape `[numBoxes, 4]`. Each entry is\n *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the corners of\n *     the bounding box.\n * @param scores a 1d tensor providing the box scores of shape `[numBoxes]`.\n * @param maxOutputSize The maximum number of boxes to be selected.\n * @param iouThreshold A float representing the threshold for deciding whether\n *     boxes overlap too much with respect to IOU. Must be between [0, 1].\n *     Defaults to 0.5 (50% box overlap).\n * @param scoreThreshold A threshold for deciding when to remove boxes based\n *     on score. Defaults to -inf, which means any score is accepted.\n * @return A 1D tensor with the selected box indices.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\n\nfunction nonMaxSuppression_(boxes, scores, maxOutputSize) {\n  var iouThreshold = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0.5;\n  var scoreThreshold = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : Number.NEGATIVE_INFINITY;\n  var $boxes = convertToTensor(boxes, 'boxes', 'nonMaxSuppression');\n  var $scores = convertToTensor(scores, 'scores', 'nonMaxSuppression');\n  var inputs = nonMaxSuppSanityCheck($boxes, $scores, maxOutputSize, iouThreshold, scoreThreshold);\n  maxOutputSize = inputs.maxOutputSize;\n  iouThreshold = inputs.iouThreshold;\n  scoreThreshold = inputs.scoreThreshold;\n  var attrs = {\n    maxOutputSize: maxOutputSize,\n    iouThreshold: iouThreshold,\n    scoreThreshold: scoreThreshold\n  };\n  return ENGINE.runKernel(NonMaxSuppressionV3, {\n    boxes: $boxes,\n    scores: $scores\n  }, attrs);\n}\n\nexport var nonMaxSuppression = op({\n  nonMaxSuppression_: nonMaxSuppression_\n});","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * Inserts a value into a sorted array. This method allows duplicate, meaning it\n * allows inserting duplicate value, in which case, the element will be inserted\n * at the lowest index of the value.\n * @param arr The array to modify.\n * @param element The element to insert.\n * @param comparator Optional. If no comparator is specified, elements are\n * compared using array_util.defaultComparator, which is suitable for Strings\n * and Numbers in ascending arrays. If the array contains multiple instances of\n * the target value, the left-most instance will be returned. To provide a\n * comparator, it should take 2 arguments to compare and return a negative,\n * zero, or a positive number.\n */\nexport function binaryInsert(arr, element, comparator) {\n  var index = binarySearch(arr, element, comparator);\n  var insertionPoint = index < 0 ? -(index + 1) : index;\n  arr.splice(insertionPoint, 0, element);\n}\n/**\n * Searches the array for the target using binary search, returns the index\n * of the found element, or position to insert if element not found. If no\n * comparator is specified, elements are compared using array_\n * util.defaultComparator, which is suitable for Strings and Numbers in\n * ascending arrays. If the array contains multiple instances of the target\n * value, the left-most instance will be returned.\n * @param arr The array to be searched in.\n * @param target The target to be searched for.\n * @param comparator Should take 2 arguments to compare and return a negative,\n *    zero, or a positive number.\n * @return Lowest index of the target value if found, otherwise the insertion\n *    point where the target should be inserted, in the form of\n *    (-insertionPoint - 1).\n */\n\nexport function binarySearch(arr, target, comparator) {\n  return binarySearch_(arr, target, comparator || defaultComparator);\n}\n/**\n * Compares its two arguments for order.\n * @param a The first element to be compared.\n * @param b The second element to be compared.\n * @return A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\n\nfunction defaultComparator(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\nfunction binarySearch_(arr, target, comparator) {\n  var left = 0;\n  var right = arr.length;\n  var middle = 0;\n  var found = false;\n\n  while (left < right) {\n    middle = left + (right - left >>> 1);\n    var compareResult = comparator(target, arr[middle]);\n\n    if (compareResult > 0) {\n      left = middle + 1;\n    } else {\n      right = middle; // If compareResult is 0, the value is found. We record it is found,\n      // and then keep looking because there may be duplicate.\n\n      found = !compareResult;\n    }\n  }\n\n  return found ? left : -left - 1;\n}","import _toConsumableArray from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { binaryInsert } from './non_max_suppression_util';\nexport function nonMaxSuppressionV3Impl(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold) {\n  return nonMaxSuppressionImpl_(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold, 0\n  /* softNmsSigma */\n  );\n}\nexport function nonMaxSuppressionV4Impl(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold, padToMaxOutputSize) {\n  return nonMaxSuppressionImpl_(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold, 0\n  /* softNmsSigma */\n  , false\n  /* returnScoresTensor */\n  , padToMaxOutputSize\n  /* padToMaxOutputSize */\n  , true\n  /* returnValidOutputs */\n  );\n}\nexport function nonMaxSuppressionV5Impl(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma) {\n  return nonMaxSuppressionImpl_(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma, true\n  /* returnScoresTensor */\n  );\n}\n\nfunction nonMaxSuppressionImpl_(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma) {\n  var returnScoresTensor = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;\n  var padToMaxOutputSize = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : false;\n  var returnValidOutputs = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : false;\n  // The list is sorted in ascending order, so that we can always pop the\n  // candidate with the largest score in O(1) time.\n  var candidates = [];\n\n  for (var i = 0; i < scores.length; i++) {\n    if (scores[i] > scoreThreshold) {\n      candidates.push({\n        score: scores[i],\n        boxIndex: i,\n        suppressBeginIndex: 0\n      });\n    }\n  }\n\n  candidates.sort(ascendingComparator); // If softNmsSigma is 0, the outcome of this algorithm is exactly same as\n  // before.\n\n  var scale = softNmsSigma > 0 ? -0.5 / softNmsSigma : 0.0;\n  var selectedIndices = [];\n  var selectedScores = [];\n\n  while (selectedIndices.length < maxOutputSize && candidates.length > 0) {\n    var candidate = candidates.pop();\n    var originalScore = candidate.score,\n        boxIndex = candidate.boxIndex,\n        suppressBeginIndex = candidate.suppressBeginIndex;\n\n    if (originalScore < scoreThreshold) {\n      break;\n    } // Overlapping boxes are likely to have similar scores, therefore we\n    // iterate through the previously selected boxes backwards in order to\n    // see if candidate's score should be suppressed. We use\n    // suppressBeginIndex to track and ensure a candidate can be suppressed\n    // by a selected box no more than once. Also, if the overlap exceeds\n    // iouThreshold, we simply ignore the candidate.\n\n\n    var ignoreCandidate = false;\n\n    for (var j = selectedIndices.length - 1; j >= suppressBeginIndex; --j) {\n      var iou = intersectionOverUnion(boxes, boxIndex, selectedIndices[j]);\n\n      if (iou >= iouThreshold) {\n        ignoreCandidate = true;\n        break;\n      }\n\n      candidate.score = candidate.score * suppressWeight(iouThreshold, scale, iou);\n\n      if (candidate.score <= scoreThreshold) {\n        break;\n      }\n    } // At this point, if `candidate.score` has not dropped below\n    // `scoreThreshold`, then we know that we went through all of the\n    // previous selections and can safely update `suppressBeginIndex` to the\n    // end of the selected array. Then we can re-insert the candidate with\n    // the updated score and suppressBeginIndex back in the candidate list.\n    // If on the other hand, `candidate.score` has dropped below the score\n    // threshold, we will not add it back to the candidates list.\n\n\n    candidate.suppressBeginIndex = selectedIndices.length;\n\n    if (!ignoreCandidate) {\n      // Candidate has passed all the tests, and is not suppressed, so\n      // select the candidate.\n      if (candidate.score === originalScore) {\n        selectedIndices.push(boxIndex);\n        selectedScores.push(candidate.score);\n      } else if (candidate.score > scoreThreshold) {\n        // Candidate's score is suppressed but is still high enough to be\n        // considered, so add back to the candidates list.\n        binaryInsert(candidates, candidate, ascendingComparator);\n      }\n    }\n  } // NonMaxSuppressionV4 feature: padding output to maxOutputSize.\n\n\n  var validOutputs = selectedIndices.length;\n  var elemsToPad = maxOutputSize - validOutputs;\n\n  if (padToMaxOutputSize && elemsToPad > 0) {\n    selectedIndices.push.apply(selectedIndices, _toConsumableArray(new Array(elemsToPad).fill(0)));\n    selectedScores.push.apply(selectedScores, _toConsumableArray(new Array(elemsToPad).fill(0.0)));\n  }\n\n  var result = {\n    selectedIndices: selectedIndices\n  };\n\n  if (returnScoresTensor) {\n    result['selectedScores'] = selectedScores;\n  }\n\n  if (returnValidOutputs) {\n    result['validOutputs'] = validOutputs;\n  }\n\n  return result;\n}\n\nfunction intersectionOverUnion(boxes, i, j) {\n  var iCoord = boxes.subarray(i * 4, i * 4 + 4);\n  var jCoord = boxes.subarray(j * 4, j * 4 + 4);\n  var yminI = Math.min(iCoord[0], iCoord[2]);\n  var xminI = Math.min(iCoord[1], iCoord[3]);\n  var ymaxI = Math.max(iCoord[0], iCoord[2]);\n  var xmaxI = Math.max(iCoord[1], iCoord[3]);\n  var yminJ = Math.min(jCoord[0], jCoord[2]);\n  var xminJ = Math.min(jCoord[1], jCoord[3]);\n  var ymaxJ = Math.max(jCoord[0], jCoord[2]);\n  var xmaxJ = Math.max(jCoord[1], jCoord[3]);\n  var areaI = (ymaxI - yminI) * (xmaxI - xminI);\n  var areaJ = (ymaxJ - yminJ) * (xmaxJ - xminJ);\n\n  if (areaI <= 0 || areaJ <= 0) {\n    return 0.0;\n  }\n\n  var intersectionYmin = Math.max(yminI, yminJ);\n  var intersectionXmin = Math.max(xminI, xminJ);\n  var intersectionYmax = Math.min(ymaxI, ymaxJ);\n  var intersectionXmax = Math.min(xmaxI, xmaxJ);\n  var intersectionArea = Math.max(intersectionYmax - intersectionYmin, 0.0) * Math.max(intersectionXmax - intersectionXmin, 0.0);\n  return intersectionArea / (areaI + areaJ - intersectionArea);\n} // A Gaussian penalty function, this method always returns values in [0, 1].\n// The weight is a function of similarity, the more overlap two boxes are, the\n// smaller the weight is, meaning highly overlapping boxe will be significantly\n// penalized. On the other hand, a non-overlapping box will not be penalized.\n\n\nfunction suppressWeight(iouThreshold, scale, iou) {\n  var weight = Math.exp(scale * iou * iou);\n  return iou <= iouThreshold ? weight : 0.0;\n}\n\nfunction ascendingComparator(c1, c2) {\n  // For objects with same scores, we make the object with the larger index go\n  // first. In an array that pops from the end, this means that the object with\n  // the smaller index will be popped first. This ensures the same output as\n  // the TensorFlow python version.\n  return c1.score - c2.score || c1.score === c2.score && c2.boxIndex - c1.boxIndex;\n}","import _asyncToGenerator from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _regeneratorRuntime from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/regenerator\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { nonMaxSuppressionV3Impl } from '../../backends/non_max_suppression_impl';\nimport { convertToTensor } from '../../tensor_util_env';\nimport { nonMaxSuppSanityCheck } from '../nonmax_util';\nimport { tensor1d } from '../tensor1d';\n/**\n * Performs non maximum suppression of bounding boxes based on\n * iou (intersection over union).\n *\n * This is the async version of `nonMaxSuppression`\n *\n * @param boxes a 2d tensor of shape `[numBoxes, 4]`. Each entry is\n *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the corners of\n *     the bounding box.\n * @param scores a 1d tensor providing the box scores of shape `[numBoxes]`.\n * @param maxOutputSize The maximum number of boxes to be selected.\n * @param iouThreshold A float representing the threshold for deciding whether\n *     boxes overlap too much with respect to IOU. Must be between [0, 1].\n *     Defaults to 0.5 (50% box overlap).\n * @param scoreThreshold A threshold for deciding when to remove boxes based\n *     on score. Defaults to -inf, which means any score is accepted.\n * @return A 1D tensor with the selected box indices.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\n\nfunction nonMaxSuppressionAsync_(_x, _x2, _x3) {\n  return _nonMaxSuppressionAsync_.apply(this, arguments);\n}\n\nfunction _nonMaxSuppressionAsync_() {\n  _nonMaxSuppressionAsync_ = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(boxes, scores, maxOutputSize) {\n    var iouThreshold,\n        scoreThreshold,\n        $boxes,\n        $scores,\n        inputs,\n        boxesAndScores,\n        boxesVals,\n        scoresVals,\n        _nonMaxSuppressionV3I,\n        selectedIndices,\n        _args = arguments;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            iouThreshold = _args.length > 3 && _args[3] !== undefined ? _args[3] : 0.5;\n            scoreThreshold = _args.length > 4 && _args[4] !== undefined ? _args[4] : Number.NEGATIVE_INFINITY;\n            $boxes = convertToTensor(boxes, 'boxes', 'nonMaxSuppressionAsync');\n            $scores = convertToTensor(scores, 'scores', 'nonMaxSuppressionAsync');\n            inputs = nonMaxSuppSanityCheck($boxes, $scores, maxOutputSize, iouThreshold, scoreThreshold);\n            maxOutputSize = inputs.maxOutputSize;\n            iouThreshold = inputs.iouThreshold;\n            scoreThreshold = inputs.scoreThreshold;\n            _context.next = 10;\n            return Promise.all([$boxes.data(), $scores.data()]);\n\n          case 10:\n            boxesAndScores = _context.sent;\n            boxesVals = boxesAndScores[0];\n            scoresVals = boxesAndScores[1]; // We call a cpu based impl directly with the typedarray data  here rather\n            // than a kernel because all kernels are synchronous (and thus cannot await\n            // .data()).\n\n            _nonMaxSuppressionV3I = nonMaxSuppressionV3Impl(boxesVals, scoresVals, maxOutputSize, iouThreshold, scoreThreshold), selectedIndices = _nonMaxSuppressionV3I.selectedIndices;\n\n            if ($boxes !== boxes) {\n              $boxes.dispose();\n            }\n\n            if ($scores !== scores) {\n              $scores.dispose();\n            }\n\n            return _context.abrupt(\"return\", tensor1d(selectedIndices, 'int32'));\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _nonMaxSuppressionAsync_.apply(this, arguments);\n}\n\nexport var nonMaxSuppressionAsync = nonMaxSuppressionAsync_;","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../../engine';\nimport { NonMaxSuppressionV5 } from '../../kernel_names';\nimport { convertToTensor } from '../../tensor_util_env';\nimport { nonMaxSuppSanityCheck } from '../nonmax_util';\nimport { op } from '../operation';\n/**\n * Performs non maximum suppression of bounding boxes based on\n * iou (intersection over union).\n *\n * This op also supports a Soft-NMS mode (c.f.\n * Bodla et al, https://arxiv.org/abs/1704.04503) where boxes reduce the score\n * of other overlapping boxes, therefore favoring different regions of the image\n * with high scores. To enable this Soft-NMS mode, set the `softNmsSigma`\n * parameter to be larger than 0.\n *\n * @param boxes a 2d tensor of shape `[numBoxes, 4]`. Each entry is\n *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the corners of\n *     the bounding box.\n * @param scores a 1d tensor providing the box scores of shape `[numBoxes]`.\n * @param maxOutputSize The maximum number of boxes to be selected.\n * @param iouThreshold A float representing the threshold for deciding whether\n *     boxes overlap too much with respect to IOU. Must be between [0, 1].\n *     Defaults to 0.5 (50% box overlap).\n * @param scoreThreshold A threshold for deciding when to remove boxes based\n *     on score. Defaults to -inf, which means any score is accepted.\n * @param softNmsSigma A float representing the sigma parameter for Soft NMS.\n *     When sigma is 0, it falls back to nonMaxSuppression.\n * @return A map with the following properties:\n *     - selectedIndices: A 1D tensor with the selected box indices.\n *     - selectedScores: A 1D tensor with the corresponding scores for each\n *       selected box.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\n\nfunction nonMaxSuppressionWithScore_(boxes, scores, maxOutputSize) {\n  var iouThreshold = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0.5;\n  var scoreThreshold = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : Number.NEGATIVE_INFINITY;\n  var softNmsSigma = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0.0;\n  var $boxes = convertToTensor(boxes, 'boxes', 'nonMaxSuppression');\n  var $scores = convertToTensor(scores, 'scores', 'nonMaxSuppression');\n  var params = nonMaxSuppSanityCheck($boxes, $scores, maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma);\n  maxOutputSize = params.maxOutputSize;\n  iouThreshold = params.iouThreshold;\n  scoreThreshold = params.scoreThreshold;\n  softNmsSigma = params.softNmsSigma;\n  var inputs = {\n    boxes: $boxes,\n    scores: $scores\n  };\n  var attrs = {\n    maxOutputSize: maxOutputSize,\n    iouThreshold: iouThreshold,\n    scoreThreshold: scoreThreshold,\n    softNmsSigma: softNmsSigma\n  }; // tslint:disable-next-line: no-unnecessary-type-assertion\n\n  var result = ENGINE.runKernel(NonMaxSuppressionV5, inputs, attrs);\n  return {\n    selectedIndices: result[0],\n    selectedScores: result[1]\n  };\n}\n\nexport var nonMaxSuppressionWithScore = op({\n  nonMaxSuppressionWithScore_: nonMaxSuppressionWithScore_\n});","import _asyncToGenerator from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _regeneratorRuntime from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/regenerator\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { nonMaxSuppressionV5Impl } from '../../backends/non_max_suppression_impl';\nimport { convertToTensor } from '../../tensor_util_env';\nimport { nonMaxSuppSanityCheck } from '../nonmax_util';\nimport { tensor1d } from '../tensor1d';\n/**\n * Asynchronously performs non maximum suppression of bounding boxes based on\n * iou (intersection over union).\n *\n * This op also supports a Soft-NMS mode (c.f.\n * Bodla et al, https://arxiv.org/abs/1704.04503) where boxes reduce the score\n * of other overlapping boxes, therefore favoring different regions of the image\n * with high scores. To enable this Soft-NMS mode, set the `softNmsSigma`\n * parameter to be larger than 0.\n *\n * @param boxes a 2d tensor of shape `[numBoxes, 4]`. Each entry is\n *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the corners of\n *     the bounding box.\n * @param scores a 1d tensor providing the box scores of shape `[numBoxes]`.\n * @param maxOutputSize The maximum number of boxes to be selected.\n * @param iouThreshold A float representing the threshold for deciding whether\n *     boxes overlap too much with respect to IOU. Must be between [0, 1].\n *     Defaults to 0.5 (50% box overlap).\n * @param scoreThreshold A threshold for deciding when to remove boxes based\n *     on score. Defaults to -inf, which means any score is accepted.\n * @param softNmsSigma A float representing the sigma parameter for Soft NMS.\n *     When sigma is 0, it falls back to nonMaxSuppression.\n * @return A map with the following properties:\n *     - selectedIndices: A 1D tensor with the selected box indices.\n *     - selectedScores: A 1D tensor with the corresponding scores for each\n *       selected box.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\n\nfunction nonMaxSuppressionWithScoreAsync_(_x, _x2, _x3) {\n  return _nonMaxSuppressionWithScoreAsync_.apply(this, arguments);\n}\n\nfunction _nonMaxSuppressionWithScoreAsync_() {\n  _nonMaxSuppressionWithScoreAsync_ = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(boxes, scores, maxOutputSize) {\n    var iouThreshold,\n        scoreThreshold,\n        softNmsSigma,\n        $boxes,\n        $scores,\n        params,\n        boxesAndScores,\n        boxesVals,\n        scoresVals,\n        _nonMaxSuppressionV5I,\n        selectedIndices,\n        selectedScores,\n        _args = arguments;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            iouThreshold = _args.length > 3 && _args[3] !== undefined ? _args[3] : 0.5;\n            scoreThreshold = _args.length > 4 && _args[4] !== undefined ? _args[4] : Number.NEGATIVE_INFINITY;\n            softNmsSigma = _args.length > 5 && _args[5] !== undefined ? _args[5] : 0.0;\n            $boxes = convertToTensor(boxes, 'boxes', 'nonMaxSuppressionAsync');\n            $scores = convertToTensor(scores, 'scores', 'nonMaxSuppressionAsync');\n            params = nonMaxSuppSanityCheck($boxes, $scores, maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma);\n            maxOutputSize = params.maxOutputSize;\n            iouThreshold = params.iouThreshold;\n            scoreThreshold = params.scoreThreshold;\n            softNmsSigma = params.softNmsSigma;\n            _context.next = 12;\n            return Promise.all([$boxes.data(), $scores.data()]);\n\n          case 12:\n            boxesAndScores = _context.sent;\n            boxesVals = boxesAndScores[0];\n            scoresVals = boxesAndScores[1]; // We call a cpu based impl directly with the typedarray data  here rather\n            // than a kernel because all kernels are synchronous (and thus cannot await\n            // .data()).\n\n            _nonMaxSuppressionV5I = nonMaxSuppressionV5Impl(boxesVals, scoresVals, maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma), selectedIndices = _nonMaxSuppressionV5I.selectedIndices, selectedScores = _nonMaxSuppressionV5I.selectedScores;\n\n            if ($boxes !== boxes) {\n              $boxes.dispose();\n            }\n\n            if ($scores !== scores) {\n              $scores.dispose();\n            }\n\n            return _context.abrupt(\"return\", {\n              selectedIndices: tensor1d(selectedIndices, 'int32'),\n              selectedScores: tensor1d(selectedScores)\n            });\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _nonMaxSuppressionWithScoreAsync_.apply(this, arguments);\n}\n\nexport var nonMaxSuppressionWithScoreAsync = nonMaxSuppressionWithScoreAsync_;","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../../engine';\nimport { NonMaxSuppressionV4 } from '../../kernel_names';\nimport { convertToTensor } from '../../tensor_util_env';\nimport { nonMaxSuppSanityCheck } from '../nonmax_util';\nimport { op } from '../operation';\n/**\n * Asynchronously performs non maximum suppression of bounding boxes based on\n * iou (intersection over union), with an option to pad results.\n *\n * @param boxes a 2d tensor of shape `[numBoxes, 4]`. Each entry is\n *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the corners of\n *     the bounding box.\n * @param scores a 1d tensor providing the box scores of shape `[numBoxes]`.\n * @param maxOutputSize The maximum number of boxes to be selected.\n * @param iouThreshold A float representing the threshold for deciding whether\n *     boxes overlap too much with respect to IOU. Must be between [0, 1].\n *     Defaults to 0.5 (50% box overlap).\n * @param scoreThreshold A threshold for deciding when to remove boxes based\n *     on score. Defaults to -inf, which means any score is accepted.\n * @param padToMaxOutputSize Defalts to false. If true, size of output\n *     `selectedIndices` is padded to maxOutputSize.\n * @return A map with the following properties:\n *     - selectedIndices: A 1D tensor with the selected box indices.\n *     - validOutputs: A scalar denoting how many elements in `selectedIndices`\n *       are valid. Valid elements occur first, then padding.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\n\nfunction nonMaxSuppressionPadded_(boxes, scores, maxOutputSize) {\n  var iouThreshold = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0.5;\n  var scoreThreshold = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : Number.NEGATIVE_INFINITY;\n  var padToMaxOutputSize = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n  var $boxes = convertToTensor(boxes, 'boxes', 'nonMaxSuppression');\n  var $scores = convertToTensor(scores, 'scores', 'nonMaxSuppression');\n  var params = nonMaxSuppSanityCheck($boxes, $scores, maxOutputSize, iouThreshold, scoreThreshold, null\n  /* softNmsSigma */\n  );\n  var $maxOutputSize = params.maxOutputSize;\n  var $iouThreshold = params.iouThreshold;\n  var $scoreThreshold = params.scoreThreshold;\n  var inputs = {\n    boxes: $boxes,\n    scores: $scores\n  };\n  var attrs = {\n    maxOutputSize: $maxOutputSize,\n    iouThreshold: $iouThreshold,\n    scoreThreshold: $scoreThreshold,\n    padToMaxOutputSize: padToMaxOutputSize\n  }; // tslint:disable-next-line: no-unnecessary-type-assertion\n\n  var result = ENGINE.runKernel(NonMaxSuppressionV4, inputs, attrs);\n  return {\n    selectedIndices: result[0],\n    validOutputs: result[1]\n  };\n}\n\nexport var nonMaxSuppressionPadded = op({\n  nonMaxSuppressionPadded_: nonMaxSuppressionPadded_\n});","import _slicedToArray from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _regeneratorRuntime from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/regenerator\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { nonMaxSuppressionV4Impl } from '../../backends/non_max_suppression_impl';\nimport { convertToTensor } from '../../tensor_util_env';\nimport { nonMaxSuppSanityCheck } from '../nonmax_util';\nimport { scalar } from '../scalar';\nimport { tensor1d } from '../tensor1d';\n/**\n * Asynchronously performs non maximum suppression of bounding boxes based on\n * iou (intersection over union), with an option to pad results.\n *\n * @param boxes a 2d tensor of shape `[numBoxes, 4]`. Each entry is\n *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the corners of\n *     the bounding box.\n * @param scores a 1d tensor providing the box scores of shape `[numBoxes]`.\n * @param maxOutputSize The maximum number of boxes to be selected.\n * @param iouThreshold A float representing the threshold for deciding whether\n *     boxes overlap too much with respect to IOU. Must be between [0, 1].\n *     Defaults to 0.5 (50% box overlap).\n * @param scoreThreshold A threshold for deciding when to remove boxes based\n *     on score. Defaults to -inf, which means any score is accepted.\n * @param padToMaxOutputSize Defalts to false. If true, size of output\n *     `selectedIndices` is padded to maxOutputSize.\n * @return A map with the following properties:\n *     - selectedIndices: A 1D tensor with the selected box indices.\n *     - validOutputs: A scalar denoting how many elements in `selectedIndices`\n *       are valid. Valid elements occur first, then padding.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\n\nfunction nonMaxSuppressionPaddedAsync_(_x, _x2, _x3) {\n  return _nonMaxSuppressionPaddedAsync_.apply(this, arguments);\n}\n\nfunction _nonMaxSuppressionPaddedAsync_() {\n  _nonMaxSuppressionPaddedAsync_ = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(boxes, scores, maxOutputSize) {\n    var iouThreshold,\n        scoreThreshold,\n        padToMaxOutputSize,\n        $boxes,\n        $scores,\n        params,\n        $maxOutputSize,\n        $iouThreshold,\n        $scoreThreshold,\n        _yield$Promise$all,\n        _yield$Promise$all2,\n        boxesVals,\n        scoresVals,\n        _nonMaxSuppressionV4I,\n        selectedIndices,\n        validOutputs,\n        _args = arguments;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            iouThreshold = _args.length > 3 && _args[3] !== undefined ? _args[3] : 0.5;\n            scoreThreshold = _args.length > 4 && _args[4] !== undefined ? _args[4] : Number.NEGATIVE_INFINITY;\n            padToMaxOutputSize = _args.length > 5 && _args[5] !== undefined ? _args[5] : false;\n            $boxes = convertToTensor(boxes, 'boxes', 'nonMaxSuppressionAsync');\n            $scores = convertToTensor(scores, 'scores', 'nonMaxSuppressionAsync');\n            params = nonMaxSuppSanityCheck($boxes, $scores, maxOutputSize, iouThreshold, scoreThreshold, null\n            /* softNmsSigma */\n            );\n            $maxOutputSize = params.maxOutputSize;\n            $iouThreshold = params.iouThreshold;\n            $scoreThreshold = params.scoreThreshold;\n            _context.next = 11;\n            return Promise.all([$boxes.data(), $scores.data()]);\n\n          case 11:\n            _yield$Promise$all = _context.sent;\n            _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2);\n            boxesVals = _yield$Promise$all2[0];\n            scoresVals = _yield$Promise$all2[1];\n            // We call a cpu based impl directly with the typedarray data here rather\n            // than a kernel because all kernels are synchronous (and thus cannot await\n            // .data()).\n            _nonMaxSuppressionV4I = nonMaxSuppressionV4Impl(boxesVals, scoresVals, $maxOutputSize, $iouThreshold, $scoreThreshold, padToMaxOutputSize), selectedIndices = _nonMaxSuppressionV4I.selectedIndices, validOutputs = _nonMaxSuppressionV4I.validOutputs;\n\n            if ($boxes !== boxes) {\n              $boxes.dispose();\n            }\n\n            if ($scores !== scores) {\n              $scores.dispose();\n            }\n\n            return _context.abrupt(\"return\", {\n              selectedIndices: tensor1d(selectedIndices, 'int32'),\n              validOutputs: scalar(validOutputs, 'int32')\n            });\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _nonMaxSuppressionPaddedAsync_.apply(this, arguments);\n}\n\nexport var nonMaxSuppressionPaddedAsync = nonMaxSuppressionPaddedAsync_;","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../../engine';\nimport { Transform } from '../../kernel_names';\nimport { convertToTensor } from '../../tensor_util_env';\nimport * as util from '../../util';\nimport { op } from '../operation';\n/**\n * Applies the given transform(s) to the image(s).\n *\n * @param image 4d tensor of shape `[batch, imageHeight, imageWidth, depth]`.\n * @param transforms Projective transform matrix/matrices. A tensor1d of length\n *     8 or tensor of size N x 8. If one row of transforms is [a0, a1, a2, b0\n *     b1, b2, c0, c1], then it maps the output point (x, y) to a transformed\n *     input point (x', y') = ((a0 x + a1 y + a2) / k, (b0 x + b1 y + b2) / k),\n *     where k = c0 x + c1 y + 1. The transforms are inverted compared to the\n *     transform mapping input points to output points.\n * @param interpolation Interpolation mode.\n *     Supported values: 'nearest', 'bilinear'. Default to 'nearest'.\n * @param fillMode Points outside the boundaries of the input are filled\n *     according to the given mode, one of 'constant', 'reflect', 'wrap',\n *     'nearest'. Default to 'constant'.\n *     'reflect': (d c b a | a b c d | d c b a ) The input is extended by\n *     reflecting about the edge of the last pixel.\n *     'constant': (k k k k | a b c d | k k k k) The input is extended by\n *     filling all values beyond the edge with the same constant value k.\n *     'wrap': (a b c d | a b c d | a b c d) The input is extended by\n *     wrapping around to the opposite edge.\n *     'nearest': (a a a a | a b c d | d d d d) The input is extended by\n *     the nearest pixel.\n * @param fillValue A float represents the value to be filled outside the\n *     boundaries when fillMode is 'constant'.\n * @param Output dimension after the transform, [height, width]. If undefined,\n *     output is the same size as input image.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\n\nfunction transform_(image, transforms) {\n  var interpolation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'nearest';\n  var fillMode = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'constant';\n  var fillValue = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n  var outputShape = arguments.length > 5 ? arguments[5] : undefined;\n  var $image = convertToTensor(image, 'image', 'transform', 'float32');\n  var $transforms = convertToTensor(transforms, 'transforms', 'transform', 'float32');\n  util.assert($image.rank === 4, function () {\n    return 'Error in transform: image must be rank 4,' + \"but got rank \".concat($image.rank, \".\");\n  });\n  util.assert($transforms.rank === 2 && ($transforms.shape[0] === $image.shape[0] || $transforms.shape[0] === 1) && $transforms.shape[1] === 8, function () {\n    return \"Error in transform: Input transform should be batch x 8 or 1 x 8\";\n  });\n  util.assert(outputShape == null || outputShape.length === 2, function () {\n    return 'Error in transform: outputShape must be [height, width] or null, ' + \"but got \".concat(outputShape, \".\");\n  });\n  var inputs = {\n    image: $image,\n    transforms: $transforms\n  };\n  var attrs = {\n    interpolation: interpolation,\n    fillMode: fillMode,\n    fillValue: fillValue,\n    outputShape: outputShape\n  };\n  return ENGINE.runKernel(Transform, inputs, attrs);\n}\n\nexport var transform = op({\n  transform_: transform_\n});","import _slicedToArray from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { convertToTensor } from '../../tensor_util_env';\nimport { assert } from '../../util';\nimport { greaterEqual } from '../greater_equal';\nimport { lessEqual } from '../less_equal';\nimport { logicalAnd } from '../logical_and';\nimport { op } from '../operation';\nimport { range } from '../range';\nimport { reshape } from '../reshape';\nimport { scalar } from '../scalar';\nimport { stack } from '../stack';\nimport { sub } from '../sub';\nimport { unstack } from '../unstack';\nimport { where } from '../where';\nimport { zeros } from '../zeros';\n/**\n * Copy a tensor setting everything outside a central band in each innermost\n * matrix to zero.\n *\n * The band part is computed as follows: Assume input has `k` dimensions\n * `[I, J, K, ..., M, N]`, then the output is a tensor with the same shape where\n * `band[i, j, k, ..., m, n] = in_band(m, n) * input[i, j, k, ..., m, n]`.\n * The indicator function\n * `in_band(m, n) = (num_lower < 0 || (m-n) <= num_lower))`\n * `&& (num_upper < 0 || (n-m) <= num_upper)`\n *\n * ```js\n * const x = tf.tensor2d([[ 0,  1,  2, 3],\n *                        [-1,  0,  1, 2],\n *                        [-2, -1,  0, 1],\n *                        [-3, -2, -1, 0]]);\n * let y = tf.linalg.bandPart(x, 1, -1);\n * y.print(); // [[ 0,  1,  2, 3],\n *            //  [-1,  0,  1, 2],\n *            //  [ 0, -1,  0, 1],\n *            //  [ 0, 0 , -1, 0]]\n * let z = tf.linalg.bandPart(x, 2, 1);\n * z.print(); // [[ 0,  1,  0, 0],\n *            //  [-1,  0,  1, 0],\n *            //  [-2, -1,  0, 1],\n *            //  [ 0, -2, -1, 0]]\n * ```\n *\n * @param x Rank `k` tensor\n * @param numLower Number of subdiagonals to keep.\n *   If negative, keep entire lower triangle.\n * @param numUpper Number of subdiagonals to keep.\n *   If negative, keep entire upper triangle.\n * @returns Rank `k` tensor of the same shape as input.\n *   The extracted banded tensor.\n *\n * @doc {heading:'Operations', subheading:'Linear Algebra', namespace:'linalg'}\n */\n\nfunction bandPart_(a, numLower, numUpper) {\n  assert(numLower % 1 === 0, function () {\n    return \"bandPart(): numLower must be an integer, got \".concat(numLower, \".\");\n  });\n  assert(numUpper % 1 === 0, function () {\n    return \"bandPart(): numUpper must be an integer, got \".concat(numUpper, \".\");\n  });\n  var $a = convertToTensor(a, 'a', 'bandPart');\n  assert($a.rank >= 2, function () {\n    return \"bandPart(): Rank must be at least 2, got \".concat($a.rank, \".\");\n  });\n  var shape = $a.shape;\n\n  var _$a$shape$slice = $a.shape.slice(-2),\n      _$a$shape$slice2 = _slicedToArray(_$a$shape$slice, 2),\n      M = _$a$shape$slice2[0],\n      N = _$a$shape$slice2[1];\n\n  if (!(numLower <= M)) {\n    throw new Error(\"bandPart(): numLower (\".concat(numLower, \")\") + \" must not be greater than the number of rows (\".concat(M, \").\"));\n  }\n\n  if (!(numUpper <= N)) {\n    throw new Error(\"bandPart(): numUpper (\".concat(numUpper, \")\") + \" must not be greater than the number of columns (\".concat(N, \").\"));\n  }\n\n  if (numLower < 0) {\n    numLower = M;\n  }\n\n  if (numUpper < 0) {\n    numUpper = N;\n  }\n\n  var i = reshape(range(0, M, 1, 'int32'), [-1, 1]);\n  var j = range(0, N, 1, 'int32');\n  var ij = sub(i, j);\n  var inBand = logicalAnd(lessEqual(ij, scalar(+numLower, 'int32')), greaterEqual(ij, scalar(-numUpper, 'int32')));\n  var zero = zeros([M, N], $a.dtype);\n  return reshape(stack(unstack(reshape($a, [-1, M, N])).map(function (mat) {\n    return where(inBand, mat, zero);\n  })), shape);\n}\n\nexport var bandPart = op({\n  bandPart_: bandPart_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../../engine';\nimport { assert } from '../../util';\nimport { div } from '../div';\nimport { mul } from '../mul';\nimport { norm } from '../norm';\nimport { op } from '../operation';\nimport { split } from '../split';\nimport { squeeze } from '../squeeze';\nimport { stack } from '../stack';\nimport { sub } from '../sub';\nimport { sum } from '../sum';\n/**\n * Gram-Schmidt orthogonalization.\n *\n * ```js\n * const x = tf.tensor2d([[1, 2], [3, 4]]);\n * let y = tf.linalg.gramSchmidt(x);\n * y.print();\n * console.log('Othogonalized:');\n * y.dot(y.transpose()).print();  // should be nearly the identity matrix.\n * console.log('First row direction maintained:');\n * const data = await y.array();\n * console.log(data[0][1] / data[0][0]);  // should be nearly 2.\n * ```\n *\n * @param xs The vectors to be orthogonalized, in one of the two following\n *   formats:\n *   - An Array of `tf.Tensor1D`.\n *   - A `tf.Tensor2D`, i.e., a matrix, in which case the vectors are the rows\n *     of `xs`.\n *   In each case, all the vectors must have the same length and the length\n *   must be greater than or equal to the number of vectors.\n * @returns The orthogonalized and normalized vectors or matrix.\n *   Orthogonalization means that the vectors or the rows of the matrix\n *   are orthogonal (zero inner products). Normalization means that each\n *   vector or each row of the matrix has an L2 norm that equals `1`.\n *\n * @doc {heading:'Operations', subheading:'Linear Algebra', namespace:'linalg'}\n */\n\nfunction gramSchmidt_(xs) {\n  var inputIsTensor2D;\n\n  if (Array.isArray(xs)) {\n    (function () {\n      inputIsTensor2D = false;\n      assert(xs != null && xs.length > 0, function () {\n        return 'Gram-Schmidt process: input must not be null, undefined, or ' + 'empty';\n      });\n      var dim = xs[0].shape[0];\n\n      var _loop = function _loop(i) {\n        assert(xs[i].shape[0] === dim, function () {\n          return 'Gram-Schmidt: Non-unique lengths found in the input vectors: ' + \"(\".concat(xs[i].shape[0], \" vs. \").concat(dim, \")\");\n        });\n      };\n\n      for (var i = 1; i < xs.length; ++i) {\n        _loop(i);\n      }\n    })();\n  } else {\n    inputIsTensor2D = true;\n    xs = split(xs, xs.shape[0], 0).map(function (x) {\n      return squeeze(x, [0]);\n    });\n  }\n\n  assert(xs.length <= xs[0].shape[0], function () {\n    return \"Gram-Schmidt: Number of vectors (\".concat(xs.length, \") exceeds \") + \"number of dimensions (\".concat(xs[0].shape[0], \").\");\n  });\n  var ys = [];\n  var xs1d = xs;\n\n  var _loop2 = function _loop2(i) {\n    ys.push(ENGINE.tidy(function () {\n      var x = xs1d[i];\n\n      if (i > 0) {\n        for (var j = 0; j < i; ++j) {\n          var proj = mul(sum(mul(ys[j], x)), ys[j]);\n          x = sub(x, proj);\n        }\n      }\n\n      return div(x, norm(x, 'euclidean'));\n    }));\n  };\n\n  for (var i = 0; i < xs.length; ++i) {\n    _loop2(i);\n  }\n\n  if (inputIsTensor2D) {\n    return stack(ys, 0);\n  } else {\n    return ys;\n  }\n}\n\nexport var gramSchmidt = op({\n  gramSchmidt_: gramSchmidt_\n});","import _slicedToArray from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../../engine';\nimport { dispose } from '../../globals';\nimport { assert } from '../../util';\nimport { clone } from '../clone';\nimport { concat } from '../concat';\nimport { div } from '../div';\nimport { eye } from '../eye';\nimport { greater } from '../greater';\nimport { matMul } from '../mat_mul';\nimport { mul } from '../mul';\nimport { neg } from '../neg';\nimport { norm } from '../norm';\nimport { op } from '../operation';\nimport { reshape } from '../reshape';\nimport { slice } from '../slice';\nimport { stack } from '../stack';\nimport { sub } from '../sub';\nimport { tensor2d } from '../tensor2d';\nimport { transpose } from '../transpose';\nimport { unstack } from '../unstack';\nimport { where } from '../where';\n/**\n * Compute QR decomposition of m-by-n matrix using Householder transformation.\n *\n * Implementation based on\n *   [http://www.cs.cornell.edu/~bindel/class/cs6210-f09/lec18.pdf]\n * (http://www.cs.cornell.edu/~bindel/class/cs6210-f09/lec18.pdf)\n *\n * ```js\n * const a = tf.tensor2d([[1, 2], [3, 4]]);\n * let [q, r] = tf.linalg.qr(a);\n * console.log('Q');\n * q.print();\n * console.log('R');\n * r.print();\n * console.log('Orthogonalized');\n * q.dot(q.transpose()).print()  // should be nearly the identity matrix.\n * console.log('Reconstructed');\n * q.dot(r).print(); // should be nearly [[1, 2], [3, 4]];\n * ```\n *\n * @param x The `tf.Tensor` to be QR-decomposed. Must have rank >= 2. Suppose\n *   it has the shape `[..., M, N]`.\n * @param fullMatrices An optional boolean parameter. Defaults to `false`.\n *   If `true`, compute full-sized `Q`. If `false` (the default),\n *   compute only the leading N columns of `Q` and `R`.\n * @returns An `Array` of two `tf.Tensor`s: `[Q, R]`. `Q` is a unitary matrix,\n *   i.e., its columns all have unit norm and are mutually orthogonal.\n *   If `M >= N`,\n *     If `fullMatrices` is `false` (default),\n *       - `Q` has a shape of `[..., M, N]`,\n *       - `R` has a shape of `[..., N, N]`.\n *     If `fullMatrices` is `true` (default),\n *       - `Q` has a shape of `[..., M, M]`,\n *       - `R` has a shape of `[..., M, N]`.\n *   If `M < N`,\n *     - `Q` has a shape of `[..., M, M]`,\n *     - `R` has a shape of `[..., M, N]`.\n * @throws If the rank of `x` is less than 2.\n *\n * @doc {heading:'Operations',\n *       subheading:'Linear Algebra',\n *       namespace:'linalg'}\n */\n\nfunction qr_(x) {\n  var fullMatrices = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  assert(x.rank >= 2, function () {\n    return \"qr() requires input tensor to have a rank >= 2, but got rank \".concat(x.rank);\n  });\n\n  if (x.rank === 2) {\n    return qr2d(x, fullMatrices);\n  } else {\n    // Rank > 2.\n    // TODO(cais): Below we split the input into individual 2D tensors,\n    //   perform QR decomposition on them and then stack the results back\n    //   together. We should explore whether this can be parallelized.\n    var outerDimsProd = x.shape.slice(0, x.shape.length - 2).reduce(function (value, prev) {\n      return value * prev;\n    });\n    var x2ds = unstack(reshape(x, [outerDimsProd, x.shape[x.shape.length - 2], x.shape[x.shape.length - 1]]), 0);\n    var q2ds = [];\n    var r2ds = [];\n    x2ds.forEach(function (x2d) {\n      var _qr2d = qr2d(x2d, fullMatrices),\n          _qr2d2 = _slicedToArray(_qr2d, 2),\n          q2d = _qr2d2[0],\n          r2d = _qr2d2[1];\n\n      q2ds.push(q2d);\n      r2ds.push(r2d);\n    });\n    var q = reshape(stack(q2ds, 0), x.shape);\n    var r = reshape(stack(r2ds, 0), x.shape);\n    return [q, r];\n  }\n}\n\nfunction qr2d(x) {\n  var fullMatrices = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return ENGINE.tidy(function () {\n    assert(x.shape.length === 2, function () {\n      return \"qr2d() requires a 2D Tensor, but got a \".concat(x.shape.length, \"D Tensor.\");\n    });\n    var m = x.shape[0];\n    var n = x.shape[1];\n    var q = eye(m); // Orthogonal transform so far.\n\n    var r = clone(x); // Transformed matrix so far.\n\n    var one2D = tensor2d([[1]], [1, 1]);\n    var w = clone(one2D);\n    var iters = m >= n ? n : m;\n\n    var _loop = function _loop(j) {\n      // This tidy within the for-loop ensures we clean up temporary\n      // tensors as soon as they are no longer needed.\n      var rTemp = r;\n      var wTemp = w;\n      var qTemp = q;\n\n      var _ENGINE$tidy = ENGINE.tidy(function () {\n        // Find H = I - tau * w * w', to put zeros below R(j, j).\n        var rjEnd1 = slice(r, [j, j], [m - j, 1]);\n        var normX = norm(rjEnd1);\n        var rjj = slice(r, [j, j], [1, 1]); // The sign() function returns 0 on 0, which causes division by zero.\n\n        var s = where(greater(rjj, 0), tensor2d([[-1]]), tensor2d([[1]]));\n        var u1 = sub(rjj, mul(s, normX));\n        var wPre = div(rjEnd1, u1);\n\n        if (wPre.shape[0] === 1) {\n          w = clone(one2D);\n        } else {\n          w = concat([one2D, slice(wPre, [1, 0], [wPre.shape[0] - 1, wPre.shape[1]])], 0);\n        }\n\n        var tau = neg(div(matMul(s, u1), normX)); // -- R := HR, Q := QH.\n\n        var rjEndAll = slice(r, [j, 0], [m - j, n]);\n        var tauTimesW = mul(tau, w);\n        var wT = transpose(w);\n\n        if (j === 0) {\n          r = sub(rjEndAll, matMul(tauTimesW, matMul(wT, rjEndAll)));\n        } else {\n          var rTimesTau = sub(rjEndAll, matMul(tauTimesW, matMul(wT, rjEndAll)));\n          r = concat([slice(r, [0, 0], [j, n]), rTimesTau], 0);\n        }\n\n        var tawTimesWT = transpose(tauTimesW);\n        var qAllJEnd = slice(q, [0, j], [m, q.shape[1] - j]);\n\n        if (j === 0) {\n          q = sub(qAllJEnd, matMul(matMul(qAllJEnd, w), tawTimesWT));\n        } else {\n          var qTimesTau = sub(qAllJEnd, matMul(matMul(qAllJEnd, w), tawTimesWT));\n          q = concat([slice(q, [0, 0], [m, j]), qTimesTau], 1);\n        }\n\n        return [w, r, q];\n      });\n\n      var _ENGINE$tidy2 = _slicedToArray(_ENGINE$tidy, 3);\n\n      w = _ENGINE$tidy2[0];\n      r = _ENGINE$tidy2[1];\n      q = _ENGINE$tidy2[2];\n      dispose([rTemp, wTemp, qTemp]);\n    };\n\n    for (var j = 0; j < iters; ++j) {\n      _loop(j);\n    }\n\n    if (!fullMatrices && m > n) {\n      q = slice(q, [0, 0], [m, n]);\n      r = slice(r, [0, 0], [n, n]);\n    }\n\n    return [q, r];\n  });\n}\n\nexport var qr = op({\n  qr_: qr_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var Reduction;\n\n(function (Reduction) {\n  Reduction[Reduction[\"NONE\"] = 0] = \"NONE\";\n  Reduction[Reduction[\"MEAN\"] = 1] = \"MEAN\";\n  Reduction[Reduction[\"SUM\"] = 2] = \"SUM\";\n  Reduction[Reduction[\"SUM_BY_NONZERO_WEIGHTS\"] = 3] = \"SUM_BY_NONZERO_WEIGHTS\";\n})(Reduction || (Reduction = {}));","import { convertToTensor } from '../../tensor_util_env';\nimport { cast } from '../cast';\nimport { div } from '../div';\nimport { Reduction } from '../loss_ops_utils';\nimport { mean } from '../mean';\nimport { mul } from '../mul';\nimport { notEqual } from '../not_equal';\nimport { ones } from '../ones';\nimport { op } from '../operation';\nimport { scalar } from '../scalar';\nimport { sum } from '../sum';\n/**\n * Computes the weighted loss between two tensors.\n *\n * @param losses Tensor of shape `[batch_size, d1, ... dN]`.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `losses`, and must be broadcastable to `losses` (i.e., all\n *    dimensions must be either `1`, or the same as the corresponding\n *    `losses` dimension).\n *\n * @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'}\n */\n\nfunction computeWeightedLoss_(losses, weights) {\n  var reduction = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Reduction.SUM_BY_NONZERO_WEIGHTS;\n  var $losses = convertToTensor(losses, 'losses', 'computeWeightedLoss');\n  var $weights = null;\n\n  if (weights != null) {\n    $weights = convertToTensor(weights, 'weights', 'computeWeightedLoss');\n  }\n\n  var weightedLoss = $weights == null ? $losses : mul($losses, $weights);\n\n  if (reduction === Reduction.NONE) {\n    return weightedLoss;\n  }\n\n  if (reduction === Reduction.SUM) {\n    return sum(weightedLoss);\n  }\n\n  if (reduction === Reduction.MEAN) {\n    if ($weights == null) {\n      return mean(weightedLoss);\n    } else {\n      var broadcastFactor = $losses.size / $weights.size;\n      var result = div(sum(weightedLoss), sum($weights));\n      return broadcastFactor > 1 ? div(result, scalar(broadcastFactor)) : result;\n    }\n  }\n\n  if (reduction === Reduction.SUM_BY_NONZERO_WEIGHTS) {\n    if ($weights == null) {\n      return div(sum(weightedLoss), scalar($losses.size));\n    } else {\n      var broadcastedWeights = mul($weights, ones($losses.shape));\n      var numNonZeros = cast(sum(notEqual(broadcastedWeights, scalar(0))), 'float32');\n      return div(sum(weightedLoss), numNonZeros);\n    }\n  }\n\n  throw Error(\"Unknown reduction: \".concat(reduction));\n}\n\nexport var computeWeightedLoss = op({\n  computeWeightedLoss_: computeWeightedLoss_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { convertToTensor } from '../../tensor_util_env';\nimport { assertShapesMatch } from '../../util';\nimport { abs } from '../abs';\nimport { Reduction } from '../loss_ops_utils';\nimport { op } from '../operation';\nimport { sub } from '../sub';\nimport { computeWeightedLoss } from './compute_weighted_loss';\n/**\n * Computes the absolute difference loss between two tensors.\n *\n * @param labels The ground truth output tensor, same dimensions as\n *    'predictions'.\n * @param predictions The predicted outputs.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions\n *    must be either `1`, or the same as the corresponding `losses`\n *    dimension).\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`\n *\n * @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'}\n */\n\nfunction absoluteDifference_(labels, predictions, weights) {\n  var reduction = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : Reduction.SUM_BY_NONZERO_WEIGHTS;\n  var $labels = convertToTensor(labels, 'labels', 'absoluteDifference');\n  var $predictions = convertToTensor(predictions, 'predictions', 'absoluteDifference');\n  var $weights = null;\n\n  if (weights != null) {\n    $weights = convertToTensor(weights, 'weights', 'absoluteDifference');\n  }\n\n  assertShapesMatch($labels.shape, $predictions.shape, 'Error in absoluteDifference: ');\n  var losses = abs(sub($labels, $predictions));\n  return computeWeightedLoss(losses, $weights, reduction);\n}\n\nexport var absoluteDifference = op({\n  absoluteDifference_: absoluteDifference_\n});","import { convertToTensor } from '../../tensor_util_env';\nimport { assertShapesMatch } from '../../util';\nimport { Reduction } from '../loss_ops_utils';\nimport { mul } from '../mul';\nimport { op } from '../operation';\nimport { scalar } from '../scalar';\nimport { sub } from '../sub';\nimport { sum } from '../sum';\nimport { computeWeightedLoss } from './compute_weighted_loss';\n/**\n * Computes the cosine distance loss between two tensors.\n *\n * @param labels The ground truth output tensor, same dimensions as\n *    'predictions'.\n * @param predictions The predicted outputs.\n * @param axis The dimension along which the cosine distance is computed.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions\n *    must be either `1`, or the same as the corresponding `losses`\n *    dimension).\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`\n *\n * @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'}\n */\n\nfunction cosineDistance_(labels, predictions, axis, weights) {\n  var reduction = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : Reduction.SUM_BY_NONZERO_WEIGHTS;\n  var $labels = convertToTensor(labels, 'labels', 'cosineDistance');\n  var $predictions = convertToTensor(predictions, 'predictions', 'cosineDistance');\n  var $weights = null;\n\n  if (weights != null) {\n    $weights = convertToTensor(weights, 'weights', 'cosineDistance');\n  }\n\n  assertShapesMatch($labels.shape, $predictions.shape, 'Error in cosineDistance: ');\n  var one = scalar(1);\n  var losses = sub(one, sum(mul($labels, $predictions), axis, true));\n  return computeWeightedLoss(losses, $weights, reduction);\n}\n\nexport var cosineDistance = op({\n  cosineDistance_: cosineDistance_\n});","import { convertToTensor } from '../../tensor_util_env';\nimport { assertShapesMatch } from '../../util';\nimport { Reduction } from '../loss_ops_utils';\nimport { mul } from '../mul';\nimport { op } from '../operation';\nimport { relu } from '../relu';\nimport { scalar } from '../scalar';\nimport { sub } from '../sub';\nimport { computeWeightedLoss } from './compute_weighted_loss';\n/**\n * Computes the Hinge loss between two tensors.\n *\n * @param labels The ground truth output tensor, same dimensions as\n *    'predictions'.\n * @param predictions The predicted outputs.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions\n *    must be either `1`, or the same as the corresponding `losses`\n *    dimension).\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`\n *\n * @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'}\n */\n\nfunction hingeLoss_(labels, predictions, weights) {\n  var reduction = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : Reduction.SUM_BY_NONZERO_WEIGHTS;\n  var $labels = convertToTensor(labels, 'labels', 'hingeLoss');\n  var $predictions = convertToTensor(predictions, 'predictions', 'hingeLoss');\n  var $weights = null;\n\n  if (weights != null) {\n    $weights = convertToTensor(weights, 'weights', 'hingeLoss');\n  }\n\n  assertShapesMatch($labels.shape, $predictions.shape, 'Error in hingeLoss: ');\n  var one = scalar(1); // Convert binary labels to (-1, 1)\n\n  $labels = sub(mul(scalar(2), $labels), one);\n  var losses = relu(sub(one, mul($labels, $predictions)));\n  return computeWeightedLoss(losses, $weights, reduction);\n}\n\nexport var hingeLoss = op({\n  hingeLoss_: hingeLoss_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { convertToTensor } from '../../tensor_util_env';\nimport { assertShapesMatch } from '../../util';\nimport { abs } from '../abs';\nimport { add } from '../add';\nimport { Reduction } from '../loss_ops_utils';\nimport { minimum } from '../minimum';\nimport { mul } from '../mul';\nimport { op } from '../operation';\nimport { scalar } from '../scalar';\nimport { square } from '../square';\nimport { sub } from '../sub';\nimport { computeWeightedLoss } from './compute_weighted_loss';\n/**\n * Computes the huber loss between two tensors.\n *\n * @param labels The ground truth output tensor, same dimensions as\n *    'predictions'.\n * @param predictions The predicted outputs.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions\n *    must be either `1`, or the same as the corresponding `losses`\n *    dimension).\n * @param delta Point where huber loss changes from quadratic to linear.\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`.\n *\n * @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'}\n */\n\nfunction huberLoss_(labels, predictions, weights) {\n  var delta = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1.0;\n  var reduction = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : Reduction.SUM_BY_NONZERO_WEIGHTS;\n  var $labels = convertToTensor(labels, 'labels', 'huberLoss');\n  var $predictions = convertToTensor(predictions, 'predictions', 'huberLoss');\n  var $weights = null;\n\n  if (weights != null) {\n    $weights = convertToTensor(weights, 'weights', 'huberLoss');\n  }\n\n  assertShapesMatch($labels.shape, $predictions.shape, 'Error in huberLoss: ');\n  var deltaScalar = scalar(delta);\n  var error = abs(sub($predictions, $labels));\n  var quadratic = minimum(error, deltaScalar);\n  var linear = sub(error, quadratic);\n  var losses = add(mul(scalar(0.5), square(quadratic)), mul(deltaScalar, linear));\n  return computeWeightedLoss(losses, $weights, reduction);\n}\n\nexport var huberLoss = op({\n  huberLoss_: huberLoss_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { convertToTensor } from '../../tensor_util_env';\nimport { assertShapesMatch } from '../../util';\nimport { add } from '../add';\nimport { log } from '../log';\nimport { Reduction } from '../loss_ops_utils';\nimport { mul } from '../mul';\nimport { neg } from '../neg';\nimport { op } from '../operation';\nimport { scalar } from '../scalar';\nimport { sub } from '../sub';\nimport { computeWeightedLoss } from './compute_weighted_loss';\n/**\n * Computes the log loss between two tensors.\n *\n * @param labels The ground truth output tensor, same dimensions as\n *    'predictions'.\n * @param predictions The predicted outputs.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions\n *    must be either `1`, or the same as the corresponding `losses`\n *    dimension).\n * @param epsilon A small increment to avoid taking log of zero\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`\n *\n * @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'}\n */\n\nfunction logLoss_(labels, predictions, weights) {\n  var epsilon = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1e-7;\n  var reduction = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : Reduction.SUM_BY_NONZERO_WEIGHTS;\n  var $labels = convertToTensor(labels, 'labels', 'logLoss');\n  var $predictions = convertToTensor(predictions, 'predictions', 'logLoss');\n  var $weights = null;\n\n  if (weights != null) {\n    $weights = convertToTensor(weights, 'weights', 'logLoss');\n  }\n\n  assertShapesMatch($labels.shape, $predictions.shape, 'Error in logLoss: ');\n  var one = scalar(1);\n  var epsilonScalar = scalar(epsilon);\n  var l1 = neg(mul($labels, log(add($predictions, epsilonScalar))));\n  var l2 = mul(sub(one, $labels), log(add(sub(one, $predictions), epsilonScalar)));\n  var losses = sub(l1, l2);\n  return computeWeightedLoss(losses, $weights, reduction);\n}\n\nexport var logLoss = op({\n  logLoss_: logLoss_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { convertToTensor } from '../../tensor_util_env';\nimport { assertShapesMatch } from '../../util';\nimport { Reduction } from '../loss_ops_utils';\nimport { op } from '../operation';\nimport { squaredDifference } from '../squared_difference';\nimport { computeWeightedLoss } from './compute_weighted_loss';\n/**\n * Computes the mean squared error between two tensors.\n *\n * @param labels The ground truth output tensor, same dimensions as\n *    'predictions'.\n * @param predictions The predicted outputs.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions\n *    must be either `1`, or the same as the corresponding `losses`\n *    dimension).\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`\n *\n * @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'}\n */\n\nfunction meanSquaredError_(labels, predictions, weights) {\n  var reduction = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : Reduction.SUM_BY_NONZERO_WEIGHTS;\n  var $labels = convertToTensor(labels, 'labels', 'meanSquaredError');\n  var $predictions = convertToTensor(predictions, 'predictions', 'meanSquaredError');\n  var $weights = null;\n\n  if (weights != null) {\n    $weights = convertToTensor(weights, 'weights', 'meanSquaredError');\n  }\n\n  assertShapesMatch($labels.shape, $predictions.shape, 'Error in meanSquaredError: ');\n  var losses = squaredDifference($labels, $predictions);\n  return computeWeightedLoss(losses, $weights, reduction);\n}\n\nexport var meanSquaredError = op({\n  meanSquaredError_: meanSquaredError_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { convertToTensor } from '../../tensor_util_env';\nimport { assertShapesMatch } from '../../util';\nimport { abs } from '../abs';\nimport { add } from '../add';\nimport { exp } from '../exp';\nimport { log1p } from '../log1p';\nimport { Reduction } from '../loss_ops_utils';\nimport { mul } from '../mul';\nimport { neg } from '../neg';\nimport { op } from '../operation';\nimport { relu } from '../relu';\nimport { scalar } from '../scalar';\nimport { sub } from '../sub';\nimport { computeWeightedLoss } from './compute_weighted_loss';\n\nfunction sigmoidCrossEntropyWithLogits_(labels, logits) {\n  var $labels = convertToTensor(labels, 'labels', 'sigmoidCrossEntropyWithLogits');\n  var $logits = convertToTensor(logits, 'logits', 'sigmoidCrossEntropyWithLogits');\n  assertShapesMatch($labels.shape, $logits.shape, 'Error in sigmoidCrossEntropyWithLogits: ');\n  /**\n   * Implementation Details:\n   *\n   * For brevity, let `x = logits`, `z = labels`.  The logistic loss is\n   *     z * -log(sigmoid(x)) + (1 - z) * -log(1 - sigmoid(x))\n   *   = z * -log(1 / (1 + exp(-x))) + (1 - z) * -log(exp(-x) / (1 + exp(-x)))\n   *   = z * log(1 + exp(-x)) + (1 - z) * (-log(exp(-x)) + log(1 + exp(-x)))\n   *   = z * log(1 + exp(-x)) + (1 - z) * (x + log(1 + exp(-x))\n   *   = (1 - z) * x + log(1 + exp(-x))\n   *   = x - x * z + log(1 + exp(-x))\n   *\n   *   For x < 0, to avoid overflow in exp(-x), we reformulate the above\n   *     x - x * z + log(1 + exp(-x))\n   *   = log(exp(x)) - x * z + log(1 + exp(-x))\n   *   = - x * z + log(1 + exp(x))\n   *\n   * Hence, to ensure stability and avoid overflow, the implementation uses\n   * this equivalent formulation:\n   *     max(x, 0) - x * z + log(1 + exp(-abs(x)))\n   */\n\n  var maxOutput = relu($logits);\n  var outputXTarget = mul($logits, $labels);\n  var sigmoidOutput = log1p(exp(neg(abs($logits))));\n  return add(sub(maxOutput, outputXTarget), sigmoidOutput);\n}\n/**\n * Computes the sigmoid cross entropy loss between two tensors.\n *\n * If labelSmoothing is nonzero, smooth the labels towards 1/2:\n *\n *   newMulticlassLabels = multiclassLabels * (1 - labelSmoothing)\n *                         + 0.5 * labelSmoothing\n *\n * @param multiClassLabels The ground truth output tensor of shape\n * [batch_size, num_classes], same dimensions as 'predictions'.\n * @param logits The predicted outputs.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions\n *    must be either `1`, or the same as the corresponding `losses`\n *    dimension).\n * @param labelSmoothing If greater than 0, then smooth the labels.\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`\n *\n * @doc { heading: 'Training', subheading: 'Losses', namespace: 'losses' }\n */\n\n\nfunction sigmoidCrossEntropy_(multiClassLabels, logits, weights) {\n  var labelSmoothing = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  var reduction = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : Reduction.SUM_BY_NONZERO_WEIGHTS;\n  var $multiClassLabels = convertToTensor(multiClassLabels, 'multiClassLabels', 'sigmoidCrossEntropy');\n  var $logits = convertToTensor(logits, 'logits', 'sigmoidCrossEntropy');\n  var $weights = null;\n\n  if (weights != null) {\n    $weights = convertToTensor(weights, 'weights', 'sigmoidCrossEntropy');\n  }\n\n  assertShapesMatch($multiClassLabels.shape, $logits.shape, 'Error in sigmoidCrossEntropy: ');\n\n  if (labelSmoothing > 0) {\n    var labelSmoothingScalar = scalar(labelSmoothing);\n    var one = scalar(1);\n    var half = scalar(0.5);\n    $multiClassLabels = add(mul($multiClassLabels, sub(one, labelSmoothingScalar)), mul(half, labelSmoothingScalar));\n  }\n\n  var losses = sigmoidCrossEntropyWithLogits_($multiClassLabels, $logits);\n  return computeWeightedLoss(losses, $weights, reduction);\n}\n\nexport var sigmoidCrossEntropy = op({\n  sigmoidCrossEntropy_: sigmoidCrossEntropy_\n});","import _slicedToArray from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { customGrad } from '../../gradients';\nimport { convertToTensor } from '../../tensor_util_env';\nimport { assertShapesMatch } from '../../util';\nimport { add } from '../add';\nimport { expandShapeToKeepDim } from '../axis_util';\nimport { cast } from '../cast';\nimport { div } from '../div';\nimport { exp } from '../exp';\nimport { logSumExp } from '../log_sum_exp';\nimport { Reduction } from '../loss_ops_utils';\nimport { mul } from '../mul';\nimport { neg } from '../neg';\nimport { op } from '../operation';\nimport { reshape } from '../reshape';\nimport { scalar } from '../scalar';\nimport { sub } from '../sub';\nimport { sum } from '../sum';\nimport { computeWeightedLoss } from './compute_weighted_loss';\n/**\n * Computes softmax cross entropy between logits and labels.\n *\n * Measures the probability error in discrete classification tasks in which\n * the classes are mutually exclusive (each entry is in exactly one class).\n * For example, each CIFAR-10 image is labeled with one and only one label: an\n * image can be a dog or a truck, but not both.\n *\n * `NOTE`: While the classes are mutually exclusive, their probabilities need\n * not be. All that is required is that each row of labels is a valid\n * probability distribution. If they are not, the computation of the gradient\n * will be incorrect.\n *\n * `WARNING`: This op expects unscaled logits, since it performs a softmax on\n * logits internally for efficiency. Do not call this op with the output of\n * softmax, as it will produce incorrect results.\n *\n * logits and labels must have the same shape, e.g. [batch_size, num_classes]\n * and the same dtype.\n * @param labels The labels array.\n * @param logits The logits array.\n * @param dim The dimension softmax would be performed on. Defaults to `-1`\n *     which indicates the last dimension.\n */\n\nfunction softmaxCrossEntropyWithLogits_(labels, logits) {\n  var dim = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;\n\n  if (dim === -1) {\n    dim = logits.rank - 1;\n  }\n\n  if (dim !== logits.rank - 1) {\n    throw Error(\"Softmax cross entropy along a non-last dimension is not yet \" + \"supported. Labels / logits was rank \".concat(logits.rank, \" \") + \"and dim was \".concat(dim));\n  } // Use a custom gradient for numerical stability.\n\n\n  var customOp = customGrad(function (labels, logits, save) {\n    // Reference:\n    //   1. http://cs231n.github.io/linear-classify/#softmax\n    //   2. https://blog.feedly.com/tricks-of-the-trade-logsumexp/\n    var keepDims = true;\n    var lse = logSumExp(logits, [dim], keepDims);\n    var logResult = sub(cast(logits, 'float32'), lse);\n    save([labels, logResult]);\n    var costVector = neg(mul(logResult, labels));\n    var value = sum(costVector, [dim]);\n\n    var gradFunc = function gradFunc(dy, saved) {\n      var _saved = _slicedToArray(saved, 2),\n          labels = _saved[0],\n          logResult = _saved[1];\n\n      var dyShape = expandShapeToKeepDim(dy.shape, [dim]);\n      return [mul(reshape(dy, dyShape), sub(cast(labels, 'float32'), exp(logResult))), mul(reshape(dy, dyShape), sub(exp(logResult), cast(labels, 'float32')))];\n    };\n\n    return {\n      value: value,\n      gradFunc: gradFunc\n    };\n  });\n  return customOp(labels, logits);\n}\n/**\n * Computes the softmax cross entropy loss between two tensors.\n *\n * If labelSmoothing is nonzero, smooth the labels towards 1/2:\n *\n *   newOnehotLabels = onehotLabels * (1 - labelSmoothing)\n *                         + labelSmoothing / numClasses\n *\n * @param onehotLabels One hot encoded labels\n *    [batch_size, num_classes], same dimensions as 'predictions'.\n * @param logits The predicted outputs.\n * @param weights Tensor whose rank is either 0, or 1, and must be\n *    broadcastable to `loss`  of shape [batch_size]\n * @param labelSmoothing If greater than 0, then smooth the labels.\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`\n *\n * @doc { heading: 'Training', subheading: 'Losses', namespace: 'losses' }\n */\n\n\nfunction softmaxCrossEntropy_(onehotLabels, logits, weights) {\n  var labelSmoothing = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  var reduction = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : Reduction.SUM_BY_NONZERO_WEIGHTS;\n  var $onehotLabels = convertToTensor(onehotLabels, 'onehotLabels', 'softmaxCrossEntropy');\n  var $logits = convertToTensor(logits, 'logits', 'softmaxCrossEntropy');\n  var $weights = null;\n\n  if (weights != null) {\n    $weights = convertToTensor(weights, 'weights', 'softmaxCrossEntropy');\n  }\n\n  assertShapesMatch($onehotLabels.shape, $logits.shape, 'Error in softmaxCrossEntropy: ');\n\n  if (labelSmoothing > 0) {\n    var labelSmoothingScalar = scalar(labelSmoothing);\n    var one = scalar(1);\n    var numClasses = scalar($onehotLabels.shape[1]);\n    $onehotLabels = add(mul($onehotLabels, sub(one, labelSmoothingScalar)), div(labelSmoothingScalar, numClasses));\n  }\n\n  var losses = softmaxCrossEntropyWithLogits_($onehotLabels, $logits);\n  return computeWeightedLoss(losses, $weights, reduction);\n}\n\nexport var softmaxCrossEntropy = op({\n  softmaxCrossEntropy_: softmaxCrossEntropy_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// Modularized ops.\nexport { abs } from './abs';\nexport { acos } from './acos';\nexport { acosh } from './acosh';\nexport { add } from './add';\nexport { addN } from './add_n';\nexport { all } from './all';\nexport { any } from './any';\nexport { argMax } from './arg_max';\nexport { argMin } from './arg_min';\nexport { asin } from './asin';\nexport { asinh } from './asinh';\nexport { atan } from './atan';\nexport { atan2 } from './atan2';\nexport { atanh } from './atanh';\nexport { avgPool } from './avg_pool';\nexport { avgPool3d } from './avg_pool_3d';\nexport { basicLSTMCell } from './basic_lstm_cell';\nexport { batchToSpaceND } from './batch_to_space_nd';\nexport { batchNorm } from './batchnorm';\nexport { batchNorm2d } from './batchnorm2d';\nexport { batchNorm3d } from './batchnorm3d';\nexport { batchNorm4d } from './batchnorm4d';\nexport { bincount } from './bincount';\nexport { broadcastTo } from './broadcast_to';\nexport { buffer } from './buffer';\nexport { cast } from './cast';\nexport { ceil } from './ceil';\nexport { clipByValue } from './clip_by_value';\nexport { clone } from './clone';\nexport { complex } from './complex';\nexport { concat } from './concat';\nexport { concat1d } from './concat_1d';\nexport { concat2d } from './concat_2d';\nexport { concat3d } from './concat_3d';\nexport { concat4d } from './concat_4d';\nexport { conv1d } from './conv1d';\nexport { conv2d } from './conv2d';\nexport { conv2dTranspose } from './conv2d_transpose';\nexport { conv3d } from './conv3d';\nexport { conv3dTranspose } from './conv3d_transpose';\nexport { cos } from './cos';\nexport { cosh } from './cosh';\nexport { cumsum } from './cumsum';\nexport { denseBincount } from './dense_bincount';\nexport { depthToSpace } from './depth_to_space';\nexport { depthwiseConv2d } from './depthwise_conv2d';\nexport { diag } from './diag';\nexport { dilation2d } from './dilation2d';\nexport { div } from './div';\nexport { divNoNan } from './div_no_nan';\nexport { dot } from './dot';\nexport { einsum } from './einsum';\nexport { elu } from './elu';\nexport { equal } from './equal';\nexport { erf } from './erf';\nexport { exp } from './exp';\nexport { expandDims } from './expand_dims';\nexport { expm1 } from './expm1';\nexport { eye } from './eye';\nexport { fill } from './fill';\nexport { floor } from './floor';\nexport { floorDiv } from './floorDiv';\nexport { gather } from './gather';\nexport { greater } from './greater';\nexport { greaterEqual } from './greater_equal';\nexport { imag } from './imag';\nexport { isFinite } from './is_finite';\nexport { isInf } from './is_inf';\nexport { isNaN } from './is_nan';\nexport { leakyRelu } from './leaky_relu';\nexport { less } from './less';\nexport { lessEqual } from './less_equal';\nexport { linspace } from './linspace';\nexport { localResponseNormalization } from './local_response_normalization';\nexport { log } from './log';\nexport { log1p } from './log1p';\nexport { logSigmoid } from './log_sigmoid';\nexport { logSoftmax } from './log_softmax';\nexport { logSumExp } from './log_sum_exp';\nexport { logicalAnd } from './logical_and';\nexport { logicalNot } from './logical_not';\nexport { logicalOr } from './logical_or';\nexport { logicalXor } from './logical_xor';\nexport { matMul } from './mat_mul';\nexport { max } from './max';\nexport { maxPool } from './max_pool';\nexport { maxPool3d } from './max_pool_3d';\nexport { maxPoolWithArgmax } from './max_pool_with_argmax';\nexport { maximum } from './maximum';\nexport { mean } from './mean';\nexport { meshgrid } from './meshgrid';\nexport { min } from './min';\nexport { minimum } from './minimum';\nexport { mirrorPad } from './mirror_pad';\nexport { mod } from './mod';\nexport { moments } from './moments';\nexport { mul } from './mul';\nexport { multiRNNCell } from './multi_rnn_cell';\nexport { multinomial } from './multinomial';\nexport { neg } from './neg';\nexport { notEqual } from './not_equal';\nexport { oneHot } from './one_hot';\nexport { ones } from './ones';\nexport { onesLike } from './ones_like';\nexport { outerProduct } from './outer_product';\nexport { pad } from './pad';\nexport { pad1d } from './pad1d';\nexport { pad2d } from './pad2d';\nexport { pad3d } from './pad3d';\nexport { pad4d } from './pad4d';\nexport { pool } from './pool';\nexport { pow } from './pow';\nexport { prelu } from './prelu';\nexport { print } from './print';\nexport { prod } from './prod';\nexport { rand } from './rand';\nexport { randomGamma } from './random_gamma';\nexport { randomNormal } from './random_normal';\nexport { randomUniform } from './random_uniform';\nexport { range } from './range';\nexport { real } from './real';\nexport { reciprocal } from './reciprocal';\nexport { relu } from './relu';\nexport { relu6 } from './relu6';\nexport { reshape } from './reshape';\nexport { reverse } from './reverse';\nexport { reverse1d } from './reverse_1d';\nexport { reverse2d } from './reverse_2d';\nexport { reverse3d } from './reverse_3d';\nexport { reverse4d } from './reverse_4d';\nexport { round } from './round';\nexport { rsqrt } from './rsqrt';\nexport { scalar } from './scalar';\nexport { selu } from './selu';\nexport { separableConv2d } from './separable_conv2d';\nexport { setdiff1dAsync } from './setdiff1d_async';\nexport { sigmoid } from './sigmoid';\nexport { sign } from './sign';\nexport { sin } from './sin';\nexport { sinh } from './sinh';\nexport { slice } from './slice';\nexport { slice1d } from './slice1d';\nexport { slice2d } from './slice2d';\nexport { slice3d } from './slice3d';\nexport { slice4d } from './slice4d';\nexport { softmax } from './softmax';\nexport { softplus } from './softplus';\nexport { spaceToBatchND } from './space_to_batch_nd';\nexport { fft } from './spectral/fft';\nexport { ifft } from './spectral/ifft';\nexport { irfft } from './spectral/irfft';\nexport { rfft } from './spectral/rfft';\nexport { split } from './split';\nexport { sqrt } from './sqrt';\nexport { square } from './square';\nexport { squaredDifference } from './squared_difference';\nexport { squeeze } from './squeeze';\nexport { stack } from './stack';\nexport { step } from './step';\nexport { stridedSlice } from './strided_slice';\nexport { sub } from './sub';\nexport { sum } from './sum';\nexport { tan } from './tan';\nexport { tanh } from './tanh';\nexport { tensor } from './tensor';\nexport { tensor1d } from './tensor1d';\nexport { tensor2d } from './tensor2d';\nexport { tensor3d } from './tensor3d';\nexport { tensor4d } from './tensor4d';\nexport { tensor5d } from './tensor5d';\nexport { tensor6d } from './tensor6d';\nexport { tile } from './tile';\nexport { topk } from './topk';\nexport { truncatedNormal } from './truncated_normal';\nexport { unique } from './unique';\nexport { unsortedSegmentSum } from './unsorted_segment_sum';\nexport { unstack } from './unstack';\nexport { variable } from './variable';\nexport { where } from './where';\nexport { whereAsync } from './where_async';\nexport { zeros } from './zeros';\nexport { zerosLike } from './zeros_like';\nexport * from './boolean_mask';\nexport * from './transpose';\nexport * from './norm';\nexport * from './moving_average';\nexport * from './scatter_nd';\nexport * from './sparse_to_dense';\nexport * from './gather_nd';\nexport * from './dropout';\nexport * from './signal_ops_util';\nexport * from './in_top_k';\nexport { op, OP_SCOPE_SUFFIX } from './operation';\nimport { rfft } from './spectral/rfft';\nimport { fft } from './spectral/fft';\nimport { ifft } from './spectral/ifft';\nimport { irfft } from './spectral/irfft';\nvar spectral = {\n  fft: fft,\n  ifft: ifft,\n  rfft: rfft,\n  irfft: irfft\n};\nimport * as fused from './fused_ops';\nimport { hammingWindow } from './signal/hamming_window';\nimport { hannWindow } from './signal/hann_window';\nimport { frame } from './signal/frame';\nimport { stft } from './signal/stft';\nvar signal = {\n  hammingWindow: hammingWindow,\n  hannWindow: hannWindow,\n  frame: frame,\n  stft: stft\n}; // Image Ops namespace\n\nimport { cropAndResize } from './image/crop_and_resize';\nimport { flipLeftRight } from './image/flip_left_right';\nimport { rotateWithOffset } from './image/rotate_with_offset';\nimport { nonMaxSuppression } from './image/non_max_suppression';\nimport { nonMaxSuppressionAsync } from './image/non_max_suppression_async';\nimport { nonMaxSuppressionWithScore } from './image/non_max_suppression_with_score';\nimport { nonMaxSuppressionWithScoreAsync } from './image/non_max_suppression_with_score_async';\nimport { nonMaxSuppressionPadded } from './image/non_max_suppression_padded';\nimport { nonMaxSuppressionPaddedAsync } from './image/non_max_suppression_padded_async';\nimport { resizeBilinear } from './image/resize_bilinear';\nimport { resizeNearestNeighbor } from './image/resize_nearest_neighbor';\nimport { transform } from './image/transform';\nvar image = {\n  flipLeftRight: flipLeftRight,\n  resizeNearestNeighbor: resizeNearestNeighbor,\n  resizeBilinear: resizeBilinear,\n  rotateWithOffset: rotateWithOffset,\n  cropAndResize: cropAndResize,\n  nonMaxSuppression: nonMaxSuppression,\n  nonMaxSuppressionAsync: nonMaxSuppressionAsync,\n  nonMaxSuppressionWithScore: nonMaxSuppressionWithScore,\n  nonMaxSuppressionWithScoreAsync: nonMaxSuppressionWithScoreAsync,\n  nonMaxSuppressionPadded: nonMaxSuppressionPadded,\n  nonMaxSuppressionPaddedAsync: nonMaxSuppressionPaddedAsync,\n  transform: transform\n}; // linalg namespace\n\nimport { bandPart } from './linalg/band_part';\nimport { gramSchmidt } from './linalg/gram_schmidt';\nimport { qr } from './linalg/qr';\nvar linalg = {\n  bandPart: bandPart,\n  gramSchmidt: gramSchmidt,\n  qr: qr\n}; // losses namespace;\n\nimport { absoluteDifference } from './losses/absolute_difference';\nimport { computeWeightedLoss } from './losses/compute_weighted_loss';\nimport { cosineDistance } from './losses/cosine_distance';\nimport { hingeLoss } from './losses/hinge_loss';\nimport { huberLoss } from './losses/huber_loss';\nimport { logLoss } from './losses/log_loss';\nimport { meanSquaredError } from './losses/mean_squared_error';\nimport { sigmoidCrossEntropy } from './losses/sigmoid_cross_entropy';\nimport { softmaxCrossEntropy } from './losses/softmax_cross_entropy';\nvar losses = {\n  absoluteDifference: absoluteDifference,\n  computeWeightedLoss: computeWeightedLoss,\n  cosineDistance: cosineDistance,\n  hingeLoss: hingeLoss,\n  huberLoss: huberLoss,\n  logLoss: logLoss,\n  meanSquaredError: meanSquaredError,\n  sigmoidCrossEntropy: sigmoidCrossEntropy,\n  softmaxCrossEntropy: softmaxCrossEntropy\n}; // Second level exports.\n\nexport { image, linalg, losses, spectral, fused, signal };","import _classCallCheck from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { AdadeltaOptimizer } from './adadelta_optimizer';\nimport { AdagradOptimizer } from './adagrad_optimizer';\nimport { AdamOptimizer } from './adam_optimizer';\nimport { AdamaxOptimizer } from './adamax_optimizer';\nimport { MomentumOptimizer } from './momentum_optimizer';\nimport { RMSPropOptimizer } from './rmsprop_optimizer';\nimport { SGDOptimizer } from './sgd_optimizer';\nexport var OptimizerConstructors = /*#__PURE__*/function () {\n  function OptimizerConstructors() {\n    _classCallCheck(this, OptimizerConstructors);\n  }\n\n  _createClass(OptimizerConstructors, null, [{\n    key: \"sgd\",\n    value:\n    /**\n     * Constructs a `tf.SGDOptimizer` that uses stochastic gradient descent.\n     *\n     * ```js\n     * // Fit a quadratic function by learning the coefficients a, b, c.\n     * const xs = tf.tensor1d([0, 1, 2, 3]);\n     * const ys = tf.tensor1d([1.1, 5.9, 16.8, 33.9]);\n     *\n     * const a = tf.scalar(Math.random()).variable();\n     * const b = tf.scalar(Math.random()).variable();\n     * const c = tf.scalar(Math.random()).variable();\n     *\n     * // y = a * x^2 + b * x + c.\n     * const f = x => a.mul(x.square()).add(b.mul(x)).add(c);\n     * const loss = (pred, label) => pred.sub(label).square().mean();\n     *\n     * const learningRate = 0.01;\n     * const optimizer = tf.train.sgd(learningRate);\n     *\n     * // Train the model.\n     * for (let i = 0; i < 10; i++) {\n     *   optimizer.minimize(() => loss(f(xs), ys));\n     * }\n     *\n     * // Make predictions.\n     * console.log(\n     *     `a: ${a.dataSync()}, b: ${b.dataSync()}, c: ${c.dataSync()}`);\n     * const preds = f(xs).dataSync();\n     * preds.forEach((pred, i) => {\n     *   console.log(`x: ${i}, pred: ${pred}`);\n     * });\n     * ```\n     *\n     * @param learningRate The learning rate to use for the SGD algorithm.\n     *\n     * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}\n     */\n    function sgd(learningRate) {\n      return new SGDOptimizer(learningRate);\n    }\n    /**\n     * Constructs a `tf.MomentumOptimizer` that uses momentum gradient\n     * descent.\n     *\n     * See\n     * [http://proceedings.mlr.press/v28/sutskever13.pdf](\n     * http://proceedings.mlr.press/v28/sutskever13.pdf)\n     *\n     * @param learningRate The learning rate to use for the Momentum gradient\n     * descent algorithm.\n     * @param momentum The momentum to use for the momentum gradient descent\n     * algorithm.\n     *\n     * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}\n     */\n\n  }, {\n    key: \"momentum\",\n    value: function momentum(learningRate, _momentum) {\n      var useNesterov = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      return new MomentumOptimizer(learningRate, _momentum, useNesterov);\n    }\n    /**\n     * Constructs a `tf.RMSPropOptimizer` that uses RMSProp gradient\n     * descent. This implementation uses plain momentum and is not centered\n     * version of RMSProp.\n     *\n     * See\n     * [http://www.cs.toronto.edu/~tijmen/csc321/slides/lecture_slides_lec6.pdf](\n     * http://www.cs.toronto.edu/~tijmen/csc321/slides/lecture_slides_lec6.pdf)\n     *\n     * @param learningRate The learning rate to use for the RMSProp gradient\n     * descent algorithm.\n     * @param decay The discounting factor for the history/coming gradient.\n     * @param momentum The momentum to use for the RMSProp gradient descent\n     * algorithm.\n     * @param epsilon Small value to avoid zero denominator.\n     * @param centered If true, gradients are normalized by the estimated\n     * variance of the gradient.\n     *\n     * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}\n     */\n\n  }, {\n    key: \"rmsprop\",\n    value: function rmsprop(learningRate) {\n      var decay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : .9;\n      var momentum = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0.0;\n      var epsilon = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n      var centered = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n      return new RMSPropOptimizer(learningRate, decay, momentum, epsilon, centered);\n    }\n    /**\n     * Constructs a `tf.AdamOptimizer` that uses the Adam algorithm.\n     * See [https://arxiv.org/abs/1412.6980](https://arxiv.org/abs/1412.6980)\n     *\n     * @param learningRate The learning rate to use for the Adam gradient\n     * descent algorithm.\n     * @param beta1 The exponential decay rate for the 1st moment estimates.\n     * @param beta2 The exponential decay rate for the 2nd moment estimates.\n     * @param epsilon A small constant for numerical stability.\n     *\n     * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}\n     */\n\n  }, {\n    key: \"adam\",\n    value: function adam() {\n      var learningRate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0.001;\n      var beta1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.9;\n      var beta2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0.999;\n      var epsilon = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n      return new AdamOptimizer(learningRate, beta1, beta2, epsilon);\n    }\n    /**\n     * Constructs a `tf.AdadeltaOptimizer` that uses the Adadelta algorithm.\n     * See [https://arxiv.org/abs/1212.5701](https://arxiv.org/abs/1212.5701)\n     *\n     * @param learningRate The learning rate to use for the Adadelta gradient\n     * descent algorithm.\n     * @param rho The learning rate decay over each update.\n     * @param epsilon A constant epsilon used to better condition the grad\n     * update.\n     *\n     * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}\n     */\n\n  }, {\n    key: \"adadelta\",\n    value: function adadelta() {\n      var learningRate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : .001;\n      var rho = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : .95;\n      var epsilon = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      return new AdadeltaOptimizer(learningRate, rho, epsilon);\n    }\n    /**\n     * Constructs a `tf.AdamaxOptimizer` that uses the Adamax algorithm.\n     * See [https://arxiv.org/abs/1412.6980](https://arxiv.org/abs/1412.6980)\n     *\n     * @param learningRate The learning rate to use for the Adamax gradient\n     * descent algorithm.\n     * @param beta1 The exponential decay rate for the 1st moment estimates.\n     * @param beta2 The exponential decay rate for the 2nd moment estimates.\n     * @param epsilon A small constant for numerical stability.\n     * @param decay The learning rate decay over each update.\n     *\n     * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}\n     */\n\n  }, {\n    key: \"adamax\",\n    value: function adamax() {\n      var learningRate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0.002;\n      var beta1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.9;\n      var beta2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0.999;\n      var epsilon = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n      var decay = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0.0;\n      return new AdamaxOptimizer(learningRate, beta1, beta2, epsilon, decay);\n    }\n    /**\n     * Constructs a `tf.AdagradOptimizer` that uses the Adagrad algorithm.\n     * See\n     * [http://www.jmlr.org/papers/volume12/duchi11a/duchi11a.pdf](\n     * http://www.jmlr.org/papers/volume12/duchi11a/duchi11a.pdf)\n     * or\n     * [http://ruder.io/optimizing-gradient-descent/index.html#adagrad](\n     * http://ruder.io/optimizing-gradient-descent/index.html#adagrad)\n     *\n     * @param learningRate The learning rate to use for the Adagrad gradient\n     * descent algorithm.\n     * @param initialAccumulatorValue Starting value for the accumulators, must be\n     * positive.\n     *\n     * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}\n     */\n\n  }, {\n    key: \"adagrad\",\n    value: function adagrad(learningRate) {\n      var initialAccumulatorValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.1;\n      return new AdagradOptimizer(learningRate, initialAccumulatorValue);\n    }\n  }]);\n\n  return OptimizerConstructors;\n}();","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// So typings can propagate.\nimport { AdadeltaOptimizer } from './optimizers/adadelta_optimizer';\nimport { AdagradOptimizer } from './optimizers/adagrad_optimizer';\nimport { AdamOptimizer } from './optimizers/adam_optimizer';\nimport { AdamaxOptimizer } from './optimizers/adamax_optimizer';\nimport { MomentumOptimizer } from './optimizers/momentum_optimizer';\nimport { OptimizerConstructors } from './optimizers/optimizer_constructors';\nimport { RMSPropOptimizer } from './optimizers/rmsprop_optimizer';\nimport { SGDOptimizer } from './optimizers/sgd_optimizer'; // tslint:disable-next-line:no-unused-expression\n\n[MomentumOptimizer, SGDOptimizer, AdadeltaOptimizer, AdagradOptimizer, RMSPropOptimizer, AdamaxOptimizer, AdamOptimizer];\nexport var train = {\n  sgd: OptimizerConstructors.sgd,\n  momentum: OptimizerConstructors.momentum,\n  adadelta: OptimizerConstructors.adadelta,\n  adagrad: OptimizerConstructors.adagrad,\n  rmsprop: OptimizerConstructors.rmsprop,\n  adamax: OptimizerConstructors.adamax,\n  adam: OptimizerConstructors.adam\n};","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar delayCallback = function () {\n  if (typeof requestAnimationFrame !== 'undefined') {\n    return requestAnimationFrame;\n  } else if (typeof setImmediate !== 'undefined') {\n    return setImmediate;\n  }\n\n  return function (f) {\n    return f();\n  }; // no delays\n}();\n/**\n * Returns a promise that resolve when a requestAnimationFrame has completed.\n *\n * On Node.js this uses setImmediate instead of requestAnimationFrame.\n *\n * This is simply a sugar method so that users can do the following:\n * `await tf.nextFrame();`\n *\n * @doc {heading: 'Performance', subheading: 'Timing'}\n */\n\n\nfunction nextFrame() {\n  return new Promise(function (resolve) {\n    return delayCallback(function () {\n      return resolve();\n    });\n  });\n}\n\nexport { nextFrame };","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport * as util from '../util';\nexport function assertParamsConsistent(shapes, axis) {\n  var rank = shapes[0].length;\n  shapes.forEach(function (shape, i) {\n    util.assert(shape.length === rank, function () {\n      return \"Error in concat\".concat(rank, \"D: rank of tensors[\").concat(i, \"] must be the same \") + \"as the rank of the rest (\".concat(rank, \")\");\n    });\n  });\n  util.assert(axis >= 0 && axis < rank, function () {\n    return \"Error in concat\".concat(rank, \"D: axis must be between 0 and \").concat(rank - 1, \".\");\n  });\n  var firstShape = shapes[0];\n  shapes.forEach(function (shape, i) {\n    for (var r = 0; r < rank; r++) {\n      util.assert(r === axis || shape[r] === firstShape[r], function () {\n        return \"Error in concat\".concat(rank, \"D: Shape of tensors[\").concat(i, \"] (\").concat(shape, \") \") + \"does not match the shape of the rest (\".concat(firstShape, \") \") + \"along the non-concatenated axis \".concat(i, \".\");\n      });\n    }\n  });\n}\nexport function computeOutShape(shapes, axis) {\n  var outputShape = shapes[0].slice();\n\n  for (var i = 1; i < shapes.length; i++) {\n    outputShape[axis] += shapes[i][axis];\n  }\n\n  return outputShape;\n}","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * Inputs of size above this threshold will be parallelized by calling multiple\n * shader programs.\n */\nimport { nearestDivisor } from '../util';\nexport var PARALLELIZE_THRESHOLD = 30;\nexport function computeOptimalWindowSize(inSize) {\n  if (inSize <= PARALLELIZE_THRESHOLD) {\n    return inSize;\n  }\n\n  return nearestDivisor(inSize, Math.floor(Math.sqrt(inSize)));\n}","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// Returns the image center in pixels.\nexport function getImageCenter(center, imageHeight, imageWidth) {\n  var centerX = imageWidth * (typeof center === 'number' ? center : center[0]);\n  var centerY = imageHeight * (typeof center === 'number' ? center : center[1]);\n  return [centerX, centerY];\n}","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * Gets the new shape of the input Tensor after it's been reshaped\n * to:\n * [blockShape[0], ..., blockShape[M-1], batch / prod(blockShape),\n * inputShape[1], ..., inputShape[N-1]]\n *\n * See step 1: https://www.tensorflow.org/api_docs/python/tf/batch_to_space_nd\n */\nexport function getReshaped(inputShape, blockShape, prod) {\n  var batchToSpace = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  var reshaped = [];\n\n  if (batchToSpace) {\n    reshaped = reshaped.concat(blockShape.slice(0));\n    reshaped.push(inputShape[0] / prod);\n    reshaped = reshaped.concat(inputShape.slice(1));\n  } else {\n    reshaped = reshaped.concat(inputShape[0]);\n    var spatialLength = blockShape.length;\n\n    for (var i = 0; i < spatialLength; ++i) {\n      reshaped = reshaped.concat([inputShape[i + 1] / blockShape[i], blockShape[i]]);\n    }\n\n    reshaped = reshaped.concat(inputShape.slice(spatialLength + 1));\n  }\n\n  return reshaped;\n}\n/**\n * Gets the permutation that will transpose the dimensions of the\n * reshaped tensor to shape:\n *\n * [batch / prod(block_shape),inputShape[1], blockShape[0], ...,\n * inputShape[M], blockShape[M-1],inputShape[M+1], ..., inputShape[N-1]]\n *\n * see step 2: https://www.tensorflow.org/api_docs/python/tf/batch_to_space_nd\n */\n\nexport function getPermuted(reshapedRank, blockShapeRank) {\n  var batchToSpace = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  var permuted = [];\n\n  if (batchToSpace) {\n    permuted.push(blockShapeRank);\n\n    for (var i = blockShapeRank + 1; i < reshapedRank; ++i) {\n      if (i <= 2 * blockShapeRank) {\n        permuted.push(i);\n        permuted.push(i - (blockShapeRank + 1));\n      } else {\n        permuted.push(i);\n      }\n    }\n  } else {\n    var permutedBeforeBatch = [];\n    var permutedAfterBatch = [];\n\n    for (var _i = 1; _i < reshapedRank; ++_i) {\n      if (_i >= blockShapeRank * 2 + 1 || _i % 2 === 1) {\n        permutedAfterBatch.push(_i);\n      } else {\n        permutedBeforeBatch.push(_i);\n      }\n    }\n\n    permuted.push.apply(permuted, permutedBeforeBatch);\n    permuted.push(0);\n    permuted.push.apply(permuted, permutedAfterBatch);\n  }\n\n  return permuted;\n}\n/**\n * Gets the shape of the reshaped and permuted input Tensor before any cropping\n * is applied.  The new shape will be:\n *\n * [batch / prod(blockShape),inputShape[1] * blockShape[0], ...,\n * inputShape[M] * blockShape[M-1],inputShape[M+1], ..., inputShape[N-1]]\n *\n * See step 3: https://www.tensorflow.org/api_docs/python/tf/batch_to_space_nd\n */\n\nexport function getReshapedPermuted(inputShape, blockShape, prod) {\n  var batchToSpace = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  var reshapedPermuted = [];\n\n  if (batchToSpace) {\n    reshapedPermuted.push(inputShape[0] / prod);\n  } else {\n    reshapedPermuted.push(inputShape[0] * prod);\n  }\n\n  for (var i = 1; i < inputShape.length; ++i) {\n    if (i <= blockShape.length) {\n      if (batchToSpace) {\n        reshapedPermuted.push(blockShape[i - 1] * inputShape[i]);\n      } else {\n        reshapedPermuted.push(inputShape[i] / blockShape[i - 1]);\n      }\n    } else {\n      reshapedPermuted.push(inputShape[i]);\n    }\n  }\n\n  return reshapedPermuted;\n}\n/**\n * Converts the crops argument into the beginning coordinates of a slice\n * operation.\n */\n\nexport function getSliceBeginCoords(crops, blockShape) {\n  var sliceBeginCoords = [0];\n\n  for (var i = 0; i < blockShape; ++i) {\n    sliceBeginCoords.push(crops[i][0]);\n  }\n\n  return sliceBeginCoords;\n}\n/**\n * Converts the crops argument into the size of a slice operation.  When\n * combined with getSliceBeginCoords this function allows the reshaped and\n * permuted Tensor to be cropped to its final output shape of:\n *\n * inputShape[1] * blockShape[0] - crops[0,0] - crops[0,1], ...,\n * inputShape[M] * blockShape[M-1] -crops[M-1,0] -\n * crops[M-1,1],inputShape[M+1], ..., inputShape[N-1]]\n *\n * See step 4: https://www.tensorflow.org/api_docs/python/tf/batch_to_space_nd\n */\n\nexport function getSliceSize(uncroppedShape, crops, blockShape) {\n  var sliceSize = uncroppedShape.slice(0, 1);\n\n  for (var i = 0; i < blockShape; ++i) {\n    sliceSize.push(uncroppedShape[i + 1] - crops[i][0] - crops[i][1]);\n  }\n\n  return sliceSize;\n}","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var ERF_P = 0.3275911;\nexport var ERF_A1 = 0.254829592;\nexport var ERF_A2 = -0.284496736;\nexport var ERF_A3 = 1.421413741;\nexport var ERF_A4 = -1.453152027;\nexport var ERF_A5 = 1.061405429;","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env } from './environment';\nexport function warn() {\n  if (!env().getBool('IS_TEST')) {\n    var _console;\n\n    (_console = console).warn.apply(_console, arguments);\n  }\n}\nexport function log() {\n  if (!env().getBool('IS_TEST')) {\n    var _console2;\n\n    (_console2 = console).log.apply(_console2, arguments);\n  }\n}","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * Merges real and imaginary Float32Arrays into a single complex Float32Array.\n *\n * The memory layout is interleaved as follows:\n * real: [r0, r1, r2]\n * imag: [i0, i1, i2]\n * complex: [r0, i0, r1, i1, r2, i2]\n *\n * This is the inverse of splitRealAndImagArrays.\n *\n * @param real The real values of the complex tensor values.\n * @param imag The imag values of the complex tensor values.\n * @returns A complex tensor as a Float32Array with merged values.\n */\nexport function mergeRealAndImagArrays(real, imag) {\n  if (real.length !== imag.length) {\n    throw new Error(\"Cannot merge real and imag arrays of different lengths. real:\" + \"\".concat(real.length, \", imag: \").concat(imag.length, \".\"));\n  }\n\n  var result = new Float32Array(real.length * 2);\n\n  for (var i = 0; i < result.length; i += 2) {\n    result[i] = real[i / 2];\n    result[i + 1] = imag[i / 2];\n  }\n\n  return result;\n}\n/**\n * Splits a complex Float32Array into real and imag parts.\n *\n * The memory layout is interleaved as follows:\n * complex: [r0, i0, r1, i1, r2, i2]\n * real: [r0, r1, r2]\n * imag: [i0, i1, i2]\n *\n * This is the inverse of mergeRealAndImagArrays.\n *\n * @param complex The complex tensor values.\n * @returns An object with real and imag Float32Array components of the complex\n *     tensor.\n */\n\nexport function splitRealAndImagArrays(complex) {\n  var real = new Float32Array(complex.length / 2);\n  var imag = new Float32Array(complex.length / 2);\n\n  for (var i = 0; i < complex.length; i += 2) {\n    real[i / 2] = complex[i];\n    imag[i / 2] = complex[i + 1];\n  }\n\n  return {\n    real: real,\n    imag: imag\n  };\n}\n/**\n * Extracts even indexed complex values in the given array.\n * @param complex The complex tensor values\n */\n\nexport function complexWithEvenIndex(complex) {\n  var len = Math.ceil(complex.length / 4);\n  var real = new Float32Array(len);\n  var imag = new Float32Array(len);\n\n  for (var i = 0; i < complex.length; i += 4) {\n    real[Math.floor(i / 4)] = complex[i];\n    imag[Math.floor(i / 4)] = complex[i + 1];\n  }\n\n  return {\n    real: real,\n    imag: imag\n  };\n}\n/**\n * Extracts odd indexed comple values in the given array.\n * @param complex The complex tensor values\n */\n\nexport function complexWithOddIndex(complex) {\n  var len = Math.floor(complex.length / 4);\n  var real = new Float32Array(len);\n  var imag = new Float32Array(len);\n\n  for (var i = 2; i < complex.length; i += 4) {\n    real[Math.floor(i / 4)] = complex[i];\n    imag[Math.floor(i / 4)] = complex[i + 1];\n  }\n\n  return {\n    real: real,\n    imag: imag\n  };\n}\n/**\n * Get the map representing a complex value in the given array.\n * @param complex The complex tensor values.\n * @param index An index of the target complex value.\n */\n\nexport function getComplexWithIndex(complex, index) {\n  var real = complex[index * 2];\n  var imag = complex[index * 2 + 1];\n  return {\n    real: real,\n    imag: imag\n  };\n}\n/**\n * Insert a given complex value into the TypedArray.\n * @param data The array in which the complex value is inserted.\n * @param c The complex value to be inserted.\n * @param index An index of the target complex value.\n */\n\nexport function assignToTypedArray(data, real, imag, index) {\n  data[index * 2] = real;\n  data[index * 2 + 1] = imag;\n}\n/**\n * Make the list of exponent terms used by FFT.\n */\n\nexport function exponents(n, inverse) {\n  var real = new Float32Array(n / 2);\n  var imag = new Float32Array(n / 2);\n\n  for (var i = 0; i < Math.ceil(n / 2); i++) {\n    var x = (inverse ? 2 : -2) * Math.PI * (i / n);\n    real[i] = Math.cos(x);\n    imag[i] = Math.sin(x);\n  }\n\n  return {\n    real: real,\n    imag: imag\n  };\n}\n/**\n * Make the exponent term used by FFT.\n */\n\nexport function exponent(k, n, inverse) {\n  var x = (inverse ? 2 : -2) * Math.PI * (k / n);\n  var real = Math.cos(x);\n  var imag = Math.sin(x);\n  return {\n    real: real,\n    imag: imag\n  };\n}","import _slicedToArray from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { assert } from '../util_base';\nvar ARROW = '->';\nvar ARROW_REGEX = /->/g;\nvar COMMA = ',';\nvar ELLIPSIS = '...';\n/**\n * Parse an equation for einsum.\n *\n * @param equation The einsum equation (e.g., \"ij,jk->ik\").\n * @param numTensors Number of tensors provided along with `equation`. Used to\n *   check matching number of input tensors.\n * @returns An object consisting of the following fields:\n *   - allDims: all dimension names as strings.\n *   - summedDims: a list of all dimensions being summed over, as indices to\n *     the elements of `allDims`.\n *   - idDims: indices of the dimensions in each input tensor, as indices to\n *     the elements of `allDims.\n */\n\nexport function decodeEinsumEquation(equation, numTensors) {\n  equation = equation.replace(/\\s/g, ''); // Remove witespace in equation.\n\n  var numArrows = (equation.length - equation.replace(ARROW_REGEX, '').length) / ARROW.length;\n\n  if (numArrows < 1) {\n    throw new Error('Equations without an arrow are not supported.');\n  } else if (numArrows > 1) {\n    throw new Error(\"Equation must contain exactly one arrow (\\\"\".concat(ARROW, \"\\\").\"));\n  }\n\n  var _equation$split = equation.split(ARROW),\n      _equation$split2 = _slicedToArray(_equation$split, 2),\n      inputString = _equation$split2[0],\n      outputString = _equation$split2[1];\n\n  assert(inputString.indexOf(ELLIPSIS) === -1, function () {\n    return \"The ellipsis notation (\\\"\".concat(ELLIPSIS, \"\\\") is not supported yet.\");\n  });\n  var inputTerms = inputString.split(COMMA);\n  var numInputs = inputTerms.length;\n\n  if (numTensors !== numInputs) {\n    throw new Error(\"Expected \".concat(numInputs, \" input tensors, received \").concat(numTensors));\n  }\n\n  if (numInputs > 2) {\n    throw new Error('Support for more than 2 input tensors is not implemented yet.');\n  }\n\n  var allDims = [];\n\n  var _loop = function _loop(i) {\n    var dimName = outputString[i];\n\n    if (!inputTerms.some(function (inputTerm) {\n      return inputTerm.indexOf(dimName) !== -1;\n    })) {\n      throw new Error(\"Output subscripts contain the label \".concat(dimName, \" \") + \"not present in the input subscripts.\");\n    }\n\n    if (allDims.indexOf(dimName) === -1) {\n      allDims.push(dimName);\n    }\n  };\n\n  for (var i = 0; i < outputString.length; ++i) {\n    _loop(i);\n  }\n\n  for (var _i = 0; _i < inputString.length; ++_i) {\n    var dimName = inputString[_i];\n\n    if (allDims.indexOf(dimName) === -1 && dimName !== COMMA) {\n      allDims.push(dimName);\n    }\n  }\n\n  var idDims = new Array(inputTerms.length);\n\n  for (var _i2 = 0; _i2 < numInputs; ++_i2) {\n    if (new Set(inputTerms[_i2].split('')).size !== inputTerms[_i2].length) {\n      throw new Error(\"Found duplicate axes in input component \".concat(inputTerms[_i2], \". \") + \"Support for duplicate axes in input is not implemented yet.\");\n    }\n\n    idDims[_i2] = [];\n\n    for (var j = 0; j < inputTerms[_i2].length; ++j) {\n      idDims[_i2].push(allDims.indexOf(inputTerms[_i2][j]));\n    }\n  }\n\n  var numDims = allDims.length; // Number of unique dimensions.\n\n  var numOutDims = outputString.length; // Number of output dimensions.\n\n  var summedDims = []; // Dimensions being summed over.\n\n  for (var _i3 = numOutDims; _i3 < numDims; ++_i3) {\n    summedDims.push(_i3);\n  }\n\n  return {\n    allDims: allDims,\n    summedDims: summedDims,\n    idDims: idDims\n  };\n}\n/**\n * Get the permutation for a given input tensor.\n *\n * @param nDims Total number of dimension of all tensors involved in the einsum\n *   operation.\n * @param idDims Dimension indices involve in the tensor in question.\n * @returns An object consisting of the following fields:\n *   - permutationIndices: Indices to permute the axes of the tensor with.\n *   - expandDims: Indices to the dimension that need to be expanded from the\n *     tensor after permutation.\n */\n\nexport function getEinsumPermutation(nDims, idDims) {\n  var permutationIndices = new Array(nDims);\n  permutationIndices.fill(-1);\n\n  for (var i = 0; i < idDims.length; ++i) {\n    permutationIndices[idDims[i]] = i;\n  }\n\n  var expandDims = [];\n\n  for (var _i4 = 0; _i4 < nDims; ++_i4) {\n    if (permutationIndices[_i4] === -1) {\n      expandDims.push(_i4);\n    }\n  }\n\n  permutationIndices = permutationIndices.filter(function (d) {\n    return d !== -1;\n  });\n  return {\n    permutationIndices: permutationIndices,\n    expandDims: expandDims\n  };\n}\n/**\n * Checks that the dimension sizes from different input tensors match the\n * equation.\n */\n\nexport function checkEinsumDimSizes(nDims, idDims, tensors) {\n  var dimSizes = new Array(nDims);\n\n  var _loop2 = function _loop2(i) {\n    var shape = tensors[i].shape;\n\n    var _loop3 = function _loop3(j) {\n      if (dimSizes[idDims[i][j]] === undefined) {\n        dimSizes[idDims[i][j]] = shape[j];\n      } else {\n        assert(dimSizes[idDims[i][j]] === shape[j], function () {\n          return \"Expected dimension \".concat(dimSizes[idDims[i][j]], \" at axis \").concat(j, \" \") + \"of input shaped \".concat(JSON.stringify(shape), \", \") + \"but got dimension \".concat(shape[j]);\n        });\n      }\n    };\n\n    for (var j = 0; j < idDims[i].length; ++j) {\n      _loop3(j);\n    }\n  };\n\n  for (var i = 0; i < tensors.length; ++i) {\n    _loop2(i);\n  }\n}\n/**\n * Gets path of computation for einsum.\n *\n * @param summedDims indices to the dimensions being summed over.\n * @param idDims A look up table for the dimensions present in each input\n *     tensor. Each consituent array contains indices for the dimensions in the\n *     corresponding input tensor.\n *\n * @return A map with two fields:\n *   - path: The path of computation, with each element indicating the dimension\n *     being summed over after the element-wise multiplication in that step.\n *   - steps: With the same length as `path`. Each element contains the indices\n *     to the input tensors being used for element-wise multiplication in the\n *     corresponding step.\n */\n\nexport function getEinsumComputePath(summedDims, idDims) {\n  var path = summedDims;\n  var steps = [];\n  var nSteps = 0;\n\n  if (summedDims.length === 0) {\n    // Einsum that involes no summing: e.g., transpose and outer product.\n    path.push(-1);\n  }\n\n  nSteps = summedDims.length + 1;\n\n  for (var i = 0; i < nSteps; ++i) {\n    steps.push([]);\n  }\n\n  var computedTermIndices = [];\n\n  for (var _i5 = 0; _i5 < path.length; ++_i5) {\n    var summedDim = path[_i5];\n    var termIndices = findTermsWithDim(idDims, summedDim);\n\n    var _iterator = _createForOfIteratorHelper(termIndices),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var termIndex = _step.value;\n\n        if (computedTermIndices.indexOf(termIndex) === -1) {\n          steps[_i5].push(termIndex);\n\n          computedTermIndices.push(termIndex);\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n\n  return {\n    path: path,\n    steps: steps\n  };\n}\n/** Determines if an axes permutation is the identity permutation. */\n\nexport function isIdentityPermutation(perm) {\n  return perm.every(function (dim, index) {\n    return dim === index;\n  });\n}\n\nfunction findTermsWithDim(idDims, dim) {\n  var termIndices = [];\n\n  for (var i = 0; i < idDims.length; ++i) {\n    if (idDims[i].length === 0 || idDims[i].indexOf(dim) !== -1 || dim === -1) {\n      termIndices.push(i);\n    }\n  }\n\n  return termIndices;\n}","import { assert } from '../util';\n/**\n * Prepare the split size array. When the input is a number, the axis is evenly\n * divided among the split size. When the input contains the negative value, the\n * rest of the axis is allocated toward that.\n */\n\nexport function prepareSplitSize(x, numOrSizeSplits) {\n  var axis = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var splitSizes = [];\n\n  if (typeof numOrSizeSplits === 'number') {\n    assert(x.shape[axis] % numOrSizeSplits === 0, function () {\n      return 'Number of splits must evenly divide the axis.';\n    });\n    splitSizes = new Array(numOrSizeSplits).fill(x.shape[axis] / numOrSizeSplits);\n  } else {\n    var numOfNegs = numOrSizeSplits.reduce(function (count, value) {\n      if (value === -1) {\n        count += 1;\n      }\n\n      return count;\n    }, 0);\n    assert(numOfNegs <= 1, function () {\n      return 'There should be only one negative value in split array.';\n    });\n    var negIndex = numOrSizeSplits.indexOf(-1); // Allow the number of split array to be -1, which indicates the rest\n    // of dimension is allocated to that split.\n\n    if (negIndex !== -1) {\n      var total = numOrSizeSplits.reduce(function (a, b) {\n        return b > 0 ? a + b : a;\n      });\n      numOrSizeSplits[negIndex] = x.shape[axis] - total;\n    }\n\n    assert(x.shape[axis] === numOrSizeSplits.reduce(function (a, b) {\n      return a + b;\n    }), function () {\n      return 'The sum of sizes must match the size of the axis dimension.';\n    });\n    splitSizes = numOrSizeSplits;\n  }\n\n  return splitSizes;\n}","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { nearestDivisor } from '../util';\nimport { PARALLELIZE_THRESHOLD } from './reduce_util';\nexport function segOpComputeOptimalWindowSize(inSize, numSegments) {\n  var done = false;\n  var res;\n\n  if (inSize <= PARALLELIZE_THRESHOLD) {\n    res = inSize;\n    done = true;\n  } else {\n    res = nearestDivisor(inSize, Math.floor(Math.sqrt(inSize)));\n  }\n\n  while (!done) {\n    if (res > numSegments || res === inSize) {\n      done = true;\n    } else {\n      res = nearestDivisor(inSize, res + 1);\n    }\n  }\n\n  return res;\n}\nexport function computeOutShape(aShape, axis, numSegments) {\n  var outShape = [];\n  var rank = aShape.length;\n\n  for (var dim = 0; dim < rank; dim++) {\n    if (dim !== axis) {\n      outShape.push(aShape[dim]);\n    } else {\n      outShape.push(numSegments);\n    }\n  }\n\n  return outShape;\n}\nexport function collectGatherOpShapeInfo(x, indices, axis, batchDims) {\n  var indicesRank = indices.shape.length;\n  var xRank = x.shape.length;\n\n  if (batchDims !== 0) {\n    if (batchDims < -indicesRank || batchDims > indicesRank) {\n      throw new Error(\"Expect batchDims in the range of [-\".concat(indicesRank, \", \").concat(indicesRank, \"], but got \").concat(batchDims));\n    }\n  }\n\n  if (batchDims < 0) {\n    batchDims += indicesRank;\n  }\n\n  if (batchDims > xRank) {\n    throw new Error(\"batchDims (\".concat(batchDims, \") must be less than rank(x) (\\n    \").concat(xRank, \").\"));\n  }\n\n  if (axis < batchDims) {\n    throw new Error(\"batchDims (\".concat(batchDims, \") must be less than or equal to axis (\").concat(axis, \").\"));\n  }\n\n  for (var i = 0; i < batchDims; ++i) {\n    if (x.shape[i] !== indices.shape[i]) {\n      throw new Error(\"x.shape[\".concat(i, \"]: \").concat(x.shape[i], \" should be equal to indices.shape[\").concat(i, \"]: \").concat(indices.shape[i], \".\"));\n    }\n  }\n\n  var dimSize = x.shape[axis];\n  var outputShape = [];\n  var batchSize = 1;\n  var outerSize = 1;\n  var sliceSize = 1;\n\n  for (var _i = 0; _i < batchDims; ++_i) {\n    outputShape.push(x.shape[_i]);\n    batchSize *= x.shape[_i];\n  }\n\n  for (var _i2 = batchDims; _i2 < axis; _i2++) {\n    outputShape.push(x.shape[_i2]);\n    outerSize *= x.shape[_i2];\n  }\n\n  for (var _i3 = batchDims; _i3 < indicesRank; _i3++) {\n    outputShape.push(indices.shape[_i3]);\n  }\n\n  for (var _i4 = axis + 1; _i4 < xRank; _i4++) {\n    outputShape.push(x.shape[_i4]);\n    sliceSize *= x.shape[_i4];\n  }\n\n  return {\n    batchSize: batchSize,\n    sliceSize: sliceSize,\n    outerSize: outerSize,\n    dimSize: dimSize,\n    outputShape: outputShape\n  };\n}","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { decodeString, encodeString } from '../util'; // Utilities needed by backend consumers of tf-core.\n\nexport * from '../ops/axis_util';\nexport * from '../ops/broadcast_util';\nexport * from '../ops/concat_util';\nexport * from '../ops/conv_util';\nexport * from '../ops/fused_util';\nexport * from '../ops/reduce_util';\nimport * as slice_util from '../ops/slice_util';\nexport { slice_util };\nexport { upcastType } from '../types';\nexport * from '../ops/rotate_util';\nexport * from '../ops/array_ops_util';\nexport * from '../ops/gather_nd_util';\nexport * from '../ops/scatter_nd_util';\nexport * from '../ops/selu_util';\nexport * from '../ops/fused_util';\nexport * from '../ops/erf_util';\nexport * from '../log';\nexport * from '../backends/complex_util';\nexport * from '../backends/einsum_util';\nexport * from '../ops/split_util';\nimport * as segment_util from '../ops/segment_util';\nexport { segment_util };\nexport function fromUint8ToStringArray(vals) {\n  try {\n    // Decode the bytes into string.\n    return vals.map(function (val) {\n      return decodeString(val);\n    });\n  } catch (err) {\n    throw new Error(\"Failed to decode encoded string bytes into utf-8, error: \".concat(err));\n  }\n}\nexport function fromStringArrayToUint8(strings) {\n  return strings.map(function (s) {\n    return encodeString(s);\n  });\n}","export var Abs = 'Abs';\nexport var Acos = 'Acos';\nexport var Acosh = 'Acosh';\nexport var Add = 'Add';\nexport var AddN = 'AddN';\nexport var All = 'All';\nexport var Any = 'Any';\nexport var ArgMax = 'ArgMax';\nexport var ArgMin = 'ArgMin';\nexport var Asin = 'Asin';\nexport var Asinh = 'Asinh';\nexport var Atan = 'Atan';\nexport var Atanh = 'Atanh';\nexport var Atan2 = 'Atan2';\nexport var AvgPool = 'AvgPool';\nexport var AvgPoolGrad = 'AvgPoolGrad';\nexport var AvgPool3D = 'AvgPool3D';\nexport var AvgPool3DGrad = 'AvgPool3DGrad';\nexport var BatchMatMul = 'BatchMatMul';\nexport var BatchToSpaceND = 'BatchToSpaceND';\nexport var Bincount = 'Bincount';\nexport var BroadcastTo = 'BroadcastTo';\nexport var Cast = 'Cast';\nexport var Ceil = 'Ceil';\nexport var ClipByValue = 'ClipByValue';\nexport var Complex = 'Complex';\nexport var ComplexAbs = 'ComplexAbs';\nexport var Concat = 'Concat';\nexport var Conv2D = 'Conv2D';\nexport var Conv2DBackpropFilter = 'Conv2DBackpropFilter';\nexport var Conv2DBackpropInput = 'Conv2DBackpropInput';\nexport var Conv3D = 'Conv3D';\nexport var Conv3DBackpropFilterV2 = 'Conv3DBackpropFilterV2';\nexport var Conv3DBackpropInputV2 = 'Conv3DBackpropInputV2';\nexport var Cos = 'Cos';\nexport var Cosh = 'Cosh';\nexport var Cumsum = 'Cumsum';\nexport var CropAndResize = 'CropAndResize';\nexport var DenseBincount = 'DenseBincount';\nexport var DepthToSpace = 'DepthToSpace';\nexport var DepthwiseConv2dNative = 'DepthwiseConv2dNative';\nexport var DepthwiseConv2dNativeBackpropFilter = 'DepthwiseConv2dNativeBackpropFilter';\nexport var DepthwiseConv2dNativeBackpropInput = 'DepthwiseConv2dNativeBackpropInput';\nexport var Diag = 'Diag';\nexport var Dilation2D = 'Dilation2D';\nexport var Dilation2DBackpropInput = 'Dilation2DBackpropInput';\nexport var Dilation2DBackpropFilter = 'Dilation2DBackpropFilter';\nexport var RealDiv = 'RealDiv';\nexport var Einsum = 'Einsum';\nexport var Elu = 'Elu';\nexport var EluGrad = 'EluGrad';\nexport var Erf = 'Erf';\nexport var Equal = 'Equal';\nexport var Exp = 'Exp';\nexport var ExpandDims = 'ExpandDims';\nexport var Expm1 = 'Expm1';\nexport var FFT = 'FFT';\nexport var Fill = 'Fill';\nexport var FlipLeftRight = 'FlipLeftRight';\nexport var Floor = 'Floor';\nexport var FloorDiv = 'FloorDiv';\nexport var FusedBatchNorm = 'FusedBatchNorm';\nexport var GatherV2 = 'GatherV2';\nexport var GatherNd = 'GatherNd';\nexport var Greater = 'Greater';\nexport var GreaterEqual = 'GreaterEqual';\nexport var Identity = 'Identity';\nexport var IFFT = 'IFFT';\nexport var Imag = 'Imag';\nexport var IsFinite = 'IsFinite';\nexport var IsInf = 'IsInf';\nexport var IsNan = 'IsNan';\nexport var LeakyRelu = 'LeakyRelu';\nexport var Less = 'Less';\nexport var LessEqual = 'LessEqual';\nexport var LinSpace = 'LinSpace';\nexport var Log = 'Log';\nexport var Log1p = 'Log1p';\nexport var LogicalAnd = 'LogicalAnd';\nexport var LogicalNot = 'LogicalNot';\nexport var LogicalOr = 'LogicalOr';\nexport var LogSoftmax = 'LogSoftmax';\nexport var LRN = 'LRN';\nexport var LRNGrad = 'LRNGrad';\nexport var Max = 'Max';\nexport var Maximum = 'Maximum';\nexport var MaxPool = 'MaxPool';\nexport var MaxPoolGrad = 'MaxPoolGrad';\nexport var MaxPool3D = 'MaxPool3D';\nexport var MaxPool3DGrad = 'MaxPool3DGrad';\nexport var MaxPoolWithArgmax = 'MaxPoolWithArgmax';\nexport var Mean = 'Mean';\nexport var Min = 'Min';\nexport var Minimum = 'Minimum';\nexport var MirrorPad = 'MirrorPad';\nexport var Mod = 'Mod';\nexport var Multinomial = 'Multinomial';\nexport var Multiply = 'Multiply';\nexport var Neg = 'Neg';\nexport var NotEqual = 'NotEqual';\nexport var NonMaxSuppressionV3 = 'NonMaxSuppressionV3';\nexport var NonMaxSuppressionV4 = 'NonMaxSuppressionV4';\nexport var NonMaxSuppressionV5 = 'NonMaxSuppressionV5';\nexport var OnesLike = 'OnesLike';\nexport var OneHot = 'OneHot';\nexport var Pack = 'Pack';\nexport var PadV2 = 'PadV2';\nexport var Pool = 'Pool';\nexport var Pow = 'Pow';\nexport var Prelu = 'Prelu';\nexport var Prod = 'Prod';\nexport var Range = 'Range';\nexport var Real = 'Real';\nexport var Reciprocal = 'Reciprocal';\nexport var Relu = 'Relu';\nexport var Reshape = 'Reshape';\nexport var ResizeNearestNeighbor = 'ResizeNearestNeighbor';\nexport var ResizeNearestNeighborGrad = 'ResizeNearestNeighborGrad';\nexport var ResizeBilinear = 'ResizeBilinear';\nexport var ResizeBilinearGrad = 'ResizeBilinearGrad';\nexport var Relu6 = 'Relu6';\nexport var Reverse = 'Reverse';\nexport var Round = 'Round';\nexport var Rsqrt = 'Rsqrt';\nexport var ScatterNd = 'ScatterNd';\nexport var Select = 'Select';\nexport var Selu = 'Selu';\nexport var Slice = 'Slice';\nexport var Sin = 'Sin';\nexport var Sinh = 'Sinh';\nexport var Sign = 'Sign';\nexport var Sigmoid = 'Sigmoid';\nexport var Softplus = 'Softplus';\nexport var Sqrt = 'Sqrt';\nexport var Sum = 'Sum';\nexport var SpaceToBatchND = 'SpaceToBatchND';\nexport var SplitV = 'SplitV';\nexport var Softmax = 'Softmax';\nexport var SquaredDifference = 'SquaredDifference';\nexport var Square = 'Square';\nexport var Sub = 'Sub';\nexport var SparseToDense = 'SparseToDense';\nexport var StridedSlice = 'StridedSlice';\nexport var Tan = 'Tan';\nexport var Tanh = 'Tanh';\nexport var Tile = 'Tile';\nexport var TopK = 'TopK';\nexport var Transform = 'Transform';\nexport var Transpose = 'Transpose';\nexport var Unique = 'Unique';\nexport var Unpack = 'Unpack';\nexport var UnsortedSegmentSum = 'UnsortedSegmentSum';\nexport var ZerosLike = 'ZerosLike';\n/**\n * TensorFlow.js-only kernels\n */\n\nexport var Step = 'Step';\nexport var FromPixels = 'FromPixels';\nexport var RotateWithOffset = 'RotateWithOffset';\nexport var _FusedMatMul = '_FusedMatMul';\nexport var FusedConv2D = 'FusedConv2D';\nexport var FusedDepthwiseConv2D = 'FusedDepthwiseConv2D';","import _slicedToArray from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env } from './environment';\nimport { getGlobal } from './global_util';\nvar kernelRegistry = getGlobal('kernelRegistry', function () {\n  return new Map();\n});\nvar gradRegistry = getGlobal('gradRegistry', function () {\n  return new Map();\n});\n/**\n * Returns the kernel function (code) associated with the provided names.\n *\n * @param kernelName The official name of the kernel.\n * @param backendName The official name of the backend.\n */\n\nexport function getKernel(kernelName, backendName) {\n  var key = makeKey(kernelName, backendName);\n  return kernelRegistry.get(key);\n}\n/**\n * Returns the registered gradient info associated with the provided kernel.\n * @param kernelName The official TF kernel name.\n */\n\nexport function getGradient(kernelName) {\n  return gradRegistry.get(kernelName);\n}\nexport function getKernelsForBackend(backendName) {\n  var it = kernelRegistry.entries();\n  var result = [];\n\n  while (true) {\n    var _it$next = it.next(),\n        done = _it$next.done,\n        value = _it$next.value;\n\n    if (done) {\n      break;\n    }\n\n    var _value = _slicedToArray(value, 2),\n        key = _value[0],\n        config = _value[1];\n\n    var _key$split = key.split('_'),\n        _key$split2 = _slicedToArray(_key$split, 1),\n        backend = _key$split2[0];\n\n    if (backend === backendName) {\n      result.push(config);\n    }\n  }\n\n  return result;\n}\n/**\n * Registers the function (forward pass) for the kernel in a global registry.\n *\n * @param config A config object with the following properties:\n * - `kernelName` The official name of the kernel.\n * - `backendName` The official name of the backend.\n * - `kernelFunc` The function to run during the forward pass of the kernel.\n * - `setupFunc` Optional. Gets called once, after the backend initializes.\n * - `disposeFunc` Optional. Gets called once, right before the backend is\n * disposed.\n */\n\nexport function registerKernel(config) {\n  var kernelName = config.kernelName,\n      backendName = config.backendName;\n  var key = makeKey(kernelName, backendName);\n\n  if (kernelRegistry.has(key)) {\n    console.warn(\"The kernel '\".concat(kernelName, \"' for backend \") + \"'\".concat(backendName, \"' is already registered\"));\n  }\n\n  kernelRegistry.set(key, config);\n}\n/**\n * Registers a gradient function for a given kernel in the global registry,\n * to be used during the back-propagation of that kernel.\n *\n * @param config An object with the following properties:\n * - `kernelName` The name of the kernel that the gradient function is for.\n * - `gradFunc` The function to run during back-propagation.\n */\n\nexport function registerGradient(config) {\n  var kernelName = config.kernelName;\n\n  if (gradRegistry.has(kernelName)) {\n    // TODO (yassogba) after 3.0 assess whether we need to keep this gated\n    // to debug mode.\n    if (env().getBool('DEBUG')) {\n      console.warn(\"Overriding the gradient for '\".concat(kernelName, \"'\"));\n    }\n  }\n\n  gradRegistry.set(kernelName, config);\n}\n/**\n * Removes the kernel function from the registry.\n *\n * @param kernelName The official name of the kernel.\n * @param backendName The official name of the backend.\n *\n */\n\nexport function unregisterKernel(kernelName, backendName) {\n  var key = makeKey(kernelName, backendName);\n\n  if (!kernelRegistry.has(key)) {\n    throw new Error(\"The kernel '\".concat(kernelName, \"' for backend \") + \"'\".concat(backendName, \"' is not registered\"));\n  }\n\n  kernelRegistry.delete(key);\n}\n/** Removes the registered gradient from the global registry. */\n\nexport function unregisterGradient(kernelName) {\n  if (!gradRegistry.has(kernelName)) {\n    throw new Error(\"The gradient '\".concat(kernelName, \"' for backend is not registered\"));\n  }\n\n  gradRegistry.delete(kernelName);\n}\n/**\n * Finds kernels that have already been registered to a backend and re-registers\n * them for a new backend. Useful for registering custom backends.\n * @param registeredBackendName Already registered backend.\n * @param newBackendName New backend.\n */\n\nexport function copyRegisteredKernels(registeredBackendName, newBackendName) {\n  var kernels = getKernelsForBackend(registeredBackendName);\n  kernels.forEach(function (kernelConfig) {\n    var newKernelConfig = Object.assign({}, kernelConfig, {\n      backendName: newBackendName\n    });\n    registerKernel(newKernelConfig);\n  });\n}\n\nfunction makeKey(kernelName, backendName) {\n  return \"\".concat(backendName, \"_\").concat(kernelName);\n}","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Abs, ComplexAbs } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes absolute value element-wise: `abs(x)`\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 4]);\n *\n * x.abs().print();  // or tf.abs(x)\n * ```\n * @param x The input `tf.Tensor`.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\n\nfunction abs_(x) {\n  var $x = convertToTensor(x, 'x', 'abs');\n\n  if ($x.dtype === 'complex64') {\n    var inputs = {\n      x: $x\n    };\n    return ENGINE.runKernel(ComplexAbs, inputs);\n  } else {\n    var _inputs = {\n      x: $x\n    };\n    return ENGINE.runKernel(Abs, _inputs);\n  }\n}\n\nexport var abs = op({\n  abs_: abs_\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Acos } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes acos of the input `tf.Tensor` element-wise: `acos(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, .7]);\n *\n * x.acos().print();  // or tf.acos(x)\n * ```\n * @param x The input tensor.\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\n\nfunction acos_(x) {\n  var $x = convertToTensor(x, 'x', 'acos');\n  var inputs = {\n    x: $x\n  };\n  return ENGINE.runKernel(Acos, inputs);\n}\n\nexport var acos = op({\n  acos_: acos_\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Acosh } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes the inverse hyperbolic cos of the input `tf.Tensor` element-wise:\n * `acosh(x)`\n *\n * ```js\n * const x = tf.tensor1d([10, 1, 3, 5.7]);\n *\n * x.acosh().print();  // or tf.acosh(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\n\nfunction acosh_(x) {\n  var $x = convertToTensor(x, 'x', 'acosh');\n  var inputs = {\n    x: $x\n  };\n  return ENGINE.runKernel(Acosh, inputs);\n}\n\nexport var acosh = op({\n  acosh_: acosh_\n});","import _slicedToArray from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Add } from '../kernel_names';\nimport { makeTypesMatch } from '../tensor_util';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Adds two `tf.Tensor`s element-wise, A + B. Supports broadcasting.\n *\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3, 4]);\n * const b = tf.tensor1d([10, 20, 30, 40]);\n *\n * a.add(b).print();  // or tf.add(a, b)\n * ```\n *\n * ```js\n * // Broadcast add a with b.\n * const a = tf.scalar(5);\n * const b = tf.tensor1d([10, 20, 30, 40]);\n *\n * a.add(b).print();  // or tf.add(a, b)\n * ```\n * @param a The first `tf.Tensor` to add.\n * @param b The second `tf.Tensor` to add. Must have the same type as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\n\nfunction add_(a, b) {\n  var $a = convertToTensor(a, 'a', 'add');\n  var $b = convertToTensor(b, 'b', 'add');\n\n  var _makeTypesMatch = makeTypesMatch($a, $b);\n\n  var _makeTypesMatch2 = _slicedToArray(_makeTypesMatch, 2);\n\n  $a = _makeTypesMatch2[0];\n  $b = _makeTypesMatch2[1];\n  var inputs = {\n    a: $a,\n    b: $b\n  };\n  return ENGINE.runKernel(Add, inputs);\n}\n\nexport var add = op({\n  add_: add_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { All } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes the logical and of elements across dimensions of a `tf.Tensor`.\n *\n * Reduces the input along the dimensions given in `axes`. Unless `keepDims`\n * is true, the rank of the `tf.Tensor` is reduced by 1 for each entry in\n * `axes`. If `keepDims` is true, the reduced dimensions are retained with\n * length 1. If `axes` has no entries, all dimensions are reduced, and an\n * `tf.Tensor` with a single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 1, 1], 'bool');\n *\n * x.all().print();  // or tf.all(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 1, 0, 0], [2, 2], 'bool');\n *\n * const axis = 1;\n * x.all(axis).print();  // or tf.all(x, axis)\n * ```\n *\n * @param x The input tensor. Must be of dtype bool.\n * @param axis The dimension(s) to reduce. By default it reduces\n *     all dimensions.\n * @param keepDims If true, retains reduced dimensions with size 1.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\n\nfunction all_(x) {\n  var axis = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var keepDims = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var $x = convertToTensor(x, 'x', 'all', 'bool');\n  var inputs = {\n    x: $x\n  };\n  var attrs = {\n    axis: axis,\n    keepDims: keepDims\n  };\n  return ENGINE.runKernel(All, inputs, attrs);\n}\n\nexport var all = op({\n  all_: all_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Any } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes the logical or of elements across dimensions of a `tf.Tensor`.\n *\n * Reduces the input along the dimensions given in `axes`. Unless `keepDims`\n * is true, the rank of the `tf.Tensor` is reduced by 1 for each entry in\n * `axes`. If `keepDims` is true, the reduced dimensions are retained with\n * length 1. If `axes` has no entries, all dimensions are reduced, and an\n * `tf.Tensor` with a single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 1, 1], 'bool');\n *\n * x.any().print();  // or tf.any(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 1, 0, 0], [2, 2], 'bool');\n *\n * const axis = 1;\n * x.any(axis).print();  // or tf.any(x, axis)\n * ```\n *\n * @param x The input tensor. Must be of dtype bool.\n * @param axis The dimension(s) to reduce. By default it reduces\n *     all dimensions.\n * @param keepDims If true, retains reduced dimensions with size 1.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\n\nfunction any_(x) {\n  var axis = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var keepDims = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var $x = convertToTensor(x, 'x', 'any', 'bool');\n  var inputs = {\n    x: $x\n  };\n  var attrs = {\n    axis: axis,\n    keepDims: keepDims\n  };\n  return ENGINE.runKernel(Any, inputs, attrs);\n} // tslint:disable-next-line:variable-name\n\n\nexport var any = op({\n  any_: any_\n});","/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { ArgMax } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Returns the indices of the maximum values along an `axis`.\n *\n * The result has the same shape as `input` with the dimension along `axis`\n * removed.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.argMax().print();  // or tf.argMax(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 4, 3], [2, 2]);\n *\n * const axis = 1;\n * x.argMax(axis).print();  // or tf.argMax(x, axis)\n * ```\n *\n * @param x The input tensor.\n * @param axis The dimension to reduce. Defaults to 0 (outer-most dimension).\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\n\nfunction argMax_(x) {\n  var axis = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var $x = convertToTensor(x, 'x', 'argMax');\n  var inputs = {\n    x: $x\n  };\n  var attrs = {\n    axis: axis\n  };\n  return ENGINE.runKernel(ArgMax, inputs, attrs);\n}\n\nexport var argMax = op({\n  argMax_: argMax_\n});","/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { ArgMin } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Returns the indices of the minimum values along an `axis`.\n *\n * The result has the same shape as `input` with the dimension along `axis`\n * removed.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.argMin().print();  // or tf.argMin(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 4, 3], [2, 2]);\n *\n * const axis = 1;\n * x.argMin(axis).print();  // or tf.argMin(x, axis)\n * ```\n *\n * @param x The input tensor.\n * @param axis The dimension to reduce. Defaults to 0 (outer-most dimension).\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\n\nfunction argMin_(x) {\n  var axis = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var $x = convertToTensor(x, 'x', 'argMin');\n  var inputs = {\n    x: $x\n  };\n  var attrs = {\n    axis: axis\n  };\n  return ENGINE.runKernel(ArgMin, inputs, attrs);\n}\n\nexport var argMin = op({\n  argMin_: argMin_\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Asin } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes asin of the input `tf.Tensor` element-wise: `asin(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, .7]);\n *\n * x.asin().print();  // or tf.asin(x)\n * ```\n * @param x The input tensor.\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\n\nfunction asin_(x) {\n  var $x = convertToTensor(x, 'x', 'asin');\n  var inputs = {\n    x: $x\n  };\n  return ENGINE.runKernel(Asin, inputs);\n}\n\nexport var asin = op({\n  asin_: asin_\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Asinh } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes inverse hyperbolic sin of the input `tf.Tensor` element-wise:\n * `asinh(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, .7]);\n *\n * x.asinh().print();  // or tf.asinh(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\n\nfunction asinh_(x) {\n  var $x = convertToTensor(x, 'x', 'asinh');\n  var inputs = {\n    x: $x\n  };\n  return ENGINE.runKernel(Asinh, inputs);\n}\n\nexport var asinh = op({\n  asinh_: asinh_\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Atan } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes atan of the input `tf.Tensor` element-wise: `atan(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, .7]);\n *\n * x.atan().print();  // or tf.atan(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\n\nfunction atan_(x) {\n  var $x = convertToTensor(x, 'x', 'atan');\n  var inputs = {\n    x: $x\n  };\n  return ENGINE.runKernel(Atan, inputs);\n}\n\nexport var atan = op({\n  atan_: atan_\n});","import _slicedToArray from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Atan2 } from '../kernel_names';\nimport { makeTypesMatch } from '../tensor_util';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes arctangent of `tf.Tensor`s a / b element-wise: `atan2(a, b)`.\n * Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([1.0, 1.0, -1.0, .7]);\n * const b = tf.tensor1d([2.0, 13.0, 3.5, .21]);\n *\n * tf.atan2(a, b).print()\n * ```\n *\n * @param a The first tensor.\n * @param b The second tensor. Must have the same dtype as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\n\nfunction atan2_(a, b) {\n  var $a = convertToTensor(a, 'a', 'atan2');\n  var $b = convertToTensor(b, 'b', 'atan2');\n\n  var _makeTypesMatch = makeTypesMatch($a, $b);\n\n  var _makeTypesMatch2 = _slicedToArray(_makeTypesMatch, 2);\n\n  $a = _makeTypesMatch2[0];\n  $b = _makeTypesMatch2[1];\n  var inputs = {\n    a: $a,\n    b: $b\n  };\n  return ENGINE.runKernel(Atan2, inputs);\n}\n\nexport var atan2 = op({\n  atan2_: atan2_\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Atanh } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes inverse hyperbolic tan of the input `tf.Tensor` element-wise:\n * `atanh(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, .1, -.1, .7]);\n *\n * x.atanh().print();  // or tf.atanh(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\n\nfunction atanh_(x) {\n  var $x = convertToTensor(x, 'x', 'atanh');\n  var inputs = {\n    x: $x\n  };\n  return ENGINE.runKernel(Atanh, inputs);\n}\n\nexport var atanh = op({\n  atanh_: atanh_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { AvgPool } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { cast } from './cast';\nimport * as conv_util from './conv_util';\nimport { op } from './operation';\nimport { reshape } from './reshape';\n/**\n * Computes the 2D average pooling of an image.\n *\n * @param x The input tensor, of rank 4 or rank 3 of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.\n * @param filterSize The filter size: `[filterHeight, filterWidth]`. If\n *     `filterSize` is a single number, then `filterHeight == filterWidth`.\n * @param strides The strides of the pooling: `[strideHeight, strideWidth]`. If\n *     `strides` is a single number, then `strideHeight == strideWidth`.\n * @param pad The type of padding algorithm:\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *    - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *         https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n */\n\nfunction avgPool_(x, filterSize, strides, pad, dimRoundingMode) {\n  var $x = convertToTensor(x, 'x', 'avgPool', 'float32');\n  var dilations = 1;\n  util.assert(conv_util.eitherStridesOrDilationsAreOne(strides, dilations), function () {\n    return 'Error in avgPool: Either strides or dilations must be 1. ' + \"Got strides \".concat(strides, \" and dilations '\").concat(dilations, \"'\");\n  });\n  var x4D = $x;\n  var reshapedTo4D = false;\n\n  if ($x.rank === 3) {\n    reshapedTo4D = true;\n    x4D = reshape($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n  }\n\n  util.assert(x4D.rank === 4, function () {\n    return \"Error in avgPool: x must be rank 4 but got rank \".concat(x4D.rank, \".\");\n  });\n\n  if (dimRoundingMode != null) {\n    util.assert(util.isInt(pad), function () {\n      return \"Error in avgPool: pad must be an integer when using, \" + \"dimRoundingMode \".concat(dimRoundingMode, \" but got pad \").concat(pad, \".\");\n    });\n  }\n\n  var inputs = {\n    x: x4D\n  };\n  var attrs = {\n    filterSize: filterSize,\n    strides: strides,\n    pad: pad,\n    dimRoundingMode: dimRoundingMode\n  }; // tslint:disable-next-line: no-unnecessary-type-assertion\n\n  var res = ENGINE.runKernel(AvgPool, inputs, attrs);\n  res = cast(res, $x.dtype);\n\n  if (reshapedTo4D) {\n    return reshape(res, [res.shape[1], res.shape[2], res.shape[3]]);\n  }\n\n  return res;\n}\n\nexport var avgPool = op({\n  avgPool_: avgPool_\n});","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport * as util from '../util';\n/**\n * Returns true if the axis specifies the inner most dimensions of the\n * array.\n */\n\nexport function axesAreInnerMostDims(axes, rank) {\n  for (var i = 0; i < axes.length; ++i) {\n    if (axes[axes.length - i - 1] !== rank - 1 - i) {\n      return false;\n    }\n  }\n\n  return true;\n}\nexport function combineLocations(outputLoc, reduceLoc, axes) {\n  var rank = outputLoc.length + reduceLoc.length;\n  var loc = [];\n  var outIdx = 0;\n  var reduceIdx = 0;\n\n  for (var dim = 0; dim < rank; dim++) {\n    if (axes.indexOf(dim) === -1) {\n      loc.push(outputLoc[outIdx++]);\n    } else {\n      loc.push(reduceLoc[reduceIdx++]);\n    }\n  }\n\n  return loc;\n}\nexport function computeOutAndReduceShapes(aShape, axes) {\n  var outShape = [];\n  var rank = aShape.length;\n\n  for (var dim = 0; dim < rank; dim++) {\n    if (axes.indexOf(dim) === -1) {\n      outShape.push(aShape[dim]);\n    }\n  }\n\n  var reduceShape = axes.map(function (dim) {\n    return aShape[dim];\n  });\n  return [outShape, reduceShape];\n}\nexport function expandShapeToKeepDim(shape, axes) {\n  var reduceSubShape = axes.map(function (x) {\n    return 1;\n  });\n  return combineLocations(shape, reduceSubShape, axes);\n}\nexport function assertAxesAreInnerMostDims(msg, axes, rank) {\n  util.assert(axesAreInnerMostDims(axes, rank), function () {\n    return \"\".concat(msg, \" supports only inner-most axes for now. \") + \"Got axes \".concat(axes, \" and rank-\").concat(rank, \" input.\");\n  });\n}\n/**\n * Returns the axes permutation to be used with `tf.transpose`, if such\n * permutation is necessary. Otherwise it returns null. This method is used by\n * operations that operate only on inner-most axes.\n */\n\nexport function getAxesPermutation(axes, rank) {\n  if (axesAreInnerMostDims(axes, rank)) {\n    return null;\n  }\n\n  var result = [];\n\n  for (var i = 0; i < rank; ++i) {\n    if (axes.indexOf(i) === -1) {\n      result.push(i);\n    }\n  }\n\n  axes.forEach(function (axis) {\n    return result.push(axis);\n  });\n  return result;\n}\n/** Returns the axes permutation that undoes the original permutation. */\n\nexport function getUndoAxesPermutation(axes) {\n  return axes.map(function (axis, i) {\n    return [i, axis];\n  }).sort(function (a, b) {\n    return a[1] - b[1];\n  }).map(function (x) {\n    return x[0];\n  });\n}\nexport function getInnerMostAxes(numAxes, rank) {\n  var res = [];\n\n  for (var i = rank - numAxes; i < rank; ++i) {\n    res.push(i);\n  }\n\n  return res;\n}","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { BatchToSpaceND } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\n/**\n * This operation reshapes the \"batch\" dimension 0 into `M + 1` dimensions of\n * shape `blockShape + [batch]`, interleaves these blocks back into the grid\n * defined by the spatial dimensions `[1, ..., M]`, to obtain a result with\n * the same rank as the input. The spatial dimensions of this intermediate\n * result are then optionally cropped according to `crops` to produce the\n * output. This is the reverse of `tf.spaceToBatchND`. See below for a precise\n * description.\n *\n * ```js\n * const x = tf.tensor4d([1, 2, 3, 4], [4, 1, 1, 1]);\n * const blockShape = [2, 2];\n * const crops = [[0, 0], [0, 0]];\n *\n * x.batchToSpaceND(blockShape, crops).print();\n * ```\n *\n * @param x A `tf.Tensor`. N-D with `x.shape` = `[batch] + spatialShape +\n * remainingShape`, where spatialShape has `M` dimensions.\n * @param blockShape A 1-D array. Must have shape `[M]`, all values must\n * be >= 1.\n * @param crops A 2-D array.  Must have shape `[M, 2]`, all values must be >= 0.\n * `crops[i] = [cropStart, cropEnd]` specifies the amount to crop from input\n * dimension `i + 1`, which corresponds to spatial dimension `i`. It is required\n * that `cropStart[i] + cropEnd[i] <= blockShape[i] * inputShape[i + 1]`\n *\n * This operation is equivalent to the following steps:\n *\n * 1. Reshape `x` to `reshaped` of shape: `[blockShape[0], ...,\n * blockShape[M-1], batch / prod(blockShape), x.shape[1], ...,\n * x.shape[N-1]]`\n *\n * 2. Permute dimensions of `reshaped`to produce `permuted` of shape `[batch /\n * prod(blockShape),x.shape[1], blockShape[0], ..., x.shape[M],\n * blockShape[M-1],x.shape[M+1], ..., x.shape[N-1]]`\n *\n * 3. Reshape `permuted` to produce `reshapedPermuted` of shape `[batch /\n * prod(blockShape),x.shape[1] * blockShape[0], ..., x.shape[M] *\n * blockShape[M-1],x.shape[M+1], ..., x.shape[N-1]]`\n *\n * 4. Crop the start and end of dimensions `[1, ..., M]` of `reshapedPermuted`\n * according to `crops` to produce the output of shape: `[batch /\n * prod(blockShape),x.shape[1] * blockShape[0] - crops[0,0] - crops[0,1],\n * ..., x.shape[M] * blockShape[M-1] - crops[M-1,0] -\n * crops[M-1,1],x.shape[M+1], ..., x.shape[N-1]]`\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\n\nfunction batchToSpaceND_(x, blockShape, crops) {\n  var $x = convertToTensor(x, 'x', 'batchToSpaceND');\n  var prod = blockShape.reduce(function (a, b) {\n    return a * b;\n  });\n  util.assert($x.rank >= 1 + blockShape.length, function () {\n    return \"input rank is \".concat($x.rank, \" but should be > than blockShape.length \").concat(blockShape.length);\n  });\n  util.assert(crops.length === blockShape.length, function () {\n    return \"crops.length is \".concat(crops.length, \" but should be equal to blockShape.length  \").concat(blockShape.length);\n  });\n  util.assert($x.shape[0] % prod === 0, function () {\n    return \"input tensor batch is \".concat($x.shape[0], \" but is not divisible by the product of \") + \"the elements of blockShape \".concat(blockShape.join(' * '), \" === \").concat(prod);\n  });\n  var inputs = {\n    x: $x\n  };\n  var attrs = {\n    blockShape: blockShape,\n    crops: crops\n  };\n  return ENGINE.runKernel(BatchToSpaceND, inputs, attrs);\n}\n\nexport var batchToSpaceND = op({\n  batchToSpaceND_: batchToSpaceND_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { FusedBatchNorm } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { xAs4D } from './batchnorm_util';\nimport { op } from './operation';\nimport { reshape } from './reshape';\n/**\n * Batch normalization.\n *\n * As described in\n * [http://arxiv.org/abs/1502.03167](http://arxiv.org/abs/1502.03167).\n *\n * Mean, variance, scale, and offset can be of two shapes:\n *   - The same shape as the input.\n *   - In the common case, the depth dimension is the last dimension of x, so\n *     the values would be an `tf.Tensor1D` of shape [depth].\n *\n * Also available are stricter rank-specific methods with the same signature\n * as this method that assert that parameters passed are of given rank\n *   - `tf.batchNorm2d`\n *   - `tf.batchNorm3d`\n *   - `tf.batchNorm4d`\n *\n * @param x The input Tensor.\n * @param mean A mean Tensor.\n * @param variance A variance Tensor.\n * @param offset An offset Tensor.\n * @param scale A scale Tensor.\n * @param varianceEpsilon A small float number to avoid dividing by 0.\n *\n * @doc {heading: 'Operations', subheading: 'Normalization'}\n */\n\nfunction batchNorm_(x, mean, variance, offset, scale, varianceEpsilon) {\n  if (varianceEpsilon == null) {\n    varianceEpsilon = 0.001;\n  }\n\n  var $x = convertToTensor(x, 'x', 'batchNorm');\n  var $mean = convertToTensor(mean, 'mean', 'batchNorm');\n  var $variance = convertToTensor(variance, 'variance', 'batchNorm');\n  var $scale;\n\n  if (scale != null) {\n    $scale = convertToTensor(scale, 'scale', 'batchNorm');\n  }\n\n  var $offset;\n\n  if (offset != null) {\n    $offset = convertToTensor(offset, 'offset', 'batchNorm');\n  }\n\n  util.assert($mean.rank === $variance.rank, function () {\n    return 'Batch normalization gradient requires mean and variance to have ' + 'equal ranks.';\n  });\n  util.assert($offset == null || $mean.rank === $offset.rank, function () {\n    return 'Batch normalization gradient requires mean and offset to have ' + 'equal ranks.';\n  });\n  util.assert($scale == null || $mean.rank === $scale.rank, function () {\n    return 'Batch normalization gradient requires mean and scale to have ' + 'equal ranks.';\n  });\n  var x4D = xAs4D($x);\n  var inputs = {\n    x: x4D,\n    scale: $scale,\n    offset: $offset,\n    mean: $mean,\n    variance: $variance\n  };\n  var attrs = {\n    varianceEpsilon: varianceEpsilon\n  }; // tslint:disable-next-line: no-unnecessary-type-assertion\n\n  var res = ENGINE.runKernel(FusedBatchNorm, inputs, attrs);\n  return reshape(res, $x.shape);\n}\n\nexport var batchNorm = op({\n  batchNorm_: batchNorm_\n});","import { reshape } from './reshape';\nexport function xAs4D(x) {\n  var x4D;\n\n  if (x.rank === 0 || x.rank === 1) {\n    x4D = reshape(x, [1, 1, 1, x.size]);\n  } else if (x.rank === 2) {\n    x4D = reshape(x, [1, 1, x.shape[0], x.shape[1]]);\n  } else if (x.rank === 3) {\n    x4D = reshape(x, [1, x.shape[0], x.shape[1], x.shape[2]]);\n  } else {\n    x4D = x;\n  }\n\n  return x4D;\n}","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Tile } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { clone } from './clone';\nimport { op } from './operation';\nimport { reshape } from './reshape';\n/**\n * Broadcast an array to a compatible shape NumPy-style.\n *\n * The tensor's shape is compared to the broadcast shape from end to beginning.\n * Ones are prepended to the tensor's shape until is has the same length as\n * the broadcast shape. If input.shape[i]==shape[i], the (i+1)-th axis is\n * already broadcast-compatible. If input.shape[i]==1 and shape[i]==N, then\n * the input tensor is tiled N times along that axis (using tf.tile).\n *\n * @param input The tensor that is to be broadcasted.\n * @param shape The input is to be broadcast to this shape.\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\n\nfunction broadcastTo_(x, shape) {\n  var input = convertToTensor(x, 'broadcastTo', 'x');\n  var xShape = input.shape;\n\n  if (shape.some(function (d) {\n    return !(d > 0) || d % 1 !== 0;\n  })) {\n    throw new Error(\"broadcastTo(): Invalid broadcast shape [\".concat(shape, \"].\"));\n  }\n\n  if (shape.length < input.rank) {\n    throw new Error(\"broadcastTo(): shape.length=\".concat(shape.length, \" < input.rank=\").concat(input.rank, \".\"));\n  }\n\n  if (shape.length > input.rank) {\n    var newShape = input.shape.slice();\n\n    while (newShape.length < shape.length) {\n      newShape.unshift(1);\n    }\n\n    input = reshape(input, newShape);\n  }\n\n  var inputShape = input.shape;\n  var reps = Array.from(shape);\n\n  for (var i = shape.length - 1; i >= 0; i--) {\n    if (inputShape[i] === shape[i]) {\n      reps[i] = 1;\n    } else if (input.shape[i] !== 1) {\n      throw new Error(\"broadcastTo(): [\".concat(xShape, \"] cannot be broadcast to [\").concat(shape, \"].\"));\n    }\n  }\n\n  var axes = reps.map(function (n, i) {\n    return n > 1 ? i : -1;\n  }).filter(function (i) {\n    return i >= 0;\n  });\n\n  if (axes.length === 0) {\n    return clone(input);\n  } // TODO call broadcastTo kernel directly once backends implement broadcstTo\n\n\n  var inputs = {\n    x: input\n  };\n  var attrs = {\n    reps: reps\n  };\n  return ENGINE.runKernel(Tile, inputs, attrs);\n}\n\nexport var broadcastTo = op({\n  broadcastTo_: broadcastTo_\n});","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * Returns the dimensions in the input shape that are broadcasted to\n * produce the provided output shape.\n *\n * The returned dimensions are 0-indexed and sorted. An example:\n * inShape = [4, 1, 3]\n * outShape = [5, 4, 3, 3]\n * result = [1]. Dimension 1 (2nd dimension of input) gets broadcasted 1 => 3.\n */\nexport function getBroadcastDims(inShape, outShape) {\n  var inRank = inShape.length;\n  var dims = [];\n\n  for (var i = 0; i < inRank; i++) {\n    var dim = inRank - 1 - i;\n    var a = inShape[dim] || 1;\n    var b = outShape[outShape.length - 1 - i] || 1;\n\n    if (b > 1 && a === 1) {\n      dims.unshift(dim);\n    }\n  }\n\n  return dims;\n}\n/**\n * Returns the axes in the output space that should be reduced to produce\n * the input space.\n */\n\nexport function getReductionAxes(inShape, outShape) {\n  var result = [];\n\n  for (var i = 0; i < outShape.length; i++) {\n    var inDim = inShape[inShape.length - i - 1];\n    var outAxis = outShape.length - i - 1;\n    var outDim = outShape[outAxis];\n\n    if (inDim == null || inDim === 1 && outDim > 1) {\n      result.unshift(outAxis);\n    }\n  }\n\n  return result;\n}\nexport function assertAndGetBroadcastShape(shapeA, shapeB) {\n  var result = [];\n  var l = Math.max(shapeA.length, shapeB.length);\n\n  for (var i = 0; i < l; i++) {\n    var a = shapeA[shapeA.length - i - 1];\n\n    if (a == null) {\n      a = 1;\n    }\n\n    var b = shapeB[shapeB.length - i - 1];\n\n    if (b == null) {\n      b = 1;\n    }\n\n    if (a === 1) {\n      result.unshift(b);\n    } else if (b === 1) {\n      result.unshift(a);\n    } else if (a !== b) {\n      var errMsg = \"Operands could not be broadcast together with shapes \" + \"\".concat(shapeA, \" and \").concat(shapeB, \".\");\n      throw Error(errMsg);\n    } else {\n      result.unshift(a);\n    }\n  }\n\n  return result;\n}","/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Cast } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\n/**\n * Casts a `tf.Tensor` to a new dtype.\n *\n * ```js\n * const x = tf.tensor1d([1.5, 2.5, 3]);\n * tf.cast(x, 'int32').print();\n * ```\n * @param x The input tensor to be casted.\n * @param dtype The dtype to cast the input tensor to.\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\n\nfunction cast_(x, dtype) {\n  var $x = convertToTensor(x, 'x', 'cast'); // Sanity checks.\n\n  if (!util.isValidDtype(dtype)) {\n    throw new Error(\"Failed to cast to unknown dtype \".concat(dtype));\n  }\n\n  if (dtype === 'string' && $x.dtype !== 'string' || dtype !== 'string' && $x.dtype === 'string') {\n    throw new Error('Only strings can be casted to strings');\n  }\n\n  var inputs = {\n    x: $x\n  };\n  var attrs = {\n    dtype: dtype\n  };\n  return ENGINE.runKernel(Cast, inputs, attrs);\n}\n\nexport var cast = op({\n  cast_: cast_\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Ceil } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes ceiling of input `tf.Tensor` element-wise: `ceil(x)`\n *\n * ```js\n * const x = tf.tensor1d([.6, 1.1, -3.3]);\n *\n * x.ceil().print();  // or tf.ceil(x)\n * ```\n * @param x The input Tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\n\nfunction ceil_(x) {\n  var $x = convertToTensor(x, 'x', 'ceil');\n  var inputs = {\n    x: $x\n  };\n  return ENGINE.runKernel(Ceil, inputs);\n}\n\nexport var ceil = op({\n  ceil_: ceil_\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { ClipByValue } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\n/**\n * Clips values element-wise. `max(min(x, clipValueMax), clipValueMin)`\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 4]);\n *\n * x.clipByValue(-2, 3).print();  // or tf.clipByValue(x, -2, 3)\n * ```\n * @param x The input tensor.\n * @param clipValueMin Lower-bound of range to be clipped to.\n * @param clipValueMax Upper-bound of range to be clipped to.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\n\nfunction clipByValue_(x, clipValueMin, clipValueMax) {\n  var $x = convertToTensor(x, 'x', 'clipByValue');\n  util.assert(clipValueMin <= clipValueMax, function () {\n    return \"Error in clip: min (\".concat(clipValueMin, \") must be \") + \"less than or equal to max (\".concat(clipValueMax, \").\");\n  });\n  var inputs = {\n    x: $x\n  };\n  var attrs = {\n    clipValueMin: clipValueMin,\n    clipValueMax: clipValueMax\n  };\n  return ENGINE.runKernel(ClipByValue, inputs, attrs);\n}\n\nexport var clipByValue = op({\n  clipByValue_: clipByValue_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Identity } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Creates a new tensor with the same values and shape as the specified\n * tensor.\n *\n * ```js\n * const x = tf.tensor([1, 2]);\n *\n * x.clone().print();\n * ```\n *\n * @param x The tensor to clone.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\n\nfunction clone_(x) {\n  var $x = convertToTensor(x, 'x', 'clone', 'string_or_numeric');\n  var inputs = {\n    x: $x\n  }; // Note this op is called tf.identity in python. Hence the kernel name used\n  // here.\n\n  return ENGINE.runKernel(Identity, inputs);\n}\n\nexport var clone = op({\n  clone_: clone_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Complex } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\n/**\n * Converts two real numbers to a complex number.\n *\n * Given a tensor `real` representing the real part of a complex number, and a\n * tensor `imag` representing the imaginary part of a complex number, this\n * operation returns complex numbers elementwise of the form [r0, i0, r1, i1],\n * where r represents the real part and i represents the imag part.\n *\n * The input tensors real and imag must have the same shape.\n *\n * ```js\n * const real = tf.tensor1d([2.25, 3.25]);\n * const imag = tf.tensor1d([4.75, 5.75]);\n * const complex = tf.complex(real, imag);\n *\n * complex.print();\n * ```\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\n\nfunction complex_(real, imag) {\n  var $real = convertToTensor(real, 'real', 'complex');\n  var $imag = convertToTensor(imag, 'imag', 'complex');\n  util.assertShapesMatch($real.shape, $imag.shape, \"real and imag shapes, \".concat($real.shape, \" and \").concat($imag.shape, \", \") + \"must match in call to tf.complex().\");\n  var inputs = {\n    real: $real,\n    imag: $imag\n  };\n  return ENGINE.runKernel(Complex, inputs);\n}\n\nexport var complex = op({\n  complex_: complex_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Concat } from '../kernel_names';\nimport { convertToTensorArray } from '../tensor_util_env';\nimport { assert } from '../util';\nimport { clone } from './clone';\nimport { op } from './operation';\n/**\n * Concatenates a list of `tf.Tensor`s along a given axis.\n *\n * The tensors ranks and types must match, and their sizes must match in all\n * dimensions except `axis`.\n *\n * Also available are stricter rank-specific methods that assert that\n * `tensors` are of the given rank:\n *   - `tf.concat1d`\n *   - `tf.concat2d`\n *   - `tf.concat3d`\n *   - `tf.concat4d`\n *\n * Except `tf.concat1d` (which does not have axis param), all methods have\n * same signature as this method.\n *\n * ```js\n * const a = tf.tensor1d([1, 2]);\n * const b = tf.tensor1d([3, 4]);\n * a.concat(b).print();  // or a.concat(b)\n * ```\n *\n * ```js\n * const a = tf.tensor1d([1, 2]);\n * const b = tf.tensor1d([3, 4]);\n * const c = tf.tensor1d([5, 6]);\n * tf.concat([a, b, c]).print();\n * ```\n *\n * ```js\n * const a = tf.tensor2d([[1, 2], [10, 20]]);\n * const b = tf.tensor2d([[3, 4], [30, 40]]);\n * const axis = 1;\n * tf.concat([a, b], axis).print();\n * ```\n * @param tensors A list of tensors to concatenate.\n * @param axis The axis to concate along. Defaults to 0 (the first dim).\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\n\nfunction concat_(tensors) {\n  var axis = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  assert(tensors.length >= 1, function () {\n    return 'Pass at least one tensor to concat';\n  });\n  var $tensors = convertToTensorArray(tensors, 'tensors', 'concat', 'string_or_numeric');\n\n  if ($tensors[0].dtype === 'complex64') {\n    $tensors.forEach(function (tensor) {\n      if (tensor.dtype !== 'complex64') {\n        throw new Error(\"Cannot concatenate complex64 tensors with a tensor\\n          with dtype \".concat(tensor.dtype, \". \"));\n      }\n    });\n  }\n\n  if ($tensors.length === 1) {\n    return clone($tensors[0]);\n  }\n\n  var inputs = $tensors;\n  var attr = {\n    axis: axis\n  };\n  return ENGINE.runKernel(Concat, inputs, attr);\n}\n\nexport var concat = op({\n  concat_: concat_\n});","import { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { conv2d } from './conv2d';\nimport * as conv_util from './conv_util';\nimport { op } from './operation';\nimport { reshape } from './reshape';\n/**\n * Computes a 1D convolution over the input x.\n *\n * @param x The input tensor, of rank 3 or rank 2, of shape\n *     `[batch, width, inChannels]`. If rank 2, batch of 1 is assumed.\n * @param filter The filter, rank 3, of shape\n *     `[filterWidth, inDepth, outDepth]`.\n * @param stride The number of entries by which the filter is moved right at\n *     each step.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *   - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *          https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dataFormat An optional string from \"NWC\", \"NCW\". Defaults to \"NWC\",\n *     the data is stored in the order of [batch, in_width, in_channels]. Only\n *     \"NWC\" is currently supported.\n * @param dilation The dilation rate in which we sample input values in\n *     atrous convolution. Defaults to `1`. If it is greater than 1, then\n *     stride must be `1`.\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\n\nfunction conv1d_(x, filter, stride, pad) {\n  var dataFormat = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'NWC';\n  var dilation = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 1;\n  var dimRoundingMode = arguments.length > 6 ? arguments[6] : undefined;\n  var $x = convertToTensor(x, 'x', 'conv1d');\n  var $filter = convertToTensor(filter, 'filter', 'conv1d');\n  var x3D = $x;\n  var reshapedTo3D = false;\n\n  if ($x.rank === 2) {\n    reshapedTo3D = true;\n    x3D = reshape($x, [1, $x.shape[0], $x.shape[1]]);\n  }\n\n  util.assert(x3D.rank === 3, function () {\n    return \"Error in conv1d: input must be rank 3, but got rank \".concat(x3D.rank, \".\");\n  });\n  util.assert($filter.rank === 3, function () {\n    return \"Error in conv1d: filter must be rank 3, but got rank \" + \"\".concat($filter.rank, \".\");\n  });\n\n  if (dimRoundingMode != null) {\n    util.assert(util.isInt(pad), function () {\n      return \"Error in conv1d: pad must be an integer when using, \" + \"dimRoundingMode \".concat(dimRoundingMode, \" but got pad \").concat(pad, \".\");\n    });\n  }\n\n  util.assert(x3D.shape[2] === $filter.shape[1], function () {\n    return \"Error in conv1d: depth of input (\".concat(x3D.shape[2], \") must match \") + \"input depth for filter \".concat($filter.shape[1], \".\");\n  });\n  util.assert(conv_util.eitherStridesOrDilationsAreOne(stride, dilation), function () {\n    return 'Error in conv1D: Either stride or dilation must be 1. ' + \"Got stride \".concat(stride, \" and dilation '\").concat(dilation, \"'\");\n  });\n  util.assert(dataFormat === 'NWC', function () {\n    return \"Error in conv1d: got dataFormat of \".concat(dataFormat, \" but only NWC is currently supported.\");\n  });\n  var filter4D = reshape($filter, [1, $filter.shape[0], $filter.shape[1], $filter.shape[2]]);\n  var input4D = reshape(x3D, [x3D.shape[0], 1, x3D.shape[1], x3D.shape[2]]);\n  var strides = [1, stride];\n  var dilations = [1, dilation];\n  var conv2dDataFormat = 'NHWC';\n  var res = conv2d(input4D, filter4D, strides, pad, conv2dDataFormat, dilations, dimRoundingMode);\n\n  if (reshapedTo3D) {\n    return reshape(res, [res.shape[2], res.shape[3]]);\n  }\n\n  return reshape(res, [res.shape[0], res.shape[2], res.shape[3]]);\n}\n\nexport var conv1d = op({\n  conv1d_: conv1d_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Conv2D } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport * as conv_util from './conv_util';\nimport { op } from './operation';\nimport { reshape } from './reshape';\n/**\n * Computes a 2D convolution over the input x.\n *\n * @param x The input tensor, of rank 4 or rank 3, of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is\n * assumed.\n * @param filter The filter, rank 4, of shape\n *     `[filterHeight, filterWidth, inDepth, outDepth]`.\n * @param strides The strides of the convolution: `[strideHeight,\n * strideWidth]`.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *   - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *          https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dataFormat: An optional string from: \"NHWC\", \"NCHW\". Defaults to\n *     \"NHWC\". Specify the data format of the input and output data. With the\n *     default format \"NHWC\", the data is stored in the order of: [batch,\n *     height, width, channels].\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     in atrous convolution. Defaults to `[1, 1]`. If `dilations` is a single\n *     number, then `dilationHeight == dilationWidth`. If it is greater than\n *     1, then all values of `strides` must be 1.\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\n\nfunction conv2d_(x, filter, strides, pad) {\n  var dataFormat = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'NHWC';\n  var dilations = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : [1, 1];\n  var dimRoundingMode = arguments.length > 6 ? arguments[6] : undefined;\n  var $x = convertToTensor(x, 'x', 'conv2d');\n  var $filter = convertToTensor(filter, 'filter', 'conv2d');\n  var x4D = $x;\n  var reshapedTo4D = false;\n\n  if ($x.rank === 3) {\n    reshapedTo4D = true;\n    x4D = reshape($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n  }\n\n  util.assert(x4D.rank === 4, function () {\n    return \"Error in conv2d: input must be rank 4, but got rank \".concat(x4D.rank, \".\");\n  });\n  util.assert($filter.rank === 4, function () {\n    return \"Error in conv2d: filter must be rank 4, but got rank \" + \"\".concat($filter.rank, \".\");\n  });\n\n  if (dimRoundingMode != null) {\n    util.assert(util.isInt(pad), function () {\n      return \"Error in conv2d: pad must be an integer when using, \" + \"dimRoundingMode \".concat(dimRoundingMode, \" but got pad \").concat(pad, \".\");\n    });\n  }\n\n  var inDepth = dataFormat === 'NHWC' ? x4D.shape[3] : x4D.shape[1];\n  util.assert(inDepth === $filter.shape[2], function () {\n    return \"Error in conv2d: depth of input (\".concat(inDepth, \") must match \") + \"input depth for filter \".concat($filter.shape[2], \".\");\n  });\n  util.assert(conv_util.eitherStridesOrDilationsAreOne(strides, dilations), function () {\n    return 'Error in conv2D: Either strides or dilations must be 1. ' + \"Got strides \".concat(strides, \" and dilations '\").concat(dilations, \"'\");\n  });\n  var inputs = {\n    x: x4D,\n    filter: $filter\n  };\n  var attrs = {\n    strides: strides,\n    pad: pad,\n    dataFormat: dataFormat,\n    dilations: dilations,\n    dimRoundingMode: dimRoundingMode\n  }; // tslint:disable-next-line: no-unnecessary-type-assertion\n\n  var res = ENGINE.runKernel(Conv2D, inputs, attrs);\n\n  if (reshapedTo4D) {\n    return reshape(res, [res.shape[1], res.shape[2], res.shape[3]]);\n  }\n\n  return res;\n}\n\nexport var conv2d = op({\n  conv2d_: conv2d_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Conv2DBackpropFilter } from '../kernel_names';\nimport * as util from '../util';\nimport { op } from './operation';\nimport { reshape } from './reshape';\n/**\n * Computes the derivative of the filter of a 2D convolution.\n *\n * @param x The input tensor, of rank 4 or rank 3 of shape\n *     [batch, height, width, inChannels]. If rank 3, batch of 1 is assumed.\n * @param dy The dy image, of rank 4 or rank 3, of shape\n *     [batch, height, width, outDepth]. If rank 3, batch of 1 is assumed.\n * @param filterShape The shape of the filter, length 4,\n *     [filterHeight, filterWidth, inDepth, outDepth].\n * @param strides The strides of the convolution: [strideHeight,\n * strideWidth].\n * @param pad A string from: 'same', 'valid'. The type of padding algorithm\n *     used in the forward prop of the op.\n * @param dataFormat: An optional string from: \"NHWC\", \"NCHW\". Defaults to\n *     \"NHWC\". Specify the data format of the input and output data. With the\n *     default format \"NHWC\", the data is stored in the order of: [batch,\n *     height, width, channels].\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n */\n\nfunction conv2DBackpropFilter_(x, dy, filterShape, strides, pad) {\n  var dataFormat = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 'NHWC';\n  var dimRoundingMode = arguments.length > 6 ? arguments[6] : undefined;\n  var x4D = x;\n\n  if (x.rank === 3) {\n    x4D = reshape(x, [1, x.shape[0], x.shape[1], x.shape[2]]);\n  }\n\n  var dy4D = dy;\n\n  if (dy4D.rank === 3) {\n    dy4D = reshape(dy, [1, dy.shape[0], dy.shape[1], dy.shape[2]]);\n  }\n\n  util.assert(x4D.rank === 4, function () {\n    return \"Error in conv2dDerFilter: input must be rank 4, but got shape \" + \"\".concat(x4D.shape, \".\");\n  });\n  util.assert(dy4D.rank === 4, function () {\n    return \"Error in conv2dDerFilter: dy must be rank 4, but got shape \" + \"\".concat(dy4D.shape, \".\");\n  });\n  util.assert(filterShape.length === 4, function () {\n    return \"Error in conv2dDerFilter: filterShape must be length 4, but got \" + \"\".concat(filterShape, \".\");\n  });\n  var inDepth = dataFormat === 'NHWC' ? x4D.shape[3] : x4D.shape[1];\n  var outDepth = dataFormat === 'NHWC' ? dy4D.shape[3] : dy4D.shape[1];\n  util.assert(inDepth === filterShape[2], function () {\n    return \"Error in conv2dDerFilter: depth of input \".concat(inDepth, \") must \") + \"match input depth in filter (\".concat(filterShape[2], \".\");\n  });\n  util.assert(outDepth === filterShape[3], function () {\n    return \"Error in conv2dDerFilter: depth of dy (\".concat(outDepth, \") must \") + \"match output depth for filter (\".concat(filterShape[3], \").\");\n  });\n\n  if (dimRoundingMode != null) {\n    util.assert(util.isInt(pad), function () {\n      return \"Error in conv2dDerFilter: pad must be an integer when using, \" + \"dimRoundingMode \".concat(dimRoundingMode, \" but got pad \").concat(pad, \".\");\n    });\n  }\n\n  var inputs = {\n    x: x4D,\n    dy: dy4D\n  };\n  var attrs = {\n    strides: strides,\n    pad: pad,\n    dataFormat: dataFormat,\n    dimRoundingMode: dimRoundingMode,\n    filterShape: filterShape\n  }; // tslint:disable-next-line: no-unnecessary-type-assertion\n\n  return ENGINE.runKernel(Conv2DBackpropFilter, inputs, attrs);\n}\n\nexport var conv2DBackpropFilter = op({\n  conv2DBackpropFilter_: conv2DBackpropFilter_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Conv2DBackpropInput } from '../kernel_names';\nimport * as util from '../util';\nimport { op } from './operation';\nimport { reshape } from './reshape';\n/**\n * Computes the derivative of the input of a 2D convolution.\n *\n * @param xShape The shape of the input: [batch, height, width, inDepth].\n * If length of 3, batch of 1 is assumed.\n * @param dy The derivative of the output, of rank 4 or rank 3 of shape\n *   `[batch, outHeight, outWidth, outDepth]`. If rank 3, batch of 1 is\n * assumed.\n * @param filter The filter, rank 4, of shape\n *     `[filterHeight, filterWidth, inDepth, outDepth]`.\n * @param strides The strides of the convolution: `[strideHeight,\n * strideWidth]`.\n * @param pad The type of padding algorithm used:\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n * @param dataFormat: An optional string from: \"NHWC\", \"NCHW\". Defaults to\n *     \"NHWC\". Specify the data format of the input and output data. With the\n *     default format \"NHWC\", the data is stored in the order of: [batch,\n *     height, width, channels].\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n */\n\nfunction conv2DBackpropInput_(xShape, dy, filter, strides, pad) {\n  var dataFormat = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 'NHWC';\n  var dimRoundingMode = arguments.length > 6 ? arguments[6] : undefined;\n  util.assert(xShape.length === dy.rank, function () {\n    return \"Length of inShape \" + \"(\".concat(xShape.length, \") and rank of dy (\").concat(dy.rank, \") must match\");\n  });\n  var xShape4D = xShape;\n  var dy4D = dy;\n  var reshapedTo4D = false;\n\n  if (dy.rank === 3) {\n    reshapedTo4D = true;\n    dy4D = reshape(dy, [1, dy.shape[0], dy.shape[1], dy.shape[2]]);\n    xShape4D = [1, xShape[0], xShape[1], xShape[2]];\n  }\n\n  util.assert(xShape4D.length === 4, function () {\n    return \"Error in conv2dDerInput: inShape must be length 4, but got length \" + \"\".concat(xShape4D.length, \".\");\n  });\n  util.assert(dy4D.rank === 4, function () {\n    return \"Error in conv2dDerInput: dy must be rank 4, but got \" + \"rank \".concat(dy4D.rank);\n  });\n  util.assert(filter.rank === 4, function () {\n    return \"Error in conv2dDerInput: filter must be rank 4, but got \" + \"rank \".concat(filter.rank);\n  });\n  var inDepth = dataFormat === 'NHWC' ? xShape4D[3] : xShape4D[1];\n  var outDepth = dataFormat === 'NHWC' ? dy4D.shape[3] : dy4D.shape[1];\n  util.assert(inDepth === filter.shape[2], function () {\n    return \"Error in conv2dDerInput: depth of input (\".concat(inDepth, \") must \") + \"match input depth for filter \".concat(filter.shape[2], \".\");\n  });\n  util.assert(outDepth === filter.shape[3], function () {\n    return \"Error in conv2dDerInput: depth of output (\".concat(outDepth, \") must \") + \"match output depth for filter \".concat(filter.shape[3], \".\");\n  });\n\n  if (dimRoundingMode != null) {\n    util.assert(util.isInt(pad), function () {\n      return \"Error in conv2dDerInput: pad must be an integer when using, \" + \"dimRoundingMode \".concat(dimRoundingMode, \" but got pad \").concat(pad, \".\");\n    });\n  }\n\n  var inputs = {\n    dy: dy4D,\n    filter: filter\n  };\n  var attrs = {\n    strides: strides,\n    pad: pad,\n    dataFormat: dataFormat,\n    dimRoundingMode: dimRoundingMode,\n    inputShape: xShape4D\n  }; // tslint:disable-next-line: no-unnecessary-type-assertion\n\n  var res = ENGINE.runKernel(Conv2DBackpropInput, inputs, attrs);\n\n  if (reshapedTo4D) {\n    return reshape(res, [res.shape[1], res.shape[2], res.shape[3]]);\n  }\n\n  return res;\n}\n\nexport var conv2DBackpropInput = op({\n  conv2DBackpropInput_: conv2DBackpropInput_\n});","import { convertToTensor } from '../tensor_util_env';\nimport { conv2DBackpropInput } from './conv2d_backprop_input';\nimport { op } from './operation';\n/**\n * Computes the transposed 2D convolution of an image, also known as a\n * deconvolution.\n *\n * @param x The input image, of rank 4 or rank 3, of shape\n *   `[batch, height, width, inDepth]`. If rank 3, batch of 1 is assumed.\n * @param filter The filter, rank 4, of shape\n *     `[filterHeight, filterWidth, outDepth, inDepth]`.\n *     `inDepth` must match `inDepth` in `x`.\n * @param outputShape Output shape, of rank 4 or rank 3:\n *     `[batch, height, width, outDepth]`. If rank 3, batch of 1 is assumed.\n * @param strides The strides of the original convolution:\n *     `[strideHeight, strideWidth]`.\n * @param pad  The type of padding algorithm used in the non-transpose version\n *    of the op.\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\n\nfunction conv2dTranspose_(x, filter, outputShape, strides, pad, dimRoundingMode) {\n  var $x = convertToTensor(x, 'x', 'conv2dTranspose');\n  var $filter = convertToTensor(filter, 'filter', 'conv2dTranspose');\n  return conv2DBackpropInput(outputShape, $x, $filter, strides, pad, 'NHWC', dimRoundingMode);\n}\n\nexport var conv2dTranspose = op({\n  conv2dTranspose_: conv2dTranspose_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Conv3DBackpropInputV2 } from '../kernel_names';\nimport * as util from '../util';\nimport { op } from './operation';\nimport { reshape } from './reshape';\n/**\n * Computes the derivative of the input of a 3D convolution.\n *\n * @param xShape The shape of the input: [batch, depth, height, width,\n * in_channels]. If length of 4, batch of 1 is assumed.\n * @param dy The derivative of the output, of rank 5 or rank 4 of shape\n *   `[batch, outDepth, outHeight, outWidth, in_channels]`.\n * If rank 4, batch of 1 is assumed.\n * @param filter The filter, rank 5, of shape\n *     `[filterDepth, filterHeight, filterWidth, inDepth, outDepth]`.\n * @param strides The strides of the convolution: `[strideDepth, strideHeight,\n * strideWidth]`.\n * @param pad The type of padding algorithm used:\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n */\n\nfunction conv3DBackpropInput_(xShape, dy, filter, strides, pad) {\n  util.assert(xShape.length === dy.rank, function () {\n    return \"Length of inShape \" + \"(\".concat(xShape.length, \") and rank of dy (\").concat(dy.rank, \") must match\");\n  });\n  var xShape5D = xShape;\n  var dy5D = dy;\n  var reshapedTo5D = false;\n\n  if (dy.rank === 4) {\n    reshapedTo5D = true;\n    dy5D = reshape(dy, [1, dy.shape[0], dy.shape[1], dy.shape[2], dy.shape[3]]);\n    xShape5D = [1, xShape[0], xShape[1], xShape[2], xShape[3]];\n  }\n\n  var inDepth = xShape5D[4];\n  var outDepth = dy5D.shape[4];\n  util.assert(xShape5D.length === 5, function () {\n    return \"Error in conv3dDerInput: inShape must be length 5, but got length \" + \"\".concat(xShape5D.length, \".\");\n  });\n  util.assert(dy5D.rank === 5, function () {\n    return \"Error in conv3dDerInput: dy must be rank 5, but got \" + \"rank \".concat(dy5D.rank);\n  });\n  util.assert(filter.rank === 5, function () {\n    return \"Error in conv3dDerInput: filter must be rank 5, but got \" + \"rank \".concat(filter.rank);\n  });\n  util.assert(inDepth === filter.shape[3], function () {\n    return \"Error in conv3dDerInput: depth of input (\".concat(inDepth, \") must \") + \"match input depth for filter \".concat(filter.shape[3], \".\");\n  });\n  util.assert(outDepth === filter.shape[4], function () {\n    return \"Error in conv3dDerInput: depth of output (\".concat(outDepth, \") must \") + \"match output depth for filter \".concat(filter.shape[4], \".\");\n  });\n  var inputs = {\n    dy: dy5D,\n    filter: filter\n  };\n  var attrs = {\n    pad: pad,\n    strides: strides,\n    inputShape: xShape5D\n  }; // tslint:disable-next-line: no-unnecessary-type-assertion\n\n  var res = ENGINE.runKernel(Conv3DBackpropInputV2, inputs, attrs);\n\n  if (reshapedTo5D) {\n    return reshape(res, [res.shape[1], res.shape[2], res.shape[3], res.shape[4]]);\n  }\n\n  return res;\n}\n\nexport var conv3DBackpropInput = op({\n  conv3DBackpropInput_: conv3DBackpropInput_\n});","import _slicedToArray from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n *\n * @param inputShape Input tensor shape is of the following dimensions:\n *     `[batch, height, width, inChannels]`.\n * @param filterShape The filter shape is of the following dimensions:\n *     `[filterHeight, filterWidth, depth]`.\n * @param strides The strides of the sliding window for each dimension of the\n *     input tensor: `[strideHeight, strideWidth]`.\n *     If `strides` is a single number,\n *     then `strideHeight == strideWidth`.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1*1x1.\n *    - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *          https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dataFormat The data format of the input and output data.\n *     Defaults to 'NHWC'.\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`.\n *     Defaults to `[1, 1]`. If `dilations` is a single number, then\n *     `dilationHeight == dilationWidth`.\n */\nexport function computeDilation2DInfo(inputShape, filterShape, strides, pad) {\n  var dataFormat = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'NHWC';\n  var dilations = arguments.length > 5 ? arguments[5] : undefined;\n  // `computerConv2DInfo` require filterShape to be in the dimension of:\n  // `[filterHeight, filterWidth, depth, outDepth]`, dilation2d doesn't have\n  // outDepth, it should have the same depth as the input.\n  // Input shape: [batch, height, width, inChannels]\n  var inputChannels = inputShape[3];\n  var $filterShape = [].concat(_toConsumableArray(filterShape), [inputChannels]);\n  var $dataFormat = convertConv2DDataFormat(dataFormat);\n  return computeConv2DInfo(inputShape, $filterShape, strides, dilations, pad, null\n  /* roundingMode */\n  , null\n  /* depthWise */\n  , $dataFormat);\n}\nexport function computePool2DInfo(inShape, filterSize, strides, dilations, pad, roundingMode) {\n  var dataFormat = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 'channelsLast';\n\n  var _parseTupleParam = parseTupleParam(filterSize),\n      _parseTupleParam2 = _slicedToArray(_parseTupleParam, 2),\n      filterHeight = _parseTupleParam2[0],\n      filterWidth = _parseTupleParam2[1];\n\n  var filterShape;\n\n  if (dataFormat === 'channelsLast') {\n    filterShape = [filterHeight, filterWidth, inShape[3], inShape[3]];\n  } else if (dataFormat === 'channelsFirst') {\n    filterShape = [filterHeight, filterWidth, inShape[1], inShape[1]];\n  } else {\n    throw new Error(\"Unknown dataFormat \".concat(dataFormat));\n  }\n\n  return computeConv2DInfo(inShape, filterShape, strides, dilations, pad, roundingMode, false, dataFormat);\n}\n/**\n * Computes the information for a forward pass of a pooling3D operation.\n */\n\nexport function computePool3DInfo(inShape, filterSize, strides, dilations, pad, roundingMode) {\n  var dataFormat = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 'NDHWC';\n\n  var _parse3TupleParam = parse3TupleParam(filterSize),\n      _parse3TupleParam2 = _slicedToArray(_parse3TupleParam, 3),\n      filterDepth = _parse3TupleParam2[0],\n      filterHeight = _parse3TupleParam2[1],\n      filterWidth = _parse3TupleParam2[2];\n\n  var filterShape;\n  var $dataFormat;\n\n  if (dataFormat === 'NDHWC') {\n    $dataFormat = 'channelsLast';\n    filterShape = [filterDepth, filterHeight, filterWidth, inShape[4], inShape[4]];\n  } else if (dataFormat === 'NCDHW') {\n    $dataFormat = 'channelsFirst';\n    filterShape = [filterDepth, filterHeight, filterWidth, inShape[1], inShape[1]];\n  } else {\n    throw new Error(\"Unknown dataFormat \".concat(dataFormat));\n  }\n\n  return computeConv3DInfo(inShape, filterShape, strides, dilations, pad, false, $dataFormat, roundingMode);\n}\n/**\n * Computes the information for a forward pass of a convolution/pooling\n * operation.\n */\n\nexport function computeConv2DInfo(inShape, filterShape, strides, dilations, pad, roundingMode) {\n  var depthwise = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;\n  var dataFormat = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 'channelsLast';\n  var batchSize = -1,\n      inHeight = -1,\n      inWidth = -1,\n      inChannels = -1;\n\n  if (dataFormat === 'channelsLast') {\n    var _inShape = _slicedToArray(inShape, 4);\n\n    batchSize = _inShape[0];\n    inHeight = _inShape[1];\n    inWidth = _inShape[2];\n    inChannels = _inShape[3];\n  } else if (dataFormat === 'channelsFirst') {\n    var _inShape2 = _slicedToArray(inShape, 4);\n\n    batchSize = _inShape2[0];\n    inChannels = _inShape2[1];\n    inHeight = _inShape2[2];\n    inWidth = _inShape2[3];\n  } else {\n    throw new Error(\"Unknown dataFormat \".concat(dataFormat));\n  }\n\n  var _filterShape = _slicedToArray(filterShape, 4),\n      filterHeight = _filterShape[0],\n      filterWidth = _filterShape[1],\n      filterChannels = _filterShape[3];\n\n  var _parseTupleParam3 = parseTupleParam(strides),\n      _parseTupleParam4 = _slicedToArray(_parseTupleParam3, 2),\n      strideHeight = _parseTupleParam4[0],\n      strideWidth = _parseTupleParam4[1];\n\n  var _parseTupleParam5 = parseTupleParam(dilations),\n      _parseTupleParam6 = _slicedToArray(_parseTupleParam5, 2),\n      dilationHeight = _parseTupleParam6[0],\n      dilationWidth = _parseTupleParam6[1];\n\n  var effectiveFilterHeight = getEffectiveFilterSize(filterHeight, dilationHeight);\n  var effectiveFilterWidth = getEffectiveFilterSize(filterWidth, dilationWidth);\n\n  var _getPadAndOutInfo = getPadAndOutInfo(pad, inHeight, inWidth, strideHeight, strideWidth, effectiveFilterHeight, effectiveFilterWidth, roundingMode, dataFormat),\n      padInfo = _getPadAndOutInfo.padInfo,\n      outHeight = _getPadAndOutInfo.outHeight,\n      outWidth = _getPadAndOutInfo.outWidth;\n\n  var outChannels = depthwise ? filterChannels * inChannels : filterChannels;\n  var outShape;\n\n  if (dataFormat === 'channelsFirst') {\n    outShape = [batchSize, outChannels, outHeight, outWidth];\n  } else if (dataFormat === 'channelsLast') {\n    outShape = [batchSize, outHeight, outWidth, outChannels];\n  }\n\n  return {\n    batchSize: batchSize,\n    dataFormat: dataFormat,\n    inHeight: inHeight,\n    inWidth: inWidth,\n    inChannels: inChannels,\n    outHeight: outHeight,\n    outWidth: outWidth,\n    outChannels: outChannels,\n    padInfo: padInfo,\n    strideHeight: strideHeight,\n    strideWidth: strideWidth,\n    filterHeight: filterHeight,\n    filterWidth: filterWidth,\n    effectiveFilterHeight: effectiveFilterHeight,\n    effectiveFilterWidth: effectiveFilterWidth,\n    dilationHeight: dilationHeight,\n    dilationWidth: dilationWidth,\n    inShape: inShape,\n    outShape: outShape,\n    filterShape: filterShape\n  };\n}\n/**\n * Computes the information for a forward pass of a 3D convolution/pooling\n * operation.\n */\n\nexport function computeConv3DInfo(inShape, filterShape, strides, dilations, pad) {\n  var depthwise = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n  var dataFormat = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 'channelsLast';\n  var roundingMode = arguments.length > 7 ? arguments[7] : undefined;\n  var batchSize = -1,\n      inDepth = -1,\n      inHeight = -1,\n      inWidth = -1,\n      inChannels = -1;\n\n  if (dataFormat === 'channelsLast') {\n    var _inShape3 = _slicedToArray(inShape, 5);\n\n    batchSize = _inShape3[0];\n    inDepth = _inShape3[1];\n    inHeight = _inShape3[2];\n    inWidth = _inShape3[3];\n    inChannels = _inShape3[4];\n  } else if (dataFormat === 'channelsFirst') {\n    var _inShape4 = _slicedToArray(inShape, 5);\n\n    batchSize = _inShape4[0];\n    inChannels = _inShape4[1];\n    inDepth = _inShape4[2];\n    inHeight = _inShape4[3];\n    inWidth = _inShape4[4];\n  } else {\n    throw new Error(\"Unknown dataFormat \".concat(dataFormat));\n  }\n\n  var _filterShape2 = _slicedToArray(filterShape, 5),\n      filterDepth = _filterShape2[0],\n      filterHeight = _filterShape2[1],\n      filterWidth = _filterShape2[2],\n      filterChannels = _filterShape2[4];\n\n  var _parse3TupleParam3 = parse3TupleParam(strides),\n      _parse3TupleParam4 = _slicedToArray(_parse3TupleParam3, 3),\n      strideDepth = _parse3TupleParam4[0],\n      strideHeight = _parse3TupleParam4[1],\n      strideWidth = _parse3TupleParam4[2];\n\n  var _parse3TupleParam5 = parse3TupleParam(dilations),\n      _parse3TupleParam6 = _slicedToArray(_parse3TupleParam5, 3),\n      dilationDepth = _parse3TupleParam6[0],\n      dilationHeight = _parse3TupleParam6[1],\n      dilationWidth = _parse3TupleParam6[2];\n\n  var effectiveFilterDepth = getEffectiveFilterSize(filterDepth, dilationDepth);\n  var effectiveFilterHeight = getEffectiveFilterSize(filterHeight, dilationHeight);\n  var effectiveFilterWidth = getEffectiveFilterSize(filterWidth, dilationWidth);\n\n  var _get3DPadAndOutInfo = get3DPadAndOutInfo(pad, inDepth, inHeight, inWidth, strideDepth, strideHeight, strideWidth, effectiveFilterDepth, effectiveFilterHeight, effectiveFilterWidth, roundingMode),\n      padInfo = _get3DPadAndOutInfo.padInfo,\n      outDepth = _get3DPadAndOutInfo.outDepth,\n      outHeight = _get3DPadAndOutInfo.outHeight,\n      outWidth = _get3DPadAndOutInfo.outWidth;\n\n  var outChannels = depthwise ? filterChannels * inChannels : filterChannels;\n  var outShape;\n\n  if (dataFormat === 'channelsFirst') {\n    outShape = [batchSize, outChannels, outDepth, outHeight, outWidth];\n  } else if (dataFormat === 'channelsLast') {\n    outShape = [batchSize, outDepth, outHeight, outWidth, outChannels];\n  }\n\n  return {\n    batchSize: batchSize,\n    dataFormat: dataFormat,\n    inDepth: inDepth,\n    inHeight: inHeight,\n    inWidth: inWidth,\n    inChannels: inChannels,\n    outDepth: outDepth,\n    outHeight: outHeight,\n    outWidth: outWidth,\n    outChannels: outChannels,\n    padInfo: padInfo,\n    strideDepth: strideDepth,\n    strideHeight: strideHeight,\n    strideWidth: strideWidth,\n    filterDepth: filterDepth,\n    filterHeight: filterHeight,\n    filterWidth: filterWidth,\n    effectiveFilterDepth: effectiveFilterDepth,\n    effectiveFilterHeight: effectiveFilterHeight,\n    effectiveFilterWidth: effectiveFilterWidth,\n    dilationDepth: dilationDepth,\n    dilationHeight: dilationHeight,\n    dilationWidth: dilationWidth,\n    inShape: inShape,\n    outShape: outShape,\n    filterShape: filterShape\n  };\n}\n\nfunction computeOutputShape2D(inShape, fieldSize, stride, zeroPad, roundingMode) {\n  if (zeroPad == null) {\n    zeroPad = computeDefaultPad(inShape, fieldSize, stride);\n  }\n\n  var inputRows = inShape[0];\n  var inputCols = inShape[1];\n  var outputRows = round((inputRows - fieldSize + 2 * zeroPad) / stride + 1, roundingMode);\n  var outputCols = round((inputCols - fieldSize + 2 * zeroPad) / stride + 1, roundingMode);\n  return [outputRows, outputCols];\n}\n\nfunction computeOutputShape4D(inShape, fieldSize, outChannels, stride, zeroPad, roundingMode) {\n  if (zeroPad == null) {\n    zeroPad = computeDefaultPad(inShape, fieldSize, stride);\n  }\n\n  var inputDepth = inShape[0];\n  var inputRows = inShape[1];\n  var inputCols = inShape[2];\n  var outputDepths = round((inputDepth - fieldSize + 2 * zeroPad) / stride + 1, roundingMode);\n  var outputRows = round((inputRows - fieldSize + 2 * zeroPad) / stride + 1, roundingMode);\n  var outputCols = round((inputCols - fieldSize + 2 * zeroPad) / stride + 1, roundingMode);\n  return [outputDepths, outputRows, outputCols, outChannels];\n}\n\nexport function computeDefaultPad(inputShape, fieldSize, stride) {\n  var dilation = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n  var effectiveFieldSize = getEffectiveFilterSize(fieldSize, dilation);\n  return Math.floor((inputShape[0] * (stride - 1) - stride + effectiveFieldSize) / 2);\n}\n\nfunction parseTupleParam(param) {\n  if (typeof param === 'number') {\n    return [param, param, param];\n  }\n\n  if (param.length === 2) {\n    return [param[0], param[1], 1];\n  }\n\n  return param;\n}\n\nfunction parse3TupleParam(param) {\n  return typeof param === 'number' ? [param, param, param] : param;\n}\n/* See https://www.tensorflow.org/api_docs/python/tf/nn/atrous_conv2d\n * Atrous convolution is equivalent to standard convolution with upsampled\n * filters with effective_filter_height =\n * filter_height + (filter_height - 1) * (dilation - 1)\n * and effective_filter_width =\n * filter_width + (filter_width - 1) * (dilation - 1),\n * produced by inserting dilation - 1 zeros along consecutive elements across\n * the filters' spatial dimensions.\n * When there is a dilation, this converts a filter dimension to the\n * effective filter dimension, so it can be used in a standard convolution.\n */\n\n\nfunction getEffectiveFilterSize(filterSize, dilation) {\n  if (dilation <= 1) {\n    return filterSize;\n  }\n\n  return filterSize + (filterSize - 1) * (dilation - 1);\n}\n\nfunction getPadAndOutInfo(pad, inHeight, inWidth, strideHeight, strideWidth, filterHeight, filterWidth, roundingMode, dataFormat) {\n  var padInfo;\n  var outHeight;\n  var outWidth;\n\n  if (typeof pad === 'number') {\n    var padType = pad === 0 ? 'VALID' : 'NUMBER';\n    padInfo = {\n      top: pad,\n      bottom: pad,\n      left: pad,\n      right: pad,\n      type: padType\n    };\n    var outShape = computeOutputShape2D([inHeight, inWidth], filterHeight, strideHeight, pad, roundingMode);\n    outHeight = outShape[0];\n    outWidth = outShape[1];\n  } else if (pad === 'same') {\n    outHeight = Math.ceil(inHeight / strideHeight);\n    outWidth = Math.ceil(inWidth / strideWidth);\n    var padAlongHeight = Math.max(0, (outHeight - 1) * strideHeight + filterHeight - inHeight);\n    var padAlongWidth = Math.max(0, (outWidth - 1) * strideWidth + filterWidth - inWidth);\n    var top = Math.floor(padAlongHeight / 2);\n    var bottom = padAlongHeight - top;\n    var left = Math.floor(padAlongWidth / 2);\n    var right = padAlongWidth - left;\n    padInfo = {\n      top: top,\n      bottom: bottom,\n      left: left,\n      right: right,\n      type: 'SAME'\n    };\n  } else if (pad === 'valid') {\n    padInfo = {\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      type: 'VALID'\n    };\n    outHeight = Math.ceil((inHeight - filterHeight + 1) / strideHeight);\n    outWidth = Math.ceil((inWidth - filterWidth + 1) / strideWidth);\n  } else if (typeof pad === 'object') {\n    var _top = dataFormat === 'channelsLast' ? pad[1][0] : pad[2][0];\n\n    var _bottom = dataFormat === 'channelsLast' ? pad[1][1] : pad[2][1];\n\n    var _left = dataFormat === 'channelsLast' ? pad[2][0] : pad[3][0];\n\n    var _right = dataFormat === 'channelsLast' ? pad[2][1] : pad[3][1];\n\n    var _padType = _top === 0 && _bottom === 0 && _left === 0 && _right === 0 ? 'VALID' : 'EXPLICIT';\n\n    padInfo = {\n      top: _top,\n      bottom: _bottom,\n      left: _left,\n      right: _right,\n      type: _padType\n    };\n    outHeight = round((inHeight - filterHeight + _top + _bottom) / strideHeight + 1, roundingMode);\n    outWidth = round((inWidth - filterWidth + _left + _right) / strideWidth + 1, roundingMode);\n  } else {\n    throw Error(\"Unknown padding parameter: \".concat(pad));\n  }\n\n  return {\n    padInfo: padInfo,\n    outHeight: outHeight,\n    outWidth: outWidth\n  };\n}\n\nfunction get3DPadAndOutInfo(pad, inDepth, inHeight, inWidth, strideDepth, strideHeight, strideWidth, filterDepth, filterHeight, filterWidth, roundingMode) {\n  var padInfo;\n  var outDepth;\n  var outHeight;\n  var outWidth;\n\n  if (typeof pad === 'number') {\n    var padType = pad === 0 ? 'VALID' : 'NUMBER';\n    padInfo = {\n      top: pad,\n      bottom: pad,\n      left: pad,\n      right: pad,\n      front: pad,\n      back: pad,\n      type: padType\n    };\n    var outShape = computeOutputShape4D([inDepth, inHeight, inWidth, 1], filterDepth, 1, strideDepth, pad, roundingMode);\n    outDepth = outShape[0];\n    outHeight = outShape[1];\n    outWidth = outShape[2];\n  } else if (pad === 'same') {\n    outDepth = Math.ceil(inDepth / strideDepth);\n    outHeight = Math.ceil(inHeight / strideHeight);\n    outWidth = Math.ceil(inWidth / strideWidth);\n    var padAlongDepth = (outDepth - 1) * strideDepth + filterDepth - inDepth;\n    var padAlongHeight = (outHeight - 1) * strideHeight + filterHeight - inHeight;\n    var padAlongWidth = (outWidth - 1) * strideWidth + filterWidth - inWidth;\n    var front = Math.floor(padAlongDepth / 2);\n    var back = padAlongDepth - front;\n    var top = Math.floor(padAlongHeight / 2);\n    var bottom = padAlongHeight - top;\n    var left = Math.floor(padAlongWidth / 2);\n    var right = padAlongWidth - left;\n    padInfo = {\n      top: top,\n      bottom: bottom,\n      left: left,\n      right: right,\n      front: front,\n      back: back,\n      type: 'SAME'\n    };\n  } else if (pad === 'valid') {\n    padInfo = {\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      front: 0,\n      back: 0,\n      type: 'VALID'\n    };\n    outDepth = Math.ceil((inDepth - filterDepth + 1) / strideDepth);\n    outHeight = Math.ceil((inHeight - filterHeight + 1) / strideHeight);\n    outWidth = Math.ceil((inWidth - filterWidth + 1) / strideWidth);\n  } else {\n    throw Error(\"Unknown padding parameter: \".concat(pad));\n  }\n\n  return {\n    padInfo: padInfo,\n    outDepth: outDepth,\n    outHeight: outHeight,\n    outWidth: outWidth\n  };\n}\n/**\n * Rounds a value depending on the rounding mode\n * @param value\n * @param roundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n */\n\n\nfunction round(value, roundingMode) {\n  if (!roundingMode) {\n    return Math.trunc(value);\n  }\n\n  switch (roundingMode) {\n    case 'round':\n      // used for Caffe Conv\n      return Math.round(value);\n\n    case 'ceil':\n      // used for Caffe Pool\n      return Math.ceil(value);\n\n    case 'floor':\n      return Math.floor(value);\n\n    default:\n      throw new Error(\"Unknown roundingMode \".concat(roundingMode));\n  }\n}\n\nexport function tupleValuesAreOne(param) {\n  var _parseTupleParam7 = parseTupleParam(param),\n      _parseTupleParam8 = _slicedToArray(_parseTupleParam7, 3),\n      dimA = _parseTupleParam8[0],\n      dimB = _parseTupleParam8[1],\n      dimC = _parseTupleParam8[2];\n\n  return dimA === 1 && dimB === 1 && dimC === 1;\n}\nexport function eitherStridesOrDilationsAreOne(strides, dilations) {\n  return tupleValuesAreOne(strides) || tupleValuesAreOne(dilations);\n}\n/**\n * Convert Conv2D dataFormat from 'NHWC'|'NCHW' to\n *    'channelsLast'|'channelsFirst'\n * @param dataFormat in 'NHWC'|'NCHW' mode\n * @return dataFormat in 'channelsLast'|'channelsFirst' mode\n * @throws unknown dataFormat\n */\n\nexport function convertConv2DDataFormat(dataFormat) {\n  if (dataFormat === 'NHWC') {\n    return 'channelsLast';\n  } else if (dataFormat === 'NCHW') {\n    return 'channelsFirst';\n  } else {\n    throw new Error(\"Unknown dataFormat \".concat(dataFormat));\n  }\n}","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Cos } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes cos of the input `tf.Tensor` element-wise: `cos(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, Math.PI / 2, Math.PI * 3 / 4]);\n *\n * x.cos().print();  // or tf.cos(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\n\nfunction cos_(x) {\n  var $x = convertToTensor(x, 'x', 'cos');\n  var inputs = {\n    x: $x\n  };\n  return ENGINE.runKernel(Cos, inputs);\n}\n\nexport var cos = op({\n  cos_: cos_\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Cosh } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes hyperbolic cos of the input `tf.Tensor` element-wise: `cosh(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, .7]);\n *\n * x.cosh().print();  // or tf.cosh(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\n\nfunction cosh_(x) {\n  var $x = convertToTensor(x, 'x', 'cosh');\n  var inputs = {\n    x: $x\n  };\n  return ENGINE.runKernel(Cosh, inputs);\n}\n\nexport var cosh = op({\n  cosh_: cosh_\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Cumsum } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes the cumulative sum of a `tf.Tensor` along `axis`.\n *\n * ```js\n * const x = tf.tensor([1, 2, 3, 4]);\n * x.cumsum().print();\n * ```\n * ```js\n * const x = tf.tensor([[1, 2], [3, 4]]);\n * x.cumsum().print();\n * ```\n *\n * @param x The input tensor to be summed.\n * @param axis The axis along which to sum. Optional. Defaults to 0.\n * @param exclusive Whether to perform exclusive cumulative sum. Optional.\n *     Defaults to false. If set to true then the sum of each tensor entry\n *     does not include its own value, but only the values previous to it\n *     along the specified axis.\n * @param reverse Whether to sum in the opposite direction. Optional.\n *     Defaults to false.\n *\n * @doc {heading: 'Operations', subheading: 'Scan'}\n */\n\nfunction cumsum_(x) {\n  var axis = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var exclusive = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var reverse = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var $x = convertToTensor(x, 'x', 'cumsum');\n  var inputs = {\n    x: $x\n  };\n  var attrs = {\n    axis: axis,\n    exclusive: exclusive,\n    reverse: reverse\n  };\n  return ENGINE.runKernel(Cumsum, inputs, attrs);\n}\n\nexport var cumsum = op({\n  cumsum_: cumsum_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { DepthToSpace } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\n/**\n * Rearranges data from depth into blocks of spatial data. More specifically,\n * this op outputs a copy of the input tensor where values from the `depth`\n * dimension are moved in spatial blocks to the `height` and `width` dimensions.\n * The attr `blockSize` indicates the input block size and how the data is\n * moved.\n *\n *  - Chunks of data of size `blockSize * blockSize` from depth are rearranged\n * into non-overlapping blocks of size `blockSize x blockSize`\n *\n *  - The width the output tensor is `inputWidth * blockSize`, whereas the\n * height is `inputHeight * blockSize`\n *\n *  - The Y, X coordinates within each block of the output image are determined\n * by the high order component of the input channel index\n *\n *  - The depth of the input tensor must be divisible by `blockSize *\n * blockSize`\n *\n * The `dataFormat` attr specifies the layout of the input and output tensors\n * with the following options: \"NHWC\": [ `batch, height, width, channels` ]\n * \"NCHW\": [ `batch, channels, height, width` ]\n *\n * ```js\n * const x = tf.tensor4d([1, 2, 3, 4], [1, 1, 1, 4]);\n * const blockSize = 2;\n * const dataFormat = \"NHWC\";\n *\n * tf.depthToSpace(x, blockSize, dataFormat).print();\n * ```\n *\n * @param x The input tensor of rank 4\n * @param blockSIze  An `int` that is `>= 2`. The size of the spatial block\n * @param dataFormat An optional string from: \"NHWC\", \"NCHW\". Defaults to \"NHWC\"\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\n\nfunction depthToSpace_(x, blockSize) {\n  var dataFormat = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'NHWC';\n  var $x = convertToTensor(x, 'x', 'depthToSpace');\n  var inputHeight = dataFormat === 'NHWC' ? $x.shape[1] : $x.shape[2];\n  var inputWidth = dataFormat === 'NHWC' ? $x.shape[2] : $x.shape[3];\n  var inputDepth = dataFormat === 'NHWC' ? $x.shape[3] : $x.shape[1];\n  util.assert(inputHeight * blockSize >= 0, function () {\n    return \"Negative dimension size caused by overflow when multiplying\\n    \".concat(inputHeight, \" and \").concat(blockSize, \"  for depthToSpace with input shape\\n    \").concat($x.shape);\n  });\n  util.assert(inputWidth * blockSize >= 0, function () {\n    return \"Negative dimension size caused by overflow when multiplying\\n    \".concat(inputWidth, \" and \").concat(blockSize, \" for depthToSpace with input shape\\n        \").concat($x.shape);\n  });\n  util.assert(inputDepth % (blockSize * blockSize) === 0, function () {\n    return \"Dimension size must be evenly divisible by \".concat(blockSize * blockSize, \" but is \").concat(inputDepth, \" for depthToSpace with input shape \").concat($x.shape);\n  });\n  var inputs = {\n    x: $x\n  };\n  var attrs = {\n    blockSize: blockSize,\n    dataFormat: dataFormat\n  };\n  return ENGINE.runKernel(DepthToSpace, inputs, attrs);\n}\n\nexport var depthToSpace = op({\n  depthToSpace_: depthToSpace_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { DepthwiseConv2dNative } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\nimport { reshape } from './reshape';\n/**\n * Depthwise 2D convolution.\n *\n * Given a 4D `input` array and a `filter` array of shape\n * `[filterHeight, filterWidth, inChannels, channelMultiplier]` containing\n * `inChannels` convolutional filters of depth 1, this op applies a\n * different filter to each input channel (expanding from 1 channel to\n * `channelMultiplier` channels for each), then concatenates the results\n * together. The output has `inChannels * channelMultiplier` channels.\n *\n * See\n * [https://www.tensorflow.org/api_docs/python/tf/nn/depthwise_conv2d](\n *     https://www.tensorflow.org/api_docs/python/tf/nn/depthwise_conv2d)\n * for more details.\n *\n * @param x The input tensor, of rank 4 or rank 3, of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is\n * assumed.\n * @param filter The filter tensor, rank 4, of shape\n *     `[filterHeight, filterWidth, inChannels, channelMultiplier]`.\n * @param strides The strides of the convolution: `[strideHeight,\n * strideWidth]`. If strides is a single number, then `strideHeight ==\n * strideWidth`.\n * @param pad The type of padding algorithm.\n *   - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *   - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *   - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *          https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     in atrous convolution. Defaults to `[1, 1]`. If `rate` is a single\n *     number, then `dilationHeight == dilationWidth`. If it is greater than\n *     1, then all values of `strides` must be 1.\n * @param dataFormat: An optional string from: \"NHWC\", \"NCHW\". Defaults to\n *     \"NHWC\". Specify the data format of the input and output data. With the\n *     default format \"NHWC\", the data is stored in the order of: [batch,\n *     height, width, channels]. Only \"NHWC\" is currently supported.\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\n\nfunction depthwiseConv2d_(x, filter, strides, pad) {\n  var dataFormat = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'NHWC';\n  var dilations = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : [1, 1];\n  var dimRoundingMode = arguments.length > 6 ? arguments[6] : undefined;\n  var $x = convertToTensor(x, 'x', 'depthwiseConv2d');\n  var $filter = convertToTensor(filter, 'filter', 'depthwiseConv2d');\n  var x4D = $x;\n  var reshapedTo4D = false;\n\n  if ($x.rank === 3) {\n    reshapedTo4D = true;\n    x4D = reshape($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n  }\n\n  util.assert(x4D.rank === 4, function () {\n    return \"Error in depthwiseConv2d: input must be rank 4, but got \" + \"rank \".concat(x4D.rank, \".\");\n  });\n  util.assert($filter.rank === 4, function () {\n    return \"Error in depthwiseConv2d: filter must be rank 4, but got rank \" + \"\".concat($filter.rank, \".\");\n  });\n  util.assert(x4D.shape[3] === $filter.shape[2], function () {\n    return \"Error in depthwiseConv2d: number of input channels \" + \"(\".concat(x4D.shape[3], \") must match the inChannels dimension in \") + \"filter \".concat($filter.shape[2], \".\");\n  });\n\n  if (dimRoundingMode != null) {\n    util.assert(util.isInt(pad), function () {\n      return \"Error in depthwiseConv2d: pad must be an integer when using, \" + \"dimRoundingMode \".concat(dimRoundingMode, \" but got pad \").concat(pad, \".\");\n    });\n  }\n\n  var inputs = {\n    x: x4D,\n    filter: $filter\n  };\n  var attrs = {\n    strides: strides,\n    pad: pad,\n    dataFormat: dataFormat,\n    dilations: dilations,\n    dimRoundingMode: dimRoundingMode\n  }; // tslint:disable-next-line: no-unnecessary-type-assertion\n\n  var res = ENGINE.runKernel(DepthwiseConv2dNative, inputs, attrs);\n\n  if (reshapedTo4D) {\n    return reshape(res, [res.shape[1], res.shape[2], res.shape[3]]);\n  }\n\n  return res;\n}\n\nexport var depthwiseConv2d = op({\n  depthwiseConv2d_: depthwiseConv2d_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { DepthwiseConv2dNativeBackpropFilter } from '../kernel_names';\nimport { op } from './operation';\nimport { reshape } from './reshape';\n\nfunction depthwiseConv2dNativeBackpropFilter_(x, dy, filterShape, strides, pad) {\n  var dilations = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : [1, 1];\n  var dimRoundingMode = arguments.length > 6 ? arguments[6] : undefined;\n  var x4D = x;\n\n  if (x.rank === 3) {\n    x4D = reshape(x, [1, x.shape[0], x.shape[1], x.shape[2]]);\n  }\n\n  var dy4D = dy;\n\n  if (dy4D.rank === 3) {\n    dy4D = reshape(dy, [1, dy.shape[0], dy.shape[1], dy.shape[2]]);\n  }\n\n  var inputs = {\n    x: x4D,\n    dy: dy4D\n  };\n  var attrs = {\n    strides: strides,\n    pad: pad,\n    dimRoundingMode: dimRoundingMode,\n    dilations: dilations,\n    filterShape: filterShape\n  }; // tslint:disable-next-line: no-unnecessary-type-assertion\n\n  return ENGINE.runKernel(DepthwiseConv2dNativeBackpropFilter, inputs, attrs);\n}\n\nexport var depthwiseConv2dNativeBackpropFilter = op({\n  depthwiseConv2dNativeBackpropFilter_: depthwiseConv2dNativeBackpropFilter_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { DepthwiseConv2dNativeBackpropInput } from '../kernel_names';\nimport { op } from './operation';\nimport { reshape } from './reshape';\n\nfunction depthwiseConv2dNativeBackpropInput_(xShape, dy, filter, strides, pad) {\n  var dilations = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : [1, 1];\n  var dimRoundingMode = arguments.length > 6 ? arguments[6] : undefined;\n  var dy4D = dy;\n  var reshapedTo4D = false;\n\n  if (dy.rank === 3) {\n    reshapedTo4D = true;\n    dy4D = reshape(dy, [1, dy.shape[0], dy.shape[1], dy.shape[2]]);\n  }\n\n  var inputs = {\n    dy: dy4D,\n    filter: filter\n  };\n  var attrs = {\n    strides: strides,\n    pad: pad,\n    dimRoundingMode: dimRoundingMode,\n    dilations: dilations,\n    inputShape: xShape\n  };\n  var res = // tslint:disable-next-line: no-unnecessary-type-assertion\n  ENGINE.runKernel(DepthwiseConv2dNativeBackpropInput, inputs, attrs);\n\n  if (reshapedTo4D) {\n    return reshape(res, [res.shape[1], res.shape[2], res.shape[3]]);\n  }\n\n  return res;\n}\n\nexport var depthwiseConv2dNativeBackpropInput = op({\n  depthwiseConv2dNativeBackpropInput_: depthwiseConv2dNativeBackpropInput_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Dilation2D } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\nimport { reshape } from './reshape';\n/**\n * Computes the grayscale dilation over the input `x`.\n *\n * @param x The input tensor, rank 3 or rank 4 of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.\n * @param filter The filter tensor, rank 3, of shape\n *     `[filterHeight, filterWidth, depth]`.\n * @param strides The strides of the sliding window for each dimension of the\n *     input tensor: `[strideHeight, strideWidth]`.\n *     If `strides` is a single number,\n *     then `strideHeight == strideWidth`.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1*1x1.\n *    - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *          https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dataFormat Specify the data format of the input and output data.\n *      Defaults to 'NHWC'. Only 'NHWC' is currently supported. With the\n *      default format \"NHWC\", the data is stored in the order of: [batch,\n *      height, width, channels].\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     for atrous morphological dilation. Defaults to `[1, 1]`. If `dilations`\n *     is a single number, then `dilationHeight == dilationWidth`. If it is\n *     greater than 1, then all values of `strides` must be 1.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\n\nfunction dilation2d_(x, filter, strides, pad) {\n  var dilations = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [1, 1];\n  var dataFormat = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 'NHWC';\n  var $x = convertToTensor(x, 'x', 'dilation2d');\n  var $filter = convertToTensor(filter, 'filter', 'dilation2d');\n  util.assert($x.rank === 3 || $x.rank === 4, function () {\n    return \"Error in dilation2d: input must be rank 3 or 4, but got rank \" + \"\".concat($x.rank, \".\");\n  });\n  util.assert($filter.rank === 3, function () {\n    return \"Error in dilation2d: filter must be rank 3, but got rank \" + \"\".concat($filter.rank, \".\");\n  });\n  util.assert(dataFormat === 'NHWC', function () {\n    return \"Error in dilation2d: Only NHWC is currently supported, \" + \"but got dataFormat of \".concat(dataFormat);\n  });\n  var x4D = $x;\n  var reshapedTo4D = false;\n\n  if ($x.rank === 3) {\n    x4D = reshape($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n    reshapedTo4D = true;\n  }\n\n  var inputs = {\n    x: x4D,\n    filter: $filter\n  };\n  var attrs = {\n    strides: strides,\n    pad: pad,\n    dilations: dilations\n  }; // tslint:disable-next-line: no-unnecessary-type-assertion\n\n  var res = ENGINE.runKernel(Dilation2D, inputs, attrs);\n\n  if (reshapedTo4D) {\n    return reshape(res, [res.shape[1], res.shape[2], res.shape[3]]);\n  }\n\n  return res;\n}\n\nexport var dilation2d = op({\n  dilation2d_: dilation2d_\n});","import _slicedToArray from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { RealDiv } from '../kernel_names';\nimport { makeTypesMatch } from '../tensor_util';\nimport { convertToTensor } from '../tensor_util_env';\nimport { floorDiv } from './floorDiv';\nimport { op } from './operation';\n/**\n * Divides two `tf.Tensor`s element-wise, A / B. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([1, 4, 9, 16]);\n * const b = tf.tensor1d([1, 2, 3, 4]);\n *\n * a.div(b).print();  // or tf.div(a, b)\n * ```\n *\n * ```js\n * // Broadcast div a with b.\n * const a = tf.tensor1d([2, 4, 6, 8]);\n * const b = tf.scalar(2);\n *\n * a.div(b).print();  // or tf.div(a, b)\n * ```\n *\n * @param a The first tensor as the numerator.\n * @param b The second tensor as the denominator. Must have the same dtype as\n * `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\n\nfunction div_(a, b) {\n  var $a = convertToTensor(a, 'a', 'div');\n  var $b = convertToTensor(b, 'b', 'div');\n\n  var _makeTypesMatch = makeTypesMatch($a, $b);\n\n  var _makeTypesMatch2 = _slicedToArray(_makeTypesMatch, 2);\n\n  $a = _makeTypesMatch2[0];\n  $b = _makeTypesMatch2[1];\n\n  if ($a.dtype === 'int32' && $b.dtype === 'int32') {\n    return floorDiv($a, $b);\n  }\n\n  var inputs = {\n    a: $a,\n    b: $b\n  };\n  var attrs = {}; // tslint:disable-next-line: no-unnecessary-type-assertion\n\n  return ENGINE.runKernel(RealDiv, inputs, attrs);\n}\n\nexport var div = op({\n  div_: div_\n});","import _slicedToArray from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { makeTypesMatch } from '../tensor_util';\nimport { convertToTensor } from '../tensor_util_env';\nimport { div } from './div';\nimport { equal } from './equal';\nimport { op } from './operation';\nimport { where } from './where';\nimport { zerosLike } from './zeros_like';\n/**\n * Divides two `tf.Tensor`s element-wise, A / B. Supports broadcasting. Return 0\n * if denominator is 0.\n *\n *\n * ```js\n * const a = tf.tensor1d([1, 4, 9, 16]);\n * const b = tf.tensor1d([1, 2, 3, 4]);\n * const c = tf.tensor1d([0, 0, 0, 0]);\n *\n * a.divNoNan(b).print();  // or tf.divNoNan(a, b)\n * a.divNoNan(c).print();  // or tf.divNoNan(a, c)\n * ```\n *\n * ```js\n * // Broadcast div a with b.\n * const a = tf.tensor1d([2, 4, 6, 8]);\n * const b = tf.scalar(2);\n * const c = tf.scalar(0);\n *\n * a.divNoNan(b).print();  // or tf.divNoNan(a, b)\n * a.divNoNan(c).print();  // or tf.divNoNan(a, c)\n * ```\n *\n * @param a The first tensor as the numerator.\n * @param b The second tensor as the denominator. Must have the same dtype as\n * `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\n\nfunction divNoNan_(a, b) {\n  // TODO: Make this into its own kernel.\n  var $a = convertToTensor(a, 'a', 'div');\n  var $b = convertToTensor(b, 'b', 'div');\n\n  var _makeTypesMatch = makeTypesMatch($a, $b);\n\n  var _makeTypesMatch2 = _slicedToArray(_makeTypesMatch, 2);\n\n  $a = _makeTypesMatch2[0];\n  $b = _makeTypesMatch2[1];\n  var divResult = div($a, $b);\n  var zeros = zerosLike(divResult);\n  var bEqualsZero = equal($b, zeros);\n  return where(bEqualsZero, zeros, divResult);\n}\n\nexport var divNoNan = op({\n  divNoNan_: divNoNan_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { matMul } from './mat_mul';\nimport { op } from './operation';\nimport { reshape } from './reshape';\n/**\n * Computes the dot product of two matrices and/or vectors, `t1` and `t2`.\n *\n * ```js\n * const a = tf.tensor1d([1, 2]);\n * const b = tf.tensor2d([[1, 2], [3, 4]]);\n * const c = tf.tensor2d([[1, 2, 3], [4, 5, 6]]);\n *\n * a.dot(b).print();  // or tf.dot(a, b)\n * b.dot(a).print();\n * b.dot(c).print();\n * ```\n * @param t1 The first tensor in the dot operation.\n * @param t2 The second tensor in the dot operation.\n *\n * @doc {heading: 'Operations', subheading: 'Matrices'}\n */\n\nfunction dot_(t1, t2) {\n  var $t1 = convertToTensor(t1, 't1', 'dot');\n  var $t2 = convertToTensor(t2, 't2', 'dot');\n  util.assert(($t1.rank === 1 || $t1.rank === 2) && ($t2.rank === 1 || $t2.rank === 2), function () {\n    return \"Error in dot: inputs must all be rank 1 or 2, but got ranks \" + \"\".concat($t1.rank, \" and \").concat($t2.rank, \".\");\n  });\n  var t1Inner = $t1.rank === 1 ? $t1.size : $t1.shape[1];\n  var t2Inner = $t2.rank === 1 ? $t2.size : $t2.shape[0];\n  util.assert(t1Inner === t2Inner, function () {\n    return \"Error in dot: inner dimensions of inputs must match, but got \" + \"\".concat(t1Inner, \" and \").concat(t2Inner, \".\");\n  });\n\n  if ($t1.rank === 1 && $t2.rank === 1) {\n    var t12D = reshape($t1, [1, -1]);\n    var t22D = reshape($t2, [-1, 1]);\n    var t1t2 = matMul(t12D, t22D);\n    return reshape(t1t2, []);\n  } else if ($t1.rank === 1 && $t2.rank === 2) {\n    var _t12D = reshape($t1, [1, -1]);\n\n    var _t22D = reshape($t2, [$t2.shape[0], $t2.shape[1]]);\n\n    var _t1t = matMul(_t12D, _t22D);\n\n    return reshape(_t1t, [_t1t.size]);\n  } else if ($t1.rank === 2 && $t2.rank === 1) {\n    var _t22D2 = reshape($t2, [-1, 1]);\n\n    var _t1t2 = matMul($t1, _t22D2);\n\n    return reshape(_t1t2, [_t1t2.size]);\n  } else {\n    var _t22D3 = reshape($t2, [$t2.shape[0], $t2.shape[1]]);\n\n    var _t1t3 = matMul($t1, _t22D3);\n\n    return _t1t3;\n  }\n}\n\nexport var dot = op({\n  dot_: dot_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Elu } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes exponential linear element-wise: `x > 0 ? e ^ x - 1 : 0`.\n *\n * ```js\n * const x = tf.tensor1d([-1, 1, -3, 2]);\n *\n * x.elu().print();  // or tf.elu(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\n\nfunction elu_(x) {\n  var $x = convertToTensor(x, 'x', 'elu');\n  var inputs = {\n    x: $x\n  };\n  return ENGINE.runKernel(Elu, inputs);\n}\n\nexport var elu = op({\n  elu_: elu_\n});","import _slicedToArray from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Equal } from '../kernel_names';\nimport { makeTypesMatch } from '../tensor_util';\nimport { convertToTensor } from '../tensor_util_env';\nimport { assertAndGetBroadcastShape } from './broadcast_util';\nimport { op } from './operation';\n/**\n * Returns the truth value of (a == b) element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n * const b = tf.tensor1d([2, 2, 2]);\n *\n * a.equal(b).print();\n * ```\n *\n * @param a The first input tensor.\n * @param b The second input tensor. Must have the same dtype as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\n\nfunction equal_(a, b) {\n  var $a = convertToTensor(a, 'a', 'equal');\n  var $b = convertToTensor(b, 'b', 'equal');\n\n  var _makeTypesMatch = makeTypesMatch($a, $b);\n\n  var _makeTypesMatch2 = _slicedToArray(_makeTypesMatch, 2);\n\n  $a = _makeTypesMatch2[0];\n  $b = _makeTypesMatch2[1];\n  assertAndGetBroadcastShape($a.shape, $b.shape);\n  var inputs = {\n    a: $a,\n    b: $b\n  };\n  return ENGINE.runKernel(Equal, inputs);\n}\n\nexport var equal = op({\n  equal_: equal_\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Erf } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { cast } from './cast';\nimport { op } from './operation';\n/**\n * Computes gause error function of the input `tf.Tensor` element-wise:\n * `erf(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, .1, -.1, .7]);\n *\n * x.erf().print(); // or tf.erf(x);\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\n\nfunction erf_(x) {\n  var $x = convertToTensor(x, 'x', 'erf');\n  util.assert($x.dtype === 'int32' || $x.dtype === 'float32', function () {\n    return 'Input dtype must be `int32` or `float32`.';\n  });\n\n  if ($x.dtype === 'int32') {\n    $x = cast($x, 'float32');\n  }\n\n  var inputs = {\n    x: $x\n  };\n  return ENGINE.runKernel(Erf, inputs);\n}\n\nexport var erf = op({\n  erf_: erf_\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Exp } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes exponential of the input `tf.Tensor` element-wise. `e ^ x`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, -3]);\n *\n * x.exp().print();  // or tf.exp(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\n\nfunction exp_(x) {\n  var $x = convertToTensor(x, 'x', 'exp');\n  var inputs = {\n    x: $x\n  };\n  return ENGINE.runKernel(Exp, inputs);\n}\n\nexport var exp = op({\n  exp_: exp_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { ExpandDims } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\n/**\n * Returns a `tf.Tensor` that has expanded rank, by inserting a dimension\n * into the tensor's shape.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n * const axis = 1;\n * x.expandDims(axis).print();\n * ```\n *\n * @param x The input tensor whose dimensions to be expanded.\n * @param axis The dimension index at which to insert shape of `1`. Defaults\n *     to 0 (the first dimension).\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\n\nfunction expandDims_(x) {\n  var axis = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var $x = convertToTensor(x, 'x', 'expandDims', 'string_or_numeric');\n  util.assert(axis <= $x.rank, function () {\n    return 'Axis must be <= rank of the tensor';\n  });\n  var inputs = {\n    input: $x\n  };\n  var attrs = {\n    dim: axis\n  };\n  return ENGINE.runKernel(ExpandDims, inputs, attrs);\n}\n\nexport var expandDims = op({\n  expandDims_: expandDims_\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Expm1 } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes exponential of the input `tf.Tensor` minus one element-wise.\n * `e ^ x - 1`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, -3]);\n *\n * x.expm1().print();  // or tf.expm1(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\n\nfunction expm1_(x) {\n  var $x = convertToTensor(x, 'x', 'expm1');\n  var inputs = {\n    x: $x\n  };\n  return ENGINE.runKernel(Expm1, inputs);\n}\n\nexport var expm1 = op({\n  expm1_: expm1_\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Floor } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes floor of input `tf.Tensor` element-wise: `floor(x)`.\n *\n * ```js\n * const x = tf.tensor1d([.6, 1.1, -3.3]);\n *\n * x.floor().print();  // or tf.floor(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\n\nfunction floor_(x) {\n  var $x = convertToTensor(x, 'x', 'floor');\n  var inputs = {\n    x: $x\n  };\n  return ENGINE.runKernel(Floor, inputs);\n}\n\nexport var floor = op({\n  floor_: floor_\n});","import _slicedToArray from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { FloorDiv } from '../kernel_names';\nimport { makeTypesMatch } from '../tensor_util';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Divides two `tf.Tensor`s element-wise, A / B. Supports broadcasting.\n * The result is rounded with floor function.\n *\n *\n * ```js\n * const a = tf.tensor1d([1, 4, 9, 16]);\n * const b = tf.tensor1d([1, 2, 3, 4]);\n *\n * a.floorDiv(b).print();  // or tf.div(a, b)\n * ```\n *\n * ```js\n * // Broadcast div a with b.\n * const a = tf.tensor1d([2, 4, 6, 8]);\n * const b = tf.scalar(2);\n *\n * a.floorDiv(b).print();  // or tf.floorDiv(a, b)\n * ```\n *\n * @param a The first tensor as the numerator.\n * @param b The second tensor as the denominator. Must have the same dtype as\n * `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\n\nfunction floorDiv_(a, b) {\n  var $a = convertToTensor(a, 'a', 'floorDiv');\n  var $b = convertToTensor(b, 'b', 'floorDiv');\n\n  var _makeTypesMatch = makeTypesMatch($a, $b);\n\n  var _makeTypesMatch2 = _slicedToArray(_makeTypesMatch, 2);\n\n  $a = _makeTypesMatch2[0];\n  $b = _makeTypesMatch2[1];\n  var inputs = {\n    a: $a,\n    b: $b\n  };\n  return ENGINE.runKernel(FloorDiv, inputs);\n}\n\nexport var floorDiv = op({\n  floorDiv_: floorDiv_\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { GatherV2 } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Gather slices from tensor `x`'s axis `axis` according to `indices`.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n * const indices = tf.tensor1d([1, 3, 3], 'int32');\n *\n * x.gather(indices).print();\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n * const indices = tf.tensor1d([1, 1, 0], 'int32');\n *\n * x.gather(indices).print();\n * ```\n * @param x The input tensor whose slices to be gathered.\n * @param indices The indices of the values to extract.\n * @param axis The axis over which to select values. Defaults to 0.\n * @param batchDims Optional. The number of batch dimensions. It must be less\n *     than or equal to rank(indices). Defaults to 0.\n *     The output tensor will have shape of\n *     `x.shape[:axis] + indices.shape[batchDims:] + x.shape[axis + 1:]`\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\n\nfunction gather_(x, indices) {\n  var axis = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var batchDims = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  var $x = convertToTensor(x, 'x', 'gather');\n  var $indices = convertToTensor(indices, 'indices', 'gather', 'int32');\n  var inputs = {\n    x: $x,\n    indices: $indices\n  };\n  var attrs = {\n    axis: axis,\n    batchDims: batchDims\n  };\n  return ENGINE.runKernel(GatherV2, inputs, attrs);\n}\n\nexport var gather = op({\n  gather_: gather_\n});","import _slicedToArray from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Greater } from '../kernel_names';\nimport { makeTypesMatch } from '../tensor_util';\nimport { convertToTensor } from '../tensor_util_env';\nimport { assertAndGetBroadcastShape } from './broadcast_util';\nimport { op } from './operation';\n/**\n * Returns the truth value of (a > b) element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n * const b = tf.tensor1d([2, 2, 2]);\n *\n * a.greater(b).print();\n * ```\n *\n * @param a The first input tensor.\n * @param b The second input tensor. Must have the same dtype as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\n\nfunction greater_(a, b) {\n  var $a = convertToTensor(a, 'a', 'greater');\n  var $b = convertToTensor(b, 'b', 'greater');\n\n  var _makeTypesMatch = makeTypesMatch($a, $b);\n\n  var _makeTypesMatch2 = _slicedToArray(_makeTypesMatch, 2);\n\n  $a = _makeTypesMatch2[0];\n  $b = _makeTypesMatch2[1];\n  assertAndGetBroadcastShape($a.shape, $b.shape);\n  var inputs = {\n    a: $a,\n    b: $b\n  };\n  return ENGINE.runKernel(Greater, inputs);\n}\n\nexport var greater = op({\n  greater_: greater_\n});","import _slicedToArray from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { GreaterEqual } from '../kernel_names';\nimport { makeTypesMatch } from '../tensor_util';\nimport { convertToTensor } from '../tensor_util_env';\nimport { assertAndGetBroadcastShape } from './broadcast_util';\nimport { op } from './operation';\n/**\n * Returns the truth value of (a >= b) element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n * const b = tf.tensor1d([2, 2, 2]);\n *\n * a.greaterEqual(b).print();\n * ```\n *\n * @param a The first input tensor.\n * @param b The second input tensor. Must have the same dtype as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\n\nfunction greaterEqual_(a, b) {\n  var $a = convertToTensor(a, 'a', 'greaterEqual');\n  var $b = convertToTensor(b, 'b', 'greaterEqual');\n\n  var _makeTypesMatch = makeTypesMatch($a, $b);\n\n  var _makeTypesMatch2 = _slicedToArray(_makeTypesMatch, 2);\n\n  $a = _makeTypesMatch2[0];\n  $b = _makeTypesMatch2[1];\n  assertAndGetBroadcastShape($a.shape, $b.shape);\n  var inputs = {\n    a: $a,\n    b: $b\n  };\n  return ENGINE.runKernel(GreaterEqual, inputs);\n}\n\nexport var greaterEqual = op({\n  greaterEqual_: greaterEqual_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Imag } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Returns the imaginary part of a complex (or real) tensor.\n *\n * Given a tensor input, this operation returns a tensor of type float that is\n * the imaginary part of each element in input considered as a complex number.\n * If input is real, a tensor of all zeros is returned.\n *\n * ```js\n * const x = tf.complex([-2.25, 3.25], [4.75, 5.75]);\n * tf.imag(x).print();\n * ```\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\n\nfunction imag_(input) {\n  var $input = convertToTensor(input, 'input', 'imag');\n  var inputs = {\n    input: $input\n  };\n  return ENGINE.runKernel(Imag, inputs);\n}\n\nexport var imag = op({\n  imag_: imag_\n});","import _toArray from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/toArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../../engine';\nimport { ResizeBilinear } from '../../kernel_names';\nimport { convertToTensor } from '../../tensor_util_env';\nimport * as util from '../../util';\nimport { op } from '../operation';\nimport { reshape } from '../reshape';\n/**\n * Bilinear resize a single 3D image or a batch of 3D images to a new shape.\n *\n * @param images The images, of rank 4 or rank 3, of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.\n * @param size The new shape `[newHeight, newWidth]` to resize the\n *     images to. Each channel is resized individually.\n * @param alignCorners Defaults to `false`. If true, rescale\n *     input by `(new_height - 1) / (height - 1)`, which exactly aligns the 4\n *     corners of images and resized images. If false, rescale by\n *     `new_height / height`. Treat similarly the width dimension.\n * @param halfPixelCenters Defaults to `false`. Whether to assume pixel centers\n *     are at 0.5, which would make the floating point coordinates of the top\n *     left pixel 0.5, 0.5.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\n\nfunction resizeBilinear_(images, size) {\n  var alignCorners = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var halfPixelCenters = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var $images = convertToTensor(images, 'images', 'resizeBilinear');\n  util.assert($images.rank === 3 || $images.rank === 4, function () {\n    return \"Error in resizeBilinear: x must be rank 3 or 4, but got \" + \"rank \".concat($images.rank, \".\");\n  });\n  util.assert(size.length === 2, function () {\n    return \"Error in resizeBilinear: new shape must 2D, but got shape \" + \"\".concat(size, \".\");\n  });\n  util.assert(halfPixelCenters === false || alignCorners === false, function () {\n    return \"Error in resizeBilinear: If halfPixelCenters is true, \" + \"alignCorners must be false.\";\n  });\n  var batchImages = $images;\n  var reshapedTo4D = false;\n\n  if ($images.rank === 3) {\n    reshapedTo4D = true;\n    batchImages = reshape($images, [1, $images.shape[0], $images.shape[1], $images.shape[2]]);\n  }\n\n  var _size = _toArray(size);\n\n  var inputs = {\n    images: batchImages\n  };\n  var attrs = {\n    alignCorners: alignCorners,\n    halfPixelCenters: halfPixelCenters,\n    size: size\n  }; // tslint:disable-next-line: no-unnecessary-type-assertion\n\n  var res = ENGINE.runKernel(ResizeBilinear, inputs, attrs);\n\n  if (reshapedTo4D) {\n    return reshape(res, [res.shape[1], res.shape[2], res.shape[3]]);\n  }\n\n  return res;\n}\n\nexport var resizeBilinear = op({\n  resizeBilinear_: resizeBilinear_\n});","import _toArray from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/toArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../../engine';\nimport { ResizeNearestNeighbor } from '../../kernel_names';\nimport { convertToTensor } from '../../tensor_util_env';\nimport * as util from '../../util';\nimport { op } from '../operation';\nimport { reshape } from '../reshape';\n/**\n * NearestNeighbor resize a batch of 3D images to a new shape.\n *\n * @param images The images, of rank 4 or rank 3, of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.\n * @param size The new shape `[newHeight, newWidth]` to resize the\n *     images to. Each channel is resized individually.\n * @param alignCorners Defaults to False. If true, rescale\n *     input by `(new_height - 1) / (height - 1)`, which exactly aligns the 4\n *     corners of images and resized images. If false, rescale by\n *     `new_height / height`. Treat similarly the width dimension.\n * @param halfPixelCenters Defaults to `false`. Whether to assumes pixels are of\n *      half the actual dimensions, and yields more accurate resizes. This flag\n *      would also make the floating point coordinates of the top left pixel\n *      0.5, 0.5.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\n\nfunction resizeNearestNeighbor_(images, size) {\n  var alignCorners = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var halfPixelCenters = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var $images = convertToTensor(images, 'images', 'resizeNearestNeighbor');\n  util.assert($images.rank === 3 || $images.rank === 4, function () {\n    return \"Error in resizeNearestNeighbor: x must be rank 3 or 4, but got \" + \"rank \".concat($images.rank, \".\");\n  });\n  util.assert(size.length === 2, function () {\n    return \"Error in resizeNearestNeighbor: new shape must 2D, but got shape \" + \"\".concat(size, \".\");\n  });\n  util.assert($images.dtype === 'float32' || $images.dtype === 'int32', function () {\n    return '`images` must have `int32` or `float32` as dtype';\n  });\n  util.assert(halfPixelCenters === false || alignCorners === false, function () {\n    return \"Error in resizeNearestNeighbor: If halfPixelCenters is true, \" + \"alignCorners must be false.\";\n  });\n  var batchImages = $images;\n  var reshapedTo4D = false;\n\n  if ($images.rank === 3) {\n    reshapedTo4D = true;\n    batchImages = reshape($images, [1, $images.shape[0], $images.shape[1], $images.shape[2]]);\n  }\n\n  var _size = _toArray(size);\n\n  var inputs = {\n    images: batchImages\n  };\n  var attrs = {\n    alignCorners: alignCorners,\n    halfPixelCenters: halfPixelCenters,\n    size: size\n  }; // tslint:disable-next-line: no-unnecessary-type-assertion\n\n  var res = ENGINE.runKernel(ResizeNearestNeighbor, inputs, attrs);\n\n  if (reshapedTo4D) {\n    return reshape(res, [res.shape[1], res.shape[2], res.shape[3]]);\n  }\n\n  return res;\n}\n\nexport var resizeNearestNeighbor = op({\n  resizeNearestNeighbor_: resizeNearestNeighbor_\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { IsFinite } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Returns which elements of x are finite.\n *\n * ```js\n * const x = tf.tensor1d([NaN, Infinity, -Infinity, 0, 1]);\n *\n * x.isFinite().print();  // or tf.isNaN(x)\n * ```\n * @param x The input Tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\n\nfunction isFinite_(x) {\n  var $x = convertToTensor(x, 'x', 'isFinite');\n  var inputs = {\n    x: $x\n  };\n  return ENGINE.runKernel(IsFinite, inputs);\n}\n\nexport var isFinite = op({\n  isFinite_: isFinite_\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { IsInf } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Returns which elements of x are Infinity or -Infinity.\n *\n * ```js\n * const x = tf.tensor1d([NaN, Infinity, -Infinity, 0, 1]);\n *\n * x.isInf().print();  // or tf.isNaN(x)\n * ```\n * @param x The input Tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\n\nfunction isInf_(x) {\n  var $x = convertToTensor(x, 'x', 'isInf');\n  var inputs = {\n    x: $x\n  };\n  return ENGINE.runKernel(IsInf, inputs);\n}\n\nexport var isInf = op({\n  isInf_: isInf_\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { IsNan } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * RReturns which elements of x are NaN.\n *\n * ```js\n * const x = tf.tensor1d([NaN, Infinity, -Infinity, 0, 1]);\n *\n * x.isNaN().print();  // or tf.isNaN(x)\n * ```\n * @param x The input Tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\n\nfunction isNaN_(x) {\n  var $x = convertToTensor(x, 'x', 'isNaN');\n  var inputs = {\n    x: $x\n  };\n  return ENGINE.runKernel(IsNan, inputs);\n}\n\nexport var isNaN = op({\n  isNaN_: isNaN_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { LeakyRelu } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes leaky rectified linear element-wise.\n *\n * See\n * [http://web.stanford.edu/~awni/papers/relu_hybrid_icml2013_final.pdf](\n *     http://web.stanford.edu/~awni/papers/relu_hybrid_icml2013_final.pdf)\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 4]);\n *\n * x.leakyRelu(0.1).print();  // or tf.leakyRelu(x, 0.1)\n * ```\n * @param x The input tensor.\n * @param alpha The scaling factor for negative values, defaults to 0.2.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\n\nfunction leakyRelu_(x) {\n  var alpha = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.2;\n  var $x = convertToTensor(x, 'x', 'leakyRelu');\n  var inputs = {\n    x: $x\n  };\n  var attrs = {\n    alpha: alpha\n  };\n  return ENGINE.runKernel(LeakyRelu, inputs, attrs);\n}\n\nexport var leakyRelu = op({\n  leakyRelu_: leakyRelu_\n});","import _slicedToArray from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Less } from '../kernel_names';\nimport { makeTypesMatch } from '../tensor_util';\nimport { convertToTensor } from '../tensor_util_env';\nimport { assertAndGetBroadcastShape } from './broadcast_util';\nimport { op } from './operation';\n/**\n * Returns the truth value of (a < b) element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n * const b = tf.tensor1d([2, 2, 2]);\n *\n * a.less(b).print();\n * ```\n * @param a The first input tensor.\n * @param b The second input tensor. Must have the same dtype as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\n\nfunction less_(a, b) {\n  var $a = convertToTensor(a, 'a', 'less');\n  var $b = convertToTensor(b, 'b', 'less');\n\n  var _makeTypesMatch = makeTypesMatch($a, $b);\n\n  var _makeTypesMatch2 = _slicedToArray(_makeTypesMatch, 2);\n\n  $a = _makeTypesMatch2[0];\n  $b = _makeTypesMatch2[1];\n  assertAndGetBroadcastShape($a.shape, $b.shape);\n  var inputs = {\n    a: $a,\n    b: $b\n  };\n  return ENGINE.runKernel(Less, inputs);\n}\n\nexport var less = op({\n  less_: less_\n});","import _slicedToArray from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { LessEqual } from '../kernel_names';\nimport { makeTypesMatch } from '../tensor_util';\nimport { convertToTensor } from '../tensor_util_env';\nimport { assertAndGetBroadcastShape } from './broadcast_util';\nimport { op } from './operation';\n/**\n * Returns the truth value of (a <= b) element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n * const b = tf.tensor1d([2, 2, 2]);\n *\n * a.lessEqual(b).print();\n * ```\n *\n * @param a The first input tensor.\n * @param b The second input tensor. Must have the same dtype as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\n\nfunction lessEqual_(a, b) {\n  var $a = convertToTensor(a, 'a', 'lessEqual');\n  var $b = convertToTensor(b, 'b', 'lessEqual');\n\n  var _makeTypesMatch = makeTypesMatch($a, $b);\n\n  var _makeTypesMatch2 = _slicedToArray(_makeTypesMatch, 2);\n\n  $a = _makeTypesMatch2[0];\n  $b = _makeTypesMatch2[1];\n  assertAndGetBroadcastShape($a.shape, $b.shape);\n  var inputs = {\n    a: $a,\n    b: $b\n  };\n  return ENGINE.runKernel(LessEqual, inputs);\n}\n\nexport var lessEqual = op({\n  lessEqual_: lessEqual_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { LRN } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\nimport { reshape } from './reshape';\n/**\n * Normalizes the activation of a local neighborhood across or within\n * channels.\n *\n * @param x The input tensor. The 4-D input tensor is treated as a 3-D array\n *     of 1D vectors (along the last dimension), and each vector is\n *     normalized independently.\n * @param depthRadius The number of adjacent channels in the 1D normalization\n *     window.\n * @param bias A constant bias term for the basis.\n * @param alpha A scale factor, usually positive.\n * @param beta An exponent.\n *\n * @doc {heading: 'Operations', subheading: 'Normalization'}\n */\n\nfunction localResponseNormalization_(x) {\n  var depthRadius = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 5;\n  var bias = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var alpha = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n  var beta = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0.5;\n  var $x = convertToTensor(x, 'x', 'localResponseNormalization');\n  util.assert($x.rank === 4 || $x.rank === 3, function () {\n    return \"Error in localResponseNormalization: x must be rank 3 or 4 but got\\n               rank \".concat($x.rank, \".\");\n  });\n  util.assert(util.isInt(depthRadius), function () {\n    return \"Error in localResponseNormalization: depthRadius must be an \" + \"integer but got depthRadius \".concat(depthRadius, \".\");\n  });\n  var x4D = $x;\n  var reshapedTo4D = false;\n\n  if ($x.rank === 3) {\n    reshapedTo4D = true;\n    x4D = reshape($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n  }\n\n  var inputs = {\n    x: x4D\n  };\n  var attrs = {\n    depthRadius: depthRadius,\n    bias: bias,\n    alpha: alpha,\n    beta: beta\n  }; // tslint:disable-next-line: no-unnecessary-type-assertion\n\n  var res = ENGINE.runKernel(LRN, inputs, attrs);\n\n  if (reshapedTo4D) {\n    return reshape(res, [res.shape[1], res.shape[2], res.shape[3]]);\n  } else {\n    return res;\n  }\n}\n\nexport var localResponseNormalization = op({\n  localResponseNormalization_: localResponseNormalization_\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Log } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes natural logarithm of the input `tf.Tensor` element-wise: `ln(x)`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, Math.E]);\n *\n * x.log().print();  // or tf.log(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\n\nfunction log_(x) {\n  var $x = convertToTensor(x, 'x', 'log');\n  var inputs = {\n    x: $x\n  };\n  return ENGINE.runKernel(Log, inputs);\n}\n\nexport var log = op({\n  log_: log_\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Log1p } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes natural logarithm of the input `tf.Tensor` plus one\n * element-wise: `ln(1 + x)`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, Math.E - 1]);\n *\n * x.log1p().print();  // or tf.log1p(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\n\nfunction log1p_(x) {\n  var $x = convertToTensor(x, 'x', 'log1p');\n  var inputs = {\n    x: $x\n  };\n  return ENGINE.runKernel(Log1p, inputs);\n}\n\nexport var log1p = op({\n  log1p_: log1p_\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { customGrad } from '../gradients';\nimport { convertToTensor } from '../tensor_util_env';\nimport { mul } from './mul';\nimport { neg } from './neg';\nimport { op } from './operation';\nimport { sigmoid } from './sigmoid';\nimport { softplus } from './softplus';\n/**\n * Computes log sigmoid of the input `tf.Tensor` element-wise:\n * `logSigmoid(x)`. For numerical stability, we use `-tf.softplus(-x)`.\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, .7]);\n *\n * x.logSigmoid().print();  // or tf.logSigmoid(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\n\nfunction logSigmoid_(x) {\n  var $x = convertToTensor(x, 'x', 'logSigmoid'); // Use a custom gradient to maintain previous implementation.\n  // There is no LogSigmoid kernel in TF so we can't use engine.runKernel\n  // directly\n\n  var customOp = customGrad(function (x) {\n    // TODO(yassogba) we can remove the chained softplus call here only\n    // after backends have modualrized softplus at which point we can call\n    // engine runKernel(..., Sotfplus, ...) directly.\n    var value = neg(softplus(neg(x)));\n\n    var gradFunc = function gradFunc(dy) {\n      var derX = mul(dy, sigmoid(neg(x)));\n      return derX;\n    };\n\n    return {\n      value: value,\n      gradFunc: gradFunc\n    };\n  });\n  return customOp($x);\n}\n\nexport var logSigmoid = op({\n  logSigmoid_: logSigmoid_\n});","import _slicedToArray from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { customGrad } from '../gradients';\nimport { convertToTensor } from '../tensor_util_env';\nimport { cast } from './cast';\nimport { exp } from './exp';\nimport { log } from './log';\nimport { max } from './max';\nimport { mul } from './mul';\nimport { op } from './operation';\nimport { sub } from './sub';\nimport { sum } from './sum';\n/**\n * Computes the log softmax.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n *\n * a.logSoftmax().print();  // or tf.logSoftmax(a)\n * ```\n *\n * ```js\n * const a = tf.tensor2d([2, 4, 6, 1, 2, 3], [2, 3]);\n *\n * a.logSoftmax().print();  // or tf.logSoftmax(a)\n * ```\n *\n * @param logits The logits array.\n * @param axis The dimension softmax would be performed on. Defaults to `-1`\n *     which indicates the last dimension.\n *\n * @doc {heading: 'Operations', subheading: 'Normalization'}\n */\n\nfunction logSoftmax_(logits) {\n  var axis = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\n  var $logits = convertToTensor(logits, 'logits', 'logSoftmax');\n\n  if (axis === -1) {\n    axis = $logits.rank - 1;\n  }\n\n  if (axis !== $logits.rank - 1) {\n    throw Error('Log Softmax along a non-last dimension is not yet supported. ' + \"Logits was rank \".concat($logits.rank, \" and axis was \").concat(axis));\n  } // const forward: ForwardFunc<Tensor> = (backend, save) => {\n  //   const keepDims = true;\n  //   const xMax = max(logits, axis, true);\n  //   const shifted = sub(logits, xMax);\n  //   const value =\n  //       sub(cast(shifted, 'float32'), log(sum(exp(shifted), axis,\n  //       keepDims)));\n  //   save([value]);\n  //   return value;\n  // };\n  // Use a custom gradient for numerical stability.\n\n\n  var customOp = customGrad(function (logits, save) {\n    var keepDims = true;\n    var xMax = max(logits, axis, true);\n    var shifted = sub(logits, xMax);\n    var value = sub(cast(shifted, 'float32'), log(sum(exp(shifted), axis, keepDims)));\n    save([value]);\n\n    var gradFunc = function gradFunc(dy, saved) {\n      var _saved = _slicedToArray(saved, 1),\n          value = _saved[0];\n\n      var keepDims = true;\n      var softmax = exp(value);\n      return sub(dy, mul(sum(dy, axis, keepDims), softmax));\n    };\n\n    return {\n      value: value,\n      gradFunc: gradFunc\n    };\n  });\n  return customOp($logits); // TODO Use Engine.runKernel when CPU/WebGL/WASM backends implement this.\n  // const inputs: LogSoftmaxInputs = {logits: $logits};\n  // const attrs: LogSoftmaxAttrs = {axis};\n  // return ENGINE.runKernel(\n  //            LogSoftmax, inputs as {} as NamedTensorMap,\n  //            attrs as {} as NamedAttrMap);\n}\n\nexport var logSoftmax = op({\n  logSoftmax_: logSoftmax_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { convertToTensor } from '../tensor_util_env';\nimport { parseAxisParam } from '../util';\nimport { add } from './add';\nimport { expandShapeToKeepDim } from './axis_util';\nimport { exp } from './exp';\nimport { log } from './log';\nimport { max } from './max';\nimport { op } from './operation';\nimport { reshape } from './reshape';\nimport { sub } from './sub';\nimport { sum } from './sum';\n/**\n * Computes the log(sum(exp(elements across the reduction dimensions)).\n *\n * Reduces the input along the dimensions given in `axis`. Unless `keepDims`\n * is true, the rank of the array is reduced by 1 for each entry in `axis`.\n * If `keepDims` is true, the reduced dimensions are retained with length 1.\n * If `axis` has no entries, all dimensions are reduced, and an array with a\n * single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.logSumExp().print();  // or tf.logSumExp(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * const axis = 1;\n * x.logSumExp(axis).print();  // or tf.logSumExp(a, axis)\n * ```\n * @param x The input tensor.\n * @param axis The dimension(s) to reduce. If null (the default),\n *     reduces all dimensions.\n * @param keepDims If true, retains reduced dimensions with length\n *     of 1. Defaults to false.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\n\nfunction logSumExp_(x) {\n  var axis = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var keepDims = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var $x = convertToTensor(x, 'x', 'logSumExp');\n  var axes = parseAxisParam(axis, $x.shape);\n  var xMax = max($x, axes, true\n  /* keepDims */\n  );\n  var a = sub($x, xMax);\n  var b = exp(a);\n  var c = sum(b, axes);\n  var d = log(c);\n  var res = add(reshape(xMax, d.shape), d);\n\n  if (keepDims) {\n    var newShape = expandShapeToKeepDim(res.shape, axes);\n    return reshape(res, newShape);\n  }\n\n  return res;\n}\n\nexport var logSumExp = op({\n  logSumExp_: logSumExp_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { LogicalAnd } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { assertAndGetBroadcastShape } from './broadcast_util';\nimport { op } from './operation';\n/**\n * Returns the truth value of `a AND b` element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([false, false, true, true], 'bool');\n * const b = tf.tensor1d([false, true, false, true], 'bool');\n *\n * a.logicalAnd(b).print();\n * ```\n *\n * @param a The first input tensor. Must be of dtype bool.\n * @param b The second input tensor. Must be of dtype bool.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\n\nfunction logicalAnd_(a, b) {\n  var $a = convertToTensor(a, 'a', 'logicalAnd', 'bool');\n  var $b = convertToTensor(b, 'b', 'logicalAnd', 'bool');\n  assertAndGetBroadcastShape($a.shape, $b.shape);\n  var inputs = {\n    a: $a,\n    b: $b\n  };\n  return ENGINE.runKernel(LogicalAnd, inputs);\n}\n\nexport var logicalAnd = op({\n  logicalAnd_: logicalAnd_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { LogicalNot } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Returns the truth value of `NOT x` element-wise.\n *\n * ```js\n * const a = tf.tensor1d([false, true], 'bool');\n *\n * a.logicalNot().print();\n * ```\n *\n * @param x The input tensor. Must be of dtype 'bool'.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\n\nfunction logicalNot_(x) {\n  var $x = convertToTensor(x, 'x', 'logicalNot', 'bool');\n  var inputs = {\n    x: $x\n  };\n  return ENGINE.runKernel(LogicalNot, inputs);\n}\n\nexport var logicalNot = op({\n  logicalNot_: logicalNot_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { LogicalOr } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { assertAndGetBroadcastShape } from './broadcast_util';\nimport { op } from './operation';\n/**\n * Returns the truth value of `a OR b` element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([false, false, true, true], 'bool');\n * const b = tf.tensor1d([false, true, false, true], 'bool');\n *\n * a.logicalOr(b).print();\n * ```\n * @param a The first input tensor. Must be of dtype bool.\n * @param b The second input tensor. Must be of dtype bool.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\n\nfunction logicalOr_(a, b) {\n  var $a = convertToTensor(a, 'a', 'logicalOr', 'bool');\n  var $b = convertToTensor(b, 'b', 'logicalOr', 'bool');\n  assertAndGetBroadcastShape($a.shape, $b.shape);\n  var inputs = {\n    a: $a,\n    b: $b\n  };\n  return ENGINE.runKernel(LogicalOr, inputs);\n}\n\nexport var logicalOr = op({\n  logicalOr_: logicalOr_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { convertToTensor } from '../tensor_util_env';\nimport { assertAndGetBroadcastShape } from './broadcast_util';\nimport { logicalAnd } from './logical_and';\nimport { logicalNot } from './logical_not';\nimport { logicalOr } from './logical_or';\nimport { op } from './operation';\n/**\n * Returns the truth value of `a XOR b` element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([false, false, true, true], 'bool');\n * const b = tf.tensor1d([false, true, false, true], 'bool');\n *\n * a.logicalXor(b).print();\n * ```\n *\n * @param a The first input tensor. Must be of dtype bool.\n * @param b The second input tensor. Must be of dtype bool.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\n\nfunction logicalXor_(a, b) {\n  var $a = convertToTensor(a, 'a', 'logicalXor', 'bool');\n  var $b = convertToTensor(b, 'b', 'logicalXor', 'bool');\n  assertAndGetBroadcastShape($a.shape, $b.shape); // x ^ y = (x | y) & ~(x & y)\n\n  return logicalAnd(logicalOr(a, b), logicalNot(logicalAnd(a, b)));\n}\n\nexport var logicalXor = op({\n  logicalXor_: logicalXor_\n});","import _slicedToArray from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { BatchMatMul } from '../kernel_names';\nimport { makeTypesMatch } from '../tensor_util';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes the dot product of two matrices, A * B. These must be matrices.\n *\n * ```js\n * const a = tf.tensor2d([1, 2], [1, 2]);\n * const b = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * a.matMul(b).print();  // or tf.matMul(a, b)\n * ```\n * @param a First matrix in dot product operation.\n * @param b Second matrix in dot product operation.\n * @param transposeA If true, `a` is transposed before multiplication.\n * @param transposeB If true, `b` is transposed before multiplication.\n *\n * @doc {heading: 'Operations', subheading: 'Matrices'}\n */\n\nfunction matMul_(a, b) {\n  var transposeA = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var transposeB = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var $a = convertToTensor(a, 'a', 'matMul');\n  var $b = convertToTensor(b, 'b', 'matMul');\n\n  var _makeTypesMatch = makeTypesMatch($a, $b);\n\n  var _makeTypesMatch2 = _slicedToArray(_makeTypesMatch, 2);\n\n  $a = _makeTypesMatch2[0];\n  $b = _makeTypesMatch2[1];\n  var inputs = {\n    a: $a,\n    b: $b\n  };\n  var attrs = {\n    transposeA: transposeA,\n    transposeB: transposeB\n  };\n  return ENGINE.runKernel(BatchMatMul, inputs, attrs);\n}\n\nexport var matMul = op({\n  matMul_: matMul_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Max } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes the maximum of elements across dimensions of a `tf.Tensor`.\n *\n * Reduces the input along the dimensions given in `axes`. Unless `keepDims`\n * is true, the rank of the `tf.Tensor` is reduced by 1 for each entry in\n * `axes`. If `keepDims` is true, the reduced dimensions are retained with\n * length 1. If `axes` has no entries, all dimensions are reduced, and an\n * `tf.Tensor` with a single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.max().print();  // or tf.max(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * const axis = 1;\n * x.max(axis).print();  // or tf.max(x, axis)\n * ```\n *\n * @param x The input tensor.\n * @param axis The dimension(s) to reduce. By default it reduces\n *     all dimensions.\n * @param keepDims If true, retains reduced dimensions with size 1.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\n\nfunction max_(x) {\n  var axis = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var keepDims = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var $x = convertToTensor(x, 'x', 'max');\n  var inputs = {\n    x: $x\n  };\n  var attrs = {\n    reductionIndices: axis,\n    keepDims: keepDims\n  };\n  return ENGINE.runKernel(Max, inputs, attrs);\n}\n\nexport var max = op({\n  max_: max_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { MaxPool } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport * as conv_util from './conv_util';\nimport { op } from './operation';\nimport { reshape } from './reshape';\n/**\n * Computes the 2D max pooling of an image.\n *\n * @param x The input tensor, of rank 4 or rank 3 of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.\n * @param filterSize The filter size: `[filterHeight, filterWidth]`. If\n *     `filterSize` is a single number, then `filterHeight == filterWidth`.\n * @param strides The strides of the pooling: `[strideHeight, strideWidth]`. If\n *     `strides` is a single number, then `strideHeight == strideWidth`.\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     in dilated pooling. Defaults to `[1, 1]`. If `dilations` is a single\n *     number, then `dilationHeight == dilationWidth`. If it is greater than\n *     1, then all values of `strides` must be 1.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *    - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *          https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n */\n\nfunction maxPool_(x, filterSize, strides, pad, dimRoundingMode) {\n  var $x = convertToTensor(x, 'x', 'maxPool');\n  var dilations = 1;\n  var x4D = $x;\n  var reshapedTo4D = false;\n\n  if ($x.rank === 3) {\n    reshapedTo4D = true;\n    x4D = reshape($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n  }\n\n  util.assert(x4D.rank === 4, function () {\n    return \"Error in maxPool: input must be rank 4 but got rank \".concat(x4D.rank, \".\");\n  });\n  util.assert(conv_util.eitherStridesOrDilationsAreOne(strides, dilations), function () {\n    return 'Error in maxPool: Either strides or dilations must be 1. ' + \"Got strides \".concat(strides, \" and dilations '\").concat(dilations, \"'\");\n  });\n\n  if (dimRoundingMode != null) {\n    util.assert(util.isInt(pad), function () {\n      return \"Error in maxPool: pad must be an integer when using, \" + \"dimRoundingMode \".concat(dimRoundingMode, \" but got pad \").concat(pad, \".\");\n    });\n  }\n\n  var inputs = {\n    x: x4D\n  };\n  var attrs = {\n    filterSize: filterSize,\n    strides: strides,\n    pad: pad,\n    dimRoundingMode: dimRoundingMode\n  }; // tslint:disable-next-line: no-unnecessary-type-assertion\n\n  var res = ENGINE.runKernel(MaxPool, inputs, attrs);\n\n  if (reshapedTo4D) {\n    return reshape(res, [res.shape[1], res.shape[2], res.shape[3]]);\n  }\n\n  return res;\n}\n\nexport var maxPool = op({\n  maxPool_: maxPool_\n});","import _slicedToArray from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Maximum } from '../kernel_names';\nimport { makeTypesMatch } from '../tensor_util';\nimport { convertToTensor } from '../tensor_util_env';\nimport { assertAndGetBroadcastShape } from './broadcast_util';\nimport { cast } from './cast';\nimport { op } from './operation';\n/**\n * Returns the max of a and b (`a > b ? a : b`) element-wise.\n * Supports broadcasting.\n *\n * We also expose `tf.maximumStrict` which has the same signature as this op and\n * asserts that `a` and `b` are the same shape (does not broadcast).\n *\n * ```js\n * const a = tf.tensor1d([1, 4, 3, 16]);\n * const b = tf.tensor1d([1, 2, 9, 4]);\n *\n * a.maximum(b).print();  // or tf.maximum(a, b)\n * ```\n *\n * ```js\n * // Broadcast maximum a with b.\n * const a = tf.tensor1d([2, 4, 6, 8]);\n * const b = tf.scalar(5);\n *\n * a.maximum(b).print();  // or tf.maximum(a, b)\n * ```\n *\n * @param a The first tensor.\n * @param b The second tensor. Must have the same type as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\n\nfunction maximum_(a, b) {\n  var $a = convertToTensor(a, 'a', 'maximum');\n  var $b = convertToTensor(b, 'b', 'maximum');\n\n  var _makeTypesMatch = makeTypesMatch($a, $b);\n\n  var _makeTypesMatch2 = _slicedToArray(_makeTypesMatch, 2);\n\n  $a = _makeTypesMatch2[0];\n  $b = _makeTypesMatch2[1];\n\n  if ($a.dtype === 'bool') {\n    $a = cast($a, 'int32');\n    $b = cast($b, 'int32');\n  }\n\n  assertAndGetBroadcastShape($a.shape, $b.shape);\n  var inputs = {\n    a: $a,\n    b: $b\n  };\n  return ENGINE.runKernel(Maximum, inputs);\n}\n\nexport var maximum = op({\n  maximum_: maximum_\n});","/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Mean } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes the mean of elements across dimensions of a `tf.Tensor`.\n *\n * Reduces `x` along the dimensions given in `axis`. Unless `keepDims` is\n * true, the rank of the `tf.Tensor` is reduced by 1 for each entry in `axis`.\n * If `keepDims` is true, the reduced dimensions are retained with length 1.\n * If `axis` has no entries, all dimensions are reduced, and a `tf.Tensor` with\n * a single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.mean().print();  // or tf.mean(a)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * const axis = 1;\n * x.mean(axis).print();  // or tf.mean(x, axis)\n * ```\n *\n * @param x The input tensor.\n * @param axis The dimension(s) to reduce. By default it reduces\n *     all dimensions.\n * @param keepDims If true, retains reduced dimensions with size 1.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\n\nfunction mean_(x) {\n  var axis = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var keepDims = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var $x = convertToTensor(x, 'x', 'mean');\n  var inputs = {\n    x: $x\n  };\n  var attrs = {\n    axis: axis,\n    keepDims: keepDims\n  };\n  return ENGINE.runKernel(Mean, inputs, attrs);\n}\n\nexport var mean = op({\n  mean_: mean_\n});","/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Min } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes the minimum value from the input.\n *\n * Reduces the input along the dimensions given in `axes`. Unless `keepDims`\n * is true, the rank of the array is reduced by 1 for each entry in `axes`.\n * If `keepDims` is true, the reduced dimensions are retained with length 1.\n * If `axes` has no entries, all dimensions are reduced, and an array with a\n * single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.min().print();  // or tf.min(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * const axis = 1;\n * x.min(axis).print();  // or tf.min(x, axis)\n * ```\n *\n * @param x The input Tensor.\n * @param axis The dimension(s) to reduce. By default it reduces\n *     all dimensions.\n * @param keepDims If true, retains reduced dimensions with size 1.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\n\nfunction min_(x) {\n  var axis = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var keepDims = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var $x = convertToTensor(x, 'x', 'min');\n  var inputs = {\n    x: $x\n  };\n  var attrs = {\n    axis: axis,\n    keepDims: keepDims\n  }; // tslint:disable-next-line: no-unnecessary-type-assertion\n\n  return ENGINE.runKernel(Min, inputs, attrs);\n}\n\nexport var min = op({\n  min_: min_\n});","import _slicedToArray from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Minimum } from '../kernel_names';\nimport { makeTypesMatch } from '../tensor_util';\nimport { convertToTensor } from '../tensor_util_env';\nimport { assertAndGetBroadcastShape } from './broadcast_util';\nimport { cast } from './cast';\nimport { op } from './operation';\n/**\n * Returns the min of a and b (`a < b ? a : b`) element-wise.\n * Supports broadcasting.\n *\n * We also expose `minimumStrict` which has the same signature as this op and\n * asserts that `a` and `b` are the same shape (does not broadcast).\n *\n * ```js\n * const a = tf.tensor1d([1, 4, 3, 16]);\n * const b = tf.tensor1d([1, 2, 9, 4]);\n *\n * a.minimum(b).print();  // or tf.minimum(a, b)\n * ```\n *\n * ```js\n * // Broadcast minimum a with b.\n * const a = tf.tensor1d([2, 4, 6, 8]);\n * const b = tf.scalar(5);\n *\n * a.minimum(b).print();  // or tf.minimum(a, b)\n * ```\n *\n * @param a The first tensor.\n * @param b The second tensor. Must have the same type as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\n\nfunction minimum_(a, b) {\n  var $a = convertToTensor(a, 'a', 'minimum');\n  var $b = convertToTensor(b, 'b', 'minimum');\n\n  var _makeTypesMatch = makeTypesMatch($a, $b);\n\n  var _makeTypesMatch2 = _slicedToArray(_makeTypesMatch, 2);\n\n  $a = _makeTypesMatch2[0];\n  $b = _makeTypesMatch2[1];\n\n  if ($a.dtype === 'bool') {\n    $a = cast($a, 'int32');\n    $b = cast($b, 'int32');\n  }\n\n  assertAndGetBroadcastShape($a.shape, $b.shape);\n  var inputs = {\n    a: $a,\n    b: $b\n  };\n  return ENGINE.runKernel(Minimum, inputs);\n}\n\nexport var minimum = op({\n  minimum_: minimum_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { MirrorPad } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\n/**\n * Pads a `tf.Tensor` using mirror padding.\n *\n * This operation implements the `REFLECT` and `SYMMETRIC` modes of pad.\n *\n * ```js\n * const x = tf.range(0, 9).reshape([1, 1, 3, 3]);\n * x.mirrorPad([[0, 0], [0, 0], [2, 2], [2, 2]], 'reflect').print();\n * ```\n * @param x The tensor to pad.\n * @param paddings An array of length `R` (the rank of the tensor), where\n * each element is a length-2 tuple of ints `[padBefore, padAfter]`,\n * specifying how much to pad along each dimension of the tensor.\n * In \"reflect\" mode, the padded regions do not include the borders,\n * while in \"symmetric\" mode the padded regions do include the borders.\n * For example, if the input is `[1, 2, 3]` and paddings is `[0, 2]`,\n * then the output is `[1, 2, 3, 2, 1]` in \"reflect\" mode, and\n * `[1, 2, 3, 3, 2]` in \"symmetric\" mode.\n * If `mode` is \"reflect\" then both `paddings[D, 0]` and `paddings[D, 1]`\n * must be no greater than `x.shape[D] - 1`. If mode is \"symmetric\"\n * then both `paddings[D, 0]` and `paddings[D, 1]` must be no greater than\n * `x.shape[D]`\n * @param mode String to specify padding mode. Can be `'reflect' | 'symmetric'`\n */\n\n/** @doc {heading: 'Tensors', subheading: 'Transformations'} */\n\nfunction mirrorPad_(x, paddings, mode) {\n  util.assert(mode === 'reflect' || mode === 'symmetric', function () {\n    return \"Invalid mode. Mode must be either reflect or symmetric. \" + \"Got \".concat(mode, \".\");\n  });\n  var $x = convertToTensor(x, 'x', 'mirrorPad');\n\n  if ($x.rank === 0) {\n    throw new Error('mirrorPad(scalar) is not defined. ' + 'Pass non-scalar to mirrorPad');\n  }\n\n  util.assert(paddings.length === $x.rank, function () {\n    return \"Padding doesn't match input. Must be \".concat($x.rank, \". \") + \"Got \".concat(paddings.length, \".\");\n  });\n  var shapeOffset = mode === 'reflect' ? 1 : 0;\n\n  var _loop = function _loop(i) {\n    util.assert(paddings[i].length === 2, function () {\n      return \"Invalid number of paddings. Must be length of 2 each.\";\n    });\n    util.assert(paddings[i][0] >= 0 && paddings[i][0] <= $x.shape[i] - shapeOffset && paddings[i][1] >= 0 && paddings[i][1] <= $x.shape[i] - shapeOffset, function () {\n      return \"Padding in dimension \".concat(i, \" cannot be greater than or equal \") + \"to \".concat($x.shape[i] - shapeOffset, \" or less than 0 for input of \") + \"shape \".concat($x.shape);\n    });\n  };\n\n  for (var i = 0; i < $x.rank; i++) {\n    _loop(i);\n  }\n\n  var attrs = {\n    paddings: paddings,\n    mode: mode\n  };\n  var inputs = {\n    x: $x\n  };\n  return ENGINE.runKernel(MirrorPad, inputs, attrs);\n}\n\nexport var mirrorPad = op({\n  mirrorPad_: mirrorPad_\n});","import _slicedToArray from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Mod } from '../kernel_names';\nimport { makeTypesMatch } from '../tensor_util';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Returns the mod of a and b element-wise.\n * `floor(x / y) * y + mod(x, y) = x`\n * Supports broadcasting.\n *\n * We also expose `tf.modStrict` which has the same signature as this op and\n * asserts that `a` and `b` are the same shape (does not broadcast).\n *\n * ```js\n * const a = tf.tensor1d([1, 4, 3, 16]);\n * const b = tf.tensor1d([1, 2, 9, 4]);\n *\n * a.mod(b).print();  // or tf.mod(a, b)\n * ```\n *\n * ```js\n * // Broadcast a mod b.\n * const a = tf.tensor1d([2, 4, 6, 8]);\n * const b = tf.scalar(5);\n *\n * a.mod(b).print();  // or tf.mod(a, b)\n * ```\n *\n * @param a The first tensor.\n * @param b The second tensor. Must have the same type as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\n\nfunction mod_(a, b) {\n  var $a = convertToTensor(a, 'a', 'mod');\n  var $b = convertToTensor(b, 'b', 'mod');\n\n  var _makeTypesMatch = makeTypesMatch($a, $b);\n\n  var _makeTypesMatch2 = _slicedToArray(_makeTypesMatch, 2);\n\n  $a = _makeTypesMatch2[0];\n  $b = _makeTypesMatch2[1];\n  var inputs = {\n    a: $a,\n    b: $b\n  };\n  return ENGINE.runKernel(Mod, inputs);\n}\n\nexport var mod = op({\n  mod_: mod_\n});","import _slicedToArray from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Multiply } from '../kernel_names';\nimport { makeTypesMatch } from '../tensor_util';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Multiplies two `tf.Tensor`s element-wise, A * B. Supports broadcasting.\n *\n * We also expose `tf.mulStrict` which has the same signature as this op and\n * asserts that `a` and `b` are the same shape (does not broadcast).\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3, 4]);\n * const b = tf.tensor1d([2, 3, 4, 5]);\n *\n * a.mul(b).print();  // or tf.mul(a, b)\n * ```\n *\n * ```js\n * // Broadcast mul a with b.\n * const a = tf.tensor1d([1, 2, 3, 4]);\n * const b = tf.scalar(5);\n *\n * a.mul(b).print();  // or tf.mul(a, b)\n * ```\n * @param a The first tensor to multiply.\n * @param b The second tensor to multiply. Must have the same dtype as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\n\nfunction mul_(a, b) {\n  var $a = convertToTensor(a, 'a', 'mul');\n  var $b = convertToTensor(b, 'b', 'mul');\n\n  var _makeTypesMatch = makeTypesMatch($a, $b);\n\n  var _makeTypesMatch2 = _slicedToArray(_makeTypesMatch, 2);\n\n  $a = _makeTypesMatch2[0];\n  $b = _makeTypesMatch2[1];\n  var inputs = {\n    a: $a,\n    b: $b\n  };\n  return ENGINE.runKernel(Multiply, inputs);\n}\n\nexport var mul = op({\n  mul_: mul_\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Neg } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes `-1 * x` element-wise.\n *\n * ```js\n * const x = tf.tensor2d([1, 2, -2, 0], [2, 2]);\n *\n * x.neg().print();  // or tf.neg(x)\n * ```\n *\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\n\nfunction neg_(x) {\n  var $x = convertToTensor(x, 'x', 'neg');\n  var inputs = {\n    x: $x\n  };\n  return ENGINE.runKernel(Neg, inputs);\n}\n\nexport var neg = op({\n  neg_: neg_\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { convertToTensor } from '../tensor_util_env';\nimport { parseAxisParam } from '../util';\nimport { abs } from './abs';\nimport * as axis_util from './axis_util';\nimport { max } from './max';\nimport { min } from './min';\nimport { op } from './operation';\nimport { pow } from './pow';\nimport { reshape } from './reshape';\nimport { scalar } from './scalar';\nimport { sqrt } from './sqrt';\nimport { square } from './square';\nimport { sum } from './sum';\n/**\n * Computes the norm of scalar, vectors, and matrices.\n * This function can compute several different vector norms (the 1-norm, the\n * Euclidean or 2-norm, the inf-norm, and in general the p-norm for p > 0)\n * and matrix norms (Frobenius, 1-norm, and inf-norm).\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n *\n * x.norm().print();  // or tf.norm(x)\n * ```\n *\n * @param x The input array.\n * @param ord Optional. Order of the norm. Supported norm types are\n * following:\n *\n *  | ord        | norm for matrices         | norm for vectors\n *  |------------|---------------------------|---------------------\n *  |'euclidean' |Frobenius norm             |2-norm\n *  |'fro'       |Frobenius norm\t           |\n *  |Infinity    |max(sum(abs(x), axis=1))   |max(abs(x))\n *  |-Infinity   |min(sum(abs(x), axis=1))   |min(abs(x))\n *  |1           |max(sum(abs(x), axis=0))   |sum(abs(x))\n *  |2           |                           |sum(abs(x)^2)^1/2*\n *\n * @param axis Optional. If axis is null (the default), the input is\n * considered a vector and a single vector norm is computed over the entire\n * set of values in the Tensor, i.e. norm(x, ord) is equivalent\n * to norm(x.reshape([-1]), ord). If axis is a integer, the input\n * is considered a batch of vectors, and axis determines the axis in x\n * over which to compute vector norms. If axis is a 2-tuple of integer it is\n * considered a batch of matrices and axis determines the axes in NDArray\n * over which to compute a matrix norm.\n * @param keepDims Optional. If true, the norm have the same dimensionality\n * as the input.\n *\n * @doc {heading: 'Operations', subheading: 'Matrices'}\n */\n\nfunction norm_(x) {\n  var ord = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'euclidean';\n  var axis = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  var keepDims = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  x = convertToTensor(x, 'x', 'norm');\n  var norm = normImpl(x, ord, axis);\n  var keepDimsShape = norm.shape;\n\n  if (keepDims) {\n    var axes = parseAxisParam(axis, x.shape);\n    keepDimsShape = axis_util.expandShapeToKeepDim(norm.shape, axes);\n  }\n\n  return reshape(norm, keepDimsShape);\n}\n\nfunction normImpl(x, p) {\n  var axis = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n  if (x.rank === 0) {\n    return abs(x);\n  } // consider vector when no axis is specified\n\n\n  if (x.rank !== 1 && axis === null) {\n    return normImpl(reshape(x, [-1]), p, axis);\n  } // vector\n\n\n  if (x.rank === 1 || typeof axis === 'number' || Array.isArray(axis) && axis.length === 1) {\n    if (p === 1) {\n      return sum(abs(x), axis);\n    }\n\n    if (p === Infinity) {\n      return max(abs(x), axis);\n    }\n\n    if (p === -Infinity) {\n      return min(abs(x), axis);\n    }\n\n    if (p === 'euclidean' || p === 2) {\n      // norm(x, 2) = sum(abs(xi) ^ 2) ^ 1/2\n      return sqrt(sum(pow(abs(x), scalar(2, 'int32')), axis));\n    }\n\n    throw new Error(\"Error in norm: invalid ord value: \".concat(p));\n  } // matrix (assumption axis[0] < axis[1])\n\n\n  if (Array.isArray(axis) && axis.length === 2) {\n    if (p === 1) {\n      return max(sum(abs(x), axis[0]), axis[1] - 1);\n    }\n\n    if (p === Infinity) {\n      return max(sum(abs(x), axis[1]), axis[0]);\n    }\n\n    if (p === -Infinity) {\n      return min(sum(abs(x), axis[1]), axis[0]);\n    }\n\n    if (p === 'fro' || p === 'euclidean') {\n      // norm(x) = sqrt(sum(pow(x, 2)))\n      return sqrt(sum(square(x), axis));\n    }\n\n    throw new Error(\"Error in norm: invalid ord value: \".concat(p));\n  }\n\n  throw new Error(\"Error in norm: invalid axis: \".concat(axis));\n}\n\nexport var norm = op({\n  norm_: norm_\n});","import _slicedToArray from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { NotEqual } from '../kernel_names';\nimport { makeTypesMatch } from '../tensor_util';\nimport { convertToTensor } from '../tensor_util_env';\nimport { assertAndGetBroadcastShape } from './broadcast_util';\nimport { op } from './operation';\n/**\n * Returns the truth value of (a != b) element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n * const b = tf.tensor1d([0, 2, 3]);\n *\n * a.notEqual(b).print();\n * ```\n * @param a The first input tensor.\n * @param b The second input tensor. Must have the same dtype as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\n\nfunction notEqual_(a, b) {\n  var $a = convertToTensor(a, 'a', 'notEqual');\n  var $b = convertToTensor(b, 'b', 'notEqual');\n\n  var _makeTypesMatch = makeTypesMatch($a, $b);\n\n  var _makeTypesMatch2 = _slicedToArray(_makeTypesMatch, 2);\n\n  $a = _makeTypesMatch2[0];\n  $b = _makeTypesMatch2[1];\n  assertAndGetBroadcastShape($a.shape, $b.shape);\n  var inputs = {\n    a: $a,\n    b: $b\n  };\n  return ENGINE.runKernel(NotEqual, inputs);\n}\n\nexport var notEqual = op({\n  notEqual_: notEqual_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { OneHot } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Creates a one-hot `tf.Tensor`. The locations represented by `indices` take\n * value `onValue` (defaults to 1), while all other locations take value\n * `offValue` (defaults to 0). If `indices` is rank `R`, the output has rank\n * `R+1` with the last axis of size `depth`.\n *\n * ```js\n * tf.oneHot(tf.tensor1d([0, 1], 'int32'), 3).print();\n * ```\n *\n * @param indices `tf.Tensor` of indices with dtype `int32`.\n * @param depth The depth of the one hot dimension.\n * @param onValue A number used to fill in the output when the index matches\n * the location.\n * @param offValue A number used to fill in the output when the index does\n *     not match the location.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\n\nfunction oneHot_(indices, depth) {\n  var onValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var offValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n  if (depth < 2) {\n    throw new Error(\"Error in oneHot: depth must be >=2, but it is \".concat(depth));\n  }\n\n  var $indices = convertToTensor(indices, 'indices', 'oneHot', 'int32');\n  var inputs = {\n    indices: $indices\n  };\n  var attrs = {\n    depth: depth,\n    onValue: onValue,\n    offValue: offValue\n  };\n  return ENGINE.runKernel(OneHot, inputs, attrs);\n}\n\nexport var oneHot = op({\n  oneHot_: oneHot_\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { makeOnesTypedArray, sizeFromShape } from '../util';\nimport { complex } from './complex';\nimport { zeros } from './zeros';\n/**\n * Creates a `tf.Tensor` with all elements set to 1.\n *\n * ```js\n * tf.ones([2, 2]).print();\n * ```\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param dtype The type of an element in the resulting tensor. Defaults to\n *     'float'.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\n\nexport function ones(shape) {\n  var dtype = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'float32';\n\n  if (dtype === 'complex64') {\n    var real = ones(shape, 'float32');\n    var imag = zeros(shape, 'float32');\n    return complex(real, imag);\n  }\n\n  var values = makeOnesTypedArray(sizeFromShape(shape), dtype);\n  return ENGINE.makeTensor(values, shape, dtype);\n}","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { OnesLike } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Creates a `tf.Tensor` with all elements set to 1 with the same shape as the\n * given tensor.\n *\n * ```js\n * const x = tf.tensor([1, 2]);\n * tf.onesLike(x).print();\n * ```\n * @param x A tensor.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\n\nfunction onesLike_(x) {\n  var $x = convertToTensor(x, 'x', 'onesLike');\n  var inputs = {\n    x: $x\n  };\n  return ENGINE.runKernel(OnesLike, inputs);\n}\n\nexport var onesLike = op({\n  onesLike_: onesLike_\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { isPromise } from '../util';\nexport var OP_SCOPE_SUFFIX = '__op';\n/**\n * Used for wrapping functions that perform math operations on\n * Tensors. The function will be wrapped in a named scope that cleans all\n * memory usage after the function is done.\n */\n\nexport function op(f) {\n  var keys = Object.keys(f);\n\n  if (keys.length !== 1) {\n    throw new Error(\"Please provide an object with a single key \" + \"(operation name) mapping to a function. Got an object with \" + \"\".concat(keys.length, \" keys.\"));\n  }\n\n  var opName = keys[0];\n  var fn = f[opName]; // Strip the underscore from the end of the function name.\n\n  if (opName.endsWith('_')) {\n    opName = opName.substring(0, opName.length - 1);\n  } // add an __op suffix to distinguish ops from kernels in tf.profile\n\n\n  opName = opName + OP_SCOPE_SUFFIX; // tslint:disable-next-line:no-any\n\n  var f2 = function f2() {\n    ENGINE.startScope(opName);\n\n    try {\n      var result = fn.apply(void 0, arguments);\n\n      if (isPromise(result)) {\n        console.error('Cannot return a Promise inside of tidy.');\n      }\n\n      ENGINE.endScope(result);\n      return result;\n    } catch (ex) {\n      ENGINE.endScope(null);\n      throw ex;\n    }\n  };\n\n  Object.defineProperty(f2, 'name', {\n    value: opName,\n    configurable: true\n  }); // tslint:disable-next-line:no-any\n\n  return f2;\n}","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { PadV2 } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Pads a `tf.Tensor` with a given value and paddings.\n *\n * This operation implements `CONSTANT` mode. For `REFLECT` and `SYMMETRIC`,\n * refer to `tf.mirrorPad`\n *\n * Also available are stricter rank-specific methods with the same signature\n * as this method that assert that `paddings` is of given length.\n *   - `tf.pad1d`\n *   - `tf.pad2d`\n *   - `tf.pad3d`\n *   - `tf.pad4d`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n * x.pad([[1, 2]]).print();\n * ```\n * @param x The tensor to pad.\n * @param paddings An array of length `R` (the rank of the tensor), where\n * each element is a length-2 tuple of ints `[padBefore, padAfter]`,\n * specifying how much to pad along each dimension of the tensor.\n * @param constantValue The pad value to use. Defaults to 0.\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\n\nfunction pad_(x, paddings) {\n  var constantValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var $x = convertToTensor(x, 'x', 'pad');\n\n  if ($x.rank === 0) {\n    throw new Error('pad(scalar) is not defined. Pass non-scalar to pad');\n  }\n\n  var attrs = {\n    paddings: paddings,\n    constantValue: constantValue\n  };\n  var inputs = {\n    x: $x\n  };\n  return ENGINE.runKernel(PadV2, inputs, attrs);\n}\n\nexport var pad = op({\n  pad_: pad_\n});","import _slicedToArray from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { avgPool } from './avg_pool';\nimport { batchToSpaceND } from './batch_to_space_nd';\nimport * as conv_util from './conv_util';\nimport { maxPool } from './max_pool';\nimport { op } from './operation';\nimport { reshape } from './reshape';\nimport { spaceToBatchND } from './space_to_batch_nd';\n/**\n * Performs an N-D pooling operation\n *\n * @param input The input tensor, of rank 4 or rank 3 of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.\n * @param windowShape The filter size: `[filterHeight, filterWidth]`. If\n *     `filterSize` is a single number, then `filterHeight == filterWidth`.\n * @param poolingType The type of pooling, either 'max' or 'avg'.\n * @param pad The type of padding algorithm:\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *    - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *         https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     in dilated pooling. Defaults to `[1, 1]`. If `dilationRate` is a single\n *     number, then `dilationHeight == dilationWidth`. If it is greater than\n *     1, then all values of `strides` must be 1.\n * @param strides The strides of the pooling: `[strideHeight, strideWidth]`. If\n *     `strides` is a single number, then `strideHeight == strideWidth`.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\n\nfunction pool_(input, windowShape, poolingType, pad, dilations, strides) {\n  if (dilations == null) {\n    dilations = [1, 1];\n  }\n\n  if (strides == null) {\n    strides = 1;\n  }\n\n  if (pad === 0) {\n    pad = 'valid';\n  }\n\n  var $x = convertToTensor(input, 'x', 'maxPool');\n  var x4D = $x;\n  var reshapedTo4D = false;\n\n  if ($x.rank === 3) {\n    reshapedTo4D = true;\n    x4D = reshape($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n  }\n\n  util.assert(conv_util.eitherStridesOrDilationsAreOne(strides, dilations), function () {\n    return 'Error in pool: Either strides or dilations must be 1. ' + \"Got strides \".concat(strides, \" and dilations '\").concat(dilations, \"'\");\n  });\n  var convInfo = conv_util.computePool2DInfo(x4D.shape, windowShape, strides, dilations, pad);\n  var dilation = [convInfo.dilationHeight, convInfo.dilationWidth]; // The following implementation does batchToSpace(pool(spaceToBatch(x)))\n  // whenever dilation > 1 since the TF kernels do not support dilation > 1.\n  // tslint:disable-next-line:max-line-length\n  // https://github.com/tensorflow/tensorflow/blob/50f6bb67dc98c9b74630b6047aae7a4f8a40fd02/tensorflow/python/ops/nn_ops.py#L1037\n\n  var basePadding;\n\n  if (pad === 'same') {\n    basePadding = withSpaceToBatchBasePaddings([convInfo.filterHeight, convInfo.filterWidth], dilation);\n  } else {\n    basePadding = [[0, 0], [0, 0]];\n  }\n\n  var isDilationOne = dilation[0] === 1 && dilation[1] === 1;\n\n  var _requiredSpaceToBatch = requiredSpaceToBatchPaddings([convInfo.inHeight, convInfo.inWidth], dilation, basePadding),\n      _requiredSpaceToBatch2 = _slicedToArray(_requiredSpaceToBatch, 2),\n      adjustedPadding = _requiredSpaceToBatch2[0],\n      adjustedCrops = _requiredSpaceToBatch2[1];\n\n  var convertedPad = isDilationOne ? pad : 'valid';\n  var convertedX = isDilationOne ? x4D : spaceToBatchND(x4D, dilation, adjustedPadding);\n  var forwardOp = poolingType === 'avg' ? function () {\n    return avgPool(convertedX, windowShape, strides, convertedPad);\n  } : function () {\n    return maxPool(convertedX, windowShape, strides, convertedPad);\n  };\n  var y = forwardOp();\n  var res = isDilationOne ? y : batchToSpaceND(y, dilation, adjustedCrops);\n\n  if (reshapedTo4D) {\n    return reshape(res, [res.shape[1], res.shape[2], res.shape[3]]);\n  }\n\n  return res;\n} // Helper function to compute crops and paddings for pool with dilation > 1.\n// tslint:disable-next-line:max-line-length\n// https://github.com/tensorflow/tensorflow/blob/50f6bb67dc98c9b74630b6047aae7a4f8a40fd02/tensorflow/python/ops/array_ops.py#L2184\n\n\nfunction requiredSpaceToBatchPaddings(inputShape, blockShape, basePadding) {\n  var padStart = basePadding.map(function (b) {\n    return b[0];\n  });\n  var origPadEnd = basePadding.map(function (b) {\n    return b[1];\n  });\n  var fullInputShape = inputShape.concat(padStart, origPadEnd);\n  var padEndExtra = blockShape.map(function (b, i) {\n    return (b - fullInputShape[i] % b) % b;\n  });\n  var padEnd = origPadEnd.map(function (s, i) {\n    return s + padEndExtra[i];\n  });\n  var paddings = blockShape.map(function (_, i) {\n    return [padStart[i], padEnd[i]];\n  });\n  var crops = blockShape.map(function (_, i) {\n    return [0, padEndExtra[i]];\n  });\n  return [paddings, crops];\n} // Helper function to compute base paddings for pool with dilation > 1.\n// tslint:disable-next-line:max-line-length\n// https://github.com/tensorflow/tensorflow/blob/50f6bb67dc98c9b74630b6047aae7a4f8a40fd02/tensorflow/python/ops/nn_ops.py#L524\n\n\nfunction withSpaceToBatchBasePaddings(filterShape, dilation) {\n  // Spatial dimensions of the filters and the upsampled filters in which we\n  // introduce (rate - 1) zeros between consecutive filter values.\n  var dilatedFilterShape = filterShape.map(function (s, i) {\n    return s + (s - 1) * (dilation[i] - 1);\n  });\n  var padExtraShape = dilatedFilterShape.map(function (s) {\n    return s - 1;\n  }); // When padding is odd, we pad more at end, following the same\n  // convention as conv2d.\n\n  var padExtraStart = padExtraShape.map(function (s) {\n    return Math.floor(s / 2);\n  });\n  var padExtraEnd = padExtraShape.map(function (s, i) {\n    return s - padExtraStart[i];\n  });\n  return padExtraShape.map(function (_, i) {\n    return [padExtraStart[i], padExtraEnd[i]];\n  });\n}\n\nexport var pool = op({\n  pool_: pool_\n});","import _slicedToArray from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Pow } from '../kernel_names';\nimport { makeTypesMatch } from '../tensor_util';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes the power of one `tf.Tensor` to another. Supports broadcasting.\n *\n * Given a `tf.Tensor` x and a `tf.Tensor` y, this operation computes x^y for\n * corresponding elements in x and y. The result's dtype will be the upcasted\n * type of the `base` and `exp` dtypes.\n *\n * ```js\n * const a = tf.tensor([[2, 3], [4, 5]])\n * const b = tf.tensor([[1, 2], [3, 0]]).toInt();\n *\n * a.pow(b).print();  // or tf.pow(a, b)\n * ```\n *\n * ```js\n * const a = tf.tensor([[1, 2], [3, 4]])\n * const b = tf.tensor(2).toInt();\n *\n * a.pow(b).print();  // or tf.pow(a, b)\n * ```\n * We also expose `powStrict` which has the same signature as this op and\n * asserts that `base` and `exp` are the same shape (does not broadcast).\n *\n * @param base The base `tf.Tensor` to pow element-wise.\n * @param exp The exponent `tf.Tensor` to pow element-wise.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\n\nfunction pow_(base, exp) {\n  var $base = convertToTensor(base, 'base', 'pow');\n  var $exp = convertToTensor(exp, 'exp', 'pow');\n\n  var _makeTypesMatch = makeTypesMatch($base, $exp);\n\n  var _makeTypesMatch2 = _slicedToArray(_makeTypesMatch, 2);\n\n  $base = _makeTypesMatch2[0];\n  $exp = _makeTypesMatch2[1];\n  var inputs = {\n    a: $base,\n    b: $exp\n  };\n  return ENGINE.runKernel(Pow, inputs);\n}\n\nexport var pow = op({\n  pow_: pow_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Prelu } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes leaky rectified linear element-wise with parametric alphas.\n *\n * `x < 0 ? alpha * x : f(x) = x`\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 4]);\n * const alpha = tf.scalar(0.1);\n *\n * x.prelu(alpha).print();  // or tf.prelu(x, alpha)\n * ```\n * @param x The input tensor.\n * @param alpha Scaling factor for negative values.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\n\nfunction prelu_(x, alpha) {\n  var $x = convertToTensor(x, 'x', 'prelu');\n  var $alpha = convertToTensor(alpha, 'alpha', 'prelu');\n  var inputs = {\n    x: $x,\n    alpha: $alpha\n  };\n  return ENGINE.runKernel(Prelu, inputs);\n}\n\nexport var prelu = op({\n  prelu_: prelu_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Prod } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { cast } from './cast';\nimport { op } from './operation';\n/**\n * Computes the product of elements across dimensions of a `tf.Tensor`.\n *\n * Reduces the input along the dimensions given in `axes`. Unless `keepDims`\n * is true, the rank of the `tf.Tensor` is reduced by 1 for each entry in\n * `axes`. If `keepDims` is true, the reduced dimensions are retained with\n * length 1. If `axes` has no entries, all dimensions are reduced, and a\n * `tf.Tensor` with a single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.prod().print();  // or tf.prod(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * const axis = 1;\n * x.prod(axis).print();  // or tf.prod(x, axis)\n * ```\n *\n * @param x The input tensor to compute the product over. If the dtype is `bool`\n *   it will be converted to `int32` and the output dtype will be `int32`.\n * @param axis The dimension(s) to reduce. By default it reduces\n *     all dimensions.\n * @param keepDims If true, retains reduced dimensions with size 1.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\n\nfunction prod_(x) {\n  var axis = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var keepDims = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var $x = convertToTensor(x, 'x', 'prod');\n\n  if ($x.dtype === 'bool') {\n    // bool is not an allowed type for the underlying kernel.\n    $x = cast($x, 'int32');\n  }\n\n  var inputs = {\n    x: $x\n  };\n  var attrs = {\n    axis: axis,\n    keepDims: keepDims\n  };\n  return ENGINE.runKernel(Prod, inputs, attrs);\n}\n\nexport var prod = op({\n  prod_: prod_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Real } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Returns the real part of a complex (or real) tensor.\n *\n * Given a tensor input, this operation returns a tensor of type float that is\n * the real part of each element in input considered as a complex number.\n *\n * If the input is real, it simply makes a clone.\n *\n * ```js\n * const x = tf.complex([-2.25, 3.25], [4.75, 5.75]);\n * tf.real(x).print();\n * ```\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\n\nfunction real_(input) {\n  var $input = convertToTensor(input, 'input', 'real');\n  var inputs = {\n    input: $input\n  };\n  return ENGINE.runKernel(Real, inputs);\n}\n\nexport var real = op({\n  real_: real_\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Reciprocal } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes reciprocal of x element-wise: `1 / x`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, 2]);\n *\n * x.reciprocal().print();  // or tf.reciprocal(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\n\nfunction reciprocal_(x) {\n  var $x = convertToTensor(x, 'x', 'reciprocal');\n  var inputs = {\n    x: $x\n  };\n  return ENGINE.runKernel(Reciprocal, inputs);\n}\n\nexport var reciprocal = op({\n  reciprocal_: reciprocal_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Relu } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes rectified linear element-wise: `max(x, 0)`.\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 4]);\n *\n * x.relu().print();  // or tf.relu(x)\n * ```\n * @param x The input tensor. If the dtype is `bool`, the output dtype will be\n *     `int32'.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\n\nfunction relu_(x) {\n  var $x = convertToTensor(x, 'x', 'relu');\n  var inputs = {\n    x: $x\n  };\n  return ENGINE.runKernel(Relu, inputs);\n}\n\nexport var relu = op({\n  relu_: relu_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Relu6 } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes rectified linear 6 element-wise: `min(max(x, 0), 6)`.\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 8]);\n *\n * x.relu6().print();  // or tf.relu6(x)\n * ```\n * @param x The input tensor. If the dtype is `bool`, the output dtype will be\n *     `int32'.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\n\nfunction relu6_(x) {\n  var $x = convertToTensor(x, 'x', 'relu6');\n  var inputs = {\n    x: $x\n  };\n  return ENGINE.runKernel(Relu6, inputs);\n}\n\nexport var relu6 = op({\n  relu6_: relu6_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Reshape } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Reshapes a `tf.Tensor` to a given shape.\n *\n * Given an input tensor, returns a new tensor with the same values as the\n * input tensor with shape `shape`.\n *\n * If one component of shape is the special value -1, the size of that\n * dimension is computed so that the total size remains constant. In\n * particular, a shape of [-1] flattens into 1-D. At most one component of\n * shape can be -1.\n *\n * If shape is 1-D or higher, then the operation returns a tensor with shape\n * shape filled with the values of tensor. In this case, the number of\n * elements implied by shape must be the same as the number of elements in\n * tensor.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n * x.reshape([2, 2]).print();\n * ```\n *\n * @param x The input tensor to be reshaped.\n * @param shape An array of integers defining the output tensor shape.\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\n\nfunction reshape_(x, shape) {\n  var $x = convertToTensor(x, 'x', 'reshape', 'string_or_numeric');\n  var inputs = {\n    x: $x\n  };\n  var attrs = {\n    shape: shape\n  };\n  return ENGINE.runKernel(Reshape, inputs, attrs);\n}\n\nexport var reshape = op({\n  reshape_: reshape_\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Reverse } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Reverses a `tf.Tensor` along a specified axis.\n *\n * Also available are stricter rank-specific methods that assert that `x` is\n * of the given rank:\n *   - `tf.reverse1d`\n *   - `tf.reverse2d`\n *   - `tf.reverse3d`\n *   - `tf.reverse4d`\n *\n * Except `tf.reverse1d` (which does not have axis param), all methods have\n * same signature as this method.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n *\n * x.reverse().print();\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * const axis = 1;\n * x.reverse(axis).print();\n * ```\n * @param x The input tensor to be reversed.\n * @param axis The set of dimensions to reverse. Must be in the\n *     range [-rank(x), rank(x)). Defaults to all axes.\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\n\nfunction reverse_(x, axis) {\n  var $x = convertToTensor(x, 'x', 'reverse');\n  var inputs = {\n    x: $x\n  };\n  var attrs = {\n    dims: axis\n  };\n  return ENGINE.runKernel(Reverse, inputs, attrs);\n}\n\nexport var reverse = op({\n  reverse_: reverse_\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Round } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes round of input `tf.Tensor` element-wise: `round(x)`.\n * It implements banker's rounding.\n *\n * ```js\n * const x = tf.tensor1d([.6, 1.1, -3.3]);\n *\n * x.round().print();  // or tf.round(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\n\nfunction round_(x) {\n  var $x = convertToTensor(x, 'x', 'round');\n  var inputs = {\n    x: $x\n  };\n  return ENGINE.runKernel(Round, inputs);\n}\n\nexport var round = op({\n  round_: round_\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Rsqrt } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes reciprocal of square root of the input `tf.Tensor` element-wise:\n * `y = 1 / sqrt(x)`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 4, -1]);\n *\n * x.rsqrt().print();  // or tf.rsqrt(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\n\nfunction rsqrt_(x) {\n  var $x = convertToTensor(x, 'x', 'rsqrt');\n  var inputs = {\n    x: $x\n  };\n  return ENGINE.runKernel(Rsqrt, inputs);\n}\n\nexport var rsqrt = op({\n  rsqrt_: rsqrt_\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { isTypedArray } from '../util';\nimport { makeTensor } from './tensor_ops_util';\n/**\n * Creates rank-0 `tf.Tensor` (scalar) with the provided value and dtype.\n *\n * The same functionality can be achieved with `tf.tensor`, but in general\n * we recommend using `tf.scalar` as it makes the code more readable.\n *\n * ```js\n * tf.scalar(3.14).print();\n * ```\n *\n * @param value The value of the scalar.\n * @param dtype The data type.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\n\nexport function scalar(value, dtype) {\n  if ((isTypedArray(value) && dtype !== 'string' || Array.isArray(value)) && dtype !== 'complex64') {\n    throw new Error('Error creating a new Scalar: value must be a primitive ' + '(number|boolean|string)');\n  }\n\n  if (dtype === 'string' && isTypedArray(value) && !(value instanceof Uint8Array)) {\n    throw new Error('When making a scalar from encoded string, ' + 'the value must be `Uint8Array`.');\n  }\n\n  var shape = [];\n  var inferredShape = [];\n  return makeTensor(value, shape, inferredShape, dtype);\n}","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Selu } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes scaled exponential linear element-wise.\n *\n * `x < 0 ? scale * alpha * (exp(x) - 1) : x`\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 4]);\n *\n * x.selu().print();  // or tf.selu(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\n\nfunction selu_(x) {\n  var $x = convertToTensor(x, 'x', 'selu');\n  var inputs = {\n    x: $x\n  };\n  return ENGINE.runKernel(Selu, inputs);\n}\n\nexport var selu = op({\n  selu_: selu_\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var SELU_SCALEALPHA = 1.7580993408473768599402175208123;\nexport var SELU_SCALE = 1.0507009873554804934193349852946;","import { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { conv2d } from './conv2d';\nimport { depthwiseConv2d } from './depthwise_conv2d';\nimport { op } from './operation';\nimport { reshape } from './reshape';\n/**\n * 2-D convolution with separable filters.\n *\n * Performs a depthwise convolution that acts separately on channels followed\n * by a pointwise convolution that mixes channels. Note that this is\n * separability between dimensions [1, 2] and 3, not spatial separability\n * between dimensions 1 and 2.\n *\n * See\n * [https://www.tensorflow.org/api_docs/python/tf/nn/separable_conv2d](\n *     https://www.tensorflow.org/api_docs/python/tf/nn/separable_conv2d)\n * for more details.\n *\n * @param x The input tensor, of rank 4 or rank 3, of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is\n * assumed.\n * @param depthwiseFilter The depthwise filter tensor, rank 4, of shape\n *     `[filterHeight, filterWidth, inChannels, channelMultiplier]`. This is\n *     the filter used in the first step.\n * @param pointwiseFilter The pointwise filter tensor, rank 4, of shape\n *     `[1, 1, inChannels * channelMultiplier, outChannels]`. This is\n *     the filter used in the second step.\n * @param strides The strides of the convolution: `[strideHeight,\n * strideWidth]`. If strides is a single number, then `strideHeight ==\n * strideWidth`.\n * @param pad The type of padding algorithm.\n *   - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *   - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *   - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *          https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     in atrous convolution. Defaults to `[1, 1]`. If `rate` is a single\n *     number, then `dilationHeight == dilationWidth`. If it is greater than\n *     1, then all values of `strides` must be 1.\n * @param dataFormat: An optional string from: \"NHWC\", \"NCHW\". Defaults to\n *     \"NHWC\". Specify the data format of the input and output data. With the\n *     default format \"NHWC\", the data is stored in the order of: [batch,\n *     height, width, channels]. Only \"NHWC\" is currently supported.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\n\nfunction separableConv2d_(x, depthwiseFilter, pointwiseFilter, strides, pad) {\n  var dilation = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : [1, 1];\n  var dataFormat = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 'NHWC';\n  var $x = convertToTensor(x, 'x', 'separableConv2d');\n  var $depthwiseFilter = convertToTensor(depthwiseFilter, 'depthwiseFilter', 'separableConv2d');\n  var $pointwiseFilter = convertToTensor(pointwiseFilter, 'pointwiseFilter', 'separableConv2d');\n  var x4D = $x;\n  var reshapedTo4D = false;\n\n  if ($x.rank === 3) {\n    reshapedTo4D = true;\n    x4D = reshape($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n  }\n\n  if (dataFormat === 'NCHW') {\n    throw new Error('separableConv2d currently does not support dataFormat NCHW; only ' + 'NHWC is supported');\n  }\n\n  util.assert(x4D.rank === 4, function () {\n    return \"Error in separableConv2d: input must be rank 4, but got \" + \"rank \".concat(x4D.rank, \".\");\n  });\n  util.assert($depthwiseFilter.rank === 4, function () {\n    return \"Error in separableConv2d: depthwise filter must be rank 4, but \" + \"got rank \".concat($depthwiseFilter.rank, \".\");\n  });\n  util.assert($pointwiseFilter.rank === 4, function () {\n    return \"Error in separableConv2d: pointwise filter must be rank 4, but \" + \"got rank \".concat($depthwiseFilter.rank, \".\");\n  });\n  util.assert($pointwiseFilter.shape[0] === 1, function () {\n    return \"Error in separableConv2d: the first dimension of pointwise filter \" + \" must be 1, but got \".concat($pointwiseFilter.shape[0], \".\");\n  });\n  util.assert($pointwiseFilter.shape[1] === 1, function () {\n    return \"Error in separableConv2d: the second dimension of pointwise \" + \"filter must be 1, but got \".concat($pointwiseFilter.shape[1], \".\");\n  });\n  var inChannels = $depthwiseFilter.shape[2];\n  var channelMultiplier = $depthwiseFilter.shape[3];\n  util.assert($pointwiseFilter.shape[2] === inChannels * channelMultiplier, function () {\n    return \"Error in separableConv2d: the third dimension of pointwise filter \" + \"must be \".concat(inChannels * channelMultiplier, \", \") + \"but got \".concat($pointwiseFilter.shape[2], \".\");\n  });\n  var depthwise = depthwiseConv2d(x4D, $depthwiseFilter, strides, pad, dataFormat, dilation);\n  var pointwiseStride = 1;\n  var res = conv2d(depthwise, $pointwiseFilter, pointwiseStride, 'valid', dataFormat);\n\n  if (reshapedTo4D) {\n    return reshape(res, [res.shape[1], res.shape[2], res.shape[3]]);\n  }\n\n  return res;\n}\n\nexport var separableConv2d = op({\n  separableConv2d_: separableConv2d_\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Sigmoid } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes sigmoid element-wise, `1 / (1 + exp(-x))`\n *\n * ```js\n * const x = tf.tensor1d([0, -1, 2, -3]);\n *\n * x.sigmoid().print();  // or tf.sigmoid(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\n\nfunction sigmoid_(x) {\n  var $x = convertToTensor(x, 'x', 'sigmoid');\n  var inputs = {\n    x: $x\n  };\n  return ENGINE.runKernel(Sigmoid, inputs);\n}\n\nexport var sigmoid = op({\n  sigmoid_: sigmoid_\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Sign } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Returns an element-wise indication of the sign of a number.\n *\n * ```js\n * const x = tf.tensor1d([.6, 1.1, -3.3, NaN, 0]);\n *\n * x.sign().print();  // or tf.sign(x)\n * ```\n * @param x The input Tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\n\nfunction sign_(x) {\n  var $x = convertToTensor(x, 'x', 'sign');\n  var inputs = {\n    x: $x\n  };\n  return ENGINE.runKernel(Sign, inputs);\n}\n\nexport var sign = op({\n  sign_: sign_\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Sin } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes sin of the input Tensor element-wise: `sin(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, Math.PI / 2, Math.PI * 3 / 4]);\n *\n * x.sin().print();  // or tf.sin(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\n\nfunction sin_(x) {\n  var $x = convertToTensor(x, 'x', 'sin');\n  var inputs = {\n    x: $x\n  };\n  return ENGINE.runKernel(Sin, inputs);\n}\n\nexport var sin = op({\n  sin_: sin_\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Sinh } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes hyperbolic sin of the input `tf.Tensor` element-wise: `sinh(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, .7]);\n *\n * x.sinh().print();  // or tf.sinh(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\n\nfunction sinh_(x) {\n  var $x = convertToTensor(x, 'x', 'sinh');\n  var inputs = {\n    x: $x\n  };\n  return ENGINE.runKernel(Sinh, inputs);\n}\n\nexport var sinh = op({\n  sinh_: sinh_\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Slice } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Extracts a slice from a `tf.Tensor` starting at coordinates `begin`\n * and is of size `size`.\n *\n * Also available are stricter rank-specific methods with the same signature\n * as this method that assert that `x` is of the given rank:\n *   - `tf.slice1d`\n *   - `tf.slice2d`\n *   - `tf.slice3d`\n *   - `tf.slice4d`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n *\n * x.slice([1], [2]).print();\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * x.slice([1, 0], [1, 2]).print();\n * ```\n * @param x The input `tf.Tensor` to slice from.\n * @param begin The coordinates to start the slice from. The length can be\n *     less than the rank of x - the rest of the axes will have implicit 0 as\n *     start. Can also be a single number, in which case it specifies the\n *     first axis.\n * @param size The size of the slice. The length can be less than the rank of\n *     x - the rest of the axes will have implicit -1. A value of -1 requests\n *     the rest of the dimensions in the axis. Can also be a single number,\n *     in which case it specifies the size of the first axis.\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\n\nfunction slice_(x, begin, size) {\n  var $x = convertToTensor(x, 'x', 'slice', 'string_or_numeric');\n\n  if ($x.rank === 0) {\n    throw new Error('Slicing scalar is not possible');\n  }\n\n  var inputs = {\n    x: $x\n  };\n  var attrs = {\n    begin: begin,\n    size: size\n  };\n  return ENGINE.runKernel(Slice, inputs, attrs);\n}\n\nexport var slice = op({\n  slice_: slice_\n});","import _toConsumableArray from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport * as util from '../util';\nexport function assertParamsValid(input, begin, size) {\n  var inputRank = input.shape.length;\n  util.assert(inputRank === begin.length, function () {\n    return \"Error in slice\".concat(inputRank, \"D: Length of begin \").concat(begin, \" must \") + \"match the rank of the array (\".concat(inputRank, \").\");\n  });\n  util.assert(inputRank === size.length, function () {\n    return \"Error in slice\".concat(inputRank, \"D: Length of size \").concat(size, \" must \") + \"match the rank of the array (\".concat(inputRank, \").\");\n  });\n\n  var _loop = function _loop(i) {\n    util.assert(begin[i] + size[i] <= input.shape[i], function () {\n      return \"Error in slice\".concat(inputRank, \"D: begin[\").concat(i, \"] + size[\").concat(i, \"] \") + \"(\".concat(begin[i] + size[i], \") would overflow input.shape[\").concat(i, \"] (\").concat(input.shape[i], \")\");\n    });\n  };\n\n  for (var i = 0; i < inputRank; ++i) {\n    _loop(i);\n  }\n}\n/** Converts a binary mask to an array of axes. Used in stridedSlice(). */\n\nexport function maskToAxes(mask) {\n  var axes = [];\n  var axis = 0;\n\n  while (mask > 0) {\n    if (mask & 1) {\n      axes.push(axis);\n    }\n\n    mask /= 2;\n    axis++;\n  }\n\n  return axes;\n}\n/** Computes the output shape given the strided slice params. */\n\nexport function computeOutShape(begin, end, strides) {\n  var size = [];\n\n  for (var axis = 0; axis < begin.length; axis++) {\n    size[axis] = Math.ceil((end[axis] - begin[axis]) / strides[axis]);\n  }\n\n  return size;\n} // Creates full selection at the elided dimensions. If the dimension matches\n// the ellipsis mask, override the current stride value. Otherwise, insert.\n\nexport function stridesWithElidedDims(strides, ellipsisInsertionIndex, numElidedAxes, inputShape) {\n  var newStrides = _toConsumableArray(strides);\n\n  for (var i = newStrides.length; i < inputShape.length; i++) {\n    newStrides.push(1);\n  }\n\n  for (var _i = 0; _i < numElidedAxes; _i++) {\n    if (_i === 0) {\n      newStrides[ellipsisInsertionIndex] = 1;\n    } else {\n      newStrides.splice(ellipsisInsertionIndex, 0\n      /* num elements to delete */\n      , 1\n      /* element to add */\n      );\n      newStrides.pop();\n    }\n  }\n\n  return newStrides;\n}\n\nfunction unnormalizeAxis(ellipsisInsertionIndex, numElidedAxes, normalizedAxis) {\n  if (normalizedAxis <= ellipsisInsertionIndex) {\n    return normalizedAxis;\n  }\n\n  return normalizedAxis - (numElidedAxes - 1);\n}\n\nfunction getElidedAxes(numElidedAxes, ellipsisInsertionIndex) {\n  var elidedAxes = [];\n\n  for (var i = 0; i < numElidedAxes; i++) {\n    elidedAxes.push(ellipsisInsertionIndex + i);\n  }\n\n  return elidedAxes;\n} // Normalize the start, end and strides.\n\n\nexport function getNormalizedAxes(inputShape, ellipsisAxes, numInterpolatedAxes, begin, end, strides, beginMask, endMask, ellipsisMask) {\n  var inputRank = inputShape.length;\n  var normalizedBegin = new Array(inputRank),\n      normalizedEnd = new Array(inputRank),\n      normalizedStrides = new Array(inputRank);\n\n  if (ellipsisAxes.length && numInterpolatedAxes > 0) {\n    var fullIndex = ellipsisAxes[0]; // The ellipsis applies to the masked index as well as any dimensions\n    // that are interpolated.\n\n    var numElidedAxes = numInterpolatedAxes + 1;\n    normalizedBegin = startIndicesWithElidedDims(beginMask, fullIndex, numElidedAxes, begin, inputShape);\n    normalizedEnd = stopIndicesWithElidedDims(endMask, fullIndex, numElidedAxes, end, inputShape);\n    normalizedStrides = stridesWithElidedDims(strides, fullIndex, numElidedAxes, inputShape);\n  } else {\n    for (var axis = 0; axis < inputRank; axis++) {\n      normalizedBegin[axis] = startForAxis(beginMask, begin, strides, inputShape, axis, ellipsisMask);\n      normalizedEnd[axis] = stopForAxis(endMask, end, strides, inputShape, axis, ellipsisMask);\n      normalizedStrides[axis] = stridesForAxis(strides, axis, ellipsisMask);\n    }\n  }\n\n  return {\n    begin: normalizedBegin,\n    end: normalizedEnd,\n    strides: normalizedStrides\n  };\n} // Creates full selection at the elided dimensions. If the dimension matches\n// the ellipsis mask, override the current start value. Otherwise, insert.\n\nexport function startIndicesWithElidedDims(beginMask, ellipsisInsertionIndex, numElidedAxes, originalBegin, inputShape) {\n  var newIndices = _toConsumableArray(inputShape);\n\n  var elidedAxes = getElidedAxes(numElidedAxes, ellipsisInsertionIndex);\n\n  for (var axis = 0; axis < newIndices.length; axis++) {\n    if (elidedAxes.indexOf(axis) > -1) {\n      newIndices[axis] = 0;\n    } else {\n      var originalAxis = unnormalizeAxis(ellipsisInsertionIndex, numElidedAxes, axis);\n      var originalValue = originalBegin[originalAxis];\n\n      if (beginMask & 1 << originalAxis) {\n        originalValue = 0;\n      }\n\n      newIndices[axis] = originalValue;\n    }\n  }\n\n  return newIndices;\n} // Creates full selection at the elided dimensions. If the dimension matches\n// the ellipsis mask, override the current stop value. Otherwise, insert.\n\nexport function stopIndicesWithElidedDims(endMask, ellipsisInsertionIndex, numElidedAxes, originalEnd, inputShape) {\n  var newIndices = _toConsumableArray(inputShape);\n\n  var elidedAxes = getElidedAxes(numElidedAxes, ellipsisInsertionIndex);\n\n  for (var axis = 0; axis < newIndices.length; axis++) {\n    if (elidedAxes.indexOf(axis) > -1) {\n      newIndices[axis] = Number.MAX_SAFE_INTEGER;\n    } else {\n      var originalAxis = unnormalizeAxis(ellipsisInsertionIndex, numElidedAxes, axis);\n      var originalValue = originalEnd[originalAxis];\n\n      if (endMask & 1 << originalAxis) {\n        originalValue = Number.MAX_SAFE_INTEGER;\n      }\n\n      newIndices[axis] = originalValue;\n    }\n  }\n\n  for (var i = 0; i < newIndices.length; i++) {\n    // Handle negative indices\n    var axisSize = inputShape[i];\n\n    if (newIndices[i] < 0) {\n      newIndices[i] += axisSize;\n    }\n\n    newIndices[i] = util.clamp(0, newIndices[i], inputShape[i]);\n  }\n\n  return newIndices;\n}\nexport function stridesForAxis(strides, axis, ellipsisMask) {\n  var stride = strides[axis];\n\n  if (ellipsisMask & 1 << axis || stride == null) {\n    stride = 1;\n  }\n\n  return stride;\n}\nexport function startForAxis(beginMask, startIndices, strides, inputShape, axis, ellipsisMask) {\n  // Begin with the specified index\n  var start = startIndices[axis];\n  var stride = strides[axis] || 1; // Check the axis bit from right of masked axes, or the begin index is not set\n  // for the axis.\n\n  if (beginMask & 1 << axis || ellipsisMask & 1 << axis || start == null) {\n    if (stride > 0) {\n      // Forward iteration - use the first element. These values will get\n      // clamped below (Note: We could have set them to 0 and axis_size-1, but\n      // use lowest() and max() to maintain symmetry with StopForAxis())\n      start = Number.MIN_SAFE_INTEGER;\n    } else {\n      // Backward iteration - use the last element.\n      start = Number.MAX_SAFE_INTEGER;\n    }\n  } // Handle negative indices\n\n\n  var axisSize = inputShape[axis];\n\n  if (start < 0) {\n    start += axisSize;\n  } // Clamping\n\n\n  start = util.clamp(0, start, axisSize - 1);\n  return start;\n}\nexport function stopForAxis(endMask, stopIndices, strides, inputShape, axis, ellipsisMask) {\n  // Begin with the specified index\n  var stop = stopIndices[axis];\n  var stride = strides[axis] || 1; // Check the axis bit from right of masked axes, or if the stop index is not\n  // set for this axis.\n\n  if (endMask & 1 << axis || ellipsisMask & 1 << axis || stop == null) {\n    if (stride > 0) {\n      // Forward iteration - use the last element. These values will get\n      // clamped below\n      stop = Number.MAX_SAFE_INTEGER;\n    } else {\n      // Backward iteration - use the first element.\n      stop = Number.MIN_SAFE_INTEGER;\n    }\n  } // Handle negative indices\n\n\n  var axisSize = inputShape[axis];\n\n  if (stop < 0) {\n    stop += axisSize;\n  } // Clamping\n  // Because the end index points one past the last element, we need slightly\n  // different clamping ranges depending on the direction.\n\n\n  if (stride > 0) {\n    // Forward iteration\n    stop = util.clamp(0, stop, axisSize);\n  } else {\n    // Backward iteration\n    stop = util.clamp(-1, stop, axisSize - 1);\n  }\n\n  return stop;\n}\n/**\n * Returns true if the slice occupies a continous set of elements in the\n * 'flat' space.\n */\n\nexport function isSliceContinous(shape, begin, size) {\n  // Index of the first axis that has size > 1.\n  var firstNonOneAxis = size.length;\n\n  for (var i = 0; i < size.length; i++) {\n    if (size[i] > 1) {\n      firstNonOneAxis = i;\n      break;\n    }\n  }\n\n  for (var _i2 = firstNonOneAxis + 1; _i2 < size.length; _i2++) {\n    if (begin[_i2] > 0 || size[_i2] !== shape[_i2]) {\n      return false;\n    }\n  }\n\n  return true;\n}\nexport function computeFlatOffset(begin, strides) {\n  var flatOffset = begin.length > 0 ? begin[begin.length - 1] : 1;\n\n  for (var i = 0; i < begin.length - 1; i++) {\n    flatOffset += begin[i] * strides[i];\n  }\n\n  return flatOffset;\n}\nexport function parseSliceParams(x, begin, size) {\n  // The following logic allows for more ergonomic calls.\n  var begin_;\n  var xRank = x.shape.length;\n\n  if (typeof begin === 'number') {\n    begin_ = [begin].concat(_toConsumableArray(new Array(xRank - 1).fill(0)));\n  } else if (begin.length < xRank) {\n    begin_ = begin.concat(new Array(xRank - begin.length).fill(0));\n  } else {\n    begin_ = begin.slice();\n  }\n\n  begin_.forEach(function (d) {\n    util.assert(d !== -1, function () {\n      return 'slice() does not support negative begin indexing.';\n    });\n  });\n  var size_;\n\n  if (size == null) {\n    size_ = new Array(xRank).fill(-1);\n  } else if (typeof size === 'number') {\n    size_ = [size].concat(_toConsumableArray(new Array(xRank - 1).fill(-1)));\n  } else if (size.length < xRank) {\n    size_ = size.concat(new Array(xRank - size.length).fill(-1));\n  } else {\n    size_ = size;\n  }\n\n  size_ = size_.map(function (d, i) {\n    if (d >= 0) {\n      return d;\n    } else {\n      util.assert(d === -1, function () {\n        return \"Negative size values should be exactly -1 but got \" + \"\".concat(d, \" for the slice() size at index \").concat(i, \".\");\n      });\n      return x.shape[i] - begin_[i];\n    }\n  });\n  return [begin_, size_];\n}\nexport function sliceInfo(xShape, begin, end, strides, beginMask, endMask, ellipsisMask, newAxisMask, shrinkAxisMask) {\n  // make a copy because it may be modified further down.\n  var $begin = begin.slice();\n  var $end = end.slice();\n  var $strides = strides;\n\n  if (strides == null) {\n    $strides = new Array($begin.length);\n  }\n\n  var ellipsisAxes = maskToAxes(ellipsisMask);\n\n  if (ellipsisAxes.length > 1) {\n    throw new Error('Multiple ellipses in slice is not allowed.');\n  }\n\n  if (ellipsisMask !== 0 && newAxisMask !== 0) {\n    throw new Error('Using both ellipsisMask and newAxisMask is not yet supported.');\n  }\n\n  if (ellipsisMask !== 0 && shrinkAxisMask !== 0) {\n    throw new Error('Using both ellipsisMask and shrinkAxisMask is not yet supported.');\n  }\n\n  var numInterpolatedAxes = xShape.length - $begin.length; // Expand the dims of x based on the newAxisMask.\n\n  var expandAxes = maskToAxes(newAxisMask);\n  var newShape = xShape.slice();\n  expandAxes.forEach(function (axis) {\n    $begin[axis] = 0;\n    $end[axis] = 1;\n    newShape.splice(axis, 0, 1);\n  });\n\n  var _getNormalizedAxes = getNormalizedAxes(newShape, ellipsisAxes, numInterpolatedAxes, $begin, $end, $strides, beginMask, endMask, ellipsisMask),\n      normalizedBegin = _getNormalizedAxes.begin,\n      normalizedEnd = _getNormalizedAxes.end,\n      normalizedStrides = _getNormalizedAxes.strides;\n\n  $begin = normalizedBegin;\n  $end = normalizedEnd;\n  $strides = normalizedStrides;\n  var shrinkAxes = maskToAxes(shrinkAxisMask); // Adjust the ends based on the shrink mask.\n\n  shrinkAxes.forEach(function (axis) {\n    $end[axis] = $begin[axis] + 1;\n    $strides[axis] = 1;\n  }); // Figure out the output shape.\n\n  var size = computeOutShape($begin, $end, $strides); // Remove the axes based on shrinkMask.\n\n  var outShape = size.filter(function (_, axis) {\n    return shrinkAxes.indexOf(axis) === -1;\n  });\n  var nonStrided = $strides.every(function (v) {\n    return v === 1;\n  });\n  return {\n    nonStrided: nonStrided,\n    $begin: $begin,\n    $end: $end,\n    $strides: $strides,\n    size: size,\n    newShape: newShape,\n    outShape: outShape\n  };\n}","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Softmax } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes the softmax normalized vector given the logits.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n *\n * a.softmax().print();  // or tf.softmax(a)\n * ```\n *\n * ```js\n * const a = tf.tensor2d([2, 4, 6, 1, 2, 3], [2, 3]);\n *\n * a.softmax().print();  // or tf.softmax(a)\n * ```\n *\n * @param logits The logits array.\n * @param dim The dimension softmax would be performed on. Defaults to `-1`\n *     which indicates the last dimension.\n *\n * @doc {heading: 'Operations', subheading: 'Normalization'}\n */\n\nfunction softmax_(logits) {\n  var dim = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\n  var $logits = convertToTensor(logits, 'logits', 'softmax', 'float32');\n\n  if (dim === -1) {\n    dim = $logits.rank - 1;\n  }\n\n  if (dim !== $logits.rank - 1) {\n    throw Error('Softmax along a non-last dimension is not yet supported. ' + \"Logits was rank \".concat($logits.rank, \" and dim was \").concat(dim));\n  }\n\n  var inputs = {\n    logits: $logits\n  };\n  var attrs = {\n    dim: dim\n  };\n  return ENGINE.runKernel(Softmax, inputs, attrs);\n}\n\nexport var softmax = op({\n  softmax_: softmax_\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Softplus } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes softplus of the input `tf.Tensor` element-wise: `log(exp(x) + 1)`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, .7]);\n *\n * x.softplus().print();  // or tf.softplus(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\n\nfunction softplus_(x) {\n  var $x = convertToTensor(x, 'x', 'softplus');\n  var inputs = {\n    x: $x\n  };\n  return ENGINE.runKernel(Softplus, inputs);\n}\n\nexport var softplus = op({\n  softplus_: softplus_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { SpaceToBatchND } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\n/**\n * This operation divides \"spatial\" dimensions `[1, ..., M]` of the input into\n * a grid of blocks of shape `blockShape`, and interleaves these blocks with\n * the \"batch\" dimension (0) such that in the output, the spatial\n * dimensions `[1, ..., M]` correspond to the position within the grid,\n * and the batch dimension combines both the position within a spatial block\n * and the original batch position. Prior to division into blocks,\n * the spatial dimensions of the input are optionally zero padded\n * according to `paddings`. See below for a precise description.\n *\n * ```js\n * const x = tf.tensor4d([1, 2, 3, 4], [1, 2, 2, 1]);\n * const blockShape = [2, 2];\n * const paddings = [[0, 0], [0, 0]];\n *\n * x.spaceToBatchND(blockShape, paddings).print();\n * ```\n *\n * @param x A `tf.Tensor`. N-D with `x.shape` = `[batch] + spatialShape +\n * remainingShape`, where spatialShape has `M` dimensions.\n * @param blockShape A 1-D array. Must have shape `[M]`, all values must\n * be >= 1.\n * @param paddings A 2-D array. Must have shape `[M, 2]`, all values must be >=\n *     0. `paddings[i] = [padStart, padEnd]` specifies the amount to zero-pad\n * from input dimension `i + 1`, which corresponds to spatial dimension `i`. It\n * is required that\n * `(inputShape[i + 1] + padStart + padEnd) % blockShape[i] === 0`\n *\n * This operation is equivalent to the following steps:\n *\n * 1. Zero-pad the start and end of dimensions `[1, ..., M]` of the input\n * according to `paddings` to produce `padded` of shape paddedShape.\n *\n * 2. Reshape `padded` to `reshapedPadded` of shape:\n * `[batch] + [paddedShape[1] / blockShape[0], blockShape[0], ...,\n * paddedShape[M] / blockShape[M-1], blockShape[M-1]] + remainingShape`\n *\n * 3. Permute dimensions of `reshapedPadded` to produce `permutedReshapedPadded`\n * of shape: `blockShape + [batch] + [paddedShape[1] / blockShape[0], ...,\n * paddedShape[M] / blockShape[M-1]] + remainingShape`\n *\n * 4. Reshape `permutedReshapedPadded` to flatten `blockShape` into the\n * batch dimension, producing an output tensor of shape:\n * `[batch * prod(blockShape)] + [paddedShape[1] / blockShape[0], ...,\n * paddedShape[M] / blockShape[M-1]] + remainingShape`\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\n\nfunction spaceToBatchND_(x, blockShape, paddings) {\n  var $x = convertToTensor(x, 'x', 'spaceToBatchND');\n  util.assert($x.rank >= 1 + blockShape.length, function () {\n    return \"input rank \".concat($x.rank, \" should be > than [blockShape] \").concat(blockShape.length);\n  });\n  util.assert(paddings.length === blockShape.length, function () {\n    return \"paddings.shape[0] \".concat(paddings.length, \" must be equal to [blockShape] \").concat(blockShape.length);\n  });\n  util.assert($x.shape.reduce(function (a, b, i) {\n    if (i > 0 && i <= blockShape.length) {\n      return a && (b + paddings[i - 1][0] + paddings[i - 1][1]) % blockShape[i - 1] === 0;\n    }\n\n    return a;\n  }, true), function () {\n    return \"input spatial dimensions \".concat($x.shape.slice(1), \" with paddings \").concat(paddings.toString(), \" must be divisible by blockShapes \").concat(blockShape.toString());\n  });\n  var inputs = {\n    x: $x\n  };\n  var attrs = {\n    blockShape: blockShape,\n    paddings: paddings\n  };\n  return ENGINE.runKernel(SpaceToBatchND, inputs, attrs);\n}\n\nexport var spaceToBatchND = op({\n  spaceToBatchND_: spaceToBatchND_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../../engine';\nimport { FFT } from '../../kernel_names';\nimport { assert } from '../../util';\nimport { op } from '../operation';\n/**\n * Fast Fourier transform.\n *\n * Computes the 1-dimensional discrete Fourier transform over the inner-most\n * dimension of input.\n *\n * ```js\n * const real = tf.tensor1d([1, 2, 3]);\n * const imag = tf.tensor1d([1, 2, 3]);\n * const x = tf.complex(real, imag);\n *\n * x.fft().print();  // tf.spectral.fft(x).print();\n * ```\n * @param input The complex input to compute an fft over.\n *\n * @doc {heading: 'Operations', subheading: 'Spectral', namespace: 'spectral'}\n */\n\nfunction fft_(input) {\n  assert(input.dtype === 'complex64', function () {\n    return \"The dtype for tf.spectral.fft() must be complex64 \" + \"but got \".concat(input.dtype, \".\");\n  });\n  var inputs = {\n    input: input\n  };\n  return ENGINE.runKernel(FFT, inputs);\n}\n\nexport var fft = op({\n  fft_: fft_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../../engine';\nimport { IFFT } from '../../kernel_names';\nimport { assert } from '../../util';\nimport { op } from '../operation';\n/**\n * Inverse fast Fourier transform.\n *\n * Computes the inverse 1-dimensional discrete Fourier transform over the\n * inner-most dimension of input.\n *\n * ```js\n * const real = tf.tensor1d([1, 2, 3]);\n * const imag = tf.tensor1d([1, 2, 3]);\n * const x = tf.complex(real, imag);\n *\n * x.ifft().print();  // tf.spectral.ifft(x).print();\n * ```\n * @param input The complex input to compute an ifft over.\n *\n * @doc {heading: 'Operations', subheading: 'Spectral', namespace: 'spectral'}\n */\n\nfunction ifft_(input) {\n  assert(input.dtype === 'complex64', function () {\n    return \"The dtype for tf.spectral.ifft() must be complex64 \" + \"but got \".concat(input.dtype, \".\");\n  });\n  var inputs = {\n    input: input\n  };\n  return ENGINE.runKernel(IFFT, inputs);\n}\n\nexport var ifft = op({\n  ifft_: ifft_\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { complex } from '../complex';\nimport { concat } from '../concat';\nimport { imag } from '../imag';\nimport { mul } from '../mul';\nimport { op } from '../operation';\nimport { real } from '../real';\nimport { reshape } from '../reshape';\nimport { reverse } from '../reverse';\nimport { scalar } from '../scalar';\nimport { slice } from '../slice';\nimport { ifft } from './ifft';\n/**\n * Inversed real value input fast Fourier transform.\n *\n * Computes the 1-dimensional inversed discrete Fourier transform over the\n * inner-most dimension of the real input.\n *\n * ```js\n * const real = tf.tensor1d([1, 2, 3]);\n * const imag = tf.tensor1d([0, 0, 0]);\n * const x = tf.complex(real, imag);\n *\n * x.irfft().print();\n * ```\n * @param input The real value input to compute an irfft over.\n *\n * @doc {heading: 'Operations', subheading: 'Spectral', namespace: 'spectral'}\n */\n\nfunction irfft_(input) {\n  var innerDimensionSize = input.shape[input.shape.length - 1];\n  var batch = input.size / innerDimensionSize;\n  var ret;\n\n  if (innerDimensionSize <= 2) {\n    var complexInput = reshape(input, [batch, innerDimensionSize]);\n    ret = ifft(complexInput);\n  } else {\n    // The length of unique components of the DFT of a real-valued signal\n    // is 2 * (input_len - 1)\n    var outputShape = [batch, 2 * (innerDimensionSize - 1)];\n    var realInput = reshape(real(input), [batch, innerDimensionSize]);\n    var imagInput = reshape(imag(input), [batch, innerDimensionSize]);\n    var realConjugate = reverse(slice(realInput, [0, 1], [batch, innerDimensionSize - 2]), 1);\n    var imagConjugate = mul(reverse(slice(imagInput, [0, 1], [batch, innerDimensionSize - 2]), 1), scalar(-1));\n    var r = concat([realInput, realConjugate], 1);\n    var i = concat([imagInput, imagConjugate], 1);\n\n    var _complexInput = reshape(complex(r, i), [outputShape[0], outputShape[1]]);\n\n    ret = ifft(_complexInput);\n  }\n\n  ret = real(ret); // reshape the result if the input is 3D tensor.\n\n  if (input.rank === 3 && input.shape[0] !== 0) {\n    var temp = ret;\n    var _batch = input.shape[0];\n    ret = reshape(ret, [_batch, ret.shape[0] / _batch, ret.shape[1]]);\n    temp.dispose();\n  }\n\n  return ret;\n}\n\nexport var irfft = op({\n  irfft_: irfft_\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { assert } from '../../util';\nimport { complex } from '../complex';\nimport { concat } from '../concat';\nimport { imag } from '../imag';\nimport { op } from '../operation';\nimport { real } from '../real';\nimport { reshape } from '../reshape';\nimport { slice } from '../slice';\nimport { split } from '../split';\nimport { zeros } from '../zeros';\nimport { zerosLike } from '../zeros_like';\nimport { fft } from './fft';\n/**\n * Real value input fast Fourier transform.\n *\n * Computes the 1-dimensional discrete Fourier transform over the\n * inner-most dimension of the real input.\n *\n * ```js\n * const real = tf.tensor1d([1, 2, 3]);\n *\n * real.rfft().print();\n * ```\n * @param input The real value input to compute an rfft over.\n *\n * @doc {heading: 'Operations', subheading: 'Spectral', namespace: 'spectral'}\n */\n\nfunction rfft_(input, fftLength) {\n  assert(input.dtype === 'float32', function () {\n    return \"The dtype for rfft() must be real value but got \".concat(input.dtype);\n  });\n  var innerDimensionSize = input.shape[input.shape.length - 1];\n  var batch = input.size / innerDimensionSize;\n  var adjustedInput;\n\n  if (fftLength != null && fftLength < innerDimensionSize) {\n    // Need to crop\n    var begin = input.shape.map(function (v) {\n      return 0;\n    });\n    var size = input.shape.map(function (v) {\n      return v;\n    });\n    size[input.shape.length - 1] = fftLength;\n    adjustedInput = slice(input, begin, size);\n    innerDimensionSize = fftLength;\n  } else if (fftLength != null && fftLength > innerDimensionSize) {\n    // Need to pad with zeros\n    var zerosShape = input.shape.map(function (v) {\n      return v;\n    });\n    zerosShape[input.shape.length - 1] = fftLength - innerDimensionSize;\n    adjustedInput = concat([input, zeros(zerosShape)], input.shape.length - 1);\n    innerDimensionSize = fftLength;\n  } else {\n    adjustedInput = input;\n  } // Complement the input with zero imaginary numbers.\n\n\n  var zerosInput = zerosLike(adjustedInput);\n  var complexInput = reshape(complex(adjustedInput, zerosInput), [batch, innerDimensionSize]);\n  var ret = fft(complexInput); // Exclude complex conjugations. These conjugations are put symmetrically.\n\n  var half = Math.floor(innerDimensionSize / 2) + 1;\n  var realValues = real(ret);\n  var imagValues = imag(ret);\n  var realComplexConjugate = split(realValues, [half, innerDimensionSize - half], realValues.shape.length - 1);\n  var imagComplexConjugate = split(imagValues, [half, innerDimensionSize - half], imagValues.shape.length - 1);\n  var outputShape = adjustedInput.shape.slice();\n  outputShape[adjustedInput.shape.length - 1] = half;\n  return reshape(complex(realComplexConjugate[0], imagComplexConjugate[0]), outputShape);\n}\n\nexport var rfft = op({\n  rfft_: rfft_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { SplitV } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Splits a `tf.Tensor` into sub tensors.\n *\n * If `numOrSizeSplits` is a number, splits `x` along dimension `axis`\n * into `numOrSizeSplits` smaller tensors.\n * Requires that `numOrSizeSplits` evenly divides `x.shape[axis]`.\n *\n * If `numOrSizeSplits` is a number array, splits `x` into\n * `numOrSizeSplits.length` pieces. The shape of the `i`-th piece has the\n * same size as `x` except along dimension `axis` where the size is\n * `numOrSizeSplits[i]`.\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4, 5, 6, 7, 8], [2, 4]);\n * const [a, b] = tf.split(x, 2, 1);\n * a.print();\n * b.print();\n *\n * const [c, d, e] = tf.split(x, [1, 2, 1], 1);\n * c.print();\n * d.print();\n * e.print();\n * ```\n *\n * @param x The input tensor to split.\n * @param numOrSizeSplits Either an integer indicating the number of\n * splits along the axis or an array of integers containing the sizes of\n * each output tensor along the axis. If a number then it must evenly divide\n * `x.shape[axis]`; otherwise the sum of sizes must match `x.shape[axis]`.\n * Can contain one -1 indicating that dimension is to be inferred.\n * @param axis The dimension along which to split. Defaults to 0 (the first\n * dim).\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\n\nfunction split_(x, numOrSizeSplits) {\n  var axis = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var $x = convertToTensor(x, 'x', 'split');\n  var inputs = {\n    x: $x\n  };\n  var attr = {\n    numOrSizeSplits: numOrSizeSplits,\n    axis: axis\n  };\n  return ENGINE.runKernel(SplitV, inputs, attr);\n}\n\nexport var split = op({\n  split_: split_\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Sqrt } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes square root of the input `tf.Tensor` element-wise: `y = sqrt(x)`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 4, -1]);\n *\n * x.sqrt().print();  // or tf.sqrt(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\n\nfunction sqrt_(x) {\n  var $x = convertToTensor(x, 'x', 'sqrt');\n  var inputs = {\n    x: $x\n  };\n  return ENGINE.runKernel(Sqrt, inputs);\n}\n\nexport var sqrt = op({\n  sqrt_: sqrt_\n});","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes square of `x` element-wise: `x ^ 2`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, Math.sqrt(2), -1]);\n *\n * x.square().print();  // or tf.square(x)\n * ```\n * @param x The input Tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\n\nfunction square_(x) {\n  var $x = convertToTensor(x, 'x', 'square');\n  var attrs = {};\n  return ENGINE.runKernel('Square', {\n    x: $x\n  }, attrs);\n}\n\nexport var square = op({\n  square_: square_\n});","import _slicedToArray from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { SquaredDifference } from '../kernel_names';\nimport { makeTypesMatch } from '../tensor_util';\nimport { convertToTensor } from '../tensor_util_env';\nimport { assertAndGetBroadcastShape } from './broadcast_util';\nimport { op } from './operation';\n/**\n * Returns (a - b) * (a - b) element-wise.\n * Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([1, 4, 3, 16]);\n * const b = tf.tensor1d([1, 2, 9, 4]);\n *\n * a.squaredDifference(b).print();  // or tf.squaredDifference(a, b)\n * ```\n *\n * ```js\n * // Broadcast squared difference  a with b.\n * const a = tf.tensor1d([2, 4, 6, 8]);\n * const b = tf.scalar(5);\n *\n * a.squaredDifference(b).print();  // or tf.squaredDifference(a, b)\n * ```\n *\n * @param a The first tensor.\n * @param b The second tensor. Must have the same type as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\n\nfunction squaredDifference_(a, b) {\n  var $a = convertToTensor(a, 'a', 'squaredDifference');\n  var $b = convertToTensor(b, 'b', 'squaredDifference');\n\n  var _makeTypesMatch = makeTypesMatch($a, $b);\n\n  var _makeTypesMatch2 = _slicedToArray(_makeTypesMatch, 2);\n\n  $a = _makeTypesMatch2[0];\n  $b = _makeTypesMatch2[1];\n  assertAndGetBroadcastShape($a.shape, $b.shape);\n  var inputs = {\n    a: $a,\n    b: $b\n  };\n  var attrs = {};\n  return ENGINE.runKernel(SquaredDifference, inputs, attrs);\n}\n\nexport var squaredDifference = op({\n  squaredDifference_: squaredDifference_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { convertToTensor } from '../tensor_util_env';\nimport { squeezeShape } from '../util';\nimport { op } from './operation';\nimport { reshape } from './reshape';\n/**\n * Removes dimensions of size 1 from the shape of a `tf.Tensor`.\n *\n * ```js\n * const x = tf.tensor([1, 2, 3, 4], [1, 1, 4]);\n * x.squeeze().print();\n * ```\n *\n * @param x The input tensor to be squeezed.\n * @param axis An optional list of numbers. If specified, only\n *     squeezes the dimensions listed. The dimension index starts at 0. It\n * is an error to squeeze a dimension that is not 1.\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\n\nfunction squeeze_(x, axis) {\n  var $x = convertToTensor(x, 'x', 'squeeze');\n  return reshape($x, squeezeShape($x.shape, axis).newShape);\n}\n\nexport var squeeze = op({\n  squeeze_: squeeze_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Pack } from '../kernel_names';\nimport { convertToTensorArray } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\n/**\n * Stacks a list of rank-`R` `tf.Tensor`s into one rank-`(R+1)` `tf.Tensor`.\n *\n * ```js\n * const a = tf.tensor1d([1, 2]);\n * const b = tf.tensor1d([3, 4]);\n * const c = tf.tensor1d([5, 6]);\n * tf.stack([a, b, c]).print();\n * ```\n *\n * @param tensors A list of tensor objects with the same shape and dtype.\n * @param axis The axis to stack along. Defaults to 0 (the first dim).\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\n\nfunction stack_(tensors) {\n  var axis = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var $tensors = convertToTensorArray(tensors, 'tensors', 'stack', 'string_or_numeric');\n  util.assert($tensors.length >= 1, function () {\n    return 'Pass at least one tensor to tf.stack';\n  });\n\n  if ($tensors.length > 0) {\n    util.assert(axis <= $tensors[0].rank, function () {\n      return 'Axis must be <= rank of the tensor';\n    });\n  }\n\n  var inputs = $tensors;\n  var attrs = {\n    axis: axis\n  };\n  return ENGINE.runKernel(Pack, inputs, attrs);\n}\n\nexport var stack = op({\n  stack_: stack_\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Step } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes step of the input `tf.Tensor` element-wise: `x > 0 ? 1 : alpha * x`\n *\n * ```js\n * const x = tf.tensor1d([0, 2, -1, -3]);\n *\n * x.step(.5).print();  // or tf.step(x, .5)\n * ```\n * @param x The input tensor.\n * @param alpha The gradient when input is negative.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\n\nfunction step_(x) {\n  var alpha = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.0;\n  var $x = convertToTensor(x, 'x', 'step');\n  var inputs = {\n    x: $x\n  };\n  var attrs = {\n    alpha: alpha\n  };\n  return ENGINE.runKernel(Step, inputs, attrs);\n}\n\nexport var step = op({\n  step_: step_\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { StridedSlice } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Extracts a strided slice of a tensor.\n *\n * Roughly speaking, this op extracts a slice of size (end-begin)/stride from\n * the given input tensor (x). Starting at the location specified by begin the\n * slice continues by adding stride to the index until all dimensions are not\n * less than end. Note that a stride can be negative, which causes a reverse\n * slice.\n *\n * ```js\n * const t = tf.tensor3d([1, 1, 1 ,2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6, 6],\n *    [3, 2, 3]);\n * t.stridedSlice([1, 0, 0], [2, 1, 3], [1, 1, 1]).print()  // [[[3, 3, 3]]]\n * t.stridedSlice([1, 0, 0], [2, 2, 3], [1, 1, 1]).print()  // [[[3, 3, 3],\n *                                                     // [4, 4, 4]]]\n * t.stridedSlice([1, -1, 0], [2, -3, 3], [1, -1, 1]).print() // [[[4, 4, 4],\n *                                                     // [3, 3, 3]]]\n * ```\n *\n * @param x The tensor to stride slice.\n * @param begin The coordinates to start the slice from.\n * @param end: The coordinates to end the slice at.\n * @param strides: The size of the slice.\n * @param beginMask: If the ith bit of beginMask is set, begin[i] is ignored\n *      and the fullest possible range in that dimension is used instead.\n * @param endMask: If the ith bit of endMask is set, end[i] is ignored\n *      and the fullest possible range in that dimension is used instead.\n * @param shrinkAxisMask: a bitmask where bit i implies that\n * the ith specification should shrink the dimensionality. begin and end must\n * imply a slice of size 1 in the dimension.\n *\n * @doc {heading: 'Operations', subheading: 'Slicing and Joining'}\n */\n\nfunction stridedSlice_(x, begin, end, strides) {\n  var beginMask = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n  var endMask = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n  var ellipsisMask = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 0;\n  var newAxisMask = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 0;\n  var shrinkAxisMask = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : 0;\n  var $x = convertToTensor(x, 'x', 'stridedSlice');\n  var inputs = {\n    x: $x\n  };\n  var attrs = {\n    begin: begin,\n    end: end,\n    strides: strides,\n    beginMask: beginMask,\n    endMask: endMask,\n    ellipsisMask: ellipsisMask,\n    newAxisMask: newAxisMask,\n    shrinkAxisMask: shrinkAxisMask\n  };\n  return ENGINE.runKernel(StridedSlice, inputs, attrs);\n}\n\nexport var stridedSlice = op({\n  stridedSlice_: stridedSlice_\n});","import _slicedToArray from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Sub } from '../kernel_names';\nimport { makeTypesMatch } from '../tensor_util';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Subtracts two `tf.Tensor`s element-wise, A - B. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([10, 20, 30, 40]);\n * const b = tf.tensor1d([1, 2, 3, 4]);\n *\n * a.sub(b).print();  // or tf.sub(a, b)\n * ```\n *\n * ```js\n * // Broadcast subtract a with b.\n * const a = tf.tensor1d([10, 20, 30, 40]);\n * const b = tf.scalar(5);\n *\n * a.sub(b).print();  // or tf.sub(a, b)\n * ```\n * @param a The first `tf.Tensor` to subtract from.\n * @param b The second `tf.Tensor` to be subtracted. Must have the same dtype as\n * `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\n\nfunction sub_(a, b) {\n  var $a = convertToTensor(a, 'a', 'sub');\n  var $b = convertToTensor(b, 'b', 'sub');\n\n  var _makeTypesMatch = makeTypesMatch($a, $b);\n\n  var _makeTypesMatch2 = _slicedToArray(_makeTypesMatch, 2);\n\n  $a = _makeTypesMatch2[0];\n  $b = _makeTypesMatch2[1];\n  var inputs = {\n    a: $a,\n    b: $b\n  };\n  return ENGINE.runKernel(Sub, inputs);\n}\n\nexport var sub = op({\n  sub_: sub_\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Sum } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { cast } from './cast';\nimport { op } from './operation';\n/**\n * Computes the sum of elements across dimensions of a `tf.Tensor`.\n *\n * Reduces the input along the dimensions given in `axes`. Unless `keepDims`\n * is true, the rank of the `tf.Tensor` is reduced by 1 for each entry in\n * `axes`. If `keepDims` is true, the reduced dimensions are retained with\n * length 1. If axes has no entries, all dimensions are reduced, and a\n * `tf.Tensor` with a single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.sum().print();  // or tf.sum(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * const axis = 1;\n * x.sum(axis).print();  // or tf.sum(x, axis)\n * ```\n *\n * @param x The input tensor to compute the sum over. If the dtype is `bool`\n *   it will be converted to `int32` and the output dtype will be `int32`.\n * @param axis The dimension(s) to reduce. By default it reduces\n *     all dimensions.\n * @param keepDims If true, retains reduced dimensions with size 1.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\n\nfunction sum_(x) {\n  var axis = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var keepDims = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var $x = convertToTensor(x, 'x', 'sum');\n\n  if ($x.dtype === 'bool') {\n    $x = cast($x, 'int32');\n  }\n\n  var inputs = {\n    x: $x\n  };\n  var attrs = {\n    axis: axis,\n    keepDims: keepDims\n  };\n  return ENGINE.runKernel(Sum, inputs, attrs);\n}\n\nexport var sum = op({\n  sum_: sum_\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Tan } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes tan of the input `tf.Tensor` element-wise, `tan(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, Math.PI / 2, Math.PI * 3 / 4]);\n *\n * x.tan().print();  // or tf.tan(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\n\nfunction tan_(x) {\n  var $x = convertToTensor(x, 'x', 'tan');\n  var inputs = {\n    x: $x\n  };\n  return ENGINE.runKernel(Tan, inputs);\n}\n\nexport var tan = op({\n  tan_: tan_\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Tanh } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes hyperbolic tangent of the input `tf.Tensor` element-wise: `tanh(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, 70]);\n *\n * x.tanh().print();  // or tf.tanh(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\n\nfunction tanh_(x) {\n  var $x = convertToTensor(x, 'x', 'tanh');\n  var inputs = {\n    x: $x\n  };\n  return ENGINE.runKernel(Tanh, inputs);\n}\n\nexport var tanh = op({\n  tanh_: tanh_\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { assert, assertNonNegativeIntegerDimensions, flatten, inferDtype, isTypedArray, sizeFromShape, toTypedArray } from '../util';\n/** This is shared code across all tensor creation methods. */\n\nexport function makeTensor(values, shape, inferredShape, dtype) {\n  if (dtype == null) {\n    dtype = inferDtype(values);\n  }\n\n  if (dtype === 'complex64') {\n    throw new Error(\"Cannot construct a complex64 tensor directly. \" + \"Please use tf.complex(real, imag).\");\n  }\n\n  if (!isTypedArray(values) && !Array.isArray(values) && typeof values !== 'number' && typeof values !== 'boolean' && typeof values !== 'string') {\n    throw new Error('values passed to tensor(values) must be a number/boolean/string or ' + 'an array of numbers/booleans/strings, or a TypedArray');\n  }\n\n  if (shape != null) {\n    assertNonNegativeIntegerDimensions(shape);\n    var providedSize = sizeFromShape(shape);\n    var inferredSize = sizeFromShape(inferredShape);\n    assert(providedSize === inferredSize, function () {\n      return \"Based on the provided shape, [\".concat(shape, \"], the tensor should have \") + \"\".concat(providedSize, \" values but has \").concat(inferredSize);\n    });\n\n    for (var i = 0; i < inferredShape.length; ++i) {\n      var inferred = inferredShape[i];\n      var flatDimsDontMatch = i === inferredShape.length - 1 ? inferred !== sizeFromShape(shape.slice(i)) : true;\n      assert(inferredShape[i] === shape[i] || !flatDimsDontMatch, function () {\n        return \"Error creating a new Tensor. Inferred shape \" + \"(\".concat(inferredShape, \") does not match the provided \") + \"shape (\".concat(shape, \"). \");\n      });\n    }\n  }\n\n  if (!isTypedArray(values) && !Array.isArray(values)) {\n    values = [values];\n  }\n\n  shape = shape || inferredShape;\n  values = dtype !== 'string' ? toTypedArray(values, dtype) : flatten(values, [], true);\n  return ENGINE.makeTensor(values, shape, dtype);\n}","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Tile } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\n/**\n * Construct a tensor by repeating it the number of times given by reps.\n *\n * This operation creates a new tensor by replicating `input` `reps`\n * times. The output tensor's i'th dimension has `input.shape[i] *\n * reps[i]` elements, and the values of `input` are replicated\n * `reps[i]` times along the i'th dimension. For example, tiling\n * `[a, b, c, d]` by `[2]` produces `[a, b, c, d, a, b, c, d]`.\n *\n * ```js\n * const a = tf.tensor1d([1, 2]);\n *\n * a.tile([2]).print();    // or a.tile([2])\n * ```\n *\n * ```js\n * const a = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * a.tile([1, 2]).print();  // or a.tile([1, 2])\n * ```\n * @param x The tensor to tile.\n * @param reps Determines the number of replications per dimension.\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\n\nfunction tile_(x, reps) {\n  var $x = convertToTensor(x, 'x', 'tile', 'string_or_numeric');\n  util.assert($x.rank === reps.length, function () {\n    return \"Error in transpose: rank of input \".concat($x.rank, \" \") + \"must match length of reps \".concat(reps, \".\");\n  });\n  var inputs = {\n    x: $x\n  };\n  var attrs = {\n    reps: reps\n  };\n  return ENGINE.runKernel(Tile, inputs, attrs);\n}\n\nexport var tile = op({\n  tile_: tile_\n});","import _slicedToArray from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { TopK } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Finds the values and indices of the `k` largest entries along the last\n * dimension.\n *\n * If the input is a vector (rank=1), finds the k largest entries in the vector\n * and outputs their values and indices as vectors. Thus values[j] is the j-th\n * largest entry in input, and its index is indices[j].\n * For higher rank inputs, computes the top k entries along the last dimension.\n *\n * If two elements are equal, the lower-index element appears first.\n *\n * ```js\n * const a = tf.tensor2d([[1, 5], [4, 3]]);\n * const {values, indices} = tf.topk(a);\n * values.print();\n * indices.print();\n * ```\n * @param x 1-D or higher `tf.Tensor` with last dimension being at least `k`.\n * @param k Number of top elements to look for along the last dimension.\n * @param sorted If true, the resulting `k` elements will be sorted by the\n *     values in descending order.\n *\n * @doc {heading: 'Operations', subheading: 'Evaluation'}\n */\n\nfunction topk_(x) {\n  var k = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var sorted = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  var $x = convertToTensor(x, 'x', 'topk');\n\n  if ($x.rank === 0) {\n    throw new Error('topk() expects the input to be of rank 1 or higher');\n  }\n\n  var lastDim = $x.shape[$x.shape.length - 1];\n\n  if (k > lastDim) {\n    throw new Error(\"'k' passed to topk() must be <= the last dimension (\".concat(lastDim, \") \") + \"but got \".concat(k));\n  }\n\n  var inputs = {\n    x: $x\n  };\n  var attrs = {\n    k: k,\n    sorted: sorted\n  };\n\n  var _ENGINE$runKernel = ENGINE.runKernel(TopK, inputs, attrs),\n      _ENGINE$runKernel2 = _slicedToArray(_ENGINE$runKernel, 2),\n      values = _ENGINE$runKernel2[0],\n      indices = _ENGINE$runKernel2[1];\n\n  return {\n    values: values,\n    indices: indices\n  };\n}\n\nexport var topk = op({\n  topk_: topk_\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Transpose } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\n/**\n * Transposes the `tf.Tensor`. Permutes the dimensions according to `perm`.\n *\n * The returned `tf.Tensor`'s dimension `i` will correspond to the input\n * dimension `perm[i]`. If `perm` is not given, it is set to `[n-1...0]`,\n * where `n` is the rank of the input `tf.Tensor`. Hence by default, this\n * operation performs a regular matrix transpose on 2-D input `tf.Tensor`s.\n *\n * ```js\n * const a = tf.tensor2d([1, 2, 3, 4, 5, 6], [2, 3]);\n *\n * a.transpose().print();  // or tf.transpose(a)\n * ```\n *\n * @param x The tensor to transpose.\n * @param perm The permutation of the dimensions of a.\n *\n * @doc {heading: 'Operations', subheading: 'Matrices'}\n */\n\nfunction transpose_(x, perm) {\n  var $x = convertToTensor(x, 'x', 'transpose');\n\n  if (perm == null) {\n    perm = $x.shape.map(function (s, i) {\n      return i;\n    }).reverse();\n  }\n\n  util.assert($x.rank === perm.length, function () {\n    return \"Error in transpose: rank of input \".concat($x.rank, \" \") + \"must match length of perm \".concat(perm, \".\");\n  });\n  perm.forEach(function (axis) {\n    util.assert(axis >= 0 && axis < $x.rank, function () {\n      return \"All entries in 'perm' must be between 0 and \".concat($x.rank - 1) + \" but got \".concat(perm);\n    });\n  });\n\n  if ($x.rank <= 1) {\n    return $x.clone();\n  }\n\n  var inputs = {\n    x: $x\n  };\n  var attrs = {\n    perm: perm\n  };\n  return ENGINE.runKernel(Transpose, inputs, attrs);\n}\n\nexport var transpose = op({\n  transpose_: transpose_\n});","import _slicedToArray from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Unique } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { assert } from '../util';\nimport { op } from './operation';\n/**\n * Finds unique elements along an axis of a tensor.\n *\n * It returns a tensor `values` containing all of the unique elements along the\n * `axis` of the given tensor `x` in the same order that they occur along the\n * `axis` in `x`; `x` does not need to be sorted. It also returns a tensor\n * `indices` the same size as the number of the elements in `x` along the `axis`\n * dimension. It contains the index in the unique output `values`.\n *\n * ```js\n * // A 1-D tensor\n * const a = tf.tensor1d([1, 1, 2, 4, 4, 4, 7, 8, 8]);\n * const {values, indices} = tf.unique(a);\n * values.print();   // [1, 2, 4, 7, 8,]\n * indices.print();  // [0, 0, 1, 2, 2, 2, 3, 4, 4]\n * ```\n *\n * ```js\n * // A 2-D tensor with axis=0\n * //\n * // 'a' is: [[1, 0, 0],\n * //          [1, 0, 0],\n * //          [2, 0, 0]]\n * const a = tf.tensor2d([[1, 0, 0], [1, 0, 0], [2, 0, 0]]);\n * const {values, indices} = tf.unique(a, 0)\n * values.print();   // [[1, 0, 0],\n *                   //  [2, 0, 0]]\n * indices.print();  // [0, 0, 1]\n * ```\n *\n * ```js\n * // A 2-D tensor with axis=1\n * //\n * // 'a' is: [[1, 0, 0],\n * //          [1, 0, 0],\n * //          [2, 0, 0]]\n * const a = tf.tensor2d([[1, 0, 0], [1, 0, 0], [2, 0, 0]]);\n * const {values, indices} = tf.unique(a, 1)\n * values.print();   // [[1, 0],\n *                   //  [1, 0],\n *                   //  [2, 0]]\n * indices.print();  // [0, 1, 1]\n * ```\n * @param x A tensor (int32, string, bool).\n * @param axis The axis of the tensor to find the unique elements.\n * @returns [uniqueElements, indices] (see above for details)\n *\n * @doc {heading: 'Operations', subheading: 'Evaluation'}\n */\n\nfunction unique_(x) {\n  var axis = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var $x = convertToTensor(x, 'x', 'unique', 'string_or_numeric');\n  assert($x.rank > 0, function () {\n    return 'The input tensor must be at least 1D';\n  });\n  var inputs = {\n    x: $x\n  };\n  var attrs = {\n    axis: axis\n  };\n\n  var _ENGINE$runKernel = ENGINE.runKernel(Unique, inputs, attrs),\n      _ENGINE$runKernel2 = _slicedToArray(_ENGINE$runKernel, 2),\n      values = _ENGINE$runKernel2[0],\n      indices = _ENGINE$runKernel2[1];\n\n  return {\n    values: values,\n    indices: indices\n  };\n}\n\nexport var unique = op({\n  unique_: unique_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { UnsortedSegmentSum } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { assert, isInt } from '../util';\nimport { op } from './operation';\n/**\n * Computes the sum along segments of a `tf.Tensor`.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n * const segmentIds = tf.tensor1d([1, 2, 0, 1], 'int32');\n * const numSegments = 3;\n *\n * x.unsortedSegmentSum(segmentIds, numSegments).print()\n * //or tf.unsortedSegmentSum(x, segmentIds, numSegments)\n * ```\n * @param x The `tf.Tensor` that will be summed along its segments.\n * @param segmentIds A `tf.Tensor1D` whose rank is equal to the rank of `x`'s\n * dimension along the `axis`.  Maps each element of `x` to a segment.\n * @param numSegments The number of distinct `segmentIds`.\n *\n * @doc {heading: 'Operations', subheading: 'Segment'}\n */\n\nfunction unsortedSegmentSum_(x, segmentIds, numSegments) {\n  var $x = convertToTensor(x, 'x', 'unsortedSegmentSum');\n  var $segmentIds = convertToTensor(segmentIds, 'segmentIds', 'unsortedSegmentSum', 'int32');\n  assert(isInt(numSegments), function () {\n    return 'numSegments must be of dtype int';\n  });\n  var inputs = {\n    x: $x,\n    segmentIds: $segmentIds\n  };\n  var attrs = {\n    numSegments: numSegments\n  };\n  return ENGINE.runKernel(UnsortedSegmentSum, inputs, attrs);\n}\n\nexport var unsortedSegmentSum = op({\n  unsortedSegmentSum_: unsortedSegmentSum_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Unpack } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\n/**\n * Unstacks a `tf.Tensor` of rank-`R` into a list of rank-`(R-1)` `tf.Tensor`s.\n *\n * ```js\n * const a = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * tf.unstack(a).forEach(tensor => tensor.print());\n * ```\n *\n * @param x A tensor object.\n * @param axis The axis to unstack along. Defaults to 0 (the first dim).\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\n\nfunction unstack_(x) {\n  var axis = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var $x = convertToTensor(x, 'x', 'unstack', 'string_or_numeric');\n  util.assert(axis >= -$x.shape.length && axis < $x.shape.length, function () {\n    return \"Axis = \".concat(axis, \" is not in [-\").concat($x.shape.length, \", \").concat($x.shape.length, \")\");\n  });\n  var inputs = {\n    value: $x\n  };\n  var attrs = {\n    axis: axis\n  };\n  return ENGINE.runKernel(Unpack, inputs, attrs);\n}\n\nexport var unstack = op({\n  unstack_: unstack_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Select } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { broadcastTo } from './broadcast_to';\nimport { assertAndGetBroadcastShape } from './broadcast_util';\nimport { op } from './operation';\n/**\n * Returns the elements, either `a` or `b` depending on the `condition`.\n *\n * If the condition is true, select from `a`, otherwise select from `b`.\n *\n * ```js\n * const cond = tf.tensor1d([false, false, true], 'bool');\n * const a = tf.tensor1d([1 , 2, 3]);\n * const b = tf.tensor1d([-1, -2, -3]);\n *\n * a.where(cond, b).print();\n * ```\n *\n * @param condition The input condition. Must be of dtype bool.\n * @param a If `condition` is rank 1, `a` may have a higher rank but\n *     its first dimension must match the size of `condition`.\n * @param b A tensor with the same dtype as `a` and with shape that is\n *     compatible with `a`.\n * @return A tensor with same dtype as `a` and `b`, and shape that is\n *     broadcastable from `a` and `b`.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\n\nfunction where_(condition, a, b) {\n  var $a = convertToTensor(a, 'a', 'where');\n  var $b = convertToTensor(b, 'b', 'where');\n  var $condition = convertToTensor(condition, 'condition', 'where', 'bool'); // TODO: move this logic to forward function when the broadcastTo op is\n  // implemented in WASM.\n  // Find the broadcastable shape for $condition, $a, and $b.\n\n  var broadcastShape = assertAndGetBroadcastShape(assertAndGetBroadcastShape($condition.shape, $a.shape), $b.shape);\n  var $broadcastedCondition = broadcastTo($condition, broadcastShape);\n  var $broadcastedA = broadcastTo($a, broadcastShape);\n  var $broadcastedB = broadcastTo($b, broadcastShape);\n  var inputs = {\n    condition: $broadcastedCondition,\n    t: $broadcastedA,\n    e: $broadcastedB\n  };\n  return ENGINE.runKernel(Select, inputs);\n}\n\nexport var where = op({\n  where_: where_\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { makeZerosTypedArray, sizeFromShape } from '../util';\nimport { complex } from './complex';\n/**\n * Creates a `tf.Tensor` with all elements set to 0.\n *\n * ```js\n * tf.zeros([2, 2]).print();\n * ```\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param dtype The type of an element in the resulting tensor. Can\n *     be 'float32', 'int32' or 'bool'. Defaults to 'float'.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\n\nexport function zeros(shape) {\n  var dtype = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'float32';\n\n  if (dtype === 'complex64') {\n    var real = zeros(shape, 'float32');\n    var imag = zeros(shape, 'float32');\n    return complex(real, imag);\n  }\n\n  var values = makeZerosTypedArray(sizeFromShape(shape), dtype);\n  return ENGINE.makeTensor(values, shape, dtype);\n}","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { ZerosLike } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Creates a `tf.Tensor` with all elements set to 0 with the same shape as the\n * given tensor.\n *\n * ```js\n * const x = tf.tensor([1, 2]);\n * tf.zerosLike(x).print();\n * ```\n *\n * @param x The tensor of required shape.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\n\nfunction zerosLike_(x) {\n  var $x = convertToTensor(x, 'x', 'zerosLike');\n  var inputs = {\n    x: $x\n  };\n  return ENGINE.runKernel(ZerosLike, inputs);\n}\n\nexport var zerosLike = op({\n  zerosLike_: zerosLike_\n});","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { abs } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.abs = function () {\n  this.throwIfDisposed();\n  return abs(this);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { acos } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.acos = function () {\n  this.throwIfDisposed();\n  return acos(this);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { acosh } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.acosh = function () {\n  this.throwIfDisposed();\n  return acosh(this);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { add } from '../../ops/add';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.add = function (b) {\n  this.throwIfDisposed();\n  return add(this, b);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { all } from '../../ops/all';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.all = function (axis, keepDims) {\n  this.throwIfDisposed();\n  return all(this, axis, keepDims);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { any } from '../../ops/any';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.any = function (axis, keepDims) {\n  this.throwIfDisposed();\n  return any(this, axis, keepDims);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { argMax } from '../../ops/arg_max';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.argMax = function (axis) {\n  this.throwIfDisposed();\n  return argMax(this, axis);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { argMin } from '../../ops/arg_min';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.argMin = function (axis) {\n  this.throwIfDisposed();\n  return argMin(this, axis);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { reshape } from '../../ops/reshape';\nimport { getGlobalTensorClass } from '../../tensor';\nimport { assert } from '../../util';\n/**\n * Converts a size-1 `tf.Tensor` to a `tf.Scalar`.\n * @doc {heading: 'Tensors', subheading: 'Classes'}\n */\n\ngetGlobalTensorClass().prototype.asScalar = function () {\n  this.throwIfDisposed();\n  assert(this.size === 1, function () {\n    return 'The array must have only 1 element.';\n  });\n  return reshape(this, []);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { cast } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\n/**\n * Casts a `tf.Tensor` to a specified dtype.\n *\n * @param dtype Data-type to cast the tensor to.\n *\n * @doc {heading: 'Tensors', subheading: 'Classes'}\n */\n\ngetGlobalTensorClass().prototype.asType = function (dtype) {\n  this.throwIfDisposed();\n  return cast(this, dtype);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { reshape } from '../../ops/reshape';\nimport { getGlobalTensorClass } from '../../tensor';\n/**\n * Converts a `tf.Tensor` to a `tf.Tensor1D`.\n * @doc {heading: 'Tensors', subheading: 'Classes'}\n */\n\ngetGlobalTensorClass().prototype.as1D = function () {\n  this.throwIfDisposed();\n  return reshape(this, [this.size]);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { reshape } from '../../ops/reshape';\nimport { getGlobalTensorClass } from '../../tensor';\n/**\n * Converts a `tf.Tensor` to a `tf.Tensor2D`.\n *\n * @param rows Number of rows in `tf.Tensor2D`.\n * @param columns Number of columns in `tf.Tensor2D`.\n * @doc {heading: 'Tensors', subheading: 'Classes'}\n */\n\ngetGlobalTensorClass().prototype.as2D = function (rows, columns) {\n  this.throwIfDisposed();\n  return reshape(this, [rows, columns]);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { reshape } from '../../ops/reshape';\nimport { getGlobalTensorClass } from '../../tensor';\n/**\n * Converts a `tf.Tensor` to a `tf.Tensor3D`.\n *\n * @param rows Number of rows in `tf.Tensor3D`.\n * @param columns Number of columns in `tf.Tensor3D`.\n * @param depth Depth of `tf.Tensor3D`.\n * @doc {heading: 'Tensors', subheading: 'Classes'}\n */\n\ngetGlobalTensorClass().prototype.as3D = function (rows, columns, depth) {\n  this.throwIfDisposed();\n  return reshape(this, [rows, columns, depth]);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { reshape } from '../../ops/reshape';\nimport { getGlobalTensorClass } from '../../tensor';\n/**\n * Converts a `tf.Tensor` to a `tf.Tensor4D`.\n *\n * @param rows Number of rows in `tf.Tensor4D`.\n * @param columns Number of columns in `tf.Tensor4D`.\n * @param depth Depth of `tf.Tensor4D`.\n * @param depth2 4th dimension of `tf.Tensor4D`.\n * @doc {heading: 'Tensors', subheading: 'Classes'}\n */\n\ngetGlobalTensorClass().prototype.as4D = function (rows, columns, depth, depth2) {\n  this.throwIfDisposed();\n  return reshape(this, [rows, columns, depth, depth2]);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { reshape } from '../../ops/reshape';\nimport { getGlobalTensorClass } from '../../tensor';\n/**\n * Converts a `tf.Tensor` to a `tf.Tensor5D`.\n *\n * @param rows Number of rows in `tf.Tensor5D`.\n * @param columns Number of columns in `tf.Tensor5D`.\n * @param depth Depth of `tf.Tensor5D`.\n * @param depth2 4th dimension of `tf.Tensor5D`.\n * @param depth3 5th dimension of 'tf.Tensor5D'\n *\n * @doc {heading: 'Tensors', subheading: 'Classes'}\n */\n\ngetGlobalTensorClass().prototype.as5D = function (rows, columns, depth, depth2, depth3) {\n  this.throwIfDisposed();\n  return reshape(this, [rows, columns, depth, depth2, depth3]);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { asin } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.asin = function () {\n  this.throwIfDisposed();\n  return asin(this);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { asinh } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.asinh = function () {\n  this.throwIfDisposed();\n  return asinh(this);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { atan } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.atan = function () {\n  this.throwIfDisposed();\n  return atan(this);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { atan2 } from '../../ops/atan2';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.atan2 = function (b) {\n  this.throwIfDisposed();\n  return atan2(this, b);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { atanh } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.atanh = function () {\n  this.throwIfDisposed();\n  return atanh(this);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { avgPool } from '../../ops/avg_pool';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.avgPool = function (filterSize, strides, pad, dimRoundingMode) {\n  this.throwIfDisposed();\n  return avgPool(this, filterSize, strides, pad, dimRoundingMode);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { batchToSpaceND } from '../../ops/batch_to_space_nd';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.batchToSpaceND = function (blockShape, crops) {\n  this.throwIfDisposed();\n  return batchToSpaceND(this, blockShape, crops);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { batchNorm } from '../../ops/batchnorm';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.batchNorm = function (mean, variance, offset, scale, varianceEpsilon) {\n  this.throwIfDisposed();\n  return batchNorm(this, mean, variance, offset, scale, varianceEpsilon);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { broadcastTo } from '../../ops/broadcast_to';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.broadcastTo = function (shape) {\n  this.throwIfDisposed();\n  return broadcastTo(this, shape);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { cast } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.cast = function (dtype) {\n  this.throwIfDisposed();\n  return cast(this, dtype);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { ceil } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.ceil = function () {\n  this.throwIfDisposed();\n  return ceil(this);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { clipByValue } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.clipByValue = function (min, max) {\n  this.throwIfDisposed();\n  return clipByValue(this, min, max);\n};","import _toConsumableArray from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { concat } from '../../ops/concat';\nimport { getGlobalTensorClass, Tensor } from '../../tensor';\n\ngetGlobalTensorClass().prototype.concat = function (x, axis) {\n  this.throwIfDisposed();\n\n  if (x instanceof Tensor) {\n    x = [x];\n  }\n\n  return concat([this].concat(_toConsumableArray(x)), axis);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { conv1d } from '../../ops/conv1d';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.conv1d = function (filter, stride, pad, dataFormat, dilation, dimRoundingMode) {\n  this.throwIfDisposed();\n  return conv1d(this, filter, stride, pad, dataFormat, dilation, dimRoundingMode);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { conv2dTranspose } from '../../ops/conv2d_transpose';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.conv2dTranspose = function (filter, outputShape, strides, pad, dimRoundingMode) {\n  this.throwIfDisposed();\n  return conv2dTranspose(this, filter, outputShape, strides, pad, dimRoundingMode);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { conv2d } from '../../ops/conv2d';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.conv2d = function (filter, strides, pad, dataFormat, dilations, dimRoundingMode) {\n  this.throwIfDisposed();\n  return conv2d(this, filter, strides, pad, dataFormat, dilations, dimRoundingMode);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { cos } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.cos = function () {\n  this.throwIfDisposed();\n  return cos(this);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { cosh } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.cosh = function () {\n  this.throwIfDisposed();\n  return cosh(this);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { cumsum } from '../../ops/cumsum';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.cumsum = function (axis, exclusive, reverse) {\n  this.throwIfDisposed();\n  return cumsum(this, axis, exclusive, reverse);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { depthToSpace } from '../../ops/depth_to_space';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.depthToSpace = function (blockSize, dataFormat) {\n  this.throwIfDisposed();\n  return depthToSpace(this, blockSize, dataFormat);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { depthwiseConv2d } from '../../ops/depthwise_conv2d';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.depthwiseConv2d = function (filter, strides, pad, dataFormat, dilations, dimRoundingMode) {\n  this.throwIfDisposed();\n  return depthwiseConv2d(this, filter, strides, pad, dataFormat, dilations, dimRoundingMode);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { dilation2d } from '../../ops/dilation2d';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.dilation2d = function (filter, strides, pad, dilations, dataFormat) {\n  this.throwIfDisposed();\n  return dilation2d(this, filter, strides, pad, dilations, dataFormat);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { divNoNan } from '../../ops/div_no_nan';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.divNoNan = function (b) {\n  this.throwIfDisposed();\n  return divNoNan(this, b);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { div } from '../../ops/div';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.div = function (b) {\n  this.throwIfDisposed();\n  return div(this, b);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { dot } from '../../ops/dot';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.dot = function (b) {\n  this.throwIfDisposed();\n  return dot(this, b);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { elu } from '../../ops/elu';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.elu = function () {\n  this.throwIfDisposed();\n  return elu(this);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { equal } from '../../ops/equal';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.equal = function (b) {\n  this.throwIfDisposed();\n  return equal(this, b);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { erf } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.erf = function () {\n  this.throwIfDisposed();\n  return erf(this);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { exp } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.exp = function () {\n  this.throwIfDisposed();\n  return exp(this);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { expandDims } from '../../ops/expand_dims';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.expandDims = function (axis) {\n  this.throwIfDisposed();\n  return expandDims(this, axis);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { expm1 } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.expm1 = function () {\n  this.throwIfDisposed();\n  return expm1(this);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { fft } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.fft = function () {\n  this.throwIfDisposed();\n  return fft(this);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { reshape } from '../../ops/reshape';\nimport { getGlobalTensorClass } from '../../tensor';\n/**\n * Flatten a Tensor to a 1D array.\n * @doc {heading: 'Tensors', subheading: 'Classes'}\n */\n\ngetGlobalTensorClass().prototype.flatten = function () {\n  this.throwIfDisposed();\n  return reshape(this, [this.size]);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { floor } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.floor = function () {\n  this.throwIfDisposed();\n  return floor(this);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { floorDiv } from '../../ops/floorDiv';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.floorDiv = function (b) {\n  this.throwIfDisposed();\n  return floorDiv(this, b);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { gather } from '../../ops/gather';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.gather = function (indices, axis) {\n  this.throwIfDisposed();\n  return gather(this, indices, axis);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { greaterEqual } from '../../ops/greater_equal';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.greaterEqual = function (b) {\n  this.throwIfDisposed();\n  return greaterEqual(this, b);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { greater } from '../../ops/greater';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.greater = function (b) {\n  this.throwIfDisposed();\n  return greater(this, b);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { ifft } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.ifft = function () {\n  this.throwIfDisposed();\n  return ifft(this);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { irfft } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.irfft = function () {\n  this.throwIfDisposed();\n  return irfft(this);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { isFinite } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.isFinite = function () {\n  this.throwIfDisposed();\n  return isFinite(this);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { isInf } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.isInf = function () {\n  this.throwIfDisposed();\n  return isInf(this);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { isNaN } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.isNaN = function () {\n  this.throwIfDisposed();\n  return isNaN(this);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { leakyRelu } from '../../ops/leaky_relu';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.leakyRelu = function (alpha) {\n  this.throwIfDisposed();\n  return leakyRelu(this, alpha);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { lessEqual } from '../../ops/less_equal';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.lessEqual = function (b) {\n  this.throwIfDisposed();\n  return lessEqual(this, b);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { less } from '../../ops/less';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.less = function (b) {\n  this.throwIfDisposed();\n  return less(this, b);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { localResponseNormalization } from '../../ops/local_response_normalization';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.localResponseNormalization = function (depthRadius, bias, alpha, beta) {\n  this.throwIfDisposed();\n  return localResponseNormalization(this, depthRadius, bias, alpha, beta);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { logSigmoid } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.logSigmoid = function () {\n  this.throwIfDisposed();\n  return logSigmoid(this);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { logSoftmax } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.logSoftmax = function (axis) {\n  this.throwIfDisposed();\n  return logSoftmax(this, axis);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { logSumExp } from '../../ops/log_sum_exp';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.logSumExp = function (axis, keepDims) {\n  this.throwIfDisposed();\n  return logSumExp(this, axis, keepDims);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { log } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.log = function () {\n  this.throwIfDisposed();\n  return log(this);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { log1p } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.log1p = function () {\n  this.throwIfDisposed();\n  return log1p(this);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { logicalAnd } from '../../ops/logical_and';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.logicalAnd = function (b) {\n  this.throwIfDisposed();\n  return logicalAnd(this, b);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { logicalNot } from '../../ops/logical_not';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.logicalNot = function () {\n  this.throwIfDisposed();\n  return logicalNot(this);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { logicalOr } from '../../ops/logical_or';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.logicalOr = function (b) {\n  this.throwIfDisposed();\n  return logicalOr(this, b);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { logicalXor } from '../../ops/logical_xor';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.logicalXor = function (b) {\n  this.throwIfDisposed();\n  return logicalXor(this, b);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { matMul } from '../../ops/mat_mul';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.matMul = function (b, transposeA, transposeB) {\n  this.throwIfDisposed();\n  return matMul(this, b, transposeA, transposeB);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { maxPool } from '../../ops/max_pool';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.maxPool = function (filterSize, strides, pad, dimRoundingMode) {\n  this.throwIfDisposed();\n  return maxPool(this, filterSize, strides, pad, dimRoundingMode);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { max } from '../../ops/max';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.max = function (axis, keepDims) {\n  this.throwIfDisposed();\n  return max(this, axis, keepDims);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { maximum } from '../../ops/maximum';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.maximum = function (b) {\n  this.throwIfDisposed();\n  return maximum(this, b);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { mean } from '../../ops/mean';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.mean = function (axis, keepDims) {\n  this.throwIfDisposed();\n  return mean(this, axis, keepDims);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { min } from '../../ops/min';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.min = function (axis, keepDims) {\n  this.throwIfDisposed();\n  return min(this, axis, keepDims);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { minimum } from '../../ops/minimum';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.minimum = function (b) {\n  this.throwIfDisposed();\n  return minimum(this, b);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { mirrorPad } from '../../ops/mirror_pad';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.mirrorPad = function (paddings, mode) {\n  this.throwIfDisposed();\n  return mirrorPad(this, paddings, mode);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { mod } from '../../ops/mod';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.mod = function (b) {\n  this.throwIfDisposed();\n  return mod(this, b);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { mul } from '../../ops/mul';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.mul = function (b) {\n  this.throwIfDisposed();\n  return mul(this, b);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { neg } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.neg = function () {\n  this.throwIfDisposed();\n  return neg(this);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { norm } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.norm = function (ord, axis, keepDims) {\n  this.throwIfDisposed();\n  return norm(this, ord, axis, keepDims);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { notEqual } from '../../ops/not_equal';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.notEqual = function (b) {\n  this.throwIfDisposed();\n  return notEqual(this, b);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { oneHot } from '../../ops/one_hot';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.oneHot = function (depth) {\n  var onValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var offValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  this.throwIfDisposed();\n  return oneHot(this, depth, onValue, offValue);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { onesLike } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.onesLike = function () {\n  this.throwIfDisposed();\n  return onesLike(this);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { pad } from '../../ops/pad';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.pad = function (paddings, constantValue) {\n  this.throwIfDisposed();\n  return pad(this, paddings, constantValue);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { pool } from '../../ops/pool';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.pool = function (windowShape, poolingType, padding, dilationRate, strides) {\n  this.throwIfDisposed();\n  return pool(this, windowShape, poolingType, padding, dilationRate, strides);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { pow } from '../../ops/pow';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.pow = function (exp) {\n  this.throwIfDisposed();\n  return pow(this, exp);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { prelu } from '../../ops/prelu';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.prelu = function (alpha) {\n  this.throwIfDisposed();\n  return prelu(this, alpha);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { prod } from '../../ops/prod';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.prod = function (axis, keepDims) {\n  this.throwIfDisposed();\n  return prod(this, axis, keepDims);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { reciprocal } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.reciprocal = function () {\n  this.throwIfDisposed();\n  return reciprocal(this);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { relu } from '../../ops/relu';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.relu = function () {\n  this.throwIfDisposed();\n  return relu(this);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { relu6 } from '../../ops/relu6';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.relu6 = function () {\n  this.throwIfDisposed();\n  return relu6(this);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { reshape } from '../../ops/reshape';\nimport { getGlobalTensorClass } from '../../tensor';\n/**\n * Reshapes the tensor into the shape of the provided tensor.\n *\n * @param x The tensor of required shape.\n *\n * @doc {heading: 'Tensors', subheading: 'Classes'}\n */\n\ngetGlobalTensorClass().prototype.reshapeAs = function (x) {\n  this.throwIfDisposed();\n  return reshape(this, x.shape);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { reshape } from '../../ops/reshape';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.reshape = function (shape) {\n  this.throwIfDisposed();\n  return reshape(this, shape);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { resizeBilinear } from '../../ops/image/resize_bilinear';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.resizeBilinear = function (newShape2D, alignCorners, halfPixelCenters) {\n  this.throwIfDisposed();\n  return resizeBilinear(this, newShape2D, alignCorners, halfPixelCenters);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { resizeNearestNeighbor } from '../../ops/image/resize_nearest_neighbor';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.resizeNearestNeighbor = function (newShape2D, alignCorners, halfFloatCenters) {\n  this.throwIfDisposed();\n  return resizeNearestNeighbor(this, newShape2D, alignCorners, halfFloatCenters);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { reverse } from '../../ops/reverse';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.reverse = function (axis) {\n  this.throwIfDisposed();\n  return reverse(this, axis);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { rfft } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.rfft = function () {\n  this.throwIfDisposed();\n  return rfft(this);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { round } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.round = function () {\n  this.throwIfDisposed();\n  return round(this);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { rsqrt } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.rsqrt = function () {\n  this.throwIfDisposed();\n  return rsqrt(this);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { selu } from '../../ops/selu';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.selu = function () {\n  this.throwIfDisposed();\n  return selu(this);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { separableConv2d } from '../../ops/separable_conv2d';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.separableConv2d = function (depthwiseFilter, pointwiseFilter, strides, pad, dilation, dataFormat) {\n  this.throwIfDisposed();\n  return separableConv2d(this, depthwiseFilter, pointwiseFilter, strides, pad, dilation, dataFormat);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { sigmoid } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.sigmoid = function () {\n  this.throwIfDisposed();\n  return sigmoid(this);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { sign } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.sign = function () {\n  this.throwIfDisposed();\n  return sign(this);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { sin } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.sin = function () {\n  this.throwIfDisposed();\n  return sin(this);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { sinh } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.sinh = function () {\n  this.throwIfDisposed();\n  return sinh(this);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { slice } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.slice = function (begin, size) {\n  this.throwIfDisposed();\n  return slice(this, begin, size);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { softmax } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.softmax = function (dim) {\n  this.throwIfDisposed();\n  return softmax(this, dim);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { softplus } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.softplus = function () {\n  this.throwIfDisposed();\n  return softplus(this);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { spaceToBatchND } from '../../ops/space_to_batch_nd';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.spaceToBatchND = function (blockShape, paddings) {\n  this.throwIfDisposed();\n  return spaceToBatchND(this, blockShape, paddings);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { split } from '../../ops/split';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.split = function (numOrSizeSplits, axis) {\n  this.throwIfDisposed();\n  return split(this, numOrSizeSplits, axis);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { sqrt } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.sqrt = function () {\n  this.throwIfDisposed();\n  return sqrt(this);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { square } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.square = function () {\n  this.throwIfDisposed();\n  return square(this);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { squaredDifference } from '../../ops/squared_difference';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.squaredDifference = function (b) {\n  this.throwIfDisposed();\n  return squaredDifference(this, b);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { squeeze } from '../../ops/squeeze';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.squeeze = function (axis) {\n  this.throwIfDisposed();\n  return squeeze(this, axis);\n};","import _toConsumableArray from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { stack } from '../../ops/stack';\nimport { getGlobalTensorClass, Tensor } from '../../tensor';\n\ngetGlobalTensorClass().prototype.stack = function (x, axis) {\n  this.throwIfDisposed();\n  var tensorsToBeStacked = x instanceof Tensor ? [this, x] : [this].concat(_toConsumableArray(x));\n  return stack(tensorsToBeStacked, axis);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { step } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.step = function (alpha) {\n  this.throwIfDisposed();\n  return step(this, alpha);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { stridedSlice } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.stridedSlice = function (begin, end, strides, beginMask, endMask, ellipsisMask, newAxisMask, shrinkAxisMask) {\n  this.throwIfDisposed();\n  return stridedSlice(this, begin, end, strides, beginMask, endMask, ellipsisMask, newAxisMask, shrinkAxisMask);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { sub } from '../../ops/sub';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.sub = function (b) {\n  this.throwIfDisposed();\n  return sub(this, b);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { sum } from '../../ops/sum';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.sum = function (axis, keepDims) {\n  this.throwIfDisposed();\n  return sum(this, axis, keepDims);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { tan } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.tan = function () {\n  this.throwIfDisposed();\n  return tan(this);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { tanh } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.tanh = function () {\n  this.throwIfDisposed();\n  return tanh(this);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { tile } from '../../ops/tile';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.tile = function (reps) {\n  this.throwIfDisposed();\n  return tile(this, reps);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { cast } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\n/**\n * Casts the array to type `bool`\n *\n * @doc {heading: 'Tensors', subheading: 'Classes'}\n */\n\ngetGlobalTensorClass().prototype.toBool = function () {\n  this.throwIfDisposed();\n  return cast(this, 'bool');\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { cast } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\n/**\n * Casts the array to type `float32`\n *\n * @doc {heading: 'Tensors', subheading: 'Classes'}\n */\n\ngetGlobalTensorClass().prototype.toFloat = function () {\n  this.throwIfDisposed();\n  return cast(this, 'float32');\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { cast } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\n/**\n * Casts the array to type `int32`\n *\n * @doc {heading: 'Tensors', subheading: 'Classes'}\n */\n\ngetGlobalTensorClass().prototype.toInt = function () {\n  this.throwIfDisposed();\n  return cast(this, 'int32');\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { topk } from '../../ops/topk';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.topk = function (k, sorted) {\n  this.throwIfDisposed();\n  return topk(this, k, sorted);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { transpose } from '../../ops/transpose';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.transpose = function (perm) {\n  this.throwIfDisposed();\n  return transpose(this, perm);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { unique } from '../../ops/unique';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.unique = function (axis) {\n  this.throwIfDisposed();\n  return unique(this, axis);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { unsortedSegmentSum } from '../../ops/unsorted_segment_sum';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.unsortedSegmentSum = function (segmentIds, numSegments) {\n  this.throwIfDisposed();\n  return unsortedSegmentSum(this, segmentIds, numSegments);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { unstack } from '../../ops/unstack';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.unstack = function (axis) {\n  this.throwIfDisposed();\n  return unstack(this, axis);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { where } from '../../ops/where';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.where = function (condition, x) {\n  this.throwIfDisposed();\n  return where(condition, this, x);\n};","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { zerosLike } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.zerosLike = function () {\n  this.throwIfDisposed();\n  return zerosLike(this);\n};","import _toConsumableArray from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { computeStrides, isString, rightPad, sizeFromShape } from './util'; // Maximum number of values before we decide to show ellipsis.\n\nvar FORMAT_LIMIT_NUM_VALS = 20; // Number of first and last values to show when displaying a, b,...,y, z.\n\nvar FORMAT_NUM_FIRST_LAST_VALS = 3; // Number of significant digits to show.\n\nvar FORMAT_NUM_SIG_DIGITS = 7;\nexport function tensorToString(vals, shape, dtype, verbose) {\n  var strides = computeStrides(shape);\n  var padPerCol = computeMaxSizePerColumn(vals, shape, dtype, strides);\n  var rank = shape.length;\n  var valsLines = subTensorToString(vals, shape, dtype, strides, padPerCol);\n  var lines = ['Tensor'];\n\n  if (verbose) {\n    lines.push(\"  dtype: \".concat(dtype));\n    lines.push(\"  rank: \".concat(rank));\n    lines.push(\"  shape: [\".concat(shape, \"]\"));\n    lines.push(\"  values:\");\n  }\n\n  lines.push(valsLines.map(function (l) {\n    return '    ' + l;\n  }).join('\\n'));\n  return lines.join('\\n');\n}\n\nfunction computeMaxSizePerColumn(vals, shape, dtype, strides) {\n  var n = sizeFromShape(shape);\n  var numCols = strides[strides.length - 1];\n  var padPerCol = new Array(numCols).fill(0);\n  var rank = shape.length;\n  var valuesOrTuples = dtype === 'complex64' ? createComplexTuples(vals) : vals;\n\n  if (rank > 1) {\n    for (var row = 0; row < n / numCols; row++) {\n      var offset = row * numCols;\n\n      for (var j = 0; j < numCols; j++) {\n        padPerCol[j] = Math.max(padPerCol[j], valToString(valuesOrTuples[offset + j], 0, dtype).length);\n      }\n    }\n  }\n\n  return padPerCol;\n}\n\nfunction valToString(val, pad, dtype) {\n  var valStr;\n\n  if (Array.isArray(val)) {\n    valStr = \"\".concat(parseFloat(val[0].toFixed(FORMAT_NUM_SIG_DIGITS)), \" + \") + \"\".concat(parseFloat(val[1].toFixed(FORMAT_NUM_SIG_DIGITS)), \"j\");\n  } else if (isString(val)) {\n    valStr = \"'\".concat(val, \"'\");\n  } else if (dtype === 'bool') {\n    valStr = boolNumToString(val);\n  } else {\n    valStr = parseFloat(val.toFixed(FORMAT_NUM_SIG_DIGITS)).toString();\n  }\n\n  return rightPad(valStr, pad);\n}\n\nfunction boolNumToString(v) {\n  return v === 0 ? 'false' : 'true';\n}\n\nfunction subTensorToString(vals, shape, dtype, strides, padPerCol) {\n  var isLast = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : true;\n  var storagePerElement = dtype === 'complex64' ? 2 : 1;\n  var size = shape[0];\n  var rank = shape.length;\n\n  if (rank === 0) {\n    if (dtype === 'complex64') {\n      var complexTuple = createComplexTuples(vals);\n      return [valToString(complexTuple[0], 0, dtype)];\n    }\n\n    if (dtype === 'bool') {\n      return [boolNumToString(vals[0])];\n    }\n\n    return [vals[0].toString()];\n  }\n\n  if (rank === 1) {\n    if (size > FORMAT_LIMIT_NUM_VALS) {\n      var firstValsSize = FORMAT_NUM_FIRST_LAST_VALS * storagePerElement;\n      var firstVals = Array.from(vals.slice(0, firstValsSize));\n      var lastVals = Array.from(vals.slice((size - FORMAT_NUM_FIRST_LAST_VALS) * storagePerElement, size * storagePerElement));\n\n      if (dtype === 'complex64') {\n        firstVals = createComplexTuples(firstVals);\n        lastVals = createComplexTuples(lastVals);\n      }\n\n      return ['[' + firstVals.map(function (x, i) {\n        return valToString(x, padPerCol[i], dtype);\n      }).join(', ') + ', ..., ' + lastVals.map(function (x, i) {\n        return valToString(x, padPerCol[size - FORMAT_NUM_FIRST_LAST_VALS + i], dtype);\n      }).join(', ') + ']'];\n    }\n\n    var displayVals = dtype === 'complex64' ? createComplexTuples(vals) : Array.from(vals);\n    return ['[' + displayVals.map(function (x, i) {\n      return valToString(x, padPerCol[i], dtype);\n    }).join(', ') + ']'];\n  } // The array is rank 2 or more.\n\n\n  var subshape = shape.slice(1);\n  var substrides = strides.slice(1);\n  var stride = strides[0] * storagePerElement;\n  var lines = [];\n\n  if (size > FORMAT_LIMIT_NUM_VALS) {\n    for (var i = 0; i < FORMAT_NUM_FIRST_LAST_VALS; i++) {\n      var start = i * stride;\n      var end = start + stride;\n      lines.push.apply(lines, _toConsumableArray(subTensorToString(vals.slice(start, end), subshape, dtype, substrides, padPerCol, false\n      /* isLast */\n      )));\n    }\n\n    lines.push('...');\n\n    for (var _i = size - FORMAT_NUM_FIRST_LAST_VALS; _i < size; _i++) {\n      var _start = _i * stride;\n\n      var _end = _start + stride;\n\n      lines.push.apply(lines, _toConsumableArray(subTensorToString(vals.slice(_start, _end), subshape, dtype, substrides, padPerCol, _i === size - 1\n      /* isLast */\n      )));\n    }\n  } else {\n    for (var _i2 = 0; _i2 < size; _i2++) {\n      var _start2 = _i2 * stride;\n\n      var _end2 = _start2 + stride;\n\n      lines.push.apply(lines, _toConsumableArray(subTensorToString(vals.slice(_start2, _end2), subshape, dtype, substrides, padPerCol, _i2 === size - 1\n      /* isLast */\n      )));\n    }\n  }\n\n  var sep = rank === 2 ? ',' : '';\n  lines[0] = '[' + lines[0] + sep;\n\n  for (var _i3 = 1; _i3 < lines.length - 1; _i3++) {\n    lines[_i3] = ' ' + lines[_i3] + sep;\n  }\n\n  var newLineSep = ',\\n';\n\n  for (var _i4 = 2; _i4 < rank; _i4++) {\n    newLineSep += '\\n';\n  }\n\n  lines[lines.length - 1] = ' ' + lines[lines.length - 1] + ']' + (isLast ? '' : newLineSep);\n  return lines;\n}\n\nfunction createComplexTuples(vals) {\n  var complexTuples = [];\n\n  for (var i = 0; i < vals.length; i += 2) {\n    complexTuples.push([vals[i], vals[i + 1]]);\n  }\n\n  return complexTuples;\n}","import _inherits from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _asyncToGenerator from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _regeneratorRuntime from \"C:/Users/lego1/github/CPA_submitted/node_modules/@babel/runtime/regenerator\";\n\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getGlobal } from './global_util';\nimport { tensorToString } from './tensor_format';\nimport * as util from './util';\nimport { computeStrides, toNestedArray } from './util';\n/**\n * A mutable object, similar to `tf.Tensor`, that allows users to set values\n * at locations before converting to an immutable `tf.Tensor`.\n *\n * See `tf.buffer` for creating a tensor buffer.\n *\n * @doc {heading: 'Tensors', subheading: 'Classes'}\n */\n\nexport var TensorBuffer = /*#__PURE__*/function () {\n  function TensorBuffer(shape, dtype, values) {\n    var _this = this;\n\n    _classCallCheck(this, TensorBuffer);\n\n    this.dtype = dtype;\n    this.shape = shape.slice();\n    this.size = util.sizeFromShape(shape);\n\n    if (values != null) {\n      var n = values.length;\n      util.assert(n === this.size, function () {\n        return \"Length of values '\".concat(n, \"' does not match the size \") + \"inferred by the shape '\".concat(_this.size, \"'.\");\n      });\n    }\n\n    if (dtype === 'complex64') {\n      throw new Error(\"complex64 dtype TensorBuffers are not supported. Please create \" + \"a TensorBuffer for the real and imaginary parts separately and \" + \"call tf.complex(real, imag).\");\n    }\n\n    this.values = values || util.getArrayFromDType(dtype, this.size);\n    this.strides = computeStrides(shape);\n  }\n  /**\n   * Sets a value in the buffer at a given location.\n   *\n   * @param value The value to set.\n   * @param locs  The location indices.\n   *\n   * @doc {heading: 'Tensors', subheading: 'Creation'}\n   */\n\n\n  _createClass(TensorBuffer, [{\n    key: \"set\",\n    value: function set(value) {\n      var _this2 = this;\n\n      for (var _len = arguments.length, locs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        locs[_key - 1] = arguments[_key];\n      }\n\n      if (locs.length === 0) {\n        locs = [0];\n      }\n\n      util.assert(locs.length === this.rank, function () {\n        return \"The number of provided coordinates (\".concat(locs.length, \") must \") + \"match the rank (\".concat(_this2.rank, \")\");\n      });\n      var index = this.locToIndex(locs);\n      this.values[index] = value;\n    }\n    /**\n     * Returns the value in the buffer at the provided location.\n     *\n     * @param locs The location indices.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Creation'}\n     */\n\n  }, {\n    key: \"get\",\n    value: function get() {\n      for (var _len2 = arguments.length, locs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        locs[_key2] = arguments[_key2];\n      }\n\n      if (locs.length === 0) {\n        locs = [0];\n      }\n\n      var i = 0;\n\n      for (var _i = 0, _locs = locs; _i < _locs.length; _i++) {\n        var loc = _locs[_i];\n\n        if (loc < 0 || loc >= this.shape[i]) {\n          var msg = \"Requested out of range element at \".concat(locs, \". \") + \"  Buffer shape=\".concat(this.shape);\n          throw new Error(msg);\n        }\n\n        i++;\n      }\n\n      var index = locs[locs.length - 1];\n\n      for (var _i2 = 0; _i2 < locs.length - 1; ++_i2) {\n        index += this.strides[_i2] * locs[_i2];\n      }\n\n      return this.values[index];\n    }\n  }, {\n    key: \"locToIndex\",\n    value: function locToIndex(locs) {\n      if (this.rank === 0) {\n        return 0;\n      } else if (this.rank === 1) {\n        return locs[0];\n      }\n\n      var index = locs[locs.length - 1];\n\n      for (var i = 0; i < locs.length - 1; ++i) {\n        index += this.strides[i] * locs[i];\n      }\n\n      return index;\n    }\n  }, {\n    key: \"indexToLoc\",\n    value: function indexToLoc(index) {\n      if (this.rank === 0) {\n        return [];\n      } else if (this.rank === 1) {\n        return [index];\n      }\n\n      var locs = new Array(this.shape.length);\n\n      for (var i = 0; i < locs.length - 1; ++i) {\n        locs[i] = Math.floor(index / this.strides[i]);\n        index -= locs[i] * this.strides[i];\n      }\n\n      locs[locs.length - 1] = index;\n      return locs;\n    }\n  }, {\n    key: \"rank\",\n    get: function get() {\n      return this.shape.length;\n    }\n    /**\n     * Creates an immutable `tf.Tensor` object from the buffer.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Creation'}\n     */\n\n  }, {\n    key: \"toTensor\",\n    value: function toTensor() {\n      return trackerFn().makeTensor(this.values, this.shape, this.dtype);\n    }\n  }]);\n\n  return TensorBuffer;\n}(); // For tracking tensor creation and disposal.\n\nvar trackerFn = null; // Used by chaining methods to call into ops.\n\nvar opHandler = null; // Used to warn about deprecated methods.\n\nvar deprecationWarningFn = null; // This here so that we can use this method on dev branches and keep the\n// functionality at master.\n// tslint:disable-next-line:no-unused-expression\n\n[deprecationWarningFn];\n/**\n * An external consumer can register itself as the tensor tracker. This way\n * the Tensor class can notify the tracker for every tensor created and\n * disposed.\n */\n\nexport function setTensorTracker(fn) {\n  trackerFn = fn;\n}\n/**\n * An external consumer can register itself as the op handler. This way the\n * Tensor class can have chaining methods that call into ops via the op\n * handler.\n */\n\nexport function setOpHandler(handler) {\n  opHandler = handler;\n}\n/**\n * Sets the deprecation warning function to be used by this file. This way the\n * Tensor class can be a leaf but still use the environment.\n */\n\nexport function setDeprecationWarningFn(fn) {\n  deprecationWarningFn = fn;\n}\n/**\n * A `tf.Tensor` object represents an immutable, multidimensional array of\n * numbers that has a shape and a data type.\n *\n * For performance reasons, functions that create tensors do not necessarily\n * perform a copy of the data passed to them (e.g. if the data is passed as a\n * `Float32Array`), and changes to the data will change the tensor. This is not\n * a feature and is not supported. To avoid this behavior, use the tensor before\n * changing the input data or create a copy with `copy = tf.add(yourTensor, 0)`.\n *\n * See `tf.tensor` for details on how to create a `tf.Tensor`.\n *\n * @doc {heading: 'Tensors', subheading: 'Classes'}\n */\n\nexport var Tensor = /*#__PURE__*/function () {\n  function Tensor(shape, dtype, dataId, id) {\n    _classCallCheck(this, Tensor);\n\n    /** Whether this tensor has been globally kept. */\n    this.kept = false;\n    this.isDisposedInternal = false;\n    this.shape = shape.slice();\n    this.dtype = dtype || 'float32';\n    this.size = util.sizeFromShape(shape);\n    this.strides = computeStrides(shape);\n    this.dataId = dataId;\n    this.id = id;\n    this.rankType = this.rank < 5 ? this.rank.toString() : 'higher';\n  }\n\n  _createClass(Tensor, [{\n    key: \"rank\",\n    get: function get() {\n      return this.shape.length;\n    }\n    /**\n     * Returns a promise of `tf.TensorBuffer` that holds the underlying data.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n\n  }, {\n    key: \"buffer\",\n    value: function () {\n      var _buffer = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var vals;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.data();\n\n              case 2:\n                vals = _context.sent;\n                return _context.abrupt(\"return\", opHandler.buffer(this.shape, this.dtype, vals));\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function buffer() {\n        return _buffer.apply(this, arguments);\n      }\n\n      return buffer;\n    }()\n    /**\n     * Returns a `tf.TensorBuffer` that holds the underlying data.\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n\n  }, {\n    key: \"bufferSync\",\n    value: function bufferSync() {\n      return opHandler.buffer(this.shape, this.dtype, this.dataSync());\n    }\n    /**\n     * Returns the tensor data as a nested array. The transfer of data is done\n     * asynchronously.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n\n  }, {\n    key: \"array\",\n    value: function () {\n      var _array = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var vals;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.data();\n\n              case 2:\n                vals = _context2.sent;\n                return _context2.abrupt(\"return\", toNestedArray(this.shape, vals, this.dtype === 'complex64'));\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function array() {\n        return _array.apply(this, arguments);\n      }\n\n      return array;\n    }()\n    /**\n     * Returns the tensor data as a nested array. The transfer of data is done\n     * synchronously.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n\n  }, {\n    key: \"arraySync\",\n    value: function arraySync() {\n      return toNestedArray(this.shape, this.dataSync(), this.dtype === 'complex64');\n    }\n    /**\n     * Asynchronously downloads the values from the `tf.Tensor`. Returns a\n     * promise of `TypedArray` that resolves when the computation has finished.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n\n  }, {\n    key: \"data\",\n    value: function () {\n      var _data = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var data, bytes;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.throwIfDisposed();\n                data = trackerFn().read(this.dataId);\n\n                if (!(this.dtype === 'string')) {\n                  _context3.next = 13;\n                  break;\n                }\n\n                _context3.next = 5;\n                return data;\n\n              case 5:\n                bytes = _context3.sent;\n                _context3.prev = 6;\n                return _context3.abrupt(\"return\", bytes.map(function (b) {\n                  return util.decodeString(b);\n                }));\n\n              case 10:\n                _context3.prev = 10;\n                _context3.t0 = _context3[\"catch\"](6);\n                throw new Error('Failed to decode the string bytes into utf-8. ' + 'To get the original bytes, call tensor.bytes().');\n\n              case 13:\n                return _context3.abrupt(\"return\", data);\n\n              case 14:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[6, 10]]);\n      }));\n\n      function data() {\n        return _data.apply(this, arguments);\n      }\n\n      return data;\n    }()\n    /**\n     * Synchronously downloads the values from the `tf.Tensor`. This blocks the\n     * UI thread until the values are ready, which can cause performance issues.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n\n  }, {\n    key: \"dataSync\",\n    value: function dataSync() {\n      this.throwIfDisposed();\n      var data = trackerFn().readSync(this.dataId);\n\n      if (this.dtype === 'string') {\n        try {\n          return data.map(function (b) {\n            return util.decodeString(b);\n          });\n        } catch (_a) {\n          throw new Error('Failed to decode the string bytes into utf-8. ' + 'To get the original bytes, call tensor.bytes().');\n        }\n      }\n\n      return data;\n    }\n    /** Returns the underlying bytes of the tensor's data. */\n\n  }, {\n    key: \"bytes\",\n    value: function () {\n      var _bytes = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                this.throwIfDisposed();\n                _context4.next = 3;\n                return trackerFn().read(this.dataId);\n\n              case 3:\n                data = _context4.sent;\n\n                if (!(this.dtype === 'string')) {\n                  _context4.next = 8;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", data);\n\n              case 8:\n                return _context4.abrupt(\"return\", new Uint8Array(data.buffer));\n\n              case 9:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function bytes() {\n        return _bytes.apply(this, arguments);\n      }\n\n      return bytes;\n    }()\n    /**\n     * Disposes `tf.Tensor` from memory.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      if (this.isDisposed) {\n        return;\n      }\n\n      trackerFn().disposeTensor(this);\n      this.isDisposedInternal = true;\n    }\n  }, {\n    key: \"isDisposed\",\n    get: function get() {\n      return this.isDisposedInternal;\n    }\n  }, {\n    key: \"throwIfDisposed\",\n    value: function throwIfDisposed() {\n      if (this.isDisposed) {\n        throw new Error(\"Tensor is disposed.\");\n      }\n    }\n    /**\n     * Prints the `tf.Tensor`. See `tf.print` for details.\n     *\n     * @param verbose Whether to print verbose information about the tensor,\n     *    including dtype and size.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n\n  }, {\n    key: \"print\",\n    value: function print() {\n      var verbose = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      return opHandler.print(this, verbose);\n    }\n    /**\n     * Returns a copy of the tensor. See `tf.clone` for details.\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      this.throwIfDisposed();\n      return opHandler.clone(this);\n    }\n    /**\n     * Returns a human-readable description of the tensor. Useful for logging.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var verbose = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var vals = this.dataSync();\n      return tensorToString(vals, this.shape, this.dtype, verbose);\n    }\n  }, {\n    key: \"cast\",\n    value: function cast(dtype) {\n      this.throwIfDisposed();\n      return opHandler.cast(this, dtype);\n    }\n  }, {\n    key: \"variable\",\n    value: function variable() {\n      var trainable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      var name = arguments.length > 1 ? arguments[1] : undefined;\n      var dtype = arguments.length > 2 ? arguments[2] : undefined;\n      this.throwIfDisposed();\n      return trackerFn().makeVariable(this, trainable, name, dtype);\n    }\n  }]);\n\n  return Tensor;\n}();\nObject.defineProperty(Tensor, Symbol.hasInstance, {\n  value: function value(instance) {\n    // Implementation note: we should use properties of the object that will be\n    // defined before the constructor body has finished executing (methods).\n    // This is because when this code is transpiled by babel, babel will call\n    // classCallCheck before the constructor body is run.\n    // See https://github.com/tensorflow/tfjs/issues/3384 for backstory.\n    return !!instance && instance.data != null && instance.dataSync != null && instance.throwIfDisposed != null;\n  }\n});\nexport function getGlobalTensorClass() {\n  // Use getGlobal so that we can augment the Tensor class across package\n  // boundaries becase the node resolution alg may result in different modules\n  // being returned for this file depending on the path they are loaded from.\n  return getGlobal('Tensor', function () {\n    return Tensor;\n  });\n} // Global side effect. Cache global reference to Tensor class\n\ngetGlobalTensorClass();\n/**\n * A mutable `tf.Tensor`, useful for persisting state, e.g. for training.\n *\n * @doc {heading: 'Tensors', subheading: 'Classes'}\n */\n\nexport var Variable = /*#__PURE__*/function (_Tensor) {\n  _inherits(Variable, _Tensor);\n\n  var _super = _createSuper(Variable);\n\n  function Variable(initialValue, trainable, name, tensorId) {\n    var _this3;\n\n    _classCallCheck(this, Variable);\n\n    _this3 = _super.call(this, initialValue.shape, initialValue.dtype, initialValue.dataId, tensorId);\n    _this3.trainable = trainable;\n    _this3.name = name;\n    return _this3;\n  }\n  /**\n   * Assign a new `tf.Tensor` to this variable. The new `tf.Tensor` must have\n   * the same shape and dtype as the old `tf.Tensor`.\n   *\n   * @param newValue New tensor to be assigned to this variable.\n   *\n   * @doc {heading: 'Tensors', subheading: 'Classes'}\n   */\n\n\n  _createClass(Variable, [{\n    key: \"assign\",\n    value: function assign(newValue) {\n      if (newValue.dtype !== this.dtype) {\n        throw new Error(\"dtype of the new value (\".concat(newValue.dtype, \") and \") + \"previous value (\".concat(this.dtype, \") must match\"));\n      }\n\n      if (!util.arraysEqual(newValue.shape, this.shape)) {\n        throw new Error(\"shape of the new value (\".concat(newValue.shape, \") and \") + \"previous value (\".concat(this.shape, \") must match\"));\n      }\n\n      trackerFn().disposeTensor(this);\n      this.dataId = newValue.dataId;\n      trackerFn().incRef(this, null\n      /* backend */\n      );\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      trackerFn().disposeVariable(this);\n      this.isDisposedInternal = true;\n    }\n  }]);\n\n  return Variable;\n}(Tensor);\nObject.defineProperty(Variable, Symbol.hasInstance, {\n  value: function value(instance) {\n    return instance instanceof Tensor && instance.assign != null && instance.assign instanceof Function;\n  }\n});","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Tensor } from './tensor';\nimport { upcastType } from './types';\nimport { assert } from './util';\nexport function makeTypesMatch(a, b) {\n  if (a.dtype === b.dtype) {\n    return [a, b];\n  }\n\n  var dtype = upcastType(a.dtype, b.dtype);\n  return [a.cast(dtype), b.cast(dtype)];\n}\nexport function assertTypesMatch(a, b) {\n  assert(a.dtype === b.dtype, function () {\n    return \"The dtypes of the first(\".concat(a.dtype, \") and\") + \" second(\".concat(b.dtype, \") input must match\");\n  });\n}\nexport function isTensorInList(tensor, tensorList) {\n  return tensorList.some(function (x) {\n    return x.id === tensor.id;\n  });\n}\n/**\n * Extracts any `Tensor`s found within the provided object.\n *\n * @param container an object that may be a `Tensor` or may directly contain\n *   `Tensor`s, such as a `Tensor[]` or `{key: Tensor, ...}`. In general it\n *   is safe to pass any object here, except that `Promise`s are not\n *   supported.\n * @returns An array of `Tensors` found within the passed object. If the\n *   argument is simply a `Tensor', a list containing that `Tensor` is\n *   returned. If the object is not a `Tensor` or does not\n *   contain `Tensors`, an empty list is returned.\n */\n\nexport function getTensorsInContainer(result) {\n  var list = [];\n  var seen = new Set();\n  walkTensorContainer(result, list, seen);\n  return list;\n}\n\nfunction walkTensorContainer(container, list, seen) {\n  if (container == null) {\n    return;\n  }\n\n  if (container instanceof Tensor) {\n    list.push(container);\n    return;\n  }\n\n  if (!isIterable(container)) {\n    return;\n  } // Iteration over keys works also for arrays.\n\n\n  var iterable = container;\n\n  for (var k in iterable) {\n    var val = iterable[k];\n\n    if (!seen.has(val)) {\n      seen.add(val);\n      walkTensorContainer(val, list, seen);\n    }\n  }\n} // tslint:disable-next-line:no-any\n\n\nfunction isIterable(obj) {\n  return Array.isArray(obj) || typeof obj === 'object';\n}","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from './engine';\nimport { env } from './environment';\nimport { Tensor } from './tensor';\nimport { assert, flatten, inferDtype, isTypedArray, toTypedArray } from './util';\nexport function inferShape(val, dtype) {\n  var firstElem = val;\n\n  if (isTypedArray(val)) {\n    return dtype === 'string' ? [] : [val.length];\n  }\n\n  if (!Array.isArray(val)) {\n    return []; // Scalar.\n  }\n\n  var shape = [];\n\n  while (Array.isArray(firstElem) || isTypedArray(firstElem) && dtype !== 'string') {\n    shape.push(firstElem.length);\n    firstElem = firstElem[0];\n  }\n\n  if (Array.isArray(val) && env().getBool('TENSORLIKE_CHECK_SHAPE_CONSISTENCY')) {\n    deepAssertShapeConsistency(val, shape, []);\n  }\n\n  return shape;\n}\n\nfunction deepAssertShapeConsistency(val, shape, indices) {\n  indices = indices || [];\n\n  if (!Array.isArray(val) && !isTypedArray(val)) {\n    assert(shape.length === 0, function () {\n      return \"Element arr[\".concat(indices.join(']['), \"] is a primitive, \") + \"but should be an array/TypedArray of \".concat(shape[0], \" elements\");\n    });\n    return;\n  }\n\n  assert(shape.length > 0, function () {\n    return \"Element arr[\".concat(indices.join(']['), \"] should be a primitive, \") + \"but is an array of \".concat(val.length, \" elements\");\n  });\n  assert(val.length === shape[0], function () {\n    return \"Element arr[\".concat(indices.join(']['), \"] should have \").concat(shape[0], \" \") + \"elements, but has \".concat(val.length, \" elements\");\n  });\n  var subShape = shape.slice(1);\n\n  for (var i = 0; i < val.length; ++i) {\n    deepAssertShapeConsistency(val[i], subShape, indices.concat(i));\n  }\n}\n\nfunction assertDtype(expectedDtype, actualDType, argName, functionName) {\n  if (expectedDtype === 'string_or_numeric') {\n    return;\n  }\n\n  if (expectedDtype == null) {\n    throw new Error(\"Expected dtype cannot be null.\");\n  }\n\n  if (expectedDtype !== 'numeric' && expectedDtype !== actualDType || expectedDtype === 'numeric' && actualDType === 'string') {\n    throw new Error(\"Argument '\".concat(argName, \"' passed to '\").concat(functionName, \"' must \") + \"be \".concat(expectedDtype, \" tensor, but got \").concat(actualDType, \" tensor\"));\n  }\n}\n\nexport function convertToTensor(x, argName, functionName) {\n  var parseAsDtype = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'numeric';\n\n  if (x instanceof Tensor) {\n    assertDtype(parseAsDtype, x.dtype, argName, functionName);\n    return x;\n  }\n\n  var inferredDtype = inferDtype(x); // If the user expects a bool/int/float, use that info to update the\n  // inferredDtype when it is not a string.\n\n  if (inferredDtype !== 'string' && ['bool', 'int32', 'float32'].indexOf(parseAsDtype) >= 0) {\n    inferredDtype = parseAsDtype;\n  }\n\n  assertDtype(parseAsDtype, inferredDtype, argName, functionName);\n\n  if (x == null || !isTypedArray(x) && !Array.isArray(x) && typeof x !== 'number' && typeof x !== 'boolean' && typeof x !== 'string') {\n    var type = x == null ? 'null' : x.constructor.name;\n    throw new Error(\"Argument '\".concat(argName, \"' passed to '\").concat(functionName, \"' must be a \") + \"Tensor or TensorLike, but got '\".concat(type, \"'\"));\n  }\n\n  var inferredShape = inferShape(x, inferredDtype);\n\n  if (!isTypedArray(x) && !Array.isArray(x)) {\n    x = [x];\n  }\n\n  var skipTypedArray = true;\n  var values = inferredDtype !== 'string' ? toTypedArray(x, inferredDtype) : flatten(x, [], skipTypedArray);\n  return ENGINE.makeTensor(values, inferredShape, inferredDtype);\n}\nexport function convertToTensorArray(arg, argName, functionName) {\n  var parseAsDtype = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'numeric';\n\n  if (!Array.isArray(arg)) {\n    throw new Error(\"Argument \".concat(argName, \" passed to \").concat(functionName, \" must be a \") + '`Tensor[]` or `TensorLike[]`');\n  }\n\n  var tensors = arg;\n  return tensors.map(function (t, i) {\n    return convertToTensor(t, \"\".concat(argName, \"[\").concat(i, \"]\"), functionName, parseAsDtype);\n  });\n}","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var Rank;\n\n(function (Rank) {\n  Rank[\"R0\"] = \"R0\";\n  Rank[\"R1\"] = \"R1\";\n  Rank[\"R2\"] = \"R2\";\n  Rank[\"R3\"] = \"R3\";\n  Rank[\"R4\"] = \"R4\";\n  Rank[\"R5\"] = \"R5\";\n  Rank[\"R6\"] = \"R6\";\n})(Rank || (Rank = {})); // Looks for upcasting types. Used, for example, in operations with mixed dtype\n// inputs.\n\n\nvar UpcastInt32AndMap;\n\n(function (UpcastInt32AndMap) {\n  UpcastInt32AndMap[\"float32\"] = \"float32\";\n  UpcastInt32AndMap[\"int32\"] = \"int32\";\n  UpcastInt32AndMap[\"bool\"] = \"int32\";\n  UpcastInt32AndMap[\"complex64\"] = \"complex64\";\n})(UpcastInt32AndMap || (UpcastInt32AndMap = {}));\n\nvar UpcastBoolAndMap;\n\n(function (UpcastBoolAndMap) {\n  UpcastBoolAndMap[\"float32\"] = \"float32\";\n  UpcastBoolAndMap[\"int32\"] = \"int32\";\n  UpcastBoolAndMap[\"bool\"] = \"bool\";\n  UpcastBoolAndMap[\"complex64\"] = \"complex64\";\n})(UpcastBoolAndMap || (UpcastBoolAndMap = {}));\n\nvar UpcastFloat32AndMap;\n\n(function (UpcastFloat32AndMap) {\n  UpcastFloat32AndMap[\"float32\"] = \"float32\";\n  UpcastFloat32AndMap[\"int32\"] = \"float32\";\n  UpcastFloat32AndMap[\"bool\"] = \"float32\";\n  UpcastFloat32AndMap[\"complex64\"] = \"complex64\";\n})(UpcastFloat32AndMap || (UpcastFloat32AndMap = {}));\n\nvar UpcastComplex64AndMap;\n\n(function (UpcastComplex64AndMap) {\n  UpcastComplex64AndMap[\"float32\"] = \"complex64\";\n  UpcastComplex64AndMap[\"int32\"] = \"complex64\";\n  UpcastComplex64AndMap[\"bool\"] = \"complex64\";\n  UpcastComplex64AndMap[\"complex64\"] = \"complex64\";\n})(UpcastComplex64AndMap || (UpcastComplex64AndMap = {}));\n\nvar upcastTypeMap = {\n  'float32': UpcastFloat32AndMap,\n  'int32': UpcastInt32AndMap,\n  'bool': UpcastBoolAndMap,\n  'complex64': UpcastComplex64AndMap\n};\nexport function upcastType(typeA, typeB) {\n  if (typeA === 'string' || typeB === 'string') {\n    if (typeA === 'string' && typeB === 'string') {\n      return 'string';\n    }\n\n    throw new Error(\"Can not upcast \".concat(typeA, \" with \").concat(typeB));\n  }\n\n  return upcastTypeMap[typeA][typeB];\n}\n/** Returns the output type after summation. */\n\nexport function sumOutType(type) {\n  return upcastType(type, 'int32');\n}","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env } from './environment';\nimport * as base from './util_base';\nexport * from './util_base';\n/**\n * Create typed array for scalar value. Used for storing in `DataStorage`.\n */\n\nexport function createScalarValue(value, dtype) {\n  if (dtype === 'string') {\n    return encodeString(value);\n  }\n\n  return toTypedArray([value], dtype);\n}\n\nfunction noConversionNeeded(a, dtype) {\n  return a instanceof Float32Array && dtype === 'float32' || a instanceof Int32Array && dtype === 'int32' || a instanceof Uint8Array && dtype === 'bool';\n}\n\nexport function toTypedArray(a, dtype) {\n  if (dtype === 'string') {\n    throw new Error('Cannot convert a string[] to a TypedArray');\n  }\n\n  if (Array.isArray(a)) {\n    a = base.flatten(a);\n  }\n\n  if (env().getBool('DEBUG')) {\n    base.checkConversionForErrors(a, dtype);\n  }\n\n  if (noConversionNeeded(a, dtype)) {\n    return a;\n  }\n\n  if (dtype == null || dtype === 'float32' || dtype === 'complex64') {\n    return new Float32Array(a);\n  } else if (dtype === 'int32') {\n    return new Int32Array(a);\n  } else if (dtype === 'bool') {\n    var bool = new Uint8Array(a.length);\n\n    for (var i = 0; i < bool.length; ++i) {\n      if (Math.round(a[i]) !== 0) {\n        bool[i] = 1;\n      }\n    }\n\n    return bool;\n  } else {\n    throw new Error(\"Unknown data type \".concat(dtype));\n  }\n}\n/**\n * Returns the current high-resolution time in milliseconds relative to an\n * arbitrary time in the past. It works across different platforms (node.js,\n * browsers).\n *\n * ```js\n * console.log(tf.util.now());\n * ```\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\n\nexport function now() {\n  return env().platform.now();\n}\n/**\n * Returns a platform-specific implementation of\n * [`fetch`](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API).\n *\n * If `fetch` is defined on the global object (`window`, `process`, etc.),\n * `tf.util.fetch` returns that function.\n *\n * If not, `tf.util.fetch` returns a platform-specific solution.\n *\n * ```js\n * const resource = await tf.util.fetch('https://unpkg.com/@tensorflow/tfjs');\n * // handle response\n * ```\n *\n * @doc {heading: 'Util'}\n */\n\nexport function fetch(path, requestInits) {\n  return env().platform.fetch(path, requestInits);\n}\n/**\n * Encodes the provided string into bytes using the provided encoding scheme.\n *\n * @param s The string to encode.\n * @param encoding The encoding scheme. Defaults to utf-8.\n *\n * @doc {heading: 'Util'}\n */\n\nexport function encodeString(s) {\n  var encoding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'utf-8';\n  encoding = encoding || 'utf-8';\n  return env().platform.encode(s, encoding);\n}\n/**\n * Decodes the provided bytes into a string using the provided encoding scheme.\n * @param bytes The bytes to decode.\n *\n * @param encoding The encoding scheme. Defaults to utf-8.\n *\n * @doc {heading: 'Util'}\n */\n\nexport function decodeString(bytes) {\n  var encoding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'utf-8';\n  encoding = encoding || 'utf-8';\n  return env().platform.decode(bytes, encoding);\n}","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * Shuffles the array in-place using Fisher-Yates algorithm.\n *\n * ```js\n * const a = [1, 2, 3, 4, 5];\n * tf.util.shuffle(a);\n * console.log(a);\n * ```\n *\n * @param array The array to shuffle in-place.\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\n// tslint:disable-next-line:no-any\nexport function shuffle(array) {\n  var counter = array.length;\n  var temp = 0;\n  var index = 0; // While there are elements in the array\n\n  while (counter > 0) {\n    // Pick a random index\n    index = Math.random() * counter | 0; // Decrease counter by 1\n\n    counter--; // And swap the last element with it\n\n    temp = array[counter];\n    array[counter] = array[index];\n    array[index] = temp;\n  }\n}\n/**\n * Shuffles two arrays in-place the same way using Fisher-Yates algorithm.\n *\n * ```js\n * const a = [1,2,3,4,5];\n * const b = [11,22,33,44,55];\n * tf.util.shuffleCombo(a, b);\n * console.log(a, b);\n * ```\n *\n * @param array The first array to shuffle in-place.\n * @param array2 The second array to shuffle in-place with the same permutation\n *     as the first array.\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\n\nexport function shuffleCombo( // tslint:disable-next-line:no-any\narray, // tslint:disable-next-line:no-any\narray2) {\n  if (array.length !== array2.length) {\n    throw new Error(\"Array sizes must match to be shuffled together \" + \"First array length was \".concat(array.length) + \"Second array length was \".concat(array2.length));\n  }\n\n  var counter = array.length;\n  var temp, temp2;\n  var index = 0; // While there are elements in the array\n\n  while (counter > 0) {\n    // Pick a random index\n    index = Math.random() * counter | 0; // Decrease counter by 1\n\n    counter--; // And swap the last element of each array with it\n\n    temp = array[counter];\n    temp2 = array2[counter];\n    array[counter] = array[index];\n    array2[counter] = array2[index];\n    array[index] = temp;\n    array2[index] = temp2;\n  }\n}\n/** Clamps a value to a specified range. */\n\nexport function clamp(min, x, max) {\n  return Math.max(min, Math.min(x, max));\n}\nexport function nearestLargerEven(val) {\n  return val % 2 === 0 ? val : val + 1;\n}\nexport function sum(arr) {\n  var sum = 0;\n\n  for (var i = 0; i < arr.length; i++) {\n    sum += arr[i];\n  }\n\n  return sum;\n}\n/**\n * Returns a sample from a uniform [a, b) distribution.\n *\n * @param a The minimum support (inclusive).\n * @param b The maximum support (exclusive).\n * @return A pseudorandom number on the half-open interval [a,b).\n */\n\nexport function randUniform(a, b) {\n  var r = Math.random();\n  return b * r + (1 - r) * a;\n}\n/** Returns the squared Euclidean distance between two vectors. */\n\nexport function distSquared(a, b) {\n  var result = 0;\n\n  for (var i = 0; i < a.length; i++) {\n    var diff = Number(a[i]) - Number(b[i]);\n    result += diff * diff;\n  }\n\n  return result;\n}\n/**\n * Asserts that the expression is true. Otherwise throws an error with the\n * provided message.\n *\n * ```js\n * const x = 2;\n * tf.util.assert(x === 2, 'x is not 2');\n * ```\n *\n * @param expr The expression to assert (as a boolean).\n * @param msg A function that returns the message to report when throwing an\n *     error. We use a function for performance reasons.\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\n\nexport function assert(expr, msg) {\n  if (!expr) {\n    throw new Error(typeof msg === 'string' ? msg : msg());\n  }\n}\nexport function assertShapesMatch(shapeA, shapeB) {\n  var errorMessagePrefix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  assert(arraysEqual(shapeA, shapeB), function () {\n    return errorMessagePrefix + \" Shapes \".concat(shapeA, \" and \").concat(shapeB, \" must match\");\n  });\n}\nexport function assertNonNull(a) {\n  assert(a != null, function () {\n    return \"The input to the tensor constructor must be a non-null value.\";\n  });\n} // NOTE: We explicitly type out what T extends instead of any so that\n// util.flatten on a nested array of number doesn't try to infer T as a\n// number[][], causing us to explicitly type util.flatten<number>().\n\n/**\n *  Flattens an arbitrarily nested array.\n *\n * ```js\n * const a = [[1, 2], [3, 4], [5, [6, [7]]]];\n * const flat = tf.util.flatten(a);\n * console.log(flat);\n * ```\n *\n *  @param arr The nested array to flatten.\n *  @param result The destination array which holds the elements.\n *  @param skipTypedArray If true, avoids flattening the typed arrays. Defaults\n *      to false.\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\n\nexport function flatten(arr) {\n  var result = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var skipTypedArray = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  if (result == null) {\n    result = [];\n  }\n\n  if (Array.isArray(arr) || isTypedArray(arr) && !skipTypedArray) {\n    for (var i = 0; i < arr.length; ++i) {\n      flatten(arr[i], result, skipTypedArray);\n    }\n  } else {\n    result.push(arr);\n  }\n\n  return result;\n}\n/**\n * Returns the size (number of elements) of the tensor given its shape.\n *\n * ```js\n * const shape = [3, 4, 2];\n * const size = tf.util.sizeFromShape(shape);\n * console.log(size);\n * ```\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\n\nexport function sizeFromShape(shape) {\n  if (shape.length === 0) {\n    // Scalar.\n    return 1;\n  }\n\n  var size = shape[0];\n\n  for (var i = 1; i < shape.length; i++) {\n    size *= shape[i];\n  }\n\n  return size;\n}\nexport function isScalarShape(shape) {\n  return shape.length === 0;\n}\nexport function arraysEqual(n1, n2) {\n  if (n1 === n2) {\n    return true;\n  }\n\n  if (n1 == null || n2 == null) {\n    return false;\n  }\n\n  if (n1.length !== n2.length) {\n    return false;\n  }\n\n  for (var i = 0; i < n1.length; i++) {\n    if (n1[i] !== n2[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\nexport function isInt(a) {\n  return a % 1 === 0;\n}\nexport function tanh(x) {\n  // tslint:disable-next-line:no-any\n  if (Math.tanh != null) {\n    // tslint:disable-next-line:no-any\n    return Math.tanh(x);\n  }\n\n  if (x === Infinity) {\n    return 1;\n  } else if (x === -Infinity) {\n    return -1;\n  } else {\n    var e2x = Math.exp(2 * x);\n    return (e2x - 1) / (e2x + 1);\n  }\n}\nexport function sizeToSquarishShape(size) {\n  var width = Math.ceil(Math.sqrt(size));\n  return [width, Math.ceil(size / width)];\n}\n/**\n * Creates a new array with randomized indicies to a given quantity.\n *\n * ```js\n * const randomTen = tf.util.createShuffledIndices(10);\n * console.log(randomTen);\n * ```\n *\n * @param number Quantity of how many shuffled indicies to create.\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\n\nexport function createShuffledIndices(n) {\n  var shuffledIndices = new Uint32Array(n);\n\n  for (var i = 0; i < n; ++i) {\n    shuffledIndices[i] = i;\n  }\n\n  shuffle(shuffledIndices);\n  return shuffledIndices;\n}\nexport function rightPad(a, size) {\n  if (size <= a.length) {\n    return a;\n  }\n\n  return a + ' '.repeat(size - a.length);\n}\nexport function repeatedTry(checkFn) {\n  var delayFn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (counter) {\n    return 0;\n  };\n  var maxCounter = arguments.length > 2 ? arguments[2] : undefined;\n  return new Promise(function (resolve, reject) {\n    var tryCount = 0;\n\n    var tryFn = function tryFn() {\n      if (checkFn()) {\n        resolve();\n        return;\n      }\n\n      tryCount++;\n      var nextBackoff = delayFn(tryCount);\n\n      if (maxCounter != null && tryCount >= maxCounter) {\n        reject();\n        return;\n      }\n\n      setTimeout(tryFn, nextBackoff);\n    };\n\n    tryFn();\n  });\n}\n/**\n * Given the full size of the array and a shape that may contain -1 as the\n * implicit dimension, returns the inferred shape where -1 is replaced.\n * E.g. For shape=[2, -1, 3] and size=24, it will return [2, 4, 3].\n *\n * @param shape The shape, which may contain -1 in some dimension.\n * @param size The full size (number of elements) of the array.\n * @return The inferred shape where -1 is replaced with the inferred size.\n */\n\nexport function inferFromImplicitShape(shape, size) {\n  var shapeProd = 1;\n  var implicitIdx = -1;\n\n  for (var i = 0; i < shape.length; ++i) {\n    if (shape[i] >= 0) {\n      shapeProd *= shape[i];\n    } else if (shape[i] === -1) {\n      if (implicitIdx !== -1) {\n        throw Error(\"Shapes can only have 1 implicit size. \" + \"Found -1 at dim \".concat(implicitIdx, \" and dim \").concat(i));\n      }\n\n      implicitIdx = i;\n    } else if (shape[i] < 0) {\n      throw Error(\"Shapes can not be < 0. Found \".concat(shape[i], \" at dim \").concat(i));\n    }\n  }\n\n  if (implicitIdx === -1) {\n    if (size > 0 && size !== shapeProd) {\n      throw Error(\"Size(\".concat(size, \") must match the product of shape \").concat(shape));\n    }\n\n    return shape;\n  }\n\n  if (shapeProd === 0) {\n    throw Error(\"Cannot infer the missing size in [\".concat(shape, \"] when \") + \"there are 0 elements\");\n  }\n\n  if (size % shapeProd !== 0) {\n    throw Error(\"The implicit shape can't be a fractional number. \" + \"Got \".concat(size, \" / \").concat(shapeProd));\n  }\n\n  var newShape = shape.slice();\n  newShape[implicitIdx] = size / shapeProd;\n  return newShape;\n}\nexport function parseAxisParam(axis, shape) {\n  var rank = shape.length; // Normalize input\n\n  axis = axis == null ? shape.map(function (s, i) {\n    return i;\n  }) : [].concat(axis); // Check for valid range\n\n  assert(axis.every(function (ax) {\n    return ax >= -rank && ax < rank;\n  }), function () {\n    return \"All values in axis param must be in range [-\".concat(rank, \", \").concat(rank, \") but \") + \"got axis \".concat(axis);\n  }); // Check for only integers\n\n  assert(axis.every(function (ax) {\n    return isInt(ax);\n  }), function () {\n    return \"All values in axis param must be integers but \" + \"got axis \".concat(axis);\n  }); // Handle negative axis.\n\n  return axis.map(function (a) {\n    return a < 0 ? rank + a : a;\n  });\n}\n/** Reduces the shape by removing all dimensions of shape 1. */\n\nexport function squeezeShape(shape, axis) {\n  var newShape = [];\n  var keptDims = [];\n  var isEmptyArray = axis != null && Array.isArray(axis) && axis.length === 0;\n  var axes = axis == null || isEmptyArray ? null : parseAxisParam(axis, shape).sort();\n  var j = 0;\n\n  for (var i = 0; i < shape.length; ++i) {\n    if (axes != null) {\n      if (axes[j] === i && shape[i] !== 1) {\n        throw new Error(\"Can't squeeze axis \".concat(i, \" since its dim '\").concat(shape[i], \"' is not 1\"));\n      }\n\n      if ((axes[j] == null || axes[j] > i) && shape[i] === 1) {\n        newShape.push(shape[i]);\n        keptDims.push(i);\n      }\n\n      if (axes[j] <= i) {\n        j++;\n      }\n    }\n\n    if (shape[i] !== 1) {\n      newShape.push(shape[i]);\n      keptDims.push(i);\n    }\n  }\n\n  return {\n    newShape: newShape,\n    keptDims: keptDims\n  };\n}\nexport function getTypedArrayFromDType(dtype, size) {\n  var values = null;\n\n  if (dtype == null || dtype === 'float32') {\n    values = new Float32Array(size);\n  } else if (dtype === 'int32') {\n    values = new Int32Array(size);\n  } else if (dtype === 'bool') {\n    values = new Uint8Array(size);\n  } else {\n    throw new Error(\"Unknown data type \".concat(dtype));\n  }\n\n  return values;\n}\nexport function getArrayFromDType(dtype, size) {\n  var values = null;\n\n  if (dtype == null || dtype === 'float32') {\n    values = new Float32Array(size);\n  } else if (dtype === 'int32') {\n    values = new Int32Array(size);\n  } else if (dtype === 'bool') {\n    values = new Uint8Array(size);\n  } else if (dtype === 'string') {\n    values = new Array(size);\n  } else {\n    throw new Error(\"Unknown data type \".concat(dtype));\n  }\n\n  return values;\n}\nexport function checkConversionForErrors(vals, dtype) {\n  for (var i = 0; i < vals.length; i++) {\n    var num = vals[i];\n\n    if (isNaN(num) || !isFinite(num)) {\n      throw Error(\"A tensor of type \".concat(dtype, \" being uploaded contains \").concat(num, \".\"));\n    }\n  }\n}\n/** Returns true if the dtype is valid. */\n\nexport function isValidDtype(dtype) {\n  return dtype === 'bool' || dtype === 'complex64' || dtype === 'float32' || dtype === 'int32' || dtype === 'string';\n}\n/**\n * Returns true if the new type can't encode the old type without loss of\n * precision.\n */\n\nexport function hasEncodingLoss(oldType, newType) {\n  if (newType === 'complex64') {\n    return false;\n  }\n\n  if (newType === 'float32' && oldType !== 'complex64') {\n    return false;\n  }\n\n  if (newType === 'int32' && oldType !== 'float32' && oldType !== 'complex64') {\n    return false;\n  }\n\n  if (newType === 'bool' && oldType === 'bool') {\n    return false;\n  }\n\n  return true;\n}\nexport function isTypedArray(a) {\n  return a instanceof Float32Array || a instanceof Int32Array || a instanceof Uint8Array;\n}\nexport function bytesPerElement(dtype) {\n  if (dtype === 'float32' || dtype === 'int32') {\n    return 4;\n  } else if (dtype === 'complex64') {\n    return 8;\n  } else if (dtype === 'bool') {\n    return 1;\n  } else {\n    throw new Error(\"Unknown dtype \".concat(dtype));\n  }\n}\n/**\n * Returns the approximate number of bytes allocated in the string array - 2\n * bytes per character. Computing the exact bytes for a native string in JS is\n * not possible since it depends on the encoding of the html page that serves\n * the website.\n */\n\nexport function bytesFromStringArray(arr) {\n  if (arr == null) {\n    return 0;\n  }\n\n  var bytes = 0;\n  arr.forEach(function (x) {\n    return bytes += x.length;\n  });\n  return bytes;\n}\n/** Returns true if the value is a string. */\n\nexport function isString(value) {\n  return typeof value === 'string' || value instanceof String;\n}\nexport function isBoolean(value) {\n  return typeof value === 'boolean';\n}\nexport function isNumber(value) {\n  return typeof value === 'number';\n}\nexport function inferDtype(values) {\n  if (Array.isArray(values)) {\n    return inferDtype(values[0]);\n  }\n\n  if (values instanceof Float32Array) {\n    return 'float32';\n  } else if (values instanceof Int32Array || values instanceof Uint8Array) {\n    return 'int32';\n  } else if (isNumber(values)) {\n    return 'float32';\n  } else if (isString(values)) {\n    return 'string';\n  } else if (isBoolean(values)) {\n    return 'bool';\n  }\n\n  return 'float32';\n}\nexport function isFunction(f) {\n  return !!(f && f.constructor && f.call && f.apply);\n}\nexport function nearestDivisor(size, start) {\n  for (var i = start; i < size; ++i) {\n    if (size % i === 0) {\n      return i;\n    }\n  }\n\n  return size;\n}\nexport function computeStrides(shape) {\n  var rank = shape.length;\n\n  if (rank < 2) {\n    return [];\n  } // Last dimension has implicit stride of 1, thus having D-1 (instead of D)\n  // strides.\n\n\n  var strides = new Array(rank - 1);\n  strides[rank - 2] = shape[rank - 1];\n\n  for (var i = rank - 3; i >= 0; --i) {\n    strides[i] = strides[i + 1] * shape[i + 1];\n  }\n\n  return strides;\n}\n\nfunction createNestedArray(offset, shape, a) {\n  var isComplex = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var ret = new Array();\n\n  if (shape.length === 1) {\n    var d = shape[0] * (isComplex ? 2 : 1);\n\n    for (var i = 0; i < d; i++) {\n      ret[i] = a[offset + i];\n    }\n  } else {\n    var _d = shape[0];\n    var rest = shape.slice(1);\n    var len = rest.reduce(function (acc, c) {\n      return acc * c;\n    }) * (isComplex ? 2 : 1);\n\n    for (var _i = 0; _i < _d; _i++) {\n      ret[_i] = createNestedArray(offset + _i * len, rest, a, isComplex);\n    }\n  }\n\n  return ret;\n} // Provide a nested array of TypedArray in given shape.\n\n\nexport function toNestedArray(shape, a) {\n  var isComplex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  if (shape.length === 0) {\n    // Scalar type should return a single number.\n    return a[0];\n  }\n\n  var size = shape.reduce(function (acc, c) {\n    return acc * c;\n  }) * (isComplex ? 2 : 1);\n\n  if (size === 0) {\n    // A tensor with shape zero should be turned into empty list.\n    return [];\n  }\n\n  if (size !== a.length) {\n    throw new Error(\"[\".concat(shape, \"] does not match the input size \").concat(a.length).concat(isComplex ? ' for a complex tensor' : '', \".\"));\n  }\n\n  return createNestedArray(0, shape, a, isComplex);\n}\nexport function makeOnesTypedArray(size, dtype) {\n  var array = makeZerosTypedArray(size, dtype);\n\n  for (var i = 0; i < array.length; i++) {\n    array[i] = 1;\n  }\n\n  return array;\n}\nexport function makeZerosTypedArray(size, dtype) {\n  if (dtype == null || dtype === 'float32' || dtype === 'complex64') {\n    return new Float32Array(size);\n  } else if (dtype === 'int32') {\n    return new Int32Array(size);\n  } else if (dtype === 'bool') {\n    return new Uint8Array(size);\n  } else {\n    throw new Error(\"Unknown data type \".concat(dtype));\n  }\n}\n/**\n * Make nested `TypedArray` filled with zeros.\n * @param shape The shape information for the nested array.\n * @param dtype dtype of the array element.\n */\n\nexport function makeZerosNestedTypedArray(shape, dtype) {\n  var size = shape.reduce(function (prev, curr) {\n    return prev * curr;\n  }, 1);\n\n  if (dtype == null || dtype === 'float32') {\n    return toNestedArray(shape, new Float32Array(size));\n  } else if (dtype === 'int32') {\n    return toNestedArray(shape, new Int32Array(size));\n  } else if (dtype === 'bool') {\n    return toNestedArray(shape, new Uint8Array(size));\n  } else {\n    throw new Error(\"Unknown data type \".concat(dtype));\n  }\n}\nexport function assertNonNegativeIntegerDimensions(shape) {\n  shape.forEach(function (dimSize) {\n    assert(Number.isInteger(dimSize) && dimSize >= 0, function () {\n      return \"Tensor must have a shape comprised of positive integers but got \" + \"shape [\".concat(shape, \"].\");\n    });\n  });\n}\n/**\n * Computes flat index for a given location (multidimentionsal index) in a\n * Tensor/multidimensional array.\n *\n * @param locs Location in the tensor.\n * @param rank Rank of the tensor.\n * @param strides Tensor strides.\n */\n\nexport function locToIndex(locs, rank, strides) {\n  if (rank === 0) {\n    return 0;\n  } else if (rank === 1) {\n    return locs[0];\n  }\n\n  var index = locs[locs.length - 1];\n\n  for (var i = 0; i < locs.length - 1; ++i) {\n    index += strides[i] * locs[i];\n  }\n\n  return index;\n}\n/**\n * Computes the location (multidimensional index) in a tensor/multidimentional\n * array for a given flat index.\n *\n * @param index Index in flat array.\n * @param rank Rank of tensor.\n * @param strides Strides of tensor.\n */\n\nexport function indexToLoc(index, rank, strides) {\n  if (rank === 0) {\n    return [];\n  } else if (rank === 1) {\n    return [index];\n  }\n\n  var locs = new Array(rank);\n\n  for (var i = 0; i < locs.length - 1; ++i) {\n    locs[i] = Math.floor(index / strides[i]);\n    index -= locs[i] * strides[i];\n  }\n\n  locs[locs.length - 1] = index;\n  return locs;\n}\n/**\n * This method asserts whether an object is a Promise instance.\n * @param object\n */\n// tslint:disable-next-line: no-any\n\nexport function isPromise(object) {\n  //  We chose to not use 'obj instanceOf Promise' for two reasons:\n  //  1. It only reliably works for es6 Promise, not other Promise\n  //  implementations.\n  //  2. It doesn't work with framework that uses zone.js. zone.js monkey patch\n  //  the async calls, so it is possible the obj (patched) is comparing to a\n  //  pre-patched Promise.\n  return object && object.then && typeof object.then === 'function';\n}","// A library of seedable RNGs implemented in Javascript.\n//\n// Usage:\n//\n// var seedrandom = require('seedrandom');\n// var random = seedrandom(1); // or any seed.\n// var x = random();       // 0 <= x < 1.  Every bit is random.\n// var x = random.quick(); // 0 <= x < 1.  32 bits of randomness.\n// alea, a 53-bit multiply-with-carry generator by Johannes Baagøe.\n// Period: ~2^116\n// Reported to pass all BigCrush tests.\nvar alea = require('./lib/alea'); // xor128, a pure xor-shift generator by George Marsaglia.\n// Period: 2^128-1.\n// Reported to fail: MatrixRank and LinearComp.\n\n\nvar xor128 = require('./lib/xor128'); // xorwow, George Marsaglia's 160-bit xor-shift combined plus weyl.\n// Period: 2^192-2^32\n// Reported to fail: CollisionOver, SimpPoker, and LinearComp.\n\n\nvar xorwow = require('./lib/xorwow'); // xorshift7, by François Panneton and Pierre L'ecuyer, takes\n// a different approach: it adds robustness by allowing more shifts\n// than Marsaglia's original three.  It is a 7-shift generator\n// with 256 bits, that passes BigCrush with no systmatic failures.\n// Period 2^256-1.\n// No systematic BigCrush failures reported.\n\n\nvar xorshift7 = require('./lib/xorshift7'); // xor4096, by Richard Brent, is a 4096-bit xor-shift with a\n// very long period that also adds a Weyl generator. It also passes\n// BigCrush with no systematic failures.  Its long period may\n// be useful if you have many generators and need to avoid\n// collisions.\n// Period: 2^4128-2^32.\n// No systematic BigCrush failures reported.\n\n\nvar xor4096 = require('./lib/xor4096'); // Tyche-i, by Samuel Neves and Filipe Araujo, is a bit-shifting random\n// number generator derived from ChaCha, a modern stream cipher.\n// https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n// Period: ~2^127\n// No systematic BigCrush failures reported.\n\n\nvar tychei = require('./lib/tychei'); // The original ARC4-based prng included in this library.\n// Period: ~2^1600\n\n\nvar sr = require('./seedrandom');\n\nsr.alea = alea;\nsr.xor128 = xor128;\nsr.xorwow = xorwow;\nsr.xorshift7 = xorshift7;\nsr.xor4096 = xor4096;\nsr.tychei = tychei;\nmodule.exports = sr;","// A port of an algorithm by Johannes Baagøe <baagoe@baagoe.com>, 2010\n// http://baagoe.com/en/RandomMusings/javascript/\n// https://github.com/nquinlan/better-random-numbers-for-javascript-mirror\n// Original work is under MIT license -\n// Copyright (C) 2010 by Johannes Baagøe <baagoe@baagoe.org>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n// \n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n// \n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n(function (global, module, define) {\n  function Alea(seed) {\n    var me = this,\n        mash = Mash();\n\n    me.next = function () {\n      var t = 2091639 * me.s0 + me.c * 2.3283064365386963e-10; // 2^-32\n\n      me.s0 = me.s1;\n      me.s1 = me.s2;\n      return me.s2 = t - (me.c = t | 0);\n    }; // Apply the seeding algorithm from Baagoe.\n\n\n    me.c = 1;\n    me.s0 = mash(' ');\n    me.s1 = mash(' ');\n    me.s2 = mash(' ');\n    me.s0 -= mash(seed);\n\n    if (me.s0 < 0) {\n      me.s0 += 1;\n    }\n\n    me.s1 -= mash(seed);\n\n    if (me.s1 < 0) {\n      me.s1 += 1;\n    }\n\n    me.s2 -= mash(seed);\n\n    if (me.s2 < 0) {\n      me.s2 += 1;\n    }\n\n    mash = null;\n  }\n\n  function copy(f, t) {\n    t.c = f.c;\n    t.s0 = f.s0;\n    t.s1 = f.s1;\n    t.s2 = f.s2;\n    return t;\n  }\n\n  function impl(seed, opts) {\n    var xg = new Alea(seed),\n        state = opts && opts.state,\n        prng = xg.next;\n\n    prng.int32 = function () {\n      return xg.next() * 0x100000000 | 0;\n    };\n\n    prng.double = function () {\n      return prng() + (prng() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\n    };\n\n    prng.quick = prng;\n\n    if (state) {\n      if (typeof state == 'object') copy(state, xg);\n\n      prng.state = function () {\n        return copy(xg, {});\n      };\n    }\n\n    return prng;\n  }\n\n  function Mash() {\n    var n = 0xefc8249d;\n\n    var mash = function mash(data) {\n      data = data.toString();\n\n      for (var i = 0; i < data.length; i++) {\n        n += data.charCodeAt(i);\n        var h = 0.02519603282416938 * n;\n        n = h >>> 0;\n        h -= n;\n        h *= n;\n        n = h >>> 0;\n        h -= n;\n        n += h * 0x100000000; // 2^32\n      }\n\n      return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n    };\n\n    return mash;\n  }\n\n  if (module && module.exports) {\n    module.exports = impl;\n  } else if (define && define.amd) {\n    define(function () {\n      return impl;\n    });\n  } else {\n    this.alea = impl;\n  }\n})(this, typeof module == 'object' && module, // present in node.js\ntypeof define == 'function' && define // present with an AMD loader\n);","// A Javascript implementaion of the \"Tyche-i\" prng algorithm by\n// Samuel Neves and Filipe Araujo.\n// See https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n(function (global, module, define) {\n  function XorGen(seed) {\n    var me = this,\n        strseed = ''; // Set up generator function.\n\n    me.next = function () {\n      var b = me.b,\n          c = me.c,\n          d = me.d,\n          a = me.a;\n      b = b << 25 ^ b >>> 7 ^ c;\n      c = c - d | 0;\n      d = d << 24 ^ d >>> 8 ^ a;\n      a = a - b | 0;\n      me.b = b = b << 20 ^ b >>> 12 ^ c;\n      me.c = c = c - d | 0;\n      me.d = d << 16 ^ c >>> 16 ^ a;\n      return me.a = a - b | 0;\n    };\n    /* The following is non-inverted tyche, which has better internal\n     * bit diffusion, but which is about 25% slower than tyche-i in JS.\n    me.next = function() {\n      var a = me.a, b = me.b, c = me.c, d = me.d;\n      a = (me.a + me.b | 0) >>> 0;\n      d = me.d ^ a; d = d << 16 ^ d >>> 16;\n      c = me.c + d | 0;\n      b = me.b ^ c; b = b << 12 ^ d >>> 20;\n      me.a = a = a + b | 0;\n      d = d ^ a; me.d = d = d << 8 ^ d >>> 24;\n      me.c = c = c + d | 0;\n      b = b ^ c;\n      return me.b = (b << 7 ^ b >>> 25);\n    }\n    */\n\n\n    me.a = 0;\n    me.b = 0;\n    me.c = 2654435769 | 0;\n    me.d = 1367130551;\n\n    if (seed === Math.floor(seed)) {\n      // Integer seed.\n      me.a = seed / 0x100000000 | 0;\n      me.b = seed | 0;\n    } else {\n      // String seed.\n      strseed += seed;\n    } // Mix in string seed, then discard an initial batch of 64 values.\n\n\n    for (var k = 0; k < strseed.length + 20; k++) {\n      me.b ^= strseed.charCodeAt(k) | 0;\n      me.next();\n    }\n  }\n\n  function copy(f, t) {\n    t.a = f.a;\n    t.b = f.b;\n    t.c = f.c;\n    t.d = f.d;\n    return t;\n  }\n\n  ;\n\n  function impl(seed, opts) {\n    var xg = new XorGen(seed),\n        state = opts && opts.state,\n        prng = function prng() {\n      return (xg.next() >>> 0) / 0x100000000;\n    };\n\n    prng.double = function () {\n      do {\n        var top = xg.next() >>> 11,\n            bot = (xg.next() >>> 0) / 0x100000000,\n            result = (top + bot) / (1 << 21);\n      } while (result === 0);\n\n      return result;\n    };\n\n    prng.int32 = xg.next;\n    prng.quick = prng;\n\n    if (state) {\n      if (typeof state == 'object') copy(state, xg);\n\n      prng.state = function () {\n        return copy(xg, {});\n      };\n    }\n\n    return prng;\n  }\n\n  if (module && module.exports) {\n    module.exports = impl;\n  } else if (define && define.amd) {\n    define(function () {\n      return impl;\n    });\n  } else {\n    this.tychei = impl;\n  }\n})(this, typeof module == 'object' && module, // present in node.js\ntypeof define == 'function' && define // present with an AMD loader\n);","// A Javascript implementaion of the \"xor128\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n(function (global, module, define) {\n  function XorGen(seed) {\n    var me = this,\n        strseed = '';\n    me.x = 0;\n    me.y = 0;\n    me.z = 0;\n    me.w = 0; // Set up generator function.\n\n    me.next = function () {\n      var t = me.x ^ me.x << 11;\n      me.x = me.y;\n      me.y = me.z;\n      me.z = me.w;\n      return me.w ^= me.w >>> 19 ^ t ^ t >>> 8;\n    };\n\n    if (seed === (seed | 0)) {\n      // Integer seed.\n      me.x = seed;\n    } else {\n      // String seed.\n      strseed += seed;\n    } // Mix in string seed, then discard an initial batch of 64 values.\n\n\n    for (var k = 0; k < strseed.length + 64; k++) {\n      me.x ^= strseed.charCodeAt(k) | 0;\n      me.next();\n    }\n  }\n\n  function copy(f, t) {\n    t.x = f.x;\n    t.y = f.y;\n    t.z = f.z;\n    t.w = f.w;\n    return t;\n  }\n\n  function impl(seed, opts) {\n    var xg = new XorGen(seed),\n        state = opts && opts.state,\n        prng = function prng() {\n      return (xg.next() >>> 0) / 0x100000000;\n    };\n\n    prng.double = function () {\n      do {\n        var top = xg.next() >>> 11,\n            bot = (xg.next() >>> 0) / 0x100000000,\n            result = (top + bot) / (1 << 21);\n      } while (result === 0);\n\n      return result;\n    };\n\n    prng.int32 = xg.next;\n    prng.quick = prng;\n\n    if (state) {\n      if (typeof state == 'object') copy(state, xg);\n\n      prng.state = function () {\n        return copy(xg, {});\n      };\n    }\n\n    return prng;\n  }\n\n  if (module && module.exports) {\n    module.exports = impl;\n  } else if (define && define.amd) {\n    define(function () {\n      return impl;\n    });\n  } else {\n    this.xor128 = impl;\n  }\n})(this, typeof module == 'object' && module, // present in node.js\ntypeof define == 'function' && define // present with an AMD loader\n);","// A Javascript implementaion of Richard Brent's Xorgens xor4096 algorithm.\n//\n// This fast non-cryptographic random number generator is designed for\n// use in Monte-Carlo algorithms. It combines a long-period xorshift\n// generator with a Weyl generator, and it passes all common batteries\n// of stasticial tests for randomness while consuming only a few nanoseconds\n// for each prng generated.  For background on the generator, see Brent's\n// paper: \"Some long-period random number generators using shifts and xors.\"\n// http://arxiv.org/pdf/1004.3115v1.pdf\n//\n// Usage:\n//\n// var xor4096 = require('xor4096');\n// random = xor4096(1);                        // Seed with int32 or string.\n// assert.equal(random(), 0.1520436450538547); // (0, 1) range, 53 bits.\n// assert.equal(random.int32(), 1806534897);   // signed int32, 32 bits.\n//\n// For nonzero numeric keys, this impelementation provides a sequence\n// identical to that by Brent's xorgens 3 implementaion in C.  This\n// implementation also provides for initalizing the generator with\n// string seeds, or for saving and restoring the state of the generator.\n//\n// On Chrome, this prng benchmarks about 2.1 times slower than\n// Javascript's built-in Math.random().\n(function (global, module, define) {\n  function XorGen(seed) {\n    var me = this; // Set up generator function.\n\n    me.next = function () {\n      var w = me.w,\n          X = me.X,\n          i = me.i,\n          t,\n          v; // Update Weyl generator.\n\n      me.w = w = w + 0x61c88647 | 0; // Update xor generator.\n\n      v = X[i + 34 & 127];\n      t = X[i = i + 1 & 127];\n      v ^= v << 13;\n      t ^= t << 17;\n      v ^= v >>> 15;\n      t ^= t >>> 12; // Update Xor generator array state.\n\n      v = X[i] = v ^ t;\n      me.i = i; // Result is the combination.\n\n      return v + (w ^ w >>> 16) | 0;\n    };\n\n    function init(me, seed) {\n      var t,\n          v,\n          i,\n          j,\n          w,\n          X = [],\n          limit = 128;\n\n      if (seed === (seed | 0)) {\n        // Numeric seeds initialize v, which is used to generates X.\n        v = seed;\n        seed = null;\n      } else {\n        // String seeds are mixed into v and X one character at a time.\n        seed = seed + '\\0';\n        v = 0;\n        limit = Math.max(limit, seed.length);\n      } // Initialize circular array and weyl value.\n\n\n      for (i = 0, j = -32; j < limit; ++j) {\n        // Put the unicode characters into the array, and shuffle them.\n        if (seed) v ^= seed.charCodeAt((j + 32) % seed.length); // After 32 shuffles, take v as the starting w value.\n\n        if (j === 0) w = v;\n        v ^= v << 10;\n        v ^= v >>> 15;\n        v ^= v << 4;\n        v ^= v >>> 13;\n\n        if (j >= 0) {\n          w = w + 0x61c88647 | 0; // Weyl.\n\n          t = X[j & 127] ^= v + w; // Combine xor and weyl to init array.\n\n          i = 0 == t ? i + 1 : 0; // Count zeroes.\n        }\n      } // We have detected all zeroes; make the key nonzero.\n\n\n      if (i >= 128) {\n        X[(seed && seed.length || 0) & 127] = -1;\n      } // Run the generator 512 times to further mix the state before using it.\n      // Factoring this as a function slows the main generator, so it is just\n      // unrolled here.  The weyl generator is not advanced while warming up.\n\n\n      i = 127;\n\n      for (j = 4 * 128; j > 0; --j) {\n        v = X[i + 34 & 127];\n        t = X[i = i + 1 & 127];\n        v ^= v << 13;\n        t ^= t << 17;\n        v ^= v >>> 15;\n        t ^= t >>> 12;\n        X[i] = v ^ t;\n      } // Storing state as object members is faster than using closure variables.\n\n\n      me.w = w;\n      me.X = X;\n      me.i = i;\n    }\n\n    init(me, seed);\n  }\n\n  function copy(f, t) {\n    t.i = f.i;\n    t.w = f.w;\n    t.X = f.X.slice();\n    return t;\n  }\n\n  ;\n\n  function impl(seed, opts) {\n    if (seed == null) seed = +new Date();\n\n    var xg = new XorGen(seed),\n        state = opts && opts.state,\n        prng = function prng() {\n      return (xg.next() >>> 0) / 0x100000000;\n    };\n\n    prng.double = function () {\n      do {\n        var top = xg.next() >>> 11,\n            bot = (xg.next() >>> 0) / 0x100000000,\n            result = (top + bot) / (1 << 21);\n      } while (result === 0);\n\n      return result;\n    };\n\n    prng.int32 = xg.next;\n    prng.quick = prng;\n\n    if (state) {\n      if (state.X) copy(state, xg);\n\n      prng.state = function () {\n        return copy(xg, {});\n      };\n    }\n\n    return prng;\n  }\n\n  if (module && module.exports) {\n    module.exports = impl;\n  } else if (define && define.amd) {\n    define(function () {\n      return impl;\n    });\n  } else {\n    this.xor4096 = impl;\n  }\n})(this, // window object or global\ntypeof module == 'object' && module, // present in node.js\ntypeof define == 'function' && define // present with an AMD loader\n);","// A Javascript implementaion of the \"xorshift7\" algorithm by\n// François Panneton and Pierre L'ecuyer:\n// \"On the Xorgshift Random Number Generators\"\n// http://saluc.engr.uconn.edu/refs/crypto/rng/panneton05onthexorshift.pdf\n(function (global, module, define) {\n  function XorGen(seed) {\n    var me = this; // Set up generator function.\n\n    me.next = function () {\n      // Update xor generator.\n      var X = me.x,\n          i = me.i,\n          t,\n          v,\n          w;\n      t = X[i];\n      t ^= t >>> 7;\n      v = t ^ t << 24;\n      t = X[i + 1 & 7];\n      v ^= t ^ t >>> 10;\n      t = X[i + 3 & 7];\n      v ^= t ^ t >>> 3;\n      t = X[i + 4 & 7];\n      v ^= t ^ t << 7;\n      t = X[i + 7 & 7];\n      t = t ^ t << 13;\n      v ^= t ^ t << 9;\n      X[i] = v;\n      me.i = i + 1 & 7;\n      return v;\n    };\n\n    function init(me, seed) {\n      var j,\n          w,\n          X = [];\n\n      if (seed === (seed | 0)) {\n        // Seed state array using a 32-bit integer.\n        w = X[0] = seed;\n      } else {\n        // Seed state using a string.\n        seed = '' + seed;\n\n        for (j = 0; j < seed.length; ++j) {\n          X[j & 7] = X[j & 7] << 15 ^ seed.charCodeAt(j) + X[j + 1 & 7] << 13;\n        }\n      } // Enforce an array length of 8, not all zeroes.\n\n\n      while (X.length < 8) {\n        X.push(0);\n      }\n\n      for (j = 0; j < 8 && X[j] === 0; ++j) {\n        ;\n      }\n\n      if (j == 8) w = X[7] = -1;else w = X[j];\n      me.x = X;\n      me.i = 0; // Discard an initial 256 values.\n\n      for (j = 256; j > 0; --j) {\n        me.next();\n      }\n    }\n\n    init(me, seed);\n  }\n\n  function copy(f, t) {\n    t.x = f.x.slice();\n    t.i = f.i;\n    return t;\n  }\n\n  function impl(seed, opts) {\n    if (seed == null) seed = +new Date();\n\n    var xg = new XorGen(seed),\n        state = opts && opts.state,\n        prng = function prng() {\n      return (xg.next() >>> 0) / 0x100000000;\n    };\n\n    prng.double = function () {\n      do {\n        var top = xg.next() >>> 11,\n            bot = (xg.next() >>> 0) / 0x100000000,\n            result = (top + bot) / (1 << 21);\n      } while (result === 0);\n\n      return result;\n    };\n\n    prng.int32 = xg.next;\n    prng.quick = prng;\n\n    if (state) {\n      if (state.x) copy(state, xg);\n\n      prng.state = function () {\n        return copy(xg, {});\n      };\n    }\n\n    return prng;\n  }\n\n  if (module && module.exports) {\n    module.exports = impl;\n  } else if (define && define.amd) {\n    define(function () {\n      return impl;\n    });\n  } else {\n    this.xorshift7 = impl;\n  }\n})(this, typeof module == 'object' && module, // present in node.js\ntypeof define == 'function' && define // present with an AMD loader\n);","// A Javascript implementaion of the \"xorwow\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n(function (global, module, define) {\n  function XorGen(seed) {\n    var me = this,\n        strseed = ''; // Set up generator function.\n\n    me.next = function () {\n      var t = me.x ^ me.x >>> 2;\n      me.x = me.y;\n      me.y = me.z;\n      me.z = me.w;\n      me.w = me.v;\n      return (me.d = me.d + 362437 | 0) + (me.v = me.v ^ me.v << 4 ^ (t ^ t << 1)) | 0;\n    };\n\n    me.x = 0;\n    me.y = 0;\n    me.z = 0;\n    me.w = 0;\n    me.v = 0;\n\n    if (seed === (seed | 0)) {\n      // Integer seed.\n      me.x = seed;\n    } else {\n      // String seed.\n      strseed += seed;\n    } // Mix in string seed, then discard an initial batch of 64 values.\n\n\n    for (var k = 0; k < strseed.length + 64; k++) {\n      me.x ^= strseed.charCodeAt(k) | 0;\n\n      if (k == strseed.length) {\n        me.d = me.x << 10 ^ me.x >>> 4;\n      }\n\n      me.next();\n    }\n  }\n\n  function copy(f, t) {\n    t.x = f.x;\n    t.y = f.y;\n    t.z = f.z;\n    t.w = f.w;\n    t.v = f.v;\n    t.d = f.d;\n    return t;\n  }\n\n  function impl(seed, opts) {\n    var xg = new XorGen(seed),\n        state = opts && opts.state,\n        prng = function prng() {\n      return (xg.next() >>> 0) / 0x100000000;\n    };\n\n    prng.double = function () {\n      do {\n        var top = xg.next() >>> 11,\n            bot = (xg.next() >>> 0) / 0x100000000,\n            result = (top + bot) / (1 << 21);\n      } while (result === 0);\n\n      return result;\n    };\n\n    prng.int32 = xg.next;\n    prng.quick = prng;\n\n    if (state) {\n      if (typeof state == 'object') copy(state, xg);\n\n      prng.state = function () {\n        return copy(xg, {});\n      };\n    }\n\n    return prng;\n  }\n\n  if (module && module.exports) {\n    module.exports = impl;\n  } else if (define && define.amd) {\n    define(function () {\n      return impl;\n    });\n  } else {\n    this.xorwow = impl;\n  }\n})(this, typeof module == 'object' && module, // present in node.js\ntypeof define == 'function' && define // present with an AMD loader\n);","/*\nCopyright 2014 David Bau.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n(function (pool, math) {\n  //\n  // The following constants are related to IEEE 754 limits.\n  //\n  var global = this,\n      width = 256,\n      // each RC4 output is 0 <= x < 256\n  chunks = 6,\n      // at least six RC4 outputs for each double\n  digits = 52,\n      // there are 52 significant digits in a double\n  rngname = 'random',\n      // rngname: name for Math.random and Math.seedrandom\n  startdenom = math.pow(width, chunks),\n      significance = math.pow(2, digits),\n      overflow = significance * 2,\n      mask = width - 1,\n      nodecrypto; // node.js crypto module, initialized at the bottom.\n  //\n  // seedrandom()\n  // This is the seedrandom function described above.\n  //\n\n  function seedrandom(seed, options, callback) {\n    var key = [];\n    options = options == true ? {\n      entropy: true\n    } : options || {}; // Flatten the seed string or build one from local entropy if needed.\n\n    var shortseed = mixkey(flatten(options.entropy ? [seed, tostring(pool)] : seed == null ? autoseed() : seed, 3), key); // Use the seed to initialize an ARC4 generator.\n\n    var arc4 = new ARC4(key); // This function returns a random double in [0, 1) that contains\n    // randomness in every bit of the mantissa of the IEEE 754 value.\n\n    var prng = function prng() {\n      var n = arc4.g(chunks),\n          // Start with a numerator n < 2 ^ 48\n      d = startdenom,\n          //   and denominator d = 2 ^ 48.\n      x = 0; //   and no 'extra last byte'.\n\n      while (n < significance) {\n        // Fill up all significant digits by\n        n = (n + x) * width; //   shifting numerator and\n\n        d *= width; //   denominator and generating a\n\n        x = arc4.g(1); //   new least-significant-byte.\n      }\n\n      while (n >= overflow) {\n        // To avoid rounding up, before adding\n        n /= 2; //   last byte, shift everything\n\n        d /= 2; //   right using integer math until\n\n        x >>>= 1; //   we have exactly the desired bits.\n      }\n\n      return (n + x) / d; // Form the number within [0, 1).\n    };\n\n    prng.int32 = function () {\n      return arc4.g(4) | 0;\n    };\n\n    prng.quick = function () {\n      return arc4.g(4) / 0x100000000;\n    };\n\n    prng.double = prng; // Mix the randomness into accumulated entropy.\n\n    mixkey(tostring(arc4.S), pool); // Calling convention: what to return as a function of prng, seed, is_math.\n\n    return (options.pass || callback || function (prng, seed, is_math_call, state) {\n      if (state) {\n        // Load the arc4 state from the given state if it has an S array.\n        if (state.S) {\n          copy(state, arc4);\n        } // Only provide the .state method if requested via options.state.\n\n\n        prng.state = function () {\n          return copy(arc4, {});\n        };\n      } // If called as a method of Math (Math.seedrandom()), mutate\n      // Math.random because that is how seedrandom.js has worked since v1.0.\n\n\n      if (is_math_call) {\n        math[rngname] = prng;\n        return seed;\n      } // Otherwise, it is a newer calling convention, so return the\n      // prng directly.\n      else return prng;\n    })(prng, shortseed, 'global' in options ? options.global : this == math, options.state);\n  }\n\n  math['seed' + rngname] = seedrandom; //\n  // ARC4\n  //\n  // An ARC4 implementation.  The constructor takes a key in the form of\n  // an array of at most (width) integers that should be 0 <= x < (width).\n  //\n  // The g(count) method returns a pseudorandom integer that concatenates\n  // the next (count) outputs from ARC4.  Its return value is a number x\n  // that is in the range 0 <= x < (width ^ count).\n  //\n\n  function ARC4(key) {\n    var t,\n        keylen = key.length,\n        me = this,\n        i = 0,\n        j = me.i = me.j = 0,\n        s = me.S = []; // The empty key [] is treated as [0].\n\n    if (!keylen) {\n      key = [keylen++];\n    } // Set up S using the standard key scheduling algorithm.\n\n\n    while (i < width) {\n      s[i] = i++;\n    }\n\n    for (i = 0; i < width; i++) {\n      s[i] = s[j = mask & j + key[i % keylen] + (t = s[i])];\n      s[j] = t;\n    } // The \"g\" method returns the next (count) outputs as one number.\n\n\n    (me.g = function (count) {\n      // Using instance members instead of closure state nearly doubles speed.\n      var t,\n          r = 0,\n          i = me.i,\n          j = me.j,\n          s = me.S;\n\n      while (count--) {\n        t = s[i = mask & i + 1];\n        r = r * width + s[mask & (s[i] = s[j = mask & j + t]) + (s[j] = t)];\n      }\n\n      me.i = i;\n      me.j = j;\n      return r; // For robust unpredictability, the function call below automatically\n      // discards an initial batch of values.  This is called RC4-drop[256].\n      // See http://google.com/search?q=rsa+fluhrer+response&btnI\n    })(width);\n  } //\n  // copy()\n  // Copies internal state of ARC4 to or from a plain object.\n  //\n\n\n  function copy(f, t) {\n    t.i = f.i;\n    t.j = f.j;\n    t.S = f.S.slice();\n    return t;\n  }\n\n  ; //\n  // flatten()\n  // Converts an object tree to nested arrays of strings.\n  //\n\n  function flatten(obj, depth) {\n    var result = [],\n        typ = typeof obj,\n        prop;\n\n    if (depth && typ == 'object') {\n      for (prop in obj) {\n        try {\n          result.push(flatten(obj[prop], depth - 1));\n        } catch (e) {}\n      }\n    }\n\n    return result.length ? result : typ == 'string' ? obj : obj + '\\0';\n  } //\n  // mixkey()\n  // Mixes a string seed into a key that is an array of integers, and\n  // returns a shortened string seed that is equivalent to the result key.\n  //\n\n\n  function mixkey(seed, key) {\n    var stringseed = seed + '',\n        smear,\n        j = 0;\n\n    while (j < stringseed.length) {\n      key[mask & j] = mask & (smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++);\n    }\n\n    return tostring(key);\n  } //\n  // autoseed()\n  // Returns an object for autoseeding, using window.crypto and Node crypto\n  // module if available.\n  //\n\n\n  function autoseed() {\n    try {\n      var out;\n\n      if (nodecrypto && (out = nodecrypto.randomBytes)) {\n        // The use of 'out' to remember randomBytes makes tight minified code.\n        out = out(width);\n      } else {\n        out = new Uint8Array(width);\n        (global.crypto || global.msCrypto).getRandomValues(out);\n      }\n\n      return tostring(out);\n    } catch (e) {\n      var browser = global.navigator,\n          plugins = browser && browser.plugins;\n      return [+new Date(), global, plugins, global.screen, tostring(pool)];\n    }\n  } //\n  // tostring()\n  // Converts an array of charcodes to a string\n  //\n\n\n  function tostring(a) {\n    return String.fromCharCode.apply(0, a);\n  } //\n  // When seedrandom.js is loaded, we immediately mix a few bits\n  // from the built-in RNG into the entropy pool.  Because we do\n  // not want to interfere with deterministic PRNG state later,\n  // seedrandom will not call math.random on its own again after\n  // initialization.\n  //\n\n\n  mixkey(math.random(), pool); //\n  // Nodejs and AMD support: export the implementation as a module using\n  // either convention.\n  //\n\n  if (typeof module == 'object' && module.exports) {\n    module.exports = seedrandom; // When in node.js, try using crypto package for autoseeding.\n\n    try {\n      nodecrypto = require('crypto');\n    } catch (ex) {}\n  } else if (typeof define == 'function' && define.amd) {\n    define(function () {\n      return seedrandom;\n    });\n  } // End anonymous scope, and pass initial values.\n\n})([], // pool: entropy pool starts empty\nMath // math: package containing random, pow, and seedrandom\n);","var isObject = require('../internals/is-object');\n\nmodule.exports = function (it) {\n  if (!isObject(it)) {\n    throw TypeError(String(it) + ' is not an object');\n  } return it;\n};\n","var toIndexedObject = require('../internals/to-indexed-object');\nvar toLength = require('../internals/to-length');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\n\n// `Array.prototype.{ indexOf, includes }` methods implementation\nvar createMethod = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIndexedObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare -- NaN check\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare -- NaN check\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) {\n      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.includes` method\n  // https://tc39.es/ecma262/#sec-array.prototype.includes\n  includes: createMethod(true),\n  // `Array.prototype.indexOf` method\n  // https://tc39.es/ecma262/#sec-array.prototype.indexof\n  indexOf: createMethod(false)\n};\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","var has = require('../internals/has');\nvar ownKeys = require('../internals/own-keys');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\n\nmodule.exports = function (target, source) {\n  var keys = ownKeys(source);\n  var defineProperty = definePropertyModule.f;\n  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (!has(target, key)) defineProperty(target, key, getOwnPropertyDescriptor(source, key));\n  }\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = DESCRIPTORS ? function (object, key, value) {\n  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var fails = require('../internals/fails');\n\n// Detect IE8's incomplete defineProperty implementation\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;\n});\n","var global = require('../internals/global');\nvar isObject = require('../internals/is-object');\n\nvar document = global.document;\n// typeof document.createElement is 'object' in old IE\nvar EXISTS = isObject(document) && isObject(document.createElement);\n\nmodule.exports = function (it) {\n  return EXISTS ? document.createElement(it) : {};\n};\n","// IE8- don't enum bug keys\nmodule.exports = [\n  'constructor',\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toLocaleString',\n  'toString',\n  'valueOf'\n];\n","var global = require('../internals/global');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar setGlobal = require('../internals/set-global');\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\nvar isForced = require('../internals/is-forced');\n\n/*\n  options.target      - name of the target object\n  options.global      - target is the global object\n  options.stat        - export as static methods of target\n  options.proto       - export as prototype methods of target\n  options.real        - real prototype method for the `pure` version\n  options.forced      - export even if the native feature is available\n  options.bind        - bind methods to the target, required for the `pure` version\n  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version\n  options.unsafe      - use the simple assignment of property instead of delete + defineProperty\n  options.sham        - add a flag to not completely full polyfills\n  options.enumerable  - export as enumerable property\n  options.noTargetGet - prevent calling a getter on target\n*/\nmodule.exports = function (options, source) {\n  var TARGET = options.target;\n  var GLOBAL = options.global;\n  var STATIC = options.stat;\n  var FORCED, target, key, targetProperty, sourceProperty, descriptor;\n  if (GLOBAL) {\n    target = global;\n  } else if (STATIC) {\n    target = global[TARGET] || setGlobal(TARGET, {});\n  } else {\n    target = (global[TARGET] || {}).prototype;\n  }\n  if (target) for (key in source) {\n    sourceProperty = source[key];\n    if (options.noTargetGet) {\n      descriptor = getOwnPropertyDescriptor(target, key);\n      targetProperty = descriptor && descriptor.value;\n    } else targetProperty = target[key];\n    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n    // contained in target\n    if (!FORCED && targetProperty !== undefined) {\n      if (typeof sourceProperty === typeof targetProperty) continue;\n      copyConstructorProperties(sourceProperty, targetProperty);\n    }\n    // add a flag to not completely full polyfills\n    if (options.sham || (targetProperty && targetProperty.sham)) {\n      createNonEnumerableProperty(sourceProperty, 'sham', true);\n    }\n    // extend global\n    redefine(target, key, sourceProperty, options);\n  }\n};\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (error) {\n    return true;\n  }\n};\n","var path = require('../internals/path');\nvar global = require('../internals/global');\n\nvar aFunction = function (variable) {\n  return typeof variable == 'function' ? variable : undefined;\n};\n\nmodule.exports = function (namespace, method) {\n  return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global[namespace])\n    : path[namespace] && path[namespace][method] || global[namespace] && global[namespace][method];\n};\n","var check = function (it) {\n  return it && it.Math == Math && it;\n};\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nmodule.exports =\n  // eslint-disable-next-line es/no-global-this -- safe\n  check(typeof globalThis == 'object' && globalThis) ||\n  check(typeof window == 'object' && window) ||\n  // eslint-disable-next-line no-restricted-globals -- safe\n  check(typeof self == 'object' && self) ||\n  check(typeof global == 'object' && global) ||\n  // eslint-disable-next-line no-new-func -- fallback\n  (function () { return this; })() || Function('return this')();\n","var hasOwnProperty = {}.hasOwnProperty;\n\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","module.exports = {};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar createElement = require('../internals/document-create-element');\n\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !DESCRIPTORS && !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- requied for testing\n  return Object.defineProperty(createElement('div'), 'a', {\n    get: function () { return 7; }\n  }).a != 7;\n});\n","var fails = require('../internals/fails');\nvar classof = require('../internals/classof-raw');\n\nvar split = ''.split;\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nmodule.exports = fails(function () {\n  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return !Object('z').propertyIsEnumerable(0);\n}) ? function (it) {\n  return classof(it) == 'String' ? split.call(it, '') : Object(it);\n} : Object;\n","var store = require('../internals/shared-store');\n\nvar functionToString = Function.toString;\n\n// this helper broken in `3.4.1-3.4.4`, so we can't use `shared` helper\nif (typeof store.inspectSource != 'function') {\n  store.inspectSource = function (it) {\n    return functionToString.call(it);\n  };\n}\n\nmodule.exports = store.inspectSource;\n","var NATIVE_WEAK_MAP = require('../internals/native-weak-map');\nvar global = require('../internals/global');\nvar isObject = require('../internals/is-object');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar objectHas = require('../internals/has');\nvar shared = require('../internals/shared-store');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar WeakMap = global.WeakMap;\nvar set, get, has;\n\nvar enforce = function (it) {\n  return has(it) ? get(it) : set(it, {});\n};\n\nvar getterFor = function (TYPE) {\n  return function (it) {\n    var state;\n    if (!isObject(it) || (state = get(it)).type !== TYPE) {\n      throw TypeError('Incompatible receiver, ' + TYPE + ' required');\n    } return state;\n  };\n};\n\nif (NATIVE_WEAK_MAP) {\n  var store = shared.state || (shared.state = new WeakMap());\n  var wmget = store.get;\n  var wmhas = store.has;\n  var wmset = store.set;\n  set = function (it, metadata) {\n    metadata.facade = it;\n    wmset.call(store, it, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return wmget.call(store, it) || {};\n  };\n  has = function (it) {\n    return wmhas.call(store, it);\n  };\n} else {\n  var STATE = sharedKey('state');\n  hiddenKeys[STATE] = true;\n  set = function (it, metadata) {\n    metadata.facade = it;\n    createNonEnumerableProperty(it, STATE, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return objectHas(it, STATE) ? it[STATE] : {};\n  };\n  has = function (it) {\n    return objectHas(it, STATE);\n  };\n}\n\nmodule.exports = {\n  set: set,\n  get: get,\n  has: has,\n  enforce: enforce,\n  getterFor: getterFor\n};\n","var fails = require('../internals/fails');\n\nvar replacement = /#|\\.prototype\\./;\n\nvar isForced = function (feature, detection) {\n  var value = data[normalize(feature)];\n  return value == POLYFILL ? true\n    : value == NATIVE ? false\n    : typeof detection == 'function' ? fails(detection)\n    : !!detection;\n};\n\nvar normalize = isForced.normalize = function (string) {\n  return String(string).replace(replacement, '.').toLowerCase();\n};\n\nvar data = isForced.data = {};\nvar NATIVE = isForced.NATIVE = 'N';\nvar POLYFILL = isForced.POLYFILL = 'P';\n\nmodule.exports = isForced;\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","module.exports = false;\n","var global = require('../internals/global');\nvar inspectSource = require('../internals/inspect-source');\n\nvar WeakMap = global.WeakMap;\n\nmodule.exports = typeof WeakMap === 'function' && /native code/.test(inspectSource(WeakMap));\n","var DESCRIPTORS = require('../internals/descriptors');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\nvar anObject = require('../internals/an-object');\nvar toPrimitive = require('../internals/to-primitive');\n\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar $defineProperty = Object.defineProperty;\n\n// `Object.defineProperty` method\n// https://tc39.es/ecma262/#sec-object.defineproperty\nexports.f = DESCRIPTORS ? $defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return $defineProperty(O, P, Attributes);\n  } catch (error) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPrimitive = require('../internals/to-primitive');\nvar has = require('../internals/has');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\n\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor\nexports.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\n  O = toIndexedObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return $getOwnPropertyDescriptor(O, P);\n  } catch (error) { /* empty */ }\n  if (has(O, P)) return createPropertyDescriptor(!propertyIsEnumerableModule.f.call(O, P), O[P]);\n};\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\nvar hiddenKeys = enumBugKeys.concat('length', 'prototype');\n\n// `Object.getOwnPropertyNames` method\n// https://tc39.es/ecma262/#sec-object.getownpropertynames\n// eslint-disable-next-line es/no-object-getownpropertynames -- safe\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return internalObjectKeys(O, hiddenKeys);\n};\n","// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe\nexports.f = Object.getOwnPropertySymbols;\n","var has = require('../internals/has');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar indexOf = require('../internals/array-includes').indexOf;\nvar hiddenKeys = require('../internals/hidden-keys');\n\nmodule.exports = function (object, names) {\n  var O = toIndexedObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) !has(hiddenKeys, key) && has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~indexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","'use strict';\nvar $propertyIsEnumerable = {}.propertyIsEnumerable;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Nashorn ~ JDK8 bug\nvar NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({ 1: 2 }, 1);\n\n// `Object.prototype.propertyIsEnumerable` method implementation\n// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable\nexports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n  var descriptor = getOwnPropertyDescriptor(this, V);\n  return !!descriptor && descriptor.enumerable;\n} : $propertyIsEnumerable;\n","var getBuiltIn = require('../internals/get-built-in');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar anObject = require('../internals/an-object');\n\n// all object keys, includes non-enumerable and symbols\nmodule.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {\n  var keys = getOwnPropertyNamesModule.f(anObject(it));\n  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n  return getOwnPropertySymbols ? keys.concat(getOwnPropertySymbols(it)) : keys;\n};\n","var global = require('../internals/global');\n\nmodule.exports = global;\n","var global = require('../internals/global');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar has = require('../internals/has');\nvar setGlobal = require('../internals/set-global');\nvar inspectSource = require('../internals/inspect-source');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar getInternalState = InternalStateModule.get;\nvar enforceInternalState = InternalStateModule.enforce;\nvar TEMPLATE = String(String).split('String');\n\n(module.exports = function (O, key, value, options) {\n  var unsafe = options ? !!options.unsafe : false;\n  var simple = options ? !!options.enumerable : false;\n  var noTargetGet = options ? !!options.noTargetGet : false;\n  var state;\n  if (typeof value == 'function') {\n    if (typeof key == 'string' && !has(value, 'name')) {\n      createNonEnumerableProperty(value, 'name', key);\n    }\n    state = enforceInternalState(value);\n    if (!state.source) {\n      state.source = TEMPLATE.join(typeof key == 'string' ? key : '');\n    }\n  }\n  if (O === global) {\n    if (simple) O[key] = value;\n    else setGlobal(key, value);\n    return;\n  } else if (!unsafe) {\n    delete O[key];\n  } else if (!noTargetGet && O[key]) {\n    simple = true;\n  }\n  if (simple) O[key] = value;\n  else createNonEnumerableProperty(O, key, value);\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, 'toString', function toString() {\n  return typeof this == 'function' && getInternalState(this).source || inspectSource(this);\n});\n","// `RequireObjectCoercible` abstract operation\n// https://tc39.es/ecma262/#sec-requireobjectcoercible\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on \" + it);\n  return it;\n};\n","var global = require('../internals/global');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nmodule.exports = function (key, value) {\n  try {\n    createNonEnumerableProperty(global, key, value);\n  } catch (error) {\n    global[key] = value;\n  } return value;\n};\n","var shared = require('../internals/shared');\nvar uid = require('../internals/uid');\n\nvar keys = shared('keys');\n\nmodule.exports = function (key) {\n  return keys[key] || (keys[key] = uid(key));\n};\n","var global = require('../internals/global');\nvar setGlobal = require('../internals/set-global');\n\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || setGlobal(SHARED, {});\n\nmodule.exports = store;\n","var IS_PURE = require('../internals/is-pure');\nvar store = require('../internals/shared-store');\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: '3.10.1',\n  mode: IS_PURE ? 'pure' : 'global',\n  copyright: '© 2021 Denis Pushkarev (zloirock.ru)'\n});\n","var toInteger = require('../internals/to-integer');\n\nvar max = Math.max;\nvar min = Math.min;\n\n// Helper for a popular repeating case of the spec:\n// Let integer be ? ToInteger(index).\n// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).\nmodule.exports = function (index, length) {\n  var integer = toInteger(index);\n  return integer < 0 ? max(integer + length, 0) : min(integer, length);\n};\n","// toObject with fallback for non-array-like ES3 strings\nvar IndexedObject = require('../internals/indexed-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nmodule.exports = function (it) {\n  return IndexedObject(requireObjectCoercible(it));\n};\n","var ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `ToInteger` abstract operation\n// https://tc39.es/ecma262/#sec-tointeger\nmodule.exports = function (argument) {\n  return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);\n};\n","var toInteger = require('../internals/to-integer');\n\nvar min = Math.min;\n\n// `ToLength` abstract operation\n// https://tc39.es/ecma262/#sec-tolength\nmodule.exports = function (argument) {\n  return argument > 0 ? min(toInteger(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n};\n","var isObject = require('../internals/is-object');\n\n// `ToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-toprimitive\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (input, PREFERRED_STRING) {\n  if (!isObject(input)) return input;\n  var fn, val;\n  if (PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\n  if (typeof (fn = input.valueOf) == 'function' && !isObject(val = fn.call(input))) return val;\n  if (!PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","var id = 0;\nvar postfix = Math.random();\n\nmodule.exports = function (key) {\n  return 'Symbol(' + String(key === undefined ? '' : key) + ')_' + (++id + postfix).toString(36);\n};\n","var $ = require('../internals/export');\n\n// eslint-disable-next-line es/no-math-hypot -- required for testing\nvar $hypot = Math.hypot;\nvar abs = Math.abs;\nvar sqrt = Math.sqrt;\n\n// Chrome 77 bug\n// https://bugs.chromium.org/p/v8/issues/detail?id=9546\nvar BUGGY = !!$hypot && $hypot(Infinity, NaN) !== Infinity;\n\n// `Math.hypot` method\n// https://tc39.es/ecma262/#sec-math.hypot\n$({ target: 'Math', stat: true, forced: BUGGY }, {\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  hypot: function hypot(value1, value2) {\n    var sum = 0;\n    var i = 0;\n    var aLen = arguments.length;\n    var larg = 0;\n    var arg, div;\n    while (i < aLen) {\n      arg = abs(arguments[i++]);\n      if (larg < arg) {\n        div = larg / arg;\n        sum = sum * div * div + 1;\n        larg = arg;\n      } else if (arg > 0) {\n        div = arg / larg;\n        sum += div * div;\n      } else sum += arg;\n    }\n    return larg === Infinity ? Infinity : larg * sqrt(sum);\n  }\n});\n"],"sourceRoot":""}